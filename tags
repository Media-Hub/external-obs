!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.5	//
A	OBSApi/Utility/XMath.h	/^    Vect2 A;$/;"	m	struct:Line2
A	lame/libmp3lame/gain_analysis.h	/^        uint32_t A[STEPS_per_dB * MAX_dB];$/;"	m	struct:replaygain_data
A	libfaac/backpred.h	30;"	d
A	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU8       *A;$/;"	m
AACDataPacket	Source/Encoder_MP3.cpp	/^struct AACDataPacket$/;"	s	file:
AACEncoder	Source/Encoder_AAC.cpp	/^    AACEncoder(UINT bitRate)$/;"	f	class:AACEncoder
AACEncoder	Source/Encoder_AAC.cpp	/^class AACEncoder : public AudioEncoder$/;"	c	file:
AACHeaderData	libmfx/include/msdk/include/mfxastructures.h	/^            mfxU8        AACHeaderData[64];$/;"	m
AACHeaderDataSize	libmfx/include/msdk/include/mfxastructures.h	/^            mfxU16       AACHeaderDataSize;$/;"	m
AACQUANT_H	libfaac/aacquant.h	23;"	d
AACQuantCfg	libfaac/aacquant.h	/^  } AACQuantCfg;$/;"	t
AACQuantize	libfaac/aacquant.c	/^int AACQuantize(CoderInfo *coderInfo,$/;"	f
AACQuantizeEnd	libfaac/aacquant.c	/^void AACQuantizeEnd(CoderInfo *coderInfo, unsigned int numChannels,$/;"	f
AACQuantizeInit	libfaac/aacquant.c	/^void AACQuantizeInit(CoderInfo *coderInfo, unsigned int numChannels,$/;"	f
ABButter	lame/libmp3lame/gain_analysis.c	/^static const Float_t ABButter[9][2 * BUTTER_ORDER + 1] = {$/;"	v	file:
ABR_320	lame/include/lame.h	/^    ABR_320 = 320,$/;"	e	enum:preset_mode_e
ABR_8	lame/include/lame.h	/^    ABR_8 = 8,$/;"	e	enum:preset_mode_e
ABR_iteration_loop	lame/libmp3lame/quantize.c	/^ABR_iteration_loop(lame_internal_flags * gfc, const FLOAT pe[2][2],$/;"	f
ABS	lame/libmp3lame/util.c	298;"	d	file:
ABS	libfaac/huffman.h	48;"	d
ABYule	lame/libmp3lame/gain_analysis.c	/^static const Float_t ABYule[9][2 * YULE_ORDER + 1] = {$/;"	v	file:
ACCESS_CONTROL_LIST	Source/mongoose.c	/^  ACCESS_CONTROL_LIST,$/;"	e	file:
ACCESS_LOG_FILE	Source/mongoose.c	/^  ACCESS_LOG_FILE,$/;"	e	file:
ACLOCAL	lame/ACM/ADbg/Makefile	/^ACLOCAL = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run aclocal-1.11$/;"	m
ACLOCAL	lame/ACM/Makefile	/^ACLOCAL = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run aclocal-1.11$/;"	m
ACLOCAL	lame/ACM/ddk/Makefile	/^ACLOCAL = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run aclocal-1.11$/;"	m
ACLOCAL	lame/ACM/tinyxml/Makefile	/^ACLOCAL = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run aclocal-1.11$/;"	m
ACLOCAL	lame/Dll/Makefile	/^ACLOCAL = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run aclocal-1.11$/;"	m
ACLOCAL	lame/Makefile	/^ACLOCAL = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run aclocal-1.11$/;"	m
ACLOCAL	lame/debian/Makefile	/^ACLOCAL = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run aclocal-1.11$/;"	m
ACLOCAL	lame/doc/Makefile	/^ACLOCAL = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run aclocal-1.11$/;"	m
ACLOCAL	lame/doc/html/Makefile	/^ACLOCAL = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run aclocal-1.11$/;"	m
ACLOCAL	lame/doc/man/Makefile	/^ACLOCAL = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run aclocal-1.11$/;"	m
ACLOCAL	lame/dshow/Makefile	/^ACLOCAL = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run aclocal-1.11$/;"	m
ACLOCAL	lame/frontend/Makefile	/^ACLOCAL = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run aclocal-1.11$/;"	m
ACLOCAL	lame/include/Makefile	/^ACLOCAL = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run aclocal-1.11$/;"	m
ACLOCAL	lame/libmp3lame/Makefile	/^ACLOCAL = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run aclocal-1.11$/;"	m
ACLOCAL	lame/libmp3lame/i386/Makefile	/^ACLOCAL = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run aclocal-1.11$/;"	m
ACLOCAL	lame/libmp3lame/vector/Makefile	/^ACLOCAL = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run aclocal-1.11$/;"	m
ACLOCAL	lame/mac/Makefile	/^ACLOCAL = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run aclocal-1.11$/;"	m
ACLOCAL	lame/macosx/English.lproj/Makefile	/^ACLOCAL = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run aclocal-1.11$/;"	m
ACLOCAL	lame/macosx/LAME.xcodeproj/Makefile	/^ACLOCAL = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run aclocal-1.11$/;"	m
ACLOCAL	lame/macosx/Makefile	/^ACLOCAL = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run aclocal-1.11$/;"	m
ACLOCAL	lame/misc/Makefile	/^ACLOCAL = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run aclocal-1.11$/;"	m
ACLOCAL	lame/mpglib/Makefile	/^ACLOCAL = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run aclocal-1.11$/;"	m
ACLOCAL	lame/vc_solution/Makefile	/^ACLOCAL = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run aclocal-1.11$/;"	m
ACLOCAL_M4	lame/ACM/ADbg/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	lame/ACM/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	lame/ACM/ddk/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	lame/ACM/tinyxml/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	lame/Dll/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	lame/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	lame/debian/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	lame/doc/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	lame/doc/html/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	lame/doc/man/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	lame/dshow/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	lame/frontend/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	lame/include/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	lame/libmp3lame/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	lame/libmp3lame/i386/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	lame/libmp3lame/vector/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	lame/mac/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	lame/macosx/English.lproj/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	lame/macosx/LAME.xcodeproj/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	lame/macosx/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	lame/misc/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	lame/mpglib/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	lame/vc_solution/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACM	lame/ACM/ACM.cpp	/^ACM::ACM( HMODULE hModule )$/;"	f	class:ACM
ACM	lame/ACM/ACM.h	/^class ACM  $/;"	c
ACM.cpp	lame/ACM/ACM.cpp	1;"	F
ACM.h	lame/ACM/ACM.h	1;"	F
ACMDM_DRIVER_DETAILS	lame/ACM/ddk/msacmdrv.h	77;"	d
ACMDM_DRIVER_NOTIFY	lame/ACM/ddk/msacmdrv.h	76;"	d
ACMDM_FILTERTAG_DETAILS	lame/ACM/ddk/msacmdrv.h	86;"	d
ACMDM_FILTER_DETAILS	lame/ACM/ddk/msacmdrv.h	87;"	d
ACMDM_FORMATTAG_DETAILS	lame/ACM/ddk/msacmdrv.h	82;"	d
ACMDM_FORMAT_DETAILS	lame/ACM/ddk/msacmdrv.h	83;"	d
ACMDM_FORMAT_SUGGEST	lame/ACM/ddk/msacmdrv.h	84;"	d
ACMDM_HARDWARE_WAVE_CAPS_INPUT	lame/ACM/ddk/msacmdrv.h	79;"	d
ACMDM_HARDWARE_WAVE_CAPS_OUTPUT	lame/ACM/ddk/msacmdrv.h	80;"	d
ACMDM_STREAM_CLOSE	lame/ACM/ddk/msacmdrv.h	90;"	d
ACMDM_STREAM_CONVERT	lame/ACM/ddk/msacmdrv.h	92;"	d
ACMDM_STREAM_OPEN	lame/ACM/ddk/msacmdrv.h	89;"	d
ACMDM_STREAM_PREPARE	lame/ACM/ddk/msacmdrv.h	94;"	d
ACMDM_STREAM_RESET	lame/ACM/ddk/msacmdrv.h	93;"	d
ACMDM_STREAM_SIZE	lame/ACM/ddk/msacmdrv.h	91;"	d
ACMDM_STREAM_UNPREPARE	lame/ACM/ddk/msacmdrv.h	95;"	d
ACMDRIVERDETAILS	lame/ACM/ddk/msacmdrv.h	43;"	d
ACMDRIVERDETAILS	lame/ACM/ddk/msacmdrv.h	47;"	d
ACMDRVFORMATSUGGEST	lame/ACM/ddk/msacmdrv.h	/^} ACMDRVFORMATSUGGEST, *PACMDRVFORMATSUGGEST, FAR *LPACMDRVFORMATSUGGEST;$/;"	t
ACMDRVOPENDESC	lame/ACM/ddk/msacmdrv.h	/^} ACMDRVOPENDESC, *PACMDRVOPENDESC, FAR *LPACMDRVOPENDESC;$/;"	t
ACMDRVSTREAMHEADER	lame/ACM/ddk/msacmdrv.h	/^} ACMDRVSTREAMHEADER, *PACMDRVSTREAMHEADER;$/;"	t
ACMDRVSTREAMINSTANCE	lame/ACM/ddk/msacmdrv.h	/^} ACMDRVSTREAMINSTANCE, *PACMDRVSTREAMINSTANCE, FAR *LPACMDRVSTREAMINSTANCE;$/;"	t
ACMDRVSTREAMSIZE	lame/ACM/ddk/msacmdrv.h	/^} ACMDRVSTREAMSIZE, *PACMDRVSTREAMSIZE, FAR *LPACMDRVSTREAMSIZE;$/;"	t
ACMFORMATDETAILS	lame/ACM/ddk/msacmdrv.h	59;"	d
ACMFORMATDETAILS	lame/ACM/ddk/msacmdrv.h	63;"	d
ACMFORMATTAGDETAILS	lame/ACM/ddk/msacmdrv.h	51;"	d
ACMFORMATTAGDETAILS	lame/ACM/ddk/msacmdrv.h	55;"	d
ACMStream	lame/ACM/ACMStream.cpp	/^ACMStream::ACMStream() :$/;"	f	class:ACMStream
ACMStream	lame/ACM/ACMStream.h	/^class ACMStream$/;"	c
ACMStream.cpp	lame/ACM/ACMStream.cpp	1;"	F
ACMStream.h	lame/ACM/ACMStream.h	1;"	F
ACM_VERSION	lame/ACM/ACM.cpp	/^const char ACM_VERSION[] = "0.9.2";$/;"	v
ACTables	libmfx/include/msdk/include/mfxjpeg.h	/^    } ACTables[4];$/;"	m
ADD_KNOWN_HEADER	Source/Server.h	32;"	d
ADD_V2_FLAG	lame/libmp3lame/id3tag.h	7;"	d
ADT_PLAYBACK	Source/OBS.h	/^    ADT_PLAYBACK,$/;"	e	enum:AudioDeviceType
ADT_RECORDING	Source/OBS.h	/^    ADT_RECORDING$/;"	e	enum:AudioDeviceType
ADbg	lame/ACM/ADbg/ADbg.cpp	/^ADbg::ADbg(int level)$/;"	f	class:ADbg
ADbg	lame/ACM/ADbg/ADbg.h	/^	ADbg(int level = 0){}$/;"	f	class:ADbg
ADbg	lame/ACM/ADbg/ADbg.h	/^class ADbg  $/;"	c
ADbg.cpp	lame/ACM/ADbg/ADbg.cpp	1;"	F
ADbg.h	lame/ACM/ADbg/ADbg.h	1;"	F
AEncodeProperties	lame/ACM/AEncodeProperties.cpp	/^AEncodeProperties::AEncodeProperties(HMODULE hModule)$/;"	f	class:AEncodeProperties
AEncodeProperties	lame/ACM/AEncodeProperties.h	/^class AEncodeProperties  $/;"	c
AEncodeProperties.cpp	lame/ACM/AEncodeProperties.cpp	1;"	F
AEncodeProperties.h	lame/ACM/AEncodeProperties.h	1;"	F
AFX_VITECENCODER_H__40DC8A44_B937_11D2_A381_A2FD7C37FA15__INCLUDED_	lame/dshow/Encoder.h	24;"	d
AGENT	librtmp/hashswf.c	67;"	d	file:
ALLOCA	lame/ACM/ADbg/Makefile	/^ALLOCA = $/;"	m
ALLOCA	lame/ACM/Makefile	/^ALLOCA = $/;"	m
ALLOCA	lame/ACM/ddk/Makefile	/^ALLOCA = $/;"	m
ALLOCA	lame/ACM/tinyxml/Makefile	/^ALLOCA = $/;"	m
ALLOCA	lame/Dll/Makefile	/^ALLOCA = $/;"	m
ALLOCA	lame/Makefile	/^ALLOCA = $/;"	m
ALLOCA	lame/debian/Makefile	/^ALLOCA = $/;"	m
ALLOCA	lame/doc/Makefile	/^ALLOCA = $/;"	m
ALLOCA	lame/doc/html/Makefile	/^ALLOCA = $/;"	m
ALLOCA	lame/doc/man/Makefile	/^ALLOCA = $/;"	m
ALLOCA	lame/dshow/Makefile	/^ALLOCA = $/;"	m
ALLOCA	lame/frontend/Makefile	/^ALLOCA = $/;"	m
ALLOCA	lame/include/Makefile	/^ALLOCA = $/;"	m
ALLOCA	lame/libmp3lame/Makefile	/^ALLOCA = $/;"	m
ALLOCA	lame/libmp3lame/i386/Makefile	/^ALLOCA = $/;"	m
ALLOCA	lame/libmp3lame/vector/Makefile	/^ALLOCA = $/;"	m
ALLOCA	lame/mac/Makefile	/^ALLOCA = $/;"	m
ALLOCA	lame/macosx/English.lproj/Makefile	/^ALLOCA = $/;"	m
ALLOCA	lame/macosx/LAME.xcodeproj/Makefile	/^ALLOCA = $/;"	m
ALLOCA	lame/macosx/Makefile	/^ALLOCA = $/;"	m
ALLOCA	lame/misc/Makefile	/^ALLOCA = $/;"	m
ALLOCA	lame/mpglib/Makefile	/^ALLOCA = $/;"	m
ALLOCA	lame/vc_solution/Makefile	/^ALLOCA = $/;"	m
ALLOC_MEM	Source/Server.h	41;"	d
ALPHA	libfaac/backpred.h	29;"	d
AMD_3DNOW	lame/include/lame.h	/^    AMD_3DNOW = 2,$/;"	e	enum:asm_optimizations_e
AMD_3DNow	lame/libmp3lame/util.h	/^            unsigned int AMD_3DNow:1; \/* K6-2, K6-III, Athlon      *\/$/;"	m	struct:lame_internal_flags::<anonymous>
AMF3CD_AddProp	librtmp/amf.c	/^AMF3CD_AddProp(AMF3ClassDef *cd, AVal *prop)$/;"	f
AMF3CD_GetProp	librtmp/amf.c	/^AMF3CD_GetProp(AMF3ClassDef *cd, int nIndex)$/;"	f
AMF3ClassDef	librtmp/amf.h	/^    typedef struct AMF3ClassDef$/;"	s
AMF3ClassDef	librtmp/amf.h	/^    } AMF3ClassDef;$/;"	t
AMF3DataType	librtmp/amf.h	/^    } AMF3DataType;$/;"	t
AMF3Prop_Decode	librtmp/amf.c	/^AMF3Prop_Decode(AMFObjectProperty *prop, const char *pBuffer, int nSize,$/;"	f
AMF3ReadInteger	librtmp/amf.c	/^AMF3ReadInteger(const char *data, int32_t *valp)$/;"	f
AMF3ReadString	librtmp/amf.c	/^AMF3ReadString(const char *data, AVal *str)$/;"	f
AMF3_ARRAY	librtmp/amf.h	/^        AMF3_ARRAY, AMF3_OBJECT, AMF3_XML, AMF3_BYTE_ARRAY$/;"	e
AMF3_BYTE_ARRAY	librtmp/amf.h	/^        AMF3_ARRAY, AMF3_OBJECT, AMF3_XML, AMF3_BYTE_ARRAY$/;"	e
AMF3_DATE	librtmp/amf.h	/^        AMF3_INTEGER, AMF3_DOUBLE, AMF3_STRING, AMF3_XML_DOC, AMF3_DATE,$/;"	e
AMF3_DOUBLE	librtmp/amf.h	/^        AMF3_INTEGER, AMF3_DOUBLE, AMF3_STRING, AMF3_XML_DOC, AMF3_DATE,$/;"	e
AMF3_Decode	librtmp/amf.c	/^AMF3_Decode(AMFObject *obj, const char *pBuffer, int nSize, int bAMFData)$/;"	f
AMF3_FALSE	librtmp/amf.h	/^        AMF3_UNDEFINED = 0, AMF3_NULL, AMF3_FALSE, AMF3_TRUE,$/;"	e
AMF3_INTEGER	librtmp/amf.h	/^        AMF3_INTEGER, AMF3_DOUBLE, AMF3_STRING, AMF3_XML_DOC, AMF3_DATE,$/;"	e
AMF3_INTEGER_MAX	librtmp/amf.c	411;"	d	file:
AMF3_INTEGER_MIN	librtmp/amf.c	412;"	d	file:
AMF3_NULL	librtmp/amf.h	/^        AMF3_UNDEFINED = 0, AMF3_NULL, AMF3_FALSE, AMF3_TRUE,$/;"	e
AMF3_OBJECT	librtmp/amf.h	/^        AMF3_ARRAY, AMF3_OBJECT, AMF3_XML, AMF3_BYTE_ARRAY$/;"	e
AMF3_STRING	librtmp/amf.h	/^        AMF3_INTEGER, AMF3_DOUBLE, AMF3_STRING, AMF3_XML_DOC, AMF3_DATE,$/;"	e
AMF3_TRUE	librtmp/amf.h	/^        AMF3_UNDEFINED = 0, AMF3_NULL, AMF3_FALSE, AMF3_TRUE,$/;"	e
AMF3_UNDEFINED	librtmp/amf.h	/^        AMF3_UNDEFINED = 0, AMF3_NULL, AMF3_FALSE, AMF3_TRUE,$/;"	e
AMF3_XML	librtmp/amf.h	/^        AMF3_ARRAY, AMF3_OBJECT, AMF3_XML, AMF3_BYTE_ARRAY$/;"	e
AMF3_XML_DOC	librtmp/amf.h	/^        AMF3_INTEGER, AMF3_DOUBLE, AMF3_STRING, AMF3_XML_DOC, AMF3_DATE,$/;"	e
AMFDataType	librtmp/amf.h	/^                  AMFDataType;$/;"	t
AMFObject	librtmp/amf.h	/^    typedef struct AMFObject$/;"	s
AMFObject	librtmp/amf.h	/^    } AMFObject;$/;"	t
AMFObjectProperty	librtmp/amf.h	/^    typedef struct AMFObjectProperty$/;"	s
AMFObjectProperty	librtmp/amf.h	/^    } AMFObjectProperty;$/;"	t
AMFProp_Decode	librtmp/amf.c	/^AMFProp_Decode(AMFObjectProperty *prop, const char *pBuffer, int nSize,$/;"	f
AMFProp_Dump	librtmp/amf.c	/^AMFProp_Dump(AMFObjectProperty *prop)$/;"	f
AMFProp_Encode	librtmp/amf.c	/^AMFProp_Encode(AMFObjectProperty *prop, char *pBuffer, char *pBufEnd)$/;"	f
AMFProp_GetBoolean	librtmp/amf.c	/^AMFProp_GetBoolean(AMFObjectProperty *prop)$/;"	f
AMFProp_GetName	librtmp/amf.c	/^AMFProp_GetName(AMFObjectProperty *prop, AVal *name)$/;"	f
AMFProp_GetNumber	librtmp/amf.c	/^AMFProp_GetNumber(AMFObjectProperty *prop)$/;"	f
AMFProp_GetObject	librtmp/amf.c	/^AMFProp_GetObject(AMFObjectProperty *prop, AMFObject *obj)$/;"	f
AMFProp_GetString	librtmp/amf.c	/^AMFProp_GetString(AMFObjectProperty *prop, AVal *str)$/;"	f
AMFProp_GetType	librtmp/amf.c	/^AMFProp_GetType(AMFObjectProperty *prop)$/;"	f
AMFProp_Invalid	librtmp/amf.c	/^static const AMFObjectProperty AMFProp_Invalid = { {0, 0}, AMF_INVALID };$/;"	v	file:
AMFProp_IsValid	librtmp/amf.c	/^AMFProp_IsValid(AMFObjectProperty *prop)$/;"	f
AMFProp_Reset	librtmp/amf.c	/^AMFProp_Reset(AMFObjectProperty *prop)$/;"	f
AMFProp_SetName	librtmp/amf.c	/^AMFProp_SetName(AMFObjectProperty *prop, AVal *name)$/;"	f
AMF_AVMPLUS	librtmp/amf.h	/^        AMF_AVMPLUS,		\/* switch to AMF3 *\/$/;"	e
AMF_AddProp	librtmp/amf.c	/^AMF_AddProp(AMFObject *obj, const AMFObjectProperty *prop)$/;"	f
AMF_BOOLEAN	librtmp/amf.h	/^        AMF_NUMBER = 0, AMF_BOOLEAN, AMF_STRING, AMF_OBJECT,$/;"	e
AMF_CountProp	librtmp/amf.c	/^AMF_CountProp(AMFObject *obj)$/;"	f
AMF_DATE	librtmp/amf.h	/^        AMF_STRICT_ARRAY, AMF_DATE, AMF_LONG_STRING, AMF_UNSUPPORTED,$/;"	e
AMF_Decode	librtmp/amf.c	/^AMF_Decode(AMFObject *obj, const char *pBuffer, int nSize, int bDecodeName)$/;"	f
AMF_DecodeArray	librtmp/amf.c	/^AMF_DecodeArray(AMFObject *obj, const char *pBuffer, int nSize,$/;"	f
AMF_DecodeBoolean	librtmp/amf.c	/^AMF_DecodeBoolean(const char *data)$/;"	f
AMF_DecodeInt16	librtmp/amf.c	/^AMF_DecodeInt16(const char *data)$/;"	f
AMF_DecodeInt24	librtmp/amf.c	/^AMF_DecodeInt24(const char *data)$/;"	f
AMF_DecodeInt32	librtmp/amf.c	/^AMF_DecodeInt32(const char *data)$/;"	f
AMF_DecodeLongString	librtmp/amf.c	/^AMF_DecodeLongString(const char *data, AVal *bv)$/;"	f
AMF_DecodeNumber	librtmp/amf.c	/^AMF_DecodeNumber(const char *data)$/;"	f
AMF_DecodeString	librtmp/amf.c	/^AMF_DecodeString(const char *data, AVal *bv)$/;"	f
AMF_Dump	librtmp/amf.c	/^AMF_Dump(AMFObject *obj)$/;"	f
AMF_ECMA_ARRAY	librtmp/amf.h	/^        AMF_NULL, AMF_UNDEFINED, AMF_REFERENCE, AMF_ECMA_ARRAY, AMF_OBJECT_END,$/;"	e
AMF_Encode	librtmp/amf.c	/^AMF_Encode(AMFObject *obj, char *pBuffer, char *pBufEnd)$/;"	f
AMF_EncodeArray	librtmp/amf.c	/^AMF_EncodeArray(AMFObject *obj, char *pBuffer, char *pBufEnd)$/;"	f
AMF_EncodeBoolean	librtmp/amf.c	/^AMF_EncodeBoolean(char *output, char *outend, int bVal)$/;"	f
AMF_EncodeEcmaArray	librtmp/amf.c	/^AMF_EncodeEcmaArray(AMFObject *obj, char *pBuffer, char *pBufEnd)$/;"	f
AMF_EncodeInt16	librtmp/amf.c	/^AMF_EncodeInt16(char *output, char *outend, short nVal)$/;"	f
AMF_EncodeInt24	librtmp/amf.c	/^AMF_EncodeInt24(char *output, char *outend, int nVal)$/;"	f
AMF_EncodeInt32	librtmp/amf.c	/^AMF_EncodeInt32(char *output, char *outend, int nVal)$/;"	f
AMF_EncodeNamedBoolean	librtmp/amf.c	/^AMF_EncodeNamedBoolean(char *output, char *outend, const AVal *strName, int bVal)$/;"	f
AMF_EncodeNamedNumber	librtmp/amf.c	/^AMF_EncodeNamedNumber(char *output, char *outend, const AVal *strName, double dVal)$/;"	f
AMF_EncodeNamedString	librtmp/amf.c	/^AMF_EncodeNamedString(char *output, char *outend, const AVal *strName, const AVal *strValue)$/;"	f
AMF_EncodeNumber	librtmp/amf.c	/^AMF_EncodeNumber(char *output, char *outend, double dVal)$/;"	f
AMF_EncodeString	librtmp/amf.c	/^AMF_EncodeString(char *output, char *outend, const AVal *bv)$/;"	f
AMF_GetProp	librtmp/amf.c	/^AMF_GetProp(AMFObject *obj, const AVal *name, int nIndex)$/;"	f
AMF_INVALID	librtmp/amf.h	/^        AMF_INVALID = 0xff$/;"	e
AMF_LONG_STRING	librtmp/amf.h	/^        AMF_STRICT_ARRAY, AMF_DATE, AMF_LONG_STRING, AMF_UNSUPPORTED,$/;"	e
AMF_MOVIECLIP	librtmp/amf.h	/^        AMF_MOVIECLIP,		\/* reserved, not used *\/$/;"	e
AMF_NULL	librtmp/amf.h	/^        AMF_NULL, AMF_UNDEFINED, AMF_REFERENCE, AMF_ECMA_ARRAY, AMF_OBJECT_END,$/;"	e
AMF_NUMBER	librtmp/amf.h	/^        AMF_NUMBER = 0, AMF_BOOLEAN, AMF_STRING, AMF_OBJECT,$/;"	e
AMF_OBJECT	librtmp/amf.h	/^        AMF_NUMBER = 0, AMF_BOOLEAN, AMF_STRING, AMF_OBJECT,$/;"	e
AMF_OBJECT_END	librtmp/amf.h	/^        AMF_NULL, AMF_UNDEFINED, AMF_REFERENCE, AMF_ECMA_ARRAY, AMF_OBJECT_END,$/;"	e
AMF_RECORDSET	librtmp/amf.h	/^        AMF_RECORDSET,		\/* reserved, not used *\/$/;"	e
AMF_REFERENCE	librtmp/amf.h	/^        AMF_NULL, AMF_UNDEFINED, AMF_REFERENCE, AMF_ECMA_ARRAY, AMF_OBJECT_END,$/;"	e
AMF_Reset	librtmp/amf.c	/^AMF_Reset(AMFObject *obj)$/;"	f
AMF_STRICT_ARRAY	librtmp/amf.h	/^        AMF_STRICT_ARRAY, AMF_DATE, AMF_LONG_STRING, AMF_UNSUPPORTED,$/;"	e
AMF_STRING	librtmp/amf.h	/^        AMF_NUMBER = 0, AMF_BOOLEAN, AMF_STRING, AMF_OBJECT,$/;"	e
AMF_TYPED_OBJECT	librtmp/amf.h	/^        AMF_XML_DOC, AMF_TYPED_OBJECT,$/;"	e
AMF_UNDEFINED	librtmp/amf.h	/^        AMF_NULL, AMF_UNDEFINED, AMF_REFERENCE, AMF_ECMA_ARRAY, AMF_OBJECT_END,$/;"	e
AMF_UNSUPPORTED	librtmp/amf.h	/^        AMF_STRICT_ARRAY, AMF_DATE, AMF_LONG_STRING, AMF_UNSUPPORTED,$/;"	e
AMF_XML_DOC	librtmp/amf.h	/^        AMF_XML_DOC, AMF_TYPED_OBJECT,$/;"	e
AMTAR	lame/ACM/ADbg/Makefile	/^AMTAR = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run tar$/;"	m
AMTAR	lame/ACM/Makefile	/^AMTAR = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run tar$/;"	m
AMTAR	lame/ACM/ddk/Makefile	/^AMTAR = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run tar$/;"	m
AMTAR	lame/ACM/tinyxml/Makefile	/^AMTAR = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run tar$/;"	m
AMTAR	lame/Dll/Makefile	/^AMTAR = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run tar$/;"	m
AMTAR	lame/Makefile	/^AMTAR = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run tar$/;"	m
AMTAR	lame/debian/Makefile	/^AMTAR = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run tar$/;"	m
AMTAR	lame/doc/Makefile	/^AMTAR = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run tar$/;"	m
AMTAR	lame/doc/html/Makefile	/^AMTAR = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run tar$/;"	m
AMTAR	lame/doc/man/Makefile	/^AMTAR = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run tar$/;"	m
AMTAR	lame/dshow/Makefile	/^AMTAR = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run tar$/;"	m
AMTAR	lame/frontend/Makefile	/^AMTAR = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run tar$/;"	m
AMTAR	lame/include/Makefile	/^AMTAR = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run tar$/;"	m
AMTAR	lame/libmp3lame/Makefile	/^AMTAR = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run tar$/;"	m
AMTAR	lame/libmp3lame/i386/Makefile	/^AMTAR = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run tar$/;"	m
AMTAR	lame/libmp3lame/vector/Makefile	/^AMTAR = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run tar$/;"	m
AMTAR	lame/mac/Makefile	/^AMTAR = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run tar$/;"	m
AMTAR	lame/macosx/English.lproj/Makefile	/^AMTAR = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run tar$/;"	m
AMTAR	lame/macosx/LAME.xcodeproj/Makefile	/^AMTAR = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run tar$/;"	m
AMTAR	lame/macosx/Makefile	/^AMTAR = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run tar$/;"	m
AMTAR	lame/misc/Makefile	/^AMTAR = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run tar$/;"	m
AMTAR	lame/mpglib/Makefile	/^AMTAR = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run tar$/;"	m
AMTAR	lame/vc_solution/Makefile	/^AMTAR = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run tar$/;"	m
AM_RECURSIVE_TARGETS	lame/ACM/Makefile	/^AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \\$/;"	m
AM_RECURSIVE_TARGETS	lame/Makefile	/^AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \\$/;"	m
AM_RECURSIVE_TARGETS	lame/doc/Makefile	/^AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \\$/;"	m
AM_RECURSIVE_TARGETS	lame/libmp3lame/Makefile	/^AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \\$/;"	m
AM_RECURSIVE_TARGETS	lame/macosx/Makefile	/^AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \\$/;"	m
ANSI2KNR	lame/frontend/Makefile	/^ANSI2KNR = $(top_srcdir)\/ansi2knr$/;"	m
ANSI2KNR	lame/libmp3lame/Makefile	/^ANSI2KNR = $(top_srcdir)\/ansi2knr$/;"	m
ANSI2KNR	lame/libmp3lame/i386/Makefile	/^ANSI2KNR = $(top_srcdir)\/ansi2knr$/;"	m
ANSI2KNR	lame/libmp3lame/vector/Makefile	/^ANSI2KNR = $(top_srcdir)\/ansi2knr$/;"	m
ANSI2KNR	lame/misc/Makefile	/^ANSI2KNR = $(top_srcdir)\/ansi2knr$/;"	m
ANSI2KNR	lame/mpglib/Makefile	/^ANSI2KNR = $(top_srcdir)\/ansi2knr$/;"	m
AOUT	lame/libmp3lame/i386/nasm.h	/^; for FreeBSD 2.x               ->        AOUT$/;"	v
API	CLRHostPlugin/CLRHostInterop/API.h	/^        API(long long api)$/;"	f	class:CLROBS::API
API	CLRHostPlugin/CLRHostInterop/API.h	/^    public ref class API$/;"	c	namespace:CLROBS
API	OBSApi/OBSApi.cpp	/^APIInterface *API = NULL;$/;"	v
API.cpp	CLRHostPlugin/CLRHostInterop/API.cpp	1;"	F
API.cpp	Source/API.cpp	1;"	F
API.h	CLRHostPlugin/CLRHostInterop/API.h	1;"	F
APIAudioFunc	libmfx/src/mfx_function_table.cpp	/^FUNCTION_DESCRIPTION APIAudioFunc[eAudioFuncTotal] =$/;"	v
APIDefs.cpp	OBSApi/APIDefs.cpp	1;"	F
APIFunc	libmfx/src/mfx_function_table.cpp	/^FUNCTION_DESCRIPTION APIFunc[eVideoFuncTotal] =$/;"	v
APIInterface	OBSApi/APIInterface.h	/^class APIInterface$/;"	c
APIInterface.h	OBSApi/APIInterface.h	1;"	F
APIVerKeyName	libmfx/src/mfx_plugin_hive.cpp	/^    const wchar_t APIVerKeyName[] = L"APIVersion";$/;"	v
APIVersion	libmfx/include/msdk/include/mfxplugin.h	/^    mfxVersion   APIVersion;$/;"	m	struct:mfxPluginParam
API_VERSION	libmfx/include/mfx_exposed_functions_list.h	101;"	d
API_VERSION	libmfx/include/mfx_exposed_functions_list.h	107;"	d
API_VERSION	libmfx/include/mfx_exposed_functions_list.h	49;"	d
API_VERSION	libmfx/include/mfx_exposed_functions_list.h	95;"	d
API_VERSION	libmfx/include/mfxaudio_exposed_functions_list.h	44;"	d
API_VERSION	libmfx/include/mfxaudio_exposed_functions_list.h	68;"	d
APP_EXIT_EVENT	GraphicsCapture/GlobalCaptureStuff.h	31;"	d
AR	lame/ACM/ADbg/Makefile	/^AR = ar$/;"	m
AR	lame/ACM/Makefile	/^AR = ar$/;"	m
AR	lame/ACM/ddk/Makefile	/^AR = ar$/;"	m
AR	lame/ACM/tinyxml/Makefile	/^AR = ar$/;"	m
AR	lame/Dll/Makefile	/^AR = ar$/;"	m
AR	lame/Makefile	/^AR = ar$/;"	m
AR	lame/debian/Makefile	/^AR = ar$/;"	m
AR	lame/doc/Makefile	/^AR = ar$/;"	m
AR	lame/doc/html/Makefile	/^AR = ar$/;"	m
AR	lame/doc/man/Makefile	/^AR = ar$/;"	m
AR	lame/dshow/Makefile	/^AR = ar$/;"	m
AR	lame/frontend/Makefile	/^AR = ar$/;"	m
AR	lame/include/Makefile	/^AR = ar$/;"	m
AR	lame/libmp3lame/Makefile	/^AR = ar$/;"	m
AR	lame/libmp3lame/i386/Makefile	/^AR = ar$/;"	m
AR	lame/libmp3lame/vector/Makefile	/^AR = ar$/;"	m
AR	lame/mac/Makefile	/^AR = ar$/;"	m
AR	lame/macosx/English.lproj/Makefile	/^AR = ar$/;"	m
AR	lame/macosx/LAME.xcodeproj/Makefile	/^AR = ar$/;"	m
AR	lame/macosx/Makefile	/^AR = ar$/;"	m
AR	lame/misc/Makefile	/^AR = ar$/;"	m
AR	lame/mpglib/Makefile	/^AR = ar$/;"	m
AR	lame/vc_solution/Makefile	/^AR = ar$/;"	m
ARRAY_LEN	libsamplerate/common.h	44;"	d
ARRAY_SIZE	Source/mongoose.c	171;"	d	file:
ATH	lame/libmp3lame/util.h	/^        ATH_t  *ATH;         \/* all ATH related stuff *\/$/;"	m	struct:lame_internal_flags
ATH	lame/misc/ath.c	/^double ATH ( double freq )$/;"	f
ATH_lower_db	lame/libmp3lame/lame_global_flags.h	/^    float   ATH_lower_db;    \/* lower ATH by this many db            *\/$/;"	m	struct:lame_global_struct
ATH_offset_db	lame/libmp3lame/util.h	/^        float   ATH_offset_db;\/* add to ATH this many db            *\/$/;"	m
ATH_offset_factor	lame/libmp3lame/util.h	/^        float   ATH_offset_factor;\/* change ATH by this factor, derived from ATH_offset_db *\/$/;"	m
ATH_t	lame/libmp3lame/util.h	/^    } ATH_t;$/;"	t
ATHcurve	lame/libmp3lame/lame_global_flags.h	/^    float   ATHcurve;        \/* change ATH formula 4 shape           *\/$/;"	m	struct:lame_global_struct
ATHcurve	lame/libmp3lame/util.h	/^        float   ATHcurve;    \/* change ATH formula 4 shape           *\/$/;"	m
ATHfixpoint	lame/libmp3lame/util.h	/^        float   ATHfixpoint;$/;"	m
ATHformula	lame/libmp3lame/util.c	/^ATHformula(SessionConfig_t const *cfg, FLOAT f)$/;"	f
ATHformula_GB	lame/libmp3lame/util.c	/^ATHformula_GB(FLOAT f, FLOAT value, FLOAT f_min, FLOAT f_max)$/;"	f	file:
ATHmdct	lame/libmp3lame/quantize_pvt.c	/^ATHmdct(SessionConfig_t const *cfg, FLOAT f)$/;"	f	file:
ATHonly	lame/libmp3lame/lame_global_flags.h	/^    int     ATHonly;         \/* only use ATH                         *\/$/;"	m	struct:lame_global_struct
ATHonly	lame/libmp3lame/util.h	/^        int     ATHonly;     \/* only use ATH                         *\/$/;"	m
ATHshort	lame/libmp3lame/lame_global_flags.h	/^    int     ATHshort;        \/* only use ATH for short blocks        *\/$/;"	m	struct:lame_global_struct
ATHshort	lame/libmp3lame/util.h	/^        int     ATHshort;    \/* only use ATH for short blocks        *\/$/;"	m
ATHtype	lame/libmp3lame/lame_global_flags.h	/^    int     ATHtype;         \/* select ATH formula                   *\/$/;"	m	struct:lame_global_struct
ATHtype	lame/libmp3lame/util.h	/^        int     ATHtype;$/;"	m
ATTRIBUTE_PACKED	lame/Dll/BladeMP3EncDLL.h	/^} BE_CONFIG, *PBE_CONFIG ATTRIBUTE_PACKED;$/;"	t
ATTRIBUTE_PACKED	lame/Dll/BladeMP3EncDLL.h	/^} BE_VERSION, *PBE_VERSION ATTRIBUTE_PACKED;$/;"	t
ATTRIBUTE_PACKED	lame/Dll/BladeMP3EncDLL.h	27;"	d
ATTRIBUTE_PACKED	lame/Dll/BladeMP3EncDLL.h	29;"	d
AUDIO_DEVICE	lame/misc/ath.c	57;"	d	file:
AUDIO_PIN_NAME	DShowPlugin/CaptureFilter.cpp	25;"	d	file:
AUDelimiter	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16      AUDelimiter;            \/* tri-state option *\/$/;"	m
AUSHIFT	lame/mpglib/mpg123.h	92;"	d
AUTH_DOMAIN	Source/mongoose.c	/^  AUTH_DOMAIN,$/;"	e	file:
AUTOCONF	lame/ACM/ADbg/Makefile	/^AUTOCONF = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run autoconf$/;"	m
AUTOCONF	lame/ACM/Makefile	/^AUTOCONF = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run autoconf$/;"	m
AUTOCONF	lame/ACM/ddk/Makefile	/^AUTOCONF = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run autoconf$/;"	m
AUTOCONF	lame/ACM/tinyxml/Makefile	/^AUTOCONF = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run autoconf$/;"	m
AUTOCONF	lame/Dll/Makefile	/^AUTOCONF = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run autoconf$/;"	m
AUTOCONF	lame/Makefile	/^AUTOCONF = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run autoconf$/;"	m
AUTOCONF	lame/debian/Makefile	/^AUTOCONF = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run autoconf$/;"	m
AUTOCONF	lame/doc/Makefile	/^AUTOCONF = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run autoconf$/;"	m
AUTOCONF	lame/doc/html/Makefile	/^AUTOCONF = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run autoconf$/;"	m
AUTOCONF	lame/doc/man/Makefile	/^AUTOCONF = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run autoconf$/;"	m
AUTOCONF	lame/dshow/Makefile	/^AUTOCONF = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run autoconf$/;"	m
AUTOCONF	lame/frontend/Makefile	/^AUTOCONF = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run autoconf$/;"	m
AUTOCONF	lame/include/Makefile	/^AUTOCONF = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run autoconf$/;"	m
AUTOCONF	lame/libmp3lame/Makefile	/^AUTOCONF = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run autoconf$/;"	m
AUTOCONF	lame/libmp3lame/i386/Makefile	/^AUTOCONF = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run autoconf$/;"	m
AUTOCONF	lame/libmp3lame/vector/Makefile	/^AUTOCONF = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run autoconf$/;"	m
AUTOCONF	lame/mac/Makefile	/^AUTOCONF = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run autoconf$/;"	m
AUTOCONF	lame/macosx/English.lproj/Makefile	/^AUTOCONF = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run autoconf$/;"	m
AUTOCONF	lame/macosx/LAME.xcodeproj/Makefile	/^AUTOCONF = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run autoconf$/;"	m
AUTOCONF	lame/macosx/Makefile	/^AUTOCONF = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run autoconf$/;"	m
AUTOCONF	lame/misc/Makefile	/^AUTOCONF = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run autoconf$/;"	m
AUTOCONF	lame/mpglib/Makefile	/^AUTOCONF = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run autoconf$/;"	m
AUTOCONF	lame/vc_solution/Makefile	/^AUTOCONF = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run autoconf$/;"	m
AUTOHEADER	lame/ACM/ADbg/Makefile	/^AUTOHEADER = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run autoheader$/;"	m
AUTOHEADER	lame/ACM/Makefile	/^AUTOHEADER = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run autoheader$/;"	m
AUTOHEADER	lame/ACM/ddk/Makefile	/^AUTOHEADER = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run autoheader$/;"	m
AUTOHEADER	lame/ACM/tinyxml/Makefile	/^AUTOHEADER = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run autoheader$/;"	m
AUTOHEADER	lame/Dll/Makefile	/^AUTOHEADER = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run autoheader$/;"	m
AUTOHEADER	lame/Makefile	/^AUTOHEADER = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run autoheader$/;"	m
AUTOHEADER	lame/debian/Makefile	/^AUTOHEADER = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run autoheader$/;"	m
AUTOHEADER	lame/doc/Makefile	/^AUTOHEADER = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run autoheader$/;"	m
AUTOHEADER	lame/doc/html/Makefile	/^AUTOHEADER = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run autoheader$/;"	m
AUTOHEADER	lame/doc/man/Makefile	/^AUTOHEADER = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run autoheader$/;"	m
AUTOHEADER	lame/dshow/Makefile	/^AUTOHEADER = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run autoheader$/;"	m
AUTOHEADER	lame/frontend/Makefile	/^AUTOHEADER = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run autoheader$/;"	m
AUTOHEADER	lame/include/Makefile	/^AUTOHEADER = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run autoheader$/;"	m
AUTOHEADER	lame/libmp3lame/Makefile	/^AUTOHEADER = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run autoheader$/;"	m
AUTOHEADER	lame/libmp3lame/i386/Makefile	/^AUTOHEADER = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run autoheader$/;"	m
AUTOHEADER	lame/libmp3lame/vector/Makefile	/^AUTOHEADER = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run autoheader$/;"	m
AUTOHEADER	lame/mac/Makefile	/^AUTOHEADER = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run autoheader$/;"	m
AUTOHEADER	lame/macosx/English.lproj/Makefile	/^AUTOHEADER = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run autoheader$/;"	m
AUTOHEADER	lame/macosx/LAME.xcodeproj/Makefile	/^AUTOHEADER = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run autoheader$/;"	m
AUTOHEADER	lame/macosx/Makefile	/^AUTOHEADER = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run autoheader$/;"	m
AUTOHEADER	lame/misc/Makefile	/^AUTOHEADER = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run autoheader$/;"	m
AUTOHEADER	lame/mpglib/Makefile	/^AUTOHEADER = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run autoheader$/;"	m
AUTOHEADER	lame/vc_solution/Makefile	/^AUTOHEADER = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run autoheader$/;"	m
AUTOMAKE	lame/ACM/ADbg/Makefile	/^AUTOMAKE = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run automake-1.11$/;"	m
AUTOMAKE	lame/ACM/Makefile	/^AUTOMAKE = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run automake-1.11$/;"	m
AUTOMAKE	lame/ACM/ddk/Makefile	/^AUTOMAKE = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run automake-1.11$/;"	m
AUTOMAKE	lame/ACM/tinyxml/Makefile	/^AUTOMAKE = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run automake-1.11$/;"	m
AUTOMAKE	lame/Dll/Makefile	/^AUTOMAKE = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run automake-1.11$/;"	m
AUTOMAKE	lame/Makefile	/^AUTOMAKE = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run automake-1.11$/;"	m
AUTOMAKE	lame/debian/Makefile	/^AUTOMAKE = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run automake-1.11$/;"	m
AUTOMAKE	lame/doc/Makefile	/^AUTOMAKE = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run automake-1.11$/;"	m
AUTOMAKE	lame/doc/html/Makefile	/^AUTOMAKE = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run automake-1.11$/;"	m
AUTOMAKE	lame/doc/man/Makefile	/^AUTOMAKE = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run automake-1.11$/;"	m
AUTOMAKE	lame/dshow/Makefile	/^AUTOMAKE = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run automake-1.11$/;"	m
AUTOMAKE	lame/frontend/Makefile	/^AUTOMAKE = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run automake-1.11$/;"	m
AUTOMAKE	lame/include/Makefile	/^AUTOMAKE = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run automake-1.11$/;"	m
AUTOMAKE	lame/libmp3lame/Makefile	/^AUTOMAKE = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run automake-1.11$/;"	m
AUTOMAKE	lame/libmp3lame/i386/Makefile	/^AUTOMAKE = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run automake-1.11$/;"	m
AUTOMAKE	lame/libmp3lame/vector/Makefile	/^AUTOMAKE = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run automake-1.11$/;"	m
AUTOMAKE	lame/mac/Makefile	/^AUTOMAKE = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run automake-1.11$/;"	m
AUTOMAKE	lame/macosx/English.lproj/Makefile	/^AUTOMAKE = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run automake-1.11$/;"	m
AUTOMAKE	lame/macosx/LAME.xcodeproj/Makefile	/^AUTOMAKE = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run automake-1.11$/;"	m
AUTOMAKE	lame/macosx/Makefile	/^AUTOMAKE = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run automake-1.11$/;"	m
AUTOMAKE	lame/misc/Makefile	/^AUTOMAKE = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run automake-1.11$/;"	m
AUTOMAKE	lame/mpglib/Makefile	/^AUTOMAKE = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run automake-1.11$/;"	m
AUTOMAKE	lame/vc_solution/Makefile	/^AUTOMAKE = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run automake-1.11$/;"	m
AUTOMAKE_OPTIONS	lame/ACM/ADbg/Makefile	/^AUTOMAKE_OPTIONS = 1.11 foreign $(top_srcdir)\/ansi2knr$/;"	m
AUTOMAKE_OPTIONS	lame/ACM/Makefile	/^AUTOMAKE_OPTIONS = 1.11 foreign $(top_srcdir)\/ansi2knr$/;"	m
AUTOMAKE_OPTIONS	lame/ACM/ddk/Makefile	/^AUTOMAKE_OPTIONS = 1.11 foreign $(top_srcdir)\/ansi2knr$/;"	m
AUTOMAKE_OPTIONS	lame/ACM/tinyxml/Makefile	/^AUTOMAKE_OPTIONS = 1.11 foreign $(top_srcdir)\/ansi2knr$/;"	m
AUTOMAKE_OPTIONS	lame/Dll/Makefile	/^AUTOMAKE_OPTIONS = 1.11 foreign $(top_srcdir)\/ansi2knr$/;"	m
AUTOMAKE_OPTIONS	lame/Makefile	/^AUTOMAKE_OPTIONS = 1.11 foreign $(top_srcdir)\/ansi2knr$/;"	m
AUTOMAKE_OPTIONS	lame/debian/Makefile	/^AUTOMAKE_OPTIONS = 1.11 foreign $(top_srcdir)\/ansi2knr$/;"	m
AUTOMAKE_OPTIONS	lame/doc/Makefile	/^AUTOMAKE_OPTIONS = 1.11 foreign $(top_srcdir)\/ansi2knr$/;"	m
AUTOMAKE_OPTIONS	lame/doc/html/Makefile	/^AUTOMAKE_OPTIONS = foreign ansi2knr$/;"	m
AUTOMAKE_OPTIONS	lame/doc/man/Makefile	/^AUTOMAKE_OPTIONS = foreign ansi2knr$/;"	m
AUTOMAKE_OPTIONS	lame/dshow/Makefile	/^AUTOMAKE_OPTIONS = 1.11 foreign $(top_srcdir)\/ansi2knr$/;"	m
AUTOMAKE_OPTIONS	lame/frontend/Makefile	/^AUTOMAKE_OPTIONS = 1.11 foreign $(top_srcdir)\/ansi2knr$/;"	m
AUTOMAKE_OPTIONS	lame/include/Makefile	/^AUTOMAKE_OPTIONS = 1.11 foreign $(top_srcdir)\/ansi2knr$/;"	m
AUTOMAKE_OPTIONS	lame/libmp3lame/Makefile	/^AUTOMAKE_OPTIONS = 1.11 foreign $(top_srcdir)\/ansi2knr$/;"	m
AUTOMAKE_OPTIONS	lame/libmp3lame/i386/Makefile	/^AUTOMAKE_OPTIONS = foreign $(top_srcdir)\/ansi2knr$/;"	m
AUTOMAKE_OPTIONS	lame/libmp3lame/vector/Makefile	/^AUTOMAKE_OPTIONS = 1.11 foreign $(top_srcdir)\/ansi2knr$/;"	m
AUTOMAKE_OPTIONS	lame/mac/Makefile	/^AUTOMAKE_OPTIONS = 1.11 foreign $(top_srcdir)\/ansi2knr$/;"	m
AUTOMAKE_OPTIONS	lame/macosx/English.lproj/Makefile	/^AUTOMAKE_OPTIONS = 1.11 foreign $(top_srcdir)\/ansi2knr$/;"	m
AUTOMAKE_OPTIONS	lame/macosx/LAME.xcodeproj/Makefile	/^AUTOMAKE_OPTIONS = 1.11 foreign $(top_srcdir)\/ansi2knr$/;"	m
AUTOMAKE_OPTIONS	lame/macosx/Makefile	/^AUTOMAKE_OPTIONS = 1.11 foreign $(top_srcdir)\/ansi2knr$/;"	m
AUTOMAKE_OPTIONS	lame/misc/Makefile	/^AUTOMAKE_OPTIONS = 1.11 foreign $(top_srcdir)\/ansi2knr$/;"	m
AUTOMAKE_OPTIONS	lame/mpglib/Makefile	/^AUTOMAKE_OPTIONS = 1.11 foreign $(top_srcdir)\/ansi2knr$/;"	m
AUTOMAKE_OPTIONS	lame/vc_solution/Makefile	/^AUTOMAKE_OPTIONS = 1.11 foreign $(top_srcdir)\/ansi2knr$/;"	m
AVC	librtmp/amf.h	63;"	d
AVMATCH	librtmp/amf.h	64;"	d
AV_clear	librtmp/rtmp.c	/^AV_clear(RTMP_METHOD *vals, int num)$/;"	f	file:
AV_empty	librtmp/amf.c	/^static const AVal AV_empty = { 0, 0 };$/;"	v	file:
AV_erase	librtmp/rtmp.c	/^AV_erase(RTMP_METHOD *vals, int *num, int i, int freeit)$/;"	f	file:
AV_queue	librtmp/rtmp.c	/^AV_queue(RTMP_METHOD **vals, int *num, AVal *av, int txn)$/;"	f	file:
AVal	librtmp/amf.h	/^    typedef struct AVal$/;"	s
AVal	librtmp/amf.h	/^    } AVal;$/;"	t
AValChr	librtmp/rtmp.c	/^static char *AValChr(AVal *av, char c)$/;"	f	file:
AVreplace	Source/RTMPStuff.cpp	/^void AVreplace(AVal *src, const AVal *orig, const AVal *repl)$/;"	f
AWK	lame/ACM/ADbg/Makefile	/^AWK = gawk$/;"	m
AWK	lame/ACM/Makefile	/^AWK = gawk$/;"	m
AWK	lame/ACM/ddk/Makefile	/^AWK = gawk$/;"	m
AWK	lame/ACM/tinyxml/Makefile	/^AWK = gawk$/;"	m
AWK	lame/Dll/Makefile	/^AWK = gawk$/;"	m
AWK	lame/Makefile	/^AWK = gawk$/;"	m
AWK	lame/debian/Makefile	/^AWK = gawk$/;"	m
AWK	lame/doc/Makefile	/^AWK = gawk$/;"	m
AWK	lame/doc/html/Makefile	/^AWK = gawk$/;"	m
AWK	lame/doc/man/Makefile	/^AWK = gawk$/;"	m
AWK	lame/dshow/Makefile	/^AWK = gawk$/;"	m
AWK	lame/frontend/Makefile	/^AWK = gawk$/;"	m
AWK	lame/include/Makefile	/^AWK = gawk$/;"	m
AWK	lame/libmp3lame/Makefile	/^AWK = gawk$/;"	m
AWK	lame/libmp3lame/i386/Makefile	/^AWK = gawk$/;"	m
AWK	lame/libmp3lame/vector/Makefile	/^AWK = gawk$/;"	m
AWK	lame/mac/Makefile	/^AWK = gawk$/;"	m
AWK	lame/macosx/English.lproj/Makefile	/^AWK = gawk$/;"	m
AWK	lame/macosx/LAME.xcodeproj/Makefile	/^AWK = gawk$/;"	m
AWK	lame/macosx/Makefile	/^AWK = gawk$/;"	m
AWK	lame/misc/Makefile	/^AWK = gawk$/;"	m
AWK	lame/mpglib/Makefile	/^AWK = gawk$/;"	m
AWK	lame/vc_solution/Makefile	/^AWK = gawk$/;"	m
About	lame/ACM/ACM.cpp	/^inline DWORD ACM::About(HWND hParentWindow)$/;"	f	class:ACM
AboutProc	lame/ACM/ACM.cpp	/^static BOOL CALLBACK AboutProc($/;"	f	file:
Abs	OBSApi/Utility/XMath.h	/^    inline Vect& Abs()                              {x=fabsf(x); y=fabsf(y); z=fabsf(z); return *this;}$/;"	f	struct:Vect
Abs	OBSApi/Utility/XMath.h	/^    inline Vect2& Abs()                             {x=fabs(x); y=fabs(y); return *this;}$/;"	f	struct:Vect2
Abs	OBSApi/Utility/XMath.h	/^    inline Vect4& Abs()                               {x=fabs(x); y=fabs(y); z=fabs(z); w=fabs(w); return *this;}$/;"	f	struct:Vect4
AbstractImageSource	CLRHostPlugin/CLRHostInterop/AbstractImageSource.cpp	/^AbstractImageSource::AbstractImageSource()$/;"	f	class:AbstractImageSource
AbstractImageSource.cpp	CLRHostPlugin/CLRHostInterop/AbstractImageSource.cpp	1;"	F
AbstractImageSource.h	CLRHostPlugin/CLRHostInterop/AbstractImageSource.h	1;"	F
AbstractImageSourceFactory	CLRHostPlugin/CLRHostInterop/AbstractImageSourceFactory.cpp	/^AbstractImageSourceFactory::AbstractImageSourceFactory()$/;"	f	class:AbstractImageSourceFactory
AbstractImageSourceFactory.cpp	CLRHostPlugin/CLRHostInterop/AbstractImageSourceFactory.cpp	1;"	F
AbstractImageSourceFactory.h	CLRHostPlugin/CLRHostInterop/AbstractImageSourceFactory.h	1;"	F
AbstractPlugin	CLRHostPlugin/CLRHostInterop/AbstractPlugin.cpp	/^AbstractPlugin::AbstractPlugin()$/;"	f	class:AbstractPlugin
AbstractPlugin.cpp	CLRHostPlugin/CLRHostInterop/AbstractPlugin.cpp	1;"	F
AbstractPlugin.h	CLRHostPlugin/CLRHostInterop/AbstractPlugin.h	1;"	F
AbstractSettings	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^    public abstract class AbstractSettings$/;"	c	namespace:Shared
AbstractWPFSettingsPane	CLRHostPlugin/CLRHostInterop/AbstractWPFSettingsPane.cpp	/^AbstractWPFSettingsPane::AbstractWPFSettingsPane()$/;"	f	class:AbstractWPFSettingsPane
AbstractWPFSettingsPane.cpp	CLRHostPlugin/CLRHostInterop/AbstractWPFSettingsPane.cpp	1;"	F
AbstractWPFSettingsPane.h	CLRHostPlugin/CLRHostInterop/AbstractWPFSettingsPane.h	1;"	F
AccumulatedFrames	extras/dxgi1_2.h	/^    UINT AccumulatedFrames;$/;"	m	struct:DXGI_OUTDUPL_FRAME_INFO
Accuracy	libmfx/include/msdk/include/mfxstructures.h	/^                mfxU16  Accuracy;$/;"	m
AcquireNextFrame	Source/D3D10OutputDuplicator.cpp	/^DuplicatorInfo D3D10OutputDuplicator::AcquireNextFrame(UINT timeout)$/;"	f	class:D3D10OutputDuplicator
AcquireNextFrame	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *AcquireNextFrame )( $/;"	m	struct:IDXGIOutputDuplicationVtbl
Activate	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/RenderProcess.cs	/^        int Activate(ref Guid iid, int dwClsCtx, IntPtr pActivationParams, [MarshalAs(UnmanagedType.IUnknown)] out object ppInterface);$/;"	m	interface:Browser.IMMDevice
ActuallyEnableProjector	Source/OBS.cpp	/^void OBS::ActuallyEnableProjector()$/;"	f	class:OBS
AdapterLuid	extras/dxgi1_2.h	/^    LUID AdapterLuid;$/;"	m	struct:DXGI_ADAPTER_DESC2
AdapterOrdinal	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	/^    UINT    AdapterOrdinal;$/;"	m	struct:_D3DCAPS8
AdapterOrdinal	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    UINT            AdapterOrdinal;$/;"	m	struct:_D3DDEVICE_CREATION_PARAMETERS
AdaptiveB	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16      AdaptiveB;              \/* tri-state option *\/$/;"	m
AdaptiveI	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16      AdaptiveI;              \/* tri-state option *\/$/;"	m
Add	OBSApi/Utility/Template.h	/^    inline unsigned int Add(const T& val)$/;"	f	class:CircularList
Add	OBSApi/Utility/Template.h	/^    inline unsigned int Add(const T& val)$/;"	f	class:List
Add	OBSApi/Utility/Template.h	/^    inline unsigned int Add(const T& val)$/;"	f	class:SafeList
Add	OBSApi/Utility/Template.h	/^    unsigned int Add(BOOL bVal)$/;"	f	class:BitList
Add	OBSApi/Utility/XString.h	/^    inline unsigned int Add(CTSTR lpStr)$/;"	f	class:StringList
Add	OBSApi/Utility/XString.h	/^    inline unsigned int Add(const String &val)$/;"	f	class:StringList
Add	Source/OBS.h	/^    Add,$/;"	m	class:ProfileAction
Add	Source/OBS.h	/^    Add,$/;"	m	class:SceneCollectionAction
Add	lame/ACM/tinyxml/tinyxml.cpp	/^void TiXmlAttributeSet::Add( TiXmlAttribute* addMe )$/;"	f	class:TiXmlAttributeSet
AddAudioFilter	OBSApi/AudioSource.cpp	/^void AudioSource::AddAudioFilter(AudioFilter *filter) {audioFilters << filter;}$/;"	f	class:AudioSource
AddAudioSegment	OBSApi/AudioSource.cpp	/^void AudioSource::AddAudioSegment(AudioSegment *newSegment, float curVolume)$/;"	f	class:AudioSource
AddAudioSource	Source/API.cpp	/^    virtual void AddAudioSource(AudioSource *source) {App->AddAudioSource(source);}$/;"	f	class:OBSAPIInterface
AddAudioSource	Source/OBS.h	/^    inline void AddAudioSource(AudioSource *source)$/;"	f	class:OBS
AddBuiltInSettingsPanes	Source/Settings.cpp	/^void OBS::AddBuiltInSettingsPanes()$/;"	f	class:OBS
AddCodingOption	QSVHelper/QSVStuff.cpp	/^void Parameters::AddCodingOption()$/;"	f	class:Parameters
AddCodingOption2	QSVHelper/QSVStuff.cpp	/^void Parameters::AddCodingOption2()$/;"	f	class:Parameters
AddColor	OBSApi/Utility/ConfigFile.cpp	/^void ConfigFile::AddColor(CTSTR lpSection, CTSTR lpKey, const Color4 &color)$/;"	f	class:ConfigFile
AddColor	OBSApi/Utility/XConfig.h	/^    inline void AddColor(CTSTR lpName, DWORD color)$/;"	f	class:XElement
AddColorList	OBSApi/Utility/XConfig.h	/^    inline void AddColorList(CTSTR lpName, List<DWORD> &ColorList)$/;"	f	class:XElement
AddElgatoRes	DShowPlugin/DShowPlugin.cpp	/^static void AddElgatoRes(AM_MEDIA_TYPE *pMT, int cx, int cy, VideoOutputType type, List<MediaOutputInfo> &outputInfoList)$/;"	f	file:
AddEncoderSettingsPanes	Source/Settings.cpp	/^void OBS::AddEncoderSettingsPanes()$/;"	f	class:OBS
AddExt	QSVHelper/QSVStuff.h	/^    void AddExt(T& t) { ext_buffers.emplace_back(reinterpret_cast<mfxExtBuffer*>(&t)); UpdateExt(); }$/;"	f	struct:Parameters
AddFloat	OBSApi/Utility/ConfigFile.cpp	/^void ConfigFile::AddFloat(CTSTR lpSection, CTSTR lpKey, float number)$/;"	f	class:ConfigFile
AddFloat	OBSApi/Utility/XConfig.cpp	/^void  XElement::AddFloat(CTSTR lpName, float number)$/;"	f	class:XElement
AddFloatList	OBSApi/Utility/XConfig.cpp	/^void  XElement::AddFloatList(CTSTR lpName, List<float> &FloatList)$/;"	f	class:XElement
AddGlobalSourceToScene	Source/GlobalSource.cpp	/^ImageSource* OBS::AddGlobalSourceToScene(CTSTR lpName)$/;"	f	class:OBS
AddHex	OBSApi/Utility/XConfig.cpp	/^void  XElement::AddHex(CTSTR lpName, DWORD hex)$/;"	f	class:XElement
AddHexList	OBSApi/Utility/XConfig.cpp	/^void  XElement::AddHexList(CTSTR lpName, List<DWORD> &HexList)$/;"	f	class:XElement
AddHttpPath	Source/Main.cpp	/^int AddHttpPath(HANDLE hReqQueue, wchar_t* path)$/;"	f
AddImageSource	OBSApi/Scene.cpp	/^SceneItem* Scene::AddImageSource(XElement *sourceElement)$/;"	f	class:Scene
AddImageSourceFactory	CLRHostPlugin/CLRHostPlugin/CLRHostApi.cpp	/^CLRHostApi::AddImageSourceFactory(CLRObjectRef &clrObjectRef)$/;"	f	class:CLRHostApi
AddInt	OBSApi/Utility/ConfigFile.cpp	/^void ConfigFile::AddInt(CTSTR lpSection, CTSTR lpKey, int number)$/;"	f	class:ConfigFile
AddInt	OBSApi/Utility/XConfig.cpp	/^void  XElement::AddInt(CTSTR lpName, int number)$/;"	f	class:XElement
AddIntList	OBSApi/Utility/XConfig.cpp	/^void  XElement::AddIntList(CTSTR lpName, List<int> &IntList)$/;"	f	class:XElement
AddKey	OBSApi/Utility/ConfigFile.cpp	/^void  ConfigFile::AddKey(CTSTR lpSection, CTSTR lpKey, CTSTR newvalue)$/;"	f	class:ConfigFile
AddLookup	OBSApi/Utility/XTLocalization.cpp	/^void LocaleStringLookup::AddLookup(CTSTR lookupVal, LocaleStringItem *item, StringLookupNode *node)$/;"	f	class:LocaleStringLookup
AddLookupString	OBSApi/Utility/XTLocalization.cpp	/^void LocaleStringLookup::AddLookupString(CTSTR lookupVal, CTSTR lpVal)$/;"	f	class:LocaleStringLookup
AddOutput	DShowPlugin/DShowPlugin.cpp	/^void AddOutput(AM_MEDIA_TYPE *pMT, BYTE *capsData, bool bAllowV2, List<MediaOutputInfo> &outputInfoList)$/;"	f
AddPacket	Source/OBS.h	/^    virtual void AddPacket(std::shared_ptr<const std::vector<BYTE>> data, DWORD timestamp, DWORD pts, PacketType type)$/;"	f	class:VideoFileStream
AddPendingStream	Source/OBSCapture.cpp	/^void OBS::AddPendingStream(ClosableStream *stream, std::function<void()> finishedCallback)$/;"	f	class:OBS
AddPendingStreamThread	Source/OBSCapture.cpp	/^void OBS::AddPendingStreamThread(HANDLE thread)$/;"	f	class:OBS
AddProfile	Source/WindowStuff.cpp	/^void OBS::AddProfile(ProfileAction action)$/;"	f	class:OBS
AddProfilesToMenu	Source/WindowStuff.cpp	/^void OBS::AddProfilesToMenu(HMENU menu)$/;"	f	class:OBS
AddRef	DShowPlugin/CaptureFilter.cpp	/^    STDMETHODIMP_(ULONG) AddRef() {return ++refCount;}$/;"	f	class:CaptureFlags
AddRef	DShowPlugin/CaptureFilter.cpp	/^STDMETHODIMP_(ULONG) CaptureEnumMediaTypes::AddRef()  {return ++refCount;}$/;"	f	class:CaptureEnumMediaTypes
AddRef	DShowPlugin/CaptureFilter.cpp	/^STDMETHODIMP_(ULONG) CaptureEnumPins::AddRef()  {return ++refCount;}$/;"	f	class:CaptureEnumPins
AddRef	DShowPlugin/CaptureFilter.cpp	/^STDMETHODIMP_(ULONG) CaptureFilter::AddRef()  {return ++refCount;}$/;"	f	class:CaptureFilter
AddRef	DShowPlugin/CaptureFilter.cpp	/^STDMETHODIMP_(ULONG) CapturePin::AddRef()  {return ++refCount;}$/;"	f	class:CapturePin
AddRef	DShowPlugin/DeviceSource.h	/^    inline void AddRef() {++refs;}$/;"	f	struct:SampleData
AddRef	extras/dxgi1_2.h	/^        ULONG ( STDMETHODCALLTYPE *AddRef )( $/;"	m	struct:IDXGIAdapter2Vtbl
AddRef	extras/dxgi1_2.h	/^        ULONG ( STDMETHODCALLTYPE *AddRef )( $/;"	m	struct:IDXGIDevice2Vtbl
AddRef	extras/dxgi1_2.h	/^        ULONG ( STDMETHODCALLTYPE *AddRef )( $/;"	m	struct:IDXGIDisplayControlVtbl
AddRef	extras/dxgi1_2.h	/^        ULONG ( STDMETHODCALLTYPE *AddRef )( $/;"	m	struct:IDXGIFactory2Vtbl
AddRef	extras/dxgi1_2.h	/^        ULONG ( STDMETHODCALLTYPE *AddRef )( $/;"	m	struct:IDXGIOutput1Vtbl
AddRef	extras/dxgi1_2.h	/^        ULONG ( STDMETHODCALLTYPE *AddRef )( $/;"	m	struct:IDXGIOutputDuplicationVtbl
AddRef	extras/dxgi1_2.h	/^        ULONG ( STDMETHODCALLTYPE *AddRef )( $/;"	m	struct:IDXGIResource1Vtbl
AddRef	extras/dxgi1_2.h	/^        ULONG ( STDMETHODCALLTYPE *AddRef )( $/;"	m	struct:IDXGISurface2Vtbl
AddRef	extras/dxgi1_2.h	/^        ULONG ( STDMETHODCALLTYPE *AddRef )( $/;"	m	struct:IDXGISwapChain1Vtbl
AddSEIData	QSVHelper/QSVStuff.cpp	/^void EncodeCtrl::AddSEIData(sei_type type, vector<mfxU8> data)$/;"	f	class:EncodeCtrl
AddSceneCollection	Source/WindowStuff.cpp	/^void OBS::AddSceneCollection(SceneCollectionAction action)$/;"	f	class:OBS
AddSceneCollectionToMenu	Source/WindowStuff.cpp	/^void OBS::AddSceneCollectionToMenu(HMENU menu)$/;"	f	class:OBS
AddSettingsPane	CLRHostPlugin/CLRHostPlugin/CLRHostApi.cpp	/^CLRHostApi::AddSettingsPane(CLRObjectRef &clrObjectRef)$/;"	f	class:CLRHostApi
AddSettingsPane	Source/API.cpp	/^    virtual void AddSettingsPane(SettingsPane *pane)    {App->AddSettingsPane(pane);}$/;"	f	class:OBSAPIInterface
AddSettingsPane	Source/Settings.cpp	/^void OBS::AddSettingsPane(SettingsPane *pane)$/;"	f	class:OBS
AddSorted	OBSApi/Utility/XString.h	/^    inline unsigned int AddSorted(CTSTR lpStr)$/;"	f	class:StringList
AddState	Source/D3D10ShaderProcessor.cpp	/^BOOL ShaderProcessor::AddState(SamplerInfo &info, String &stateName, String &stateVal)$/;"	f	class:ShaderProcessor
AddStreamInfo	Source/API.cpp	/^    virtual UINT AddStreamInfo(CTSTR lpInfo, StreamInfoPriority priority)           {return App->AddStreamInfo(lpInfo, priority);}$/;"	f	class:OBSAPIInterface
AddStreamInfo	Source/API.cpp	/^UINT OBS::AddStreamInfo(CTSTR lpInfo, StreamInfoPriority priority)$/;"	f	class:OBS
AddString	OBSApi/Utility/ConfigFile.cpp	/^void ConfigFile::AddString(CTSTR lpSection, CTSTR lpKey, CTSTR lpString)$/;"	f	class:ConfigFile
AddString	OBSApi/Utility/XConfig.cpp	/^void  XElement::AddString(CTSTR lpName, TSTR lpString)$/;"	f	class:XElement
AddStringList	OBSApi/Utility/XConfig.cpp	/^void  XElement::AddStringList(CTSTR lpName, List<TSTR> &stringList)$/;"	f	class:XElement
AddStringList	OBSApi/Utility/XConfig.cpp	/^void  XElement::AddStringList(CTSTR lpName, StringList &stringList)$/;"	f	class:XElement
AddVbrFrame	lame/libmp3lame/VbrTag.c	/^AddVbrFrame(lame_internal_flags * gfc)$/;"	f
Address	OBSApi/Utility/DebugAlloc.cpp	/^    LPVOID Address;$/;"	m	struct:Allocation	file:
AdjustWindowPos	Source/SettingsPublish.cpp	/^void AdjustWindowPos(HWND hwnd, LONG xOffset, LONG yOffset)$/;"	f
AdvancedPropertiesCheckBox	CLRBrowserSourcePlugin/Plugin/SettingsPane.xaml.cs	/^        public CheckBox AdvancedPropertiesCheckBox { get; private set; }$/;"	p	class:CLRBrowserSourcePlugin.SettingsPane
AfterCreatedEvent	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserLifeSpanHandler.cs	/^        public AfterCreatedEventHandler AfterCreatedEvent { private get; set; }$/;"	p	class:Browser.BrowserLifeSpanHandler
AfterCreatedEventHandler	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserLifeSpanHandler.cs	/^    public delegate void AfterCreatedEventHandler(CefBrowser browser);$/;"	m	namespace:Browser
Ah	lame/libmp3lame/i386/nasm.h	/^	times (1 & ge12(($$-%%here) & 15) & ~ge13(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Ah,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h$/;"	v
AlgList	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU32          *AlgList;$/;"	m
AlgList	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU32*         AlgList;$/;"	m
Algorithm	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16      Algorithm;$/;"	m
Alloc	OBSApi/Utility/Alloc.h	/^class BASE_EXPORT Alloc$/;"	c
Alloc	libmfx/include/msdk/include/mfxvideo.h	/^    mfxStatus  (MFX_CDECL  *Alloc)    (mfxHDL pthis, mfxFrameAllocRequest *request, mfxFrameAllocResponse *response);$/;"	m
Alloc	libmfx/include/msdk/include/mfxvideo.h	/^    mfxStatus  (MFX_CDECL *Alloc)    (mfxHDL pthis, mfxU32 nbytes, mfxU16 type, mfxMemId *mid);$/;"	m
Alloc.h	OBSApi/Utility/Alloc.h	1;"	F
AllocFrames	QSVHelper/IntelSupport/src/base_allocator.cpp	/^mfxStatus BaseFrameAllocator::AllocFrames(mfxFrameAllocRequest *request, mfxFrameAllocResponse *response)$/;"	f	class:BaseFrameAllocator
AllocImpl	QSVHelper/IntelSupport/src/d3d11_allocator.cpp	/^mfxStatus D3D11FrameAllocator::AllocImpl(mfxFrameAllocRequest *request, mfxFrameAllocResponse *response)$/;"	f	class:D3D11FrameAllocator
AllocMemory	libfaac/util.h	44;"	d
Alloc_	QSVHelper/IntelSupport/src/base_allocator.cpp	/^mfxStatus MFXBufferAllocator::Alloc_(mfxHDL pthis, mfxU32 nbytes, mfxU16 type, mfxMemId *mid)$/;"	f	class:MFXBufferAllocator
Alloc_	QSVHelper/IntelSupport/src/base_allocator.cpp	/^mfxStatus MFXFrameAllocator::Alloc_(mfxHDL pthis, mfxFrameAllocRequest *request, mfxFrameAllocResponse *response)$/;"	f	class:MFXFrameAllocator
Allocate	OBSApi/Utility/Alloc.h	75;"	d
Allocate	OBSApi/Utility/Alloc.h	81;"	d
AllocateBuffer	minhook/src/buffer.cpp	/^	void* AllocateBuffer(void* const pOrigin, DWORD protect, size_t size)$/;"	f	namespace:MinHook::<anonymous>
AllocateCodeBuffer	minhook/src/buffer.cpp	/^	void* AllocateCodeBuffer(void* const pOrigin, size_t size)$/;"	f	namespace:MinHook
AllocateDataBuffer	minhook/src/buffer.cpp	/^	void* AllocateDataBuffer(void* const pOrigin, size_t size)$/;"	f	namespace:MinHook
Allocation	OBSApi/Utility/DebugAlloc.cpp	/^struct Allocation$/;"	s	file:
AllocationList	OBSApi/Utility/DebugAlloc.cpp	/^Allocation *AllocationList = NULL;$/;"	v
AlphaCmpCaps	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	/^    DWORD   AlphaCmpCaps;$/;"	m	struct:_D3DCAPS8
AlphaMode	extras/dxgi1_2.h	/^    DXGI_ALPHA_MODE AlphaMode;$/;"	m	struct:DXGI_SWAP_CHAIN_DESC1
Alternatives	lame/doc/html/links.html	/^<h3><a name="Alternatives">Other MP3 Encoders:<\/a><\/h3>$/;"	a
Ambient	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DCOLORVALUE   Ambient;         \/* Ambient color of light *\/$/;"	m	struct:_D3DLIGHT8
Ambient	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DCOLORVALUE   Ambient;        \/* Ambient color RGB *\/$/;"	m	struct:_D3DMATERIAL8
AnalyzeSamples	lame/libmp3lame/gain_analysis.c	/^AnalyzeSamples(replaygain_t * rgData, const Float_t * left_samples, const Float_t * right_samples,$/;"	f
AnchorRefL0	libmfx/include/msdk/include/mfxmvc.h	/^    mfxU16 AnchorRefL0[16];$/;"	m
AnchorRefL1	libmfx/include/msdk/include/mfxmvc.h	/^    mfxU16 AnchorRefL1[16];$/;"	m
App	Source/Main.cpp	/^OBS         *App            = NULL;$/;"	v
AppConfig	ObsNvenc/inc/nvmain.h	31;"	d
AppConfig	Source/Main.cpp	/^ConfigFile  *AppConfig      = NULL;$/;"	v
AppWarning	OBSApi/Utility/XT.cpp	/^void __cdecl AppWarning(const TCHAR *format, ...)$/;"	f
Append	OBSApi/Utility/XT.cpp	/^void XStringLog::Append(CTSTR tstr, UINT len, bool linefeed)$/;"	f	class:XStringLog
Append	OBSApi/Utility/XT.cpp	/^void XStringLog::Append(String const &string, bool linefeed)$/;"	f	class:XStringLog
AppendArray	OBSApi/Utility/Template.h	/^    inline void AppendArray(const T *new_array, unsigned int n)$/;"	f	class:List
AppendArray	OBSApi/Utility/XString.h	/^    inline void AppendArray(const String *new_array, unsigned int n)$/;"	f	class:StringList
AppendChar	OBSApi/Utility/XString.cpp	/^String& String::AppendChar(TCHAR chr)$/;"	f	class:String
AppendFLVPacket	Source/FLVFileStream.cpp	/^    void AppendFLVPacket(const BYTE *lpData, UINT size, BYTE type, DWORD timestamp)$/;"	f	class:FLVFileStream	file:
AppendGameCaptureLog	Source/LogUploader.cpp	/^static void AppendGameCaptureLog(String &data)$/;"	f	file:
AppendList	OBSApi/Utility/Template.h	/^    inline void AppendList(const List<T>& list)$/;"	f	class:List
AppendList	OBSApi/Utility/Template.h	/^    inline void AppendList(const SafeList<T>& safelist)$/;"	f	class:SafeList
AppendList	OBSApi/Utility/XString.h	/^    inline void AppendList(const StringList& list)$/;"	f	class:StringList
AppendModifyListbox	Source/WindowStuff.cpp	/^void OBS::AppendModifyListbox(HWND hwnd, HMENU hMenu, int id, int numItems, bool bSelected)$/;"	f	class:OBS
AppendRipRelativeAddress	minhook/src/trampoline.cpp	/^	void AppendRipRelativeAddress(uint8_t* pInst, size_t pos, const hde_t& hs, CREATE_TREMPOLINE_T& ct)$/;"	f	namespace:MinHook::<anonymous>
AppendString	OBSApi/Utility/XString.cpp	/^String& String::AppendString(CTSTR str, UINT count)$/;"	f	class:String
AppendTempAddress	minhook/src/trampoline.cpp	/^	void AppendTempAddress(uintptr_t address, size_t pos, const T& inst, CREATE_TREMPOLINE_T& ct)$/;"	f	namespace:MinHook::<anonymous>
ApplicationCache	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public CefState ApplicationCache { get; set; }$/;"	p	class:Shared.BrowserInstanceSettings
ApplyChanges	lame/dshow/Mpegac.cpp	/^STDMETHODIMP CMpegAudEnc::ApplyChanges()$/;"	f	class:CMpegAudEnc
ApplyConfig	scenesw/SceneSwitcher.cpp	/^void SceneSwitcher::ApplyConfig(HWND hDialog)$/;"	f	class:SceneSwitcher
ApplyConfig	scenesw/SceneSwitcherSettings.cpp	/^void SceneSwitcherSettings::ApplyConfig(HWND hWnd) {$/;"	f	class:SceneSwitcherSettings
ApplyLongTermIdx	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16      ApplyLongTermIdx;$/;"	m
ApplyNoiseGate	NoiseGate/NoiseGate.cpp	/^void NoiseGateFilter::ApplyNoiseGate(float *buffer, int totalFloats)$/;"	f	class:NoiseGateFilter
ApplyQueued	minhook/src/hook.cpp	/^	MH_STATUS ApplyQueued()$/;"	f	namespace:MinHook
ApplyRTL	OBSApi/OBSApi.cpp	/^void ApplyRTL(HWND hwnd, bool bRTL)$/;"	f
ApplySettings	CLRBrowserSourcePlugin/Plugin/BrowserSettingsPane.cs	/^        public override void ApplySettings()$/;"	m	class:CLRBrowserSourcePlugin.BrowserSettingsPane
ApplySettings	CLRHostPlugin/CLRCSharpSamplePlugin/SampleSettingsPane.cs	/^        public override void ApplySettings()$/;"	m	class:CSharpSamplePlugin.SampleSettingsPane
ApplySettings	CLRHostPlugin/CLRHostPlugin/CLRSettingsPane.cpp	/^void CLRSettingsPane::ApplySettings()$/;"	f	class:CLRSettingsPane
ApplySettings	CLRHostPlugin/CLRHostPlugin/SettingsPaneBridge.h	/^    virtual void ApplySettings()$/;"	f	class:SettingsPaneBridge
ApplySettings	NoiseGate/NoiseGate.cpp	/^void NoiseGateSettings::ApplySettings()$/;"	f	class:NoiseGateSettings
ApplySettings	Source/Settings.cpp	/^void OBS::ApplySettings()$/;"	f	class:OBS
ApplySettings	Source/SettingsAdvanced.cpp	/^void SettingsAdvanced::ApplySettings()$/;"	f	class:SettingsAdvanced
ApplySettings	Source/SettingsAudio.cpp	/^void SettingsAudio::ApplySettings()$/;"	f	class:SettingsAudio
ApplySettings	Source/SettingsEncoding.cpp	/^void SettingsEncoding::ApplySettings()$/;"	f	class:SettingsEncoding
ApplySettings	Source/SettingsGeneral.cpp	/^void SettingsGeneral::ApplySettings()$/;"	f	class:SettingsGeneral
ApplySettings	Source/SettingsHotkeys.cpp	/^void SettingsHotkeys::ApplySettings()$/;"	f	class:SettingsHotkeys
ApplySettings	Source/SettingsPublish.cpp	/^void SettingsPublish::ApplySettings()$/;"	f	class:SettingsPublish
ApplySettings	Source/SettingsQSV.cpp	/^void SettingsQSV::ApplySettings()$/;"	f	class:SettingsQSV
ApplySettings	Source/SettingsVideo.cpp	/^void SettingsVideo::ApplySettings()$/;"	f	class:SettingsVideo
ApplySettings	scenesw/SceneSwitcherSettings.cpp	/^void SceneSwitcherSettings::ApplySettings()$/;"	f	class:SceneSwitcherSettings
ApproxBytesDownloaded	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    DWORD   ApproxBytesDownloaded;  \/* Approximate number of bytes downloaded by resource manager *\/$/;"	m	struct:_D3DRESOURCESTATS
Array	OBSApi/Utility/Template.h	/^    inline T* Array() const             {return array;}$/;"	f	class:List
Array	OBSApi/Utility/XString.h	/^    inline TSTR Array() const                   {return lpString;}$/;"	f	class:String
AspectRatioH	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16  AspectRatioH;$/;"	m
AspectRatioW	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16  AspectRatioW;$/;"	m
AssemblyDirectory	CLRBrowserSourcePlugin/Client/CLRBrowserSourceClient.cs	/^        public static string AssemblyDirectory$/;"	p	class:CLRBrowserSourceClient.CLRBrowserSourceClient
AssemblyDirectory	CLRBrowserSourcePlugin/Plugin/CLRBrowserSourcePlugin.cs	/^        public static string AssemblyDirectory$/;"	p	class:CLRBrowserSourcePlugin.CLRBrowserSourcePlugin
AssemblyDirectory	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserManager.cs	/^        public static string AssemblyDirectory$/;"	p	class:Browser.BrowserManager
AssemblyInfo.cpp	CLRHostPlugin/CLRHostInterop/AssemblyInfo.cpp	1;"	F
AssemblyInfo.cs	CLRBrowserSourcePlugin/Client/Properties/AssemblyInfo.cs	1;"	F
AssemblyInfo.cs	CLRBrowserSourcePlugin/Plugin/Properties/AssemblyInfo.cs	1;"	F
AssemblyInfo.cs	CLRHostPlugin/CLRCSharpSamplePlugin/Properties/AssemblyInfo.cs	1;"	F
AssetSchemeHandler	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/AssetSchemeHandler.cs	/^        public AssetSchemeHandler(BrowserConfig config, CefRequest request)$/;"	m	class:RemoteBrowser.AssetSchemeHandler
AssetSchemeHandler	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/AssetSchemeHandler.cs	/^    internal class AssetSchemeHandler : CefResourceHandler$/;"	c	namespace:RemoteBrowser
AssetSchemeHandler.cs	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/AssetSchemeHandler.cs	1;"	F
AssetSchemeHandlerFactory	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/AssetSchemeHandler.cs	/^    internal class AssetSchemeHandlerFactory : CefSchemeHandlerFactory$/;"	c	namespace:RemoteBrowser
Assign	OBSApi/Utility/ComPtr.hpp	/^	inline T **Assign()                {Clear(); return &ptr;}$/;"	f	class:ComPtr
Assign	QSVHelper/ComPtr.hpp	/^	inline T **Assign()                {Clear(); return &ptr;}$/;"	f	class:ComPtr
AsyncDepth	libmfx/include/msdk/include/mfxastructures.h	/^    mfxU16  AsyncDepth;$/;"	m
AsyncDepth	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16  AsyncDepth;$/;"	m
Attach	CLRHostPlugin/CLRHostPlugin/CLRImageSource.cpp	/^bool CLRImageSource::Attach(CLRObjectRef &clrObjectRef, mscorlib::_Type *objectType)$/;"	f	class:CLRImageSource
Attach	CLRHostPlugin/CLRHostPlugin/CLRImageSourceFactory.cpp	/^bool CLRImageSourceFactory::Attach(CLRObjectRef &clrObjectRef, mscorlib::_Type *objectType)$/;"	f	class:CLRImageSourceFactory
Attach	CLRHostPlugin/CLRHostPlugin/CLRObject.cpp	/^bool CLRObject::Attach(CLRObjectRef &clrObjectRef, mscorlib::_Type *objectType)$/;"	f	class:CLRObject
Attach	CLRHostPlugin/CLRHostPlugin/CLRPlugin.cpp	/^bool CLRPlugin::Attach(CLRObjectRef &clrObjectRef, mscorlib::_Type *objectType)$/;"	f	class:CLRPlugin
Attach	CLRHostPlugin/CLRHostPlugin/CLRSettingsPane.cpp	/^bool CLRSettingsPane::Attach(CLRObjectRef &clrObjectRef, mscorlib::_Type *objectType)$/;"	f	class:CLRSettingsPane
Attach	CLRHostPlugin/CLRHostPlugin/CLRVector2.cpp	/^bool CLRVector2::Attach(CLRObjectRef &clrObjectRef, mscorlib::_Type *objectType)$/;"	f	class:CLRVector2
AttachSink	libmfx/src/mfx_dispatcher_log.cpp	/^void   DispatchLog::AttachSink(int nsink, IMsgHandler *pHandler)$/;"	f	class:DispatchLog
AttemptCapture	GraphicsCapture/GraphicsCaptureSource.cpp	/^void GraphicsCaptureSource::AttemptCapture()$/;"	f	class:GraphicsCaptureSource
AttemptToHookSomething	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	/^inline bool AttemptToHookSomething()$/;"	f
Attenuation0	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    float           Attenuation0;     \/* Constant attenuation *\/$/;"	m	struct:_D3DLIGHT8
Attenuation1	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    float           Attenuation1;     \/* Linear attenuation *\/$/;"	m	struct:_D3DLIGHT8
Attenuation2	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    float           Attenuation2;     \/* Quadratic attenuation *\/$/;"	m	struct:_D3DLIGHT8
Attribute	lame/ACM/tinyxml/tinyxml.cpp	/^const std::string* TiXmlElement::Attribute( const std::string& name ) const$/;"	f	class:TiXmlElement
Attribute	lame/ACM/tinyxml/tinyxml.cpp	/^const std::string* TiXmlElement::Attribute( const std::string& name, int* i ) const$/;"	f	class:TiXmlElement
AudioAvailable	OBSApi/AudioSource.h	/^    AudioAvailable,$/;"	e
AudioDeviceInfo	Source/OBS.h	/^struct AudioDeviceInfo$/;"	s
AudioDeviceList	Source/OBS.h	/^struct AudioDeviceList$/;"	s
AudioDeviceStorage	Source/Settings.h	/^    struct AudioDeviceStorage$/;"	s	class:SettingsAudio
AudioDeviceType	Source/OBS.h	/^enum AudioDeviceType {$/;"	g
AudioEncoder	Source/OBS.h	/^class AudioEncoder$/;"	c
AudioFilter	OBSApi/AudioFilter.h	/^    inline AudioFilter() {}$/;"	f	class:AudioFilter
AudioFilter	OBSApi/AudioFilter.h	/^class AudioFilter$/;"	c
AudioFilter.h	OBSApi/AudioFilter.h	1;"	F
AudioSegment	OBSApi/AudioSource.h	/^    inline AudioSegment(float *data, UINT numFloats, QWORD timestamp) : timestamp(timestamp)$/;"	f	struct:AudioSegment
AudioSegment	OBSApi/AudioSource.h	/^struct AudioSegment$/;"	s
AudioSource	OBSApi/AudioSource.cpp	/^AudioSource::AudioSource()$/;"	f	class:AudioSource
AudioSource	OBSApi/AudioSource.h	/^class BASE_EXPORT AudioSource$/;"	c
AudioSource.cpp	OBSApi/AudioSource.cpp	1;"	F
AudioSource.h	OBSApi/AudioSource.h	1;"	F
AutoDepthStencilFormat	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DFORMAT           AutoDepthStencilFormat;$/;"	m	struct:_D3DPRESENT_PARAMETERS_
Autocorrelation	libfaac/tns.c	/^static void Autocorrelation(int maxOrder,        \/* Maximum autocorr order *\/$/;"	f	file:
AvailableItems	OBSApi/Utility/Template.h	/^    List<UINT> AvailableItems;$/;"	m	class:SafeList
AverageBitrate_Max	lame/ACM/AEncodeProperties.h	/^	unsigned int AverageBitrate_Max;$/;"	m	class:AEncodeProperties
AverageBitrate_Min	lame/ACM/AEncodeProperties.h	/^	unsigned int AverageBitrate_Min;$/;"	m	class:AEncodeProperties
AverageBitrate_Step	lame/ACM/AEncodeProperties.h	/^	unsigned int AverageBitrate_Step;$/;"	m	class:AEncodeProperties
AxisAngle	OBSApi/Utility/XMath.h	/^    explicit inline AxisAngle(const Quat &q)                                        {MakeFromQuat(q);}$/;"	f	struct:AxisAngle
AxisAngle	OBSApi/Utility/XMath.h	/^    explicit inline AxisAngle(const Vect &v) : x(v.x), y(v.y), z(v.z), w(1.0f)      {}$/;"	f	struct:AxisAngle
AxisAngle	OBSApi/Utility/XMath.h	/^    inline AxisAngle()                                                              {}$/;"	f	struct:AxisAngle
AxisAngle	OBSApi/Utility/XMath.h	/^    inline AxisAngle(const Vect &v, float d) : x(v.x), y(v.y), z(v.z), w(d)         {}$/;"	f	struct:AxisAngle
AxisAngle	OBSApi/Utility/XMath.h	/^    inline AxisAngle(float a, float b, float c, float d) : x(a), y(b), z(c), w(d)   {}$/;"	f	struct:AxisAngle
AxisAngle	OBSApi/Utility/XMath.h	/^struct BASE_EXPORT AxisAngle$/;"	s
B	OBSApi/Utility/XMath.h	/^    Vect2 B;$/;"	m	struct:Line2
B	lame/doc/html/detailed.html	/^<a name="B"><span class="hilight">-B  n<\/span><\/a> Max bitrate$/;"	a
B	lame/libmp3lame/gain_analysis.h	/^        uint32_t B[STEPS_per_dB * MAX_dB];$/;"	m	struct:replaygain_data
B	libfaac/backpred.h	31;"	d
B	libmfx/include/msdk/include/mfxstructures.h	/^        mfxU16   B;$/;"	m
B	libmfx/include/msdk/include/mfxstructures.h	/^        mfxU8   *B;$/;"	m
B64DIGEST_LEN	librtmp/rtmp.c	2863;"	d	file:
B64INT_LEN	librtmp/rtmp.c	2864;"	d	file:
BASE64_CENCODE_H	librtmp/cencode.h	9;"	d
BASE_EXPORT	OBSApi/Utility/XT_Windows.h	34;"	d
BASE_EXPORT	OBSApi/Utility/XT_Windows.h	36;"	d
BASE_EXPORT	OBSApi/Utility/XT_Windows.h	38;"	d
BECLOSESTREAM	lame/Dll/BladeMP3EncDLL.h	/^typedef BE_ERR	(*BECLOSESTREAM)			(HBE_STREAM);$/;"	t
BEDEINITSTREAM	lame/Dll/BladeMP3EncDLL.h	/^typedef BE_ERR	(*BEDEINITSTREAM)			(HBE_STREAM, PBYTE, PDWORD);$/;"	t
BEENCODECHUNK	lame/Dll/BladeMP3EncDLL.h	/^typedef BE_ERR	(*BEENCODECHUNK)		(HBE_STREAM, DWORD, PSHORT, PBYTE, PDWORD);$/;"	t
BEENCODECHUNKFLOATS16NI	lame/Dll/BladeMP3EncDLL.h	/^typedef BE_ERR	(*BEENCODECHUNKFLOATS16NI)	(HBE_STREAM, DWORD, PFLOAT, PFLOAT, PBYTE, PDWORD);$/;"	t
BEINITSTREAM	lame/Dll/BladeMP3EncDLL.h	/^typedef BE_ERR	(*BEINITSTREAM)			(PBE_CONFIG, PDWORD, PDWORD, PHBE_STREAM);$/;"	t
BENIGN_RACE_BEGIN	extras/concurrencysal.h	258;"	d
BENIGN_RACE_BEGIN	extras/concurrencysal.h	345;"	d
BENIGN_RACE_END	extras/concurrencysal.h	259;"	d
BENIGN_RACE_END	extras/concurrencysal.h	346;"	d
BEVERSION	lame/Dll/BladeMP3EncDLL.h	/^typedef VOID	(*BEVERSION)				(PBE_VERSION);$/;"	t
BEWRITEINFOTAG	lame/Dll/BladeMP3EncDLL.h	/^typedef BE_ERR	(*BEWRITEINFOTAG)			(HBE_STREAM, LPCSTR );$/;"	t
BEWRITEVBRHEADER	lame/Dll/BladeMP3EncDLL.h	/^typedef BE_ERR	(*BEWRITEVBRHEADER)			(LPCSTR);$/;"	t
BE_CONFIG	lame/Dll/BladeMP3EncDLL.h	/^} BE_CONFIG, *PBE_CONFIG ATTRIBUTE_PACKED;$/;"	t
BE_CONFIG_LAME	lame/Dll/BladeMP3EncDLL.h	41;"	d
BE_CONFIG_MP3	lame/Dll/BladeMP3EncDLL.h	40;"	d
BE_ERR	lame/Dll/BladeMP3EncDLL.h	/^typedef		unsigned long			BE_ERR;$/;"	t
BE_ERR_BUFFER_TOO_SMALL	lame/Dll/BladeMP3EncDLL.h	56;"	d
BE_ERR_INVALID_FORMAT	lame/Dll/BladeMP3EncDLL.h	52;"	d
BE_ERR_INVALID_FORMAT_PARAMETERS	lame/Dll/BladeMP3EncDLL.h	53;"	d
BE_ERR_INVALID_HANDLE	lame/Dll/BladeMP3EncDLL.h	55;"	d
BE_ERR_NO_MORE_HANDLES	lame/Dll/BladeMP3EncDLL.h	54;"	d
BE_ERR_SUCCESSFUL	lame/Dll/BladeMP3EncDLL.h	51;"	d
BE_MAX_HOMEPAGE	lame/Dll/BladeMP3EncDLL.h	60;"	d
BE_MP3_MODE_DUALCHANNEL	lame/Dll/BladeMP3EncDLL.h	66;"	d
BE_MP3_MODE_JSTEREO	lame/Dll/BladeMP3EncDLL.h	65;"	d
BE_MP3_MODE_MONO	lame/Dll/BladeMP3EncDLL.h	67;"	d
BE_MP3_MODE_STEREO	lame/Dll/BladeMP3EncDLL.h	64;"	d
BE_VERSION	lame/Dll/BladeMP3EncDLL.h	/^} BE_VERSION, *PBE_VERSION ATTRIBUTE_PACKED;$/;"	t
BF	lame/misc/abx.c	97;"	d	file:
BF_ENC	librtmp/handshake.h	654;"	d
BF_ROUNDS	librtmp/handshake.h	377;"	d
BINSEARCH_DOWN	lame/libmp3lame/quantize.c	/^    BINSEARCH_DOWN$/;"	e	file:
BINSEARCH_NONE	lame/libmp3lame/quantize.c	/^    BINSEARCH_NONE,$/;"	e	file:
BINSEARCH_UP	lame/libmp3lame/quantize.c	/^    BINSEARCH_UP,$/;"	e	file:
BITRATE_FREE	lame/dshow/Encoder.cpp	357;"	d	file:
BITRATE_RESERVED	lame/dshow/Encoder.cpp	358;"	d	file:
BITSTREAM_BUFF	QSVHelper/IPCInfo.h	33;"	d
BITSTREAM_H	libfaac/bitstream.h	39;"	d
BITSTREAM_INFO	QSVHelper/IPCInfo.h	39;"	d
BI_def_bitmap_create	Source/BitmapImage.cpp	/^void *BI_def_bitmap_create(int width, int height)          {return Allocate(width * height * 4);}$/;"	f
BI_def_bitmap_destroy	Source/BitmapImage.cpp	/^void BI_def_bitmap_destroy(void *bitmap)                   {Free(bitmap);}$/;"	f
BI_def_bitmap_get_buffer	Source/BitmapImage.cpp	/^unsigned char *BI_def_bitmap_get_buffer(void *bitmap)      {return (unsigned char*)bitmap;}$/;"	f
BI_def_bitmap_modified	Source/BitmapImage.cpp	/^void BI_def_bitmap_modified(void *bitmap)                  {}$/;"	f
BI_def_bitmap_set_opaque	Source/BitmapImage.cpp	/^void  BI_def_bitmap_set_opaque(void *bitmap, BOOL opaque)  {}$/;"	f
BI_def_bitmap_test_opaque	Source/BitmapImage.cpp	/^BOOL  BI_def_bitmap_test_opaque(void *bitmap)              {return false;}$/;"	f
BLKSIZE	lame/libmp3lame/encoder.h	111;"	d
BLKSIZE_s	lame/libmp3lame/encoder.h	113;"	d
BLOCK_LEN_LONG	libfaac/coder.h	40;"	d
BLOCK_LEN_LONG	libfaac/coder.h	44;"	d
BLOCK_LEN_LONG	libfaac/coder.h	49;"	d
BLOCK_LEN_SHORT	libfaac/coder.h	41;"	d
BLOCK_LEN_SHORT	libfaac/coder.h	45;"	d
BLOCK_LEN_SHORT	libfaac/coder.h	50;"	d
BOOL	OBSApi/Utility/Defs.h	/^typedef int                 BOOL,INT,*LPINT;$/;"	t
BOOL	OBSApi/Utility/Defs.h	33;"	d
BOOL	Source/libnsgif.h	/^typedef int BOOL;$/;"	t
BOUNDS_INSIDE	OBSApi/Utility/XMath.h	/^enum {BOUNDS_OUTSIDE=1, BOUNDS_INSIDE=2, BOUNDS_PARTIAL=4};$/;"	e
BOUNDS_OUTSIDE	OBSApi/Utility/XMath.h	/^enum {BOUNDS_OUTSIDE=1, BOUNDS_INSIDE=2, BOUNDS_PARTIAL=4};$/;"	e
BOUNDS_PARTIAL	OBSApi/Utility/XMath.h	/^enum {BOUNDS_OUTSIDE=1, BOUNDS_INSIDE=2, BOUNDS_PARTIAL=4};$/;"	e
BPC	lame/libmp3lame/util.h	257;"	d
BP_GRAPH	librtmp/log.c	134;"	d	file:
BP_LEN	librtmp/log.c	135;"	d	file:
BP_OFFSET	librtmp/log.c	133;"	d	file:
BRCPanicMode	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16          BRCPanicMode;$/;"	m
BRCParamMultiplier	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16  BRCParamMultiplier;$/;"	m
BRHIST_RES	lame/frontend/brhist.c	34;"	d	file:
BRHIST_WIDTH	lame/frontend/brhist.c	31;"	d	file:
BRMode	lame/ACM/AEncodeProperties.h	/^	enum BRMode { BR_CBR, BR_VBR, BR_ABR };$/;"	g	class:AEncodeProperties
BR_ABR	lame/ACM/AEncodeProperties.h	/^	enum BRMode { BR_CBR, BR_VBR, BR_ABR };$/;"	e	enum:AEncodeProperties::BRMode
BR_CBR	lame/ACM/AEncodeProperties.h	/^	enum BRMode { BR_CBR, BR_VBR, BR_ABR };$/;"	e	enum:AEncodeProperties::BRMode
BR_VBR	lame/ACM/AEncodeProperties.h	/^	enum BRMode { BR_CBR, BR_VBR, BR_ABR };$/;"	e	enum:AEncodeProperties::BRMode
BRefType	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16      BRefType;$/;"	m
BUFFER_SIZE	lame/libmp3lame/util.h	89;"	d
BUTTER_FILTER	lame/libmp3lame/gain_analysis.h	53;"	d
BUTTER_ORDER	lame/libmp3lame/gain_analysis.h	51;"	d
BYTE	OBSApi/Utility/Defs.h	/^typedef unsigned char       UCHAR,BYTE,*LPBYTE;$/;"	t
BYTE	OBSApi/Utility/Defs.h	31;"	d
BYTES_FLAG	lame/libmp3lame/VbrTag.h	44;"	d
BYTE_NUMBIT	libfaac/bitstream.h	136;"	d
Back	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    UINT                Back;$/;"	m	struct:_D3DBOX
BackBufferCount	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    UINT                BackBufferCount;$/;"	m	struct:_D3DPRESENT_PARAMETERS_
BackBufferFormat	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DFORMAT           BackBufferFormat;$/;"	m	struct:_D3DPRESENT_PARAMETERS_
BackBufferHeight	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    UINT                BackBufferHeight;$/;"	m	struct:_D3DPRESENT_PARAMETERS_
BackBufferWidth	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    UINT                BackBufferWidth;$/;"	m	struct:_D3DPRESENT_PARAMETERS_
BalanceEnergy	libfaac/aacquant.c	/^static void BalanceEnergy(CoderInfo *coderInfo,$/;"	f	file:
BandwidthAnalysis.cpp	Source/BandwidthAnalysis.cpp	1;"	F
BandwidthAnalyzer	Source/BandwidthAnalysis.cpp	/^    BandwidthAnalyzer()$/;"	f	class:BandwidthAnalyzer
BandwidthAnalyzer	Source/BandwidthAnalysis.cpp	/^class BandwidthAnalyzer : public NetworkStream$/;"	c	file:
BaseFrameAllocator	QSVHelper/IntelSupport/include/base_allocator.h	/^class BaseFrameAllocator: public MFXFrameAllocator$/;"	c
BaseFrameAllocator	QSVHelper/IntelSupport/src/base_allocator.cpp	/^BaseFrameAllocator::BaseFrameAllocator()$/;"	f	class:BaseFrameAllocator
BaseLayerPID	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16          BaseLayerPID;$/;"	m
BaseTexture	OBSApi/GraphicsSystem.h	/^class BASE_EXPORT BaseTexture$/;"	c
Basis	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DBASISTYPE        Basis;$/;"	m	struct:_D3DRECTPATCH_INFO
Basis	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DBASISTYPE        Basis;$/;"	m	struct:_D3DTRIPATCH_INFO
BeginFlush	DShowPlugin/CaptureFilter.cpp	/^STDMETHODIMP CapturePin::BeginFlush()$/;"	f	class:CapturePin
BeginFlush	lame/dshow/Mpegac.cpp	/^HRESULT CMpegAudEnc::BeginFlush()$/;"	f	class:CMpegAudEnc
BeginPublishing	Source/OBS.h	/^    virtual void BeginPublishing() {}$/;"	f	class:NetworkStream
BeginPublishing	Source/RTMPPublisher.cpp	/^void RTMPPublisher::BeginPublishing()$/;"	f	class:RTMPPublisher
BeginPublishingInternal	Source/RTMPPublisher.cpp	/^void RTMPPublisher::BeginPublishingInternal()$/;"	f	class:RTMPPublisher
BeginScene	CLRHostPlugin/CLRHostInterop/AbstractImageSource.cpp	/^void AbstractImageSource::BeginScene() $/;"	f	class:AbstractImageSource
BeginScene	CLRHostPlugin/CLRHostPlugin/CLRImageSource.cpp	/^void CLRImageSource::BeginScene()$/;"	f	class:CLRImageSource
BeginScene	CLRHostPlugin/CLRHostPlugin/ImageSourceBridge.h	/^    virtual void BeginScene() $/;"	f	class:ImageSourceBridge
BeginScene	DShowPlugin/DeviceSource.cpp	/^void DeviceSource::BeginScene()$/;"	f	class:DeviceSource
BeginScene	GraphicsCapture/GraphicsCaptureSource.cpp	/^void GraphicsCaptureSource::BeginScene()$/;"	f	class:GraphicsCaptureSource
BeginScene	OBSApi/Scene.cpp	/^void Scene::BeginScene()$/;"	f	class:Scene
BeginScene	OBSApi/Scene.h	/^    virtual void BeginScene() {}$/;"	f	class:ImageSource
BeginScene	Source/DesktopImageSource.cpp	/^    void BeginScene()$/;"	f	class:DesktopImageSource
BehaviorFlags	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    DWORD           BehaviorFlags;$/;"	m	struct:_D3DDEVICE_CREATION_PARAMETERS
Bh	lame/libmp3lame/i386/nasm.h	/^	times (1 & ge13(($$-%%here) & 15) & ~ge14(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Bh,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h$/;"	v
Bh	lame/libmp3lame/i386/nasm.h	/^	times (1 & ge2(($$-%%here) & 15)  & ~ge3(($$-%%here) & 15)  & ~ge%1(($$-%%here) & 15)) DB 08Bh,0C0h$/;"	v
Binaries	lame/doc/html/links.html	/^<h3><a name="Binaries">LAME Binaries:<\/a><\/h3>$/;"	a
BitAllocation	libfaac/util.c	/^unsigned int BitAllocation(double pe, int short_block)$/;"	f
BitDepthChroma	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16  BitDepthChroma;$/;"	m
BitDepthLuma	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16  BitDepthLuma;$/;"	m
BitList	OBSApi/Utility/Template.h	/^    inline BitList() : bitSize(0) {}$/;"	f	class:BitList
BitList	OBSApi/Utility/Template.h	/^class BitList$/;"	c
BitPerSample	libmfx/include/msdk/include/mfxastructures.h	/^    mfxU16  BitPerSample;$/;"	m
BitSearch	libfaac/huffman.c	/^int BitSearch(CoderInfo *coderInfo,$/;"	f
BitStream	libfaac/bitstream.h	/^} BitStream;$/;"	t
BitToAlpha	OBSApi/OBSApi.cpp	/^static inline BYTE BitToAlpha(LPBYTE lp1BitTex, int pixel, bool bInvert)$/;"	f	file:
Bit_stream_struc	lame/libmp3lame/util.h	/^    } Bit_stream_struc;$/;"	t
BitmapImage	Source/BitmapImage.cpp	/^BitmapImage::BitmapImage()$/;"	f	class:BitmapImage
BitmapImage	Source/BitmapImage.h	/^class BitmapImage{$/;"	c
BitmapImage.cpp	Source/BitmapImage.cpp	1;"	F
BitmapImage.h	Source/BitmapImage.h	1;"	F
BitmapImageSource	Source/BitmapImageSource.cpp	/^    BitmapImageSource(XElement *data)$/;"	f	class:BitmapImageSource
BitmapImageSource	Source/BitmapImageSource.cpp	/^class BitmapImageSource : public ImageSource$/;"	c	file:
BitmapImageSource.cpp	Source/BitmapImageSource.cpp	1;"	F
BitmapTransitionSource	Source/BitmapTransitionSource.cpp	/^    BitmapTransitionSource(XElement *data)$/;"	f	class:BitmapTransitionSource
BitmapTransitionSource	Source/BitmapTransitionSource.cpp	/^class BitmapTransitionSource : public ImageSource$/;"	c	file:
BitmapTransitionSource.cpp	Source/BitmapTransitionSource.cpp	1;"	F
Bitrate	libmfx/include/msdk/include/mfxastructures.h	/^    mfxU32  Bitrate;$/;"	m
BitrateIndex	lame/libmp3lame/util.c	/^BitrateIndex(int bRate,      \/* legal rates from 32 to 448 kbps *\/$/;"	f
BitrateLimit	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16      BitrateLimit;           \/* tri-state option *\/$/;"	m
Bits	libmfx/include/msdk/include/mfxjpeg.h	/^        mfxU8   Bits[16];$/;"	m
BladeMP3EncDLL.c	lame/Dll/BladeMP3EncDLL.c	1;"	F
BladeMP3EncDLL.h	lame/Dll/BladeMP3EncDLL.h	1;"	F
Blank	lame/ACM/tinyxml/tinyxmlparser.cpp	/^bool TiXmlText::Blank() const$/;"	f	class:TiXmlText
BlankAudioPlayback	Source/BlankAudioPlayback.cpp	/^    BlankAudioPlayback(CTSTR lpDevice)$/;"	f	struct:BlankAudioPlayback
BlankAudioPlayback	Source/BlankAudioPlayback.cpp	/^struct BlankAudioPlayback$/;"	s	file:
BlankAudioPlayback.cpp	Source/BlankAudioPlayback.cpp	1;"	F
BlendFunction	OBSApi/GraphicsSystem.h	/^inline void  BlendFunction(GSBlendType srcFactor, GSBlendType destFactor, float fFactor=1.0f) {GS->BlendFunction(srcFactor, destFactor, fFactor);}$/;"	f
BlendFunction	Source/D3D10System.cpp	/^void D3D10System::BlendFunction(GSBlendType srcFactor, GSBlendType destFactor, float fFactor)$/;"	f	class:D3D10System
BlockSize	minhook/src/buffer.cpp	/^	const size_t BlockSize = 0x10000;$/;"	v
BlockSwitch	libfaac/psych.h	/^void (*BlockSwitch) (CoderInfo *coderInfo, PsyInfo *psyInfo,$/;"	m
BlockSwitch	libfaac/psychkni.c	/^static void BlockSwitch(CoderInfo * coderInfo, PsyInfo * psyInfo, unsigned int numChannels)$/;"	f	file:
Blt	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	/^HRESULT STDMETHODCALLTYPE Blt(LPDIRECTDRAWSURFACE7 surface, LPRECT lpDestRect, LPDIRECTDRAWSURFACE7 lpDDSrcSurface, LPRECT lpSrcRect, DWORD dwFlags, LPDDBLTFX lpDDBltFx)$/;"	f
Bottom	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    UINT                Bottom;$/;"	m	struct:_D3DBOX
Bottom	libmfx/include/msdk/include/mfxstructures.h	/^        mfxU32  Bottom;$/;"	m
Bounds	OBSApi/Utility/XMath.h	/^    inline Bounds()                                                 {}$/;"	f	struct:Bounds
Bounds	OBSApi/Utility/XMath.h	/^    inline Bounds(const Vect &a, const Vect &b) : Min(a), Max(b)    {}$/;"	f	struct:Bounds
Bounds	OBSApi/Utility/XMath.h	/^struct BASE_EXPORT Bounds$/;"	s
BoundsInside	OBSApi/Utility/XMath.h	/^    inline BOOL BoundsInside(const Bounds &test) const$/;"	f	struct:Bounds
Brightness	libmfx/include/msdk/include/mfxstructures.h	/^    mfxF64   Brightness;$/;"	m
Browser	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserClient.cs	/^namespace CLRBrowserSourcePlugin.Browser$/;"	n
Browser	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserDisplayHandler.cs	/^namespace CLRBrowserSourcePlugin.Browser$/;"	n
Browser	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserLifeSpanHandler.cs	/^namespace CLRBrowserSourcePlugin.Browser$/;"	n
Browser	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserLoadHandler.cs	/^namespace CLRBrowserSourcePlugin.Browser$/;"	n
Browser	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserManager.cs	/^namespace CLRBrowserSourcePlugin.Browser$/;"	n
Browser	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserRenderHandler.cs	/^namespace CLRBrowserSourcePlugin.Browser$/;"	n
Browser	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserTask.cs	/^namespace CLRBrowserSourcePlugin.Browser$/;"	n
Browser	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserWrapper.cs	/^namespace CLRBrowserSourcePlugin.Browser$/;"	n
Browser	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/RenderProcess.cs	/^namespace CLRBrowserSourcePlugin.Browser$/;"	n
Browser	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/SharedTexture.cs	/^namespace CLRBrowserSourcePlugin.Browser$/;"	n
BrowserApp	CLRBrowserSourcePlugin/CLRBrowserSourcePipe/CLRBrowserSourcePipe.cpp	/^public ref class BrowserApp : public CefApp$/;"	c	file:
BrowserApp	CLRBrowserSourcePlugin/Client/BrowserApp.cs	/^        public BrowserApp()$/;"	m	class:Shared.BrowserApp
BrowserApp	CLRBrowserSourcePlugin/Client/BrowserApp.cs	/^    internal class BrowserApp : CefApp$/;"	c	namespace:Shared
BrowserApp	CLRBrowserSourcePlugin/Plugin/Shared/BrowserApp.cs	/^        public BrowserApp(String[] arguments,$/;"	m	class:Shared.BrowserApp
BrowserApp	CLRBrowserSourcePlugin/Plugin/Shared/BrowserApp.cs	/^    internal class BrowserApp : CefApp$/;"	c	namespace:Shared
BrowserApp.cs	CLRBrowserSourcePlugin/Client/BrowserApp.cs	1;"	F
BrowserApp.cs	CLRBrowserSourcePlugin/Plugin/Shared/BrowserApp.cs	1;"	F
BrowserClient	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserClient.cs	/^        public BrowserClient()$/;"	m	class:Browser.BrowserClient
BrowserClient	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserClient.cs	/^    internal class BrowserClient : CefClient$/;"	c	namespace:Browser
BrowserClient.cs	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserClient.cs	1;"	F
BrowserConfig	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserWrapper.cs	/^        public BrowserConfig BrowserConfig { get; private set; }$/;"	p	class:Browser.BrowserWrapper
BrowserConfig	CLRBrowserSourcePlugin/Plugin/Shared/BrowserConfig.cs	/^    internal class BrowserConfig$/;"	c	namespace:Shared
BrowserConfig.cs	CLRBrowserSourcePlugin/Plugin/Shared/BrowserConfig.cs	1;"	F
BrowserDisplayHandler	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserDisplayHandler.cs	/^    internal class BrowserDisplayHandler : CefDisplayHandler$/;"	c	namespace:Browser
BrowserDisplayHandler.cs	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserDisplayHandler.cs	1;"	F
BrowserInstanceSettings	CLRBrowserSourcePlugin/Plugin/Shared/BrowserConfig.cs	/^        public BrowserInstanceSettings BrowserInstanceSettings { get; set; }$/;"	p	class:Shared.BrowserConfig
BrowserInstanceSettings	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public BrowserInstanceSettings()$/;"	m	class:Shared.BrowserInstanceSettings
BrowserInstanceSettings	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^    public class BrowserInstanceSettings : AbstractSettings$/;"	c	namespace:Shared
BrowserLifeSpanHandler	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserLifeSpanHandler.cs	/^    internal class BrowserLifeSpanHandler : CefLifeSpanHandler$/;"	c	namespace:Browser
BrowserLifeSpanHandler.cs	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserLifeSpanHandler.cs	1;"	F
BrowserLoadHandler	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserLoadHandler.cs	/^    internal class BrowserLoadHandler : CefLoadHandler$/;"	c	namespace:Browser
BrowserLoadHandler.cs	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserLoadHandler.cs	1;"	F
BrowserManager	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserManager.cs	/^        public BrowserManager()$/;"	m	class:Browser.BrowserManager
BrowserManager	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserManager.cs	/^    internal sealed class BrowserManager$/;"	c	namespace:Browser
BrowserManager.cs	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserManager.cs	1;"	F
BrowserPlugin	CLRBrowserSourcePlugin/Plugin/Shared/BrowserPlugin.cs	/^        public BrowserPlugin(CefWebPluginInfo webPluginInfo)$/;"	m	class:Shared.BrowserPlugin
BrowserPlugin	CLRBrowserSourcePlugin/Plugin/Shared/BrowserPlugin.cs	/^    public class BrowserPlugin$/;"	c	namespace:Shared
BrowserPlugin.cs	CLRBrowserSourcePlugin/Plugin/Shared/BrowserPlugin.cs	1;"	F
BrowserPluginManager	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserPluginManager.cs	/^        internal BrowserPluginManager()$/;"	m	class:RemoteBrowser.BrowserPluginManager	file:
BrowserPluginManager	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserPluginManager.cs	/^    class BrowserPluginManager$/;"	c	namespace:RemoteBrowser
BrowserPluginManager.cs	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserPluginManager.cs	1;"	F
BrowserPluginSettings	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^    public class BrowserPluginSettings$/;"	c	namespace:Shared
BrowserPluginVisitor	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserPluginVisitor.cs	/^        public BrowserPluginVisitor(ManualResetEventSlim disposedEvent, Action<CefWebPluginInfo> action)$/;"	m	class:RemoteBrowser.BrowserPluginVisitor
BrowserPluginVisitor	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserPluginVisitor.cs	/^    internal class BrowserPluginVisitor : CefWebPluginInfoVisitor$/;"	c	namespace:RemoteBrowser
BrowserPluginVisitor.cs	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserPluginVisitor.cs	1;"	F
BrowserProcessHandler	CLRBrowserSourcePlugin/Plugin/Shared/BrowserApp.cs	/^            internal BrowserProcessHandler(ManualResetEventSlim contextInitializedEvent)$/;"	m	class:Shared.BrowserApp.BrowserProcessHandler	file:
BrowserProcessHandler	CLRBrowserSourcePlugin/Plugin/Shared/BrowserApp.cs	/^        private class BrowserProcessHandler : CefBrowserProcessHandler$/;"	c	class:Shared.BrowserApp
BrowserRenderHandler	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserRenderHandler.cs	/^        public BrowserRenderHandler()$/;"	m	class:Browser.BrowserRenderHandler
BrowserRenderHandler	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserRenderHandler.cs	/^    internal class BrowserRenderHandler : CefRenderHandler$/;"	c	namespace:Browser
BrowserRenderHandler.cs	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserRenderHandler.cs	1;"	F
BrowserRenderProcessHandler	CLRBrowserSourcePlugin/Client/BrowserApp.cs	/^        private class BrowserRenderProcessHandler : CefRenderProcessHandler$/;"	c	class:Shared.BrowserApp
BrowserRuntimeSettings	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public BrowserRuntimeSettings()$/;"	m	class:Shared.BrowserRuntimeSettings
BrowserRuntimeSettings	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^    public class BrowserRuntimeSettings$/;"	c	namespace:Shared
BrowserSettings	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public BrowserSettings()$/;"	m	class:Shared.BrowserSettings
BrowserSettings	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^    public class BrowserSettings$/;"	c	namespace:Shared
BrowserSettings.cs	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	1;"	F
BrowserSettingsPane	CLRBrowserSourcePlugin/Plugin/BrowserSettingsPane.cs	/^        public BrowserSettingsPane()$/;"	m	class:CLRBrowserSourcePlugin.BrowserSettingsPane
BrowserSettingsPane	CLRBrowserSourcePlugin/Plugin/BrowserSettingsPane.cs	/^    class BrowserSettingsPane : AbstractWPFSettingsPane$/;"	c	namespace:CLRBrowserSourcePlugin
BrowserSettingsPane.cs	CLRBrowserSourcePlugin/Plugin/BrowserSettingsPane.cs	1;"	F
BrowserSource	CLRBrowserSourcePlugin/Plugin/BrowserSource.cs	/^        public BrowserSource(XElement configElement)$/;"	m	class:CLRBrowserSourcePlugin.BrowserSource
BrowserSource	CLRBrowserSourcePlugin/Plugin/BrowserSource.cs	/^    internal class BrowserSource : AbstractImageSource, IDisposable$/;"	c	namespace:CLRBrowserSourcePlugin
BrowserSource.cs	CLRBrowserSourcePlugin/Plugin/BrowserSource.cs	1;"	F
BrowserSourceFactory	CLRBrowserSourcePlugin/Plugin/BrowserSourceFactory.cs	/^        public BrowserSourceFactory()$/;"	m	class:CLRBrowserSourcePlugin.BrowserSourceFactory
BrowserSourceFactory	CLRBrowserSourcePlugin/Plugin/BrowserSourceFactory.cs	/^    internal class BrowserSourceFactory : AbstractImageSourceFactory$/;"	c	namespace:CLRBrowserSourcePlugin
BrowserSourceFactory.cs	CLRBrowserSourcePlugin/Plugin/BrowserSourceFactory.cs	1;"	F
BrowserSourceSettings	CLRBrowserSourcePlugin/Plugin/Shared/BrowserConfig.cs	/^        public BrowserSourceSettings BrowserSourceSettings { get; set; }$/;"	p	class:Shared.BrowserConfig
BrowserSourceSettings	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public BrowserSourceSettings()$/;"	m	class:Shared.BrowserSourceSettings
BrowserSourceSettings	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^    public class BrowserSourceSettings$/;"	c	namespace:Shared
BrowserTask	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserTask.cs	/^        private BrowserTask(Action task)$/;"	m	class:Browser.BrowserTask	file:
BrowserTask	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserTask.cs	/^    internal class BrowserTask : CefTask$/;"	c	namespace:Browser
BrowserTask.cs	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserTask.cs	1;"	F
BrowserWrapper	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserWrapper.cs	/^        public BrowserWrapper()$/;"	m	class:Browser.BrowserWrapper
BrowserWrapper	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserWrapper.cs	/^    internal class BrowserWrapper$/;"	c	namespace:Browser
BrowserWrapper.cs	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserWrapper.cs	1;"	F
BufSize	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16      BufSize;    \/* payload buffer size in bytes *\/$/;"	m
Buffer	OBSApi/Utility/Template.h	/^    List<BYTE> &Buffer;$/;"	m	class:BufferOutputSerializer
Buffer	OBSApi/Utility/XFile.h	/^    BYTE Buffer[2048];$/;"	m	class:XFileInputSerializer
Buffer	OBSApi/Utility/XFile.h	/^    LPBYTE Buffer;$/;"	m	class:XFileOutputSerializer
BufferCount	extras/dxgi1_2.h	/^    UINT BufferCount;$/;"	m	struct:DXGI_SWAP_CHAIN_DESC1
BufferId	libmfx/include/msdk/include/mfxcommon.h	/^    mfxU32  BufferId;$/;"	m
BufferInputSerializer	OBSApi/Utility/Template.h	/^    BufferInputSerializer(const List<BYTE> &InBuffer) : buffer(InBuffer.Array()), bufferSize(InBuffer.Num()), position(0) {}$/;"	f	class:BufferInputSerializer
BufferInputSerializer	OBSApi/Utility/Template.h	/^    BufferInputSerializer(const void *pBuffer, DWORD dwSize) : buffer((const LPBYTE)pBuffer), bufferSize(dwSize), position(0) {}$/;"	f	class:BufferInputSerializer
BufferInputSerializer	OBSApi/Utility/Template.h	/^class BASE_EXPORT BufferInputSerializer : public Serializer$/;"	c
BufferNumBit	libfaac/bitstream.c	/^static long BufferNumBit(BitStream *bitStream)$/;"	f	file:
BufferOutputSerializer	OBSApi/Utility/Template.h	/^    BufferOutputSerializer(List<BYTE> &InBuffer, BOOL bAppend=TRUE)$/;"	f	class:BufferOutputSerializer
BufferOutputSerializer	OBSApi/Utility/Template.h	/^class BASE_EXPORT BufferOutputSerializer : public Serializer$/;"	c
BufferSizeInKB	libmfx/include/msdk/include/mfxstructures.h	/^            mfxU16  BufferSizeInKB;$/;"	m
BufferSz	libmfx/include/msdk/include/mfxcommon.h	/^    mfxU32  BufferSz;$/;"	m
BufferUsage	extras/dxgi1_2.h	/^    DXGI_USAGE BufferUsage;$/;"	m	struct:DXGI_SWAP_CHAIN_DESC1
BufferVideoData	Source/OBSVideoCapture.cpp	/^bool OBS::BufferVideoData(const List<DataPacket> &inputPackets, const List<PacketType> &inputTypes, DWORD timestamp, DWORD out_pts, QWORD firstFrameTime, VideoSegment &segmentOut)$/;"	f	class:OBS
BufferedDataPacket	Source/DataPacketHelpers.h	/^    BufferedDataPacket(Func &&func) : DataPacket(), func(std::forward<Func>(func)) {}$/;"	f	struct:BufferedDataPacket
BufferedDataPacket	Source/DataPacketHelpers.h	/^struct BufferedDataPacket : DataPacket$/;"	s
BufferedSend	Source/RTMPPublisher.cpp	/^int RTMPPublisher::BufferedSend(RTMPSockBuf *sb, const char *buf, int len, RTMPPublisher *network)$/;"	f	class:RTMPPublisher
BuildBitrateTable	lame/ACM/ACM.cpp	/^void ACM::BuildBitrateTable()$/;"	f	class:ACM
BwpInfo	libfaac/coder.h	/^} BwpInfo;$/;"	t
ByteAlign	libfaac/bitstream.c	/^static int ByteAlign(BitStream *bitStream, int writeFlag, int bitsSoFar)$/;"	f	file:
ByteOrder	lame/frontend/main.h	/^typedef enum ByteOrder { ByteOrderLittleEndian, ByteOrderBigEndian } ByteOrder;$/;"	g
ByteOrder	lame/frontend/main.h	/^typedef enum ByteOrder { ByteOrderLittleEndian, ByteOrderBigEndian } ByteOrder;$/;"	t
ByteOrderBigEndian	lame/frontend/main.h	/^typedef enum ByteOrder { ByteOrderLittleEndian, ByteOrderBigEndian } ByteOrder;$/;"	e	enum:ByteOrder
ByteOrderLittleEndian	lame/frontend/main.h	/^typedef enum ByteOrder { ByteOrderLittleEndian, ByteOrderBigEndian } ByteOrder;$/;"	e	enum:ByteOrder
C	lame/frontend/gtkanal.c	1333;"	d	file:
C	lame/frontend/gtkanal.c	1377;"	d	file:
C64	OBSApi/Utility/XT.h	39;"	d
CALL_ABS	minhook/src/trampoline.cpp	/^	typedef JMP_ABS CALL_ABS, JCC_REL;$/;"	t	namespace:MinHook::<anonymous>	file:
CALL_REL	minhook/src/trampoline.cpp	/^	typedef JMP_REL CALL_REL;$/;"	t	namespace:MinHook::<anonymous>	file:
CAPTUREREGIONCLASS	Source/DesktopImageSource.cpp	946;"	d	file:
CAPTURETYPE_MEMORY	GraphicsCapture/GlobalCaptureStuff.h	41;"	d
CAPTURETYPE_SHAREDTEX	GraphicsCapture/GlobalCaptureStuff.h	42;"	d
CAPTURE_READY_EVENT	GraphicsCapture/GlobalCaptureStuff.h	30;"	d
CAVLC	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16      CAVLC;                  \/* tri-state option *\/$/;"	m
CBANDS	lame/libmp3lame/encoder.h	96;"	d
CBR_iteration_loop	lame/libmp3lame/quantize.c	/^CBR_iteration_loop(lame_internal_flags * gfc, const FLOAT pe[2][2],$/;"	f
CC	lame/ACM/ADbg/Makefile	/^CC = gcc$/;"	m
CC	lame/ACM/Makefile	/^CC = gcc$/;"	m
CC	lame/ACM/ddk/Makefile	/^CC = gcc$/;"	m
CC	lame/ACM/tinyxml/Makefile	/^CC = gcc$/;"	m
CC	lame/Dll/Makefile	/^CC = gcc$/;"	m
CC	lame/Makefile	/^CC = gcc$/;"	m
CC	lame/debian/Makefile	/^CC = gcc$/;"	m
CC	lame/doc/Makefile	/^CC = gcc$/;"	m
CC	lame/doc/html/Makefile	/^CC = gcc$/;"	m
CC	lame/doc/man/Makefile	/^CC = gcc$/;"	m
CC	lame/dshow/Makefile	/^CC = gcc$/;"	m
CC	lame/frontend/Makefile	/^CC = gcc$/;"	m
CC	lame/include/Makefile	/^CC = gcc$/;"	m
CC	lame/libmp3lame/Makefile	/^CC = gcc$/;"	m
CC	lame/libmp3lame/i386/Makefile	/^CC = gcc$/;"	m
CC	lame/libmp3lame/vector/Makefile	/^CC = gcc$/;"	m
CC	lame/mac/Makefile	/^CC = gcc$/;"	m
CC	lame/macosx/English.lproj/Makefile	/^CC = gcc$/;"	m
CC	lame/macosx/LAME.xcodeproj/Makefile	/^CC = gcc$/;"	m
CC	lame/macosx/Makefile	/^CC = gcc$/;"	m
CC	lame/misc/Makefile	/^CC = gcc$/;"	m
CC	lame/mpglib/Makefile	/^CC = gcc$/;"	m
CC	lame/vc_solution/Makefile	/^CC = gcc$/;"	m
CCDEPMODE	lame/ACM/ADbg/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	lame/ACM/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	lame/ACM/ddk/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	lame/ACM/tinyxml/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	lame/Dll/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	lame/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	lame/debian/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	lame/doc/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	lame/doc/html/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	lame/doc/man/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	lame/dshow/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	lame/frontend/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	lame/include/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	lame/libmp3lame/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	lame/libmp3lame/i386/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	lame/libmp3lame/vector/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	lame/mac/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	lame/macosx/English.lproj/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	lame/macosx/LAME.xcodeproj/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	lame/macosx/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	lame/misc/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	lame/mpglib/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	lame/vc_solution/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCGetColor	OBSApi/ColorControl.cpp	/^DWORD CCGetColor(HWND hwnd)$/;"	f
CCGetCustomColors	OBSApi/ColorControl.cpp	/^void CCGetCustomColors(DWORD *colors)$/;"	f
CCLD	lame/frontend/Makefile	/^CCLD = $(CC)$/;"	m
CCLD	lame/libmp3lame/Makefile	/^CCLD = $(CC)$/;"	m
CCLD	lame/libmp3lame/i386/Makefile	/^CCLD = $(CC)$/;"	m
CCLD	lame/libmp3lame/vector/Makefile	/^CCLD = $(CC)$/;"	m
CCLD	lame/misc/Makefile	/^CCLD = $(CC)$/;"	m
CCLD	lame/mpglib/Makefile	/^CCLD = $(CC)$/;"	m
CCN_CHANGED	OBSApi/ColorControl.h	35;"	d
CCSetColor	OBSApi/ColorControl.cpp	/^void  CCSetColor(HWND hwnd, DWORD color)$/;"	f
CCSetColor	OBSApi/ColorControl.cpp	/^void  CCSetColor(HWND hwnd, const Color3 &color)$/;"	f
CCSetCustomColors	OBSApi/ColorControl.cpp	/^void CCSetCustomColors(DWORD *colors)$/;"	f
CCStruct	OBSApi/ColorControl.cpp	/^struct CCStruct$/;"	s	file:
CD3D11Device	QSVHelper/IntelSupport/include/d3d11_device.h	/^class CD3D11Device: public CHWDevice$/;"	c
CD3D11Device	QSVHelper/IntelSupport/src/d3d11_device.cpp	/^CD3D11Device::CD3D11Device()$/;"	f	class:CD3D11Device
CDECL	lame/include/lame.h	41;"	d
CDECL	lame/include/lame.h	42;"	d
CDECL	lame/include/lame.h	44;"	d
CDPATH	lame/ACM/ADbg/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
CDPATH	lame/ACM/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
CDPATH	lame/ACM/ddk/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
CDPATH	lame/ACM/tinyxml/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
CDPATH	lame/Dll/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
CDPATH	lame/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
CDPATH	lame/debian/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
CDPATH	lame/doc/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
CDPATH	lame/doc/html/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
CDPATH	lame/doc/man/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
CDPATH	lame/dshow/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
CDPATH	lame/frontend/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
CDPATH	lame/include/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
CDPATH	lame/libmp3lame/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
CDPATH	lame/libmp3lame/i386/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
CDPATH	lame/libmp3lame/vector/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
CDPATH	lame/mac/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
CDPATH	lame/macosx/English.lproj/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
CDPATH	lame/macosx/LAME.xcodeproj/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
CDPATH	lame/macosx/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
CDPATH	lame/misc/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
CDPATH	lame/mpglib/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
CDPATH	lame/vc_solution/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
CEncoder	lame/dshow/Encoder.cpp	/^CEncoder::CEncoder() :$/;"	f	class:CEncoder
CEncoder	lame/dshow/Encoder.h	/^class CEncoder$/;"	c
CFLAGS	lame/ACM/ADbg/Makefile	/^CFLAGS =  -Wall -pipe -m64$/;"	m
CFLAGS	lame/ACM/Makefile	/^CFLAGS =  -Wall -pipe -m64$/;"	m
CFLAGS	lame/ACM/ddk/Makefile	/^CFLAGS =  -Wall -pipe -m64$/;"	m
CFLAGS	lame/ACM/tinyxml/Makefile	/^CFLAGS =  -Wall -pipe -m64$/;"	m
CFLAGS	lame/Dll/Makefile	/^CFLAGS =  -Wall -pipe -m64$/;"	m
CFLAGS	lame/Makefile	/^CFLAGS =  -Wall -pipe -m64$/;"	m
CFLAGS	lame/debian/Makefile	/^CFLAGS =  -Wall -pipe -m64$/;"	m
CFLAGS	lame/doc/Makefile	/^CFLAGS =  -Wall -pipe -m64$/;"	m
CFLAGS	lame/doc/html/Makefile	/^CFLAGS =  -Wall -pipe -m64$/;"	m
CFLAGS	lame/doc/man/Makefile	/^CFLAGS =  -Wall -pipe -m64$/;"	m
CFLAGS	lame/dshow/Makefile	/^CFLAGS =  -Wall -pipe -m64$/;"	m
CFLAGS	lame/frontend/Makefile	/^CFLAGS =  -Wall -pipe -m64    $/;"	m
CFLAGS	lame/include/Makefile	/^CFLAGS =  -Wall -pipe -m64$/;"	m
CFLAGS	lame/libmp3lame/Makefile	/^CFLAGS =  -Wall -pipe -m64$/;"	m
CFLAGS	lame/libmp3lame/i386/Makefile	/^CFLAGS =  -Wall -pipe -m64$/;"	m
CFLAGS	lame/libmp3lame/vector/Makefile	/^CFLAGS =  -Wall -pipe -m64$/;"	m
CFLAGS	lame/mac/Makefile	/^CFLAGS =  -Wall -pipe -m64$/;"	m
CFLAGS	lame/macosx/English.lproj/Makefile	/^CFLAGS =  -Wall -pipe -m64$/;"	m
CFLAGS	lame/macosx/LAME.xcodeproj/Makefile	/^CFLAGS =  -Wall -pipe -m64$/;"	m
CFLAGS	lame/macosx/Makefile	/^CFLAGS =  -Wall -pipe -m64$/;"	m
CFLAGS	lame/misc/Makefile	/^CFLAGS =  -Wall -pipe -m64$/;"	m
CFLAGS	lame/mpglib/Makefile	/^CFLAGS =  -Wall -pipe -m64$/;"	m
CFLAGS	lame/vc_solution/Makefile	/^CFLAGS =  -Wall -pipe -m64$/;"	m
CGI_ENVIRONMENT_SIZE	Source/mongoose.c	1382;"	d	file:
CGI_INTERPRETER	Source/mongoose.c	/^  CGI_INTERPRETER,$/;"	e	file:
CGI_PATTERN	Source/mongoose.c	/^  CGI_PATTERN,$/;"	e	file:
CHALLENGE2_LEN	librtmp/rtmp.c	2861;"	d	file:
CHANGED_FLAG	lame/libmp3lame/id3tag.h	6;"	d
CHANNEL_H	libfaac/channels.h	23;"	d
CHAR	OBSApi/Utility/Defs.h	/^typedef char                CHAR,*LPCHAR;$/;"	t
CHAR	OBSApi/Utility/Defs.h	44;"	d
CHARS_PER_LINE	librtmp/cencode.c	/^const int CHARS_PER_LINE = 72;$/;"	v
CHECK_LOAD_FUNC	ObsNvenc/src/cudaDynload.cpp	34;"	d	file:
CHP_VERSION	CLRHostPlugin/CLRHostPlugin/Localization.h	11;"	d
CHUNK	librtmp/hashswf.c	279;"	d	file:
CHWDevice	QSVHelper/IntelSupport/include/hw_device.h	/^class CHWDevice$/;"	c
CLASS_ID	lame/frontend/console.c	40;"	d	file:
CLEANFILES	lame/Makefile	/^CLEANFILES = testcase.new.mp3$/;"	m
CLEANFILES	lame/frontend/Makefile	/^CLEANFILES = lclint.txt $(EXTRA_PROGRAMS)$/;"	m
CLEANFILES	lame/libmp3lame/Makefile	/^CLEANFILES = lclint.txt$/;"	m
CLEANFILES	lame/libmp3lame/i386/Makefile	/^CLEANFILES = \\$/;"	m
CLEANFILES	lame/libmp3lame/vector/Makefile	/^CLEANFILES = lclint.txt$/;"	m
CLEANFILES	lame/misc/Makefile	/^CLEANFILES = $(EXTRA_PROGRAMS)$/;"	m
CLK	lame/misc/scalartest.c	6;"	d	file:
CLOCKS_PER_SEC	lame/frontend/lametime.c	53;"	d	file:
CLRApiCommon.h	CLRHostPlugin/CLRHostPlugin/CLRApiCommon.h	1;"	F
CLRBrowserSourceClient	CLRBrowserSourcePlugin/Client/CLRBrowserSourceClient.cs	/^    internal class CLRBrowserSourceClient$/;"	c	namespace:CLRBrowserSourceClient
CLRBrowserSourceClient	CLRBrowserSourcePlugin/Client/CLRBrowserSourceClient.cs	/^namespace CLRBrowserSourceClient$/;"	n
CLRBrowserSourceClient.cs	CLRBrowserSourcePlugin/Client/CLRBrowserSourceClient.cs	1;"	F
CLRBrowserSourcePipe.cpp	CLRBrowserSourcePlugin/CLRBrowserSourcePipe/CLRBrowserSourcePipe.cpp	1;"	F
CLRBrowserSourcePlugin	CLRBrowserSourcePlugin/Plugin/BrowserSettingsPane.cs	/^namespace CLRBrowserSourcePlugin$/;"	n
CLRBrowserSourcePlugin	CLRBrowserSourcePlugin/Plugin/BrowserSource.cs	/^namespace CLRBrowserSourcePlugin$/;"	n
CLRBrowserSourcePlugin	CLRBrowserSourcePlugin/Plugin/BrowserSourceFactory.cs	/^namespace CLRBrowserSourcePlugin$/;"	n
CLRBrowserSourcePlugin	CLRBrowserSourcePlugin/Plugin/CLRBrowserSourcePlugin.cs	/^        public CLRBrowserSourcePlugin()$/;"	m	class:CLRBrowserSourcePlugin.CLRBrowserSourcePlugin
CLRBrowserSourcePlugin	CLRBrowserSourcePlugin/Plugin/CLRBrowserSourcePlugin.cs	/^    public class CLRBrowserSourcePlugin : AbstractPlugin$/;"	c	namespace:CLRBrowserSourcePlugin
CLRBrowserSourcePlugin	CLRBrowserSourcePlugin/Plugin/CLRBrowserSourcePlugin.cs	/^namespace CLRBrowserSourcePlugin$/;"	n
CLRBrowserSourcePlugin	CLRBrowserSourcePlugin/Plugin/ConfigDialog.xaml.cs	/^namespace CLRBrowserSourcePlugin$/;"	n
CLRBrowserSourcePlugin	CLRBrowserSourcePlugin/Plugin/SettingsPane.xaml.cs	/^namespace CLRBrowserSourcePlugin$/;"	n
CLRBrowserSourcePlugin.cs	CLRBrowserSourcePlugin/Plugin/CLRBrowserSourcePlugin.cs	1;"	F
CLRHost	CLRHostPlugin/CLRHostPlugin/CLRHost.cpp	/^CLRHost::CLRHost(TCHAR *clrRuntimeVersion, CLRHostApi *clrApi) $/;"	f	class:CLRHost
CLRHost	CLRHostPlugin/CLRHostPlugin/CLRHost.h	/^class CLRHost {$/;"	c
CLRHost.cpp	CLRHostPlugin/CLRHostPlugin/CLRHost.cpp	1;"	F
CLRHost.h	CLRHostPlugin/CLRHostPlugin/CLRHost.h	1;"	F
CLRHostApi	CLRHostPlugin/CLRHostPlugin/CLRHostApi.h	/^class CLRHostApi $/;"	c
CLRHostApi.cpp	CLRHostPlugin/CLRHostPlugin/CLRHostApi.cpp	1;"	F
CLRHostApi.h	CLRHostPlugin/CLRHostPlugin/CLRHostApi.h	1;"	F
CLRHostPlugin	CLRHostPlugin/CLRHostPlugin/CLRHostPlugin.cpp	/^CLRHostPlugin::CLRHostPlugin() {$/;"	f	class:CLRHostPlugin
CLRHostPlugin	CLRHostPlugin/CLRHostPlugin/CLRHostPlugin.h	/^class CLRHostPlugin$/;"	c
CLRHostPlugin.cpp	CLRHostPlugin/CLRHostPlugin/CLRHostPlugin.cpp	1;"	F
CLRHostPlugin.h	CLRHostPlugin/CLRHostPlugin/CLRHostPlugin.h	1;"	F
CLRImageSource	CLRHostPlugin/CLRHostPlugin/CLRImageSource.h	/^class CLRImageSource : public CLRObject$/;"	c
CLRImageSource.cpp	CLRHostPlugin/CLRHostPlugin/CLRImageSource.cpp	1;"	F
CLRImageSource.h	CLRHostPlugin/CLRHostPlugin/CLRImageSource.h	1;"	F
CLRImageSourceFactory	CLRHostPlugin/CLRHostPlugin/CLRImageSourceFactory.h	/^class CLRImageSourceFactory : public CLRObject$/;"	c
CLRImageSourceFactory.cpp	CLRHostPlugin/CLRHostPlugin/CLRImageSourceFactory.cpp	1;"	F
CLRImageSourceFactory.h	CLRHostPlugin/CLRHostPlugin/CLRImageSourceFactory.h	1;"	F
CLROBS	CLRHostPlugin/CLRHostInterop/API.h	/^namespace CLROBS $/;"	n
CLROBS	CLRHostPlugin/CLRHostInterop/AbstractImageSource.h	/^namespace CLROBS {$/;"	n
CLROBS	CLRHostPlugin/CLRHostInterop/AbstractImageSourceFactory.h	/^namespace CLROBS $/;"	n
CLROBS	CLRHostPlugin/CLRHostInterop/AbstractPlugin.h	/^namespace CLROBS $/;"	n
CLROBS	CLRHostPlugin/CLRHostInterop/AbstractWPFSettingsPane.h	/^namespace CLROBS $/;"	n
CLROBS	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^namespace CLROBS $/;"	n
CLROBS	CLRHostPlugin/CLRHostInterop/ImageSource.h	/^namespace CLROBS {$/;"	n
CLROBS	CLRHostPlugin/CLRHostInterop/ImageSourceFactory.h	/^namespace CLROBS {$/;"	n
CLROBS	CLRHostPlugin/CLRHostInterop/OBSUtils.h	/^namespace CLROBS {$/;"	n
CLROBS	CLRHostPlugin/CLRHostInterop/Plugin.h	/^namespace CLROBS {$/;"	n
CLROBS	CLRHostPlugin/CLRHostInterop/SettingsPane.h	/^namespace CLROBS {$/;"	n
CLROBS	CLRHostPlugin/CLRHostInterop/Vector2.h	/^namespace CLROBS {$/;"	n
CLROBS	CLRHostPlugin/CLRHostInterop/XElement.h	/^namespace CLROBS {$/;"	n
CLRObject	CLRHostPlugin/CLRHostPlugin/CLRObject.h	/^class CLRObject $/;"	c
CLRObject.cpp	CLRHostPlugin/CLRHostPlugin/CLRObject.cpp	1;"	F
CLRObject.h	CLRHostPlugin/CLRHostPlugin/CLRObject.h	1;"	F
CLRObjectRef	CLRHostPlugin/CLRHostPlugin/CLRObjectRef.cpp	/^CLRObjectRef::CLRObjectRef()$/;"	f	class:CLRObjectRef
CLRObjectRef	CLRHostPlugin/CLRHostPlugin/CLRObjectRef.cpp	/^CLRObjectRef::CLRObjectRef(void *objectRef, void *typeRef)$/;"	f	class:CLRObjectRef
CLRObjectRef	CLRHostPlugin/CLRHostPlugin/CLRObjectRef.h	/^class CLR_API CLRObjectRef$/;"	c
CLRObjectRef.cpp	CLRHostPlugin/CLRHostPlugin/CLRObjectRef.cpp	1;"	F
CLRObjectRef.h	CLRHostPlugin/CLRHostPlugin/CLRObjectRef.h	1;"	F
CLRPlugin	CLRHostPlugin/CLRHostPlugin/CLRPlugin.h	/^class CLRPlugin : public CLRObject$/;"	c
CLRPlugin.cpp	CLRHostPlugin/CLRHostPlugin/CLRPlugin.cpp	1;"	F
CLRPlugin.h	CLRHostPlugin/CLRHostPlugin/CLRPlugin.h	1;"	F
CLRSettingsPane	CLRHostPlugin/CLRHostPlugin/CLRSettingsPane.h	/^class CLRSettingsPane : public CLRObject$/;"	c
CLRSettingsPane.cpp	CLRHostPlugin/CLRHostPlugin/CLRSettingsPane.cpp	1;"	F
CLRSettingsPane.h	CLRHostPlugin/CLRHostPlugin/CLRSettingsPane.h	1;"	F
CLRVector2	CLRHostPlugin/CLRHostPlugin/CLRVector2.h	/^class CLRVector2 : public CLRObject$/;"	c
CLRVector2.cpp	CLRHostPlugin/CLRHostPlugin/CLRVector2.cpp	1;"	F
CLRVector2.h	CLRHostPlugin/CLRHostPlugin/CLRVector2.h	1;"	F
CLRXElement	CLRHostPlugin/CLRHostPlugin/CLRXElement.h	/^class CLRXElement : public CLRObject$/;"	c
CLRXElement.cpp	CLRHostPlugin/CLRHostPlugin/CLRXElement.cpp	1;"	F
CLRXElement.h	CLRHostPlugin/CLRHostPlugin/CLRXElement.h	1;"	F
CLR_API	CLRHostPlugin/CLRHostPlugin/CLRApiCommon.h	4;"	d
CLR_API	CLRHostPlugin/CLRHostPlugin/CLRApiCommon.h	6;"	d
CMAEAbout	lame/dshow/aboutprp.cpp	/^CMAEAbout::CMAEAbout(LPUNKNOWN lpunk, HRESULT *phr)$/;"	f	class:CMAEAbout
CMAEAbout	lame/dshow/aboutprp.h	/^class CMAEAbout: public CBasePropertyPage$/;"	c
CMpegAudEnc	lame/dshow/Mpegac.cpp	/^CMpegAudEnc::CMpegAudEnc(LPUNKNOWN lpunk, HRESULT *phr)$/;"	f	class:CMpegAudEnc
CMpegAudEnc	lame/dshow/Mpegac.h	/^class CMpegAudEnc : public CTransformFilter,$/;"	c
CMpegAudEncOutPin	lame/dshow/Mpegac.cpp	/^CMpegAudEncOutPin::CMpegAudEncOutPin( CMpegAudEnc * pFilter, HRESULT * pHr ) :$/;"	f	class:CMpegAudEncOutPin
CMpegAudEncOutPin	lame/dshow/Mpegac.h	/^class CMpegAudEncOutPin : public CTransformOutputPin, public IAMStreamConfig$/;"	c
CMpegAudEncPropertyPage	lame/dshow/PropPage.cpp	/^CMpegAudEncPropertyPage::CMpegAudEncPropertyPage(LPUNKNOWN punk, HRESULT *phr)$/;"	f	class:CMpegAudEncPropertyPage
CMpegAudEncPropertyPage	lame/dshow/PropPage.h	/^class CMpegAudEncPropertyPage : public CBasePropertyPage $/;"	c
CMpegAudEncPropertyPageAdv	lame/dshow/PropPage_adv.cpp	/^CMpegAudEncPropertyPageAdv::CMpegAudEncPropertyPageAdv(LPUNKNOWN punk, HRESULT *phr) :$/;"	f	class:CMpegAudEncPropertyPageAdv
CMpegAudEncPropertyPageAdv	lame/dshow/PropPage_adv.h	/^class CMpegAudEncPropertyPageAdv : public CBasePropertyPage $/;"	c
CODER_H	libfaac/coder.h	23;"	d
CODESIZE	libfaac/coder.h	85;"	d
CODE_TO_STRING	libmfx/src/mfx_dispatcher_log.cpp	110;"	d	file:
COFF	lame/libmp3lame/i386/nasm.h	/^;             Borland or cygwin ->        WIN32 and COFF$/;"	v
COLORSPACE_601	DShowPlugin/DeviceSource.cpp	/^    COLORSPACE_601$/;"	e	file:
COLORSPACE_709	DShowPlugin/DeviceSource.cpp	/^    COLORSPACE_709,$/;"	e	file:
COLORSPACE_AUTO	DShowPlugin/DeviceSource.cpp	/^    COLORSPACE_AUTO,$/;"	e	file:
COLOR_CONTROL_CLASS	OBSApi/ColorControl.h	23;"	d
COMMENT	lame/ACM/tinyxml/tinyxml.h	/^		COMMENT, $/;"	e	enum:TiXmlNode::NodeType
COMMON_H_INCLUDED	lame/mpglib/common.h	24;"	d
COMMON_H_INCLUDED	libsamplerate/common.h	26;"	d
COMPILE	lame/frontend/Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
COMPILE	lame/libmp3lame/Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
COMPILE	lame/libmp3lame/i386/Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
COMPILE	lame/libmp3lame/vector/Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
COMPILE	lame/misc/Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
COMPILE	lame/mpglib/Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
COMPILER_IS_GCC	libsamplerate/config.h	48;"	d
COM_NO_WINDOWS_H	GraphicsCapture/GraphicsCaptureHook/d3d8.h	32;"	d
CONCURRENCYSAL_H	extras/concurrencysal.h	17;"	d
CONFIGFILENAME	scenesw/SceneSwitcher.h	24;"	d
CONFIGMS_H_INCLUDED	lame/config.h	2;"	d
CONFIGMS_H_INCLUDED	lame/configMS.h	2;"	d
CONFIGUREPLUGINPROC	Source/WindowStuff.cpp	/^typedef void (*CONFIGUREPLUGINPROC)(HWND);$/;"	t	file:
CONFIG_CLEAN_FILES	lame/ACM/ADbg/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	lame/ACM/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	lame/ACM/ddk/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	lame/ACM/tinyxml/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	lame/Dll/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	lame/Makefile	/^CONFIG_CLEAN_FILES = lame.spec$/;"	m
CONFIG_CLEAN_FILES	lame/debian/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	lame/doc/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	lame/doc/html/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	lame/doc/man/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	lame/dshow/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	lame/frontend/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	lame/include/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	lame/libmp3lame/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	lame/libmp3lame/i386/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	lame/libmp3lame/vector/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	lame/mac/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	lame/macosx/English.lproj/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	lame/macosx/LAME.xcodeproj/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	lame/macosx/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	lame/misc/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	lame/mpglib/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	lame/vc_solution/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	lame/ACM/ADbg/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	lame/ACM/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	lame/ACM/ddk/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	lame/ACM/tinyxml/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	lame/Dll/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	lame/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	lame/debian/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	lame/doc/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	lame/doc/html/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	lame/doc/man/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	lame/dshow/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	lame/frontend/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	lame/include/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	lame/libmp3lame/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	lame/libmp3lame/i386/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	lame/libmp3lame/vector/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	lame/mac/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	lame/macosx/English.lproj/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	lame/macosx/LAME.xcodeproj/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	lame/macosx/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	lame/misc/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	lame/mpglib/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	lame/vc_solution/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_DEFS	lame/ACM/ADbg/Makefile	/^CONFIG_DEFS = $/;"	m
CONFIG_DEFS	lame/ACM/Makefile	/^CONFIG_DEFS = $/;"	m
CONFIG_DEFS	lame/ACM/ddk/Makefile	/^CONFIG_DEFS = $/;"	m
CONFIG_DEFS	lame/ACM/tinyxml/Makefile	/^CONFIG_DEFS = $/;"	m
CONFIG_DEFS	lame/Dll/Makefile	/^CONFIG_DEFS = $/;"	m
CONFIG_DEFS	lame/Makefile	/^CONFIG_DEFS = $/;"	m
CONFIG_DEFS	lame/debian/Makefile	/^CONFIG_DEFS = $/;"	m
CONFIG_DEFS	lame/doc/Makefile	/^CONFIG_DEFS = $/;"	m
CONFIG_DEFS	lame/doc/html/Makefile	/^CONFIG_DEFS = $/;"	m
CONFIG_DEFS	lame/doc/man/Makefile	/^CONFIG_DEFS = $/;"	m
CONFIG_DEFS	lame/dshow/Makefile	/^CONFIG_DEFS = $/;"	m
CONFIG_DEFS	lame/frontend/Makefile	/^CONFIG_DEFS = $/;"	m
CONFIG_DEFS	lame/include/Makefile	/^CONFIG_DEFS = $/;"	m
CONFIG_DEFS	lame/libmp3lame/Makefile	/^CONFIG_DEFS = $/;"	m
CONFIG_DEFS	lame/libmp3lame/i386/Makefile	/^CONFIG_DEFS = $/;"	m
CONFIG_DEFS	lame/libmp3lame/vector/Makefile	/^CONFIG_DEFS = $/;"	m
CONFIG_DEFS	lame/mac/Makefile	/^CONFIG_DEFS = $/;"	m
CONFIG_DEFS	lame/macosx/English.lproj/Makefile	/^CONFIG_DEFS = $/;"	m
CONFIG_DEFS	lame/macosx/LAME.xcodeproj/Makefile	/^CONFIG_DEFS = $/;"	m
CONFIG_DEFS	lame/macosx/Makefile	/^CONFIG_DEFS = $/;"	m
CONFIG_DEFS	lame/misc/Makefile	/^CONFIG_DEFS = $/;"	m
CONFIG_DEFS	lame/mpglib/Makefile	/^CONFIG_DEFS = $/;"	m
CONFIG_DEFS	lame/vc_solution/Makefile	/^CONFIG_DEFS = $/;"	m
CONFIG_FILE	PSVPlugin/psvplugin.h	29;"	d
CONFIG_FILENAME	NoiseGate/NoiseGate.h	25;"	d
CONFIG_HEADER	lame/ACM/ADbg/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	lame/ACM/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	lame/ACM/ddk/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	lame/ACM/tinyxml/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	lame/Dll/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	lame/Makefile	/^CONFIG_HEADER = config.h$/;"	m
CONFIG_HEADER	lame/debian/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	lame/doc/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	lame/doc/html/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	lame/doc/man/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	lame/dshow/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	lame/frontend/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	lame/include/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	lame/libmp3lame/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	lame/libmp3lame/i386/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	lame/libmp3lame/vector/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	lame/mac/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	lame/macosx/English.lproj/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	lame/macosx/LAME.xcodeproj/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	lame/macosx/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	lame/misc/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	lame/mpglib/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	lame/vc_solution/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_MATH_LIB	lame/ACM/ADbg/Makefile	/^CONFIG_MATH_LIB = -lm$/;"	m
CONFIG_MATH_LIB	lame/ACM/Makefile	/^CONFIG_MATH_LIB = -lm$/;"	m
CONFIG_MATH_LIB	lame/ACM/ddk/Makefile	/^CONFIG_MATH_LIB = -lm$/;"	m
CONFIG_MATH_LIB	lame/ACM/tinyxml/Makefile	/^CONFIG_MATH_LIB = -lm$/;"	m
CONFIG_MATH_LIB	lame/Dll/Makefile	/^CONFIG_MATH_LIB = -lm$/;"	m
CONFIG_MATH_LIB	lame/Makefile	/^CONFIG_MATH_LIB = -lm$/;"	m
CONFIG_MATH_LIB	lame/debian/Makefile	/^CONFIG_MATH_LIB = -lm$/;"	m
CONFIG_MATH_LIB	lame/doc/Makefile	/^CONFIG_MATH_LIB = -lm$/;"	m
CONFIG_MATH_LIB	lame/doc/html/Makefile	/^CONFIG_MATH_LIB = -lm$/;"	m
CONFIG_MATH_LIB	lame/doc/man/Makefile	/^CONFIG_MATH_LIB = -lm$/;"	m
CONFIG_MATH_LIB	lame/dshow/Makefile	/^CONFIG_MATH_LIB = -lm$/;"	m
CONFIG_MATH_LIB	lame/frontend/Makefile	/^CONFIG_MATH_LIB = -lm$/;"	m
CONFIG_MATH_LIB	lame/include/Makefile	/^CONFIG_MATH_LIB = -lm$/;"	m
CONFIG_MATH_LIB	lame/libmp3lame/Makefile	/^CONFIG_MATH_LIB = -lm$/;"	m
CONFIG_MATH_LIB	lame/libmp3lame/i386/Makefile	/^CONFIG_MATH_LIB = -lm$/;"	m
CONFIG_MATH_LIB	lame/libmp3lame/vector/Makefile	/^CONFIG_MATH_LIB = -lm$/;"	m
CONFIG_MATH_LIB	lame/mac/Makefile	/^CONFIG_MATH_LIB = -lm$/;"	m
CONFIG_MATH_LIB	lame/macosx/English.lproj/Makefile	/^CONFIG_MATH_LIB = -lm$/;"	m
CONFIG_MATH_LIB	lame/macosx/LAME.xcodeproj/Makefile	/^CONFIG_MATH_LIB = -lm$/;"	m
CONFIG_MATH_LIB	lame/macosx/Makefile	/^CONFIG_MATH_LIB = -lm$/;"	m
CONFIG_MATH_LIB	lame/misc/Makefile	/^CONFIG_MATH_LIB = -lm$/;"	m
CONFIG_MATH_LIB	lame/mpglib/Makefile	/^CONFIG_MATH_LIB = -lm$/;"	m
CONFIG_MATH_LIB	lame/vc_solution/Makefile	/^CONFIG_MATH_LIB = -lm$/;"	m
COPY_AND_TRANSFORM	lame/libmp3lame/lame.c	1826;"	d	file:
COPY_MONO	lame/libmp3lame/mpglib_interface.c	104;"	d	file:
COPY_STEREO	lame/libmp3lame/mpglib_interface.c	111;"	d	file:
COS1	lame/mpglib/layer3.c	/^static real COS1[12][6];$/;"	v	file:
COS6_1	lame/mpglib/layer3.c	/^static real COS6_1, COS6_2;$/;"	v	file:
COS6_2	lame/mpglib/layer3.c	/^static real COS6_1, COS6_2;$/;"	v	file:
COS9	lame/mpglib/layer3.c	/^static real COS9[9];$/;"	v	file:
CPP	lame/ACM/ADbg/Makefile	/^CPP = gcc -E$/;"	m
CPP	lame/ACM/Makefile	/^CPP = gcc -E$/;"	m
CPP	lame/ACM/ddk/Makefile	/^CPP = gcc -E$/;"	m
CPP	lame/ACM/tinyxml/Makefile	/^CPP = gcc -E$/;"	m
CPP	lame/Dll/Makefile	/^CPP = gcc -E$/;"	m
CPP	lame/Makefile	/^CPP = gcc -E$/;"	m
CPP	lame/debian/Makefile	/^CPP = gcc -E$/;"	m
CPP	lame/doc/Makefile	/^CPP = gcc -E$/;"	m
CPP	lame/doc/html/Makefile	/^CPP = gcc -E$/;"	m
CPP	lame/doc/man/Makefile	/^CPP = gcc -E$/;"	m
CPP	lame/dshow/Makefile	/^CPP = gcc -E$/;"	m
CPP	lame/frontend/Makefile	/^CPP = gcc -E$/;"	m
CPP	lame/include/Makefile	/^CPP = gcc -E$/;"	m
CPP	lame/libmp3lame/Makefile	/^CPP = gcc -E$/;"	m
CPP	lame/libmp3lame/i386/Makefile	/^CPP = gcc -E$/;"	m
CPP	lame/libmp3lame/vector/Makefile	/^CPP = gcc -E$/;"	m
CPP	lame/mac/Makefile	/^CPP = gcc -E$/;"	m
CPP	lame/macosx/English.lproj/Makefile	/^CPP = gcc -E$/;"	m
CPP	lame/macosx/LAME.xcodeproj/Makefile	/^CPP = gcc -E$/;"	m
CPP	lame/macosx/Makefile	/^CPP = gcc -E$/;"	m
CPP	lame/misc/Makefile	/^CPP = gcc -E$/;"	m
CPP	lame/mpglib/Makefile	/^CPP = gcc -E$/;"	m
CPP	lame/vc_solution/Makefile	/^CPP = gcc -E$/;"	m
CPPFLAGS	lame/ACM/ADbg/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	lame/ACM/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	lame/ACM/ddk/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	lame/ACM/tinyxml/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	lame/Dll/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	lame/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	lame/debian/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	lame/doc/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	lame/doc/html/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	lame/doc/man/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	lame/dshow/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	lame/frontend/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	lame/include/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	lame/libmp3lame/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	lame/libmp3lame/i386/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	lame/libmp3lame/vector/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	lame/mac/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	lame/macosx/English.lproj/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	lame/macosx/LAME.xcodeproj/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	lame/macosx/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	lame/misc/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	lame/mpglib/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	lame/vc_solution/Makefile	/^CPPFLAGS = $/;"	m
CPUCCODE	lame/ACM/ADbg/Makefile	/^CPUCCODE = $/;"	m
CPUCCODE	lame/ACM/Makefile	/^CPUCCODE = $/;"	m
CPUCCODE	lame/ACM/ddk/Makefile	/^CPUCCODE = $/;"	m
CPUCCODE	lame/ACM/tinyxml/Makefile	/^CPUCCODE = $/;"	m
CPUCCODE	lame/Dll/Makefile	/^CPUCCODE = $/;"	m
CPUCCODE	lame/Makefile	/^CPUCCODE = $/;"	m
CPUCCODE	lame/debian/Makefile	/^CPUCCODE = $/;"	m
CPUCCODE	lame/doc/Makefile	/^CPUCCODE = $/;"	m
CPUCCODE	lame/doc/html/Makefile	/^CPUCCODE = $/;"	m
CPUCCODE	lame/doc/man/Makefile	/^CPUCCODE = $/;"	m
CPUCCODE	lame/dshow/Makefile	/^CPUCCODE = $/;"	m
CPUCCODE	lame/frontend/Makefile	/^CPUCCODE = $/;"	m
CPUCCODE	lame/include/Makefile	/^CPUCCODE = $/;"	m
CPUCCODE	lame/libmp3lame/Makefile	/^CPUCCODE = $/;"	m
CPUCCODE	lame/libmp3lame/i386/Makefile	/^CPUCCODE = $/;"	m
CPUCCODE	lame/libmp3lame/vector/Makefile	/^CPUCCODE = $/;"	m
CPUCCODE	lame/mac/Makefile	/^CPUCCODE = $/;"	m
CPUCCODE	lame/macosx/English.lproj/Makefile	/^CPUCCODE = $/;"	m
CPUCCODE	lame/macosx/LAME.xcodeproj/Makefile	/^CPUCCODE = $/;"	m
CPUCCODE	lame/macosx/Makefile	/^CPUCCODE = $/;"	m
CPUCCODE	lame/misc/Makefile	/^CPUCCODE = $/;"	m
CPUCCODE	lame/mpglib/Makefile	/^CPUCCODE = $/;"	m
CPUCCODE	lame/vc_solution/Makefile	/^CPUCCODE = $/;"	m
CPUTYPE	lame/ACM/ADbg/Makefile	/^CPUTYPE = no$/;"	m
CPUTYPE	lame/ACM/Makefile	/^CPUTYPE = no$/;"	m
CPUTYPE	lame/ACM/ddk/Makefile	/^CPUTYPE = no$/;"	m
CPUTYPE	lame/ACM/tinyxml/Makefile	/^CPUTYPE = no$/;"	m
CPUTYPE	lame/Dll/Makefile	/^CPUTYPE = no$/;"	m
CPUTYPE	lame/Makefile	/^CPUTYPE = no$/;"	m
CPUTYPE	lame/debian/Makefile	/^CPUTYPE = no$/;"	m
CPUTYPE	lame/doc/Makefile	/^CPUTYPE = no$/;"	m
CPUTYPE	lame/doc/html/Makefile	/^CPUTYPE = no$/;"	m
CPUTYPE	lame/doc/man/Makefile	/^CPUTYPE = no$/;"	m
CPUTYPE	lame/dshow/Makefile	/^CPUTYPE = no$/;"	m
CPUTYPE	lame/frontend/Makefile	/^CPUTYPE = no$/;"	m
CPUTYPE	lame/include/Makefile	/^CPUTYPE = no$/;"	m
CPUTYPE	lame/libmp3lame/Makefile	/^CPUTYPE = no$/;"	m
CPUTYPE	lame/libmp3lame/i386/Makefile	/^CPUTYPE = no$/;"	m
CPUTYPE	lame/libmp3lame/vector/Makefile	/^CPUTYPE = no$/;"	m
CPUTYPE	lame/mac/Makefile	/^CPUTYPE = no$/;"	m
CPUTYPE	lame/macosx/English.lproj/Makefile	/^CPUTYPE = no$/;"	m
CPUTYPE	lame/macosx/LAME.xcodeproj/Makefile	/^CPUTYPE = no$/;"	m
CPUTYPE	lame/macosx/Makefile	/^CPUTYPE = no$/;"	m
CPUTYPE	lame/misc/Makefile	/^CPUTYPE = no$/;"	m
CPUTYPE	lame/mpglib/Makefile	/^CPUTYPE = no$/;"	m
CPUTYPE	lame/vc_solution/Makefile	/^CPUTYPE = no$/;"	m
CPU_CLIPS_NEGATIVE	libsamplerate/config.h	51;"	d
CPU_CLIPS_POSITIVE	libsamplerate/config.h	54;"	d
CPU_IS_BIG_ENDIAN	libsamplerate/config.h	57;"	d
CPU_IS_LITTLE_ENDIAN	libsamplerate/config.h	60;"	d
CPU_features	lame/libmp3lame/util.h	/^        } CPU_features;$/;"	m	struct:lame_internal_flags
CRC16_POLYNOMIAL	lame/libmp3lame/util.h	83;"	d
CRC_update	lame/libmp3lame/bitstream.c	/^CRC_update(int value, int crc)$/;"	f	file:
CRC_update_lookup	lame/libmp3lame/VbrTag.c	/^CRC_update_lookup(uint16_t value, uint16_t crc)$/;"	f	file:
CRC_writeheader	lame/libmp3lame/bitstream.c	/^CRC_writeheader(lame_internal_flags const *gfc, char *header)$/;"	f
CREATEDIRECTDRAWEXPROC	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	/^typedef HRESULT(WINAPI *CREATEDIRECTDRAWEXPROC)(GUID*, LPVOID*, REFIID, IUnknown*);$/;"	t	file:
CREATEDXGIFACTORY1PROC	GraphicsCapture/GraphicsCaptureHook/D3D10.1Capture.cpp	/^typedef HRESULT (WINAPI *CREATEDXGIFACTORY1PROC)(REFIID riid, void **ppFactory);$/;"	t	file:
CREATEDXGIFACTORY1PROC	GraphicsCapture/GraphicsCaptureHook/D3D10Capture.cpp	/^typedef HRESULT (WINAPI *CREATEDXGIFACTORY1PROC)(REFIID riid, void **ppFactory);$/;"	t	file:
CREATEDXGIFACTORY1PROC	GraphicsCapture/GraphicsCaptureHook/D3D11Capture.cpp	/^typedef HRESULT (WINAPI *CREATEDXGIFACTORY1PROC)(REFIID riid, void **ppFactory);$/;"	t	file:
CREATEDXGIFACTORY1PROC	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^typedef HRESULT (WINAPI *CREATEDXGIFACTORY1PROC)(REFIID riid, void **ppFactory);$/;"	t	file:
CREATEDXGIFACTORY1PROC	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^typedef HRESULT (WINAPI *CREATEDXGIFACTORY1PROC)(REFIID riid, void **ppFactory);$/;"	t	file:
CREATEDXGIFACTORYPROC	GraphicsCapture/GraphicsCaptureHook/DXGICapture.cpp	/^typedef HRESULT (WINAPI *CREATEDXGIFACTORYPROC)(REFIID riid, void **ppFactory);$/;"	t	file:
CREATE_PLUGIN_FNC	libmfx/src/mfx_load_plugin.cpp	38;"	d	file:
CREATE_TREMPOLINE_T	minhook/src/trampoline.h	/^	struct CREATE_TREMPOLINE_T$/;"	s	namespace:MinHook
CRTPROC	GraphicsCapture/GraphicsCaptureSource.cpp	/^typedef HANDLE(WINAPI *CRTPROC)(HANDLE, LPSECURITY_ATTRIBUTES, SIZE_T, LPTHREAD_START_ROUTINE, LPVOID, DWORD, LPDWORD);$/;"	t	file:
CRTPROC	injectHelper/injectHelper.c	/^typedef HANDLE(WINAPI *CRTPROC)(HANDLE, LPSECURITY_ATTRIBUTES, SIZE_T, LPTHREAD_START_ROUTINE, LPVOID, DWORD, LPDWORD);$/;"	t	file:
CRYPTO	librtmp/rtmp.h	31;"	d
CRegEnumKey	lame/dshow/REG.H	/^	CRegEnumKey(HKEY hKey)$/;"	f	class:Lame::CRegEnumKey
CRegEnumKey	lame/dshow/REG.H	/^class CRegEnumKey $/;"	c	namespace:Lame
CRegKey	lame/dshow/REG.CPP	/^CRegKey::CRegKey(HKEY rt, PTSTR pName)$/;"	f	class:Lame::CRegKey
CRegKey	lame/dshow/REG.CPP	/^CRegKey::CRegKey(void)$/;"	f	class:Lame::CRegKey
CRegKey	lame/dshow/REG.H	/^class	CRegKey $/;"	c	namespace:Lame
CSALCAT1	extras/concurrencysal.h	232;"	d
CSALCAT1	extras/concurrencysal.h	336;"	d
CSALCAT2	extras/concurrencysal.h	233;"	d
CSALCAT2	extras/concurrencysal.h	337;"	d
CSS	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public String CSS { get; set; }$/;"	p	class:Shared.BrowserSourceSettings
CSSEditor	CLRBrowserSourcePlugin/Plugin/SettingsPane.xaml.cs	/^        public TextEditor CSSEditor { get; private set; }$/;"	p	class:CLRBrowserSourcePlugin.SettingsPane
CSharpSamplePlugin	CLRHostPlugin/CLRCSharpSamplePlugin/SampleConfiguration.xaml.cs	/^namespace CSharpSamplePlugin$/;"	n
CSharpSamplePlugin	CLRHostPlugin/CLRCSharpSamplePlugin/SampleImageSource.cs	/^namespace CSharpSamplePlugin$/;"	n
CSharpSamplePlugin	CLRHostPlugin/CLRCSharpSamplePlugin/SampleImageSourceFactory.cs	/^namespace CSharpSamplePlugin$/;"	n
CSharpSamplePlugin	CLRHostPlugin/CLRCSharpSamplePlugin/SamplePlugin.cs	/^namespace CSharpSamplePlugin$/;"	n
CSharpSamplePlugin	CLRHostPlugin/CLRCSharpSamplePlugin/SampleSettingsPane.cs	/^namespace CSharpSamplePlugin$/;"	n
CSharpSamplePlugin	CLRHostPlugin/CLRCSharpSamplePlugin/SampleSettingsPaneControl.xaml.cs	/^namespace CSharpSamplePlugin$/;"	n
CTAGS	lame/ACM/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	lame/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	lame/doc/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	lame/frontend/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	lame/include/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	lame/libmp3lame/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	lame/libmp3lame/i386/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	lame/libmp3lame/vector/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	lame/macosx/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	lame/misc/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	lame/mpglib/Makefile	/^CTAGS = ctags$/;"	m
CTSTR	OBSApi/Utility/Defs.h	/^typedef const TCHAR         *CTSTR;$/;"	t
CUDAAPI	ObsNvenc/inc/cudaDynload.h	28;"	d
CUDA_SUCCESS	ObsNvenc/inc/cudaDynload.h	/^    CUDA_SUCCESS = 0$/;"	e	enum:cudaError_enum
CURRENT_DATE	QSVHelper/IntelSupport/include/current_date.h	2;"	d
CURRENT_STRUCT_SIZE	lame/Dll/BladeMP3EncDLL.h	80;"	d
CURRENT_STRUCT_VERSION	lame/Dll/BladeMP3EncDLL.h	79;"	d
CURVOL_RESOLUTION	NoiseGate/NoiseGate.h	/^    static const int    CURVOL_RESOLUTION = 96 * 4 - 1; \/\/ 0.25 dB resolution for a (-96..0) dB range$/;"	m	class:NoiseGateSettings
CUSTOMSEND	librtmp/rtmp.h	/^    typedef int (*CUSTOMSEND)(RTMPSockBuf*, const char *, int, void*);$/;"	t
CUcontext	ObsNvenc/inc/cudaDynload.h	/^typedef void* CUcontext;$/;"	t
CUdevice	ObsNvenc/inc/cudaDynload.h	/^typedef int CUdevice;$/;"	t
CUresult	ObsNvenc/inc/cudaDynload.h	/^} CUresult;$/;"	t
CVS_RSH	lame/Makefile	/^	cd $(top_srcdir) && CVS_RSH=ssh cvs -z3 -q update -dAP || true$/;"	m
CVS_RSH	lame/Makefile	/^	cd $(top_srcdir) && CVS_RSH=ssh cvs -z3 diff -u || true$/;"	m
CWSTR	OBSApi/Utility/Defs.h	/^typedef const wchar_t       *CWSTR;$/;"	t
CYGPATH_W	lame/ACM/ADbg/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	lame/ACM/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	lame/ACM/ddk/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	lame/ACM/tinyxml/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	lame/Dll/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	lame/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	lame/debian/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	lame/doc/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	lame/doc/html/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	lame/doc/man/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	lame/dshow/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	lame/frontend/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	lame/include/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	lame/libmp3lame/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	lame/libmp3lame/i386/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	lame/libmp3lame/vector/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	lame/mac/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	lame/macosx/English.lproj/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	lame/macosx/LAME.xcodeproj/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	lame/macosx/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	lame/misc/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	lame/mpglib/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	lame/vc_solution/Makefile	/^CYGPATH_W = echo$/;"	m
C_ADD	libfaac/kiss_fft/_kiss_fft_guts.h	74;"	d
C_ADDTO	libfaac/kiss_fft/_kiss_fft_guts.h	78;"	d
C_ERROR	minhook/src/HDE32/table32.h	16;"	d
C_ERROR	minhook/src/HDE64/src/table64.h	16;"	d
C_FIXDIV	libfaac/kiss_fft/_kiss_fft_guts.h	55;"	d
C_FIXDIV	libfaac/kiss_fft/_kiss_fft_guts.h	68;"	d
C_GROUP	minhook/src/HDE32/table32.h	15;"	d
C_GROUP	minhook/src/HDE64/src/table64.h	15;"	d
C_IMM16	minhook/src/HDE32/table32.h	11;"	d
C_IMM16	minhook/src/HDE64/src/table64.h	11;"	d
C_IMM8	minhook/src/HDE32/table32.h	10;"	d
C_IMM8	minhook/src/HDE64/src/table64.h	10;"	d
C_IMM_P66	minhook/src/HDE32/table32.h	12;"	d
C_IMM_P66	minhook/src/HDE64/src/table64.h	12;"	d
C_MODRM	minhook/src/HDE32/table32.h	9;"	d
C_MODRM	minhook/src/HDE64/src/table64.h	9;"	d
C_MUL	libfaac/kiss_fft/_kiss_fft_guts.h	51;"	d
C_MUL	libfaac/kiss_fft/_kiss_fft_guts.h	65;"	d
C_MULBYSCALAR	libfaac/kiss_fft/_kiss_fft_guts.h	58;"	d
C_MULBYSCALAR	libfaac/kiss_fft/_kiss_fft_guts.h	69;"	d
C_NONE	minhook/src/HDE32/table32.h	8;"	d
C_NONE	minhook/src/HDE64/src/table64.h	8;"	d
C_REL32	minhook/src/HDE32/table32.h	14;"	d
C_REL32	minhook/src/HDE64/src/table64.h	14;"	d
C_REL8	minhook/src/HDE32/table32.h	13;"	d
C_REL8	minhook/src/HDE64/src/table64.h	13;"	d
C_SUB	libfaac/kiss_fft/_kiss_fft_guts.h	76;"	d
C_SUBFROM	libfaac/kiss_fft/_kiss_fft_guts.h	80;"	d
Cache	OBSApi/Utility/XFile.h	/^    void Cache()$/;"	f	class:XFileInputSerializer
CachePath	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public string CachePath { get; set; }$/;"	p	class:Shared.BrowserRuntimeSettings
CalcAllowedDist	libfaac/aacquant.c	/^static void CalcAllowedDist(CoderInfo *coderInfo, PsyInfo *psyInfo,$/;"	f	file:
CalcAvgEnrg	libfaac/aacquant.c	/^void CalcAvgEnrg(CoderInfo *coderInfo,$/;"	f
CalcBits	libfaac/huffman.c	/^int CalcBits(CoderInfo *coderInfo,$/;"	f
CalcTorque	OBSApi/Utility/XMath.cpp	/^void CalcTorque(Vect &val1, const Vect &val2, float torque, float minAdjust, float fT)$/;"	f
CalcTorque	OBSApi/Utility/XMath.cpp	/^void CalcTorque(float &val1, float val2, float torque, float minAdjust, float fT)$/;"	f
CalculateDigest	librtmp/handshake.h	/^CalculateDigest(unsigned int digestPos, uint8_t *handshakeMessage,$/;"	f
CalculateEscSequence	libfaac/huffman.c	/^static int CalculateEscSequence(int input, int *len_esc_sequence)$/;"	f	file:
CalculateFileHash	Source/Updater.cpp	/^BOOL CalculateFileHash (TCHAR *path, BYTE *hash)$/;"	f
CalculateKBDWindow	libfaac/filtbank.c	/^static void CalculateKBDWindow(double* win, double alpha, int length)$/;"	f	file:
CalculateVolumeLevels	Source/OBSCapture.cpp	/^inline void CalculateVolumeLevels(float *buffer, int totalFloats, float mulVal, float &RMS, float &MAX)$/;"	f
CallHotkey	Source/API.cpp	/^void OBS::CallHotkey(DWORD hotkeyID, bool bDown)$/;"	f	class:OBS
CanGetCookie	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/AssetSchemeHandler.cs	/^        protected override bool CanGetCookie(CefCookie cookie)$/;"	m	class:RemoteBrowser.AssetSchemeHandler
CanSetCookie	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/AssetSchemeHandler.cs	/^        protected override bool CanSetCookie(CefCookie cookie)$/;"	m	class:RemoteBrowser.AssetSchemeHandler
Cancel	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/AssetSchemeHandler.cs	/^        protected override void Cancel()$/;"	m	class:RemoteBrowser.AssetSchemeHandler
CancelSettings	CLRBrowserSourcePlugin/Plugin/BrowserSettingsPane.cs	/^        public override void CancelSettings()$/;"	m	class:CLRBrowserSourcePlugin.BrowserSettingsPane
CancelSettings	CLRHostPlugin/CLRCSharpSamplePlugin/SampleSettingsPane.cs	/^        public override void CancelSettings()$/;"	m	class:CSharpSamplePlugin.SampleSettingsPane
CancelSettings	CLRHostPlugin/CLRHostPlugin/CLRSettingsPane.cpp	/^void CLRSettingsPane::CancelSettings()$/;"	f	class:CLRSettingsPane
CancelSettings	CLRHostPlugin/CLRHostPlugin/SettingsPaneBridge.h	/^    virtual void CancelSettings()$/;"	f	class:SettingsPaneBridge
CancelSettings	NoiseGate/NoiseGate.cpp	/^void NoiseGateSettings::CancelSettings()$/;"	f	class:NoiseGateSettings
CancelSettings	Source/Settings.cpp	/^void OBS::CancelSettings()$/;"	f	class:OBS
CancelSettings	Source/SettingsAdvanced.cpp	/^void SettingsAdvanced::CancelSettings()$/;"	f	class:SettingsAdvanced
CancelSettings	Source/SettingsAudio.cpp	/^void SettingsAudio::CancelSettings()$/;"	f	class:SettingsAudio
CancelSettings	Source/SettingsEncoding.cpp	/^void SettingsEncoding::CancelSettings()$/;"	f	class:SettingsEncoding
CancelSettings	Source/SettingsGeneral.cpp	/^void SettingsGeneral::CancelSettings()$/;"	f	class:SettingsGeneral
CancelSettings	Source/SettingsHotkeys.cpp	/^void SettingsHotkeys::CancelSettings()$/;"	f	class:SettingsHotkeys
CancelSettings	Source/SettingsPublish.cpp	/^void SettingsPublish::CancelSettings()$/;"	f	class:SettingsPublish
CancelSettings	Source/SettingsQSV.cpp	/^void SettingsQSV::CancelSettings()$/;"	f	class:SettingsQSV
CancelSettings	Source/SettingsVideo.cpp	/^void SettingsVideo::CancelSettings()$/;"	f	class:SettingsVideo
CancelSettings	scenesw/SceneSwitcherSettings.cpp	/^void SceneSwitcherSettings::CancelSettings()$/;"	f	class:SceneSwitcherSettings
Caps	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	/^    DWORD   Caps;$/;"	m	struct:_D3DCAPS8
Caps2	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	/^    DWORD   Caps2;$/;"	m	struct:_D3DCAPS8
Caps3	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	/^    DWORD   Caps3;$/;"	m	struct:_D3DCAPS8
CaptureD3D8	GraphicsCapture/GraphicsCaptureHook/D3D8Capture.cpp	/^void CaptureD3D8(IDirect3DDevice8* device)$/;"	f
CaptureDDraw	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	/^void CaptureDDraw()$/;"	f
CaptureEnumMediaTypes	DShowPlugin/CaptureFilter.cpp	/^CaptureEnumMediaTypes::CaptureEnumMediaTypes(CapturePin *pinIn, CaptureEnumMediaTypes *pEnum)$/;"	f	class:CaptureEnumMediaTypes
CaptureEnumMediaTypes	DShowPlugin/CaptureFilter.h	/^class CaptureEnumMediaTypes : public IEnumMediaTypes$/;"	c
CaptureEnumPins	DShowPlugin/CaptureFilter.cpp	/^CaptureEnumPins::CaptureEnumPins(CaptureFilter *filterIn, CaptureEnumPins *pEnum)$/;"	f	class:CaptureEnumPins
CaptureEnumPins	DShowPlugin/CaptureFilter.h	/^class CaptureEnumPins : public IEnumPins$/;"	c
CaptureFilter	DShowPlugin/CaptureFilter.cpp	/^CaptureFilter::CaptureFilter(DeviceSource *source, const GUID &expectedMajorType, const GUID &expectedMediaType)$/;"	f	class:CaptureFilter
CaptureFilter	DShowPlugin/CaptureFilter.h	/^class CaptureFilter : public IBaseFilter$/;"	c
CaptureFilter.cpp	DShowPlugin/CaptureFilter.cpp	1;"	F
CaptureFilter.h	DShowPlugin/CaptureFilter.h	1;"	F
CaptureFlags	DShowPlugin/CaptureFilter.cpp	/^    inline CaptureFlags() {}$/;"	f	class:CaptureFlags
CaptureFlags	DShowPlugin/CaptureFilter.cpp	/^class CaptureFlags : public IAMFilterMiscFlags {$/;"	c	file:
CaptureHotkey	GraphicsCapture/GraphicsCaptureSource.cpp	/^void STDCALL GraphicsCaptureSource::CaptureHotkey(DWORD hotkey, GraphicsCaptureSource *capture, bool bDown)$/;"	f	class:GraphicsCaptureSource
CaptureInfo	GraphicsCapture/GlobalCaptureStuff.h	/^struct CaptureInfo$/;"	s
CapturePin	DShowPlugin/CaptureFilter.cpp	/^CapturePin::CapturePin(CaptureFilter* filterIn, DeviceSource *sourceIn, const GUID &expectedMajorType, const GUID &expectedMediaType)$/;"	f	class:CapturePin
CapturePin	DShowPlugin/CaptureFilter.h	/^class CapturePin : public IPin, public IMemInputPin$/;"	c
CaptureThread	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	/^DWORD WINAPI CaptureThread(HANDLE hDllMainThread)$/;"	f
CaretBrowsing	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public CefState CaretBrowsing { get; set; }$/;"	p	class:Shared.BrowserInstanceSettings
CartToPolar	OBSApi/Utility/XMath.cpp	/^Vect CartToPolar(const Vect &cart)$/;"	f
Cb	libmfx/include/msdk/include/mfxstructures.h	/^        mfxU8   *Cb;$/;"	m
CbCr	libmfx/include/msdk/include/mfxstructures.h	/^        mfxU8   *CbCr;          \/* for CbCr merged formats *\/$/;"	m
Ceil	OBSApi/Utility/XMath.h	/^    inline Vect& Ceil()                             {x=ceilf(x); y=ceilf(y); z=ceilf(z); return *this;}$/;"	f	struct:Vect
Ceil	OBSApi/Utility/XMath.h	/^    inline Vect2& Ceil()                            {x=ceilf(x); y=ceilf(y); return *this;}$/;"	f	struct:Vect2
Ceil	OBSApi/Utility/XMath.h	/^    inline Vect4& Ceil()                              {x=ceilf(x); y=ceilf(y); z=ceilf(z); w=ceilf(w); return *this;}$/;"	f	struct:Vect4
CenterItems	Source/WindowStuff.cpp	/^void OBS::CenterItems(bool horizontal, bool vertical)$/;"	f	class:OBS
Ch	lame/libmp3lame/i386/nasm.h	/^	times (1 & ge14(($$-%%here) & 15) & ~ge15(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Ch,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h$/;"	v
ChMode	lame/dshow/Encoder.h	/^    MPEG_mode ChMode;                       \/\/Channel coding mode: see doc$/;"	m
ChMode	lame/dshow/Mpegac.h	/^    MPEG_mode  ChMode;                       \/\/Channel coding mode$/;"	m
ChangeNotificationCloser	OBSApi/Utility/XT_Windows.cpp	/^    struct ChangeNotificationCloser$/;"	s	file:
ChangeSize	DShowPlugin/DeviceSource.cpp	/^void DeviceSource::ChangeSize(bool bSucceeded, bool bForce)$/;"	f	class:DeviceSource
ChannelInfo	libfaac/channels.h	/^} ChannelInfo;$/;"	t
CheckAndCleanAvail	OBSApi/Utility/Template.h	/^    inline BOOL CheckAndCleanAvail()$/;"	f	class:SafeList
CheckD3D8Capture	GraphicsCapture/GraphicsCaptureHook/D3D8Capture.cpp	/^void CheckD3D8Capture()$/;"	f
CheckD3D9Capture	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^void CheckD3D9Capture()$/;"	f
CheckDDrawCapture	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	/^void CheckDDrawCapture()$/;"	f
CheckFileIntegrity	GraphicsCapture/GraphicsCaptureSource.cpp	/^BOOL GraphicsCaptureSource::CheckFileIntegrity(LPCTSTR strDLL)$/;"	f	class:GraphicsCaptureSource
CheckGLCapture	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^void CheckGLCapture()$/;"	f
CheckInputType	lame/dshow/Mpegac.cpp	/^HRESULT CMpegAudEnc::CheckInputType(const CMediaType* mtIn)$/;"	f	class:CMpegAudEnc
CheckInterfaceSupport	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *CheckInterfaceSupport )( $/;"	m	struct:IDXGIAdapter2Vtbl
CheckMediaType	lame/dshow/Mpegac.cpp	/^HRESULT CMpegAudEncOutPin::CheckMediaType(const CMediaType *pmtOut)$/;"	f	class:CMpegAudEncOutPin
CheckNVENCHardwareSupport	ObsNvenc/src/nvmain.cpp	/^extern "C" __declspec(dllexport) bool __cdecl CheckNVENCHardwareSupport(bool log)$/;"	f
CheckNVENCHardwareSupport	Source/Encoder_NVENC.cpp	/^bool CheckNVENCHardwareSupport(bool log=true)$/;"	f
CheckQSVHardwareSupport	Source/Encoder_QSV.cpp	/^bool CheckQSVHardwareSupport(bool log=true, bool *configurationWarning = nullptr)$/;"	f
CheckRequestType	QSVHelper/IntelSupport/src/base_allocator.cpp	/^mfxStatus BaseFrameAllocator::CheckRequestType(mfxFrameAllocRequest *request)$/;"	f	class:BaseFrameAllocator
CheckRequestType	QSVHelper/IntelSupport/src/d3d11_allocator.cpp	/^mfxStatus D3D11FrameAllocator::CheckRequestType(mfxFrameAllocRequest *request)$/;"	f	class:D3D11FrameAllocator
CheckSettings	scenesw/SceneSwitcher.h	/^	inline bool CheckSettings() const {return (!altSceneName.IsEmpty());}$/;"	f	class:SceneSwitcher
CheckSources	Source/OBS.cpp	/^void OBS::CheckSources()$/;"	f	class:OBS
CheckTransform	lame/dshow/Mpegac.cpp	/^HRESULT CMpegAudEnc::CheckTransform(const CMediaType* mtIn, const CMediaType* mtOut)$/;"	f	class:CMpegAudEnc
CheckUpdateThread	Source/Updater.cpp	/^DWORD WINAPI CheckUpdateThread (VOID *arg)$/;"	f
ChildHwndSourceHook	CLRHostPlugin/CLRHostInterop/AbstractWPFSettingsPane.cpp	/^IntPtr ChildHwndSourceHook(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, bool% handled)$/;"	f
Children	OBSApi/Utility/Profiler.cpp	/^    List<ProfileNodeInfo> Children;$/;"	m	struct:ProfileNodeInfo	file:
ChooseDeinterlacingShader	DShowPlugin/DeviceSource.cpp	/^String DeviceSource::ChooseDeinterlacingShader()$/;"	f	class:DeviceSource
ChooseShader	DShowPlugin/DeviceSource.cpp	/^String DeviceSource::ChooseShader()$/;"	f	class:DeviceSource
ChromaFormat	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16  ChromaFormat;$/;"	m
CircularList	OBSApi/Utility/Template.h	/^    inline CircularList() : startID(0), endID(0), storedNum(0) {}$/;"	f	class:CircularList
CircularList	OBSApi/Utility/Template.h	/^template<typename T> class CircularList : protected List<T>$/;"	c
ClampColor	OBSApi/Utility/XMath.h	/^    inline Vect4& ClampColor()$/;"	f	struct:Vect4
ClampMax	OBSApi/Utility/XMath.h	/^    inline Vect& ClampMax(const Vect &v) {if(x > v.x) x = v.x; if(y > v.y) y = v.y; if(z > v.z) z = v.z; return *this;}$/;"	f	struct:Vect
ClampMax	OBSApi/Utility/XMath.h	/^    inline Vect& ClampMax(const Vect &v) {m = _mm_min_ps(m, v.m); w = 0.0f; return *this;}$/;"	f	struct:Vect
ClampMax	OBSApi/Utility/XMath.h	/^    inline Vect& ClampMax(float val)     {if(x > val) x = val; if(y > val) y = val; if(z > val) z = val; return *this;}$/;"	f	struct:Vect
ClampMax	OBSApi/Utility/XMath.h	/^    inline Vect& ClampMax(float val) {m = _mm_min_ps(m, _mm_set1_ps(val)); w = 0.0f; return *this;}$/;"	f	struct:Vect
ClampMax	OBSApi/Utility/XMath.h	/^    inline Vect2& ClampMax(const Vect2 &v) {if(x > v.x) x = v.x; if(y > v.y) y = v.y; return *this;}$/;"	f	struct:Vect2
ClampMax	OBSApi/Utility/XMath.h	/^    inline Vect2& ClampMax(float val)      {if(x > val) x = val; if(y > val) y = val; return *this;}$/;"	f	struct:Vect2
ClampMin	OBSApi/Utility/XMath.h	/^    inline Vect& ClampMin(const Vect &v) {if(x < v.x) x = v.x; if(y < v.y) y = v.y; if(z < v.z) z = v.z; return *this;}$/;"	f	struct:Vect
ClampMin	OBSApi/Utility/XMath.h	/^    inline Vect& ClampMin(const Vect &v) {m = _mm_max_ps(m, v.m); w = 0.0f; return *this;}$/;"	f	struct:Vect
ClampMin	OBSApi/Utility/XMath.h	/^    inline Vect& ClampMin(float val)     {if(x < val) x = val; if(y < val) y = val; if(z < val) z = val; return *this;}$/;"	f	struct:Vect
ClampMin	OBSApi/Utility/XMath.h	/^    inline Vect& ClampMin(float val) {m = _mm_max_ps(m, _mm_set1_ps(val)); w = 0.0f; return *this;}$/;"	f	struct:Vect
ClampMin	OBSApi/Utility/XMath.h	/^    inline Vect2& ClampMin(const Vect2 &v) {if(x < v.x) x = v.x; if(y < v.y) y = v.y; return *this;}$/;"	f	struct:Vect2
ClampMin	OBSApi/Utility/XMath.h	/^    inline Vect2& ClampMin(float val)      {if(x < val) x = val; if(y < val) y = val; return *this;}$/;"	f	struct:Vect2
ClampVal	Source/TextOutputSource.cpp	27;"	d	file:
ClassID	lame/frontend/console.h	/^    unsigned long ClassID;$/;"	m	struct:console_io_struct
ClassInfo	Source/OBS.h	/^struct ClassInfo$/;"	s
ClassProt	lame/frontend/console.h	/^    unsigned long ClassProt;$/;"	m	struct:console_io_struct
CleanUpDDraw	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	/^void CleanUpDDraw()$/;"	f
Cleanup	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserRenderHandler.cs	/^        public void Cleanup()$/;"	m	class:Browser.BrowserRenderHandler
CleanupPSVSettings	PSVPlugin/psvplugin.cpp	/^void CleanupPSVSettings()$/;"	f
Clear	DShowPlugin/DShowPlugin.cpp	/^    inline void Clear()$/;"	f	struct:ColorSelectionData
Clear	OBSApi/GraphicsSystem.h	/^    inline void Clear()$/;"	f	struct:VBData
Clear	OBSApi/Utility/ComPtr.hpp	/^	inline void Clear()$/;"	f	class:ComPtr
Clear	OBSApi/Utility/Template.h	/^    inline void Clear()$/;"	f	class:BitList
Clear	OBSApi/Utility/Template.h	/^    inline void Clear()$/;"	f	class:CircularList
Clear	OBSApi/Utility/Template.h	/^    inline void Clear()$/;"	f	class:List
Clear	OBSApi/Utility/Template.h	/^    inline void Clear()$/;"	f	class:SafeList
Clear	OBSApi/Utility/Template.h	/^    inline void Clear(unsigned int index)$/;"	f	class:BitList
Clear	OBSApi/Utility/XMath.h	/^    inline AxisAngle& Clear() {zero(this, sizeof(AxisAngle)); return *this;}$/;"	f	struct:AxisAngle
Clear	OBSApi/Utility/XString.cpp	/^String& String::Clear()$/;"	f	class:String
Clear	OBSApi/Utility/XString.h	/^    inline void Clear()$/;"	f	class:StringList
Clear	OBSApi/Utility/XT.cpp	/^void XStringLog::Clear()$/;"	f	class:XStringLog
Clear	OBSApi/Utility/XTLocalization.h	/^    inline void Clear()$/;"	f	struct:LocaleStringCache
Clear	QSVHelper/ComPtr.hpp	/^	inline void Clear()$/;"	f	class:ComPtr
Clear	Source/BitmapImageSource.cpp	/^    inline void Clear()$/;"	f	struct:ColorSelectionData
Clear	Source/DesktopImageSource.cpp	/^    inline void Clear()$/;"	f	struct:ColorSelectionData
Clear	Source/OBS.h	/^    inline void Clear() {data.Clear();}$/;"	f	struct:VideoPacketData
Clear	Source/OBS.h	/^    inline void Clear()$/;"	f	struct:VideoSegment
Clear	lame/ACM/tinyxml/tinyxml.cpp	/^void TiXmlNode::Clear()$/;"	f	class:TiXmlNode
ClearAll	OBSApi/Utility/Template.h	/^    inline void ClearAll()$/;"	f	class:BitList
ClearColorBuffer	OBSApi/GraphicsSystem.h	/^inline void  ClearColorBuffer(DWORD color=0xFF000000)$/;"	f
ClearColorBuffer	Source/D3D10System.cpp	/^void D3D10System::ClearColorBuffer(DWORD color)$/;"	f	class:D3D10System
ClearD3D101Data	GraphicsCapture/GraphicsCaptureHook/D3D10.1Capture.cpp	/^void ClearD3D101Data()$/;"	f
ClearD3D10Data	GraphicsCapture/GraphicsCaptureHook/D3D10Capture.cpp	/^void ClearD3D10Data()$/;"	f
ClearD3D11Data	GraphicsCapture/GraphicsCaptureHook/D3D11Capture.cpp	/^void ClearD3D11Data()$/;"	f
ClearD3D8Data	GraphicsCapture/GraphicsCaptureHook/D3D8Capture.cpp	/^void ClearD3D8Data()$/;"	f
ClearD3D9Data	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^void ClearD3D9Data()$/;"	f
ClearData	GraphicsCapture/GraphicsCapture.cpp	/^    inline void ClearData()$/;"	f	struct:ConfigDialogData
ClearData	OBSApi/AudioSource.h	/^    inline void ClearData()$/;"	f	struct:AudioSegment
ClearData	Source/OBS.h	/^    inline void ClearData()$/;"	f	struct:DeviceOutputData
ClearData	Source/OBS.h	/^    inline void ClearData()$/;"	f	struct:DeviceOutputs
ClearError	lame/ACM/tinyxml/tinyxml.h	/^	void ClearError()						{ error = false; errorId = 0; errorDesc = ""; }$/;"	f	class:TiXmlDocument
ClearGLData	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^void ClearGLData()$/;"	f
ClearOutputList	DShowPlugin/DShowPlugin.cpp	/^    void ClearOutputList()$/;"	f	struct:ConfigDialogData
ClearPackets	Source/Encoder_QSV.cpp	/^    inline void ClearPackets()$/;"	f	class:QSVEncoder	file:
ClearPackets	Source/Encoder_x264.cpp	/^    inline void ClearPackets()$/;"	f	class:X264Encoder	file:
ClearStatusBar	Source/OBS.cpp	/^void OBS::ClearStatusBar()$/;"	f	class:OBS
ClearStreamInfo	Source/OBS.h	/^    inline void ClearStreamInfo()$/;"	f	class:OBS
ClearStreamReport	Source/OBS.h	/^    void ClearStreamReport() { streamReport.Clear(); }$/;"	f	class:OBS
ClipIntersection	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    DWORD ClipIntersection;$/;"	m	struct:_D3DCLIPSTATUS8
ClipUnion	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    DWORD ClipUnion;$/;"	m	struct:_D3DCLIPSTATUS8
ClipboardHelper	Source/WindowStuff.cpp	/^        ClipboardHelper(HWND owner) { OpenClipboard(owner); }$/;"	f	struct:<anonymous>::ClipboardHelper
ClipboardHelper	Source/WindowStuff.cpp	/^    struct ClipboardHelper$/;"	s	file:
ClockTimestampFlag	libmfx/include/msdk/include/mfxstructures.h	/^      mfxU16    ClockTimestampFlag;$/;"	m
Clone	DShowPlugin/CaptureFilter.cpp	/^STDMETHODIMP CaptureEnumMediaTypes::Clone(IEnumMediaTypes **ppEnum)$/;"	f	class:CaptureEnumMediaTypes
Clone	DShowPlugin/CaptureFilter.cpp	/^STDMETHODIMP CaptureEnumPins::Clone(IEnumPins **ppEnum)$/;"	f	class:CaptureEnumPins
Clone	lame/ACM/tinyxml/tinyxml.cpp	/^TiXmlNode* TiXmlComment::Clone() const$/;"	f	class:TiXmlComment
Clone	lame/ACM/tinyxml/tinyxml.cpp	/^TiXmlNode* TiXmlDeclaration::Clone() const$/;"	f	class:TiXmlDeclaration
Clone	lame/ACM/tinyxml/tinyxml.cpp	/^TiXmlNode* TiXmlDocument::Clone() const$/;"	f	class:TiXmlDocument
Clone	lame/ACM/tinyxml/tinyxml.cpp	/^TiXmlNode* TiXmlElement::Clone() const$/;"	f	class:TiXmlElement
Clone	lame/ACM/tinyxml/tinyxml.cpp	/^TiXmlNode* TiXmlText::Clone() const$/;"	f	class:TiXmlText
Clone	lame/ACM/tinyxml/tinyxml.cpp	/^TiXmlNode* TiXmlUnknown::Clone() const$/;"	f	class:TiXmlUnknown
CloneSession	libmfx/include/msdk/include/mfxaudio++.h	/^    virtual mfxStatus CloneSession( mfxSession *clone) { return MFXCloneSession(m_session, clone);}$/;"	f	class:MFXAudioSession
CloneSession	libmfx/include/msdk/include/mfxvideo++.h	/^    virtual mfxStatus CloneSession( mfxSession *clone) { return MFXCloneSession(m_session, clone);}$/;"	f	class:MFXVideoSession
ClosableStream	Source/OBS.h	/^struct ClosableStream$/;"	s
Close	OBSApi/Utility/ConfigFile.cpp	/^void ConfigFile::Close()$/;"	f	class:ConfigFile
Close	OBSApi/Utility/XConfig.cpp	/^void  XConfig::Close(bool bSave)$/;"	f	class:XConfig
Close	OBSApi/Utility/XFile.h	/^    void Close()$/;"	f	class:XFileInputSerializer
Close	OBSApi/Utility/XFile.h	/^    void Close()$/;"	f	class:XFileOutputSerializer
Close	OBSApi/Utility/XFile_Windows.cpp	/^void XFile::Close()$/;"	f	class:XFile
Close	QSVHelper/IntelSupport/src/base_allocator.cpp	/^mfxStatus BaseFrameAllocator::Close()$/;"	f	class:BaseFrameAllocator
Close	QSVHelper/IntelSupport/src/d3d11_allocator.cpp	/^mfxStatus D3D11FrameAllocator::Close()$/;"	f	class:D3D11FrameAllocator
Close	QSVHelper/IntelSupport/src/d3d11_device.cpp	/^void CD3D11Device::Close()$/;"	f	class:CD3D11Device
Close	lame/dshow/Encoder.cpp	/^HRESULT CEncoder::Close(IStream* pStream)$/;"	f	class:CEncoder
Close	lame/dshow/REG.CPP	/^BOOL    CRegKey::Close(void)$/;"	f	class:Lame::CRegKey
Close	libmfx/include/msdk/include/mfxaudio++.h	/^    virtual mfxStatus Close(void) { return MFXAudioDECODE_Close(m_session); }$/;"	f	class:MFXAudioDECODE
Close	libmfx/include/msdk/include/mfxaudio++.h	/^    virtual mfxStatus Close(void) { return MFXAudioENCODE_Close(m_session); }$/;"	f	class:MFXAudioENCODE
Close	libmfx/include/msdk/include/mfxaudio++.h	/^    virtual mfxStatus Close(void)$/;"	f	class:MFXAudioSession
Close	libmfx/include/msdk/include/mfxplugin.h	/^    mfxStatus (MFX_CDECL *Close)(mfxHDL pthis);$/;"	m	struct:mfxVideoCodecPlugin
Close	libmfx/include/msdk/include/mfxvideo++.h	/^    virtual mfxStatus Close(void) { return MFXVideoDECODE_Close(m_session); }$/;"	f	class:MFXVideoDECODE
Close	libmfx/include/msdk/include/mfxvideo++.h	/^    virtual mfxStatus Close(void) { return MFXVideoENCODE_Close(m_session); }$/;"	f	class:MFXVideoENCODE
Close	libmfx/include/msdk/include/mfxvideo++.h	/^    virtual mfxStatus Close(void) { return MFXVideoVPP_Close(m_session); }$/;"	f	class:MFXVideoVPP
Close	libmfx/include/msdk/include/mfxvideo++.h	/^    virtual mfxStatus Close(void)$/;"	f	class:MFXVideoSession
Close	libmfx/src/mfx_dispatcher.cpp	/^mfxStatus MFX_DISP_HANDLE::Close(void)$/;"	f	class:MFX_DISP_HANDLE
Close	libmfx/src/mfx_dxva2_device.cpp	/^void D3D9Device::Close(void)$/;"	f	class:D3D9Device
Close	libmfx/src/mfx_dxva2_device.cpp	/^void DXDevice::Close(void)$/;"	f	class:DXDevice
Close	libmfx/src/mfx_dxva2_device.cpp	/^void DXGI1Device::Close(void)$/;"	f	class:DXGI1Device
Close	libmfx/src/mfx_dxva2_device.cpp	/^void DXVA2Device::Close(void)$/;"	f	class:DXVA2Device
Close	libmfx/src/mfx_load_plugin.cpp	/^void MFX::MFXPluginFactory::Close() $/;"	f	class:MFX::MFXPluginFactory
CloseBitStream	libfaac/bitstream.c	/^int CloseBitStream(BitStream *bitStream)$/;"	f
CloseBrowser	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserWrapper.cs	/^        public void CloseBrowser(bool isForcingClose)$/;"	m	class:Browser.BrowserWrapper
CloseDouble	OBSApi/OBSApi.h	/^inline BOOL CloseDouble(double f1, double f2, double precision=0.001)$/;"	f
CloseFloat	OBSApi/Utility/XMath.h	/^inline BOOL CloseFloat(float f1, float f2, float precision=LARGE_EPSILON)$/;"	f
CloseLogFile	OBSApi/Utility/XT.cpp	/^void STDCALL CloseLogFile()$/;"	f
ClosePendingStreams	Source/OBSCapture.cpp	/^void OBS::ClosePendingStreams()$/;"	f	class:OBS
CloseTo	OBSApi/Utility/XMath.h	/^    BOOL CloseTo(const Plane &plane, float precision=LARGE_EPSILON) const$/;"	f	struct:Plane
CloseTo	OBSApi/Utility/XMath.h	/^    inline BOOL CloseTo(const AxisAngle &v, float epsilon=EPSILON) const$/;"	f	struct:AxisAngle
CloseTo	OBSApi/Utility/XMath.h	/^    inline BOOL CloseTo(const Quat &v, float epsilon=EPSILON) const$/;"	f	struct:Quat
CloseTo	OBSApi/Utility/XMath.h	/^    inline BOOL CloseTo(const Vect &v, float epsilon=EPSILON) const$/;"	f	struct:Vect
CloseTo	OBSApi/Utility/XMath.h	/^    inline BOOL CloseTo(const Vect2 &v, float epsilon=EPSILON) const$/;"	f	struct:Vect2
CloseTo	OBSApi/Utility/XMath.h	/^    inline BOOL CloseTo(const Vect4 &v, float epsilon=EPSILON) const$/;"	f	struct:Vect4
ClosedSource	lame/doc/html/links.html	/^<h3><a name="ClosedSource">Free (closed source) software which supports or uses $/;"	a
ClosestLinePoint	OBSApi/Utility/XMath.cpp	/^BOOL ClosestLinePoint(const Vect &ray1Origin, const Vect &ray1Dir, const Vect &ray2Origin, const Vect &ray2Dir, float &fT)$/;"	f
ClosestLinePoints	OBSApi/Utility/XMath.cpp	/^BOOL ClosestLinePoints(const Vect &ray1Origin, const Vect &ray1Dir, const Vect &ray2Origin, const Vect &ray2Dir, float &fT1, float &fT2)$/;"	f
ClosingTokens	Source/CodeTokenizer.cpp	/^static const TCHAR *ClosingTokens[NUMCLOSINGTOKENS] = {TEXT("}"),  TEXT(";"),  TEXT(")"),  TEXT(","),  TEXT("]"),$/;"	v	file:
CntDroppedFlag	libmfx/include/msdk/include/mfxstructures.h	/^      mfxU16    CntDroppedFlag;$/;"	m
CodeStringTable	libmfx/src/mfx_dispatcher_log.cpp	/^struct CodeStringTable$/;"	s	file:
CodeToString	libmfx/src/mfx_dispatcher_log.cpp	/^const char* CodeToString(int code, CodeStringTable array[], int len )$/;"	f
CodeTokenizer	Source/CodeTokenizer.h	/^    inline CodeTokenizer() {lpCode = lpTemp = NULL;}$/;"	f	struct:CodeTokenizer
CodeTokenizer	Source/CodeTokenizer.h	/^struct CodeTokenizer$/;"	s
CodeTokenizer.cpp	Source/CodeTokenizer.cpp	1;"	F
CodeTokenizer.h	Source/CodeTokenizer.h	1;"	F
CodecIDKeyName	libmfx/src/mfx_plugin_hive.cpp	/^    const wchar_t CodecIDKeyName[] = L"CodecID";$/;"	v
CodecId	libmfx/include/msdk/include/mfxastructures.h	/^    mfxU32                CodecId;$/;"	m
CodecId	libmfx/include/msdk/include/mfxplugin.h	/^    mfxU32  CodecId;$/;"	m	struct:mfxPluginParam
CodecId	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU32  CodecId;$/;"	m
CodecLevel	libmfx/include/msdk/include/mfxastructures.h	/^    mfxU16                CodecLevel;$/;"	m
CodecLevel	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16  CodecLevel;$/;"	m
CodecProfile	libmfx/include/msdk/include/mfxastructures.h	/^    mfxU16                CodecProfile;$/;"	m
CodecProfile	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16  CodecProfile;$/;"	m
CoderInfo	libfaac/coder.h	/^} CoderInfo;$/;"	t
Color	OBSApi/GraphicsSystem.cpp	/^void GraphicsSystem::Color(DWORD dwRGBA)$/;"	f	class:GraphicsSystem
Color	OBSApi/GraphicsSystem.cpp	/^void GraphicsSystem::Color(const Color4 &v)$/;"	f	class:GraphicsSystem
Color	OBSApi/GraphicsSystem.h	/^inline void  Color(DWORD dwRGBA)                                {GS->Color(dwRGBA);}$/;"	f
Color	OBSApi/GraphicsSystem.h	/^inline void  Color(const Color4 &v)                             {GS->Color(v);}$/;"	f
Color	OBSApi/GraphicsSystem.h	/^inline void  Color(float R, float G, float B, float A)          {Color4 rgba(R,G,B,A); GS->Color(rgba);}$/;"	f
Color3	OBSApi/Utility/XMath.h	/^typedef Vect Color3, UVWCoord, Vect3;$/;"	t
Color4	OBSApi/Utility/XMath.h	/^typedef Vect4 Color4;$/;"	t
Color4_to_RGBA	OBSApi/Utility/XT.h	299;"	d
ColorControl.cpp	OBSApi/ColorControl.cpp	1;"	F
ColorControl.h	OBSApi/ColorControl.h	1;"	F
ColorControlProc	OBSApi/ColorControl.cpp	/^LRESULT WINAPI ColorControlProc(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam)$/;"	f
ColorDescription	Source/OBS.h	/^struct ColorDescription$/;"	s
ColorList	OBSApi/GraphicsSystem.h	/^    List<DWORD>     ColorList;$/;"	m	struct:VBData
ColorMatrix	Source/OBS.h	/^enum ColorMatrix$/;"	g
ColorMatrix_BT2020CL	Source/OBS.h	/^    ColorMatrix_BT2020CL$/;"	e	enum:ColorMatrix
ColorMatrix_BT2020NCL	Source/OBS.h	/^    ColorMatrix_BT2020NCL,$/;"	e	enum:ColorMatrix
ColorMatrix_BT470BG	Source/OBS.h	/^    ColorMatrix_BT470BG,$/;"	e	enum:ColorMatrix
ColorMatrix_BT470M	Source/OBS.h	/^    ColorMatrix_BT470M = 4,$/;"	e	enum:ColorMatrix
ColorMatrix_BT709	Source/OBS.h	/^    ColorMatrix_BT709,$/;"	e	enum:ColorMatrix
ColorMatrix_GBR	Source/OBS.h	/^    ColorMatrix_GBR = 0,$/;"	e	enum:ColorMatrix
ColorMatrix_SMPTE170M	Source/OBS.h	/^    ColorMatrix_SMPTE170M,$/;"	e	enum:ColorMatrix
ColorMatrix_SMPTE240M	Source/OBS.h	/^    ColorMatrix_SMPTE240M,$/;"	e	enum:ColorMatrix
ColorMatrix_Unspecified	Source/OBS.h	/^    ColorMatrix_Unspecified,$/;"	e	enum:ColorMatrix
ColorMatrix_YCgCo	Source/OBS.h	/^    ColorMatrix_YCgCo,$/;"	e	enum:ColorMatrix
ColorPrimaries	Source/OBS.h	/^enum ColorPrimaries$/;"	g
ColorPrimaries_BT2020	Source/OBS.h	/^    ColorPrimaries_BT2020$/;"	e	enum:ColorPrimaries
ColorPrimaries_BT470BG	Source/OBS.h	/^    ColorPrimaries_BT470BG,$/;"	e	enum:ColorPrimaries
ColorPrimaries_BT470M	Source/OBS.h	/^    ColorPrimaries_BT470M = 4,$/;"	e	enum:ColorPrimaries
ColorPrimaries_BT709	Source/OBS.h	/^    ColorPrimaries_BT709 = 1,$/;"	e	enum:ColorPrimaries
ColorPrimaries_Film	Source/OBS.h	/^    ColorPrimaries_Film,$/;"	e	enum:ColorPrimaries
ColorPrimaries_SMPTE170M	Source/OBS.h	/^    ColorPrimaries_SMPTE170M,$/;"	e	enum:ColorPrimaries
ColorPrimaries_SMPTE240M	Source/OBS.h	/^    ColorPrimaries_SMPTE240M,$/;"	e	enum:ColorPrimaries
ColorPrimaries_Unspecified	Source/OBS.h	/^    ColorPrimaries_Unspecified,$/;"	e	enum:ColorPrimaries
ColorSelectionData	DShowPlugin/DShowPlugin.cpp	/^    inline ColorSelectionData() : hdcDesktop(NULL), hdcDestination(NULL), hBitmap(NULL), bValid(false) {}$/;"	f	struct:ColorSelectionData
ColorSelectionData	DShowPlugin/DShowPlugin.cpp	/^struct ColorSelectionData$/;"	s	file:
ColorSelectionData	Source/BitmapImageSource.cpp	/^    inline ColorSelectionData() : hdcDesktop(NULL), hdcDestination(NULL), hBitmap(NULL), bValid(false) {}$/;"	f	struct:ColorSelectionData
ColorSelectionData	Source/BitmapImageSource.cpp	/^struct ColorSelectionData$/;"	s	file:
ColorSelectionData	Source/DesktopImageSource.cpp	/^    inline ColorSelectionData() : hdcDesktop(NULL), hdcDestination(NULL), hBitmap(NULL), bValid(false) {}$/;"	f	struct:ColorSelectionData
ColorSelectionData	Source/DesktopImageSource.cpp	/^struct ColorSelectionData$/;"	s	file:
ColorTransfer	Source/OBS.h	/^enum ColorTransfer$/;"	g
ColorTransfer_BT1361	Source/OBS.h	/^    ColorTransfer_BT1361,$/;"	e	enum:ColorTransfer
ColorTransfer_BT202010	Source/OBS.h	/^    ColorTransfer_BT202010,$/;"	e	enum:ColorTransfer
ColorTransfer_BT202012	Source/OBS.h	/^    ColorTransfer_BT202012$/;"	e	enum:ColorTransfer
ColorTransfer_BT470BG	Source/OBS.h	/^    ColorTransfer_BT470BG,$/;"	e	enum:ColorTransfer
ColorTransfer_BT470M	Source/OBS.h	/^    ColorTransfer_BT470M = 4,$/;"	e	enum:ColorTransfer
ColorTransfer_BT709	Source/OBS.h	/^    ColorTransfer_BT709 = 1,$/;"	e	enum:ColorTransfer
ColorTransfer_IEC6196621	Source/OBS.h	/^    ColorTransfer_IEC6196621,$/;"	e	enum:ColorTransfer
ColorTransfer_IEC6196624	Source/OBS.h	/^    ColorTransfer_IEC6196624,$/;"	e	enum:ColorTransfer
ColorTransfer_Linear	Source/OBS.h	/^    ColorTransfer_Linear,$/;"	e	enum:ColorTransfer
ColorTransfer_Log100	Source/OBS.h	/^    ColorTransfer_Log100,$/;"	e	enum:ColorTransfer
ColorTransfer_Log316	Source/OBS.h	/^    ColorTransfer_Log316,$/;"	e	enum:ColorTransfer
ColorTransfer_SMPTE170M	Source/OBS.h	/^    ColorTransfer_SMPTE170M,$/;"	e	enum:ColorTransfer
ColorTransfer_SMPTE240M	Source/OBS.h	/^    ColorTransfer_SMPTE240M,$/;"	e	enum:ColorTransfer
ColorTransfer_Unspecified	Source/OBS.h	/^    ColorTransfer_Unspecified,$/;"	e	enum:ColorTransfer
Color_Black	OBSApi/Utility/XT.h	258;"	d
Color_Blue	OBSApi/Utility/XT.h	271;"	d
Color_Cyan	OBSApi/Utility/XT.h	260;"	d
Color_DarkBlue	OBSApi/Utility/XT.h	272;"	d
Color_DarkCyan	OBSApi/Utility/XT.h	261;"	d
Color_DarkGray	OBSApi/Utility/XT.h	257;"	d
Color_DarkGreen	OBSApi/Utility/XT.h	270;"	d
Color_DarkPurple	OBSApi/Utility/XT.h	263;"	d
Color_DarkRed	OBSApi/Utility/XT.h	268;"	d
Color_DarkYellow	OBSApi/Utility/XT.h	265;"	d
Color_Gray	OBSApi/Utility/XT.h	256;"	d
Color_Green	OBSApi/Utility/XT.h	269;"	d
Color_LightGray	OBSApi/Utility/XT.h	255;"	d
Color_Orange	OBSApi/Utility/XT.h	274;"	d
Color_Purple	OBSApi/Utility/XT.h	262;"	d
Color_Red	OBSApi/Utility/XT.h	267;"	d
Color_White	OBSApi/Utility/XT.h	254;"	d
Color_Yellow	OBSApi/Utility/XT.h	264;"	d
Color_to_RGB	OBSApi/Utility/XT.h	300;"	d
ColourDescriptionPresent	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16          ColourDescriptionPresent;$/;"	m
ColourPrimaries	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16          ColourPrimaries;$/;"	m
ComPtr	OBSApi/Utility/ComPtr.hpp	/^	inline ComPtr() : ptr(NULL)                  {}$/;"	f	class:ComPtr
ComPtr	OBSApi/Utility/ComPtr.hpp	/^	inline ComPtr(ComPtr &&c) : ptr(c.ptr)       {c.ptr = NULL;}$/;"	f	class:ComPtr
ComPtr	OBSApi/Utility/ComPtr.hpp	/^	inline ComPtr(T *p) : ptr(p)                 {if (ptr) ptr->AddRef();}$/;"	f	class:ComPtr
ComPtr	OBSApi/Utility/ComPtr.hpp	/^	inline ComPtr(const ComPtr &c) : ptr(c.ptr)  {if (ptr) ptr->AddRef();}$/;"	f	class:ComPtr
ComPtr	OBSApi/Utility/ComPtr.hpp	/^template<typename T> class ComPtr {$/;"	c
ComPtr	QSVHelper/ComPtr.hpp	/^	inline ComPtr() : ptr(NULL)                  {}$/;"	f	class:ComPtr
ComPtr	QSVHelper/ComPtr.hpp	/^	inline ComPtr(ComPtr &&c) : ptr(c.ptr)       {c.ptr = NULL;}$/;"	f	class:ComPtr
ComPtr	QSVHelper/ComPtr.hpp	/^	inline ComPtr(T *p) : ptr(p)                 {if (ptr) ptr->AddRef();}$/;"	f	class:ComPtr
ComPtr	QSVHelper/ComPtr.hpp	/^	inline ComPtr(const ComPtr &c) : ptr(c.ptr)  {if (ptr) ptr->AddRef();}$/;"	f	class:ComPtr
ComPtr	QSVHelper/ComPtr.hpp	/^template<typename T> class ComPtr {$/;"	c
ComPtr.hpp	OBSApi/Utility/ComPtr.hpp	1;"	F
ComPtr.hpp	QSVHelper/ComPtr.hpp	1;"	F
CommandLineArgsDisabled	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public bool CommandLineArgsDisabled { get; set; }$/;"	p	class:Shared.BrowserRuntimeSettings
CommandLineArguments	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public String[] CommandLineArguments { get; set; }$/;"	p	class:Shared.BrowserRuntimeSettings
Commercial	lame/doc/html/links.html	/^<h3><a name="Commercial">Commercial software which supports or uses $/;"	a
CommitBuffer	minhook/src/buffer.cpp	/^	void CommitBuffer()$/;"	f	namespace:MinHook
CompactVect	OBSApi/Utility/XMath.h	/^    inline CompactVect() {}$/;"	f	struct:CompactVect
CompactVect	OBSApi/Utility/XMath.h	/^inline CompactVect::CompactVect(const Vect &v)$/;"	f	class:CompactVect
CompactVect	OBSApi/Utility/XMath.h	/^struct CompactVect$/;"	s
Compare	OBSApi/Utility/XString.cpp	/^BOOL String::Compare(CTSTR str) const$/;"	f	class:String
CompareI	OBSApi/Utility/XString.cpp	/^BOOL String::CompareI(CTSTR str) const$/;"	f	class:String
CompareMemory	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^bool CompareMemory(const LPVOID lpVal1, const LPVOID lpVal2, UINT nBytes)$/;"	f
Comparisons	lame/doc/html/links.html	/^<h3><a name="Comparisons">MP3 Encoder Comparisons based on <i>listening $/;"	a
ComputePreemptionGranularity	extras/dxgi1_2.h	/^    DXGI_COMPUTE_PREEMPTION_GRANULARITY ComputePreemptionGranularity;$/;"	m	struct:DXGI_ADAPTER_DESC2
Config	lame/ACM/AEncodeProperties.cpp	/^bool AEncodeProperties::Config(const HINSTANCE Hinstance, const HWND HwndParent)$/;"	f	class:AEncodeProperties
ConfigBitmapInfo	Source/BitmapImageSource.cpp	/^struct ConfigBitmapInfo$/;"	s	file:
ConfigBitmapInfo	Source/BitmapTransitionSource.cpp	/^struct ConfigBitmapInfo$/;"	s	file:
ConfigDesktopSourceInfo	Source/BitmapImageSource.cpp	/^struct ConfigDesktopSourceInfo$/;"	s	file:
ConfigDesktopSourceInfo	Source/DesktopImageSource.cpp	/^    inline ConfigDesktopSourceInfo()$/;"	f	struct:ConfigDesktopSourceInfo
ConfigDesktopSourceInfo	Source/DesktopImageSource.cpp	/^struct ConfigDesktopSourceInfo$/;"	s	file:
ConfigDesktopSourceProc	Source/DesktopImageSource.cpp	/^INT_PTR CALLBACK ConfigDesktopSourceProc(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam)$/;"	f
ConfigDialog	CLRBrowserSourcePlugin/Plugin/ConfigDialog.xaml.cs	/^        public ConfigDialog(XElement dataElement)$/;"	m	class:CLRBrowserSourcePlugin.ConfigDialog
ConfigDialog	CLRBrowserSourcePlugin/Plugin/ConfigDialog.xaml.cs	/^    public partial class ConfigDialog : Window$/;"	c	namespace:CLRBrowserSourcePlugin
ConfigDialog.xaml.cs	CLRBrowserSourcePlugin/Plugin/ConfigDialog.xaml.cs	1;"	F
ConfigDialogData	DShowPlugin/DShowPlugin.cpp	/^struct ConfigDialogData$/;"	s	file:
ConfigDialogData	GraphicsCapture/GraphicsCapture.cpp	/^struct ConfigDialogData$/;"	s	file:
ConfigDlgProc	PSVPlugin/psvplugin.cpp	/^INT_PTR CALLBACK ConfigDlgProc(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam)$/;"	f
ConfigFile	OBSApi/Utility/ConfigFile.h	/^    ConfigFile() : bOpen(0), strFileName(), lpFileData(NULL), dwLength(0) {}$/;"	f	class:ConfigFile
ConfigFile	OBSApi/Utility/ConfigFile.h	/^class BASE_EXPORT ConfigFile$/;"	c
ConfigFile.cpp	OBSApi/Utility/ConfigFile.cpp	1;"	F
ConfigFile.h	OBSApi/Utility/ConfigFile.h	1;"	F
ConfigGlobalSource	Source/GlobalSource.cpp	/^bool STDCALL OBS::ConfigGlobalSource(XElement *element, bool bCreating)$/;"	f	class:OBS
ConfigKey	OBSApi/Utility/ConfigFile.h	/^struct ConfigKey$/;"	s
ConfigPlugin	PSVPlugin/psvplugin.cpp	/^void ConfigPlugin(HWND hWnd)$/;"	f
ConfigProc	lame/ACM/AEncodeProperties.cpp	/^static BOOL CALLBACK ConfigProc($/;"	f	file:
ConfigSection	OBSApi/Utility/ConfigFile.h	/^struct ConfigSection$/;"	s
ConfigTextSourceInfo	Source/TextOutputSource.cpp	/^struct ConfigTextSourceInfo$/;"	s	file:
ConfigureBitmapProc	Source/BitmapImageSource.cpp	/^INT_PTR CALLBACK ConfigureBitmapProc(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam)$/;"	f
ConfigureBitmapSource	Source/BitmapImageSource.cpp	/^bool STDCALL ConfigureBitmapSource(XElement *element, bool bCreating)$/;"	f
ConfigureBitmapTransitionProc	Source/BitmapTransitionSource.cpp	/^INT_PTR CALLBACK ConfigureBitmapTransitionProc(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam)$/;"	f
ConfigureBitmapTransitionSource	Source/BitmapTransitionSource.cpp	/^bool STDCALL ConfigureBitmapTransitionSource(XElement *element, bool bCreating)$/;"	f
ConfigureDShowSource	DShowPlugin/DShowPlugin.cpp	/^bool STDCALL ConfigureDShowSource(XElement *element, bool bCreating)$/;"	f
ConfigureDesktopSource	Source/DesktopImageSource.cpp	/^bool STDCALL ConfigureDesktopSource(XElement *element, bool bInitialize)$/;"	f
ConfigureDesktopSource2	Source/DesktopImageSource.cpp	/^static bool STDCALL ConfigureDesktopSource2(XElement *element, bool bInitialize, int dialogID)$/;"	f	file:
ConfigureDialogProc	DShowPlugin/DShowPlugin.cpp	/^INT_PTR CALLBACK ConfigureDialogProc(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam)$/;"	f
ConfigureDialogProc	GraphicsCapture/GraphicsCapture.cpp	/^INT_PTR CALLBACK ConfigureDialogProc(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam)$/;"	f
ConfigureGraphicsCaptureSource	GraphicsCapture/GraphicsCapture.cpp	/^bool STDCALL ConfigureGraphicsCaptureSource(XElement *element, bool bCreating)$/;"	f
ConfigureImageSource	CLRHostPlugin/CLRHostPlugin/CLRHostApi.cpp	/^ConfigureImageSource($/;"	f
ConfigureImageSource	Source/API.cpp	/^void OBS::ConfigureImageSource(XElement *element)$/;"	f	class:OBS
ConfigureMonitorCaptureSource	Source/DesktopImageSource.cpp	/^bool STDCALL ConfigureMonitorCaptureSource(XElement *element, bool bInitialize)$/;"	f
ConfigureScene	Source/API.cpp	/^void OBS::ConfigureScene(XElement *element)$/;"	f	class:OBS
ConfigureStreamButtons	Source/OBS.cpp	/^void OBS::ConfigureStreamButtons()$/;"	f	class:OBS
ConfigureTextProc	Source/TextOutputSource.cpp	/^INT_PTR CALLBACK ConfigureTextProc(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam)$/;"	f
ConfigureTextSource	Source/TextOutputSource.cpp	/^bool STDCALL ConfigureTextSource(XElement *element, bool bCreating)$/;"	f
ConfigureWindowCaptureSource	Source/DesktopImageSource.cpp	/^bool STDCALL ConfigureWindowCaptureSource(XElement *element, bool bInitialize)$/;"	f
Connect	DShowPlugin/CaptureFilter.cpp	/^STDMETHODIMP CapturePin::Connect(IPin *pReceivePin, const AM_MEDIA_TYPE *pmt)$/;"	f	class:CapturePin
ConnectedTo	DShowPlugin/CaptureFilter.cpp	/^STDMETHODIMP CapturePin::ConnectedTo(IPin **pPin)$/;"	f	class:CapturePin
ConnectionMediaType	DShowPlugin/CaptureFilter.cpp	/^STDMETHODIMP CapturePin::ConnectionMediaType(AM_MEDIA_TYPE *pmt)$/;"	f	class:CapturePin
Console_Handle	lame/frontend/console.h	/^    HANDLE  Console_Handle;$/;"	m	struct:console_io_struct
Console_IO	lame/frontend/console.c	/^Console_IO_t Console_IO;$/;"	v
Console_IO_t	lame/frontend/console.h	/^} Console_IO_t;$/;"	t
Console_buff	lame/frontend/console.h	/^    char    Console_buff[2048];$/;"	m	struct:console_io_struct
Console_file_type	lame/frontend/console.h	/^    int     Console_file_type;$/;"	m	struct:console_io_struct
Console_fp	lame/frontend/console.h	/^    FILE   *Console_fp;      \/* filepointer to stream reporting information *\/$/;"	m	struct:console_io_struct
Contains	Source/WindowStuff.cpp	/^        bool Contains(String &str)$/;"	f	struct:<anonymous>::ClipboardHelper
Contrast	libmfx/include/msdk/include/mfxstructures.h	/^    mfxF64   Contrast;$/;"	m
ConverColortFormat	QSVHelper/IntelSupport/src/d3d11_allocator.cpp	/^DXGI_FORMAT D3D11FrameAllocator::ConverColortFormat(mfxU32 fourcc)$/;"	f	class:D3D11FrameAllocator
Convergence	libmfx/include/msdk/include/mfxstructures.h	/^                mfxU16  Convergence;$/;"	m
Convert	CLRBrowserSourcePlugin/Plugin/ConfigDialog.xaml.cs	/^        public object Convert(object value, Type targetType, object parameter, CultureInfo culture)$/;"	m	class:CLRBrowserSourcePlugin.VolumeProgressBarValueConverter
Convert422To444	DShowPlugin/ImageMadness.cpp	/^void DeviceSource::Convert422To444(LPBYTE convertBuffer, LPBYTE lp422, UINT pitch, bool bLeadingY)$/;"	f	class:DeviceSource
Convert444Data	Source/OBSVideoCapture.cpp	/^struct Convert444Data$/;"	s	file:
Convert444Thread	Source/OBSVideoCapture.cpp	/^DWORD STDCALL Convert444Thread(Convert444Data *data)$/;"	f
Convert444toI420	Source/ImageProcessing.cpp	/^void Convert444toI420(LPBYTE input, int width, int pitch, int height, int startY, int endY, LPBYTE *output)$/;"	f
Convert444toNV12	Source/ImageProcessing.cpp	/^void Convert444toNV12(LPBYTE input, int width, int inPitch, int outPitch, int height, int startY, int endY, LPBYTE *output)$/;"	f
ConvertAPIVersion	libmfx/include/mfx_plugin_hive.h	/^        void ConvertAPIVersion( mfxU32 APIVersion, PluginDescriptionRecord &descriptionRecord) const$/;"	f	class:MFX::MFXPluginStorageBase
ConvertBack	CLRBrowserSourcePlugin/Plugin/ConfigDialog.xaml.cs	/^        public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture)$/;"	m	class:CLRBrowserSourcePlugin.VolumeProgressBarValueConverter
ConvertBuffer	lame/ACM/ACMStream.cpp	/^bool ACMStream::ConvertBuffer(LPACMDRVSTREAMHEADER a_StreamHeader)$/;"	f	class:ACMStream
ConvertBuffer	lame/ACM/DecodeStream.cpp	/^bool DecodeStream::ConvertBuffer(LPACMDRVSTREAMHEADER a_StreamHeader)$/;"	f	class:DecodeStream
ConvertDX9BackBufferFormat	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^GSColorFormat ConvertDX9BackBufferFormat(D3DFORMAT format)$/;"	f
ConvertData	DShowPlugin/DeviceSource.h	/^struct ConvertData$/;"	s
ConvertFrameRate	QSVHelper/QSVStuff.cpp	/^    void ConvertFrameRate(mfxF64 dFrameRate, mfxU32& pnFrameRateExtN, mfxU32& pnFrameRateExtD)$/;"	f
ConvertGIBackBufferFormat	GraphicsCapture/GraphicsCaptureHook/DXGIStuff.h	/^inline GSColorFormat ConvertGIBackBufferFormat(DXGI_FORMAT format)$/;"	f
ConvertGIBackBufferFormat	Source/D3D10System.h	/^inline GSColorFormat ConvertGIBackBufferFormat(DXGI_FORMAT format)$/;"	f
ConvertMSTo100NanoSec	Source/Main.h	/^inline UINT ConvertMSTo100NanoSec(UINT ms)$/;"	f
ConvertToAudioTime	Source/MP4FileStream.cpp	/^inline UINT64 ConvertToAudioTime(DWORD timestamp, UINT64 minVal)$/;"	f
ConvertToTextString	OBSApi/Utility/XConfig.cpp	/^String XConfig::ConvertToTextString(String &string)$/;"	f	class:XConfig
Coplanar	OBSApi/Utility/XMath.h	/^    BOOL Coplanar(const Plane &plane, float precision=EPSILON) const$/;"	f	struct:Plane
CopyArray	OBSApi/Utility/Template.h	/^    inline void CopyArray(const T *new_array, unsigned int n)$/;"	f	class:List
CopyArray	OBSApi/Utility/XString.h	/^    inline void CopyArray(const String *new_array, unsigned int n)$/;"	f	class:StringList
CopyBuffer	libmfx/include/msdk/include/mfxplugin++.h	/^    mfxStatus CopyBuffer(mfxU8 *dst, mfxU32 size, mfxFrameSurface1 *src) {$/;"	f	class:MFXCoreInterface
CopyBuffer	libmfx/include/msdk/include/mfxplugin.h	/^    mfxStatus (MFX_CDECL *CopyBuffer)(mfxHDL pthis, mfxU8 *dst, mfxU32 size, mfxFrameSurface1 *src);$/;"	m	struct:mfxCoreInterface
CopyD3D8CPUTextureThread	GraphicsCapture/GraphicsCaptureHook/D3D8Capture.cpp	/^DWORD CopyD3D8CPUTextureThread(LPVOID lpUseless)$/;"	f
CopyD3D9CPUTextureThread	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^DWORD CopyD3D9CPUTextureThread(LPVOID lpUseless)$/;"	f
CopyDDrawTextureThread	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	/^DWORD CopyDDrawTextureThread(LPVOID lpUseless)$/;"	f
CopyElement	OBSApi/Utility/XConfig.cpp	/^XElement* XElement::CopyElement(XElement* element, CTSTR lpNewName)$/;"	f	class:XElement
CopyFrame	libmfx/include/msdk/include/mfxplugin++.h	/^    mfxStatus CopyFrame (mfxFrameSurface1 *dst, mfxFrameSurface1 *src) {$/;"	f	class:MFXCoreInterface
CopyFrame	libmfx/include/msdk/include/mfxplugin.h	/^    mfxStatus (MFX_CDECL *CopyFrame) (mfxHDL pthis, mfxFrameSurface1 *dst, mfxFrameSurface1 *src);$/;"	m	struct:mfxCoreInterface
CopyGLCPUTextureThread	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^DWORD CopyGLCPUTextureThread(LPVOID lpUseless)$/;"	f
CopyList	OBSApi/Utility/Template.h	/^    inline void CopyList(const BitList& list)$/;"	f	class:BitList
CopyList	OBSApi/Utility/Template.h	/^    inline void CopyList(const List<T>& list)$/;"	f	class:List
CopyList	OBSApi/Utility/Template.h	/^    inline void CopyList(const SafeList<T>& safelist)$/;"	f	class:SafeList
CopyList	OBSApi/Utility/XString.h	/^    inline void CopyList(const StringList& list)$/;"	f	class:StringList
CopyMediaType	DShowPlugin/MediaInfoStuff.cpp	/^HRESULT WINAPI CopyMediaType(AM_MEDIA_TYPE *pmtTarget, const AM_MEDIA_TYPE *pmtSource)$/;"	f
CopyMetadata	Source/MP4FileStream.cpp	/^    void CopyMetadata()$/;"	f	class:MP4FileStream
CopyPackedRGB	Source/D3D10Texture.cpp	/^void CopyPackedRGB(BYTE *lpDest, BYTE *lpSource, UINT nPixels)$/;"	f
CopyPredInfo	libfaac/backpred.c	/^void CopyPredInfo(CoderInfo *right, CoderInfo *left)$/;"	f
CopyStream	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/StreamUtils.cs	/^        public static int CopyStream(Stream input, Stream output, int bytesToRead)$/;"	m	class:RemoteBrowser.StreamUtils
CopyTexture	Source/D3D10System.cpp	/^void D3D10System::CopyTexture(Texture *texDest, Texture *texSrc)$/;"	f	class:D3D10System
CopyToClone	lame/ACM/tinyxml/tinyxml.h	/^	void CopyToClone( TiXmlNode* target ) const	{ target->value = value; }$/;"	f	class:TiXmlNode
Corrupted	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16  Corrupted;$/;"	m
CountBitstream	libfaac/bitstream.c	/^static int CountBitstream(faacEncHandle hEncoder,$/;"	f	file:
CountSetBits	OBSApi/Utility/XT_Windows.cpp	/^DWORD CountSetBits(ULONG_PTR bitMask)$/;"	f
CountingType	libmfx/include/msdk/include/mfxstructures.h	/^      mfxU16    CountingType;$/;"	m
Cr	libmfx/include/msdk/include/mfxstructures.h	/^        mfxU8   *Cr;$/;"	m
CrCb	libmfx/include/msdk/include/mfxstructures.h	/^        mfxU8   *CrCb;          \/* for CrCb merged formats *\/$/;"	m
CrashDumpHandler.cpp	Source/CrashDumpHandler.cpp	1;"	F
CrashDumpHandler.h	Source/CrashDumpHandler.h	1;"	F
CrashError	OBSApi/Utility/XT.cpp	/^__declspec(noreturn) void __cdecl CrashError(const TCHAR *format, ...)$/;"	f
Create	CLRBrowserSourcePlugin/Plugin/BrowserSourceFactory.cs	/^        public override ImageSource Create(XElement data)$/;"	m	class:CLRBrowserSourcePlugin.BrowserSourceFactory
Create	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/AssetSchemeHandler.cs	/^        protected override CefResourceHandler Create(CefBrowser browser, CefFrame frame, string schemeName, CefRequest request)$/;"	m	class:RemoteBrowser.AssetSchemeHandlerFactory
Create	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserTask.cs	/^        public static CefTask Create(Action task)$/;"	m	class:Browser.BrowserTask
Create	CLRHostPlugin/CLRCSharpSamplePlugin/SampleImageSourceFactory.cs	/^        public override ImageSource Create(XElement data)$/;"	m	class:CSharpSamplePlugin.SampleImageSourceFactory
Create	CLRHostPlugin/CLRHostPlugin/CLRImageSourceFactory.cpp	/^CLRImageSource *CLRImageSourceFactory::Create(CLRXElement *element)$/;"	f	class:CLRImageSourceFactory
Create	CLRHostPlugin/CLRHostPlugin/CLRXElement.cpp	/^CLRXElement * CLRXElement::Create(mscorlib::_Type *type, void *elementPointer)$/;"	f	class:CLRXElement
Create	OBSApi/Utility/ConfigFile.cpp	/^BOOL ConfigFile::Create(CTSTR lpConfigFile)$/;"	f	class:ConfigFile
Create	lame/ACM/ACMStream.cpp	/^ACMStream * ACMStream::Create()$/;"	f	class:ACMStream
Create	lame/ACM/DecodeStream.cpp	/^DecodeStream * DecodeStream::Create()$/;"	f	class:DecodeStream
Create	lame/dshow/REG.CPP	/^BOOL    CRegKey::Create(HKEY rootKey, PTSTR pName)$/;"	f	class:Lame::CRegKey
Create	lame/dshow/REG.CPP	/^BOOL    CRegKey::Create(PTSTR an)$/;"	f	class:Lame::CRegKey
Create	libmfx/src/mfx_load_plugin.cpp	/^bool MFX::PluginModule::Create( mfxPluginUID uid, mfxPlugin& plg) $/;"	f	class:MFX::PluginModule
Create	libmfx/src/mfx_load_plugin.cpp	/^mfxStatus MFX::MFXPluginFactory::Create(const PluginDescriptionRecord & rec)$/;"	f	class:MFX::MFXPluginFactory
CreateAACEncoder	Source/Encoder_AAC.cpp	/^AudioEncoder* CreateAACEncoder(UINT bitRate)$/;"	f
CreateAudioSource	Source/MMDeviceAudioSource.cpp	/^AudioSource* CreateAudioSource(bool bMic, CTSTR lpID)$/;"	f
CreateBandwidthAnalyzer	Source/BandwidthAnalysis.cpp	/^NetworkStream* CreateBandwidthAnalyzer()$/;"	f
CreateBitmapSource	Source/BitmapImageSource.cpp	/^ImageSource* STDCALL CreateBitmapSource(XElement *data)$/;"	f
CreateBitmapTransitionSource	Source/BitmapTransitionSource.cpp	/^ImageSource* STDCALL CreateBitmapTransitionSource(XElement *data)$/;"	f
CreateBrowser	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserWrapper.cs	/^        public bool CreateBrowser(BrowserSource browserSource,$/;"	m	class:Browser.BrowserWrapper
CreateCPUCapture	GraphicsCapture/GraphicsCaptureHook/D3D8Capture.cpp	/^bool CreateCPUCapture(IDirect3DDevice8* device)$/;"	f
CreateConnectionThread	Source/RTMPPublisher.cpp	/^DWORD WINAPI RTMPPublisher::CreateConnectionThread(RTMPPublisher *publisher)$/;"	f	class:RTMPPublisher
CreateDShowSource	DShowPlugin/DShowPlugin.cpp	/^ImageSource* STDCALL CreateDShowSource(XElement *data)$/;"	f
CreateDSoundAudioSource	Source/DSoundAudioSource.cpp	/^AudioSource* CreateDSoundAudioSource()$/;"	f
CreateDelayedPublisher	Source/DelayedPublisher.cpp	/^NetworkStream* CreateDelayedPublisher(DWORD delayTime)$/;"	f
CreateDesktopSource	Source/DesktopImageSource.cpp	/^ImageSource* STDCALL CreateDesktopSource(XElement *data)$/;"	f
CreateDummySwap	GraphicsCapture/GraphicsCaptureHook/DXGICapture.cpp	/^IDXGISwapChain* CreateDummySwap()$/;"	f
CreateDummyWindow	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	/^static inline HWND CreateDummyWindow(LPCTSTR lpClass, LPCTSTR lpName)$/;"	f	file:
CreateElement	OBSApi/Utility/XConfig.cpp	/^XElement* XElement::CreateElement(CTSTR lpName)$/;"	f	class:XElement
CreateElement	OBSApi/Utility/XConfig.h	/^    inline XElement *CreateElement(CTSTR lpName) {return RootElement->CreateElement(lpName);}$/;"	f	class:XConfig
CreateErrorTexture	Source/BitmapImage.cpp	/^void BitmapImage::CreateErrorTexture(void)$/;"	f	class:BitmapImage
CreateFLVFileStream	Source/FLVFileStream.cpp	/^VideoFileStream* CreateFLVFileStream(CTSTR lpFile)$/;"	f
CreateFileStream	Source/OBSCapture.cpp	/^VideoFileStream *CreateFileStream(String strOutputFile)$/;"	f
CreateFromFile	Source/D3D10Texture.cpp	/^Texture* D3D10Texture::CreateFromFile(CTSTR lpFile, BOOL bBuildMipMaps)$/;"	f	class:D3D10Texture
CreateFromMatrix	OBSApi/Utility/XMath.cpp	/^Quat& Quat::CreateFromMatrix(const Matrix &m)$/;"	f	class:Quat
CreateFromQuat	OBSApi/Utility/XMath.cpp	/^void Matrix::CreateFromQuat(const Quat &q)$/;"	f	class:Matrix
CreateFromSharedHandle	OBSApi/GraphicsSystem.h	/^inline Texture* CreateFromSharedHandle(unsigned int width, unsigned int height, HANDLE handle)$/;"	f
CreateFromSharedHandle	Source/D3D10Texture.cpp	/^Texture* D3D10Texture::CreateFromSharedHandle(unsigned int width, unsigned int height, HANDLE handle)$/;"	f	class:D3D10Texture
CreateFromTri	OBSApi/Utility/XMath.cpp	/^void Plane::CreateFromTri(const Vect &a, const Vect &b, const Vect &c)$/;"	f	class:Plane
CreateGDITexture	OBSApi/GraphicsSystem.h	/^inline Texture* CreateGDITexture(unsigned int width, unsigned int height)$/;"	f
CreateGDITexture	Source/D3D10System.cpp	/^Texture* D3D10System::CreateGDITexture(unsigned int width, unsigned int height)$/;"	f	class:D3D10System
CreateGDITexture	Source/D3D10Texture.cpp	/^Texture* D3D10Texture::CreateGDITexture(unsigned int width, unsigned int height)$/;"	f	class:D3D10Texture
CreateGlobalSource	Source/GlobalSource.cpp	/^ImageSource* STDCALL CreateGlobalSource(XElement *data)$/;"	f
CreateGraphicsCaptureSource	GraphicsCapture/GraphicsCapture.cpp	/^ImageSource* STDCALL CreateGraphicsCaptureSource(XElement *data)$/;"	f
CreateHTTPURL	Source/HTTPClient.cpp	/^String CreateHTTPURL(String host, String path, String extra, bool secure)$/;"	f
CreateHook	minhook/src/hook.cpp	/^	MH_STATUS CreateHook(void* pTarget, void* const pDetour, void** ppOriginal)$/;"	f	namespace:MinHook
CreateHotkey	Source/API.cpp	/^UINT OBSAPIInterface::CreateHotkey(DWORD hotkey, OBSHOTKEYPROC hotkeyProc, UPARAM param)$/;"	f	class:OBSAPIInterface
CreateI2	lame/libmp3lame/VbrTag.c	/^CreateI2(unsigned char *buf, int nValue)$/;"	f	file:
CreateI4	lame/libmp3lame/VbrTag.c	/^CreateI4(unsigned char *buf, uint32_t nValue)$/;"	f	file:
CreateImageSource	CLRHostPlugin/CLRHostPlugin/CLRHostApi.cpp	/^CreateImageSource(XElement *element)$/;"	f
CreateImageSource	Source/API.cpp	/^    virtual ImageSource* CreateImageSource(CTSTR lpClassName, XElement *data)$/;"	f	class:OBSAPIInterface
CreateImageSource	Source/API.cpp	/^ImageSource* OBS::CreateImageSource(CTSTR lpClassName, XElement *data)$/;"	f	class:OBS
CreateInstance	lame/dshow/Mpegac.cpp	/^CUnknown *CMpegAudEnc::CreateInstance(LPUNKNOWN lpunk, HRESULT *phr) $/;"	f	class:CMpegAudEnc
CreateInstance	lame/dshow/PropPage.cpp	/^CUnknown *CMpegAudEncPropertyPage::CreateInstance( LPUNKNOWN punk, HRESULT *phr )$/;"	f	class:CMpegAudEncPropertyPage
CreateInstance	lame/dshow/PropPage_adv.cpp	/^CUnknown *CMpegAudEncPropertyPageAdv::CreateInstance( LPUNKNOWN punk, HRESULT *phr )$/;"	f	class:CMpegAudEncPropertyPageAdv
CreateInstance	lame/dshow/aboutprp.cpp	/^CUnknown * WINAPI CMAEAbout::CreateInstance(LPUNKNOWN lpunk, HRESULT *phr)$/;"	f	class:CMAEAbout
CreateMP3Encoder	Source/Encoder_MP3.cpp	/^AudioEncoder* CreateMP3Encoder(UINT bitRate)$/;"	f
CreateMP4FileStream	Source/MP4FileStream.cpp	/^VideoFileStream* CreateMP4FileStream(CTSTR lpFile)$/;"	f
CreateNVENCEncoder	ObsNvenc/src/nvmain.cpp	/^extern "C" __declspec(dllexport) VideoEncoder* __cdecl CreateNVENCEncoder(int fps, int width, int height, int quality, CTSTR preset, bool bUse444, ColorDescription &colorDesc, int maxBitRate, int bufferSize, bool bUseCFR)$/;"	f
CreateNVENCEncoder	Source/Encoder_NVENC.cpp	/^VideoEncoder* CreateNVENCEncoder(int fps, int width, int height, int quality, CTSTR preset, bool bUse444, ColorDescription &colorDesc, int maxBitRate, int bufferSize, bool bUseCFR, String &errors)$/;"	f
CreateNew	OBSApi/Utility/Template.h	/^    inline T* CreateNew()$/;"	f	class:CircularList
CreateNew	OBSApi/Utility/Template.h	/^    inline T* CreateNew()$/;"	f	class:List
CreateNew	OBSApi/Utility/Template.h	/^    inline T* CreateNew(UINT *pID=NULL)$/;"	f	class:SafeList
CreateNormalScene	Source/OBS.cpp	/^Scene* STDCALL CreateNormalScene(XElement *data)$/;"	f
CreateNullAudioEncoder	Source/NullOutput.cpp	/^AudioEncoder*  CreateNullAudioEncoder() {return new NullAudioEncoder;}$/;"	f
CreateNullNetwork	Source/NullOutput.cpp	/^NetworkStream* CreateNullNetwork()      {return new NullNetwork;}$/;"	f
CreateNullVideoEncoder	Source/NullOutput.cpp	/^VideoEncoder*  CreateNullVideoEncoder() {return new NullVideoEncoder;}$/;"	f
CreateOBSApiInterface	Source/API.cpp	/^APIInterface* CreateOBSApiInterface()$/;"	f
CreateOutputDuplicator	Source/D3D10System.cpp	/^OutputDuplicator *D3D10System::CreateOutputDuplicator(UINT outputID)$/;"	f	class:D3D10System
CreatePane	CLRHostPlugin/CLRHostInterop/AbstractWPFSettingsPane.cpp	/^long long AbstractWPFSettingsPane::CreatePane(long long parentHwnd)$/;"	f	class:AbstractWPFSettingsPane
CreatePane	CLRHostPlugin/CLRHostPlugin/CLRSettingsPane.cpp	/^long long CLRSettingsPane::CreatePane(long long parentHwnd)$/;"	f	class:CLRSettingsPane
CreatePane	CLRHostPlugin/CLRHostPlugin/SettingsPaneBridge.h	/^    virtual HWND CreatePane(HWND parentHwnd)$/;"	f	class:SettingsPaneBridge
CreatePane	NoiseGate/NoiseGate.cpp	/^HWND NoiseGateSettings::CreatePane(HWND parentHwnd)$/;"	f	class:NoiseGateSettings
CreatePane	Source/SettingsAdvanced.cpp	/^HWND SettingsAdvanced::CreatePane(HWND parentHwnd)$/;"	f	class:SettingsAdvanced
CreatePane	Source/SettingsAudio.cpp	/^HWND SettingsAudio::CreatePane(HWND parentHwnd)$/;"	f	class:SettingsAudio
CreatePane	Source/SettingsEncoding.cpp	/^HWND SettingsEncoding::CreatePane(HWND parentHwnd)$/;"	f	class:SettingsEncoding
CreatePane	Source/SettingsGeneral.cpp	/^HWND SettingsGeneral::CreatePane(HWND parentHwnd)$/;"	f	class:SettingsGeneral
CreatePane	Source/SettingsHotkeys.cpp	/^HWND SettingsHotkeys::CreatePane(HWND parentHwnd)$/;"	f	class:SettingsHotkeys
CreatePane	Source/SettingsPublish.cpp	/^HWND SettingsPublish::CreatePane(HWND parentHwnd)$/;"	f	class:SettingsPublish
CreatePane	Source/SettingsQSV.cpp	/^HWND SettingsQSV::CreatePane(HWND parentHwnd)$/;"	f	class:SettingsQSV
CreatePane	Source/SettingsVideo.cpp	/^HWND SettingsVideo::CreatePane(HWND parentHwnd)$/;"	f	class:SettingsVideo
CreatePane	scenesw/SceneSwitcherSettings.cpp	/^HWND SceneSwitcherSettings::CreatePane(HWND parentHwnd)$/;"	f	class:SceneSwitcherSettings
CreatePath	OBSApi/Utility/XFile_Windows.cpp	/^BOOL CreatePath(CTSTR lpPath)$/;"	f
CreatePixelShader	OBSApi/GraphicsSystem.h	/^inline Shader* CreatePixelShader(CTSTR lpShader, CTSTR lpFileName)  {return GS->CreatePixelShader(lpShader, lpFileName);}$/;"	f
CreatePixelShader	Source/D3D10Shader.cpp	/^Shader* D3D10PixelShader::CreatePixelShader(CTSTR lpShader, CTSTR lpFileName)$/;"	f	class:D3D10PixelShader
CreatePixelShader	Source/D3D10System.cpp	/^Shader* D3D10System::CreatePixelShader(CTSTR lpShader, CTSTR lpFileName)$/;"	f	class:D3D10System
CreatePixelShaderBlob	Source/D3D10Shader.cpp	/^void D3D10PixelShader::CreatePixelShaderBlob(ShaderBlob &blob, CTSTR lpShader, CTSTR lpFileName)$/;"	f	class:D3D10PixelShader
CreatePixelShaderBlob	Source/D3D10System.cpp	/^void D3D10System::CreatePixelShaderBlob(ShaderBlob &blob, CTSTR lpShader, CTSTR lpFileName)$/;"	f	class:D3D10System
CreatePixelShaderFromBlob	OBSApi/GraphicsSystem.h	/^inline Shader* CreatePixelShaderFromBlob(ShaderBlob const& blob, CTSTR lpShader, CTSTR lpFileName)  {return GS->CreatePixelShaderFromBlob(blob, lpShader, lpFileName);}$/;"	f
CreatePixelShaderFromBlob	Source/D3D10Shader.cpp	/^Shader *D3D10PixelShader::CreatePixelShaderFromBlob(ShaderBlob const &blob, CTSTR lpShader, CTSTR lpFileName)$/;"	f	class:D3D10PixelShader
CreatePixelShaderFromBlob	Source/D3D10System.cpp	/^Shader* D3D10System::CreatePixelShaderFromBlob(ShaderBlob const &blob, CTSTR lpShader, CTSTR lpFileName)$/;"	f	class:D3D10System
CreatePixelShaderFromFile	OBSApi/GraphicsSystem.cpp	/^Shader* GraphicsSystem::CreatePixelShaderFromFile(CTSTR lpFileName)$/;"	f	class:GraphicsSystem
CreatePixelShaderFromFile	OBSApi/GraphicsSystem.h	/^inline Shader* CreatePixelShaderFromFile(CTSTR lpFileName)          {return GS->CreatePixelShaderFromFile(lpFileName);}$/;"	f
CreatePixelShaderFromFileAsync	OBSApi/GraphicsSystem.cpp	/^FuturePixelShader GraphicsSystem::CreatePixelShaderFromFileAsync(CTSTR fileName)$/;"	f	class:GraphicsSystem
CreatePixelShaderFromFileAsync	OBSApi/GraphicsSystem.h	/^inline FuturePixelShader CreatePixelShaderFromFileAsync(CTSTR fileName) {return GS->CreatePixelShaderFromFileAsync(fileName);}$/;"	f
CreatePluginInstance	CLRHostPlugin/CLRHostPlugin/CLRHost.cpp	/^CreatePluginInstance($/;"	f
CreatePluginPtr_t	libmfx/include/mfx_load_plugin.h	/^    typedef mfxStatus (MFX_CDECL *CreatePluginPtr_t)(mfxPluginUID uid, mfxPlugin* plugin);$/;"	t	namespace:MFX
CreateProcess	lame/libtool	/^   CreateProcess().  We must quote the arguments since Win32 CreateProcess()$/;"	f
CreateProcess	lame/ltmain.sh	/^   CreateProcess().  We must quote the arguments since Win32 CreateProcess()$/;"	f
CreateQSVEncoder	Source/Encoder_QSV.cpp	/^VideoEncoder* CreateQSVEncoder(int fps, int width, int height, int quality, CTSTR preset, bool bUse444, ColorDescription &colorDesc, int maxBitRate, int bufferSize, bool bUseCFR, String &errors)$/;"	f
CreateRTMPPublisher	Source/RTMPPublisher.cpp	/^NetworkStream* CreateRTMPPublisher()$/;"	f
CreateRecordingHelper	Source/ReplayBuffer.cpp	/^void CreateRecordingHelper(unique_ptr<VideoFileStream> &stream, packet_list_t &packets)$/;"	f
CreateRenderTarget	OBSApi/GraphicsSystem.h	/^inline Texture* CreateRenderTarget(unsigned int width, unsigned int height, GSColorFormat colorFormat, BOOL bGenMipMaps)$/;"	f
CreateRenderTarget	Source/D3D10System.cpp	/^Texture* D3D10System::CreateRenderTarget(unsigned int width, unsigned int height, GSColorFormat colorFormat, BOOL bGenMipMaps)$/;"	f	class:D3D10System
CreateRenderTarget	Source/D3D10Texture.cpp	/^Texture* D3D10Texture::CreateRenderTarget(unsigned int width, unsigned int height, GSColorFormat colorFormat, BOOL bGenMipMaps)$/;"	f	class:D3D10Texture
CreateReplayBuffer	Source/ReplayBuffer.cpp	/^pair<ReplayBuffer*, unique_ptr<VideoFileStream>> CreateReplayBuffer(int seconds)$/;"	f
CreateSamplerState	OBSApi/GraphicsSystem.h	/^inline SamplerState* CreateSamplerState(SamplerInfo &info)          {return GS->CreateSamplerState(info);}$/;"	f
CreateSamplerState	Source/D3D10System.cpp	/^SamplerState* D3D10System::CreateSamplerState(SamplerInfo &info)$/;"	f	class:D3D10System
CreateSamplerState	Source/D3D10Texture.cpp	/^SamplerState* D3D10SamplerState::CreateSamplerState(SamplerInfo &info)$/;"	f	class:D3D10SamplerState
CreateScene	Source/API.cpp	/^Scene* OBS::CreateScene(CTSTR lpClassName, XElement *data)$/;"	f	class:OBS
CreateShared	Source/D3D10Texture.cpp	/^Texture* D3D10Texture::CreateShared(unsigned int width, unsigned int height)$/;"	f	class:D3D10Texture
CreateSharedHandle	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *CreateSharedHandle )( $/;"	m	struct:IDXGIResource1Vtbl
CreateSharedTexture	CLRHostPlugin/CLRHostInterop/GraphicsSystem.cpp	/^System::IntPtr CLROBS::GraphicsSystem::CreateSharedTexture(unsigned int width, unsigned int height, GSColorFormat colorFormat)$/;"	f	class:CLROBS::GraphicsSystem
CreateSharedTexture	OBSApi/GraphicsSystem.h	/^inline Texture* CreateSharedTexture(unsigned int width, unsigned int height)$/;"	f
CreateSharedTexture	Source/D3D10System.cpp	/^Texture* D3D10System::CreateSharedTexture(unsigned int width, unsigned int height)$/;"	f	class:D3D10System
CreateSoftwareAdapter	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *CreateSoftwareAdapter )( $/;"	m	struct:IDXGIFactory2Vtbl
CreateSubresourceSurface	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *CreateSubresourceSurface )( $/;"	m	struct:IDXGIResource1Vtbl
CreateSurface	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	/^HRESULT STDMETHODCALLTYPE CreateSurface(IDirectDraw7* ddInterface, LPDDSURFACEDESC2 lpDDSurfaceDesc, LPDIRECTDRAWSURFACE7 *lplpDDSurface, IUnknown *pUnkOuter)$/;"	f
CreateSurface	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *CreateSurface )( $/;"	m	struct:IDXGIDevice2Vtbl
CreateSwapChain	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *CreateSwapChain )( $/;"	m	struct:IDXGIFactory2Vtbl
CreateSwapChainForComposition	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *CreateSwapChainForComposition )( $/;"	m	struct:IDXGIFactory2Vtbl
CreateSwapChainForCoreWindow	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *CreateSwapChainForCoreWindow )( $/;"	m	struct:IDXGIFactory2Vtbl
CreateSwapChainForHwnd	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *CreateSwapChainForHwnd )( $/;"	m	struct:IDXGIFactory2Vtbl
CreateTextSource	Source/TextOutputSource.cpp	/^ImageSource* STDCALL CreateTextSource(XElement *data)$/;"	f
CreateTexture	CLRBrowserSourcePlugin/Plugin/BrowserSource.cs	/^        public void CreateTexture(UInt32 width, UInt32 height, out IntPtr textureHandle)$/;"	m	class:CLRBrowserSourcePlugin.BrowserSource
CreateTexture	CLRHostPlugin/CLRHostInterop/GraphicsSystem.cpp	/^CLROBS::Texture^ CLROBS::GraphicsSystem::CreateTexture(unsigned int width, unsigned int height, CLROBS::GSColorFormat colorFormat, System::IntPtr data, bool isBuildingMipMaps, bool isStatic)$/;"	f	class:CLROBS::GraphicsSystem
CreateTexture	CLRHostPlugin/CLRHostInterop/GraphicsSystem.cpp	/^CLROBS::Texture^ CLROBS::GraphicsSystem::CreateTexture(unsigned int width, unsigned int height, CLROBS::GSColorFormat colorFormat, array<System::Byte>^ data, bool isBuildingMipMaps, bool isStatic)$/;"	f	class:CLROBS::GraphicsSystem
CreateTexture	OBSApi/GraphicsSystem.h	/^inline Texture* CreateTexture(unsigned int width, unsigned int height, GSColorFormat colorFormat, void *lpData=NULL, BOOL bGenMipMaps=1, BOOL bStatic=1)$/;"	f
CreateTexture	Source/D3D10System.cpp	/^Texture* D3D10System::CreateTexture(unsigned int width, unsigned int height, GSColorFormat colorFormat, void *lpData, BOOL bBuildMipMaps, BOOL bStatic)$/;"	f	class:D3D10System
CreateTexture	Source/D3D10Texture.cpp	/^Texture* D3D10Texture::CreateTexture(unsigned int width, unsigned int height, GSColorFormat colorFormat, void *lpData, BOOL bGenMipMaps, BOOL bStatic)$/;"	f	class:D3D10Texture
CreateTextureEvent	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserRenderHandler.cs	/^        public CreateTextureEventHandler CreateTextureEvent { private get; set; }$/;"	p	class:Browser.BrowserRenderHandler
CreateTextureEventHandler	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserRenderHandler.cs	/^    public delegate void CreateTextureEventHandler(UInt32 width, UInt32 height, out IntPtr textureHandle);$/;"	m	namespace:Browser
CreateTextureFromFile	OBSApi/GraphicsSystem.h	/^inline Texture* CreateTextureFromFile(CTSTR lpFile, BOOL bBuildMipMaps)$/;"	f
CreateTextureFromFile	Source/D3D10System.cpp	/^Texture* D3D10System::CreateTextureFromFile(CTSTR lpFile, BOOL bBuildMipMaps)$/;"	f	class:D3D10System
CreateTextureFromSharedHandle	CLRHostPlugin/CLRHostInterop/GraphicsSystem.cpp	/^CLROBS::Texture^ CLROBS::GraphicsSystem::CreateTextureFromSharedHandle(unsigned int width, unsigned int height, System::IntPtr sharedHandle)$/;"	f	class:CLROBS::GraphicsSystem
CreateTextureFromSharedHandle	Source/D3D10System.cpp	/^Texture* D3D10System::CreateTextureFromSharedHandle(unsigned int width, unsigned int height, HANDLE handle)$/;"	f	class:D3D10System
CreateTrampolineFunction	minhook/src/trampoline.cpp	/^	bool CreateTrampolineFunction(CREATE_TREMPOLINE_T& ct)$/;"	f	namespace:MinHook
CreateUIElement	CLRBrowserSourcePlugin/Plugin/BrowserSettingsPane.cs	/^        public override UIElement CreateUIElement()$/;"	m	class:CLRBrowserSourcePlugin.BrowserSettingsPane
CreateUIElement	CLRHostPlugin/CLRCSharpSamplePlugin/SampleSettingsPane.cs	/^        public override UIElement CreateUIElement()$/;"	m	class:CSharpSamplePlugin.SampleSettingsPane
CreateUTF8String	OBSApi/Utility/XString.cpp	/^LPSTR String::CreateUTF8String()$/;"	f	class:String
CreateVertexBuffer	OBSApi/GraphicsSystem.h	/^inline VertexBuffer* CreateVertexBuffer(VBData *vbData, BOOL bStatic=1)     {return GS->CreateVertexBuffer(vbData, bStatic);}$/;"	f
CreateVertexBuffer	Source/D3D10System.cpp	/^VertexBuffer* D3D10System::CreateVertexBuffer(VBData *vbData, BOOL bStatic)$/;"	f	class:D3D10System
CreateVertexBuffer	Source/D3D10VertexBuffer.cpp	/^VertexBuffer* D3D10VertexBuffer::CreateVertexBuffer(VBData *vbData, BOOL bStatic)$/;"	f	class:D3D10VertexBuffer
CreateVertexShader	OBSApi/GraphicsSystem.h	/^inline Shader* CreateVertexShader(CTSTR lpShader, CTSTR lpFileName) {return GS->CreateVertexShader(lpShader, lpFileName);}$/;"	f
CreateVertexShader	Source/D3D10Shader.cpp	/^Shader* D3D10VertexShader::CreateVertexShader(CTSTR lpShader, CTSTR lpFileName)$/;"	f	class:D3D10VertexShader
CreateVertexShader	Source/D3D10System.cpp	/^Shader* D3D10System::CreateVertexShader(CTSTR lpShader, CTSTR lpFileName)$/;"	f	class:D3D10System
CreateVertexShaderBlob	Source/D3D10Shader.cpp	/^void D3D10VertexShader::CreateVertexShaderBlob(ShaderBlob &blob, CTSTR lpShader, CTSTR lpFileName)$/;"	f	class:D3D10VertexShader
CreateVertexShaderBlob	Source/D3D10System.cpp	/^void D3D10System::CreateVertexShaderBlob(ShaderBlob &blob, CTSTR lpShader, CTSTR lpFileName)$/;"	f	class:D3D10System
CreateVertexShaderFromBlob	OBSApi/GraphicsSystem.h	/^inline Shader* CreateVertexShaderFromBlob(ShaderBlob const& blob, CTSTR lpShader, CTSTR lpFileName) {return GS->CreateVertexShaderFromBlob(blob, lpShader, lpFileName);}$/;"	f
CreateVertexShaderFromBlob	Source/D3D10Shader.cpp	/^Shader* D3D10VertexShader::CreateVertexShaderFromBlob(ShaderBlob const &blob, CTSTR lpShader, CTSTR lpFileName)$/;"	f	class:D3D10VertexShader
CreateVertexShaderFromBlob	Source/D3D10System.cpp	/^Shader* D3D10System::CreateVertexShaderFromBlob(ShaderBlob const &blob, CTSTR lpShader, CTSTR lpFileName)$/;"	f	class:D3D10System
CreateVertexShaderFromFile	OBSApi/GraphicsSystem.cpp	/^Shader* GraphicsSystem::CreateVertexShaderFromFile(CTSTR lpFileName)$/;"	f	class:GraphicsSystem
CreateVertexShaderFromFile	OBSApi/GraphicsSystem.h	/^inline Shader* CreateVertexShaderFromFile(CTSTR lpFileName)         {return GS->CreateVertexShaderFromFile(lpFileName);}$/;"	f
CreateVideoProcessor	QSVHelper/IntelSupport/src/d3d11_device.cpp	/^mfxStatus CD3D11Device::CreateVideoProcessor(mfxFrameSurface1 * pSrf)$/;"	f	class:CD3D11Device
CreateX264Encoder	Source/Encoder_x264.cpp	/^VideoEncoder* CreateX264Encoder(int fps, int width, int height, int quality, CTSTR preset, bool bUse444, ColorDescription &colorDesc, int maxBitRate, int bufferSize, bool bUseCFR)$/;"	f
CriticalExit	OBSApi/Utility/XT.cpp	/^void STDCALL CriticalExit()$/;"	f
CriticalSection	minhook/src/thread.cpp	/^	CriticalSection::CriticalSection()$/;"	f	class:MinHook::CriticalSection
CriticalSection	minhook/src/thread.h	/^	class CriticalSection$/;"	c	namespace:MinHook
CropH	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16  CropH;$/;"	m
CropW	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16  CropW;$/;"	m
CropX	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16  CropX;$/;"	m
CropY	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16  CropY;$/;"	m
Cross	OBSApi/Utility/XMath.h	/^    inline Vect  Cross(const Vect &v) const         {return (*this)^v;}$/;"	f	struct:Vect
Cross	OBSApi/Utility/XMath.h	/^    inline Vect Cross(const Vect &v) const$/;"	f	struct:Vect
Cross	OBSApi/Utility/XMath.h	/^    inline Vect2& Cross()$/;"	f	struct:Vect2
CtType	libmfx/include/msdk/include/mfxstructures.h	/^      mfxU16    CtType;$/;"	m
CubeTextureFilterCaps	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	/^    DWORD   CubeTextureFilterCaps;      \/\/ D3DPTFILTERCAPS for IDirect3DCubeTexture8's$/;"	m	struct:_D3DCAPS8
CubicInterpolateQuat	OBSApi/Utility/XMath.cpp	/^Quat CubicInterpolateQuat(const Quat &q0, const Quat &q1, const Quat &m0, const Quat &m1, float t)$/;"	f
CurrentDateTimeString	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	/^string CurrentDateTimeString()$/;"	f
CurrentDateTimeString	OBSApi/Utility/XT.cpp	/^String CurrentDateTimeString()$/;"	f
CurrentDeviceExists	DShowPlugin/DShowPlugin.cpp	/^bool CurrentDeviceExists(CTSTR lpDevice, bool bGlobal, bool &isGlobal)$/;"	f
CurrentLogFilename	OBSApi/Utility/XT.cpp	/^String CurrentLogFilename()$/;"	f
CurrentPackets	Source/Encoder_QSV.cpp	/^    List<VideoPacket> CurrentPackets;$/;"	m	class:QSVEncoder	file:
CurrentPackets	Source/Encoder_x264.cpp	/^    List<VideoPacket> CurrentPackets;$/;"	m	class:X264Encoder	file:
CurrentStep	lame/libmp3lame/util.h	/^        int     CurrentStep[2];$/;"	m
CurrentTimeString	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	/^string CurrentTimeString()$/;"	f
CurrentTimeString	OBSApi/Utility/XT.cpp	/^String CurrentTimeString()$/;"	f
CursiveFontFamily	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public string CursiveFontFamily { get; set; }$/;"	p	class:Shared.BrowserInstanceSettings
CursorCaps	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	/^    DWORD   CursorCaps;$/;"	m	struct:_D3DCAPS8
CustomPluginDirectories	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public List<String> CustomPluginDirectories;$/;"	f	class:Shared.BrowserPluginSettings
CustomPluginPaths	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public List<String> CustomPluginPaths;$/;"	f	class:Shared.BrowserPluginSettings
CylinderIntersects	OBSApi/Utility/XMath.cpp	/^BOOL Bounds::CylinderIntersects(const Vect &center, float radius, float height) const$/;"	f	class:Bounds
CylinderRayCollision	OBSApi/Utility/XMath.cpp	/^BOOL CylinderRayCollision(const Vect &center, float radius, float height, const Vect &rayOrig, const Vect &rayDir, Vect *collision, Plane *collisionPlane)$/;"	f
D3D10.1Capture.cpp	GraphicsCapture/GraphicsCaptureHook/D3D10.1Capture.cpp	1;"	F
D3D101CREATEPROC	GraphicsCapture/GraphicsCaptureHook/DXGICapture.cpp	/^typedef HRESULT (WINAPI *D3D101CREATEPROC)(IDXGIAdapter*, D3D10_DRIVER_TYPE, HMODULE, UINT, D3D10_FEATURE_LEVEL1, UINT, DXGI_SWAP_CHAIN_DESC*, IDXGISwapChain**, IUnknown**);$/;"	t	file:
D3D10CREATEPROC	GraphicsCapture/GraphicsCaptureHook/DXGICapture.cpp	/^typedef HRESULT (WINAPI *D3D10CREATEPROC)(IDXGIAdapter*, D3D10_DRIVER_TYPE, HMODULE, UINT, UINT, DXGI_SWAP_CHAIN_DESC*, IDXGISwapChain**, IUnknown**);$/;"	t	file:
D3D10Capture.cpp	GraphicsCapture/GraphicsCaptureHook/D3D10Capture.cpp	1;"	F
D3D10OutputDuplicator	Source/D3D10System.h	/^class D3D10OutputDuplicator : public OutputDuplicator$/;"	c
D3D10OutputDuplicator.cpp	Source/D3D10OutputDuplicator.cpp	1;"	F
D3D10PixelShader	Source/D3D10System.h	/^class D3D10PixelShader : public D3D10Shader$/;"	c
D3D10SamplerState	Source/D3D10System.h	/^class D3D10SamplerState : public SamplerState$/;"	c
D3D10Shader	Source/D3D10System.h	/^class D3D10Shader : public Shader$/;"	c
D3D10Shader.cpp	Source/D3D10Shader.cpp	1;"	F
D3D10ShaderProcessor.cpp	Source/D3D10ShaderProcessor.cpp	1;"	F
D3D10System	Source/D3D10System.cpp	/^D3D10System::D3D10System()$/;"	f	class:D3D10System
D3D10System	Source/D3D10System.h	/^class D3D10System : public GraphicsSystem$/;"	c
D3D10System.cpp	Source/D3D10System.cpp	1;"	F
D3D10System.h	Source/D3D10System.h	1;"	F
D3D10Texture	Source/D3D10System.h	/^class D3D10Texture : public Texture$/;"	c
D3D10Texture.cpp	Source/D3D10Texture.cpp	1;"	F
D3D10VertexBuffer	Source/D3D10System.h	/^class D3D10VertexBuffer : public VertexBuffer$/;"	c
D3D10VertexBuffer.cpp	Source/D3D10VertexBuffer.cpp	1;"	F
D3D10VertexShader	Source/D3D10System.h	/^class D3D10VertexShader : public D3D10Shader$/;"	c
D3D11AllocatorParams	QSVHelper/IntelSupport/include/d3d11_allocator.h	/^    D3D11AllocatorParams()$/;"	f	struct:D3D11AllocatorParams
D3D11AllocatorParams	QSVHelper/IntelSupport/include/d3d11_allocator.h	/^struct D3D11AllocatorParams : mfxAllocatorParams$/;"	s
D3D11CREATEPROC	GraphicsCapture/GraphicsCaptureHook/DXGICapture.cpp	/^typedef HRESULT (WINAPI*D3D11CREATEPROC)(IDXGIAdapter*, D3D_DRIVER_TYPE, HMODULE, UINT, D3D_FEATURE_LEVEL*, UINT, UINT, DXGI_SWAP_CHAIN_DESC*, IDXGISwapChain**, IUnknown**, D3D_FEATURE_LEVEL*, IUnknown**);$/;"	t	file:
D3D11Capture.cpp	GraphicsCapture/GraphicsCaptureHook/D3D11Capture.cpp	1;"	F
D3D11DeviceReleaseHook	GraphicsCapture/GraphicsCaptureHook/D3D11Capture.cpp	/^UINT STDMETHODCALLTYPE D3D11DeviceReleaseHook(ID3D10Device *device)$/;"	f
D3D11FrameAllocator	QSVHelper/IntelSupport/include/d3d11_allocator.h	/^class D3D11FrameAllocator: public BaseFrameAllocator$/;"	c
D3D11FrameAllocator	QSVHelper/IntelSupport/src/d3d11_allocator.cpp	/^D3D11FrameAllocator::D3D11FrameAllocator()$/;"	f	class:D3D11FrameAllocator
D3D8CREATEPROC	GraphicsCapture/GraphicsCaptureHook/D3D8Capture.cpp	/^typedef IDirect3D8* (WINAPI*D3D8CREATEPROC)(UINT);$/;"	t	file:
D3D8Capture.cpp	GraphicsCapture/GraphicsCaptureHook/D3D8Capture.cpp	1;"	F
D3D8EndScene	GraphicsCapture/GraphicsCaptureHook/D3D8Capture.cpp	/^HRESULT STDMETHODCALLTYPE D3D8EndScene(IDirect3DDevice8* device)$/;"	f
D3D8Present	GraphicsCapture/GraphicsCaptureHook/D3D8Capture.cpp	/^HRESULT STDMETHODCALLTYPE D3D8Present(IDirect3DDevice8* device, CONST RECT* pSourceRect, CONST RECT* pDestRect, HWND hDestWindowOverride, CONST RGNDATA* pDirtyRegion)$/;"	f
D3D8Release	GraphicsCapture/GraphicsCaptureHook/D3D8Capture.cpp	/^ULONG STDMETHODCALLTYPE D3D8Release(IDirect3DDevice8* device)$/;"	f
D3D8Reset	GraphicsCapture/GraphicsCaptureHook/D3D8Capture.cpp	/^HRESULT STDMETHODCALLTYPE D3D8Reset(IDirect3DDevice8* device, D3DPRESENT_PARAMETERS* pPresentationParameters)$/;"	f
D3D9CREATEEXPROC	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^typedef HRESULT (WINAPI*D3D9CREATEEXPROC)(UINT, IDirect3D9Ex**);$/;"	t	file:
D3D9CREATEEXPROC	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^typedef HRESULT (WINAPI*D3D9CREATEEXPROC)(UINT, IDirect3D9Ex**);$/;"	t	file:
D3D9CREATEPROC	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^typedef IDirect3D9* (WINAPI*D3D9CREATEPROC)(UINT);$/;"	t	file:
D3D9Capture.cpp	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	1;"	F
D3D9Device	libmfx/include/mfx_dxva2_device.h	/^class D3D9Device : public DXDevice$/;"	c	namespace:MFX
D3D9Device	libmfx/src/mfx_dxva2_device.cpp	/^D3D9Device::D3D9Device(void)$/;"	f	class:D3D9Device
D3D9EndScene	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^HRESULT STDMETHODCALLTYPE D3D9EndScene(IDirect3DDevice9 *device)$/;"	f
D3D9EndScenePROC	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^typedef HRESULT(STDMETHODCALLTYPE *D3D9EndScenePROC)(IDirect3DDevice9 *device);$/;"	t	file:
D3D9LogStuff.cpp	GraphicsCapture/GraphicsCaptureHook/D3D9LogStuff.cpp	1;"	F
D3D9Present	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^HRESULT STDMETHODCALLTYPE D3D9Present(IDirect3DDevice9 *device, CONST RECT* pSourceRect, CONST RECT* pDestRect, HWND hDestWindowOverride, CONST RGNDATA* pDirtyRegion)$/;"	f
D3D9PresentEx	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^HRESULT STDMETHODCALLTYPE D3D9PresentEx(IDirect3DDevice9Ex *device, CONST RECT* pSourceRect, CONST RECT* pDestRect, HWND hDestWindowOverride, CONST RGNDATA* pDirtyRegion, DWORD dwFlags)$/;"	f
D3D9Release	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^ULONG STDMETHODCALLTYPE D3D9Release(IDirect3DDevice9 *device)$/;"	f
D3D9Reset	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^HRESULT STDMETHODCALLTYPE D3D9Reset(IDirect3DDevice9 *device, D3DPRESENT_PARAMETERS *params)$/;"	f
D3D9ResetEx	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^HRESULT STDMETHODCALLTYPE D3D9ResetEx(IDirect3DDevice9Ex *device, D3DPRESENT_PARAMETERS *params, D3DDISPLAYMODEEX *fullscreenData)$/;"	f
D3D9ResetExPROC	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^typedef HRESULT(STDMETHODCALLTYPE *D3D9ResetExPROC)(IDirect3DDevice9Ex *device, D3DPRESENT_PARAMETERS *params, D3DDISPLAYMODEEX *fullscreenData);$/;"	t	file:
D3D9ResetPROC	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^typedef HRESULT(STDMETHODCALLTYPE *D3D9ResetPROC)(IDirect3DDevice9 *device, D3DPRESENT_PARAMETERS *params);$/;"	t	file:
D3D9SwapPresent	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^HRESULT STDMETHODCALLTYPE D3D9SwapPresent(IDirect3DSwapChain9 *swap, CONST RECT* pSourceRect, CONST RECT* pDestRect, HWND hDestWindowOverride, CONST RGNDATA* pDirtyRegion, DWORD dwFlags)$/;"	f
D3DADAPTER_DEFAULT	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1196;"	d
D3DADAPTER_IDENTIFIER8	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DADAPTER_IDENTIFIER8;$/;"	t
D3DAPI	GraphicsCapture/GraphicsCaptureHook/d3d8.h	42;"	d
D3DBACKBUFFER_TYPE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DBACKBUFFER_TYPE;$/;"	t
D3DBACKBUFFER_TYPE_FORCE_DWORD	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DBACKBUFFER_TYPE_FORCE_DWORD  = 0x7fffffff$/;"	e	enum:_D3DBACKBUFFER_TYPE
D3DBACKBUFFER_TYPE_LEFT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DBACKBUFFER_TYPE_LEFT         = 1,$/;"	e	enum:_D3DBACKBUFFER_TYPE
D3DBACKBUFFER_TYPE_MONO	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DBACKBUFFER_TYPE_MONO         = 0,$/;"	e	enum:_D3DBACKBUFFER_TYPE
D3DBACKBUFFER_TYPE_RIGHT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DBACKBUFFER_TYPE_RIGHT        = 2,$/;"	e	enum:_D3DBACKBUFFER_TYPE
D3DBASISTYPE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DBASISTYPE;$/;"	t
D3DBASIS_BEZIER	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^   D3DBASIS_BEZIER      = 0,$/;"	e	enum:_D3DBASISTYPE
D3DBASIS_BSPLINE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^   D3DBASIS_BSPLINE     = 1,$/;"	e	enum:_D3DBASISTYPE
D3DBASIS_FORCE_DWORD	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^   D3DBASIS_FORCE_DWORD = 0x7fffffff,$/;"	e	enum:_D3DBASISTYPE
D3DBASIS_INTERPOLATE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^   D3DBASIS_INTERPOLATE = 2,$/;"	e	enum:_D3DBASISTYPE
D3DBLEND	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DBLEND;$/;"	t
D3DBLENDOP	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DBLENDOP;$/;"	t
D3DBLENDOP_ADD	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DBLENDOP_ADD              = 1,$/;"	e	enum:_D3DBLENDOP
D3DBLENDOP_FORCE_DWORD	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DBLENDOP_FORCE_DWORD      = 0x7fffffff, \/* force 32-bit size enum *\/$/;"	e	enum:_D3DBLENDOP
D3DBLENDOP_MAX	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DBLENDOP_MAX              = 5,$/;"	e	enum:_D3DBLENDOP
D3DBLENDOP_MIN	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DBLENDOP_MIN              = 4,$/;"	e	enum:_D3DBLENDOP
D3DBLENDOP_REVSUBTRACT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DBLENDOP_REVSUBTRACT      = 3,$/;"	e	enum:_D3DBLENDOP
D3DBLENDOP_SUBTRACT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DBLENDOP_SUBTRACT         = 2,$/;"	e	enum:_D3DBLENDOP
D3DBLEND_BOTHINVSRCALPHA	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DBLEND_BOTHINVSRCALPHA    = 13,$/;"	e	enum:_D3DBLEND
D3DBLEND_BOTHSRCALPHA	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DBLEND_BOTHSRCALPHA       = 12,$/;"	e	enum:_D3DBLEND
D3DBLEND_DESTALPHA	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DBLEND_DESTALPHA          = 7,$/;"	e	enum:_D3DBLEND
D3DBLEND_DESTCOLOR	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DBLEND_DESTCOLOR          = 9,$/;"	e	enum:_D3DBLEND
D3DBLEND_FORCE_DWORD	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DBLEND_FORCE_DWORD        = 0x7fffffff, \/* force 32-bit size enum *\/$/;"	e	enum:_D3DBLEND
D3DBLEND_INVDESTALPHA	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DBLEND_INVDESTALPHA       = 8,$/;"	e	enum:_D3DBLEND
D3DBLEND_INVDESTCOLOR	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DBLEND_INVDESTCOLOR       = 10,$/;"	e	enum:_D3DBLEND
D3DBLEND_INVSRCALPHA	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DBLEND_INVSRCALPHA        = 6,$/;"	e	enum:_D3DBLEND
D3DBLEND_INVSRCCOLOR	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DBLEND_INVSRCCOLOR        = 4,$/;"	e	enum:_D3DBLEND
D3DBLEND_ONE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DBLEND_ONE                = 2,$/;"	e	enum:_D3DBLEND
D3DBLEND_SRCALPHA	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DBLEND_SRCALPHA           = 5,$/;"	e	enum:_D3DBLEND
D3DBLEND_SRCALPHASAT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DBLEND_SRCALPHASAT        = 11,$/;"	e	enum:_D3DBLEND
D3DBLEND_SRCCOLOR	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DBLEND_SRCCOLOR           = 3,$/;"	e	enum:_D3DBLEND
D3DBLEND_ZERO	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DBLEND_ZERO               = 1,$/;"	e	enum:_D3DBLEND
D3DBOX	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DBOX;$/;"	t
D3DCAPS2_CANCALIBRATEGAMMA	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	115;"	d
D3DCAPS2_CANMANAGERESOURCE	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	117;"	d
D3DCAPS2_CANRENDERWINDOWED	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	114;"	d
D3DCAPS2_DYNAMICTEXTURES	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	118;"	d
D3DCAPS2_FULLSCREENGAMMA	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	113;"	d
D3DCAPS2_NO2DDURING3DSCENE	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	112;"	d
D3DCAPS2_RESERVED	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	116;"	d
D3DCAPS3_ALPHA_FULLSCREEN_FLIP_OR_DISCARD	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	128;"	d
D3DCAPS3_RESERVED	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	123;"	d
D3DCAPS8	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	/^} D3DCAPS8;$/;"	t
D3DCAPS_READ_SCANLINE	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	107;"	d
D3DCLEAR_STENCIL	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	188;"	d
D3DCLEAR_TARGET	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	186;"	d
D3DCLEAR_ZBUFFER	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	187;"	d
D3DCLIPPLANE0	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	110;"	d
D3DCLIPPLANE1	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	111;"	d
D3DCLIPPLANE2	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	112;"	d
D3DCLIPPLANE3	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	113;"	d
D3DCLIPPLANE4	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	114;"	d
D3DCLIPPLANE5	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	115;"	d
D3DCLIPSTATUS8	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DCLIPSTATUS8;$/;"	t
D3DCMPFUNC	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DCMPFUNC;$/;"	t
D3DCMP_ALWAYS	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DCMP_ALWAYS               = 8,$/;"	e	enum:_D3DCMPFUNC
D3DCMP_EQUAL	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DCMP_EQUAL                = 3,$/;"	e	enum:_D3DCMPFUNC
D3DCMP_FORCE_DWORD	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DCMP_FORCE_DWORD          = 0x7fffffff, \/* force 32-bit size enum *\/$/;"	e	enum:_D3DCMPFUNC
D3DCMP_GREATER	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DCMP_GREATER              = 5,$/;"	e	enum:_D3DCMPFUNC
D3DCMP_GREATEREQUAL	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DCMP_GREATEREQUAL         = 7,$/;"	e	enum:_D3DCMPFUNC
D3DCMP_LESS	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DCMP_LESS                 = 2,$/;"	e	enum:_D3DCMPFUNC
D3DCMP_LESSEQUAL	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DCMP_LESSEQUAL            = 4,$/;"	e	enum:_D3DCMPFUNC
D3DCMP_NEVER	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DCMP_NEVER                = 1,$/;"	e	enum:_D3DCMPFUNC
D3DCMP_NOTEQUAL	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DCMP_NOTEQUAL             = 6,$/;"	e	enum:_D3DCMPFUNC
D3DCOLOR	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef DWORD D3DCOLOR;$/;"	t
D3DCOLORVALUE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DCOLORVALUE;$/;"	t
D3DCOLORVALUE_DEFINED	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	63;"	d
D3DCOLORWRITEENABLE_ALPHA	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	433;"	d
D3DCOLORWRITEENABLE_BLUE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	432;"	d
D3DCOLORWRITEENABLE_GREEN	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	431;"	d
D3DCOLORWRITEENABLE_RED	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	430;"	d
D3DCOLOR_ARGB	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	37;"	d
D3DCOLOR_COLORVALUE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	43;"	d
D3DCOLOR_DEFINED	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	33;"	d
D3DCOLOR_RGBA	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	39;"	d
D3DCOLOR_XRGB	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	40;"	d
D3DCREATE_DISABLE_DRIVER_MANAGEMENT	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1187;"	d
D3DCREATE_FPU_PRESERVE	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1179;"	d
D3DCREATE_HARDWARE_VERTEXPROCESSING	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1184;"	d
D3DCREATE_MIXED_VERTEXPROCESSING	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1185;"	d
D3DCREATE_MULTITHREADED	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1180;"	d
D3DCREATE_PUREDEVICE	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1182;"	d
D3DCREATE_SOFTWARE_VERTEXPROCESSING	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1183;"	d
D3DCS_ALL	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	134;"	d
D3DCS_BACK	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	126;"	d
D3DCS_BOTTOM	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	124;"	d
D3DCS_FRONT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	125;"	d
D3DCS_LEFT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	121;"	d
D3DCS_PLANE0	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	127;"	d
D3DCS_PLANE1	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	128;"	d
D3DCS_PLANE2	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	129;"	d
D3DCS_PLANE3	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	130;"	d
D3DCS_PLANE4	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	131;"	d
D3DCS_PLANE5	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	132;"	d
D3DCS_RIGHT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	122;"	d
D3DCS_TOP	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	123;"	d
D3DCUBEMAP_FACES	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DCUBEMAP_FACES;$/;"	t
D3DCUBEMAP_FACE_FORCE_DWORD	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DCUBEMAP_FACE_FORCE_DWORD    = 0x7fffffff$/;"	e	enum:_D3DCUBEMAP_FACES
D3DCUBEMAP_FACE_NEGATIVE_X	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DCUBEMAP_FACE_NEGATIVE_X     = 1,$/;"	e	enum:_D3DCUBEMAP_FACES
D3DCUBEMAP_FACE_NEGATIVE_Y	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DCUBEMAP_FACE_NEGATIVE_Y     = 3,$/;"	e	enum:_D3DCUBEMAP_FACES
D3DCUBEMAP_FACE_NEGATIVE_Z	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DCUBEMAP_FACE_NEGATIVE_Z     = 5,$/;"	e	enum:_D3DCUBEMAP_FACES
D3DCUBEMAP_FACE_POSITIVE_X	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DCUBEMAP_FACE_POSITIVE_X     = 0,$/;"	e	enum:_D3DCUBEMAP_FACES
D3DCUBEMAP_FACE_POSITIVE_Y	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DCUBEMAP_FACE_POSITIVE_Y     = 2,$/;"	e	enum:_D3DCUBEMAP_FACES
D3DCUBEMAP_FACE_POSITIVE_Z	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DCUBEMAP_FACE_POSITIVE_Z     = 4,$/;"	e	enum:_D3DCUBEMAP_FACES
D3DCULL	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DCULL;$/;"	t
D3DCULL_CCW	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DCULL_CCW                 = 3,$/;"	e	enum:_D3DCULL
D3DCULL_CW	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DCULL_CW                  = 2,$/;"	e	enum:_D3DCULL
D3DCULL_FORCE_DWORD	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DCULL_FORCE_DWORD         = 0x7fffffff, \/* force 32-bit size enum *\/$/;"	e	enum:_D3DCULL
D3DCULL_NONE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DCULL_NONE                = 1,$/;"	e	enum:_D3DCULL
D3DCURRENT_DISPLAY_MODE	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1171;"	d
D3DCURSORCAPS_COLOR	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	144;"	d
D3DCURSORCAPS_LOWRES	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	146;"	d
D3DCURSOR_IMMEDIATE_UPDATE	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1229;"	d
D3DCreateFunctionPtr_t	libmfx/src/mfx_dxva2_device.cpp	/^    IDirect3D9 * (WINAPI *D3DCreateFunctionPtr_t) (UINT);$/;"	t	file:
D3DDEBUGMONITORTOKENS	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DDEBUGMONITORTOKENS;$/;"	t
D3DDEVCAPS_CANBLTSYSTONONLOCAL	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	164;"	d
D3DDEVCAPS_CANRENDERAFTERFLIP	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	158;"	d
D3DDEVCAPS_DRAWPRIMITIVES2	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	160;"	d
D3DDEVCAPS_DRAWPRIMITIVES2EX	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	162;"	d
D3DDEVCAPS_DRAWPRIMTLVERTEX	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	157;"	d
D3DDEVCAPS_EXECUTESYSTEMMEMORY	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	151;"	d
D3DDEVCAPS_EXECUTEVIDEOMEMORY	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	152;"	d
D3DDEVCAPS_HWRASTERIZATION	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	165;"	d
D3DDEVCAPS_HWTRANSFORMANDLIGHT	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	163;"	d
D3DDEVCAPS_NPATCHES	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	170;"	d
D3DDEVCAPS_PUREDEVICE	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	166;"	d
D3DDEVCAPS_QUINTICRTPATCHES	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	167;"	d
D3DDEVCAPS_RTPATCHES	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	168;"	d
D3DDEVCAPS_RTPATCHHANDLEZERO	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	169;"	d
D3DDEVCAPS_SEPARATETEXTUREMEMORIES	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	161;"	d
D3DDEVCAPS_TEXTURENONLOCALVIDMEM	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	159;"	d
D3DDEVCAPS_TEXTURESYSTEMMEMORY	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	155;"	d
D3DDEVCAPS_TEXTUREVIDEOMEMORY	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	156;"	d
D3DDEVCAPS_TLVERTEXSYSTEMMEMORY	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	153;"	d
D3DDEVCAPS_TLVERTEXVIDEOMEMORY	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	154;"	d
D3DDEVICE_CREATION_PARAMETERS	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DDEVICE_CREATION_PARAMETERS;$/;"	t
D3DDEVINFOID_RESOURCEMANAGER	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1641;"	d
D3DDEVINFOID_VERTEXSTATS	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1642;"	d
D3DDEVINFO_D3DVERTEXSTATS	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DDEVINFO_D3DVERTEXSTATS, *LPD3DDEVINFO_D3DVERTEXSTATS;$/;"	t
D3DDEVINFO_RESOURCEMANAGER	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DDEVINFO_RESOURCEMANAGER, *LPD3DDEVINFO_RESOURCEMANAGER;$/;"	t
D3DDEVTYPE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DDEVTYPE;$/;"	t
D3DDEVTYPE_FORCE_DWORD	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DDEVTYPE_FORCE_DWORD  = 0x7fffffff$/;"	e	enum:_D3DDEVTYPE
D3DDEVTYPE_HAL	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DDEVTYPE_HAL         = 1,$/;"	e	enum:_D3DDEVTYPE
D3DDEVTYPE_REF	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DDEVTYPE_REF         = 2,$/;"	e	enum:_D3DDEVTYPE
D3DDEVTYPE_SW	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DDEVTYPE_SW          = 3,$/;"	e	enum:_D3DDEVTYPE
D3DDISPLAYMODE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DDISPLAYMODE;$/;"	t
D3DDMT_DISABLE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DDMT_DISABLE           = 1,    \/\/ disable debug monitor$/;"	e	enum:_D3DDEBUGMONITORTOKENS
D3DDMT_ENABLE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DDMT_ENABLE            = 0,    \/\/ enable debug monitor$/;"	e	enum:_D3DDEBUGMONITORTOKENS
D3DDMT_FORCE_DWORD	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DDMT_FORCE_DWORD     = 0x7fffffff,$/;"	e	enum:_D3DDEBUGMONITORTOKENS
D3DDP_MAXTEXCOORD	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	870;"	d
D3DENUM_NO_WHQL_LEVEL	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1204;"	d
D3DERR_CONFLICTINGRENDERSTATE	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1258;"	d
D3DERR_CONFLICTINGTEXTUREFILTER	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1256;"	d
D3DERR_CONFLICTINGTEXTUREPALETTE	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1260;"	d
D3DERR_DEVICELOST	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1265;"	d
D3DERR_DEVICENOTRESET	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1266;"	d
D3DERR_DRIVERINTERNALERROR	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1261;"	d
D3DERR_DRIVERINVALIDCALL	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1271;"	d
D3DERR_INVALIDCALL	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1270;"	d
D3DERR_INVALIDDEVICE	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1269;"	d
D3DERR_MOREDATA	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1264;"	d
D3DERR_NOTAVAILABLE	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1267;"	d
D3DERR_NOTFOUND	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1263;"	d
D3DERR_OUTOFVIDEOMEMORY	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1268;"	d
D3DERR_TOOMANYOPERATIONS	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1255;"	d
D3DERR_UNSUPPORTEDALPHAARG	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1254;"	d
D3DERR_UNSUPPORTEDALPHAOPERATION	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1253;"	d
D3DERR_UNSUPPORTEDCOLORARG	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1252;"	d
D3DERR_UNSUPPORTEDCOLOROPERATION	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1251;"	d
D3DERR_UNSUPPORTEDFACTORVALUE	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1257;"	d
D3DERR_UNSUPPORTEDTEXTUREFILTER	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1259;"	d
D3DERR_WRONGTEXTUREFORMAT	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1250;"	d
D3DExCreateFunctionPtr_t	libmfx/src/mfx_dxva2_device.cpp	/^    HRESULT (WINAPI *D3DExCreateFunctionPtr_t) (UINT, IDirect3D9Ex **);$/;"	t	file:
D3DFILLMODE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DFILLMODE;$/;"	t
D3DFILL_FORCE_DWORD	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DFILL_FORCE_DWORD         = 0x7fffffff, \/* force 32-bit size enum *\/$/;"	e	enum:_D3DFILLMODE
D3DFILL_POINT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DFILL_POINT               = 1,$/;"	e	enum:_D3DFILLMODE
D3DFILL_SOLID	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DFILL_SOLID               = 3,$/;"	e	enum:_D3DFILLMODE
D3DFILL_WIREFRAME	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DFILL_WIREFRAME           = 2,$/;"	e	enum:_D3DFILLMODE
D3DFMT_A1R5G5B5	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DFMT_A1R5G5B5             = 25,$/;"	e	enum:_D3DFORMAT
D3DFMT_A2B10G10R10	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DFMT_A2B10G10R10          = 31,$/;"	e	enum:_D3DFORMAT
D3DFMT_A2W10V10U10	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DFMT_A2W10V10U10          = 67,$/;"	e	enum:_D3DFORMAT
D3DFMT_A4L4	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DFMT_A4L4                 = 52,$/;"	e	enum:_D3DFORMAT
D3DFMT_A4R4G4B4	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DFMT_A4R4G4B4             = 26,$/;"	e	enum:_D3DFORMAT
D3DFMT_A8	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DFMT_A8                   = 28,$/;"	e	enum:_D3DFORMAT
D3DFMT_A8L8	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DFMT_A8L8                 = 51,$/;"	e	enum:_D3DFORMAT
D3DFMT_A8P8	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DFMT_A8P8                 = 40,$/;"	e	enum:_D3DFORMAT
D3DFMT_A8R3G3B2	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DFMT_A8R3G3B2             = 29,$/;"	e	enum:_D3DFORMAT
D3DFMT_A8R8G8B8	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DFMT_A8R8G8B8             = 21,$/;"	e	enum:_D3DFORMAT
D3DFMT_D15S1	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DFMT_D15S1                = 73,$/;"	e	enum:_D3DFORMAT
D3DFMT_D16	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DFMT_D16                  = 80,$/;"	e	enum:_D3DFORMAT
D3DFMT_D16_LOCKABLE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DFMT_D16_LOCKABLE         = 70,$/;"	e	enum:_D3DFORMAT
D3DFMT_D24S8	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DFMT_D24S8                = 75,$/;"	e	enum:_D3DFORMAT
D3DFMT_D24X4S4	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DFMT_D24X4S4              = 79,$/;"	e	enum:_D3DFORMAT
D3DFMT_D24X8	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DFMT_D24X8                = 77,$/;"	e	enum:_D3DFORMAT
D3DFMT_D32	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DFMT_D32                  = 71,$/;"	e	enum:_D3DFORMAT
D3DFMT_DXT1	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DFMT_DXT1                 = MAKEFOURCC('D', 'X', 'T', '1'),$/;"	e	enum:_D3DFORMAT
D3DFMT_DXT2	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DFMT_DXT2                 = MAKEFOURCC('D', 'X', 'T', '2'),$/;"	e	enum:_D3DFORMAT
D3DFMT_DXT3	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DFMT_DXT3                 = MAKEFOURCC('D', 'X', 'T', '3'),$/;"	e	enum:_D3DFORMAT
D3DFMT_DXT4	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DFMT_DXT4                 = MAKEFOURCC('D', 'X', 'T', '4'),$/;"	e	enum:_D3DFORMAT
D3DFMT_DXT5	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DFMT_DXT5                 = MAKEFOURCC('D', 'X', 'T', '5'),$/;"	e	enum:_D3DFORMAT
D3DFMT_FORCE_DWORD	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DFMT_FORCE_DWORD          =0x7fffffff$/;"	e	enum:_D3DFORMAT
D3DFMT_G16R16	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DFMT_G16R16               = 34,$/;"	e	enum:_D3DFORMAT
D3DFMT_INDEX16	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DFMT_INDEX16              =101,$/;"	e	enum:_D3DFORMAT
D3DFMT_INDEX32	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DFMT_INDEX32              =102,$/;"	e	enum:_D3DFORMAT
D3DFMT_L6V5U5	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DFMT_L6V5U5               = 61,$/;"	e	enum:_D3DFORMAT
D3DFMT_L8	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DFMT_L8                   = 50,$/;"	e	enum:_D3DFORMAT
D3DFMT_NV12	QSVHelper/IntelSupport/src/d3d11_allocator.cpp	23;"	d	file:
D3DFMT_P8	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DFMT_P8                   = 41,$/;"	e	enum:_D3DFORMAT
D3DFMT_Q8W8V8U8	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DFMT_Q8W8V8U8             = 63,$/;"	e	enum:_D3DFORMAT
D3DFMT_R3G3B2	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DFMT_R3G3B2               = 27,$/;"	e	enum:_D3DFORMAT
D3DFMT_R5G6B5	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DFMT_R5G6B5               = 23,$/;"	e	enum:_D3DFORMAT
D3DFMT_R8G8B8	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DFMT_R8G8B8               = 20,$/;"	e	enum:_D3DFORMAT
D3DFMT_UNKNOWN	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DFMT_UNKNOWN              =  0,$/;"	e	enum:_D3DFORMAT
D3DFMT_UYVY	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DFMT_UYVY                 = MAKEFOURCC('U', 'Y', 'V', 'Y'),$/;"	e	enum:_D3DFORMAT
D3DFMT_V16U16	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DFMT_V16U16               = 64,$/;"	e	enum:_D3DFORMAT
D3DFMT_V8U8	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DFMT_V8U8                 = 60,$/;"	e	enum:_D3DFORMAT
D3DFMT_VERTEXDATA	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DFMT_VERTEXDATA           =100,$/;"	e	enum:_D3DFORMAT
D3DFMT_W11V11U10	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DFMT_W11V11U10            = 65,$/;"	e	enum:_D3DFORMAT
D3DFMT_X1R5G5B5	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DFMT_X1R5G5B5             = 24,$/;"	e	enum:_D3DFORMAT
D3DFMT_X4R4G4B4	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DFMT_X4R4G4B4             = 30,$/;"	e	enum:_D3DFORMAT
D3DFMT_X8L8V8U8	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DFMT_X8L8V8U8             = 62,$/;"	e	enum:_D3DFORMAT
D3DFMT_X8R8G8B8	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DFMT_X8R8G8B8             = 22,$/;"	e	enum:_D3DFORMAT
D3DFMT_YUY2	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DFMT_YUY2                 = MAKEFOURCC('Y', 'U', 'Y', '2'),$/;"	e	enum:_D3DFORMAT
D3DFMT_YV12	QSVHelper/IntelSupport/src/d3d11_allocator.cpp	24;"	d	file:
D3DFOGMODE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DFOGMODE;$/;"	t
D3DFOG_EXP	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DFOG_EXP                  = 1,$/;"	e	enum:_D3DFOGMODE
D3DFOG_EXP2	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DFOG_EXP2                 = 2,$/;"	e	enum:_D3DFOGMODE
D3DFOG_FORCE_DWORD	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DFOG_FORCE_DWORD          = 0x7fffffff, \/* force 32-bit size enum *\/$/;"	e	enum:_D3DFOGMODE
D3DFOG_LINEAR	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DFOG_LINEAR               = 3,$/;"	e	enum:_D3DFOGMODE
D3DFOG_NONE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DFOG_NONE                 = 0,$/;"	e	enum:_D3DFOGMODE
D3DFORMAT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DFORMAT;$/;"	t
D3DFVFCAPS_DONOTSTRIPELEMENTS	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	346;"	d
D3DFVFCAPS_PSIZE	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	347;"	d
D3DFVFCAPS_TEXCOORDCOUNTMASK	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	345;"	d
D3DFVF_DIFFUSE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	590;"	d
D3DFVF_LASTBETA_UBYTE4	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	605;"	d
D3DFVF_NORMAL	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	588;"	d
D3DFVF_POSITION_MASK	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	579;"	d
D3DFVF_PSIZE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	589;"	d
D3DFVF_RESERVED0	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	578;"	d
D3DFVF_RESERVED2	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	607;"	d
D3DFVF_SPECULAR	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	591;"	d
D3DFVF_TEX0	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	595;"	d
D3DFVF_TEX1	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	596;"	d
D3DFVF_TEX2	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	597;"	d
D3DFVF_TEX3	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	598;"	d
D3DFVF_TEX4	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	599;"	d
D3DFVF_TEX5	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	600;"	d
D3DFVF_TEX6	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	601;"	d
D3DFVF_TEX7	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	602;"	d
D3DFVF_TEX8	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	603;"	d
D3DFVF_TEXCOORDSIZE1	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1195;"	d
D3DFVF_TEXCOORDSIZE2	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1193;"	d
D3DFVF_TEXCOORDSIZE3	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1192;"	d
D3DFVF_TEXCOORDSIZE4	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1194;"	d
D3DFVF_TEXCOUNT_MASK	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	593;"	d
D3DFVF_TEXCOUNT_SHIFT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	594;"	d
D3DFVF_TEXTUREFORMAT1	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1188;"	d
D3DFVF_TEXTUREFORMAT2	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1187;"	d
D3DFVF_TEXTUREFORMAT3	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1189;"	d
D3DFVF_TEXTUREFORMAT4	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1190;"	d
D3DFVF_XYZ	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	580;"	d
D3DFVF_XYZB1	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	582;"	d
D3DFVF_XYZB2	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	583;"	d
D3DFVF_XYZB3	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	584;"	d
D3DFVF_XYZB4	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	585;"	d
D3DFVF_XYZB5	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	586;"	d
D3DFVF_XYZRHW	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	581;"	d
D3DGAMMARAMP	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DGAMMARAMP;$/;"	t
D3DINDEXBUFFER_DESC	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DINDEXBUFFER_DESC;$/;"	t
D3DLIGHT8	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DLIGHT8;$/;"	t
D3DLIGHTTYPE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DLIGHTTYPE;$/;"	t
D3DLIGHT_DIRECTIONAL	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DLIGHT_DIRECTIONAL    = 3,$/;"	e	enum:_D3DLIGHTTYPE
D3DLIGHT_FORCE_DWORD	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DLIGHT_FORCE_DWORD    = 0x7fffffff, \/* force 32-bit size enum *\/$/;"	e	enum:_D3DLIGHTTYPE
D3DLIGHT_POINT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DLIGHT_POINT          = 1,$/;"	e	enum:_D3DLIGHTTYPE
D3DLIGHT_SPOT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DLIGHT_SPOT           = 2,$/;"	e	enum:_D3DLIGHTTYPE
D3DLINECAPS_ALPHACMP	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	193;"	d
D3DLINECAPS_BLEND	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	192;"	d
D3DLINECAPS_FOG	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	194;"	d
D3DLINECAPS_TEXTURE	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	190;"	d
D3DLINECAPS_ZTEST	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	191;"	d
D3DLINEPATTERN	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DLINEPATTERN;$/;"	t
D3DLOCKED_BOX	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DLOCKED_BOX;$/;"	t
D3DLOCKED_RECT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DLOCKED_RECT;$/;"	t
D3DLOCK_DISCARD	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1471;"	d
D3DLOCK_NOOVERWRITE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1472;"	d
D3DLOCK_NOSYSLOCK	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1473;"	d
D3DLOCK_NO_DIRTY_UPDATE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1475;"	d
D3DLOCK_READONLY	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1470;"	d
D3DMATERIAL8	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DMATERIAL8;$/;"	t
D3DMATERIALCOLORSOURCE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DMATERIALCOLORSOURCE;$/;"	t
D3DMATRIX	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DMATRIX;$/;"	t
D3DMATRIX_DEFINED	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	89;"	d
D3DMAXUSERCLIPPLANES	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	106;"	d
D3DMCS_COLOR1	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DMCS_COLOR1           = 1,            \/\/ Diffuse vertex color is used$/;"	e	enum:_D3DMATERIALCOLORSOURCE
D3DMCS_COLOR2	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DMCS_COLOR2           = 2,            \/\/ Specular vertex color is used$/;"	e	enum:_D3DMATERIALCOLORSOURCE
D3DMCS_FORCE_DWORD	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DMCS_FORCE_DWORD      = 0x7fffffff,   \/\/ force 32-bit size enum$/;"	e	enum:_D3DMATERIALCOLORSOURCE
D3DMCS_MATERIAL	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DMCS_MATERIAL         = 0,            \/\/ Color from material is used$/;"	e	enum:_D3DMATERIALCOLORSOURCE
D3DMULTISAMPLE_10_SAMPLES	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DMULTISAMPLE_10_SAMPLES      = 10,$/;"	e	enum:_D3DMULTISAMPLE_TYPE
D3DMULTISAMPLE_11_SAMPLES	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DMULTISAMPLE_11_SAMPLES      = 11,$/;"	e	enum:_D3DMULTISAMPLE_TYPE
D3DMULTISAMPLE_12_SAMPLES	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DMULTISAMPLE_12_SAMPLES      = 12,$/;"	e	enum:_D3DMULTISAMPLE_TYPE
D3DMULTISAMPLE_13_SAMPLES	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DMULTISAMPLE_13_SAMPLES      = 13,$/;"	e	enum:_D3DMULTISAMPLE_TYPE
D3DMULTISAMPLE_14_SAMPLES	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DMULTISAMPLE_14_SAMPLES      = 14,$/;"	e	enum:_D3DMULTISAMPLE_TYPE
D3DMULTISAMPLE_15_SAMPLES	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DMULTISAMPLE_15_SAMPLES      = 15,$/;"	e	enum:_D3DMULTISAMPLE_TYPE
D3DMULTISAMPLE_16_SAMPLES	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DMULTISAMPLE_16_SAMPLES      = 16,$/;"	e	enum:_D3DMULTISAMPLE_TYPE
D3DMULTISAMPLE_2_SAMPLES	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DMULTISAMPLE_2_SAMPLES       =  2,$/;"	e	enum:_D3DMULTISAMPLE_TYPE
D3DMULTISAMPLE_3_SAMPLES	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DMULTISAMPLE_3_SAMPLES       =  3,$/;"	e	enum:_D3DMULTISAMPLE_TYPE
D3DMULTISAMPLE_4_SAMPLES	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DMULTISAMPLE_4_SAMPLES       =  4,$/;"	e	enum:_D3DMULTISAMPLE_TYPE
D3DMULTISAMPLE_5_SAMPLES	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DMULTISAMPLE_5_SAMPLES       =  5,$/;"	e	enum:_D3DMULTISAMPLE_TYPE
D3DMULTISAMPLE_6_SAMPLES	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DMULTISAMPLE_6_SAMPLES       =  6,$/;"	e	enum:_D3DMULTISAMPLE_TYPE
D3DMULTISAMPLE_7_SAMPLES	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DMULTISAMPLE_7_SAMPLES       =  7,$/;"	e	enum:_D3DMULTISAMPLE_TYPE
D3DMULTISAMPLE_8_SAMPLES	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DMULTISAMPLE_8_SAMPLES       =  8,$/;"	e	enum:_D3DMULTISAMPLE_TYPE
D3DMULTISAMPLE_9_SAMPLES	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DMULTISAMPLE_9_SAMPLES       =  9,$/;"	e	enum:_D3DMULTISAMPLE_TYPE
D3DMULTISAMPLE_FORCE_DWORD	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DMULTISAMPLE_FORCE_DWORD     = 0x7fffffff$/;"	e	enum:_D3DMULTISAMPLE_TYPE
D3DMULTISAMPLE_NONE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DMULTISAMPLE_NONE            =  0,$/;"	e	enum:_D3DMULTISAMPLE_TYPE
D3DMULTISAMPLE_TYPE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DMULTISAMPLE_TYPE;$/;"	t
D3DORDERTYPE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DORDERTYPE;$/;"	t
D3DORDER_CUBIC	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^   D3DORDER_CUBIC       = 3,$/;"	e	enum:_D3DORDERTYPE
D3DORDER_FORCE_DWORD	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^   D3DORDER_FORCE_DWORD = 0x7fffffff,$/;"	e	enum:_D3DORDERTYPE
D3DORDER_LINEAR	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^   D3DORDER_LINEAR      = 1,$/;"	e	enum:_D3DORDERTYPE
D3DORDER_QUADRATIC	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^   D3DORDER_QUADRATIC   = 2,$/;"	e	enum:_D3DORDERTYPE
D3DORDER_QUINTIC	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^   D3DORDER_QUINTIC     = 5,$/;"	e	enum:_D3DORDERTYPE
D3DPATCHEDGESTYLE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DPATCHEDGESTYLE;$/;"	t
D3DPATCHEDGE_CONTINUOUS	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^   D3DPATCHEDGE_CONTINUOUS  = 1,$/;"	e	enum:_D3DPATCHEDGESTYLE
D3DPATCHEDGE_DISCRETE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^   D3DPATCHEDGE_DISCRETE    = 0,$/;"	e	enum:_D3DPATCHEDGESTYLE
D3DPATCHEDGE_FORCE_DWORD	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^   D3DPATCHEDGE_FORCE_DWORD = 0x7fffffff,$/;"	e	enum:_D3DPATCHEDGESTYLE
D3DPBLENDCAPS_BOTHINVSRCALPHA	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	243;"	d
D3DPBLENDCAPS_BOTHSRCALPHA	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	242;"	d
D3DPBLENDCAPS_DESTALPHA	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	237;"	d
D3DPBLENDCAPS_DESTCOLOR	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	239;"	d
D3DPBLENDCAPS_INVDESTALPHA	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	238;"	d
D3DPBLENDCAPS_INVDESTCOLOR	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	240;"	d
D3DPBLENDCAPS_INVSRCALPHA	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	236;"	d
D3DPBLENDCAPS_INVSRCCOLOR	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	234;"	d
D3DPBLENDCAPS_ONE	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	232;"	d
D3DPBLENDCAPS_SRCALPHA	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	235;"	d
D3DPBLENDCAPS_SRCALPHASAT	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	241;"	d
D3DPBLENDCAPS_SRCCOLOR	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	233;"	d
D3DPBLENDCAPS_ZERO	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	231;"	d
D3DPCMPCAPS_ALWAYS	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	226;"	d
D3DPCMPCAPS_EQUAL	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	221;"	d
D3DPCMPCAPS_GREATER	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	223;"	d
D3DPCMPCAPS_GREATEREQUAL	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	225;"	d
D3DPCMPCAPS_LESS	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	220;"	d
D3DPCMPCAPS_LESSEQUAL	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	222;"	d
D3DPCMPCAPS_NEVER	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	219;"	d
D3DPCMPCAPS_NOTEQUAL	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	224;"	d
D3DPMISCCAPS_BLENDOP	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	184;"	d
D3DPMISCCAPS_CLIPPLANESCALEDPOINTS	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	181;"	d
D3DPMISCCAPS_CLIPTLVERTS	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	182;"	d
D3DPMISCCAPS_COLORWRITEENABLE	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	180;"	d
D3DPMISCCAPS_CULLCCW	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	179;"	d
D3DPMISCCAPS_CULLCW	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	178;"	d
D3DPMISCCAPS_CULLNONE	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	177;"	d
D3DPMISCCAPS_LINEPATTERNREP	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	176;"	d
D3DPMISCCAPS_MASKZ	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	175;"	d
D3DPMISCCAPS_NULLREFERENCE	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	185;"	d
D3DPMISCCAPS_TSSARGTEMP	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	183;"	d
D3DPOOL	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DPOOL;$/;"	t
D3DPOOL_DEFAULT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DPOOL_DEFAULT                 = 0,$/;"	e	enum:_D3DPOOL
D3DPOOL_FORCE_DWORD	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DPOOL_FORCE_DWORD             = 0x7fffffff$/;"	e	enum:_D3DPOOL
D3DPOOL_MANAGED	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DPOOL_MANAGED                 = 1,$/;"	e	enum:_D3DPOOL
D3DPOOL_SCRATCH	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DPOOL_SCRATCH                 = 3,$/;"	e	enum:_D3DPOOL
D3DPOOL_SYSTEMMEM	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DPOOL_SYSTEMMEM               = 2,$/;"	e	enum:_D3DPOOL
D3DPRASTERCAPS_ANISOTROPY	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	209;"	d
D3DPRASTERCAPS_ANTIALIASEDGES	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	204;"	d
D3DPRASTERCAPS_COLORPERSPECTIVE	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	213;"	d
D3DPRASTERCAPS_DITHER	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	199;"	d
D3DPRASTERCAPS_FOGRANGE	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	208;"	d
D3DPRASTERCAPS_FOGTABLE	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	203;"	d
D3DPRASTERCAPS_FOGVERTEX	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	202;"	d
D3DPRASTERCAPS_MIPMAPLODBIAS	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	205;"	d
D3DPRASTERCAPS_PAT	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	200;"	d
D3DPRASTERCAPS_STRETCHBLTMULTISAMPLE	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	214;"	d
D3DPRASTERCAPS_WBUFFER	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	210;"	d
D3DPRASTERCAPS_WFOG	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	211;"	d
D3DPRASTERCAPS_ZBIAS	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	206;"	d
D3DPRASTERCAPS_ZBUFFERLESSHSR	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	207;"	d
D3DPRASTERCAPS_ZFOG	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	212;"	d
D3DPRASTERCAPS_ZTEST	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	201;"	d
D3DPRESENTFLAG_LOCKABLE_BACKBUFFER	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1396;"	d
D3DPRESENT_BACK_BUFFERS_MAX	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1212;"	d
D3DPRESENT_INTERVAL_DEFAULT	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	133;"	d
D3DPRESENT_INTERVAL_FOUR	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	137;"	d
D3DPRESENT_INTERVAL_IMMEDIATE	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	138;"	d
D3DPRESENT_INTERVAL_ONE	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	134;"	d
D3DPRESENT_INTERVAL_THREE	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	136;"	d
D3DPRESENT_INTERVAL_TWO	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	135;"	d
D3DPRESENT_PARAMETERS	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DPRESENT_PARAMETERS;$/;"	t
D3DPRESENT_RATE_DEFAULT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1367;"	d
D3DPRESENT_RATE_UNLIMITED	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1368;"	d
D3DPRIMITIVETYPE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DPRIMITIVETYPE;$/;"	t
D3DPSHADECAPS_ALPHAGOURAUDBLEND	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	250;"	d
D3DPSHADECAPS_COLORGOURAUDRGB	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	248;"	d
D3DPSHADECAPS_FOGGOURAUD	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	251;"	d
D3DPSHADECAPS_SPECULARGOURAUDRGB	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	249;"	d
D3DPS_END	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1123;"	d
D3DPS_VERSION	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1107;"	d
D3DPTADDRESSCAPS_BORDER	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	296;"	d
D3DPTADDRESSCAPS_CLAMP	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	295;"	d
D3DPTADDRESSCAPS_INDEPENDENTUV	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	297;"	d
D3DPTADDRESSCAPS_MIRROR	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	294;"	d
D3DPTADDRESSCAPS_MIRRORONCE	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	298;"	d
D3DPTADDRESSCAPS_WRAP	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	293;"	d
D3DPTEXTURECAPS_ALPHA	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	258;"	d
D3DPTEXTURECAPS_ALPHAPALETTE	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	261;"	d
D3DPTEXTURECAPS_CUBEMAP	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	268;"	d
D3DPTEXTURECAPS_CUBEMAP_POW2	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	273;"	d
D3DPTEXTURECAPS_MIPCUBEMAP	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	272;"	d
D3DPTEXTURECAPS_MIPMAP	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	270;"	d
D3DPTEXTURECAPS_MIPVOLUMEMAP	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	271;"	d
D3DPTEXTURECAPS_NONPOW2CONDITIONAL	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	266;"	d
D3DPTEXTURECAPS_PERSPECTIVE	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	256;"	d
D3DPTEXTURECAPS_POW2	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	257;"	d
D3DPTEXTURECAPS_PROJECTED	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	267;"	d
D3DPTEXTURECAPS_SQUAREONLY	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	259;"	d
D3DPTEXTURECAPS_TEXREPEATNOTSCALEDBYSIZE	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	260;"	d
D3DPTEXTURECAPS_VOLUMEMAP	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	269;"	d
D3DPTEXTURECAPS_VOLUMEMAP_POW2	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	274;"	d
D3DPTFILTERCAPS_MAGFAFLATCUBIC	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	287;"	d
D3DPTFILTERCAPS_MAGFANISOTROPIC	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	286;"	d
D3DPTFILTERCAPS_MAGFGAUSSIANCUBIC	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	288;"	d
D3DPTFILTERCAPS_MAGFLINEAR	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	285;"	d
D3DPTFILTERCAPS_MAGFPOINT	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	284;"	d
D3DPTFILTERCAPS_MINFANISOTROPIC	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	281;"	d
D3DPTFILTERCAPS_MINFLINEAR	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	280;"	d
D3DPTFILTERCAPS_MINFPOINT	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	279;"	d
D3DPTFILTERCAPS_MIPFLINEAR	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	283;"	d
D3DPTFILTERCAPS_MIPFPOINT	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	282;"	d
D3DPT_FORCE_DWORD	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DPT_FORCE_DWORD           = 0x7fffffff, \/* force 32-bit size enum *\/$/;"	e	enum:_D3DPRIMITIVETYPE
D3DPT_LINELIST	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DPT_LINELIST              = 2,$/;"	e	enum:_D3DPRIMITIVETYPE
D3DPT_LINESTRIP	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DPT_LINESTRIP             = 3,$/;"	e	enum:_D3DPRIMITIVETYPE
D3DPT_POINTLIST	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DPT_POINTLIST             = 1,$/;"	e	enum:_D3DPRIMITIVETYPE
D3DPT_TRIANGLEFAN	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DPT_TRIANGLEFAN           = 6,$/;"	e	enum:_D3DPRIMITIVETYPE
D3DPT_TRIANGLELIST	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DPT_TRIANGLELIST          = 4,$/;"	e	enum:_D3DPRIMITIVETYPE
D3DPT_TRIANGLESTRIP	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DPT_TRIANGLESTRIP         = 5,$/;"	e	enum:_D3DPRIMITIVETYPE
D3DPV_DONOTCOPYDATA	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	572;"	d
D3DRANGE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DRANGE;$/;"	t
D3DRASTER_STATUS	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DRASTER_STATUS;$/;"	t
D3DRECT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DRECT;$/;"	t
D3DRECTPATCH_INFO	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DRECTPATCH_INFO;$/;"	t
D3DRECT_DEFINED	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	73;"	d
D3DRENDERSTATETYPE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DRENDERSTATETYPE;$/;"	t
D3DRENDERSTATE_WRAPBIAS	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	416;"	d
D3DRESOURCESTATS	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DRESOURCESTATS;$/;"	t
D3DRESOURCETYPE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DRESOURCETYPE;$/;"	t
D3DRS_ALPHABLENDENABLE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_ALPHABLENDENABLE          = 27,   \/* TRUE to enable alpha blending *\/$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_ALPHAFUNC	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_ALPHAFUNC                 = 25,   \/* D3DCMPFUNC *\/$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_ALPHAREF	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_ALPHAREF                  = 24,   \/* D3DFIXED *\/$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_ALPHATESTENABLE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_ALPHATESTENABLE           = 15,   \/* TRUE to enable alpha tests *\/$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_AMBIENT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_AMBIENT                   = 139,$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_AMBIENTMATERIALSOURCE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_AMBIENTMATERIALSOURCE     = 147,$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_BLENDOP	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_BLENDOP                   = 171,   \/\/ D3DBLENDOP setting$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_CLIPPING	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_CLIPPING                  = 136,$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_CLIPPLANEENABLE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_CLIPPLANEENABLE           = 152,$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_COLORVERTEX	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_COLORVERTEX               = 141,$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_COLORWRITEENABLE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_COLORWRITEENABLE          = 168,  \/\/ per-channel write enable$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_CULLMODE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_CULLMODE                  = 22,   \/* D3DCULL *\/$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_DEBUGMONITORTOKEN	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_DEBUGMONITORTOKEN         = 165,  \/\/ DEBUG ONLY - token to debug monitor$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_DESTBLEND	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_DESTBLEND                 = 20,   \/* D3DBLEND *\/$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_DIFFUSEMATERIALSOURCE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_DIFFUSEMATERIALSOURCE     = 145,$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_DITHERENABLE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_DITHERENABLE              = 26,   \/* TRUE to enable dithering *\/$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_EDGEANTIALIAS	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_EDGEANTIALIAS             = 40,   \/* TRUE to enable edge antialiasing *\/$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_EMISSIVEMATERIALSOURCE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_EMISSIVEMATERIALSOURCE    = 148,$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_FILLMODE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_FILLMODE                  = 8,    \/* D3DFILLMODE *\/$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_FOGCOLOR	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_FOGCOLOR                  = 34,   \/* D3DCOLOR *\/$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_FOGDENSITY	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_FOGDENSITY                = 38,   \/* Fog density  *\/$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_FOGENABLE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_FOGENABLE                 = 28,   \/* TRUE to enable fog blending *\/$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_FOGEND	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_FOGEND                    = 37,   \/* Fog end      *\/$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_FOGSTART	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_FOGSTART                  = 36,   \/* Fog start (for both vertex and pixel fog) *\/$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_FOGTABLEMODE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_FOGTABLEMODE              = 35,   \/* D3DFOGMODE *\/$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_FOGVERTEXMODE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_FOGVERTEXMODE             = 140,$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_FORCE_DWORD	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_FORCE_DWORD               = 0x7fffffff, \/* force 32-bit size enum *\/$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_INDEXEDVERTEXBLENDENABLE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_INDEXEDVERTEXBLENDENABLE  = 167,$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_LASTPIXEL	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_LASTPIXEL                 = 16,   \/* TRUE for last-pixel on lines *\/$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_LIGHTING	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_LIGHTING                  = 137,$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_LINEPATTERN	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_LINEPATTERN               = 10,   \/* D3DLINEPATTERN *\/$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_LOCALVIEWER	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_LOCALVIEWER               = 142,$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_MULTISAMPLEANTIALIAS	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_MULTISAMPLEANTIALIAS      = 161,  \/\/ BOOL - set to do FSAA with multisample buffer$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_MULTISAMPLEMASK	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_MULTISAMPLEMASK           = 162,  \/\/ DWORD - per-sample enable\/disable$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_NORMALIZENORMALS	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_NORMALIZENORMALS          = 143,$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_NORMALORDER	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_NORMALORDER               = 173,   \/\/ NPatch normal interpolation order. D3DORDER_LINEAR (default) or D3DORDER_QUADRATIC$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_PATCHEDGESTYLE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_PATCHEDGESTYLE            = 163,  \/\/ Sets whether patch edges will use float style tessellation$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_PATCHSEGMENTS	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_PATCHSEGMENTS             = 164,  \/\/ Number of segments per edge when drawing patches$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_POINTSCALEENABLE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_POINTSCALEENABLE          = 157,   \/* BOOL point size scale enable *\/$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_POINTSCALE_A	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_POINTSCALE_A              = 158,   \/* float point attenuation A value *\/$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_POINTSCALE_B	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_POINTSCALE_B              = 159,   \/* float point attenuation B value *\/$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_POINTSCALE_C	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_POINTSCALE_C              = 160,   \/* float point attenuation C value *\/$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_POINTSIZE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_POINTSIZE                 = 154,   \/* float point size *\/$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_POINTSIZE_MAX	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_POINTSIZE_MAX             = 166,   \/* float point size max threshold *\/$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_POINTSIZE_MIN	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_POINTSIZE_MIN             = 155,   \/* float point size min threshold *\/$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_POINTSPRITEENABLE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_POINTSPRITEENABLE         = 156,   \/* BOOL point texture coord control *\/$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_POSITIONORDER	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_POSITIONORDER             = 172,   \/\/ NPatch position interpolation order. D3DORDER_LINEAR or D3DORDER_CUBIC (default)$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_RANGEFOGENABLE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_RANGEFOGENABLE            = 48,   \/* Enables range-based fog *\/$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_SHADEMODE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_SHADEMODE                 = 9,    \/* D3DSHADEMODE *\/$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_SOFTWAREVERTEXPROCESSING	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_SOFTWAREVERTEXPROCESSING  = 153,$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_SPECULARENABLE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_SPECULARENABLE            = 29,   \/* TRUE to enable specular *\/$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_SPECULARMATERIALSOURCE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_SPECULARMATERIALSOURCE    = 146,$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_SRCBLEND	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_SRCBLEND                  = 19,   \/* D3DBLEND *\/$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_STENCILENABLE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_STENCILENABLE             = 52,   \/* BOOL enable\/disable stenciling *\/$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_STENCILFAIL	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_STENCILFAIL               = 53,   \/* D3DSTENCILOP to do if stencil test fails *\/$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_STENCILFUNC	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_STENCILFUNC               = 56,   \/* D3DCMPFUNC fn.  Stencil Test passes if ((ref & mask) stencilfn (stencil & mask)) is true *\/$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_STENCILMASK	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_STENCILMASK               = 58,   \/* Mask value used in stencil test *\/$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_STENCILPASS	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_STENCILPASS               = 55,   \/* D3DSTENCILOP to do if both stencil and Z tests pass *\/$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_STENCILREF	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_STENCILREF                = 57,   \/* Reference value used in stencil test *\/$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_STENCILWRITEMASK	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_STENCILWRITEMASK          = 59,   \/* Write mask applied to values written to stencil buffer *\/$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_STENCILZFAIL	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_STENCILZFAIL              = 54,   \/* D3DSTENCILOP to do if stencil test passes and Z test fails *\/$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_TEXTUREFACTOR	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_TEXTUREFACTOR             = 60,   \/* D3DCOLOR used for multi-texture blend *\/$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_TWEENFACTOR	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_TWEENFACTOR               = 170,   \/\/ float tween factor$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_VERTEXBLEND	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_VERTEXBLEND               = 151,$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_WRAP0	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_WRAP0                     = 128,  \/* wrap for 1st texture coord. set *\/$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_WRAP1	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_WRAP1                     = 129,  \/* wrap for 2nd texture coord. set *\/$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_WRAP2	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_WRAP2                     = 130,  \/* wrap for 3rd texture coord. set *\/$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_WRAP3	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_WRAP3                     = 131,  \/* wrap for 4th texture coord. set *\/$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_WRAP4	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_WRAP4                     = 132,  \/* wrap for 5th texture coord. set *\/$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_WRAP5	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_WRAP5                     = 133,  \/* wrap for 6th texture coord. set *\/$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_WRAP6	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_WRAP6                     = 134,  \/* wrap for 7th texture coord. set *\/$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_WRAP7	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_WRAP7                     = 135,  \/* wrap for 8th texture coord. set *\/$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_ZBIAS	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_ZBIAS                     = 47,   \/* LONG Z bias *\/$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_ZENABLE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_ZENABLE                   = 7,    \/* D3DZBUFFERTYPE (or TRUE\/FALSE for legacy) *\/$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_ZFUNC	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_ZFUNC                     = 23,   \/* D3DCMPFUNC *\/$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_ZVISIBLE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_ZVISIBLE                  = 30,   \/* TRUE to enable z checking *\/$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRS_ZWRITEENABLE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRS_ZWRITEENABLE              = 14,   \/* TRUE to enable z writes *\/$/;"	e	enum:_D3DRENDERSTATETYPE
D3DRTYPECOUNT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1661;"	d
D3DRTYPE_CUBETEXTURE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRTYPE_CUBETEXTURE            =  5,$/;"	e	enum:_D3DRESOURCETYPE
D3DRTYPE_FORCE_DWORD	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRTYPE_FORCE_DWORD            = 0x7fffffff$/;"	e	enum:_D3DRESOURCETYPE
D3DRTYPE_INDEXBUFFER	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRTYPE_INDEXBUFFER            =  7,$/;"	e	enum:_D3DRESOURCETYPE
D3DRTYPE_SURFACE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRTYPE_SURFACE                =  1,$/;"	e	enum:_D3DRESOURCETYPE
D3DRTYPE_TEXTURE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRTYPE_TEXTURE                =  3,$/;"	e	enum:_D3DRESOURCETYPE
D3DRTYPE_VERTEXBUFFER	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRTYPE_VERTEXBUFFER           =  6,$/;"	e	enum:_D3DRESOURCETYPE
D3DRTYPE_VOLUME	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRTYPE_VOLUME                 =  2,$/;"	e	enum:_D3DRESOURCETYPE
D3DRTYPE_VOLUMETEXTURE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRTYPE_VOLUMETEXTURE          =  4,$/;"	e	enum:_D3DRESOURCETYPE
D3DSBT_ALL	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSBT_ALL           = 1, \/\/ capture all state$/;"	e	enum:_D3DSTATEBLOCKTYPE
D3DSBT_FORCE_DWORD	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSBT_FORCE_DWORD   = 0x7fffffff,$/;"	e	enum:_D3DSTATEBLOCKTYPE
D3DSBT_PIXELSTATE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSBT_PIXELSTATE    = 2, \/\/ capture pixel state$/;"	e	enum:_D3DSTATEBLOCKTYPE
D3DSBT_VERTEXSTATE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSBT_VERTEXSTATE   = 3, \/\/ capture vertex state$/;"	e	enum:_D3DSTATEBLOCKTYPE
D3DSGR_CALIBRATE	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1221;"	d
D3DSGR_NO_CALIBRATION	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1220;"	d
D3DSHADEMODE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DSHADEMODE;$/;"	t
D3DSHADER_COMMENT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1119;"	d
D3DSHADER_INSTRUCTION_OPCODE_TYPE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DSHADER_INSTRUCTION_OPCODE_TYPE;$/;"	t
D3DSHADER_PARAM_DSTMOD_TYPE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DSHADER_PARAM_DSTMOD_TYPE;$/;"	t
D3DSHADER_PARAM_REGISTER_TYPE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DSHADER_PARAM_REGISTER_TYPE;$/;"	t
D3DSHADER_PARAM_SRCMOD_TYPE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DSHADER_PARAM_SRCMOD_TYPE;$/;"	t
D3DSHADER_VERSION_MAJOR	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1113;"	d
D3DSHADER_VERSION_MINOR	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1114;"	d
D3DSHADE_FLAT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSHADE_FLAT               = 1,$/;"	e	enum:_D3DSHADEMODE
D3DSHADE_FORCE_DWORD	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSHADE_FORCE_DWORD        = 0x7fffffff, \/* force 32-bit size enum *\/$/;"	e	enum:_D3DSHADEMODE
D3DSHADE_GOURAUD	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSHADE_GOURAUD            = 2,$/;"	e	enum:_D3DSHADEMODE
D3DSHADE_PHONG	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSHADE_PHONG              = 3,$/;"	e	enum:_D3DSHADEMODE
D3DSIO_ADD	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSIO_ADD          ,       \/\/ PS\/VS$/;"	e	enum:_D3DSHADER_INSTRUCTION_OPCODE_TYPE
D3DSIO_BEM	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSIO_BEM          ,       \/\/ PS$/;"	e	enum:_D3DSHADER_INSTRUCTION_OPCODE_TYPE
D3DSIO_CMP	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSIO_CMP          ,       \/\/ PS$/;"	e	enum:_D3DSHADER_INSTRUCTION_OPCODE_TYPE
D3DSIO_CND	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSIO_CND          ,       \/\/ PS$/;"	e	enum:_D3DSHADER_INSTRUCTION_OPCODE_TYPE
D3DSIO_COMMENT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSIO_COMMENT      = 0xFFFE,$/;"	e	enum:_D3DSHADER_INSTRUCTION_OPCODE_TYPE
D3DSIO_DEF	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSIO_DEF          ,       \/\/ PS$/;"	e	enum:_D3DSHADER_INSTRUCTION_OPCODE_TYPE
D3DSIO_DP3	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSIO_DP3          ,       \/\/ PS\/VS$/;"	e	enum:_D3DSHADER_INSTRUCTION_OPCODE_TYPE
D3DSIO_DP4	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSIO_DP4          ,       \/\/ PS\/VS$/;"	e	enum:_D3DSHADER_INSTRUCTION_OPCODE_TYPE
D3DSIO_DST	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSIO_DST          ,       \/\/ VS$/;"	e	enum:_D3DSHADER_INSTRUCTION_OPCODE_TYPE
D3DSIO_END	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSIO_END          = 0xFFFF,$/;"	e	enum:_D3DSHADER_INSTRUCTION_OPCODE_TYPE
D3DSIO_EXP	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSIO_EXP          ,       \/\/ VS$/;"	e	enum:_D3DSHADER_INSTRUCTION_OPCODE_TYPE
D3DSIO_EXPP	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSIO_EXPP         ,       \/\/ VS$/;"	e	enum:_D3DSHADER_INSTRUCTION_OPCODE_TYPE
D3DSIO_FORCE_DWORD	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSIO_FORCE_DWORD  = 0x7fffffff,   \/\/ force 32-bit size enum$/;"	e	enum:_D3DSHADER_INSTRUCTION_OPCODE_TYPE
D3DSIO_FRC	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSIO_FRC          ,       \/\/ VS$/;"	e	enum:_D3DSHADER_INSTRUCTION_OPCODE_TYPE
D3DSIO_LIT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSIO_LIT          ,       \/\/ VS$/;"	e	enum:_D3DSHADER_INSTRUCTION_OPCODE_TYPE
D3DSIO_LOG	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSIO_LOG          ,       \/\/ VS$/;"	e	enum:_D3DSHADER_INSTRUCTION_OPCODE_TYPE
D3DSIO_LOGP	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSIO_LOGP         ,       \/\/ VS$/;"	e	enum:_D3DSHADER_INSTRUCTION_OPCODE_TYPE
D3DSIO_LRP	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSIO_LRP          ,       \/\/ PS$/;"	e	enum:_D3DSHADER_INSTRUCTION_OPCODE_TYPE
D3DSIO_M3x2	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSIO_M3x2         ,       \/\/ VS$/;"	e	enum:_D3DSHADER_INSTRUCTION_OPCODE_TYPE
D3DSIO_M3x3	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSIO_M3x3         ,       \/\/ VS$/;"	e	enum:_D3DSHADER_INSTRUCTION_OPCODE_TYPE
D3DSIO_M3x4	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSIO_M3x4         ,       \/\/ VS$/;"	e	enum:_D3DSHADER_INSTRUCTION_OPCODE_TYPE
D3DSIO_M4x3	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSIO_M4x3         ,       \/\/ VS$/;"	e	enum:_D3DSHADER_INSTRUCTION_OPCODE_TYPE
D3DSIO_M4x4	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSIO_M4x4         ,       \/\/ VS$/;"	e	enum:_D3DSHADER_INSTRUCTION_OPCODE_TYPE
D3DSIO_MAD	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSIO_MAD          ,       \/\/ PS\/VS$/;"	e	enum:_D3DSHADER_INSTRUCTION_OPCODE_TYPE
D3DSIO_MAX	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSIO_MAX          ,       \/\/ VS$/;"	e	enum:_D3DSHADER_INSTRUCTION_OPCODE_TYPE
D3DSIO_MIN	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSIO_MIN          ,       \/\/ VS$/;"	e	enum:_D3DSHADER_INSTRUCTION_OPCODE_TYPE
D3DSIO_MOV	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSIO_MOV          ,       \/\/ PS\/VS$/;"	e	enum:_D3DSHADER_INSTRUCTION_OPCODE_TYPE
D3DSIO_MUL	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSIO_MUL          ,       \/\/ PS\/VS$/;"	e	enum:_D3DSHADER_INSTRUCTION_OPCODE_TYPE
D3DSIO_NOP	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSIO_NOP          = 0,    \/\/ PS\/VS$/;"	e	enum:_D3DSHADER_INSTRUCTION_OPCODE_TYPE
D3DSIO_PHASE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSIO_PHASE        = 0xFFFD,$/;"	e	enum:_D3DSHADER_INSTRUCTION_OPCODE_TYPE
D3DSIO_RCP	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSIO_RCP          ,       \/\/ VS$/;"	e	enum:_D3DSHADER_INSTRUCTION_OPCODE_TYPE
D3DSIO_RSQ	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSIO_RSQ          ,       \/\/ VS$/;"	e	enum:_D3DSHADER_INSTRUCTION_OPCODE_TYPE
D3DSIO_SGE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSIO_SGE          ,       \/\/ VS$/;"	e	enum:_D3DSHADER_INSTRUCTION_OPCODE_TYPE
D3DSIO_SLT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSIO_SLT          ,       \/\/ VS$/;"	e	enum:_D3DSHADER_INSTRUCTION_OPCODE_TYPE
D3DSIO_SUB	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSIO_SUB          ,       \/\/ PS$/;"	e	enum:_D3DSHADER_INSTRUCTION_OPCODE_TYPE
D3DSIO_TEX	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSIO_TEX          ,       \/\/ PS$/;"	e	enum:_D3DSHADER_INSTRUCTION_OPCODE_TYPE
D3DSIO_TEXBEM	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSIO_TEXBEM       ,       \/\/ PS$/;"	e	enum:_D3DSHADER_INSTRUCTION_OPCODE_TYPE
D3DSIO_TEXBEML	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSIO_TEXBEML      ,       \/\/ PS$/;"	e	enum:_D3DSHADER_INSTRUCTION_OPCODE_TYPE
D3DSIO_TEXCOORD	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSIO_TEXCOORD     = 64,   \/\/ PS$/;"	e	enum:_D3DSHADER_INSTRUCTION_OPCODE_TYPE
D3DSIO_TEXDEPTH	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSIO_TEXDEPTH     ,       \/\/ PS$/;"	e	enum:_D3DSHADER_INSTRUCTION_OPCODE_TYPE
D3DSIO_TEXDP3	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSIO_TEXDP3       ,       \/\/ PS$/;"	e	enum:_D3DSHADER_INSTRUCTION_OPCODE_TYPE
D3DSIO_TEXDP3TEX	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSIO_TEXDP3TEX    ,       \/\/ PS$/;"	e	enum:_D3DSHADER_INSTRUCTION_OPCODE_TYPE
D3DSIO_TEXKILL	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSIO_TEXKILL      ,       \/\/ PS$/;"	e	enum:_D3DSHADER_INSTRUCTION_OPCODE_TYPE
D3DSIO_TEXM3x2DEPTH	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSIO_TEXM3x2DEPTH ,       \/\/ PS$/;"	e	enum:_D3DSHADER_INSTRUCTION_OPCODE_TYPE
D3DSIO_TEXM3x2PAD	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSIO_TEXM3x2PAD   ,       \/\/ PS$/;"	e	enum:_D3DSHADER_INSTRUCTION_OPCODE_TYPE
D3DSIO_TEXM3x2TEX	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSIO_TEXM3x2TEX   ,       \/\/ PS$/;"	e	enum:_D3DSHADER_INSTRUCTION_OPCODE_TYPE
D3DSIO_TEXM3x3	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSIO_TEXM3x3      ,       \/\/ PS$/;"	e	enum:_D3DSHADER_INSTRUCTION_OPCODE_TYPE
D3DSIO_TEXM3x3DIFF	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSIO_TEXM3x3DIFF  ,       \/\/ PS$/;"	e	enum:_D3DSHADER_INSTRUCTION_OPCODE_TYPE
D3DSIO_TEXM3x3PAD	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSIO_TEXM3x3PAD   ,       \/\/ PS$/;"	e	enum:_D3DSHADER_INSTRUCTION_OPCODE_TYPE
D3DSIO_TEXM3x3SPEC	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSIO_TEXM3x3SPEC  ,       \/\/ PS$/;"	e	enum:_D3DSHADER_INSTRUCTION_OPCODE_TYPE
D3DSIO_TEXM3x3TEX	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSIO_TEXM3x3TEX   ,       \/\/ PS$/;"	e	enum:_D3DSHADER_INSTRUCTION_OPCODE_TYPE
D3DSIO_TEXM3x3VSPEC	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSIO_TEXM3x3VSPEC ,       \/\/ PS$/;"	e	enum:_D3DSHADER_INSTRUCTION_OPCODE_TYPE
D3DSIO_TEXREG2AR	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSIO_TEXREG2AR    ,       \/\/ PS$/;"	e	enum:_D3DSHADER_INSTRUCTION_OPCODE_TYPE
D3DSIO_TEXREG2GB	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSIO_TEXREG2GB    ,       \/\/ PS$/;"	e	enum:_D3DSHADER_INSTRUCTION_OPCODE_TYPE
D3DSIO_TEXREG2RGB	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSIO_TEXREG2RGB   ,       \/\/ PS$/;"	e	enum:_D3DSHADER_INSTRUCTION_OPCODE_TYPE
D3DSI_COISSUE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	945;"	d
D3DSI_COMMENTSIZE_MASK	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1118;"	d
D3DSI_COMMENTSIZE_SHIFT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1117;"	d
D3DSI_OPCODE_MASK	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	876;"	d
D3DSPDM_FORCE_DWORD	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSPDM_FORCE_DWORD  = 0x7fffffff,      \/\/ force 32-bit size enum$/;"	e	enum:_D3DSHADER_PARAM_DSTMOD_TYPE
D3DSPDM_NONE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSPDM_NONE    = 0<<D3DSP_DSTMOD_SHIFT, \/\/ nop$/;"	e	enum:_D3DSHADER_PARAM_DSTMOD_TYPE
D3DSPDM_SATURATE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSPDM_SATURATE= 1<<D3DSP_DSTMOD_SHIFT, \/\/ clamp to 0. to 1. range$/;"	e	enum:_D3DSHADER_PARAM_DSTMOD_TYPE
D3DSPD_IUNKNOWN	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1162;"	d
D3DSPR_ADDR	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSPR_ADDR     = 3<<D3DSP_REGTYPE_SHIFT, \/\/ Address Register (VS)$/;"	e	enum:_D3DSHADER_PARAM_REGISTER_TYPE
D3DSPR_ATTROUT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSPR_ATTROUT  = 5<<D3DSP_REGTYPE_SHIFT, \/\/ Attribute Output Register File$/;"	e	enum:_D3DSHADER_PARAM_REGISTER_TYPE
D3DSPR_CONST	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSPR_CONST    = 2<<D3DSP_REGTYPE_SHIFT, \/\/ Constant Register File$/;"	e	enum:_D3DSHADER_PARAM_REGISTER_TYPE
D3DSPR_FORCE_DWORD	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSPR_FORCE_DWORD  = 0x7fffffff,         \/\/ force 32-bit size enum$/;"	e	enum:_D3DSHADER_PARAM_REGISTER_TYPE
D3DSPR_INPUT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSPR_INPUT    = 1<<D3DSP_REGTYPE_SHIFT, \/\/ Input Register File$/;"	e	enum:_D3DSHADER_PARAM_REGISTER_TYPE
D3DSPR_RASTOUT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSPR_RASTOUT  = 4<<D3DSP_REGTYPE_SHIFT, \/\/ Rasterizer Register File$/;"	e	enum:_D3DSHADER_PARAM_REGISTER_TYPE
D3DSPR_TEMP	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSPR_TEMP     = 0<<D3DSP_REGTYPE_SHIFT, \/\/ Temporary Register File$/;"	e	enum:_D3DSHADER_PARAM_REGISTER_TYPE
D3DSPR_TEXCRDOUT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSPR_TEXCRDOUT= 6<<D3DSP_REGTYPE_SHIFT, \/\/ Texture Coordinate Output Register File$/;"	e	enum:_D3DSHADER_PARAM_REGISTER_TYPE
D3DSPR_TEXTURE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSPR_TEXTURE  = 3<<D3DSP_REGTYPE_SHIFT, \/\/ Texture Register File (PS)$/;"	e	enum:_D3DSHADER_PARAM_REGISTER_TYPE
D3DSPSM_BIAS	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSPSM_BIAS    = 2<<D3DSP_SRCMOD_SHIFT, \/\/ bias$/;"	e	enum:_D3DSHADER_PARAM_SRCMOD_TYPE
D3DSPSM_BIASNEG	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSPSM_BIASNEG = 3<<D3DSP_SRCMOD_SHIFT, \/\/ bias and negate$/;"	e	enum:_D3DSHADER_PARAM_SRCMOD_TYPE
D3DSPSM_COMP	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSPSM_COMP    = 6<<D3DSP_SRCMOD_SHIFT, \/\/ complement$/;"	e	enum:_D3DSHADER_PARAM_SRCMOD_TYPE
D3DSPSM_DW	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSPSM_DW      = 10<<D3DSP_SRCMOD_SHIFT, \/\/ divide through by w component$/;"	e	enum:_D3DSHADER_PARAM_SRCMOD_TYPE
D3DSPSM_DZ	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSPSM_DZ      = 9<<D3DSP_SRCMOD_SHIFT, \/\/ divide through by z component $/;"	e	enum:_D3DSHADER_PARAM_SRCMOD_TYPE
D3DSPSM_FORCE_DWORD	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSPSM_FORCE_DWORD = 0x7fffffff,        \/\/ force 32-bit size enum$/;"	e	enum:_D3DSHADER_PARAM_SRCMOD_TYPE
D3DSPSM_NEG	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSPSM_NEG     = 1<<D3DSP_SRCMOD_SHIFT, \/\/ negate$/;"	e	enum:_D3DSHADER_PARAM_SRCMOD_TYPE
D3DSPSM_NONE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSPSM_NONE    = 0<<D3DSP_SRCMOD_SHIFT, \/\/ nop$/;"	e	enum:_D3DSHADER_PARAM_SRCMOD_TYPE
D3DSPSM_SIGN	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSPSM_SIGN    = 4<<D3DSP_SRCMOD_SHIFT, \/\/ sign$/;"	e	enum:_D3DSHADER_PARAM_SRCMOD_TYPE
D3DSPSM_SIGNNEG	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSPSM_SIGNNEG = 5<<D3DSP_SRCMOD_SHIFT, \/\/ sign and negate$/;"	e	enum:_D3DSHADER_PARAM_SRCMOD_TYPE
D3DSPSM_X2	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSPSM_X2      = 7<<D3DSP_SRCMOD_SHIFT, \/\/ *2$/;"	e	enum:_D3DSHADER_PARAM_SRCMOD_TYPE
D3DSPSM_X2NEG	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSPSM_X2NEG   = 8<<D3DSP_SRCMOD_SHIFT, \/\/ *2 and negate$/;"	e	enum:_D3DSHADER_PARAM_SRCMOD_TYPE
D3DSP_DSTMOD_MASK	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	961;"	d
D3DSP_DSTMOD_SHIFT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	960;"	d
D3DSP_DSTSHIFT_MASK	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	972;"	d
D3DSP_DSTSHIFT_SHIFT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	971;"	d
D3DSP_NOSWIZZLE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1055;"	d
D3DSP_REGNUM_MASK	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	950;"	d
D3DSP_REGTYPE_MASK	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	976;"	d
D3DSP_REGTYPE_SHIFT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	975;"	d
D3DSP_REPLICATEALPHA	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1080;"	d
D3DSP_REPLICATEBLUE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1074;"	d
D3DSP_REPLICATEGREEN	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1068;"	d
D3DSP_REPLICATERED	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1062;"	d
D3DSP_SRCMOD_MASK	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1088;"	d
D3DSP_SRCMOD_SHIFT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1087;"	d
D3DSP_SWIZZLE_MASK	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1053;"	d
D3DSP_SWIZZLE_SHIFT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1052;"	d
D3DSP_WRITEMASK_0	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	953;"	d
D3DSP_WRITEMASK_1	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	954;"	d
D3DSP_WRITEMASK_2	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	955;"	d
D3DSP_WRITEMASK_3	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	956;"	d
D3DSP_WRITEMASK_ALL	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	957;"	d
D3DSRO_FOG	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSRO_FOG,$/;"	e	enum:_D3DVS_RASTOUT_OFFSETS
D3DSRO_FORCE_DWORD	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSRO_FORCE_DWORD  = 0x7fffffff,         \/\/ force 32-bit size enum$/;"	e	enum:_D3DVS_RASTOUT_OFFSETS
D3DSRO_POINT_SIZE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSRO_POINT_SIZE,$/;"	e	enum:_D3DVS_RASTOUT_OFFSETS
D3DSRO_POSITION	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSRO_POSITION = 0,$/;"	e	enum:_D3DVS_RASTOUT_OFFSETS
D3DSTATEBLOCKTYPE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DSTATEBLOCKTYPE;$/;"	t
D3DSTENCILCAPS_DECR	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	310;"	d
D3DSTENCILCAPS_DECRSAT	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	307;"	d
D3DSTENCILCAPS_INCR	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	309;"	d
D3DSTENCILCAPS_INCRSAT	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	306;"	d
D3DSTENCILCAPS_INVERT	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	308;"	d
D3DSTENCILCAPS_KEEP	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	303;"	d
D3DSTENCILCAPS_REPLACE	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	305;"	d
D3DSTENCILCAPS_ZERO	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	304;"	d
D3DSTENCILOP	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DSTENCILOP;$/;"	t
D3DSTENCILOP_DECR	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSTENCILOP_DECR           = 8,$/;"	e	enum:_D3DSTENCILOP
D3DSTENCILOP_DECRSAT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSTENCILOP_DECRSAT        = 5,$/;"	e	enum:_D3DSTENCILOP
D3DSTENCILOP_FORCE_DWORD	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSTENCILOP_FORCE_DWORD    = 0x7fffffff, \/* force 32-bit size enum *\/$/;"	e	enum:_D3DSTENCILOP
D3DSTENCILOP_INCR	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSTENCILOP_INCR           = 7,$/;"	e	enum:_D3DSTENCILOP
D3DSTENCILOP_INCRSAT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSTENCILOP_INCRSAT        = 4,$/;"	e	enum:_D3DSTENCILOP
D3DSTENCILOP_INVERT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSTENCILOP_INVERT         = 6,$/;"	e	enum:_D3DSTENCILOP
D3DSTENCILOP_KEEP	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSTENCILOP_KEEP           = 1,$/;"	e	enum:_D3DSTENCILOP
D3DSTENCILOP_REPLACE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSTENCILOP_REPLACE        = 3,$/;"	e	enum:_D3DSTENCILOP
D3DSTENCILOP_ZERO	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSTENCILOP_ZERO           = 2,$/;"	e	enum:_D3DSTENCILOP
D3DSURFACE_DESC	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DSURFACE_DESC;$/;"	t
D3DSWAPEFFECT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DSWAPEFFECT;$/;"	t
D3DSWAPEFFECT_COPY	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSWAPEFFECT_COPY              = 3,$/;"	e	enum:_D3DSWAPEFFECT
D3DSWAPEFFECT_COPY_VSYNC	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSWAPEFFECT_COPY_VSYNC        = 4,$/;"	e	enum:_D3DSWAPEFFECT
D3DSWAPEFFECT_DISCARD	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSWAPEFFECT_DISCARD           = 1,$/;"	e	enum:_D3DSWAPEFFECT
D3DSWAPEFFECT_FLIP	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSWAPEFFECT_FLIP              = 2,$/;"	e	enum:_D3DSWAPEFFECT
D3DSWAPEFFECT_FORCE_DWORD	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSWAPEFFECT_FORCE_DWORD       = 0x7fffffff$/;"	e	enum:_D3DSWAPEFFECT
D3DTADDRESS_BORDER	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTADDRESS_BORDER          = 4,$/;"	e	enum:_D3DTEXTUREADDRESS
D3DTADDRESS_CLAMP	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTADDRESS_CLAMP           = 3,$/;"	e	enum:_D3DTEXTUREADDRESS
D3DTADDRESS_FORCE_DWORD	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTADDRESS_FORCE_DWORD     = 0x7fffffff, \/* force 32-bit size enum *\/$/;"	e	enum:_D3DTEXTUREADDRESS
D3DTADDRESS_MIRROR	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTADDRESS_MIRROR          = 2,$/;"	e	enum:_D3DTEXTUREADDRESS
D3DTADDRESS_MIRRORONCE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTADDRESS_MIRRORONCE      = 5,$/;"	e	enum:_D3DTEXTUREADDRESS
D3DTADDRESS_WRAP	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTADDRESS_WRAP            = 1,$/;"	e	enum:_D3DTEXTUREADDRESS
D3DTA_ALPHAREPLICATE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	554;"	d
D3DTA_COMPLEMENT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	553;"	d
D3DTA_CURRENT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	548;"	d
D3DTA_DIFFUSE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	547;"	d
D3DTA_SELECTMASK	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	546;"	d
D3DTA_SPECULAR	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	551;"	d
D3DTA_TEMP	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	552;"	d
D3DTA_TEXTURE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	549;"	d
D3DTA_TFACTOR	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	550;"	d
D3DTEXF_ANISOTROPIC	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTEXF_ANISOTROPIC     = 3,    \/\/ anisotropic$/;"	e	enum:_D3DTEXTUREFILTERTYPE
D3DTEXF_FLATCUBIC	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTEXF_FLATCUBIC       = 4,    \/\/ cubic$/;"	e	enum:_D3DTEXTUREFILTERTYPE
D3DTEXF_FORCE_DWORD	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTEXF_FORCE_DWORD     = 0x7fffffff,   \/\/ force 32-bit size enum$/;"	e	enum:_D3DTEXTUREFILTERTYPE
D3DTEXF_GAUSSIANCUBIC	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTEXF_GAUSSIANCUBIC   = 5,    \/\/ different cubic kernel$/;"	e	enum:_D3DTEXTUREFILTERTYPE
D3DTEXF_LINEAR	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTEXF_LINEAR          = 2,    \/\/ linear interpolation$/;"	e	enum:_D3DTEXTUREFILTERTYPE
D3DTEXF_NONE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTEXF_NONE            = 0,    \/\/ filtering disabled (valid for mip filter only)$/;"	e	enum:_D3DTEXTUREFILTERTYPE
D3DTEXF_POINT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTEXF_POINT           = 1,    \/\/ nearest$/;"	e	enum:_D3DTEXTUREFILTERTYPE
D3DTEXOPCAPS_ADD	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	321;"	d
D3DTEXOPCAPS_ADDSIGNED	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	322;"	d
D3DTEXOPCAPS_ADDSIGNED2X	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	323;"	d
D3DTEXOPCAPS_ADDSMOOTH	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	325;"	d
D3DTEXOPCAPS_BLENDCURRENTALPHA	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	330;"	d
D3DTEXOPCAPS_BLENDDIFFUSEALPHA	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	326;"	d
D3DTEXOPCAPS_BLENDFACTORALPHA	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	328;"	d
D3DTEXOPCAPS_BLENDTEXTUREALPHA	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	327;"	d
D3DTEXOPCAPS_BLENDTEXTUREALPHAPM	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	329;"	d
D3DTEXOPCAPS_BUMPENVMAP	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	336;"	d
D3DTEXOPCAPS_BUMPENVMAPLUMINANCE	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	337;"	d
D3DTEXOPCAPS_DISABLE	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	315;"	d
D3DTEXOPCAPS_DOTPRODUCT3	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	338;"	d
D3DTEXOPCAPS_LERP	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	340;"	d
D3DTEXOPCAPS_MODULATE	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	318;"	d
D3DTEXOPCAPS_MODULATE2X	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	319;"	d
D3DTEXOPCAPS_MODULATE4X	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	320;"	d
D3DTEXOPCAPS_MODULATEALPHA_ADDCOLOR	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	332;"	d
D3DTEXOPCAPS_MODULATECOLOR_ADDALPHA	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	333;"	d
D3DTEXOPCAPS_MODULATEINVALPHA_ADDCOLOR	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	334;"	d
D3DTEXOPCAPS_MODULATEINVCOLOR_ADDALPHA	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	335;"	d
D3DTEXOPCAPS_MULTIPLYADD	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	339;"	d
D3DTEXOPCAPS_PREMODULATE	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	331;"	d
D3DTEXOPCAPS_SELECTARG1	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	316;"	d
D3DTEXOPCAPS_SELECTARG2	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	317;"	d
D3DTEXOPCAPS_SUBTRACT	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	324;"	d
D3DTEXTUREADDRESS	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DTEXTUREADDRESS;$/;"	t
D3DTEXTUREFILTERTYPE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DTEXTUREFILTERTYPE;$/;"	t
D3DTEXTUREOP	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DTEXTUREOP;$/;"	t
D3DTEXTURESTAGESTATETYPE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DTEXTURESTAGESTATETYPE;$/;"	t
D3DTEXTURETRANSFORMFLAGS	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DTEXTURETRANSFORMFLAGS;$/;"	t
D3DTOP_ADD	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTOP_ADD                  =  7,   \/\/ add arguments together$/;"	e	enum:_D3DTEXTUREOP
D3DTOP_ADDSIGNED	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTOP_ADDSIGNED            =  8,   \/\/ add with -0.5 bias$/;"	e	enum:_D3DTEXTUREOP
D3DTOP_ADDSIGNED2X	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTOP_ADDSIGNED2X          =  9,   \/\/ as above but left  1 bit$/;"	e	enum:_D3DTEXTUREOP
D3DTOP_ADDSMOOTH	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTOP_ADDSMOOTH            = 11,   \/\/ add 2 args, subtract product$/;"	e	enum:_D3DTEXTUREOP
D3DTOP_BLENDCURRENTALPHA	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTOP_BLENDCURRENTALPHA    = 16, \/\/ by alpha of current color$/;"	e	enum:_D3DTEXTUREOP
D3DTOP_BLENDDIFFUSEALPHA	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTOP_BLENDDIFFUSEALPHA    = 12, \/\/ iterated alpha$/;"	e	enum:_D3DTEXTUREOP
D3DTOP_BLENDFACTORALPHA	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTOP_BLENDFACTORALPHA     = 14, \/\/ alpha from D3DRS_TEXTUREFACTOR$/;"	e	enum:_D3DTEXTUREOP
D3DTOP_BLENDTEXTUREALPHA	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTOP_BLENDTEXTUREALPHA    = 13, \/\/ texture alpha$/;"	e	enum:_D3DTEXTUREOP
D3DTOP_BLENDTEXTUREALPHAPM	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTOP_BLENDTEXTUREALPHAPM  = 15, \/\/ texture alpha$/;"	e	enum:_D3DTEXTUREOP
D3DTOP_BUMPENVMAP	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTOP_BUMPENVMAP           = 22, \/\/ per pixel env map perturbation$/;"	e	enum:_D3DTEXTUREOP
D3DTOP_BUMPENVMAPLUMINANCE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTOP_BUMPENVMAPLUMINANCE  = 23, \/\/ with luminance channel$/;"	e	enum:_D3DTEXTUREOP
D3DTOP_DISABLE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTOP_DISABLE              = 1,      \/\/ disables stage$/;"	e	enum:_D3DTEXTUREOP
D3DTOP_DOTPRODUCT3	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTOP_DOTPRODUCT3          = 24,$/;"	e	enum:_D3DTEXTUREOP
D3DTOP_FORCE_DWORD	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTOP_FORCE_DWORD = 0x7fffffff,$/;"	e	enum:_D3DTEXTUREOP
D3DTOP_LERP	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTOP_LERP                 = 26, \/\/ (Arg0)*Arg1 + (1-Arg0)*Arg2$/;"	e	enum:_D3DTEXTUREOP
D3DTOP_MODULATE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTOP_MODULATE             = 4,      \/\/ multiply args together$/;"	e	enum:_D3DTEXTUREOP
D3DTOP_MODULATE2X	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTOP_MODULATE2X           = 5,      \/\/ multiply and  1 bit$/;"	e	enum:_D3DTEXTUREOP
D3DTOP_MODULATE4X	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTOP_MODULATE4X           = 6,      \/\/ multiply and  2 bits$/;"	e	enum:_D3DTEXTUREOP
D3DTOP_MODULATEALPHA_ADDCOLOR	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTOP_MODULATEALPHA_ADDCOLOR = 18,     \/\/ Arg1.RGB + Arg1.A*Arg2.RGB$/;"	e	enum:_D3DTEXTUREOP
D3DTOP_MODULATECOLOR_ADDALPHA	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTOP_MODULATECOLOR_ADDALPHA = 19,     \/\/ Arg1.RGB*Arg2.RGB + Arg1.A$/;"	e	enum:_D3DTEXTUREOP
D3DTOP_MODULATEINVALPHA_ADDCOLOR	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTOP_MODULATEINVALPHA_ADDCOLOR = 20,  \/\/ (1-Arg1.A)*Arg2.RGB + Arg1.RGB$/;"	e	enum:_D3DTEXTUREOP
D3DTOP_MODULATEINVCOLOR_ADDALPHA	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTOP_MODULATEINVCOLOR_ADDALPHA = 21,  \/\/ (1-Arg1.RGB)*Arg2.RGB + Arg1.A$/;"	e	enum:_D3DTEXTUREOP
D3DTOP_MULTIPLYADD	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTOP_MULTIPLYADD          = 25, \/\/ Arg0 + Arg1*Arg2$/;"	e	enum:_D3DTEXTUREOP
D3DTOP_PREMODULATE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTOP_PREMODULATE            = 17,     \/\/ modulate with next texture before use$/;"	e	enum:_D3DTEXTUREOP
D3DTOP_SELECTARG1	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTOP_SELECTARG1           = 2,      \/\/ the default$/;"	e	enum:_D3DTEXTUREOP
D3DTOP_SELECTARG2	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTOP_SELECTARG2           = 3,$/;"	e	enum:_D3DTEXTUREOP
D3DTOP_SUBTRACT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTOP_SUBTRACT             = 10,   \/\/ Arg1 - Arg2, with no saturation$/;"	e	enum:_D3DTEXTUREOP
D3DTRANSFORMSTATETYPE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DTRANSFORMSTATETYPE;$/;"	t
D3DTRIPATCH_INFO	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DTRIPATCH_INFO;$/;"	t
D3DTSS_ADDRESSU	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTSS_ADDRESSU       = 13, \/* D3DTEXTUREADDRESS for U coordinate *\/$/;"	e	enum:_D3DTEXTURESTAGESTATETYPE
D3DTSS_ADDRESSV	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTSS_ADDRESSV       = 14, \/* D3DTEXTUREADDRESS for V coordinate *\/$/;"	e	enum:_D3DTEXTURESTAGESTATETYPE
D3DTSS_ADDRESSW	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTSS_ADDRESSW       = 25, \/* D3DTEXTUREADDRESS for W coordinate *\/$/;"	e	enum:_D3DTEXTURESTAGESTATETYPE
D3DTSS_ALPHAARG0	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTSS_ALPHAARG0      = 27, \/* D3DTA_* third arg for triadic ops *\/$/;"	e	enum:_D3DTEXTURESTAGESTATETYPE
D3DTSS_ALPHAARG1	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTSS_ALPHAARG1      =  5, \/* D3DTA_* (texture arg) *\/$/;"	e	enum:_D3DTEXTURESTAGESTATETYPE
D3DTSS_ALPHAARG2	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTSS_ALPHAARG2      =  6, \/* D3DTA_* (texture arg) *\/$/;"	e	enum:_D3DTEXTURESTAGESTATETYPE
D3DTSS_ALPHAOP	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTSS_ALPHAOP        =  4, \/* D3DTEXTUREOP - per-stage blending controls for alpha channel *\/$/;"	e	enum:_D3DTEXTURESTAGESTATETYPE
D3DTSS_BORDERCOLOR	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTSS_BORDERCOLOR    = 15, \/* D3DCOLOR *\/$/;"	e	enum:_D3DTEXTURESTAGESTATETYPE
D3DTSS_BUMPENVLOFFSET	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTSS_BUMPENVLOFFSET = 23, \/* float offset for bump map luminance *\/$/;"	e	enum:_D3DTEXTURESTAGESTATETYPE
D3DTSS_BUMPENVLSCALE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTSS_BUMPENVLSCALE  = 22, \/* float scale for bump map luminance *\/$/;"	e	enum:_D3DTEXTURESTAGESTATETYPE
D3DTSS_BUMPENVMAT00	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTSS_BUMPENVMAT00   =  7, \/* float (bump mapping matrix) *\/$/;"	e	enum:_D3DTEXTURESTAGESTATETYPE
D3DTSS_BUMPENVMAT01	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTSS_BUMPENVMAT01   =  8, \/* float (bump mapping matrix) *\/$/;"	e	enum:_D3DTEXTURESTAGESTATETYPE
D3DTSS_BUMPENVMAT10	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTSS_BUMPENVMAT10   =  9, \/* float (bump mapping matrix) *\/$/;"	e	enum:_D3DTEXTURESTAGESTATETYPE
D3DTSS_BUMPENVMAT11	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTSS_BUMPENVMAT11   = 10, \/* float (bump mapping matrix) *\/$/;"	e	enum:_D3DTEXTURESTAGESTATETYPE
D3DTSS_COLORARG0	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTSS_COLORARG0      = 26, \/* D3DTA_* third arg for triadic ops *\/$/;"	e	enum:_D3DTEXTURESTAGESTATETYPE
D3DTSS_COLORARG1	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTSS_COLORARG1      =  2, \/* D3DTA_* (texture arg) *\/$/;"	e	enum:_D3DTEXTURESTAGESTATETYPE
D3DTSS_COLORARG2	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTSS_COLORARG2      =  3, \/* D3DTA_* (texture arg) *\/$/;"	e	enum:_D3DTEXTURESTAGESTATETYPE
D3DTSS_COLOROP	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTSS_COLOROP        =  1, \/* D3DTEXTUREOP - per-stage blending controls for color channels *\/$/;"	e	enum:_D3DTEXTURESTAGESTATETYPE
D3DTSS_FORCE_DWORD	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTSS_FORCE_DWORD   = 0x7fffffff, \/* force 32-bit size enum *\/$/;"	e	enum:_D3DTEXTURESTAGESTATETYPE
D3DTSS_MAGFILTER	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTSS_MAGFILTER      = 16, \/* D3DTEXTUREFILTER filter to use for magnification *\/$/;"	e	enum:_D3DTEXTURESTAGESTATETYPE
D3DTSS_MAXANISOTROPY	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTSS_MAXANISOTROPY  = 21, \/* DWORD maximum anisotropy *\/$/;"	e	enum:_D3DTEXTURESTAGESTATETYPE
D3DTSS_MAXMIPLEVEL	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTSS_MAXMIPLEVEL    = 20, \/* DWORD 0..(n-1) LOD index of largest map to use (0 == largest) *\/$/;"	e	enum:_D3DTEXTURESTAGESTATETYPE
D3DTSS_MINFILTER	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTSS_MINFILTER      = 17, \/* D3DTEXTUREFILTER filter to use for minification *\/$/;"	e	enum:_D3DTEXTURESTAGESTATETYPE
D3DTSS_MIPFILTER	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTSS_MIPFILTER      = 18, \/* D3DTEXTUREFILTER filter to use between mipmaps during minification *\/$/;"	e	enum:_D3DTEXTURESTAGESTATETYPE
D3DTSS_MIPMAPLODBIAS	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTSS_MIPMAPLODBIAS  = 19, \/* float Mipmap LOD bias *\/$/;"	e	enum:_D3DTEXTURESTAGESTATETYPE
D3DTSS_RESULTARG	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTSS_RESULTARG      = 28, \/* D3DTA_* arg for result (CURRENT or TEMP) *\/$/;"	e	enum:_D3DTEXTURESTAGESTATETYPE
D3DTSS_TCI_CAMERASPACENORMAL	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	475;"	d
D3DTSS_TCI_CAMERASPACEPOSITION	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	476;"	d
D3DTSS_TCI_CAMERASPACEREFLECTIONVECTOR	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	477;"	d
D3DTSS_TCI_PASSTHRU	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	474;"	d
D3DTSS_TEXCOORDINDEX	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTSS_TEXCOORDINDEX  = 11, \/* identifies which set of texture coordinates index this texture *\/$/;"	e	enum:_D3DTEXTURESTAGESTATETYPE
D3DTSS_TEXTURETRANSFORMFLAGS	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTSS_TEXTURETRANSFORMFLAGS = 24, \/* D3DTEXTURETRANSFORMFLAGS controls texture transform *\/$/;"	e	enum:_D3DTEXTURESTAGESTATETYPE
D3DTS_FORCE_DWORD	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTS_FORCE_DWORD     = 0x7fffffff, \/* force 32-bit size enum *\/$/;"	e	enum:_D3DTRANSFORMSTATETYPE
D3DTS_PROJECTION	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTS_PROJECTION    = 3,$/;"	e	enum:_D3DTRANSFORMSTATETYPE
D3DTS_TEXTURE0	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTS_TEXTURE0      = 16,$/;"	e	enum:_D3DTRANSFORMSTATETYPE
D3DTS_TEXTURE1	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTS_TEXTURE1      = 17,$/;"	e	enum:_D3DTRANSFORMSTATETYPE
D3DTS_TEXTURE2	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTS_TEXTURE2      = 18,$/;"	e	enum:_D3DTRANSFORMSTATETYPE
D3DTS_TEXTURE3	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTS_TEXTURE3      = 19,$/;"	e	enum:_D3DTRANSFORMSTATETYPE
D3DTS_TEXTURE4	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTS_TEXTURE4      = 20,$/;"	e	enum:_D3DTRANSFORMSTATETYPE
D3DTS_TEXTURE5	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTS_TEXTURE5      = 21,$/;"	e	enum:_D3DTRANSFORMSTATETYPE
D3DTS_TEXTURE6	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTS_TEXTURE6      = 22,$/;"	e	enum:_D3DTRANSFORMSTATETYPE
D3DTS_TEXTURE7	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTS_TEXTURE7      = 23,$/;"	e	enum:_D3DTRANSFORMSTATETYPE
D3DTS_VIEW	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTS_VIEW          = 2,$/;"	e	enum:_D3DTRANSFORMSTATETYPE
D3DTS_WORLD	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	320;"	d
D3DTS_WORLD1	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	321;"	d
D3DTS_WORLD2	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	322;"	d
D3DTS_WORLD3	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	323;"	d
D3DTS_WORLDMATRIX	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	319;"	d
D3DTTFF_COUNT1	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTTFF_COUNT1          = 1,    \/\/ rasterizer should expect 1-D texture coords$/;"	e	enum:_D3DTEXTURETRANSFORMFLAGS
D3DTTFF_COUNT2	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTTFF_COUNT2          = 2,    \/\/ rasterizer should expect 2-D texture coords$/;"	e	enum:_D3DTEXTURETRANSFORMFLAGS
D3DTTFF_COUNT3	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTTFF_COUNT3          = 3,    \/\/ rasterizer should expect 3-D texture coords$/;"	e	enum:_D3DTEXTURETRANSFORMFLAGS
D3DTTFF_COUNT4	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTTFF_COUNT4          = 4,    \/\/ rasterizer should expect 4-D texture coords$/;"	e	enum:_D3DTEXTURETRANSFORMFLAGS
D3DTTFF_DISABLE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTTFF_DISABLE         = 0,    \/\/ texture coordinates are passed directly$/;"	e	enum:_D3DTEXTURETRANSFORMFLAGS
D3DTTFF_FORCE_DWORD	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTTFF_FORCE_DWORD     = 0x7fffffff,$/;"	e	enum:_D3DTEXTURETRANSFORMFLAGS
D3DTTFF_PROJECTED	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DTTFF_PROJECTED       = 256,  \/\/ texcoords to be divided by COUNTth element$/;"	e	enum:_D3DTEXTURETRANSFORMFLAGS
D3DUSAGE_DEPTHSTENCIL	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1435;"	d
D3DUSAGE_DONOTCLIP	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1440;"	d
D3DUSAGE_DYNAMIC	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1444;"	d
D3DUSAGE_NPATCHES	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1443;"	d
D3DUSAGE_POINTS	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1441;"	d
D3DUSAGE_RENDERTARGET	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1434;"	d
D3DUSAGE_RTPATCHES	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1442;"	d
D3DUSAGE_SOFTWAREPROCESSING	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1439;"	d
D3DUSAGE_WRITEONLY	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1438;"	d
D3DVBF_0WEIGHTS	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DVBF_0WEIGHTS = 256,   \/\/ one matrix is used with weight 1.0$/;"	e	enum:_D3DVERTEXBLENDFLAGS
D3DVBF_1WEIGHTS	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DVBF_1WEIGHTS = 1,     \/\/ 2 matrix blending$/;"	e	enum:_D3DVERTEXBLENDFLAGS
D3DVBF_2WEIGHTS	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DVBF_2WEIGHTS = 2,     \/\/ 3 matrix blending$/;"	e	enum:_D3DVERTEXBLENDFLAGS
D3DVBF_3WEIGHTS	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DVBF_3WEIGHTS = 3,     \/\/ 4 matrix blending$/;"	e	enum:_D3DVERTEXBLENDFLAGS
D3DVBF_DISABLE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DVBF_DISABLE  = 0,     \/\/ Disable vertex blending$/;"	e	enum:_D3DVERTEXBLENDFLAGS
D3DVBF_FORCE_DWORD	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DVBF_FORCE_DWORD = 0x7fffffff, \/\/ force 32-bit size enum$/;"	e	enum:_D3DVERTEXBLENDFLAGS
D3DVBF_TWEENING	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DVBF_TWEENING = 255,   \/\/ blending using D3DRS_TWEENFACTOR$/;"	e	enum:_D3DVERTEXBLENDFLAGS
D3DVECTOR	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DVECTOR;$/;"	t
D3DVECTOR_DEFINED	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	53;"	d
D3DVERTEXBLENDFLAGS	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DVERTEXBLENDFLAGS;$/;"	t
D3DVERTEXBUFFER_DESC	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DVERTEXBUFFER_DESC;$/;"	t
D3DVIEWPORT8	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DVIEWPORT8;$/;"	t
D3DVOLUME_DESC	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DVOLUME_DESC;$/;"	t
D3DVSDE_BLENDINDICES	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	853;"	d
D3DVSDE_BLENDWEIGHT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	852;"	d
D3DVSDE_DIFFUSE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	856;"	d
D3DVSDE_NORMAL	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	854;"	d
D3DVSDE_NORMAL2	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	867;"	d
D3DVSDE_POSITION	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	851;"	d
D3DVSDE_POSITION2	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	866;"	d
D3DVSDE_PSIZE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	855;"	d
D3DVSDE_SPECULAR	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	857;"	d
D3DVSDE_TEXCOORD0	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	858;"	d
D3DVSDE_TEXCOORD1	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	859;"	d
D3DVSDE_TEXCOORD2	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	860;"	d
D3DVSDE_TEXCOORD3	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	861;"	d
D3DVSDE_TEXCOORD4	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	862;"	d
D3DVSDE_TEXCOORD5	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	863;"	d
D3DVSDE_TEXCOORD6	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	864;"	d
D3DVSDE_TEXCOORD7	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	865;"	d
D3DVSDT_D3DCOLOR	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	843;"	d
D3DVSDT_FLOAT1	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	839;"	d
D3DVSDT_FLOAT2	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	840;"	d
D3DVSDT_FLOAT3	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	841;"	d
D3DVSDT_FLOAT4	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	842;"	d
D3DVSDT_SHORT2	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	846;"	d
D3DVSDT_SHORT4	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	847;"	d
D3DVSDT_UBYTE4	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	845;"	d
D3DVSD_CONST	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	808;"	d
D3DVSD_CONSTADDRESSMASK	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	759;"	d
D3DVSD_CONSTADDRESSSHIFT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	758;"	d
D3DVSD_CONSTCOUNTMASK	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	756;"	d
D3DVSD_CONSTCOUNTSHIFT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	755;"	d
D3DVSD_CONSTRSMASK	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	762;"	d
D3DVSD_CONSTRSSHIFT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	761;"	d
D3DVSD_DATALOADTYPEMASK	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	741;"	d
D3DVSD_DATALOADTYPESHIFT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	740;"	d
D3DVSD_DATATYPEMASK	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	744;"	d
D3DVSD_DATATYPESHIFT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	743;"	d
D3DVSD_END	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	833;"	d
D3DVSD_EXTCOUNTMASK	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	765;"	d
D3DVSD_EXTCOUNTSHIFT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	764;"	d
D3DVSD_EXTINFOMASK	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	768;"	d
D3DVSD_EXTINFOSHIFT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	767;"	d
D3DVSD_FORCE_DWORD	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DVSD_FORCE_DWORD = 0x7fffffff,\/\/ force 32-bit size enum$/;"	e	enum:_D3DVSD_TOKENTYPE
D3DVSD_MAKETOKENTYPE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	770;"	d
D3DVSD_NOP	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	836;"	d
D3DVSD_REG	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	792;"	d
D3DVSD_SKIP	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	798;"	d
D3DVSD_SKIPCOUNTMASK	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	747;"	d
D3DVSD_SKIPCOUNTSHIFT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	746;"	d
D3DVSD_STREAM	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	777;"	d
D3DVSD_STREAMNUMBERMASK	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	738;"	d
D3DVSD_STREAMNUMBERSHIFT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	737;"	d
D3DVSD_STREAMTESSMASK	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	783;"	d
D3DVSD_STREAMTESSSHIFT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	782;"	d
D3DVSD_STREAM_TESS	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	784;"	d
D3DVSD_TESSNORMAL	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	818;"	d
D3DVSD_TESSUV	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	827;"	d
D3DVSD_TOKENTYPE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DVSD_TOKENTYPE;$/;"	t
D3DVSD_TOKENTYPEMASK	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	735;"	d
D3DVSD_TOKENTYPESHIFT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	734;"	d
D3DVSD_TOKEN_CONSTMEM	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DVSD_TOKEN_CONSTMEM,          \/\/ constant memory from shader$/;"	e	enum:_D3DVSD_TOKENTYPE
D3DVSD_TOKEN_END	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DVSD_TOKEN_END = 7,           \/\/ end-of-array (requires all DWORD bits to be 1)$/;"	e	enum:_D3DVSD_TOKENTYPE
D3DVSD_TOKEN_EXT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DVSD_TOKEN_EXT,               \/\/ extension$/;"	e	enum:_D3DVSD_TOKENTYPE
D3DVSD_TOKEN_NOP	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DVSD_TOKEN_NOP        = 0,    \/\/ NOP or extension$/;"	e	enum:_D3DVSD_TOKENTYPE
D3DVSD_TOKEN_STREAM	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DVSD_TOKEN_STREAM,            \/\/ stream selector$/;"	e	enum:_D3DVSD_TOKENTYPE
D3DVSD_TOKEN_STREAMDATA	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DVSD_TOKEN_STREAMDATA,        \/\/ stream data definition (map to vertex input memory)$/;"	e	enum:_D3DVSD_TOKENTYPE
D3DVSD_TOKEN_TESSELLATOR	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DVSD_TOKEN_TESSELLATOR,       \/\/ vertex input memory from tessellator$/;"	e	enum:_D3DVSD_TOKENTYPE
D3DVSD_VERTEXREGINMASK	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	753;"	d
D3DVSD_VERTEXREGINSHIFT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	752;"	d
D3DVSD_VERTEXREGMASK	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	750;"	d
D3DVSD_VERTEXREGSHIFT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	749;"	d
D3DVS_ADDRESSMODE_MASK	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1004;"	d
D3DVS_ADDRESSMODE_SHIFT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1003;"	d
D3DVS_ADDRESSMODE_TYPE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DVS_ADDRESSMODE_TYPE;$/;"	t
D3DVS_ADDRMODE_ABSOLUTE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DVS_ADDRMODE_ABSOLUTE  = (0 << D3DVS_ADDRESSMODE_SHIFT),$/;"	e	enum:_D3DVS_ADDRESSMODE_TYPE
D3DVS_ADDRMODE_FORCE_DWORD	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DVS_ADDRMODE_FORCE_DWORD = 0x7fffffff, \/\/ force 32-bit size enum$/;"	e	enum:_D3DVS_ADDRESSMODE_TYPE
D3DVS_ADDRMODE_RELATIVE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DVS_ADDRMODE_RELATIVE  = (1 << D3DVS_ADDRESSMODE_SHIFT),   \/\/ Relative to register A0$/;"	e	enum:_D3DVS_ADDRESSMODE_TYPE
D3DVS_END	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1124;"	d
D3DVS_NOSWIZZLE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1049;"	d
D3DVS_RASTOUT_OFFSETS	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DVS_RASTOUT_OFFSETS;$/;"	t
D3DVS_SWIZZLE_MASK	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1016;"	d
D3DVS_SWIZZLE_SHIFT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1015;"	d
D3DVS_VERSION	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1110;"	d
D3DVS_W_W	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1044;"	d
D3DVS_W_X	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1041;"	d
D3DVS_W_Y	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1042;"	d
D3DVS_W_Z	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1043;"	d
D3DVS_X_W	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1023;"	d
D3DVS_X_X	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1020;"	d
D3DVS_X_Y	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1021;"	d
D3DVS_X_Z	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1022;"	d
D3DVS_Y_W	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1030;"	d
D3DVS_Y_X	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1027;"	d
D3DVS_Y_Y	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1028;"	d
D3DVS_Y_Z	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1029;"	d
D3DVS_Z_W	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1037;"	d
D3DVS_Z_X	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1034;"	d
D3DVS_Z_Y	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1035;"	d
D3DVS_Z_Z	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1036;"	d
D3DVTXPCAPS_DIRECTIONALLIGHTS	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	354;"	d
D3DVTXPCAPS_LOCALVIEWER	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	356;"	d
D3DVTXPCAPS_MATERIALSOURCE7	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	353;"	d
D3DVTXPCAPS_NO_VSDT_UBYTE4	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	358;"	d
D3DVTXPCAPS_POSITIONALLIGHTS	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	355;"	d
D3DVTXPCAPS_TEXGEN	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	352;"	d
D3DVTXPCAPS_TWEENING	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	357;"	d
D3DWRAPCOORD_0	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	424;"	d
D3DWRAPCOORD_1	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	425;"	d
D3DWRAPCOORD_2	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	426;"	d
D3DWRAPCOORD_3	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	427;"	d
D3DWRAP_U	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	419;"	d
D3DWRAP_V	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	420;"	d
D3DWRAP_W	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	421;"	d
D3DZBUFFERTYPE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DZBUFFERTYPE;$/;"	t
D3DZB_FALSE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DZB_FALSE                 = 0,$/;"	e	enum:_D3DZBUFFERTYPE
D3DZB_FORCE_DWORD	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DZB_FORCE_DWORD           = 0x7fffffff, \/* force 32-bit size enum *\/$/;"	e	enum:_D3DZBUFFERTYPE
D3DZB_TRUE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DZB_TRUE                  = 1, \/\/ Z buffering$/;"	e	enum:_D3DZBUFFERTYPE
D3DZB_USEW	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DZB_USEW                  = 2, \/\/ W buffering$/;"	e	enum:_D3DZBUFFERTYPE
D3D_OK	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1248;"	d
D3D_SDK_VERSION	GraphicsCapture/GraphicsCaptureHook/d3d8.h	27;"	d
D3D_SURFACES_SUPPORT	QSVHelper/IntelSupport/include/sample_defs.h	23;"	d
DATA	lame/doc/html/Makefile	/^DATA = $(pkghtml_DATA)$/;"	m
DAV_AUTH_FILE	Source/mongoose.c	/^  DAV_AUTH_FILE,$/;"	e	file:
DAV_ROOT	Source/mongoose.c	/^  DAV_ROOT,$/;"	e	file:
DBG	Source/mongoose.c	164;"	d	file:
DBG	Source/mongoose.c	167;"	d	file:
DBGHELP_TRANSLATE_TCHAR	Source/CrashDumpHandler.h	21;"	d
DBtoLog	OBSApi/VolumeMeter.cpp	/^inline float DBtoLog(float db)$/;"	f
DCT12_PART1	lame/mpglib/layer3.c	1399;"	d	file:
DCT12_PART2	lame/mpglib/layer3.c	1412;"	d	file:
DCTables	libmfx/include/msdk/include/mfxjpeg.h	/^    } DCTables[4];$/;"	m
DC_cancel	lame/misc/abx.c	/^void  DC_cancel ( stereo_t* p, size_t len )$/;"	f
DDrawCapture.cpp	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	1;"	F
DEBUG	lame/ACM/tinyxml/tinyxml.h	46;"	d
DEBUGF	lame/libmp3lame/util.h	609;"	d
DEBUG_LEVEL_CREATION	lame/ACM/adebug.h	31;"	d
DEBUG_LEVEL_FUNC_CODE	lame/ACM/adebug.h	36;"	d
DEBUG_LEVEL_FUNC_DEBUG	lame/ACM/adebug.h	35;"	d
DEBUG_LEVEL_FUNC_START	lame/ACM/adebug.h	34;"	d
DEBUG_LEVEL_MSG	lame/ACM/adebug.h	33;"	d
DEBUG__	DShowPlugin/DeviceSource.cpp	184;"	d	file:
DEBUG__	DShowPlugin/DeviceSource.cpp	203;"	d	file:
DECDELAY	lame/libmp3lame/encoder.h	89;"	d
DECL	minhook/src/pstdint.h	747;"	d
DECLARATION	lame/ACM/tinyxml/tinyxml.h	/^		DECLARATION, $/;"	e	enum:TiXmlNode::NodeType
DECLARE_INTERFACE_	DShowPlugin/IVideoCaptureFilter.h	/^DECLARE_INTERFACE_(IElgatoVideoCaptureFilter, IUnknown)$/;"	f
DECLARE_INTERFACE_	DShowPlugin/IVideoCaptureFilter.h	/^DECLARE_INTERFACE_(IElgatoVideoCaptureFilter2, IElgatoVideoCaptureFilter)$/;"	f
DECLARE_INTERFACE_	DShowPlugin/IVideoCaptureFilter.h	/^DECLARE_INTERFACE_(IElgatoVideoCaptureFilter3, IElgatoVideoCaptureFilter2)$/;"	f
DECLARE_INTERFACE_	DShowPlugin/IVideoCaptureFilter.h	/^DECLARE_INTERFACE_(IElgatoVideoCaptureFilter4, IElgatoVideoCaptureFilter3)$/;"	f
DECLARE_INTERFACE_	DShowPlugin/IVideoCaptureFilter.h	/^DECLARE_INTERFACE_(IElgatoVideoCaptureFilter5, IElgatoVideoCaptureFilter4)$/;"	f
DECLARE_INTERFACE_	DShowPlugin/IVideoCaptureFilter.h	/^DECLARE_INTERFACE_(IElgatoVideoCaptureFilter6, IElgatoVideoCaptureFilter5)$/;"	f
DECLARE_INTERFACE_	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^DECLARE_INTERFACE_(IDirect3D8, IUnknown)$/;"	f
DECLARE_INTERFACE_	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^DECLARE_INTERFACE_(IDirect3DBaseTexture8, IDirect3DResource8)$/;"	f
DECLARE_INTERFACE_	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^DECLARE_INTERFACE_(IDirect3DCubeTexture8, IDirect3DBaseTexture8)$/;"	f
DECLARE_INTERFACE_	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^DECLARE_INTERFACE_(IDirect3DDevice8, IUnknown)$/;"	f
DECLARE_INTERFACE_	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^DECLARE_INTERFACE_(IDirect3DIndexBuffer8, IDirect3DResource8)$/;"	f
DECLARE_INTERFACE_	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^DECLARE_INTERFACE_(IDirect3DResource8, IUnknown)$/;"	f
DECLARE_INTERFACE_	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^DECLARE_INTERFACE_(IDirect3DSurface8, IUnknown)$/;"	f
DECLARE_INTERFACE_	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^DECLARE_INTERFACE_(IDirect3DSwapChain8, IUnknown)$/;"	f
DECLARE_INTERFACE_	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^DECLARE_INTERFACE_(IDirect3DTexture8, IDirect3DBaseTexture8)$/;"	f
DECLARE_INTERFACE_	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^DECLARE_INTERFACE_(IDirect3DVertexBuffer8, IDirect3DResource8)$/;"	f
DECLARE_INTERFACE_	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^DECLARE_INTERFACE_(IDirect3DVolume8, IUnknown)$/;"	f
DECLARE_INTERFACE_	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^DECLARE_INTERFACE_(IDirect3DVolumeTexture8, IDirect3DBaseTexture8)$/;"	f
DECLARE_INTERFACE_	lame/dshow/iaudioprops.h	/^    DECLARE_INTERFACE_(IAudioEncoderProperties, IUnknown)$/;"	f
DECLARE_PTR	lame/dshow/Mpegac.cpp	73;"	d	file:
DECLI	minhook/src/pstdint.h	745;"	d
DECLU	minhook/src/pstdint.h	744;"	d
DECODE_I386_H_INCLUDED	lame/mpglib/decode_i386.h	23;"	d
DECODE_ON_THE_FLY	lame/config.h	87;"	d
DECODE_ON_THE_FLY	lame/configMS.h	87;"	d
DEFAULT_API_VERSION_MAJOR	libmfx/include/mfx_dispatcher.h	/^    DEFAULT_API_VERSION_MAJOR   = MFX_VERSION_MAJOR,$/;"	e
DEFAULT_API_VERSION_MINOR	libmfx/include/mfx_dispatcher.h	/^    DEFAULT_API_VERSION_MINOR   = MFX_VERSION_MINOR$/;"	e
DEFAULT_BITRATE	lame/dshow/Mpegac.cpp	55;"	d	file:
DEFAULT_CGI_PATTERN	Source/mongoose.c	1381;"	d	file:
DEFAULT_COPYRIGHT	lame/dshow/Mpegac.cpp	61;"	d	file:
DEFAULT_CRC	lame/dshow/Mpegac.cpp	57;"	d	file:
DEFAULT_DISABLE_SHORT_BLOCK	lame/dshow/Mpegac.cpp	52;"	d	file:
DEFAULT_ENCODING_QUALITY	lame/dshow/Mpegac.cpp	65;"	d	file:
DEFAULT_ENFORCE_MIN	lame/dshow/Mpegac.cpp	48;"	d	file:
DEFAULT_FILTER_MERIT	lame/dshow/Mpegac.cpp	69;"	d	file:
DEFAULT_FLASH_VER	librtmp/rtmp.c	/^static const char DEFAULT_FLASH_VER[] = DEF_VERSTR;$/;"	v	file:
DEFAULT_FORCE_MONO	lame/dshow/Mpegac.cpp	58;"	d	file:
DEFAULT_FORCE_MS	lame/dshow/Mpegac.cpp	46;"	d	file:
DEFAULT_INCLUDES	lame/frontend/Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)$/;"	m
DEFAULT_INCLUDES	lame/libmp3lame/Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)$/;"	m
DEFAULT_INCLUDES	lame/libmp3lame/i386/Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)$/;"	m
DEFAULT_INCLUDES	lame/libmp3lame/vector/Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)$/;"	m
DEFAULT_INCLUDES	lame/misc/Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)$/;"	m
DEFAULT_INCLUDES	lame/mpglib/Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)$/;"	m
DEFAULT_KEEP_ALL_FREQ	lame/dshow/Mpegac.cpp	50;"	d	file:
DEFAULT_LAYER	lame/dshow/Mpegac.cpp	44;"	d	file:
DEFAULT_MODE_FIXED	lame/dshow/Mpegac.cpp	47;"	d	file:
DEFAULT_ORIGINAL	lame/dshow/Mpegac.cpp	62;"	d	file:
DEFAULT_PES	lame/dshow/Mpegac.cpp	67;"	d	file:
DEFAULT_SAMPLE_OVERLAP	lame/dshow/Mpegac.cpp	60;"	d	file:
DEFAULT_SAMPLE_RATE	lame/dshow/Mpegac.cpp	54;"	d	file:
DEFAULT_SET_DURATION	lame/dshow/Mpegac.cpp	59;"	d	file:
DEFAULT_STEREO_MODE	lame/dshow/Mpegac.cpp	45;"	d	file:
DEFAULT_STRICT_ISO	lame/dshow/Mpegac.cpp	51;"	d	file:
DEFAULT_VARIABLE	lame/dshow/Mpegac.cpp	56;"	d	file:
DEFAULT_VARIABLEMAX	lame/dshow/Mpegac.cpp	64;"	d	file:
DEFAULT_VARIABLEMIN	lame/dshow/Mpegac.cpp	63;"	d	file:
DEFAULT_VBR_QUALITY	lame/dshow/Mpegac.cpp	66;"	d	file:
DEFAULT_VOICE	lame/dshow/Mpegac.cpp	49;"	d	file:
DEFAULT_XING_TAG	lame/dshow/Mpegac.cpp	53;"	d	file:
DEFINE_CODE	libmfx/src/mfx_dispatcher_log.cpp	58;"	d	file:
DEFINE_GUID	DShowPlugin/DeviceSource.cpp	35;"	d	file:
DEFINE_GUID	DShowPlugin/DeviceSource.cpp	36;"	d	file:
DEFPROC	OBSApi/Utility/XT_Windows.h	/^typedef void (STDCALL* DEFPROC)();$/;"	t
DEFS	lame/ACM/ADbg/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	lame/ACM/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	lame/ACM/ddk/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	lame/ACM/tinyxml/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	lame/Dll/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	lame/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	lame/debian/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	lame/doc/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	lame/doc/html/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	lame/doc/man/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	lame/dshow/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	lame/frontend/Makefile	/^DEFS = -DHAVE_CONFIG_H $/;"	m
DEFS	lame/include/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	lame/libmp3lame/Makefile	/^DEFS = -DHAVE_CONFIG_H $/;"	m
DEFS	lame/libmp3lame/i386/Makefile	/^DEFS = -DHAVE_CONFIG_H $/;"	m
DEFS	lame/libmp3lame/vector/Makefile	/^DEFS = -DHAVE_CONFIG_H $/;"	m
DEFS	lame/mac/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	lame/macosx/English.lproj/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	lame/macosx/LAME.xcodeproj/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	lame/macosx/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	lame/misc/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	lame/mpglib/Makefile	/^DEFS = -DHAVE_CONFIG_H $/;"	m
DEFS	lame/vc_solution/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEF_TNS_COEFF_RES	libfaac/coder.h	68;"	d
DEF_TNS_COEFF_THRESH	libfaac/coder.h	67;"	d
DEF_TNS_GAIN_THRESH	libfaac/coder.h	66;"	d
DEF_TNS_RES_OFFSET	libfaac/coder.h	69;"	d
DEF_VERSTR	librtmp/rtmp.c	430;"	d	file:
DEG	OBSApi/Utility/XMath.h	36;"	d
DEG	OBSApi/Utility/XMath.h	42;"	d
DEINTERLACING_BLEND	DShowPlugin/DShowPlugin.h	/^    DEINTERLACING_BLEND,$/;"	e	enum:DeinterlacingType
DEINTERLACING_BLEND2x	DShowPlugin/DShowPlugin.h	/^    DEINTERLACING_BLEND2x,$/;"	e	enum:DeinterlacingType
DEINTERLACING_DISCARD	DShowPlugin/DShowPlugin.h	/^    DEINTERLACING_DISCARD,$/;"	e	enum:DeinterlacingType
DEINTERLACING_LINEAR	DShowPlugin/DShowPlugin.h	/^    DEINTERLACING_LINEAR,$/;"	e	enum:DeinterlacingType
DEINTERLACING_LINEAR2x	DShowPlugin/DShowPlugin.h	/^    DEINTERLACING_LINEAR2x,$/;"	e	enum:DeinterlacingType
DEINTERLACING_NONE	DShowPlugin/DShowPlugin.h	/^    DEINTERLACING_NONE,$/;"	e	enum:DeinterlacingType
DEINTERLACING_PROCESSOR_CPU	DShowPlugin/DShowPlugin.h	/^    DEINTERLACING_PROCESSOR_CPU = 1,$/;"	e	enum:DeinterlacingProcessor
DEINTERLACING_PROCESSOR_GPU	DShowPlugin/DShowPlugin.h	/^    DEINTERLACING_PROCESSOR_GPU,$/;"	e	enum:DeinterlacingProcessor
DEINTERLACING_RETRO	DShowPlugin/DShowPlugin.h	/^    DEINTERLACING_RETRO,$/;"	e	enum:DeinterlacingType
DEINTERLACING_TYPE_LAST	DShowPlugin/DShowPlugin.h	/^    DEINTERLACING_TYPE_LAST$/;"	e	enum:DeinterlacingType
DEINTERLACING_YADIF	DShowPlugin/DShowPlugin.h	/^    DEINTERLACING_YADIF,$/;"	e	enum:DeinterlacingType
DEINTERLACING_YADIF2x	DShowPlugin/DShowPlugin.h	/^    DEINTERLACING_YADIF2x,$/;"	e	enum:DeinterlacingType
DEINTERLACING__DEBUG	DShowPlugin/DShowPlugin.h	/^    DEINTERLACING__DEBUG,$/;"	e	enum:DeinterlacingType
DELAY	libfaac/coder.h	73;"	d
DELAY_UNTIL_XCHG	lame/misc/ath.c	59;"	d	file:
DELBARK	lame/libmp3lame/psymodel.h	48;"	d
DELTA_FPU_MODRM	minhook/src/HDE32/table32.h	30;"	d
DELTA_FPU_MODRM	minhook/src/HDE64/src/table64.h	30;"	d
DELTA_FPU_REG	minhook/src/HDE32/table32.h	29;"	d
DELTA_FPU_REG	minhook/src/HDE64/src/table64.h	29;"	d
DELTA_OP2_LOCK_OK	minhook/src/HDE32/table32.h	33;"	d
DELTA_OP2_LOCK_OK	minhook/src/HDE64/src/table64.h	33;"	d
DELTA_OP2_ONLY_MEM	minhook/src/HDE32/table32.h	35;"	d
DELTA_OP2_ONLY_MEM	minhook/src/HDE64/src/table64.h	35;"	d
DELTA_OPCODES	minhook/src/HDE32/table32.h	28;"	d
DELTA_OPCODES	minhook/src/HDE64/src/table64.h	28;"	d
DELTA_OP_LOCK_OK	minhook/src/HDE32/table32.h	32;"	d
DELTA_OP_LOCK_OK	minhook/src/HDE64/src/table64.h	32;"	d
DELTA_OP_ONLY_MEM	minhook/src/HDE32/table32.h	34;"	d
DELTA_OP_ONLY_MEM	minhook/src/HDE64/src/table64.h	34;"	d
DELTA_PREFIXES	minhook/src/HDE32/table32.h	31;"	d
DELTA_PREFIXES	minhook/src/HDE64/src/table64.h	31;"	d
DEPDIR	lame/ACM/ADbg/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	lame/ACM/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	lame/ACM/ddk/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	lame/ACM/tinyxml/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	lame/Dll/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	lame/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	lame/debian/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	lame/doc/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	lame/doc/html/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	lame/doc/man/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	lame/dshow/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	lame/frontend/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	lame/include/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	lame/libmp3lame/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	lame/libmp3lame/i386/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	lame/libmp3lame/vector/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	lame/mac/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	lame/macosx/English.lproj/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	lame/macosx/LAME.xcodeproj/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	lame/macosx/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	lame/misc/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	lame/mpglib/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	lame/vc_solution/Makefile	/^DEPDIR = .deps$/;"	m
DEPRECATED_OR_OBSOLETE_CODE_REMOVED	lame/include/lame.h	47;"	d
DESTDIR	lame/Makefile	/^	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \\$/;"	m
DESTDIR	lame/Makefile	/^	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \\$/;"	m
DESTDIR	lame/Makefile	/^	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \\$/;"	m
DEV_EXCEPTION_COUNT	DShowPlugin/DShowPlugin.cpp	792;"	d	file:
DEV_HELP	lame/frontend/parse.c	82;"	d	file:
DEV_HELP	lame/frontend/parse.c	84;"	d	file:
DHComputeSharedSecretKey	librtmp/dh.h	/^DHComputeSharedSecretKey(MDH *dh, uint8_t *pubkey, size_t nPubkeyLen,$/;"	f
DHGenerateKey	librtmp/dh.h	/^DHGenerateKey(MDH *dh)$/;"	f
DHGetPublicKey	librtmp/dh.h	/^DHGetPublicKey(MDH *dh, uint8_t *pubkey, size_t nPubkeyLen)$/;"	f
DHInit	librtmp/dh.h	/^DHInit(int nKeyBits)$/;"	f
DIR	Source/mongoose.c	/^typedef struct DIR {$/;"	s	file:
DIR	Source/mongoose.c	/^} DIR;$/;"	t	file:
DIRECT3D_VERSION	GraphicsCapture/GraphicsCaptureHook/d3d8.h	14;"	d
DIRECT3D_VERSION	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	14;"	d
DIRECT3D_VERSION	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	14;"	d
DIRSEP	librtmp/hashswf.c	470;"	d	file:
DIRSEP	librtmp/hashswf.c	476;"	d	file:
DISPACTHER_LOG_FW_PATH	libmfx/include/mfx_dispatcher_log.h	103;"	d
DISPATCHER_EXPOSED_PREFIX	libmfx/include/mfx_dispatcher_defs.h	80;"	d
DISPATCHER_EXPOSED_PREFIX	libmfx/include/mfx_dispatcher_defs.h	82;"	d
DISPATCHER_LOG	libmfx/include/mfx_dispatcher_log.h	121;"	d
DISPATCHER_LOG	libmfx/include/mfx_dispatcher_log.h	130;"	d
DISPATCHER_LOG	libmfx/include/mfx_dispatcher_log.h	139;"	d
DISPATCHER_LOG	libmfx/include/mfx_dispatcher_log.h	293;"	d
DISPATCHER_LOG_AUTO	libmfx/include/mfx_dispatcher_log.h	148;"	d
DISPATCHER_LOG_AUTO	libmfx/include/mfx_dispatcher_log.h	294;"	d
DISPATCHER_LOG_BLOCK	libmfx/include/mfx_dispatcher_log.h	304;"	d
DISPATCHER_LOG_ERROR	libmfx/include/mfx_dispatcher_log.h	302;"	d
DISPATCHER_LOG_EVENT_GUID	libmfx/include/mfx_dispatcher_log.h	96;"	d
DISPATCHER_LOG_HEAP_SINGLETONES	libmfx/include/mfx_dispatcher_log.h	92;"	d
DISPATCHER_LOG_INFO	libmfx/include/mfx_dispatcher_log.h	300;"	d
DISPATCHER_LOG_LIBRARY	libmfx/include/mfx_dispatcher_log.h	303;"	d
DISPATCHER_LOG_OPERATION	libmfx/include/mfx_dispatcher_log.h	137;"	d
DISPATCHER_LOG_OPERATION	libmfx/include/mfx_dispatcher_log.h	140;"	d
DISPATCHER_LOG_OPERATION	libmfx/include/mfx_dispatcher_log.h	295;"	d
DISPATCHER_LOG_USE_FORMATING	libmfx/include/mfx_dispatcher_log.h	87;"	d
DISPATCHER_LOG_VA_ARGS	libmfx/include/mfx_dispatcher_log.h	127;"	d
DISPATCHER_LOG_WRN	libmfx/include/mfx_dispatcher_log.h	301;"	d
DISTFILES	lame/ACM/ADbg/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	lame/ACM/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	lame/ACM/ddk/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	lame/ACM/tinyxml/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	lame/Dll/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	lame/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	lame/debian/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	lame/doc/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	lame/doc/html/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	lame/doc/man/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	lame/dshow/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	lame/frontend/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	lame/include/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	lame/libmp3lame/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	lame/libmp3lame/i386/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	lame/libmp3lame/vector/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	lame/mac/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	lame/macosx/English.lproj/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	lame/macosx/LAME.xcodeproj/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	lame/macosx/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	lame/misc/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	lame/mpglib/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	lame/vc_solution/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DIST_ARCHIVES	lame/Makefile	/^DIST_ARCHIVES = $(distdir).tar.gz$/;"	m
DIST_COMMON	lame/ACM/ADbg/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(srcdir)\/Makefile.in \\$/;"	m
DIST_COMMON	lame/ACM/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(srcdir)\/Makefile.in \\$/;"	m
DIST_COMMON	lame/ACM/ddk/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(srcdir)\/Makefile.in \\$/;"	m
DIST_COMMON	lame/ACM/tinyxml/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(srcdir)\/Makefile.in \\$/;"	m
DIST_COMMON	lame/Dll/Makefile	/^DIST_COMMON = README $(srcdir)\/Makefile.am $(srcdir)\/Makefile.in \\$/;"	m
DIST_COMMON	lame/Makefile	/^DIST_COMMON = README $(am__configure_deps) $(srcdir)\/Makefile.am \\$/;"	m
DIST_COMMON	lame/debian/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(srcdir)\/Makefile.in \\$/;"	m
DIST_COMMON	lame/doc/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(srcdir)\/Makefile.in \\$/;"	m
DIST_COMMON	lame/doc/html/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(srcdir)\/Makefile.in$/;"	m
DIST_COMMON	lame/doc/man/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(srcdir)\/Makefile.in$/;"	m
DIST_COMMON	lame/dshow/Makefile	/^DIST_COMMON = README $(srcdir)\/Makefile.am $(srcdir)\/Makefile.in \\$/;"	m
DIST_COMMON	lame/frontend/Makefile	/^DIST_COMMON = $(noinst_HEADERS) $(srcdir)\/Makefile.am \\$/;"	m
DIST_COMMON	lame/include/Makefile	/^DIST_COMMON = $(pkginclude_HEADERS) $(srcdir)\/Makefile.am \\$/;"	m
DIST_COMMON	lame/libmp3lame/Makefile	/^DIST_COMMON = $(noinst_HEADERS) $(srcdir)\/Makefile.am \\$/;"	m
DIST_COMMON	lame/libmp3lame/i386/Makefile	/^DIST_COMMON = $(noinst_HEADERS) $(srcdir)\/Makefile.am \\$/;"	m
DIST_COMMON	lame/libmp3lame/vector/Makefile	/^DIST_COMMON = $(noinst_HEADERS) $(srcdir)\/Makefile.am \\$/;"	m
DIST_COMMON	lame/mac/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(srcdir)\/Makefile.in \\$/;"	m
DIST_COMMON	lame/macosx/English.lproj/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(srcdir)\/Makefile.in \\$/;"	m
DIST_COMMON	lame/macosx/LAME.xcodeproj/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(srcdir)\/Makefile.in \\$/;"	m
DIST_COMMON	lame/macosx/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(srcdir)\/Makefile.in \\$/;"	m
DIST_COMMON	lame/misc/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(srcdir)\/Makefile.in \\$/;"	m
DIST_COMMON	lame/mpglib/Makefile	/^DIST_COMMON = README $(noinst_HEADERS) $(srcdir)\/Makefile.am \\$/;"	m
DIST_COMMON	lame/vc_solution/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(srcdir)\/Makefile.in \\$/;"	m
DIST_SOURCES	lame/ACM/ADbg/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	lame/ACM/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	lame/ACM/ddk/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	lame/ACM/tinyxml/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	lame/Dll/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	lame/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	lame/debian/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	lame/doc/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	lame/doc/html/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	lame/doc/man/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	lame/dshow/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	lame/frontend/Makefile	/^DIST_SOURCES = $(lame_SOURCES) $(mp3rtp_SOURCES) $(mp3x_SOURCES)$/;"	m
DIST_SOURCES	lame/include/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	lame/libmp3lame/Makefile	/^DIST_SOURCES = $(libmp3lame_la_SOURCES)$/;"	m
DIST_SOURCES	lame/libmp3lame/i386/Makefile	/^DIST_SOURCES = $(am__liblameasmroutines_la_SOURCES_DIST) \\$/;"	m
DIST_SOURCES	lame/libmp3lame/vector/Makefile	/^DIST_SOURCES = $(am__liblamevectorroutines_la_SOURCES_DIST) \\$/;"	m
DIST_SOURCES	lame/mac/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	lame/macosx/English.lproj/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	lame/macosx/LAME.xcodeproj/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	lame/macosx/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	lame/misc/Makefile	/^DIST_SOURCES = $(abx_SOURCES) $(ath_SOURCES) $(scalartest_SOURCES)$/;"	m
DIST_SOURCES	lame/mpglib/Makefile	/^DIST_SOURCES = $(libmpgdecoder_la_SOURCES)$/;"	m
DIST_SOURCES	lame/vc_solution/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SUBDIRS	lame/ACM/Makefile	/^DIST_SUBDIRS = $(SUBDIRS)$/;"	m
DIST_SUBDIRS	lame/Makefile	/^DIST_SUBDIRS = $(SUBDIRS)$/;"	m
DIST_SUBDIRS	lame/doc/Makefile	/^DIST_SUBDIRS = $(SUBDIRS)$/;"	m
DIST_SUBDIRS	lame/libmp3lame/Makefile	/^DIST_SUBDIRS = $(SUBDIRS)$/;"	m
DIST_SUBDIRS	lame/macosx/Makefile	/^DIST_SUBDIRS = $(SUBDIRS)$/;"	m
DL_ERROR	libmfx/include/mfx_dispatcher_log.h	38;"	d
DL_EVENT_MSG	libmfx/include/mfx_dispatcher_log.h	/^    DL_EVENT_MSG$/;"	e
DL_EVENT_START	libmfx/include/mfx_dispatcher_log.h	/^    DL_EVENT_START  = 1,$/;"	e
DL_EVENT_STOP	libmfx/include/mfx_dispatcher_log.h	/^    DL_EVENT_STOP,$/;"	e
DL_INFO	libmfx/include/mfx_dispatcher_log.h	36;"	d
DL_LOADED_LIBRARY	libmfx/include/mfx_dispatcher_log.h	39;"	d
DL_SINK_IMsgHandler	libmfx/include/mfx_dispatcher_log.h	51;"	d
DL_SINK_NULL	libmfx/include/mfx_dispatcher_log.h	49;"	d
DL_SINK_PRINTF	libmfx/include/mfx_dispatcher_log.h	50;"	d
DL_WRN	libmfx/include/mfx_dispatcher_log.h	37;"	d
DMA_SAMPLES	lame/misc/abx.c	99;"	d	file:
DOCAPTUREPROC	GraphicsCapture/GraphicsCaptureHook/DXGICapture.cpp	/^typedef void (*DOCAPTUREPROC)(IDXGISwapChain*);$/;"	t	file:
DOCLEARPROC	GraphicsCapture/GraphicsCaptureHook/DXGICapture.cpp	/^typedef void (*DOCLEARPROC)();$/;"	t	file:
DOCUMENT	lame/ACM/tinyxml/tinyxml.h	/^		DOCUMENT, $/;"	e	enum:TiXmlNode::NodeType
DOCUMENT_ROOT	Source/mongoose.c	/^  DOCUMENT_ROOT,$/;"	e	file:
DOUBLEX	lame/libmp3lame/vbrquantize.c	85;"	d	file:
DOUBLEX	lame/libmp3lame/vbrquantize.c	87;"	d	file:
DSHOW_CLASSNAME	DShowPlugin/DShowPlugin.cpp	48;"	d	file:
DSSingleTone	libmfx/include/mfx_dispatcher_log.h	/^class DSSingleTone$/;"	c
DSYMUTIL	lame/ACM/ADbg/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	lame/ACM/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	lame/ACM/ddk/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	lame/ACM/tinyxml/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	lame/Dll/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	lame/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	lame/debian/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	lame/doc/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	lame/doc/html/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	lame/doc/man/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	lame/dshow/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	lame/frontend/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	lame/include/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	lame/libmp3lame/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	lame/libmp3lame/i386/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	lame/libmp3lame/vector/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	lame/mac/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	lame/macosx/English.lproj/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	lame/macosx/LAME.xcodeproj/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	lame/macosx/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	lame/misc/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	lame/mpglib/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	lame/vc_solution/Makefile	/^DSYMUTIL = $/;"	m
DShowPlugin.cpp	DShowPlugin/DShowPlugin.cpp	1;"	F
DShowPlugin.h	DShowPlugin/DShowPlugin.h	1;"	F
DSoundAudioSource	Source/DSoundAudioSource.cpp	/^    DSoundAudioSource()$/;"	f	class:DSoundAudioSource
DSoundAudioSource	Source/DSoundAudioSource.cpp	/^class DSoundAudioSource : public AudioSource$/;"	c	file:
DSoundAudioSource.cpp	Source/DSoundAudioSource.cpp	1;"	F
DTSGenerator	Source/Encoder_QSV.cpp	/^        DTSGenerator() : ver_1_6(false), bframes_pyramid(false), bframe_delay(0), use_bs_dts(false) {}$/;"	f	struct:<anonymous>::DTSGenerator
DTSGenerator	Source/Encoder_QSV.cpp	/^    struct DTSGenerator$/;"	s	file:
DUAL_CHANNEL	lame/include/lame.h	/^  DUAL_CHANNEL,   \/* LAME doesn't supports this! *\/$/;"	e	enum:MPEG_mode_e
DUMPBIN	lame/ACM/ADbg/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	lame/ACM/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	lame/ACM/ddk/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	lame/ACM/tinyxml/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	lame/Dll/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	lame/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	lame/debian/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	lame/doc/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	lame/doc/html/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	lame/doc/man/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	lame/dshow/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	lame/frontend/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	lame/include/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	lame/libmp3lame/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	lame/libmp3lame/i386/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	lame/libmp3lame/vector/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	lame/mac/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	lame/macosx/English.lproj/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	lame/macosx/LAME.xcodeproj/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	lame/macosx/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	lame/misc/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	lame/mpglib/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	lame/vc_solution/Makefile	/^DUMPBIN = $/;"	m
DWORD	OBSApi/Utility/Defs.h	/^typedef unsigned long       ULONG,DWORD,*LPDWORD;$/;"	t
DWORD	OBSApi/Utility/Defs.h	25;"	d
DWORD_BE	OBSApi/OBSApi.h	62;"	d
DWORD_PTR	lame/ACM/ddk/msacmdrv.h	/^typedef ULONG_PTR DWORD_PTR, *PDWORD_PTR;$/;"	t
DXDevice	libmfx/include/mfx_dxva2_device.h	/^class DXDevice$/;"	c	namespace:MFX
DXDevice	libmfx/src/mfx_dxva2_device.cpp	/^DXDevice::DXDevice(void)$/;"	f	class:DXDevice
DXGI1Device	libmfx/include/mfx_dxva2_device.h	/^class DXGI1Device : public DXDevice$/;"	c	namespace:MFX
DXGI1Device	libmfx/src/mfx_dxva2_device.cpp	/^DXGI1Device::DXGI1Device(void)$/;"	f	class:DXGI1Device
DXGICapture.cpp	GraphicsCapture/GraphicsCaptureHook/DXGICapture.cpp	1;"	F
DXGICreateFactoryFunc	libmfx/src/mfx_dxva2_device.cpp	/^HRESULT (WINAPI *DXGICreateFactoryFunc) (REFIID riid, void **ppFactory);$/;"	t	file:
DXGIStuff.h	GraphicsCapture/GraphicsCaptureHook/DXGIStuff.h	1;"	F
DXGISwapPresentHook	GraphicsCapture/GraphicsCaptureHook/DXGICapture.cpp	/^HRESULT STDMETHODCALLTYPE DXGISwapPresentHook(IDXGISwapChain *swap, UINT syncInterval, UINT flags)$/;"	f
DXGISwapPresentHookPROC	GraphicsCapture/GraphicsCaptureHook/DXGICapture.cpp	/^typedef HRESULT(STDMETHODCALLTYPE *DXGISwapPresentHookPROC)(IDXGISwapChain *swap, UINT syncInterval, UINT flags);$/;"	t	file:
DXGISwapResizeBuffersHook	GraphicsCapture/GraphicsCaptureHook/DXGICapture.cpp	/^HRESULT STDMETHODCALLTYPE DXGISwapResizeBuffersHook(IDXGISwapChain *swap, UINT bufferCount, UINT width, UINT height, DXGI_FORMAT giFormat, UINT flags)$/;"	f
DXGISwapResizeBuffersHookPROC	GraphicsCapture/GraphicsCaptureHook/DXGICapture.cpp	/^typedef HRESULT(STDMETHODCALLTYPE *DXGISwapResizeBuffersHookPROC)(IDXGISwapChain *swap, UINT bufferCount, UINT width, UINT height, DXGI_FORMAT giFormat, UINT flags);$/;"	t	file:
DXGI_ADAPTER_DESC2	extras/dxgi1_2.h	/^    } 	DXGI_ADAPTER_DESC2;$/;"	t
DXGI_ADAPTER_DESC2	extras/dxgi1_2.h	/^typedef struct DXGI_ADAPTER_DESC2$/;"	s
DXGI_ALPHA_MODE	extras/dxgi1_2.h	/^    } 	DXGI_ALPHA_MODE;$/;"	t
DXGI_ALPHA_MODE	extras/dxgi1_2.h	/^enum DXGI_ALPHA_MODE$/;"	g
DXGI_ALPHA_MODE_FORCE_DWORD	extras/dxgi1_2.h	/^        DXGI_ALPHA_MODE_FORCE_DWORD	= 0xffffffff$/;"	e	enum:DXGI_ALPHA_MODE
DXGI_ALPHA_MODE_IGNORE	extras/dxgi1_2.h	/^        DXGI_ALPHA_MODE_IGNORE	= 3,$/;"	e	enum:DXGI_ALPHA_MODE
DXGI_ALPHA_MODE_PREMULTIPLIED	extras/dxgi1_2.h	/^        DXGI_ALPHA_MODE_PREMULTIPLIED	= 1,$/;"	e	enum:DXGI_ALPHA_MODE
DXGI_ALPHA_MODE_STRAIGHT	extras/dxgi1_2.h	/^        DXGI_ALPHA_MODE_STRAIGHT	= 2,$/;"	e	enum:DXGI_ALPHA_MODE
DXGI_ALPHA_MODE_UNSPECIFIED	extras/dxgi1_2.h	/^        DXGI_ALPHA_MODE_UNSPECIFIED	= 0,$/;"	e	enum:DXGI_ALPHA_MODE
DXGI_COMPUTE_PREEMPTION_DISPATCH_BOUNDARY	extras/dxgi1_2.h	/^        DXGI_COMPUTE_PREEMPTION_DISPATCH_BOUNDARY	= 1,$/;"	e	enum:DXGI_COMPUTE_PREEMPTION_GRANULARITY
DXGI_COMPUTE_PREEMPTION_DMA_BUFFER_BOUNDARY	extras/dxgi1_2.h	/^        DXGI_COMPUTE_PREEMPTION_DMA_BUFFER_BOUNDARY	= 0,$/;"	e	enum:DXGI_COMPUTE_PREEMPTION_GRANULARITY
DXGI_COMPUTE_PREEMPTION_GRANULARITY	extras/dxgi1_2.h	/^    } 	DXGI_COMPUTE_PREEMPTION_GRANULARITY;$/;"	t
DXGI_COMPUTE_PREEMPTION_GRANULARITY	extras/dxgi1_2.h	/^enum DXGI_COMPUTE_PREEMPTION_GRANULARITY$/;"	g
DXGI_COMPUTE_PREEMPTION_INSTRUCTION_BOUNDARY	extras/dxgi1_2.h	/^        DXGI_COMPUTE_PREEMPTION_INSTRUCTION_BOUNDARY	= 4$/;"	e	enum:DXGI_COMPUTE_PREEMPTION_GRANULARITY
DXGI_COMPUTE_PREEMPTION_THREAD_BOUNDARY	extras/dxgi1_2.h	/^        DXGI_COMPUTE_PREEMPTION_THREAD_BOUNDARY	= 3,$/;"	e	enum:DXGI_COMPUTE_PREEMPTION_GRANULARITY
DXGI_COMPUTE_PREEMPTION_THREAD_GROUP_BOUNDARY	extras/dxgi1_2.h	/^        DXGI_COMPUTE_PREEMPTION_THREAD_GROUP_BOUNDARY	= 2,$/;"	e	enum:DXGI_COMPUTE_PREEMPTION_GRANULARITY
DXGI_ENUM_MODES_DISABLED_STEREO	extras/dxgi1_2.h	1163;"	d
DXGI_ENUM_MODES_STEREO	extras/dxgi1_2.h	1161;"	d
DXGI_ERROR_ACCESS_LOST	Source/D3D10OutputDuplicator.cpp	23;"	d	file:
DXGI_ERROR_WAIT_TIMEOUT	Source/D3D10OutputDuplicator.cpp	24;"	d	file:
DXGI_GRAPHICS_PREEMPTION_DMA_BUFFER_BOUNDARY	extras/dxgi1_2.h	/^        DXGI_GRAPHICS_PREEMPTION_DMA_BUFFER_BOUNDARY	= 0,$/;"	e	enum:DXGI_GRAPHICS_PREEMPTION_GRANULARITY
DXGI_GRAPHICS_PREEMPTION_GRANULARITY	extras/dxgi1_2.h	/^    } 	DXGI_GRAPHICS_PREEMPTION_GRANULARITY;$/;"	t
DXGI_GRAPHICS_PREEMPTION_GRANULARITY	extras/dxgi1_2.h	/^enum DXGI_GRAPHICS_PREEMPTION_GRANULARITY$/;"	g
DXGI_GRAPHICS_PREEMPTION_INSTRUCTION_BOUNDARY	extras/dxgi1_2.h	/^        DXGI_GRAPHICS_PREEMPTION_INSTRUCTION_BOUNDARY	= 4$/;"	e	enum:DXGI_GRAPHICS_PREEMPTION_GRANULARITY
DXGI_GRAPHICS_PREEMPTION_PIXEL_BOUNDARY	extras/dxgi1_2.h	/^        DXGI_GRAPHICS_PREEMPTION_PIXEL_BOUNDARY	= 3,$/;"	e	enum:DXGI_GRAPHICS_PREEMPTION_GRANULARITY
DXGI_GRAPHICS_PREEMPTION_PRIMITIVE_BOUNDARY	extras/dxgi1_2.h	/^        DXGI_GRAPHICS_PREEMPTION_PRIMITIVE_BOUNDARY	= 1,$/;"	e	enum:DXGI_GRAPHICS_PREEMPTION_GRANULARITY
DXGI_GRAPHICS_PREEMPTION_TRIANGLE_BOUNDARY	extras/dxgi1_2.h	/^        DXGI_GRAPHICS_PREEMPTION_TRIANGLE_BOUNDARY	= 2,$/;"	e	enum:DXGI_GRAPHICS_PREEMPTION_GRANULARITY
DXGI_MODE_DESC1	extras/dxgi1_2.h	/^    } 	DXGI_MODE_DESC1;$/;"	t
DXGI_MODE_DESC1	extras/dxgi1_2.h	/^typedef struct DXGI_MODE_DESC1$/;"	s
DXGI_OFFER_RESOURCE_PRIORITY	extras/dxgi1_2.h	/^    } 	DXGI_OFFER_RESOURCE_PRIORITY;$/;"	t
DXGI_OFFER_RESOURCE_PRIORITY_HIGH	extras/dxgi1_2.h	/^        DXGI_OFFER_RESOURCE_PRIORITY_HIGH	= ( DXGI_OFFER_RESOURCE_PRIORITY_NORMAL + 1 ) $/;"	e	enum:_DXGI_OFFER_RESOURCE_PRIORITY
DXGI_OFFER_RESOURCE_PRIORITY_LOW	extras/dxgi1_2.h	/^        DXGI_OFFER_RESOURCE_PRIORITY_LOW	= 1,$/;"	e	enum:_DXGI_OFFER_RESOURCE_PRIORITY
DXGI_OFFER_RESOURCE_PRIORITY_NORMAL	extras/dxgi1_2.h	/^        DXGI_OFFER_RESOURCE_PRIORITY_NORMAL	= ( DXGI_OFFER_RESOURCE_PRIORITY_LOW + 1 ) ,$/;"	e	enum:_DXGI_OFFER_RESOURCE_PRIORITY
DXGI_OUTDUPL_DESC	extras/dxgi1_2.h	/^    } 	DXGI_OUTDUPL_DESC;$/;"	t
DXGI_OUTDUPL_DESC	extras/dxgi1_2.h	/^typedef struct DXGI_OUTDUPL_DESC$/;"	s
DXGI_OUTDUPL_FRAME_INFO	extras/dxgi1_2.h	/^    } 	DXGI_OUTDUPL_FRAME_INFO;$/;"	t
DXGI_OUTDUPL_FRAME_INFO	extras/dxgi1_2.h	/^typedef struct DXGI_OUTDUPL_FRAME_INFO$/;"	s
DXGI_OUTDUPL_MOVE_RECT	extras/dxgi1_2.h	/^    } 	DXGI_OUTDUPL_MOVE_RECT;$/;"	t
DXGI_OUTDUPL_MOVE_RECT	extras/dxgi1_2.h	/^typedef struct DXGI_OUTDUPL_MOVE_RECT$/;"	s
DXGI_OUTDUPL_POINTER_POSITION	extras/dxgi1_2.h	/^    } 	DXGI_OUTDUPL_POINTER_POSITION;$/;"	t
DXGI_OUTDUPL_POINTER_POSITION	extras/dxgi1_2.h	/^typedef struct DXGI_OUTDUPL_POINTER_POSITION$/;"	s
DXGI_OUTDUPL_POINTER_SHAPE_INFO	extras/dxgi1_2.h	/^    } 	DXGI_OUTDUPL_POINTER_SHAPE_INFO;$/;"	t
DXGI_OUTDUPL_POINTER_SHAPE_INFO	extras/dxgi1_2.h	/^typedef struct DXGI_OUTDUPL_POINTER_SHAPE_INFO$/;"	s
DXGI_OUTDUPL_POINTER_SHAPE_TYPE	extras/dxgi1_2.h	/^    } 	DXGI_OUTDUPL_POINTER_SHAPE_TYPE;$/;"	t
DXGI_OUTDUPL_POINTER_SHAPE_TYPE	extras/dxgi1_2.h	/^enum DXGI_OUTDUPL_POINTER_SHAPE_TYPE$/;"	g
DXGI_OUTDUPL_POINTER_SHAPE_TYPE_COLOR	extras/dxgi1_2.h	/^        DXGI_OUTDUPL_POINTER_SHAPE_TYPE_COLOR	= 0x2,$/;"	e	enum:DXGI_OUTDUPL_POINTER_SHAPE_TYPE
DXGI_OUTDUPL_POINTER_SHAPE_TYPE_MASKED_COLOR	extras/dxgi1_2.h	/^        DXGI_OUTDUPL_POINTER_SHAPE_TYPE_MASKED_COLOR	= 0x4$/;"	e	enum:DXGI_OUTDUPL_POINTER_SHAPE_TYPE
DXGI_OUTDUPL_POINTER_SHAPE_TYPE_MONOCHROME	extras/dxgi1_2.h	/^        DXGI_OUTDUPL_POINTER_SHAPE_TYPE_MONOCHROME	= 0x1,$/;"	e	enum:DXGI_OUTDUPL_POINTER_SHAPE_TYPE
DXGI_PRESENT_PARAMETERS	extras/dxgi1_2.h	/^    } 	DXGI_PRESENT_PARAMETERS;$/;"	t
DXGI_PRESENT_PARAMETERS	extras/dxgi1_2.h	/^typedef struct DXGI_PRESENT_PARAMETERS$/;"	s
DXGI_SCALING	extras/dxgi1_2.h	/^    } 	DXGI_SCALING;$/;"	t
DXGI_SCALING	extras/dxgi1_2.h	/^enum DXGI_SCALING$/;"	g
DXGI_SCALING_NONE	extras/dxgi1_2.h	/^        DXGI_SCALING_NONE	= 1$/;"	e	enum:DXGI_SCALING
DXGI_SCALING_STRETCH	extras/dxgi1_2.h	/^        DXGI_SCALING_STRETCH	= 0,$/;"	e	enum:DXGI_SCALING
DXGI_SHARED_RESOURCE_READ	extras/dxgi1_2.h	1165;"	d
DXGI_SHARED_RESOURCE_WRITE	extras/dxgi1_2.h	1167;"	d
DXGI_SWAP_CHAIN_DESC1	extras/dxgi1_2.h	/^    } 	DXGI_SWAP_CHAIN_DESC1;$/;"	t
DXGI_SWAP_CHAIN_DESC1	extras/dxgi1_2.h	/^typedef struct DXGI_SWAP_CHAIN_DESC1$/;"	s
DXGI_SWAP_CHAIN_FULLSCREEN_DESC	extras/dxgi1_2.h	/^    } 	DXGI_SWAP_CHAIN_FULLSCREEN_DESC;$/;"	t
DXGI_SWAP_CHAIN_FULLSCREEN_DESC	extras/dxgi1_2.h	/^typedef struct DXGI_SWAP_CHAIN_FULLSCREEN_DESC$/;"	s
DXVA2DEVICE_TRACE	libmfx/include/mfx_dxva2_device.h	42;"	d
DXVA2DEVICE_TRACE	libmfx/include/mfx_dxva2_device.h	45;"	d
DXVA2DEVICE_TRACE_OPERATION	libmfx/include/mfx_dxva2_device.h	43;"	d
DXVA2DEVICE_TRACE_OPERATION	libmfx/include/mfx_dxva2_device.h	46;"	d
DXVA2Device	libmfx/include/mfx_dxva2_device.h	/^class DXVA2Device$/;"	c	namespace:MFX
DXVA2Device	libmfx/src/mfx_dxva2_device.cpp	/^DXVA2Device::DXVA2Device(void)$/;"	f	class:DXVA2Device
Data	OBSApi/Utility/Template.h	/^    List<UINT> Data;$/;"	m	class:BitList
Data	libmfx/include/msdk/include/mfxastructures.h	/^    mfxU8*  Data;$/;"	m
Data	libmfx/include/msdk/include/mfxcommon.h	/^    mfxU8*  Data;$/;"	m
Data	libmfx/include/msdk/include/mfxplugin.h	/^    mfxU8  Data[16];$/;"	m
Data	libmfx/include/msdk/include/mfxstructures.h	/^    mfxFrameData    Data;$/;"	m
Data	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU8       *Data;      \/* buffer pointer *\/$/;"	m
Data1	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t Data1;$/;"	m
Data2	ObsNvenc/inc/nvEncodeAPI.h	/^    uint16_t Data2;$/;"	m
Data3	ObsNvenc/inc/nvEncodeAPI.h	/^    uint16_t Data3;$/;"	m
Data4	ObsNvenc/inc/nvEncodeAPI.h	/^    uint8_t  Data4[8];$/;"	m
DataFlag	libmfx/include/msdk/include/mfxcommon.h	/^    mfxU16  DataFlag;$/;"	m
DataFlag	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16  DataFlag;$/;"	m
DataLength	OBSApi/Utility/XString.h	/^    inline UINT    DataLength() const           {return curLength ? ssize(lpString) : 0;}$/;"	f	class:String
DataLength	libmfx/include/msdk/include/mfxastructures.h	/^    mfxU32  DataLength;$/;"	m
DataLength	libmfx/include/msdk/include/mfxcommon.h	/^    mfxU32  DataLength;$/;"	m
DataOffset	libmfx/include/msdk/include/mfxcommon.h	/^    mfxU32  DataOffset;$/;"	m
DataPacket	Source/OBS.h	/^struct DataPacket$/;"	s
DataPacketHelpers.h	Source/DataPacketHelpers.h	1;"	F
DataPending	OBSApi/Utility/Serializer.h	/^    virtual BOOL DataPending() {return FALSE;}$/;"	f	class:Serializer
DataPending	OBSApi/Utility/Template.h	/^    BOOL DataPending()$/;"	f	class:BufferInputSerializer
DataPending	OBSApi/Utility/XFile.h	/^    BOOL DataPending()$/;"	f	class:XFileInputSerializer
Databases	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public CefState Databases { get; set; }$/;"	p	class:Shared.BrowserInstanceSettings
DebugAlloc	OBSApi/Utility/DebugAlloc.cpp	/^DebugAlloc::DebugAlloc()$/;"	f	class:DebugAlloc
DebugAlloc	OBSApi/Utility/DebugAlloc.h	/^class BASE_EXPORT DebugAlloc : public FastAlloc$/;"	c
DebugAlloc.cpp	OBSApi/Utility/DebugAlloc.cpp	1;"	F
DebugAlloc.h	OBSApi/Utility/DebugAlloc.h	1;"	F
DebugPrintf	lame/Dll/BladeMP3EncDLL.c	/^static void DebugPrintf(const char* pzFormat, ...)$/;"	f	file:
DecideBufferSize	lame/dshow/Mpegac.cpp	/^HRESULT CMpegAudEnc::DecideBufferSize($/;"	f	class:CMpegAudEnc
DecodeFrameAsync	libmfx/include/msdk/include/mfxaudio++.h	/^    virtual mfxStatus DecodeFrameAsync(mfxBitstream *bs, mfxAudioFrame *frame, mfxSyncPoint *syncp) { return MFXAudioDECODE_DecodeFrameAsync(m_session, bs, frame, syncp); }$/;"	f	class:MFXAudioDECODE
DecodeFrameAsync	libmfx/include/msdk/include/mfxvideo++.h	/^    virtual mfxStatus DecodeFrameAsync(mfxBitstream *bs, mfxFrameSurface1 *surface_work, mfxFrameSurface1 **surface_out, mfxSyncPoint *syncp) { return MFXVideoDECODE_DecodeFrameAsync(m_session, bs, surface_work, surface_out, syncp); }$/;"	f	class:MFXVideoDECODE
DecodeFrameSubmit	libmfx/include/msdk/include/mfxplugin.h	/^    mfxStatus (MFX_CDECL *DecodeFrameSubmit)(mfxHDL pthis, mfxBitstream *bs, mfxFrameSurface1 *surface_work, mfxFrameSurface1 **surface_out,  mfxThreadTask *task);$/;"	m	struct:mfxVideoCodecPlugin
DecodeHeader	libmfx/include/msdk/include/mfxaudio++.h	/^    virtual mfxStatus DecodeHeader(mfxBitstream *bs, mfxAudioParam *par) { return MFXAudioDECODE_DecodeHeader(m_session, bs, par); }$/;"	f	class:MFXAudioDECODE
DecodeHeader	libmfx/include/msdk/include/mfxplugin.h	/^    mfxStatus (MFX_CDECL *DecodeHeader)(mfxHDL pthis, mfxBitstream *bs, mfxVideoParam *par);$/;"	m	struct:mfxVideoCodecPlugin
DecodeHeader	libmfx/include/msdk/include/mfxvideo++.h	/^    virtual mfxStatus DecodeHeader(mfxBitstream *bs, mfxVideoParam *par) { return MFXVideoDECODE_DecodeHeader(m_session, bs, par); }$/;"	f	class:MFXVideoDECODE
DecodeInt32LE	librtmp/rtmp.c	/^DecodeInt32LE(const char *data)$/;"	f	file:
DecodeStream	lame/ACM/DecodeStream.cpp	/^DecodeStream::DecodeStream() :$/;"	f	class:DecodeStream
DecodeStream	lame/ACM/DecodeStream.h	/^class DecodeStream$/;"	c
DecodeStream.cpp	lame/ACM/DecodeStream.cpp	1;"	F
DecodeStream.h	lame/ACM/DecodeStream.h	1;"	F
DecodeTEA	librtmp/rtmp.c	/^DecodeTEA(AVal *key, AVal *text)$/;"	f	file:
DecodeTimeStamp	libmfx/include/msdk/include/mfxcommon.h	/^    mfxI64  DecodeTimeStamp; $/;"	m
DecodedOrder	libmfx/include/msdk/include/mfxstructures.h	/^            mfxU16  DecodedOrder;$/;"	m
DecoderConfig	lame/frontend/main.h	/^typedef struct DecoderConfig$/;"	s
DecoderConfig	lame/frontend/main.h	/^} DecoderConfig;$/;"	t
DecoderProgress	lame/frontend/timestatus.c	/^static struct DecoderProgress {$/;"	s	file:
DecoderProgress	lame/frontend/timestatus.h	/^typedef struct DecoderProgress* DecoderProgress;$/;"	t
DecreaseReference	libmfx/include/msdk/include/mfxplugin++.h	/^    mfxStatus DecreaseReference (mfxFrameData *fd) {$/;"	f	class:MFXCoreInterface
DecreaseReference	libmfx/include/msdk/include/mfxplugin.h	/^    mfxStatus (MFX_CDECL *DecreaseReference) (mfxHDL pthis, mfxFrameData *fd);$/;"	m	struct:mfxCoreInterface
DedicatedSystemMemory	extras/dxgi1_2.h	/^    SIZE_T DedicatedSystemMemory;$/;"	m	struct:DXGI_ADAPTER_DESC2
DedicatedVideoMemory	extras/dxgi1_2.h	/^    SIZE_T DedicatedVideoMemory;$/;"	m	struct:DXGI_ADAPTER_DESC2
DeepClone	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public static T DeepClone<T>(T obj)$/;"	m	class:Shared.AbstractSettings
Default	libmfx/include/mfx_plugin_hive.h	/^        bool Default;$/;"	m	class:MFX::PluginDescriptionRecord
DefaultAlloc	OBSApi/Utility/DebugAlloc.h	/^class BASE_EXPORT DefaultAlloc : public Alloc$/;"	c
DefaultAudioEncoderProperties	lame/dshow/Mpegac.cpp	/^STDMETHODIMP CMpegAudEnc::DefaultAudioEncoderProperties()$/;"	f	class:CMpegAudEnc
DefaultEncoding	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public string DefaultEncoding { get; set; }$/;"	p	class:Shared.BrowserInstanceSettings
DefaultFixedFontSize	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public int DefaultFixedFontSize { get; set; }$/;"	p	class:Shared.BrowserInstanceSettings
DefaultFontSize	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public int DefaultFontSize { get; set; }$/;"	p	class:Shared.BrowserInstanceSettings
DefaultKeyName	libmfx/src/mfx_plugin_hive.cpp	/^    const wchar_t DefaultKeyName[] = L"Default";$/;"	v
DefinitelyFloatString	OBSApi/Utility/XString.cpp	/^BOOL DefinitelyFloatString(CTSTR lpStr)$/;"	f
Defs.h	OBSApi/Utility/Defs.h	1;"	F
DeinterlacerConfig	DShowPlugin/DShowPlugin.h	/^struct DeinterlacerConfig {$/;"	s
DeinterlacingFieldOrder	DShowPlugin/DShowPlugin.h	/^enum DeinterlacingFieldOrder {$/;"	g
DeinterlacingProcessor	DShowPlugin/DShowPlugin.h	/^enum DeinterlacingProcessor {$/;"	g
DeinterlacingType	DShowPlugin/DShowPlugin.h	/^enum DeinterlacingType {$/;"	g
DelayedPublisher	Source/DelayedPublisher.cpp	/^    inline DelayedPublisher(DWORD delayTime) : RTMPPublisher()$/;"	f	class:DelayedPublisher
DelayedPublisher	Source/DelayedPublisher.cpp	/^class DelayedPublisher : public RTMPPublisher$/;"	c	file:
DelayedPublisher.cpp	Source/DelayedPublisher.cpp	1;"	F
DeleteConfig	lame/ACM/AEncodeProperties.cpp	/^bool AEncodeProperties::DeleteConfig(const std::string & config_name)$/;"	f	class:AEncodeProperties
DeleteHotkey	Source/API.cpp	/^void OBSAPIInterface::DeleteHotkey(UINT hotkeyID)$/;"	f	class:OBSAPIInterface
DeleteItems	Source/WindowStuff.cpp	/^void OBS::DeleteItems()$/;"	f	class:OBS
DeleteMediaType	DShowPlugin/MediaInfoStuff.h	/^inline void DeleteMediaType(AM_MEDIA_TYPE *pmt)$/;"	f
DenoiseFactor	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16  DenoiseFactor;$/;"	m
DependencyId	libmfx/include/msdk/include/mfxstructures.h	/^            mfxU16  DependencyId;$/;"	m
Depth	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    UINT                Depth;$/;"	m	struct:_D3DVOLUME_DESC
DesaturateColor	OBSApi/Utility/XMath.h	/^    inline Vect4& DesaturateColor()$/;"	f	struct:Vect4
Description	CLRBrowserSourcePlugin/Plugin/Shared/BrowserPlugin.cs	/^        public String Description { get; private set; }$/;"	p	class:Shared.BrowserPlugin
Description	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    char            Description[MAX_DEVICE_IDENTIFIER_STRING];$/;"	m	struct:_D3DADAPTER_IDENTIFIER8
Description	extras/dxgi1_2.h	/^    WCHAR Description[ 128 ];$/;"	m	struct:DXGI_ADAPTER_DESC2
DeselectAll	OBSApi/Scene.h	/^    inline void DeselectAll()$/;"	f	class:Scene
DesktopImageInSystemMemory	extras/dxgi1_2.h	/^    BOOL DesktopImageInSystemMemory;$/;"	m	struct:DXGI_OUTDUPL_DESC
DesktopImageSource	Source/DesktopImageSource.cpp	/^    DesktopImageSource(UINT frameTime, XElement *data)$/;"	f	class:DesktopImageSource
DesktopImageSource	Source/DesktopImageSource.cpp	/^class DesktopImageSource : public ImageSource$/;"	c	file:
DesktopImageSource.cpp	Source/DesktopImageSource.cpp	1;"	F
DestBlendCaps	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	/^    DWORD   DestBlendCaps;$/;"	m	struct:_D3DCAPS8
DestinationRect	extras/dxgi1_2.h	/^    RECT DestinationRect;$/;"	m	struct:DXGI_OUTDUPL_MOVE_RECT
Destroy	GraphicsCapture/MemoryCapture.cpp	/^void MemoryCapture::Destroy()$/;"	f	class:MemoryCapture
Destroy	GraphicsCapture/SharedTexCapture.cpp	/^void SharedTexCapture::Destroy()$/;"	f	class:SharedTexCapture
Destroy	GraphicsCapture/WindowCapture.cpp	/^void WindowCapture::Destroy()$/;"	f	class:WindowCapture
Destroy	libmfx/src/mfx_load_plugin.cpp	/^bool MFX::MFXPluginFactory::Destroy( const mfxPluginUID & uidToDestroy) $/;"	f	class:MFX::MFXPluginFactory
DestroyPane	CLRHostPlugin/CLRHostInterop/AbstractWPFSettingsPane.cpp	/^void AbstractWPFSettingsPane::DestroyPane()$/;"	f	class:AbstractWPFSettingsPane
DestroyPane	CLRHostPlugin/CLRHostPlugin/CLRSettingsPane.cpp	/^void CLRSettingsPane::DestroyPane()$/;"	f	class:CLRSettingsPane
DestroyPane	CLRHostPlugin/CLRHostPlugin/SettingsPaneBridge.h	/^    virtual void DestroyPane() $/;"	f	class:SettingsPaneBridge
DestroyPane	NoiseGate/NoiseGate.cpp	/^void NoiseGateSettings::DestroyPane()$/;"	f	class:NoiseGateSettings
DestroyPane	Source/SettingsAdvanced.cpp	/^void SettingsAdvanced::DestroyPane()$/;"	f	class:SettingsAdvanced
DestroyPane	Source/SettingsAudio.cpp	/^void SettingsAudio::DestroyPane()$/;"	f	class:SettingsAudio
DestroyPane	Source/SettingsEncoding.cpp	/^void SettingsEncoding::DestroyPane()$/;"	f	class:SettingsEncoding
DestroyPane	Source/SettingsGeneral.cpp	/^void SettingsGeneral::DestroyPane()$/;"	f	class:SettingsGeneral
DestroyPane	Source/SettingsHotkeys.cpp	/^void SettingsHotkeys::DestroyPane()$/;"	f	class:SettingsHotkeys
DestroyPane	Source/SettingsPublish.cpp	/^void SettingsPublish::DestroyPane()$/;"	f	class:SettingsPublish
DestroyPane	Source/SettingsQSV.cpp	/^void SettingsQSV::DestroyPane()$/;"	f	class:SettingsQSV
DestroyPane	Source/SettingsVideo.cpp	/^void SettingsVideo::DestroyPane()$/;"	f	class:SettingsVideo
DestroyPane	scenesw/SceneSwitcherSettings.cpp	/^void SceneSwitcherSettings::DestroyPane()$/;"	f	class:SceneSwitcherSettings
DestroyPlugin	libmfx/src/mfx_load_plugin.cpp	/^void MFX::MFXPluginFactory::DestroyPlugin( FactoryRecord & record)$/;"	f	class:MFX::MFXPluginFactory
DestroySharedMemory	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	/^void DestroySharedMemory()$/;"	f
DestroyTexture	CLRBrowserSourcePlugin/Plugin/BrowserSource.cs	/^        public void DestroyTexture(IntPtr textureHandle)$/;"	m	class:CLRBrowserSourcePlugin.BrowserSource
DestroyTextureEvent	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserRenderHandler.cs	/^        public DestroyTextureEventHandler DestroyTextureEvent { private get; set; }$/;"	p	class:Browser.BrowserRenderHandler
DestroyTextureEventHandler	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserRenderHandler.cs	/^    public delegate void DestroyTextureEventHandler(IntPtr textureHandle);$/;"	m	namespace:Browser
Detach	CLRHostPlugin/CLRHostPlugin/CLRImageSource.cpp	/^void CLRImageSource::Detach()$/;"	f	class:CLRImageSource
Detach	CLRHostPlugin/CLRHostPlugin/CLRImageSourceFactory.cpp	/^void CLRImageSourceFactory::Detach()$/;"	f	class:CLRImageSourceFactory
Detach	CLRHostPlugin/CLRHostPlugin/CLRObject.cpp	/^void CLRObject::Detach()$/;"	f	class:CLRObject
Detach	CLRHostPlugin/CLRHostPlugin/CLRPlugin.cpp	/^void CLRPlugin::Detach()$/;"	f	class:CLRPlugin
Detach	CLRHostPlugin/CLRHostPlugin/CLRSettingsPane.cpp	/^void CLRSettingsPane::Detach()$/;"	f	class:CLRSettingsPane
Detach	CLRHostPlugin/CLRHostPlugin/CLRVector2.cpp	/^void CLRVector2::Detach()$/;"	f	class:CLRVector2
Detach	OBSApi/Utility/ComPtr.hpp	/^    inline T *Detach()$/;"	f	class:ComPtr
DetachAllSinks	libmfx/src/mfx_dispatcher_log.cpp	/^void   DispatchLog::DetachAllSinks()$/;"	f	class:DispatchLog
DetachSink	libmfx/src/mfx_dispatcher_log.cpp	/^void   DispatchLog::DetachSink(int nsink, IMsgHandler *pHandler)$/;"	f	class:DispatchLog
DetailFactor	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16  DetailFactor;$/;"	m
DevCaps	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	/^    DWORD   DevCaps;$/;"	m	struct:_D3DCAPS8
DeviceAudio.cpp	DShowPlugin/DeviceAudio.cpp	1;"	F
DeviceAudioSource	DShowPlugin/DeviceSource.h	/^class DeviceAudioSource : public AudioSource$/;"	c
DeviceColorType	DShowPlugin/DeviceSource.h	/^enum DeviceColorType$/;"	g
DeviceId	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    DWORD           DeviceId;$/;"	m	struct:_D3DADAPTER_IDENTIFIER8
DeviceId	extras/dxgi1_2.h	/^    UINT DeviceId;$/;"	m	struct:DXGI_ADAPTER_DESC2
DeviceIdentifier	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    GUID            DeviceIdentifier;$/;"	m	struct:_D3DADAPTER_IDENTIFIER8
DeviceOutputData	Source/OBS.h	/^struct DeviceOutputData$/;"	s
DeviceOutputType_HDYC	DShowPlugin/DeviceSource.h	/^    DeviceOutputType_HDYC,$/;"	e	enum:DeviceColorType
DeviceOutputType_I420	DShowPlugin/DeviceSource.h	/^    DeviceOutputType_I420,$/;"	e	enum:DeviceColorType
DeviceOutputType_RGB	DShowPlugin/DeviceSource.h	/^    DeviceOutputType_RGB,$/;"	e	enum:DeviceColorType
DeviceOutputType_UYVY	DShowPlugin/DeviceSource.h	/^    DeviceOutputType_UYVY,$/;"	e	enum:DeviceColorType
DeviceOutputType_YUY2	DShowPlugin/DeviceSource.h	/^    DeviceOutputType_YUY2,$/;"	e	enum:DeviceColorType
DeviceOutputType_YV12	DShowPlugin/DeviceSource.h	/^    DeviceOutputType_YV12,$/;"	e	enum:DeviceColorType
DeviceOutputType_YVYU	DShowPlugin/DeviceSource.h	/^    DeviceOutputType_YVYU,$/;"	e	enum:DeviceColorType
DeviceOutputs	Source/OBS.h	/^struct DeviceOutputs$/;"	s
DeviceSource	DShowPlugin/DeviceSource.h	/^class DeviceSource : public ImageSource$/;"	c
DeviceSource.cpp	DShowPlugin/DeviceSource.cpp	1;"	F
DeviceSource.h	DShowPlugin/DeviceSource.h	1;"	F
DeviceType	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	/^    D3DDEVTYPE  DeviceType;$/;"	m	struct:_D3DCAPS8
DeviceType	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DDEVTYPE      DeviceType;$/;"	m	struct:_D3DDEVICE_CREATION_PARAMETERS
Dh	lame/libmp3lame/i386/nasm.h	/^	times (1 & ge15(($$-%%here) & 15) & ~ge16(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Dh,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h$/;"	v
Dh	lame/libmp3lame/i386/nasm.h	/^	times (1 & ge3(($$-%%here) & 15)  & ~ge4(($$-%%here) & 15)  & ~ge%1(($$-%%here) & 15)) DB 08Dh,004h,020h$/;"	v
Dh	lame/libmp3lame/i386/nasm.h	/^	times (1 & ge4(($$-%%here) & 15)  & ~ge5(($$-%%here) & 15)  & ~ge%1(($$-%%here) & 15)) DB 08Dh,044h,020h,000h$/;"	v
Dh	lame/libmp3lame/i386/nasm.h	/^	times (1 & ge5(($$-%%here) & 15)  & ~ge6(($$-%%here) & 15)  & ~ge%1(($$-%%here) & 15)) DB 08Dh,044h,020h,000h,090h$/;"	v
Dh	lame/libmp3lame/i386/nasm.h	/^	times (1 & ge6(($$-%%here) & 15)  & ~ge7(($$-%%here) & 15)  & ~ge%1(($$-%%here) & 15)) DB 08Dh,080h,0,0,0,0$/;"	v
Dh	lame/libmp3lame/i386/nasm.h	/^	times (1 & ge7(($$-%%here) & 15)  & ~ge8(($$-%%here) & 15)  & ~ge%1(($$-%%here) & 15)) DB 08Dh,004h,005h,0,0,0,0$/;"	v
Dh	lame/libmp3lame/i386/nasm.h	/^	times (1 & ge8(($$-%%here) & 15)  & ~ge9(($$-%%here) & 15)  & ~ge%1(($$-%%here) & 15)) DB 08Dh,004h,005h,0,0,0,0,90h$/;"	v
DialogProc	OBSApi/SettingsPane.cpp	/^INT_PTR CALLBACK SettingsPane::DialogProc(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam)$/;"	f	class:SettingsPane
Diffuse	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DCOLORVALUE   Diffuse;         \/* Diffuse color of light *\/$/;"	m	struct:_D3DLIGHT8
Diffuse	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DCOLORVALUE   Diffuse;        \/* Diffuse color RGBA *\/$/;"	m	struct:_D3DMATERIAL8
Dir	OBSApi/Utility/XMath.h	/^    Vect  Dir;$/;"	m	struct:Plane
Direction	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DVECTOR       Direction;        \/* Direction in world space *\/$/;"	m	struct:_D3DLIGHT8
DirtyRectsCount	extras/dxgi1_2.h	/^    UINT DirtyRectsCount;$/;"	m	struct:DXGI_PRESENT_PARAMETERS
DisableAllHooksLL	minhook/src/hook.cpp	/^	MH_STATUS DisableAllHooksLL()$/;"	f	namespace:MinHook::<anonymous>
DisableDeblockingIdc	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16      DisableDeblockingIdc;$/;"	m
DisableHook	minhook/src/hook.cpp	/^	MH_STATUS DisableHook(void* pTarget)$/;"	f	namespace:MinHook
DisableHookLL	minhook/src/hook.cpp	/^	MH_STATUS DisableHookLL(HOOK_ENTRY *pHook)$/;"	f	namespace:MinHook::<anonymous>
DisableMenusWhileStreaming	Source/WindowStuff.cpp	/^void OBS::DisableMenusWhileStreaming(bool disable)$/;"	f	class:OBS
DisableProjector	Source/OBS.cpp	/^void OBS::DisableProjector()$/;"	f	class:OBS
DisableTransitions	Source/API.cpp	/^    virtual void DisableTransitions()          { App->performTransition = false; }$/;"	f	class:OBSAPIInterface
DisableWebcam	Source/OBS.cpp	/^void OBS::DisableWebcam()$/;"	f	class:OBS
DisabledPlugins	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public List<String> DisabledPlugins;$/;"	f	class:Shared.BrowserPluginSettings
Disconnect	DShowPlugin/CaptureFilter.cpp	/^STDMETHODIMP CapturePin::Disconnect()$/;"	f	class:CapturePin
DiscontinuityFlag	libmfx/include/msdk/include/mfxstructures.h	/^      mfxU16    DiscontinuityFlag;$/;"	m
DisjoinSession	libmfx/include/msdk/include/mfxaudio++.h	/^    virtual mfxStatus DisjoinSession( ) { return MFXDisjoinSession(m_session);}$/;"	f	class:MFXAudioSession
DisjoinSession	libmfx/include/msdk/include/mfxvideo++.h	/^    virtual mfxStatus DisjoinSession( ) { return MFXDisjoinSession(m_session);}$/;"	f	class:MFXVideoSession
DispErr	lame/Dll/BladeMP3EncDLL.c	/^static void DispErr(char const* strErr)$/;"	f	file:
DispatchLog	libmfx/include/mfx_dispatcher_log.h	/^class DispatchLog $/;"	c
DispatchLog	libmfx/src/mfx_dispatcher_log.cpp	/^DispatchLog::DispatchLog()$/;"	f	class:DispatchLog
DispatchLogBlockHelper	libmfx/include/mfx_dispatcher_log.h	/^    DispatchLogBlockHelper (int level)$/;"	f	struct:DispatchLogBlockHelper
DispatchLogBlockHelper	libmfx/include/mfx_dispatcher_log.h	/^struct DispatchLogBlockHelper$/;"	s
DispatcherLogBracketsHelper	libmfx/include/mfx_dispatcher_log.h	/^    DispatcherLogBracketsHelper(int level, int opcode)$/;"	f	struct:DispatcherLogBracketsHelper
DispatcherLogBracketsHelper	libmfx/include/mfx_dispatcher_log.h	/^struct  DispatcherLogBracketsHelper$/;"	s
DispatcherLog_GetMFXImplString	libmfx/src/mfx_dispatcher_log.cpp	/^std::string DispatcherLog_GetMFXImplString(int impl)$/;"	f
DispatcherLog_GetMFXStatusString	libmfx/src/mfx_dispatcher_log.cpp	/^const char *DispatcherLog_GetMFXStatusString(int sts)$/;"	f
DisplayHandler	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserClient.cs	/^        public BrowserDisplayHandler DisplayHandler { get; set; }$/;"	p	class:Browser.BrowserClient
Dispose	CLRBrowserSourcePlugin/Plugin/BrowserSource.cs	/^        protected virtual void Dispose(bool disposing)$/;"	m	class:CLRBrowserSourcePlugin.BrowserSource
Dispose	CLRBrowserSourcePlugin/Plugin/BrowserSource.cs	/^        public void Dispose()$/;"	m	class:CLRBrowserSourcePlugin.BrowserSource
Dispose	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserPluginVisitor.cs	/^        protected override void Dispose(bool disposing)$/;"	m	class:RemoteBrowser.BrowserPluginVisitor
Dispose	CLRHostPlugin/CLRCSharpSamplePlugin/SampleImageSource.cs	/^        public void Dispose()$/;"	m	class:CSharpSamplePlugin.SampleImageSource
Dist	OBSApi/Utility/XMath.h	/^    float Dist;$/;"	m	struct:Plane
Dist	OBSApi/Utility/XMath.h	/^    inline float Dist(const Quat &q) const$/;"	f	struct:Quat
Dist	OBSApi/Utility/XMath.h	/^    inline float Dist(const Quat &v) const$/;"	f	struct:Quat
Dist	OBSApi/Utility/XMath.h	/^    inline float Dist(const Vect &v) const$/;"	f	struct:Vect
Dist	OBSApi/Utility/XMath.h	/^    inline float Dist(const Vect2 &v) const$/;"	f	struct:Vect2
DistFromPlane	OBSApi/Utility/XMath.cpp	/^float Vect::DistFromPlane(const Plane& p) const$/;"	f	class:Vect
DllMain	CLRHostPlugin/CLRHostPlugin/CLRHostPlugin.cpp	/^BOOL CALLBACK DllMain(HINSTANCE hinstDLL, DWORD fdwReason, LPVOID lpvReserved)$/;"	f
DllMain	DShowPlugin/DShowPlugin.cpp	/^BOOL CALLBACK DllMain(HINSTANCE hInst, DWORD dwReason, LPVOID lpBla)$/;"	f
DllMain	GraphicsCapture/GraphicsCapture.cpp	/^BOOL CALLBACK DllMain(HINSTANCE hInst, DWORD dwReason, LPVOID lpBla)$/;"	f
DllMain	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	/^BOOL WINAPI DllMain(HINSTANCE hinstDLL, DWORD dwReason, LPVOID lpBlah)$/;"	f
DllMain	NoiseGate/NoiseGate.cpp	/^BOOL CALLBACK DllMain(HINSTANCE hinstDLL, DWORD fdwReason, LPVOID lpvReserved)$/;"	f
DllMain	OBSApi/OBSApi.cpp	/^BOOL CALLBACK DllMain(HINSTANCE hinstDLL, DWORD fdwReason, LPVOID lpvReserved)$/;"	f
DllMain	ObsNvenc/src/nvmain.cpp	/^BOOL CALLBACK DllMain(HINSTANCE hinstDLL, DWORD fdwReason, LPVOID lpvReserved)$/;"	f
DllMain	PSVPlugin/psvplugin.cpp	/^BOOL CALLBACK DllMain(HINSTANCE hinstDLL, DWORD fdwReason, LPVOID lpvReserved)$/;"	f
DllMain	lame/Dll/BladeMP3EncDLL.c	/^BOOL APIENTRY DllMain(HANDLE hModule, $/;"	f
DllMain	minhook/dll_resources/dllmain.cpp	/^BOOL APIENTRY DllMain(HMODULE hModule, DWORD ul_reason_for_call, LPVOID lpReserved)$/;"	f
DllMain	scenesw/scenesw.cpp	/^BOOL CALLBACK DllMain(HINSTANCE hInst, DWORD dwReason, LPVOID lpBla)$/;"	f
DllRegisterServer	lame/dshow/Mpegac.cpp	/^STDAPI DllRegisterServer(void)$/;"	f
DllUnregisterServer	lame/dshow/Mpegac.cpp	/^STDAPI DllUnregisterServer()$/;"	f
DoCancelStuff	Source/TextOutputSource.cpp	/^void DoCancelStuff(HWND hwnd)$/;"	f
DoClose	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserLifeSpanHandler.cs	/^        protected override bool DoClose(CefBrowser browser)$/;"	m	class:Browser.BrowserLifeSpanHandler
DoCloseEvent	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserLifeSpanHandler.cs	/^        public DoCloseEventHandler DoCloseEvent { private get; set; }$/;"	p	class:Browser.BrowserLifeSpanHandler
DoCloseEventHandler	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserLifeSpanHandler.cs	/^    public delegate bool DoCloseEventHandler(CefBrowser browser);$/;"	m	namespace:Browser
DoD3D101Capture	GraphicsCapture/GraphicsCaptureHook/D3D10.1Capture.cpp	/^void DoD3D101Capture(IDXGISwapChain *swap)$/;"	f
DoD3D101Hook	GraphicsCapture/GraphicsCaptureHook/D3D10.1Capture.cpp	/^bool DoD3D101Hook(ID3D10Device *device)$/;"	f
DoD3D10Capture	GraphicsCapture/GraphicsCaptureHook/D3D10Capture.cpp	/^void DoD3D10Capture(IDXGISwapChain *swap)$/;"	f
DoD3D10Hook	GraphicsCapture/GraphicsCaptureHook/D3D10Capture.cpp	/^bool DoD3D10Hook(ID3D10Device *device)$/;"	f
DoD3D11Capture	GraphicsCapture/GraphicsCaptureHook/D3D11Capture.cpp	/^void DoD3D11Capture(IDXGISwapChain *swap)$/;"	f
DoD3D11Hook	GraphicsCapture/GraphicsCaptureHook/D3D11Capture.cpp	/^bool DoD3D11Hook(ID3D11Device *device)$/;"	f
DoD3D9CPUHook	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^void DoD3D9CPUHook(IDirect3DDevice9 *device)$/;"	f
DoD3D9DrawStuff	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^void DoD3D9DrawStuff(IDirect3DDevice9 *device)$/;"	f
DoD3D9GPUHook	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^void DoD3D9GPUHook(IDirect3DDevice9 *device)$/;"	f
DoGLCPUHook	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^void DoGLCPUHook(RECT &rc)$/;"	f
DoGLGPUHook	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^static bool DoGLGPUHook(RECT &rc)$/;"	f	file:
DoGLHook	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^void DoGLHook(RECT &rc)$/;"	f
DoIFrameDelay	Source/RTMPPublisher.cpp	/^bool RTMPPublisher::DoIFrameDelay(bool bBFramesOnly)$/;"	f	class:RTMPPublisher
DoReceiveRequests	Source/Server.cpp	/^DWORD DoReceiveRequests($/;"	f
Dot	OBSApi/Utility/XMath.h	/^    inline float Dot(const Vect &v)   const         {return (*this)|v;}$/;"	f	struct:Vect
Dot	OBSApi/Utility/XMath.h	/^    inline float Dot(const Vect &v) const$/;"	f	struct:Vect
Dot	OBSApi/Utility/XMath.h	/^    inline float Dot(const Vect2 &v) const$/;"	f	struct:Vect2
DoubleValue	lame/ACM/tinyxml/tinyxml.cpp	/^const double  TiXmlAttribute::DoubleValue() const$/;"	f	class:TiXmlAttribute
Draw	OBSApi/GraphicsSystem.h	/^inline void  Draw(GSDrawMode drawMode, DWORD StartVert=0, DWORD nVerts=0) {GS->Draw(drawMode, StartVert, nVerts);}$/;"	f
Draw	Source/D3D10System.cpp	/^void D3D10System::Draw(GSDrawMode drawMode, DWORD startVert, DWORD nVerts)$/;"	f	class:D3D10System
DrawBitmap	Source/BitmapTransitionSource.cpp	/^    void DrawBitmap(UINT texID, float alpha, const Vect2 &startPos, const Vect2 &startSize)$/;"	f	class:BitmapTransitionSource
DrawBox	OBSApi/GraphicsSystem.h	/^inline void DrawBox(const Vect2 &upperLeft, const Vect2 &size)$/;"	f
DrawBox	Source/D3D10System.cpp	/^void D3D10System::DrawBox(const Vect2 &upperLeft, const Vect2 &size)$/;"	f	class:D3D10System
DrawColorControl	OBSApi/ColorControl.cpp	/^void WINAPI DrawColorControl(HDC hDC, CCStruct *pCCData)$/;"	f
DrawHotkeyControlEx	OBSApi/HotkeyControlEx.cpp	/^void HotkeyControlExData::DrawHotkeyControlEx(HWND hwnd, HDC hDC)$/;"	f	class:HotkeyControlExData
DrawOutlineText	Source/TextOutputSource.cpp	/^    void DrawOutlineText(Gdiplus::Graphics *graphics,$/;"	f	class:TextOutputSource	file:
DrawPreview	Source/OBSVideoCapture.cpp	/^void OBS::DrawPreview(const Vect2 &renderFrameSize, const Vect2 &renderFrameOffset, const Vect2 &renderFrameCtrlSize, int curRenderTarget, PreviewDrawType type)$/;"	f	class:OBS
DrawSingleBar	OBSApi/VolumeMeter.cpp	/^void VolumeMeterData::DrawSingleBar(HDC hDC, LONG x, LONG y, LONG w, LONG h, float rmsScale, float maxScale, float peakScale, bool peakMaxed)$/;"	f	class:VolumeMeterData
DrawSprite	OBSApi/GraphicsSystem.cpp	/^void GraphicsSystem::DrawSprite(Texture *texture, DWORD color, float x, float y, float x2, float y2)$/;"	f	class:GraphicsSystem
DrawSprite	OBSApi/GraphicsSystem.h	/^inline void DrawSprite(Texture *texture, DWORD color, float x, float y)$/;"	f
DrawSprite	OBSApi/GraphicsSystem.h	/^inline void DrawSprite(Texture *texture, DWORD color, float x, float y, float x2, float y2)$/;"	f
DrawSpriteEx	OBSApi/GraphicsSystem.h	/^inline void DrawSpriteEx(Texture *texture, DWORD color, float x, float y, float x2, float y2, float u, float v, float u2, float v2)$/;"	f
DrawSpriteEx	Source/D3D10System.cpp	/^void D3D10System::DrawSpriteEx(Texture *texture, DWORD color, float x, float y, float x2, float y2, float u, float v, float u2, float v2)$/;"	f	class:D3D10System
DrawSpriteExRotate	Source/D3D10System.cpp	/^void D3D10System::DrawSpriteExRotate(Texture *texture, DWORD color, float x, float y, float x2, float y2, float degrees, float u, float v, float u2, float v2, float texDegrees)$/;"	f	class:D3D10System
DrawStatusBar	Source/OBS.cpp	/^void OBS::DrawStatusBar(DRAWITEMSTRUCT &dis)$/;"	f	class:OBS
DrawVolumeControl	OBSApi/VolumeControl.cpp	/^void VolumeControlData::DrawVolumeControl(HDC hDC)$/;"	f	class:VolumeControlData
DrawVolumeMeter	OBSApi/VolumeMeter.cpp	/^void VolumeMeterData::DrawVolumeMeter(HDC hDC)$/;"	f	class:VolumeMeterData
Driver	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    char            Driver[MAX_DEVICE_IDENTIFIER_STRING];$/;"	m	struct:_D3DADAPTER_IDENTIFIER8
DriverProc	lame/ACM/main.cpp	/^LONG WINAPI DriverProc(DWORD dwDriverId, HDRVR hdrvr, UINT msg, LONG lParam1, LONG lParam2)$/;"	f
DriverProcedure	lame/ACM/ACM.cpp	/^LONG ACM::DriverProcedure(const HDRVR hdrvr, const UINT msg, LONG lParam1, LONG lParam2)$/;"	f	class:ACM
DriverVersion	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    LARGE_INTEGER   DriverVersion;            \/* Defined for 32 bit components *\/$/;"	m	struct:_D3DADAPTER_IDENTIFIER8
DriverVersionHighPart	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    DWORD           DriverVersionHighPart;$/;"	m	struct:_D3DADAPTER_IDENTIFIER8
DriverVersionLowPart	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    DWORD           DriverVersionLowPart;     \/* Defined for 16 bit driver components *\/$/;"	m	struct:_D3DADAPTER_IDENTIFIER8
DropFrame	Source/RTMPPublisher.cpp	/^void RTMPPublisher::DropFrame(UINT id)$/;"	f	class:RTMPPublisher
DstH	libmfx/include/msdk/include/mfxstructures.h	/^        mfxU32  DstH;$/;"	m	struct:mfxVPPCompInputStream
DstW	libmfx/include/msdk/include/mfxstructures.h	/^        mfxU32  DstW;$/;"	m	struct:mfxVPPCompInputStream
DstX	libmfx/include/msdk/include/mfxstructures.h	/^        mfxU32  DstX;$/;"	m	struct:mfxVPPCompInputStream
DstY	libmfx/include/msdk/include/mfxstructures.h	/^        mfxU32  DstY;$/;"	m	struct:mfxVPPCompInputStream
DummyDebugProc	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	/^extern "C" __declspec(dllexport) LRESULT CALLBACK DummyDebugProc(int code, WPARAM wParam, LPARAM lParam)$/;"	f
DummyWindowThread	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	/^static DWORD WINAPI DummyWindowThread(LPVOID lpBla)$/;"	f	file:
Dump	QSVHelper/QSVStuff.cpp	/^void Parameters::Dump(std::wostream &log_file)$/;"	f	class:Parameters
DumpError	OBSApi/Utility/XT.cpp	/^__declspec(noreturn) void __cdecl DumpError(const TCHAR *format, ...)$/;"	f
DumpLastProfileData	OBSApi/Utility/Profiler.cpp	/^void STDCALL DumpLastProfileData()$/;"	f
DumpMetaData	librtmp/rtmp.c	/^DumpMetaData(AMFObject *obj)$/;"	f	file:
DumpProfileData	OBSApi/Utility/Profiler.cpp	/^void STDCALL DumpProfileData()$/;"	f
DuplicateOutput	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *DuplicateOutput )( $/;"	m	struct:IDXGIOutput1Vtbl
DuplicatorInfo	OBSApi/GraphicsSystem.h	/^enum DuplicatorInfo$/;"	g
DuplicatorInfo_Acquired	OBSApi/GraphicsSystem.h	/^    DuplicatorInfo_Acquired$/;"	e	enum:DuplicatorInfo
DuplicatorInfo_Error	OBSApi/GraphicsSystem.h	/^    DuplicatorInfo_Error,$/;"	e	enum:DuplicatorInfo
DuplicatorInfo_Lost	OBSApi/GraphicsSystem.h	/^    DuplicatorInfo_Lost,$/;"	e	enum:DuplicatorInfo
DuplicatorInfo_Timeout	OBSApi/GraphicsSystem.h	/^    DuplicatorInfo_Timeout,$/;"	e	enum:DuplicatorInfo
DynamicBitrateSupported	ObsNvenc/src/NVENCEncoder.cpp	/^bool NVENCEncoder::DynamicBitrateSupported() const$/;"	f	class:NVENCEncoder
DynamicBitrateSupported	Source/Encoder_QSV.cpp	/^    virtual bool DynamicBitrateSupported() const$/;"	f	class:QSVEncoder
DynamicBitrateSupported	Source/Encoder_x264.cpp	/^    virtual bool DynamicBitrateSupported() const$/;"	f	class:X264Encoder
DynamicBitrateSupported	Source/NullOutput.cpp	/^    virtual bool DynamicBitrateSupported() const {return true;}$/;"	f	class:NullVideoEncoder
EBh	lame/libmp3lame/i386/nasm.h	/^	times (1 & ge10(($$-%%here) & 15) & ~ge11(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,008h,90h,90h,90h,90h,90h,90h,90h,90h$/;"	v
EBh	lame/libmp3lame/i386/nasm.h	/^	times (1 & ge11(($$-%%here) & 15) & ~ge12(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,009h,90h,90h,90h,90h,90h,90h,90h,90h,90h$/;"	v
EBh	lame/libmp3lame/i386/nasm.h	/^	times (1 & ge12(($$-%%here) & 15) & ~ge13(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Ah,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h$/;"	v
EBh	lame/libmp3lame/i386/nasm.h	/^	times (1 & ge13(($$-%%here) & 15) & ~ge14(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Bh,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h$/;"	v
EBh	lame/libmp3lame/i386/nasm.h	/^	times (1 & ge14(($$-%%here) & 15) & ~ge15(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Ch,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h$/;"	v
EBh	lame/libmp3lame/i386/nasm.h	/^	times (1 & ge15(($$-%%here) & 15) & ~ge16(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Dh,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h$/;"	v
EBh	lame/libmp3lame/i386/nasm.h	/^	times (1 & ge9(($$-%%here) & 15)  & ~ge10(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,007h,90h,90h,90h,90h,90h,90h,90h$/;"	v
ECHO_C	lame/ACM/ADbg/Makefile	/^ECHO_C = $/;"	m
ECHO_C	lame/ACM/Makefile	/^ECHO_C = $/;"	m
ECHO_C	lame/ACM/ddk/Makefile	/^ECHO_C = $/;"	m
ECHO_C	lame/ACM/tinyxml/Makefile	/^ECHO_C = $/;"	m
ECHO_C	lame/Dll/Makefile	/^ECHO_C = $/;"	m
ECHO_C	lame/Makefile	/^ECHO_C = $/;"	m
ECHO_C	lame/debian/Makefile	/^ECHO_C = $/;"	m
ECHO_C	lame/doc/Makefile	/^ECHO_C = $/;"	m
ECHO_C	lame/doc/html/Makefile	/^ECHO_C = $/;"	m
ECHO_C	lame/doc/man/Makefile	/^ECHO_C = $/;"	m
ECHO_C	lame/dshow/Makefile	/^ECHO_C = $/;"	m
ECHO_C	lame/frontend/Makefile	/^ECHO_C = $/;"	m
ECHO_C	lame/include/Makefile	/^ECHO_C = $/;"	m
ECHO_C	lame/libmp3lame/Makefile	/^ECHO_C = $/;"	m
ECHO_C	lame/libmp3lame/i386/Makefile	/^ECHO_C = $/;"	m
ECHO_C	lame/libmp3lame/vector/Makefile	/^ECHO_C = $/;"	m
ECHO_C	lame/mac/Makefile	/^ECHO_C = $/;"	m
ECHO_C	lame/macosx/English.lproj/Makefile	/^ECHO_C = $/;"	m
ECHO_C	lame/macosx/LAME.xcodeproj/Makefile	/^ECHO_C = $/;"	m
ECHO_C	lame/macosx/Makefile	/^ECHO_C = $/;"	m
ECHO_C	lame/misc/Makefile	/^ECHO_C = $/;"	m
ECHO_C	lame/mpglib/Makefile	/^ECHO_C = $/;"	m
ECHO_C	lame/vc_solution/Makefile	/^ECHO_C = $/;"	m
ECHO_N	lame/ACM/ADbg/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	lame/ACM/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	lame/ACM/ddk/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	lame/ACM/tinyxml/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	lame/Dll/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	lame/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	lame/debian/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	lame/doc/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	lame/doc/html/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	lame/doc/man/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	lame/dshow/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	lame/frontend/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	lame/include/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	lame/libmp3lame/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	lame/libmp3lame/i386/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	lame/libmp3lame/vector/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	lame/mac/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	lame/macosx/English.lproj/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	lame/macosx/LAME.xcodeproj/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	lame/macosx/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	lame/misc/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	lame/mpglib/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	lame/vc_solution/Makefile	/^ECHO_N = -n$/;"	m
ECHO_T	lame/ACM/ADbg/Makefile	/^ECHO_T = $/;"	m
ECHO_T	lame/ACM/Makefile	/^ECHO_T = $/;"	m
ECHO_T	lame/ACM/ddk/Makefile	/^ECHO_T = $/;"	m
ECHO_T	lame/ACM/tinyxml/Makefile	/^ECHO_T = $/;"	m
ECHO_T	lame/Dll/Makefile	/^ECHO_T = $/;"	m
ECHO_T	lame/Makefile	/^ECHO_T = $/;"	m
ECHO_T	lame/debian/Makefile	/^ECHO_T = $/;"	m
ECHO_T	lame/doc/Makefile	/^ECHO_T = $/;"	m
ECHO_T	lame/doc/html/Makefile	/^ECHO_T = $/;"	m
ECHO_T	lame/doc/man/Makefile	/^ECHO_T = $/;"	m
ECHO_T	lame/dshow/Makefile	/^ECHO_T = $/;"	m
ECHO_T	lame/frontend/Makefile	/^ECHO_T = $/;"	m
ECHO_T	lame/include/Makefile	/^ECHO_T = $/;"	m
ECHO_T	lame/libmp3lame/Makefile	/^ECHO_T = $/;"	m
ECHO_T	lame/libmp3lame/i386/Makefile	/^ECHO_T = $/;"	m
ECHO_T	lame/libmp3lame/vector/Makefile	/^ECHO_T = $/;"	m
ECHO_T	lame/mac/Makefile	/^ECHO_T = $/;"	m
ECHO_T	lame/macosx/English.lproj/Makefile	/^ECHO_T = $/;"	m
ECHO_T	lame/macosx/LAME.xcodeproj/Makefile	/^ECHO_T = $/;"	m
ECHO_T	lame/macosx/Makefile	/^ECHO_T = $/;"	m
ECHO_T	lame/misc/Makefile	/^ECHO_T = $/;"	m
ECHO_T	lame/mpglib/Makefile	/^ECHO_T = $/;"	m
ECHO_T	lame/vc_solution/Makefile	/^ECHO_T = $/;"	m
EDataFlow	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/RenderProcess.cs	/^    internal enum EDataFlow$/;"	g	namespace:Browser
EDataFlow_enum_count	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/RenderProcess.cs	/^        EDataFlow_enum_count$/;"	e	enum:Browser.EDataFlow	file:
EGREP	lame/ACM/ADbg/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	lame/ACM/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	lame/ACM/ddk/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	lame/ACM/tinyxml/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	lame/Dll/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	lame/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	lame/debian/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	lame/doc/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	lame/doc/html/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	lame/doc/man/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	lame/dshow/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	lame/frontend/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	lame/include/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	lame/libmp3lame/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	lame/libmp3lame/i386/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	lame/libmp3lame/vector/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	lame/mac/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	lame/macosx/English.lproj/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	lame/macosx/LAME.xcodeproj/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	lame/macosx/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	lame/misc/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	lame/mpglib/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	lame/vc_solution/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EINPROGRESS	Source/mongoose.c	111;"	d	file:
ELEMENT	lame/ACM/tinyxml/tinyxml.h	/^		ELEMENT, $/;"	e	enum:TiXmlNode::NodeType
ELGATO_FORCE_BUFFERING	DShowPlugin/DeviceSource.cpp	48;"	d	file:
ELGATO_VCF_AUDIO_PID	DShowPlugin/IVideoCaptureFilter.h	52;"	d
ELGATO_VCF_VIDEO_PID	DShowPlugin/IVideoCaptureFilter.h	51;"	d
ELGATO_WORKAROUND	DShowPlugin/DShowPlugin.cpp	441;"	d	file:
EMPHASIS_RESERVED	lame/dshow/Encoder.cpp	362;"	d	file:
ENABLE_DEBUG	libsamplerate/config.h	63;"	d
ENABLE_DIRECTORY_LISTING	Source/mongoose.c	/^  ENABLE_DIRECTORY_LISTING,$/;"	e	file:
ENABLE_PROFILING	OBSApi/Utility/Profiler.h	47;"	d
ENABLE_PROXY	Source/mongoose.c	/^  ENABLE_PROXY,$/;"	e	file:
ENCDELAY	lame/libmp3lame/encoder.h	57;"	d
ENCODER_FLUSHED	QSVHelper/IPCInfo.h	63;"	d
END_CAPTURE_EVENT	GraphicsCapture/GlobalCaptureStuff.h	27;"	d
ENUMERATELOADEDMODULES64	Source/CrashDumpHandler.h	/^typedef BOOL (WINAPI *ENUMERATELOADEDMODULES64) (HANDLE hProcess, PENUMLOADED_MODULES_CALLBACK64 EnumLoadedModulesCallback, PVOID UserContext);$/;"	t
ENV_EXPORT_TO_CGI	Source/mongoose.c	1384;"	d	file:
EPSILON	OBSApi/Utility/XMath.h	37;"	d
EPSILON	OBSApi/Utility/XMath.h	44;"	d
EP_CGI	Source/mongoose.c	/^ EP_NONE, EP_FILE, EP_CGI, EP_USER, EP_PUT, EP_CLIENT, EP_PROXY$/;"	e	enum:endpoint_type	file:
EP_CLIENT	Source/mongoose.c	/^ EP_NONE, EP_FILE, EP_CGI, EP_USER, EP_PUT, EP_CLIENT, EP_PROXY$/;"	e	enum:endpoint_type	file:
EP_FILE	Source/mongoose.c	/^ EP_NONE, EP_FILE, EP_CGI, EP_USER, EP_PUT, EP_CLIENT, EP_PROXY$/;"	e	enum:endpoint_type	file:
EP_NONE	Source/mongoose.c	/^ EP_NONE, EP_FILE, EP_CGI, EP_USER, EP_PUT, EP_CLIENT, EP_PROXY$/;"	e	enum:endpoint_type	file:
EP_PROXY	Source/mongoose.c	/^ EP_NONE, EP_FILE, EP_CGI, EP_USER, EP_PUT, EP_CLIENT, EP_PROXY$/;"	e	enum:endpoint_type	file:
EP_PUT	Source/mongoose.c	/^ EP_NONE, EP_FILE, EP_CGI, EP_USER, EP_PUT, EP_CLIENT, EP_PROXY$/;"	e	enum:endpoint_type	file:
EP_USER	Source/mongoose.c	/^ EP_NONE, EP_FILE, EP_CGI, EP_USER, EP_PUT, EP_CLIENT, EP_PROXY$/;"	e	enum:endpoint_type	file:
EQ	lame/libmp3lame/machine.h	167;"	d
EQ	lame/libmp3lame/machine.h	172;"	d
ERRORF	lame/libmp3lame/util.h	610;"	d
ERole	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/RenderProcess.cs	/^    internal enum ERole$/;"	g	namespace:Browser
ERole_enum_count	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/RenderProcess.cs	/^        ERole_enum_count$/;"	e	enum:Browser.ERole	file:
ESC_HCB	libfaac/bitstream.h	112;"	d
ETAGS	lame/ACM/Makefile	/^ETAGS = etags$/;"	m
ETAGS	lame/Makefile	/^ETAGS = etags$/;"	m
ETAGS	lame/doc/Makefile	/^ETAGS = etags$/;"	m
ETAGS	lame/frontend/Makefile	/^ETAGS = etags$/;"	m
ETAGS	lame/include/Makefile	/^ETAGS = etags$/;"	m
ETAGS	lame/libmp3lame/Makefile	/^ETAGS = etags$/;"	m
ETAGS	lame/libmp3lame/i386/Makefile	/^ETAGS = etags$/;"	m
ETAGS	lame/libmp3lame/vector/Makefile	/^ETAGS = etags$/;"	m
ETAGS	lame/macosx/Makefile	/^ETAGS = etags$/;"	m
ETAGS	lame/misc/Makefile	/^ETAGS = etags$/;"	m
ETAGS	lame/mpglib/Makefile	/^ETAGS = etags$/;"	m
ETWHandler	libmfx/src/mfx_dispatcher_log.cpp	/^    ETWHandler(const wchar_t * guid_str)$/;"	f	class:ETWHandler
ETWHandler	libmfx/src/mfx_dispatcher_log.cpp	/^class ETWHandler : public IMsgHandler$/;"	c	file:
ETWHandlerFactory	libmfx/include/mfx_dispatcher_log.h	/^    ETWHandlerFactory(){}$/;"	f	class:ETWHandlerFactory
ETWHandlerFactory	libmfx/include/mfx_dispatcher_log.h	/^class ETWHandlerFactory$/;"	c
EWOULDBLOCK	Source/mongoose.c	114;"	d	file:
EWOULDBLOCK	librtmp/rtmp_sys.h	55;"	d
EWOULDBLOCK	librtmp/rtmp_sys.h	57;"	d
EXEEXT	lame/ACM/ADbg/Makefile	/^EXEEXT = .exe$/;"	m
EXEEXT	lame/ACM/Makefile	/^EXEEXT = .exe$/;"	m
EXEEXT	lame/ACM/ddk/Makefile	/^EXEEXT = .exe$/;"	m
EXEEXT	lame/ACM/tinyxml/Makefile	/^EXEEXT = .exe$/;"	m
EXEEXT	lame/Dll/Makefile	/^EXEEXT = .exe$/;"	m
EXEEXT	lame/Makefile	/^EXEEXT = .exe$/;"	m
EXEEXT	lame/debian/Makefile	/^EXEEXT = .exe$/;"	m
EXEEXT	lame/doc/Makefile	/^EXEEXT = .exe$/;"	m
EXEEXT	lame/doc/html/Makefile	/^EXEEXT = .exe$/;"	m
EXEEXT	lame/doc/man/Makefile	/^EXEEXT = .exe$/;"	m
EXEEXT	lame/dshow/Makefile	/^EXEEXT = .exe$/;"	m
EXEEXT	lame/frontend/Makefile	/^EXEEXT = .exe$/;"	m
EXEEXT	lame/include/Makefile	/^EXEEXT = .exe$/;"	m
EXEEXT	lame/libmp3lame/Makefile	/^EXEEXT = .exe$/;"	m
EXEEXT	lame/libmp3lame/i386/Makefile	/^EXEEXT = .exe$/;"	m
EXEEXT	lame/libmp3lame/vector/Makefile	/^EXEEXT = .exe$/;"	m
EXEEXT	lame/mac/Makefile	/^EXEEXT = .exe$/;"	m
EXEEXT	lame/macosx/English.lproj/Makefile	/^EXEEXT = .exe$/;"	m
EXEEXT	lame/macosx/LAME.xcodeproj/Makefile	/^EXEEXT = .exe$/;"	m
EXEEXT	lame/macosx/Makefile	/^EXEEXT = .exe$/;"	m
EXEEXT	lame/misc/Makefile	/^EXEEXT = .exe$/;"	m
EXEEXT	lame/mpglib/Makefile	/^EXEEXT = .exe$/;"	m
EXEEXT	lame/vc_solution/Makefile	/^EXEEXT = .exe$/;"	m
EXIT_D3D11_UNKNOWN_DEVICE	QSVHelper/IPCInfo.h	75;"	d
EXIT_ENCODER_INIT_FAILED	QSVHelper/IPCInfo.h	72;"	d
EXIT_INCOMPATIBLE_CONFIGURATION	QSVHelper/IPCInfo.h	74;"	d
EXIT_INIT_IPC_FAILED	QSVHelper/IPCInfo.h	68;"	d
EXIT_INIT_QUERY_FAILED	QSVHelper/IPCInfo.h	70;"	d
EXIT_IPC_OBS_HANDLE_FAILED	QSVHelper/IPCInfo.h	71;"	d
EXIT_LOG_FILE_OPEN_FAILED	QSVHelper/IPCInfo.h	76;"	d
EXIT_NO_INTEL_GRAPHICS	QSVHelper/IPCInfo.h	69;"	d
EXIT_NO_VALID_CONFIGURATION	QSVHelper/IPCInfo.h	73;"	d
EXTERN_DLL_EXPORT	CLRHostPlugin/CLRHostPlugin/CLRHostPlugin.h	15;"	d
EXTRA_DIST	lame/ACM/ADbg/Makefile	/^EXTRA_DIST = \\$/;"	m
EXTRA_DIST	lame/ACM/Makefile	/^EXTRA_DIST = \\$/;"	m
EXTRA_DIST	lame/ACM/ddk/Makefile	/^EXTRA_DIST = \\$/;"	m
EXTRA_DIST	lame/ACM/tinyxml/Makefile	/^EXTRA_DIST = \\$/;"	m
EXTRA_DIST	lame/Dll/Makefile	/^EXTRA_DIST = BladeMP3EncDLL.c \\$/;"	m
EXTRA_DIST	lame/Makefile	/^EXTRA_DIST = \\$/;"	m
EXTRA_DIST	lame/debian/Makefile	/^EXTRA_DIST = \\$/;"	m
EXTRA_DIST	lame/doc/html/Makefile	/^EXTRA_DIST = $(pkghtml_DATA)$/;"	m
EXTRA_DIST	lame/doc/man/Makefile	/^EXTRA_DIST = ${man_MANS}$/;"	m
EXTRA_DIST	lame/dshow/Makefile	/^EXTRA_DIST = \\$/;"	m
EXTRA_DIST	lame/frontend/Makefile	/^EXTRA_DIST = \\$/;"	m
EXTRA_DIST	lame/include/Makefile	/^EXTRA_DIST = lame.def libmp3lame.sym$/;"	m
EXTRA_DIST	lame/libmp3lame/Makefile	/^EXTRA_DIST = \\$/;"	m
EXTRA_DIST	lame/libmp3lame/i386/Makefile	/^EXTRA_DIST = \\$/;"	m
EXTRA_DIST	lame/mac/Makefile	/^EXTRA_DIST = \\$/;"	m
EXTRA_DIST	lame/macosx/English.lproj/Makefile	/^EXTRA_DIST = \\$/;"	m
EXTRA_DIST	lame/macosx/LAME.xcodeproj/Makefile	/^EXTRA_DIST = \\$/;"	m
EXTRA_DIST	lame/macosx/Makefile	/^EXTRA_DIST = \\$/;"	m
EXTRA_DIST	lame/misc/Makefile	/^EXTRA_DIST = \\$/;"	m
EXTRA_DIST	lame/mpglib/Makefile	/^EXTRA_DIST = \\$/;"	m
EXTRA_DIST	lame/vc_solution/Makefile	/^EXTRA_DIST = *.sln \\$/;"	m
EXTRA_MIME_TYPES	Source/mongoose.c	/^  EXTRA_MIME_TYPES,$/;"	e	file:
EXTRA_PROGRAMS	lame/frontend/Makefile	/^EXTRA_PROGRAMS = lame$(EXEEXT) mp3rtp$(EXEEXT) mp3x$(EXEEXT)$/;"	m
EXTRA_PROGRAMS	lame/misc/Makefile	/^EXTRA_PROGRAMS = abx$(EXEEXT) ath$(EXEEXT) scalartest$(EXEEXT)$/;"	m
EXTRA_SCRIPTS	lame/misc/Makefile	/^EXTRA_SCRIPTS = \\$/;"	m
EXTRA_liblameasmroutines_la_SOURCES	lame/libmp3lame/i386/Makefile	/^EXTRA_liblameasmroutines_la_SOURCES = $(nasm_sources)$/;"	m
EXTRA_liblamevectorroutines_la_SOURCES	lame/libmp3lame/vector/Makefile	/^EXTRA_liblamevectorroutines_la_SOURCES = $(xmm_sources)$/;"	m
EXTREME	lame/include/lame.h	/^    EXTREME = 1002,$/;"	e	enum:preset_mode_e
EXTREME_FAST	lame/include/lame.h	/^    EXTREME_FAST = 1005,$/;"	e	enum:preset_mode_e
EditItem	scenesw/SceneSwitcherSettings.cpp	/^void SceneSwitcherSettings::EditItem(bool selChange) {$/;"	f	class:SceneSwitcherSettings
ElementCount	CLRHostPlugin/CLRHostInterop/XElement.cpp	/^System::Int32 CLROBS::XElement::ElementCount()$/;"	f	class:CLROBS::XElement
ElgatoCheckBuffering	DShowPlugin/DeviceSource.cpp	/^void ElgatoCheckBuffering(IBaseFilter* deviceFilter, bool& argUseBuffering, UINT& argBufferTime)$/;"	f
Emissive	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DCOLORVALUE   Emissive;       \/* Emissive color RGB *\/$/;"	m	struct:_D3DMATERIAL8
EnableAbrOptions	lame/ACM/AEncodeProperties.cpp	/^void AEncodeProperties::EnableAbrOptions(HWND hDialog, bool enable)$/;"	f	class:AEncodeProperties
EnableAllHooksLL	minhook/src/hook.cpp	/^	MH_STATUS EnableAllHooksLL()$/;"	f	namespace:MinHook::<anonymous>
EnableAutoDepthStencil	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    BOOL                EnableAutoDepthStencil;$/;"	m	struct:_D3DPRESENT_PARAMETERS_
EnableBlending	OBSApi/GraphicsSystem.h	/^inline void  EnableBlending(BOOL bEnabled)                      {GS->EnableBlending(bEnabled);}$/;"	f
EnableBlending	Source/D3D10System.cpp	/^void  D3D10System::EnableBlending(BOOL bEnable)$/;"	f	class:D3D10System
EnableControls	lame/dshow/PropPage.cpp	/^void CMpegAudEncPropertyPage::EnableControls(HWND hwndParent, bool bEnable)$/;"	f	class:CMpegAudEncPropertyPage
EnableControls	lame/dshow/PropPage_adv.cpp	/^void CMpegAudEncPropertyPageAdv::EnableControls(HWND hwndParent, bool bEnable)$/;"	f	class:CMpegAudEncPropertyPageAdv
EnableFileMonitor	Source/BitmapImage.cpp	/^void BitmapImage::EnableFileMonitor(bool bMonitor)$/;"	f	class:BitmapImage
EnableHook	minhook/src/hook.cpp	/^	MH_STATUS EnableHook(void* pTarget)$/;"	f	namespace:MinHook
EnableHookLL	minhook/src/hook.cpp	/^	MH_STATUS EnableHookLL(HOOK_ENTRY *pHook)$/;"	f	namespace:MinHook::<anonymous>
EnableMemoryTracking	OBSApi/Utility/DebugAlloc.cpp	/^void EnableMemoryTracking(BOOL bEnable, int id)$/;"	f
EnableProfiling	OBSApi/Utility/Profiler.cpp	/^void STDCALL EnableProfiling(BOOL bEnable, float pminPercentage, float pminTime)$/;"	f
EnableProjector	Source/OBS.cpp	/^void OBS::EnableProjector(UINT monitorID)$/;"	f	class:OBS
EnableSceneSwitching	Source/OBS.h	/^    inline void EnableSceneSwitching(bool bEnable) {bDisableSceneSwitching = !bEnable;}$/;"	f	class:OBS
EnableTransitions	Source/API.cpp	/^    virtual void EnableTransitions()           { App->performTransition = true; }$/;"	f	class:OBSAPIInterface
EnableWebcam	Source/OBS.cpp	/^bool OBS::EnableWebcam(int width, int height, int position)$/;"	f	class:OBS
EncMetaData	Source/RTMPStuff.cpp	/^char* OBS::EncMetaData(char *enc, char *pend, bool bFLVFile)$/;"	f	class:OBS
EncResult_t	lame/libmp3lame/util.h	/^    } EncResult_t;$/;"	t
EncStateVar_t	lame/libmp3lame/util.h	/^    } EncStateVar_t;$/;"	t
Encode	ObsNvenc/src/NVENCEncoder.cpp	/^bool NVENCEncoder::Encode(LPVOID picIn, List<DataPacket> &packets, List<PacketType> &packetTypes, DWORD timestamp, DWORD &out_pts)$/;"	f	class:NVENCEncoder
Encode	Source/Encoder_AAC.cpp	/^    bool Encode(float *input, UINT numInputFrames, DataPacket &packet, QWORD &timestamp)$/;"	f	class:AACEncoder
Encode	Source/Encoder_MP3.cpp	/^    bool Encode(float *input, UINT numInputFrames, DataPacket &packet, QWORD &timestamp)$/;"	f	class:MP3Encoder
Encode	Source/Encoder_x264.cpp	/^    bool Encode(LPVOID picInPtr, List<DataPacket> &packets, List<PacketType> &packetTypes, DWORD outputTimestamp, DWORD &out_pts)$/;"	f	class:X264Encoder
Encode	Source/NullOutput.cpp	/^    virtual bool    Encode(float *input, UINT numInputFrames, DataPacket &packet, QWORD &timestamp) {return false;}$/;"	f	class:NullAudioEncoder
Encode	lame/dshow/Encoder.cpp	/^int CEncoder::Encode(const short * pdata, int data_size)$/;"	f	class:CEncoder
EncodeAudioSegment	Source/OBSCapture.cpp	/^void OBS::EncodeAudioSegment(float *buffer, UINT numFrames, QWORD timestamp)$/;"	f	class:OBS
EncodeCtrl	QSVHelper/QSVStuff.h	/^    EncodeCtrl() { zero(ctrl); }$/;"	f	struct:EncodeCtrl
EncodeCtrl	QSVHelper/QSVStuff.h	/^struct EncodeCtrl$/;"	s
EncodeFrameAsync	libmfx/include/msdk/include/mfxaudio++.h	/^    virtual mfxStatus EncodeFrameAsync(mfxAudioFrame *frame, mfxBitstream *buffer_out, mfxSyncPoint *syncp) { return MFXAudioENCODE_EncodeFrameAsync(m_session, frame, buffer_out, syncp); }$/;"	f	class:MFXAudioENCODE
EncodeFrameAsync	libmfx/include/msdk/include/mfxvideo++.h	/^    virtual mfxStatus EncodeFrameAsync(mfxEncodeCtrl *ctrl, mfxFrameSurface1 *surface, mfxBitstream *bs, mfxSyncPoint *syncp) { return MFXVideoENCODE_EncodeFrameAsync(m_session, ctrl, surface, bs, syncp); }$/;"	f	class:MFXVideoENCODE
EncodeFrameSubmit	libmfx/include/msdk/include/mfxplugin.h	/^    mfxStatus (MFX_CDECL *EncodeFrameSubmit)(mfxHDL pthis, mfxEncodeCtrl *ctrl, mfxFrameSurface1 *surface, mfxBitstream *bs, mfxThreadTask *task);$/;"	m	struct:mfxVideoCodecPlugin
EncodeInt32LE	librtmp/rtmp.c	/^EncodeInt32LE(char *output, int nVal)$/;"	f	file:
EncodeLoop	QSVHelper/Encoder.h	/^    int EncodeLoop(ipc_stop &stop, safe_handle &obs_handle)$/;"	f	struct:Encoder
EncodeLoop	Source/OBSVideoCapture.cpp	/^void OBS::EncodeLoop()$/;"	f	class:OBS
EncodeTasks	QSVHelper/Encoder.h	/^    void EncodeTasks()$/;"	f	struct:Encoder
EncodeThread	Source/OBSVideoCapture.cpp	/^DWORD STDCALL OBS::EncodeThread(LPVOID lpUnused)$/;"	f	class:OBS
EncodeWavToMP3	lame/Dll/MP3export.pas	/^Procedure EncodeWavToMP3(fs, fd: Integer);$/;"	p
EncodedOrder	libmfx/include/msdk/include/mfxstructures.h	/^            mfxU16  EncodedOrder;$/;"	m
Encoder	QSVHelper/Encoder.h	/^    Encoder(IPCSignalledType<init_request> &init_req, std::wstring event_prefix, std::wofstream &log_file)$/;"	f	struct:Encoder
Encoder	QSVHelper/Encoder.h	/^struct Encoder$/;"	s
Encoder.cpp	lame/dshow/Encoder.cpp	1;"	F
Encoder.h	QSVHelper/Encoder.h	1;"	F
Encoder.h	lame/dshow/Encoder.h	1;"	F
EncoderPicture	Source/OBSVideoCapture.cpp	/^    EncoderPicture() : picOut(nullptr), mfxOut(nullptr) {}$/;"	f	struct:EncoderPicture
EncoderPicture	Source/OBSVideoCapture.cpp	/^struct EncoderPicture$/;"	s	file:
EncoderProgress	lame/frontend/timestatus.c	/^static struct EncoderProgress {$/;"	s	file:
Encoder_AAC.cpp	Source/Encoder_AAC.cpp	1;"	F
Encoder_MP3.cpp	Source/Encoder_MP3.cpp	1;"	F
Encoder_NVENC.cpp	Source/Encoder_NVENC.cpp	1;"	F
Encoder_QSV.cpp	Source/Encoder_QSV.cpp	1;"	F
Encoder_x264.cpp	Source/Encoder_x264.cpp	1;"	F
Encoding	lame/ACM/tinyxml/tinyxml.h	/^	const std::string& Encoding() const		{ return encoding; }$/;"	f	class:TiXmlDeclaration
EncryptedData	libmfx/include/msdk/include/mfxcommon.h	/^            mfxEncryptedData* EncryptedData;$/;"	m
EndCapture	GraphicsCapture/GraphicsCaptureSource.cpp	/^void GraphicsCaptureSource::EndCapture()$/;"	f	class:GraphicsCaptureSource
EndChunkInfo	Source/MP4FileStream.cpp	/^    inline void EndChunkInfo(List<UINT64> &chunks, List<SampleToChunk> &sampleToChunks, UINT64 &curChunkOffset, UINT &numSamples)$/;"	f	class:MP4FileStream
EndDelayProc	Source/DelayedPublisher.cpp	/^    static INT_PTR CALLBACK EndDelayProc(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam)$/;"	f	class:DelayedPublisher	file:
EndFlush	DShowPlugin/CaptureFilter.cpp	/^STDMETHODIMP CapturePin::EndFlush()$/;"	f	class:CapturePin
EndOfSequence	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16      EndOfSequence;          \/* tri-state option *\/$/;"	m
EndOfStream	DShowPlugin/CaptureFilter.cpp	/^STDMETHODIMP CapturePin::EndOfStream()                                         {return S_OK;}$/;"	f	class:CapturePin
EndOfStream	lame/dshow/Mpegac.cpp	/^HRESULT CMpegAudEnc::EndOfStream()$/;"	f	class:CMpegAudEnc
EndOfStream	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16      EndOfStream;            \/* tri-state option *\/$/;"	m
EndPreprocess	Source/DesktopImageSource.cpp	/^    void EndPreprocess()$/;"	f	class:DesktopImageSource
EndScene	CLRHostPlugin/CLRHostInterop/AbstractImageSource.cpp	/^void AbstractImageSource::EndScene() $/;"	f	class:AbstractImageSource
EndScene	CLRHostPlugin/CLRHostPlugin/CLRImageSource.cpp	/^void CLRImageSource::EndScene()$/;"	f	class:CLRImageSource
EndScene	CLRHostPlugin/CLRHostPlugin/ImageSourceBridge.h	/^    virtual void EndScene() $/;"	f	class:ImageSourceBridge
EndScene	DShowPlugin/DeviceSource.cpp	/^void DeviceSource::EndScene()$/;"	f	class:DeviceSource
EndScene	GraphicsCapture/GraphicsCaptureSource.cpp	/^void GraphicsCaptureSource::EndScene()$/;"	f	class:GraphicsCaptureSource
EndScene	OBSApi/Scene.cpp	/^void Scene::EndScene()$/;"	f	class:Scene
EndScene	OBSApi/Scene.h	/^    virtual void EndScene() {}$/;"	f	class:ImageSource
EndScene	Source/DesktopImageSource.cpp	/^    void EndScene()$/;"	f	class:DesktopImageSource
EnqueueSetEvent	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *EnqueueSetEvent )( $/;"	m	struct:IDXGIDevice2Vtbl
EnsureCropValid	Source/WindowStuff.cpp	/^bool OBS::EnsureCropValid(SceneItem *&scaleItem, Vect2 &minSize, Vect2 &snapSize, bool bControlDown, int cropEdges, bool cropSymmetric) $/;"	f	class:OBS
EnterGlobalSourceNameDialogProc	Source/WindowStuff.cpp	/^INT_PTR CALLBACK OBS::EnterGlobalSourceNameDialogProc(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam)$/;"	f	class:OBS
EnterProfileDialogProc	Source/WindowStuff.cpp	/^INT_PTR CALLBACK OBS::EnterProfileDialogProc(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam)$/;"	f	class:OBS
EnterSceneCollectionDialogProc	Source/WindowStuff.cpp	/^INT_PTR CALLBACK OBS::EnterSceneCollectionDialogProc(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam)$/;"	f	class:OBS
EnterSceneMutex	Source/API.cpp	/^    virtual void EnterSceneMutex() {App->EnterSceneMutex();}$/;"	f	class:OBSAPIInterface
EnterSceneMutex	Source/OBS.h	/^    inline void EnterSceneMutex() {OSEnterMutex(hSceneMutex);}$/;"	f	class:OBS
EnterSceneNameDialogProc	Source/WindowStuff.cpp	/^INT_PTR CALLBACK OBS::EnterSceneNameDialogProc(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam)$/;"	f	class:OBS
EnterSourceNameDialogProc	Source/WindowStuff.cpp	/^INT_PTR CALLBACK OBS::EnterSourceNameDialogProc(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam)$/;"	f	class:OBS
Entity	lame/ACM/tinyxml/tinyxml.h	/^	struct Entity$/;"	s	class:TiXmlBase
EnumAdapters	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *EnumAdapters )( $/;"	m	struct:IDXGIFactory2Vtbl
EnumAdapters1	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *EnumAdapters1 )( $/;"	m	struct:IDXGIFactory2Vtbl
EnumKey	libmfx/src/mfx_win_reg_key.cpp	/^bool WinRegKey::EnumKey(DWORD index, wchar_t *pValueName, LPDWORD pcchValueName)$/;"	f	class:MFX::WinRegKey
EnumMediaTypes	DShowPlugin/CaptureFilter.cpp	/^STDMETHODIMP CapturePin::EnumMediaTypes(IEnumMediaTypes **ppEnum)$/;"	f	class:CapturePin
EnumOutputs	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *EnumOutputs )( $/;"	m	struct:IDXGIAdapter2Vtbl
EnumPins	DShowPlugin/CaptureFilter.cpp	/^STDMETHODIMP CaptureFilter::EnumPins(IEnumPins **ppEnum)$/;"	f	class:CaptureFilter
EnumToName	DShowPlugin/MediaInfoStuff.h	/^static const CTSTR EnumToName[] =$/;"	v
EnumValue	libmfx/src/mfx_win_reg_key.cpp	/^bool WinRegKey::EnumValue(DWORD index, wchar_t *pValueName, LPDWORD pcchValueName, LPDWORD pType)$/;"	f	class:MFX::WinRegKey
EnumerateBuiltinServices	Source/Service.cpp	/^static inline bool EnumerateBuiltinServices(function<bool(ServiceIdentifier, XElement*)> &func)$/;"	f	file:
EnumerateLoadedModulesProcInfo	Source/CrashDumpHandler.cpp	/^BOOL CALLBACK EnumerateLoadedModulesProcInfo (PCTSTR ModuleName, DWORD64 ModuleBase, ULONG ModuleSize, PVOID UserContext)$/;"	f
EnumerateServices	Source/Service.cpp	/^void EnumerateServices(function<bool(ServiceIdentifier, XElement*)> func)$/;"	f
EnumerateUserServices	Source/Service.cpp	/^static inline void EnumerateUserServices(function<bool(ServiceIdentifier, XElement*)> &func)$/;"	f	file:
Equals	CLRBrowserSourcePlugin/Plugin/Shared/BrowserPlugin.cs	/^        public override bool Equals(object obj)$/;"	m	class:Shared.BrowserPlugin
Erase	lame/ACM/ACMStream.cpp	/^const bool ACMStream::Erase(const ACMStream * a_ACMStream)$/;"	f	class:ACMStream
Erase	lame/ACM/DecodeStream.cpp	/^const bool DecodeStream::Erase(const DecodeStream * a_ACMStream)$/;"	f	class:DecodeStream
Error	lame/ACM/tinyxml/tinyxml.h	/^	bool Error() const						{ return error; }$/;"	f	class:TiXmlDocument
ErrorDesc	lame/ACM/tinyxml/tinyxml.h	/^	const std::string& ErrorDesc() const	{ return errorDesc; }$/;"	f	class:TiXmlDocument
ErrorId	lame/ACM/tinyxml/tinyxml.h	/^	const int ErrorId()	const				{ return errorId; }$/;"	f	class:TiXmlDocument
ErrorTermination	OBSApi/Utility/DebugAlloc.cpp	/^void DefaultAlloc::ErrorTermination()$/;"	f	class:DefaultAlloc
ErrorTermination	OBSApi/Utility/FastAlloc.cpp	/^void   FastAlloc::ErrorTermination()$/;"	f	class:FastAlloc
Error_fp	lame/frontend/console.h	/^    FILE   *Error_fp;        \/* filepointer to stream fatal error reporting information *\/$/;"	m	struct:console_io_struct
EscapeLikeTheWind	Source/D3D10ShaderProcessor.cpp	29;"	d	file:
Euler	OBSApi/Utility/XMath.h	/^    inline Euler()                                              {}$/;"	f	struct:Euler
Euler	OBSApi/Utility/XMath.h	/^    inline Euler(float a, float b, float c) : x(a), y(b), z(c)  {}$/;"	f	struct:Euler
Euler	OBSApi/Utility/XMath.h	/^struct BASE_EXPORT Euler$/;"	s
EventDeleter	OBSApi/Utility/RAIIHelpers.h	/^struct EventDeleter$/;"	s
EventRegistrator	libmfx/src/mfx_dispatcher_log.cpp	/^    EventRegistrator(const wchar_t* sguid = DISPATCHER_LOG_EVENT_GUID)$/;"	f	class:EventRegistrator
EventRegistrator	libmfx/src/mfx_dispatcher_log.cpp	/^class EventRegistrator : public IMsgHandler$/;"	c	file:
Example.cpp	lame/Dll/Example.cpp	1;"	F
ExchangeSink	libmfx/src/mfx_dispatcher_log.cpp	/^void   DispatchLog::ExchangeSink(int nsink, IMsgHandler *oldHdl, IMsgHandler *newHdl)$/;"	f	class:DispatchLog
Execute	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserTask.cs	/^        protected override void Execute()$/;"	m	class:Browser.BrowserTask
Execute	libmfx/include/msdk/include/mfxplugin.h	/^    mfxStatus (MFX_CDECL *Execute)(mfxHDL pthis, mfxThreadTask task, mfxU32 uid_p, mfxU32 uid_a);$/;"	m	struct:mfxPlugin
ExecuteJS	CLRHostPlugin/CLRHostPlugin/CLRImageSource.cpp	/^void CLRImageSource::ExecuteJS(std::wstring lines)$/;"	f	class:CLRImageSource
ExecuteJS	CLRHostPlugin/CLRHostPlugin/ImageSourceBridge.h	/^	virtual void ExecuteJS(std::wstring lines)$/;"	f	class:ImageSourceBridge
ExitMP3	lame/mpglib/interface.c	/^ExitMP3(PMPSTR mp)$/;"	f
Exp	OBSApi/Utility/XMath.cpp	/^Quat& Quat::Exp()$/;"	f	class:Quat
ExpandRecordingFilename	Source/OBSCapture.cpp	/^String ExpandRecordingFilename(String filename)$/;"	f
ExpectToken	Source/D3D10ShaderProcessor.cpp	31;"	d	file:
ExpectToken	Source/D3D10ShaderProcessor.cpp	490;"	d	file:
ExpectToken	Source/D3D10ShaderProcessor.cpp	491;"	d	file:
ExpectTokenIgnore	Source/D3D10ShaderProcessor.cpp	32;"	d	file:
Export	OBSApi/Utility/XConfig.cpp	/^bool XElement::Export(CTSTR lpFile)$/;"	f	class:XElement
ExportProfile	Source/WindowStuff.cpp	/^void OBS::ExportProfile()$/;"	f	class:OBS
ExportSceneCollection	Source/WindowStuff.cpp	/^void OBS::ExportSceneCollection()$/;"	f	class:OBS
ExtBRC	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16      ExtBRC;                 \/* tri-state option *\/$/;"	m
ExtParam	libmfx/include/msdk/include/mfxastructures.h	/^    mfxExtBuffer **ExtParam;$/;"	m
ExtParam	libmfx/include/msdk/include/mfxastructures.h	/^    mfxExtBuffer**    ExtParam;$/;"	m
ExtParam	libmfx/include/msdk/include/mfxcommon.h	/^            mfxExtBuffer **ExtParam;$/;"	m
ExtParam	libmfx/include/msdk/include/mfxstructures.h	/^    mfxExtBuffer    **ExtParam;$/;"	m
ExtParam	libmfx/include/msdk/include/mfxstructures.h	/^    mfxExtBuffer** ExtParam;$/;"	m
ExtendedPicStruct	libmfx/include/msdk/include/mfxstructures.h	/^            mfxU16  ExtendedPicStruct;$/;"	m
Extensions	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^    internal static class Extensions$/;"	c	namespace:Shared
ExtentsAdjust	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	/^    float   ExtentsAdjust;$/;"	m	struct:_D3DCAPS8
ExtractI4	lame/libmp3lame/VbrTag.c	/^ExtractI4(const unsigned char *buf)$/;"	f	file:
F	lame/doc/html/detailed.html	/^<a name="F"><span class="hilight">-F<\/span><\/a> Enforce the minimum bitrate$/;"	a
F	librtmp/md5.c	51;"	d	file:
F1	Source/mongoose.c	4010;"	d	file:
F2	Source/mongoose.c	4011;"	d	file:
F3	Source/mongoose.c	4012;"	d	file:
F4	Source/mongoose.c	4013;"	d	file:
FAACAPI	libfaac/frame.h	55;"	d
FAACAPI	libfaac/frame.h	59;"	d
FAACAPI	libfaac/include/faac.h	31;"	d
FAACAPI	libfaac/include/faac.h	35;"	d
FAAC_CFG_VERSION	libfaac/include/faaccfg.h	25;"	d
FAAC_INPUT_16BIT	libfaac/include/faaccfg.h	39;"	d
FAAC_INPUT_24BIT	libfaac/include/faaccfg.h	40;"	d
FAAC_INPUT_32BIT	libfaac/include/faaccfg.h	41;"	d
FAAC_INPUT_FLOAT	libfaac/include/faaccfg.h	42;"	d
FAAC_INPUT_NULL	libfaac/include/faaccfg.h	38;"	d
FAAC_RELEASE	libfaac/version.h	4;"	d
FAAC_VERSION	libfaac/version.h	6;"	d
FALSE	OBSApi/Utility/Defs.h	120;"	d
FALSE	OBSApi/Utility/Defs.h	54;"	d
FALSE	Source/libnsgif.h	21;"	d
FALSE	lame/libmp3lame/util.h	41;"	d
FALSE	lame/mpglib/mpg123.h	57;"	d
FALSE	lame/mpglib/mpg123.h	74;"	d
FALSE	librtmp/amf.h	30;"	d
FAST_LOG	lame/libmp3lame/util.h	102;"	d
FAST_LOG	lame/libmp3lame/util.h	97;"	d
FAST_LOG10	lame/libmp3lame/util.h	101;"	d
FAST_LOG10	lame/libmp3lame/util.h	96;"	d
FAST_LOG10_X	lame/libmp3lame/util.h	103;"	d
FAST_LOG10_X	lame/libmp3lame/util.h	98;"	d
FAST_LOG_X	lame/libmp3lame/util.h	104;"	d
FAST_LOG_X	lame/libmp3lame/util.h	99;"	d
FCPublish	librtmp/rtmp.c	/^SAVC(FCPublish);$/;"	v
FCSubscribe	Source/RTMPStuff.h	/^SAVC(FCSubscribe);$/;"	v
FCSubscribe	librtmp/rtmp.c	/^SAVC(FCSubscribe);$/;"	v
FCUnpublish	librtmp/rtmp.c	/^SAVC(FCUnpublish);$/;"	v
FD_SETSIZE	Source/mongoose.c	104;"	d	file:
FFTOFFSET	lame/libmp3lame/encoder.h	83;"	d
FFT_ERR_LD	lame/misc/abx.c	175;"	d	file:
FFT_ERR_MAX	lame/misc/abx.c	176;"	d	file:
FFT_ERR_OK	lame/misc/abx.c	174;"	d	file:
FFT_Tables	libfaac/fft.h	/^} FFT_Tables;$/;"	t
FGREP	lame/ACM/ADbg/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	lame/ACM/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	lame/ACM/ddk/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	lame/ACM/tinyxml/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	lame/Dll/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	lame/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	lame/debian/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	lame/doc/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	lame/doc/html/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	lame/doc/man/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	lame/dshow/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	lame/frontend/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	lame/include/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	lame/libmp3lame/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	lame/libmp3lame/i386/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	lame/libmp3lame/vector/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	lame/mac/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	lame/macosx/English.lproj/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	lame/macosx/LAME.xcodeproj/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	lame/macosx/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	lame/misc/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	lame/mpglib/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	lame/vc_solution/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FIELD_ORDER_BFF	DShowPlugin/DShowPlugin.h	/^    FIELD_ORDER_BFF,$/;"	e	enum:DeinterlacingFieldOrder
FIELD_ORDER_NONE	DShowPlugin/DShowPlugin.h	/^    FIELD_ORDER_NONE,$/;"	e	enum:DeinterlacingFieldOrder
FIELD_ORDER_TFF	DShowPlugin/DShowPlugin.h	/^    FIELD_ORDER_TFF = 1,$/;"	e	enum:DeinterlacingFieldOrder
FILE_VERSION	QSVHelper/IntelSupport/include/current_date.h	6;"	d
FILE_VERSION_STRING	QSVHelper/IntelSupport/include/current_date.h	8;"	d
FILLED_BITSTREAM	QSVHelper/IPCInfo.h	36;"	d
FILTBANK_H	libfaac/filtbank.h	23;"	d
FILTER_NAME	DShowPlugin/CaptureFilter.cpp	23;"	d	file:
FILTER_NAME_PREFIX	QSVHelper/IntelSupport/include/current_date.h	10;"	d
FILTER_NAME_SUFFIX	QSVHelper/IntelSupport/include/current_date.h	12;"	d
FILTER_TAG_MAX_NB	lame/ACM/ACM.cpp	/^static const int FILTER_TAG_MAX_NB = 0; \/\/ this is a codec, not a filter$/;"	v	file:
FIRSTINTAB	libfaac/huffman.h	41;"	d
FIRST_PAIR_HCB	libfaac/bitstream.h	109;"	d
FLOAT	lame/Dll/BladeMP3EncDLL.h	75;"	d
FLOAT	lame/frontend/amiga_mpega.c	22;"	d	file:
FLOAT	lame/libmp3lame/machine.h	/^typedef float FLOAT;$/;"	t
FLOAT8	lame/libmp3lame/machine.h	/^typedef double FLOAT8;$/;"	t
FLOAT8_MAX	lame/libmp3lame/machine.h	147;"	d
FLOAT8_MAX	lame/libmp3lame/machine.h	149;"	d
FLOAT8_MAX	lame/libmp3lame/machine.h	153;"	d
FLOAT8_MAX	lame/libmp3lame/machine.h	155;"	d
FLOAT_CAST_HEADER	libsamplerate/float_cast.h	22;"	d
FLOAT_MAX	lame/libmp3lame/machine.h	132;"	d
FLOAT_MAX	lame/libmp3lame/machine.h	137;"	d
FLOAT_MAX	lame/libmp3lame/machine.h	139;"	d
FLOAT_TO_UNSIGNED	lame/frontend/get_audio.c	98;"	d	file:
FLVFileStream	Source/FLVFileStream.cpp	/^class FLVFileStream : public VideoFileStream$/;"	c	file:
FLVFileStream.cpp	Source/FLVFileStream.cpp	1;"	F
FORMAT_MAX_NB_PCM	lame/ACM/ACM.cpp	/^static const int FORMAT_MAX_NB_PCM =$/;"	v	file:
FORMAT_TAG_MAX_NB	lame/ACM/ACM.cpp	/^static const int FORMAT_TAG_MAX_NB = 2; \/\/ PCM and PERSONAL (mandatory to have at least PCM and your format)$/;"	v	file:
FP10	librtmp/handshake.h	84;"	d
FPSInfo	DShowPlugin/DShowPlugin.cpp	/^struct FPSInfo$/;"	s	file:
FPSInterval	DShowPlugin/DShowPlugin.cpp	/^    inline FPSInterval(UINT64 minVal, UINT64 maxVal) : minFrameInterval(minVal), maxFrameInterval(maxVal) {}$/;"	f	struct:FPSInterval
FPSInterval	DShowPlugin/DShowPlugin.cpp	/^struct FPSInterval$/;"	s	file:
FP_ONE	libsamplerate/src_sinc.c	41;"	d	file:
FRAMES_FLAG	lame/libmp3lame/VbrTag.h	43;"	d
FRAME_BUFF	QSVHelper/IPCInfo.h	42;"	d
FRAME_BUFF_STATUS	QSVHelper/IPCInfo.h	45;"	d
FRAME_H	libfaac/frame.h	23;"	d
FRAME_ID	lame/libmp3lame/id3tag.c	118;"	d	file:
FRAME_LEN	libfaac/coder.h	39;"	d
FRAME_LEN	libfaac/coder.h	43;"	d
FRAME_LEN	libfaac/coder.h	48;"	d
FRAME_QUEUE	QSVHelper/IPCInfo.h	48;"	d
FREEZE_WND	Source/WindowStuff.cpp	34;"	d	file:
FREE_MEM	Source/Server.h	43;"	d
FRONTEND_CFLAGS	lame/ACM/ADbg/Makefile	/^FRONTEND_CFLAGS =  $/;"	m
FRONTEND_CFLAGS	lame/ACM/Makefile	/^FRONTEND_CFLAGS =  $/;"	m
FRONTEND_CFLAGS	lame/ACM/ddk/Makefile	/^FRONTEND_CFLAGS =  $/;"	m
FRONTEND_CFLAGS	lame/ACM/tinyxml/Makefile	/^FRONTEND_CFLAGS =  $/;"	m
FRONTEND_CFLAGS	lame/Dll/Makefile	/^FRONTEND_CFLAGS =  $/;"	m
FRONTEND_CFLAGS	lame/Makefile	/^FRONTEND_CFLAGS =  $/;"	m
FRONTEND_CFLAGS	lame/debian/Makefile	/^FRONTEND_CFLAGS =  $/;"	m
FRONTEND_CFLAGS	lame/doc/Makefile	/^FRONTEND_CFLAGS =  $/;"	m
FRONTEND_CFLAGS	lame/doc/html/Makefile	/^FRONTEND_CFLAGS =  $/;"	m
FRONTEND_CFLAGS	lame/doc/man/Makefile	/^FRONTEND_CFLAGS =  $/;"	m
FRONTEND_CFLAGS	lame/dshow/Makefile	/^FRONTEND_CFLAGS =  $/;"	m
FRONTEND_CFLAGS	lame/frontend/Makefile	/^FRONTEND_CFLAGS =  $/;"	m
FRONTEND_CFLAGS	lame/include/Makefile	/^FRONTEND_CFLAGS =  $/;"	m
FRONTEND_CFLAGS	lame/libmp3lame/Makefile	/^FRONTEND_CFLAGS =  $/;"	m
FRONTEND_CFLAGS	lame/libmp3lame/i386/Makefile	/^FRONTEND_CFLAGS =  $/;"	m
FRONTEND_CFLAGS	lame/libmp3lame/vector/Makefile	/^FRONTEND_CFLAGS =  $/;"	m
FRONTEND_CFLAGS	lame/mac/Makefile	/^FRONTEND_CFLAGS =  $/;"	m
FRONTEND_CFLAGS	lame/macosx/English.lproj/Makefile	/^FRONTEND_CFLAGS =  $/;"	m
FRONTEND_CFLAGS	lame/macosx/LAME.xcodeproj/Makefile	/^FRONTEND_CFLAGS =  $/;"	m
FRONTEND_CFLAGS	lame/macosx/Makefile	/^FRONTEND_CFLAGS =  $/;"	m
FRONTEND_CFLAGS	lame/misc/Makefile	/^FRONTEND_CFLAGS =  $/;"	m
FRONTEND_CFLAGS	lame/mpglib/Makefile	/^FRONTEND_CFLAGS =  $/;"	m
FRONTEND_CFLAGS	lame/vc_solution/Makefile	/^FRONTEND_CFLAGS =  $/;"	m
FRONTEND_FILETOOLARGE	lame/include/lame.h	/^    FRONTEND_FILETOOLARGE = -82$/;"	e
FRONTEND_FILETOOLARGE	lame/libmp3lame/lameerror.h	/^    FRONTEND_FILETOOLARGE = -82,$/;"	e
FRONTEND_LDADD	lame/ACM/ADbg/Makefile	/^FRONTEND_LDADD =   -lm$/;"	m
FRONTEND_LDADD	lame/ACM/Makefile	/^FRONTEND_LDADD =   -lm$/;"	m
FRONTEND_LDADD	lame/ACM/ddk/Makefile	/^FRONTEND_LDADD =   -lm$/;"	m
FRONTEND_LDADD	lame/ACM/tinyxml/Makefile	/^FRONTEND_LDADD =   -lm$/;"	m
FRONTEND_LDADD	lame/Dll/Makefile	/^FRONTEND_LDADD =   -lm$/;"	m
FRONTEND_LDADD	lame/Makefile	/^FRONTEND_LDADD =   -lm$/;"	m
FRONTEND_LDADD	lame/debian/Makefile	/^FRONTEND_LDADD =   -lm$/;"	m
FRONTEND_LDADD	lame/doc/Makefile	/^FRONTEND_LDADD =   -lm$/;"	m
FRONTEND_LDADD	lame/doc/html/Makefile	/^FRONTEND_LDADD =   -lm$/;"	m
FRONTEND_LDADD	lame/doc/man/Makefile	/^FRONTEND_LDADD =   -lm$/;"	m
FRONTEND_LDADD	lame/dshow/Makefile	/^FRONTEND_LDADD =   -lm$/;"	m
FRONTEND_LDADD	lame/frontend/Makefile	/^FRONTEND_LDADD =   -lm$/;"	m
FRONTEND_LDADD	lame/include/Makefile	/^FRONTEND_LDADD =   -lm$/;"	m
FRONTEND_LDADD	lame/libmp3lame/Makefile	/^FRONTEND_LDADD =   -lm$/;"	m
FRONTEND_LDADD	lame/libmp3lame/i386/Makefile	/^FRONTEND_LDADD =   -lm$/;"	m
FRONTEND_LDADD	lame/libmp3lame/vector/Makefile	/^FRONTEND_LDADD =   -lm$/;"	m
FRONTEND_LDADD	lame/mac/Makefile	/^FRONTEND_LDADD =   -lm$/;"	m
FRONTEND_LDADD	lame/macosx/English.lproj/Makefile	/^FRONTEND_LDADD =   -lm$/;"	m
FRONTEND_LDADD	lame/macosx/LAME.xcodeproj/Makefile	/^FRONTEND_LDADD =   -lm$/;"	m
FRONTEND_LDADD	lame/macosx/Makefile	/^FRONTEND_LDADD =   -lm$/;"	m
FRONTEND_LDADD	lame/misc/Makefile	/^FRONTEND_LDADD =   -lm$/;"	m
FRONTEND_LDADD	lame/mpglib/Makefile	/^FRONTEND_LDADD =   -lm$/;"	m
FRONTEND_LDADD	lame/vc_solution/Makefile	/^FRONTEND_LDADD =   -lm$/;"	m
FRONTEND_LDFLAGS	lame/ACM/ADbg/Makefile	/^FRONTEND_LDFLAGS =  -static$/;"	m
FRONTEND_LDFLAGS	lame/ACM/Makefile	/^FRONTEND_LDFLAGS =  -static$/;"	m
FRONTEND_LDFLAGS	lame/ACM/ddk/Makefile	/^FRONTEND_LDFLAGS =  -static$/;"	m
FRONTEND_LDFLAGS	lame/ACM/tinyxml/Makefile	/^FRONTEND_LDFLAGS =  -static$/;"	m
FRONTEND_LDFLAGS	lame/Dll/Makefile	/^FRONTEND_LDFLAGS =  -static$/;"	m
FRONTEND_LDFLAGS	lame/Makefile	/^FRONTEND_LDFLAGS =  -static$/;"	m
FRONTEND_LDFLAGS	lame/debian/Makefile	/^FRONTEND_LDFLAGS =  -static$/;"	m
FRONTEND_LDFLAGS	lame/doc/Makefile	/^FRONTEND_LDFLAGS =  -static$/;"	m
FRONTEND_LDFLAGS	lame/doc/html/Makefile	/^FRONTEND_LDFLAGS =  -static$/;"	m
FRONTEND_LDFLAGS	lame/doc/man/Makefile	/^FRONTEND_LDFLAGS =  -static$/;"	m
FRONTEND_LDFLAGS	lame/dshow/Makefile	/^FRONTEND_LDFLAGS =  -static$/;"	m
FRONTEND_LDFLAGS	lame/frontend/Makefile	/^FRONTEND_LDFLAGS =  -static$/;"	m
FRONTEND_LDFLAGS	lame/include/Makefile	/^FRONTEND_LDFLAGS =  -static$/;"	m
FRONTEND_LDFLAGS	lame/libmp3lame/Makefile	/^FRONTEND_LDFLAGS =  -static$/;"	m
FRONTEND_LDFLAGS	lame/libmp3lame/i386/Makefile	/^FRONTEND_LDFLAGS =  -static$/;"	m
FRONTEND_LDFLAGS	lame/libmp3lame/vector/Makefile	/^FRONTEND_LDFLAGS =  -static$/;"	m
FRONTEND_LDFLAGS	lame/mac/Makefile	/^FRONTEND_LDFLAGS =  -static$/;"	m
FRONTEND_LDFLAGS	lame/macosx/English.lproj/Makefile	/^FRONTEND_LDFLAGS =  -static$/;"	m
FRONTEND_LDFLAGS	lame/macosx/LAME.xcodeproj/Makefile	/^FRONTEND_LDFLAGS =  -static$/;"	m
FRONTEND_LDFLAGS	lame/macosx/Makefile	/^FRONTEND_LDFLAGS =  -static$/;"	m
FRONTEND_LDFLAGS	lame/misc/Makefile	/^FRONTEND_LDFLAGS =  -static$/;"	m
FRONTEND_LDFLAGS	lame/mpglib/Makefile	/^FRONTEND_LDFLAGS =  -static$/;"	m
FRONTEND_LDFLAGS	lame/vc_solution/Makefile	/^FRONTEND_LDFLAGS =  -static$/;"	m
FRONTEND_READERROR	lame/include/lame.h	/^    FRONTEND_READERROR    = -80,$/;"	e
FRONTEND_READERROR	lame/libmp3lame/lameerror.h	/^    FRONTEND_READERROR = -80,$/;"	e
FRONTEND_WRITEERROR	lame/include/lame.h	/^    FRONTEND_WRITEERROR   = -81,$/;"	e
FRONTEND_WRITEERROR	lame/libmp3lame/lameerror.h	/^    FRONTEND_WRITEERROR = -81,$/;"	e
FUNCTION	libmfx/include/mfx_dispatcher.h	53;"	d
FUNCTION	libmfx/include/mfx_dispatcher.h	54;"	d
FUNCTION	libmfx/src/main.cpp	686;"	d	file:
FUNCTION	libmfx/src/main.cpp	687;"	d	file:
FUNCTION	libmfx/src/main.cpp	723;"	d	file:
FUNCTION	libmfx/src/main.cpp	724;"	d	file:
FUNCTION	libmfx/src/main.cpp	745;"	d	file:
FUNCTION	libmfx/src/main.cpp	746;"	d	file:
FUNCTION	libmfx/src/mfx_function_table.cpp	131;"	d	file:
FUNCTION	libmfx/src/mfx_function_table.cpp	132;"	d	file:
FUNCTION	libmfx/src/mfx_function_table.cpp	37;"	d	file:
FUNCTION	libmfx/src/mfx_function_table.cpp	38;"	d	file:
FUNCTION_DESCRIPTION	libmfx/include/mfx_dispatcher.h	/^struct FUNCTION_DESCRIPTION$/;"	s
FUNCTION_DESCRIPTION	libmfx/include/mfx_dispatcher.h	/^} FUNCTION_DESCRIPTION;$/;"	t
FVF	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    DWORD               FVF;$/;"	m	struct:_D3DVERTEXBUFFER_DESC
FVFCaps	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	/^    DWORD   FVFCaps;$/;"	m	struct:_D3DCAPS8
F_2IMM16	minhook/src/HDE32/hde32.h	34;"	d
F_DISP16	minhook/src/HDE32/hde32.h	31;"	d
F_DISP16	minhook/src/HDE64/include/hde64.h	32;"	d
F_DISP32	minhook/src/HDE32/hde32.h	32;"	d
F_DISP32	minhook/src/HDE64/include/hde64.h	33;"	d
F_DISP8	minhook/src/HDE32/hde32.h	30;"	d
F_DISP8	minhook/src/HDE64/include/hde64.h	31;"	d
F_ERROR	minhook/src/HDE32/hde32.h	35;"	d
F_ERROR	minhook/src/HDE64/include/hde64.h	35;"	d
F_ERROR_LENGTH	minhook/src/HDE32/hde32.h	37;"	d
F_ERROR_LENGTH	minhook/src/HDE64/include/hde64.h	37;"	d
F_ERROR_LOCK	minhook/src/HDE32/hde32.h	38;"	d
F_ERROR_LOCK	minhook/src/HDE64/include/hde64.h	38;"	d
F_ERROR_OPCODE	minhook/src/HDE32/hde32.h	36;"	d
F_ERROR_OPCODE	minhook/src/HDE64/include/hde64.h	36;"	d
F_ERROR_OPERAND	minhook/src/HDE32/hde32.h	39;"	d
F_ERROR_OPERAND	minhook/src/HDE64/include/hde64.h	39;"	d
F_IMM16	minhook/src/HDE32/hde32.h	28;"	d
F_IMM16	minhook/src/HDE64/include/hde64.h	28;"	d
F_IMM32	minhook/src/HDE32/hde32.h	29;"	d
F_IMM32	minhook/src/HDE64/include/hde64.h	29;"	d
F_IMM64	minhook/src/HDE64/include/hde64.h	30;"	d
F_IMM8	minhook/src/HDE32/hde32.h	27;"	d
F_IMM8	minhook/src/HDE64/include/hde64.h	27;"	d
F_MODRM	minhook/src/HDE32/hde32.h	25;"	d
F_MODRM	minhook/src/HDE64/include/hde64.h	25;"	d
F_PREFIX_66	minhook/src/HDE32/hde32.h	43;"	d
F_PREFIX_66	minhook/src/HDE64/include/hde64.h	43;"	d
F_PREFIX_67	minhook/src/HDE32/hde32.h	44;"	d
F_PREFIX_67	minhook/src/HDE64/include/hde64.h	44;"	d
F_PREFIX_ANY	minhook/src/HDE32/hde32.h	47;"	d
F_PREFIX_ANY	minhook/src/HDE64/include/hde64.h	48;"	d
F_PREFIX_LOCK	minhook/src/HDE32/hde32.h	45;"	d
F_PREFIX_LOCK	minhook/src/HDE64/include/hde64.h	45;"	d
F_PREFIX_REP	minhook/src/HDE32/hde32.h	42;"	d
F_PREFIX_REP	minhook/src/HDE64/include/hde64.h	42;"	d
F_PREFIX_REPNZ	minhook/src/HDE32/hde32.h	40;"	d
F_PREFIX_REPNZ	minhook/src/HDE64/include/hde64.h	40;"	d
F_PREFIX_REPX	minhook/src/HDE32/hde32.h	41;"	d
F_PREFIX_REPX	minhook/src/HDE64/include/hde64.h	41;"	d
F_PREFIX_REX	minhook/src/HDE64/include/hde64.h	47;"	d
F_PREFIX_SEG	minhook/src/HDE32/hde32.h	46;"	d
F_PREFIX_SEG	minhook/src/HDE64/include/hde64.h	46;"	d
F_RELATIVE	minhook/src/HDE32/hde32.h	33;"	d
F_RELATIVE	minhook/src/HDE64/include/hde64.h	34;"	d
F_SIB	minhook/src/HDE32/hde32.h	26;"	d
F_SIB	minhook/src/HDE64/include/hde64.h	26;"	d
FactoryRecord	libmfx/include/mfx_load_plugin.h	/^            FactoryRecord () {}$/;"	f	struct:MFX::MFXPluginFactory::FactoryRecord
FactoryRecord	libmfx/include/mfx_load_plugin.h	/^            FactoryRecord(const mfxPluginParam &plgParams,$/;"	f	struct:MFX::MFXPluginFactory::FactoryRecord
FactoryRecord	libmfx/include/mfx_load_plugin.h	/^        struct FactoryRecord {$/;"	s	class:MFX::MFXPluginFactory
Falloff	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    float           Falloff;          \/* Falloff *\/$/;"	m	struct:_D3DLIGHT8
FantasyFontFamily	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public string FantasyFontFamily { get; set; }$/;"	p	class:Shared.BrowserInstanceSettings
FastAlloc	OBSApi/Utility/FastAlloc.cpp	/^FastAlloc::FastAlloc()$/;"	f	class:FastAlloc
FastAlloc	OBSApi/Utility/FastAlloc.h	/^class BASE_EXPORT FastAlloc : public Alloc$/;"	c
FastAlloc.cpp	OBSApi/Utility/FastAlloc.cpp	1;"	F
FastAlloc.h	OBSApi/Utility/FastAlloc.h	1;"	F
FatalSocketShutdown	Source/RTMPPublisher.cpp	/^void RTMPPublisher::FatalSocketShutdown()$/;"	f	class:RTMPPublisher
FetchUpdaterModule	Source/Updater.cpp	/^BOOL FetchUpdaterModule(String const &url, String const &hash=String())$/;"	f
FieldOutput	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16      FieldOutput;            \/* tri-state option *\/$/;"	m
FileAccessFromFileUrls	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public CefState FileAccessFromFileUrls { get; set; }$/;"	p	class:Shared.BrowserInstanceSettings
FileSink	libmfx/include/mfx_dispatcher_log.h	/^    FileSink(const std::string & log_file)$/;"	f	class:FileSink
FileSink	libmfx/include/mfx_dispatcher_log.h	/^class FileSink $/;"	c
FillList	Source/OBS.cpp	/^bool FillList(GUID matchGUID, StringList *deviceList, StringList *deviceIDList)$/;"	f
FillOutListOfDevices	DShowPlugin/DShowPlugin.cpp	/^bool FillOutListOfDevices(HWND hwndCombo, GUID matchGUID, StringList *deviceList, StringList *deviceIDList)$/;"	f
FillSCD	QSVHelper/IntelSupport/src/d3d11_device.cpp	/^mfxStatus CD3D11Device::FillSCD(mfxHDL hWindow, DXGI_SWAP_CHAIN_DESC& scd)$/;"	f	class:CD3D11Device
FilterBank	libfaac/filtbank.c	/^void FilterBank(faacEncHandle hEncoder,$/;"	f
FilterBankEnd	libfaac/filtbank.c	/^void FilterBankEnd(faacEncHandle hEncoder)$/;"	f
FilterBankInit	libfaac/filtbank.c	/^void FilterBankInit(faacEncHandle hEncoder)$/;"	f
Find	lame/ACM/tinyxml/tinyxml.cpp	/^TiXmlAttribute*	TiXmlAttributeSet::Find( const std::string& name ) const$/;"	f	class:TiXmlAttributeSet
FindClosestBufferIndex	Source/RTMPPublisher.cpp	/^UINT RTMPPublisher::FindClosestBufferIndex(DWORD timestamp)$/;"	f	class:RTMPPublisher
FindClosestMatchingMode	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *FindClosestMatchingMode )( $/;"	m	struct:IDXGIOutput1Vtbl
FindClosestMatchingMode1	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *FindClosestMatchingMode1 )( $/;"	m	struct:IDXGIOutput1Vtbl
FindClosestQueueIndex	Source/RTMPPublisher.cpp	/^UINT RTMPPublisher::FindClosestQueueIndex(DWORD timestamp)$/;"	f	class:RTMPPublisher
FindExt	QSVHelper/QSVStuff.h	/^    bool FindExt(const T& t) const { return std::find(std::begin(ext_buffers), std::end(ext_buffers), reinterpret_cast<const mfxExtBuffer*>(&t)) != std::end(ext_buffers); }$/;"	f	struct:Parameters
FindFontFace	Source/TextOutputSource.cpp	/^UINT FindFontFace(ConfigTextSourceInfo *configInfo, HWND hwndFontList, CTSTR lpFontFace)$/;"	f
FindFontName	Source/TextOutputSource.cpp	/^UINT FindFontName(ConfigTextSourceInfo *configInfo, HWND hwndFontList, CTSTR lpFontFace)$/;"	f
FindGroupingBits	libfaac/bitstream.c	/^static int FindGroupingBits(CoderInfo *coderInfo)$/;"	f	file:
FindHook	minhook/src/hook.cpp	/^	HOOK_ENTRY* FindHook(void* const pTarget)$/;"	f	namespace:MinHook::<anonymous>
FindIgnoreCase	OBSApi/Utility/XString.cpp	/^BOOL String::FindIgnoreCase(CTSTR strContain)$/;"	f	class:String
FindNearestBitrate	lame/libmp3lame/util.c	/^FindNearestBitrate(int bRate, \/* legal rates from 8 to 320 *\/$/;"	f
FindNextValueIndex	OBSApi/Utility/Template.h	/^    inline UINT FindNextValueIndex(const T& val, UINT lastIndex=INVALID) const$/;"	f	class:List
FindNextValueIndexI	OBSApi/Utility/XString.h	/^    inline UINT FindNextValueIndexI(CTSTR lpStr, UINT lastIndex=INVALID) const$/;"	f	class:StringList
FindNextValueIndexI	OBSApi/Utility/XString.h	/^    inline UINT FindNextValueIndexI(const String& val, UINT lastIndex=INVALID) const$/;"	f	class:StringList
FindNode	OBSApi/Utility/XTLocalization.cpp	/^StringLookupNode *LocaleStringLookup::FindNode(CTSTR lookupVal, StringLookupNode *node) const$/;"	f	class:LocaleStringLookup
FindParent	Source/WindowStuff.cpp	/^static HMENU FindParent(HMENU root, UINT id, String *name=nullptr)$/;"	f	file:
FindPin	DShowPlugin/CaptureFilter.cpp	/^STDMETHODIMP CaptureFilter::FindPin(LPCWSTR Id, IPin **ppPin) {return E_NOTIMPL;}$/;"	f	class:CaptureFilter
FindProfile	OBSApi/Utility/Profiler.cpp	/^    static ProfileNodeInfo* FindProfile(CTSTR lpName)$/;"	f	struct:ProfileNodeInfo
FindReplace	OBSApi/Utility/XString.cpp	/^String& String::FindReplace(CTSTR strFind, CTSTR strReplace)$/;"	f	class:String
FindSceneCollection	Source/Main.cpp	/^String FindSceneCollection(String scenecollection)$/;"	f
FindSubNode	OBSApi/Utility/XTLocalization.cpp	/^    inline StringLookupNode* FindSubNode(CTSTR lpLookup)$/;"	f	struct:StringLookupNode
FindSubNodeByChar	OBSApi/Utility/XTLocalization.cpp	/^    inline StringLookupNode* FindSubNodeByChar(TCHAR ch)$/;"	f	struct:StringLookupNode
FindSubNodeID	OBSApi/Utility/XTLocalization.cpp	/^    inline UINT FindSubNodeID(CTSTR lpLookup)$/;"	f	struct:StringLookupNode
FindSubProfile	OBSApi/Utility/Profiler.cpp	/^    ProfileNodeInfo* FindSubProfile(CTSTR lpName)$/;"	f	struct:ProfileNodeInfo
FindValueIndex	OBSApi/Utility/Template.h	/^    inline UINT FindValueIndex(const T& val) const$/;"	f	class:List
FindValueIndexI	OBSApi/Utility/XString.h	/^    inline UINT FindValueIndexI(CTSTR lpStr) const$/;"	f	class:StringList
FindValueIndexI	OBSApi/Utility/XString.h	/^    inline UINT FindValueIndexI(const String& val) const$/;"	f	class:StringList
FindVisibleWindow	GraphicsCapture/GraphicsCaptureSource.cpp	/^HWND FindVisibleWindow(CTSTR lpClass, CTSTR lpTitle)$/;"	f
FindWindowData	GraphicsCapture/GraphicsCaptureSource.cpp	/^struct FindWindowData$/;"	s	file:
Finish	lame/dshow/Encoder.cpp	/^HRESULT CEncoder::Finish()$/;"	f	class:CEncoder
First	lame/ACM/tinyxml/tinyxml.h	/^	TiXmlAttribute* First() const	{ return ( sentinel.next == &sentinel ) ? 0 : sentinel.next; }$/;"	f	class:TiXmlAttributeSet
FirstAttribute	lame/ACM/tinyxml/tinyxml.h	/^	TiXmlAttribute* FirstAttribute() const	{ return attributeSet.First(); }		\/\/\/< Access the first attribute in this element.$/;"	f	class:TiXmlElement
FirstChild	lame/ACM/tinyxml/tinyxml.cpp	/^TiXmlNode* TiXmlNode::FirstChild( const std::string& value ) const$/;"	f	class:TiXmlNode
FirstChild	lame/ACM/tinyxml/tinyxml.h	/^	TiXmlNode* FirstChild()	const	{ return firstChild; }		\/\/\/< The first child of this node. Will be null if there are no children.$/;"	f	class:TiXmlNode
FirstChildElement	lame/ACM/tinyxml/tinyxml.cpp	/^TiXmlElement* TiXmlNode::FirstChildElement( const std::string& value ) const$/;"	f	class:TiXmlNode
FirstChildElement	lame/ACM/tinyxml/tinyxml.cpp	/^TiXmlElement* TiXmlNode::FirstChildElement() const$/;"	f	class:TiXmlNode
FitItemsToScreen	Source/WindowStuff.cpp	/^void OBS::FitItemsToScreen()$/;"	f	class:OBS
FixCopyTextureFormat	GraphicsCapture/GraphicsCaptureHook/DXGIStuff.h	/^inline DXGI_FORMAT FixCopyTextureFormat(DXGI_FORMAT format)$/;"	f
FixNoise	libfaac/aacquant.c	/^static int FixNoise(CoderInfo *coderInfo,$/;"	f	file:
FixedFontFamily	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public string FixedFontFamily { get; set; }$/;"	p	class:Shared.BrowserInstanceSettings
FixedFrameRate	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16      FixedFrameRate;         \/* tri-state option *\/$/;"	m
FlagPSSupportLev	libmfx/include/msdk/include/mfxastructures.h	/^            mfxU16       FlagPSSupportLev;$/;"	m
Flags	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    DWORD               Flags;$/;"	m	struct:_D3DPRESENT_PARAMETERS_
Flags	extras/dxgi1_2.h	/^    UINT Flags;$/;"	m	struct:DXGI_ADAPTER_DESC2
Flags	extras/dxgi1_2.h	/^    UINT Flags;$/;"	m	struct:DXGI_SWAP_CHAIN_DESC1
Flip	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	/^HRESULT STDMETHODCALLTYPE Flip(LPDIRECTDRAWSURFACE7 surface, LPDIRECTDRAWSURFACE7 lpDDSurface, DWORD flags)$/;"	f
FloatString	OBSApi/Utility/XString.cpp	/^String FloatString(double f)$/;"	f
Float_t	lame/libmp3lame/gain_analysis.h	/^    typedef sample_t Float_t; \/* Type used for filtering *\/$/;"	t
Floor	OBSApi/Utility/XMath.h	/^    inline Vect& Floor()                            {x=floorf(x); y=floorf(y); z=floorf(z); return *this;}$/;"	f	struct:Vect
Floor	OBSApi/Utility/XMath.h	/^    inline Vect2& Floor()                           {x=floorf(x); y=floorf(y); return *this;}$/;"	f	struct:Vect2
Floor	OBSApi/Utility/XMath.h	/^    inline Vect4& Floor()                             {x=floorf(x); y=floorf(y); z=floorf(z); w=floorf(w); return *this;}$/;"	f	struct:Vect4
Flush	OBSApi/Utility/XFile.h	/^    void Flush()$/;"	f	class:XFileOutputSerializer
FlushBufferedPackets	Source/RTMPPublisher.cpp	/^void RTMPPublisher::FlushBufferedPackets()$/;"	f	class:RTMPPublisher
FlushBufferedVideo	Source/OBSVideoCapture.cpp	/^UINT OBS::FlushBufferedVideo()$/;"	f	class:OBS
FlushBuffers	Source/D3D10VertexBuffer.cpp	/^void D3D10VertexBuffer::FlushBuffers()$/;"	f	class:D3D10VertexBuffer
FlushDataBuffer	Source/RTMPPublisher.cpp	/^int RTMPPublisher::FlushDataBuffer()$/;"	f	class:RTMPPublisher
FlushEncodedSamples	lame/dshow/Mpegac.cpp	/^HRESULT CMpegAudEnc::FlushEncodedSamples()$/;"	f	class:CMpegAudEnc
FlushFileBuffers	OBSApi/Utility/XFile_Windows.cpp	/^void XFile::FlushFileBuffers()$/;"	f	class:XFile
FlushSamples	DShowPlugin/DeviceAudio.cpp	/^void DeviceAudioSource::FlushSamples()$/;"	f	class:DeviceAudioSource
FlushSamples	DShowPlugin/DeviceSource.h	/^    void FlushSamples()$/;"	f	class:DeviceSource
FontEnumProcThingy	Source/TextOutputSource.cpp	/^int CALLBACK FontEnumProcThingy(ENUMLOGFONTEX *logicalData, NEWTEXTMETRICEX *physicalData, DWORD fontType, ConfigTextSourceInfo *configInfo)$/;"	f
FontInfo	Source/OBS.h	/^struct FontInfo$/;"	s
Fonts	Source/OBS.h	/^    List<FontInfo> Fonts;$/;"	m	class:OBS
ForEach	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public static void ForEach<T>(this IEnumerable<T> ie, Action<T> action)$/;"	m	class:Shared.Extensions
Format	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DFORMAT           Format;$/;"	m	struct:_D3DINDEXBUFFER_DESC
Format	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DFORMAT           Format;$/;"	m	struct:_D3DSURFACE_DESC
Format	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DFORMAT           Format;$/;"	m	struct:_D3DVERTEXBUFFER_DESC
Format	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DFORMAT           Format;$/;"	m	struct:_D3DVOLUME_DESC
Format	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DFORMAT       Format;$/;"	m	struct:_D3DDISPLAYMODE
Format	extras/dxgi1_2.h	/^    DXGI_FORMAT Format;$/;"	m	struct:DXGI_MODE_DESC1
Format	extras/dxgi1_2.h	/^    DXGI_FORMAT Format;$/;"	m	struct:DXGI_SWAP_CHAIN_DESC1
FormattedString	OBSApi/Utility/XString.cpp	/^String FormattedString(CTSTR lpFormat, ...)$/;"	f
FormattedStringva	OBSApi/Utility/XString.cpp	/^String FormattedStringva(CTSTR lpFormat, va_list arglist)$/;"	f
FourCC	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU32  FourCC;$/;"	m
Fps	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public int Fps { get; set; }$/;"	p	class:Shared.BrowserSourceSettings
FrameAllocator	libmfx/include/msdk/include/mfxplugin++.h	/^    mfxFrameAllocator & FrameAllocator() {$/;"	f	class:MFXCoreInterface
FrameAllocator	libmfx/include/msdk/include/mfxplugin.h	/^    mfxFrameAllocator FrameAllocator;$/;"	m	struct:mfxCoreInterface
FrameAudio	Source/OBS.h	/^struct FrameAudio$/;"	s
FrameDataNode	lame/libmp3lame/id3tag.h	/^typedef struct FrameDataNode {$/;"	s
FrameDataNode	lame/libmp3lame/id3tag.h	/^} FrameDataNode;$/;"	t
FrameId	libmfx/include/msdk/include/mfxstructures.h	/^    mfxFrameId FrameId;$/;"	m
FrameInfo	libmfx/include/msdk/include/mfxstructures.h	/^    mfxFrameInfo    FrameInfo;$/;"	m
FrameOrder	libmfx/include/msdk/include/mfxstructures.h	/^            mfxU32      FrameOrder;$/;"	m
FrameOrder	libmfx/include/msdk/include/mfxstructures.h	/^        mfxU32      FrameOrder;$/;"	m	struct:<anonymous>::mfxRefPic
FrameOrder	libmfx/include/msdk/include/mfxstructures.h	/^        mfxU32      FrameOrder;$/;"	m
FrameOrder	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU32          FrameOrder;$/;"	m
FrameOrder	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU32      FrameOrder;$/;"	m
FramePicture	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16      FramePicture;           \/* tri-state option *\/$/;"	m
FrameProcessInfo	Source/OBSVideoCapture.cpp	/^struct FrameProcessInfo$/;"	s	file:
FrameRateExtD	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU32  FrameRateExtD;$/;"	m
FrameRateExtN	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU32  FrameRateExtN;$/;"	m
FrameType	libmfx/include/msdk/include/mfxcommon.h	/^    mfxU16  FrameType;$/;"	m
FrameType	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16  FrameType;$/;"	m
Free	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	/^    void Free()$/;"	f	class:Palette
Free	OBSApi/Utility/Alloc.h	/^inline void Free(void *lpData)   {MainAllocator->_Free(lpData);}$/;"	f
Free	libmfx/include/msdk/include/mfxvideo.h	/^    mfxStatus  (MFX_CDECL  *Free)     (mfxHDL pthis, mfxFrameAllocResponse *response);$/;"	m
Free	libmfx/include/msdk/include/mfxvideo.h	/^    mfxStatus  (MFX_CDECL *Free)     (mfxHDL pthis, mfxMemId mid);$/;"	m
FreeBuffer	minhook/src/buffer.cpp	/^	void FreeBuffer(void* const pBuffer)$/;"	f	namespace:MinHook
FreeD3D9Capture	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^void FreeD3D9Capture()$/;"	f
FreeDXGICapture	GraphicsCapture/GraphicsCaptureHook/DXGICapture.cpp	/^void FreeDXGICapture()$/;"	f
FreeData	DShowPlugin/MediaInfoStuff.h	/^    inline void FreeData()$/;"	f	struct:MediaOutputInfo
FreeData	OBSApi/Utility/Profiler.cpp	/^    void FreeData()$/;"	f	struct:ProfileNodeInfo
FreeData	Source/D3D10System.h	/^    inline void FreeData()$/;"	f	struct:ShaderParam
FreeData	Source/D3D10System.h	/^    inline void FreeData()$/;"	f	struct:ShaderProcessor
FreeData	Source/D3D10System.h	/^    inline void FreeData()$/;"	f	struct:ShaderSampler
FreeData	Source/Encoder_MP3.cpp	/^    inline void FreeData() {Packet.Clear();}$/;"	f	struct:AACDataPacket
FreeData	Source/Encoder_QSV.cpp	/^    inline void FreeData() {Packet.Clear();}$/;"	f	struct:VideoPacket
FreeData	Source/Encoder_x264.cpp	/^    inline void FreeData() {Packet.Clear();}$/;"	f	struct:VideoPacket
FreeData	Source/MMDeviceAudioSource.cpp	/^    void FreeData()$/;"	f	class:MMDeviceAudioSource	file:
FreeData	Source/OBS.h	/^    inline void FreeData() {strClass.Clear(); strName.Clear();}$/;"	f	struct:ClassInfo
FreeData	Source/OBS.h	/^    inline void FreeData() {strID.Clear(); strName.Clear();}$/;"	f	struct:AudioDeviceInfo
FreeData	Source/OBS.h	/^    inline void FreeData() {strInfo.Clear();}$/;"	f	struct:StreamInfo
FreeData	Source/OBS.h	/^    inline void FreeData() {strName.Clear(); delete source; source = NULL;}$/;"	f	struct:GlobalSourceInfo
FreeData	Source/OBS.h	/^    inline void FreeData()$/;"	f	struct:AudioDeviceList
FreeFrames	QSVHelper/IntelSupport/src/base_allocator.cpp	/^mfxStatus BaseFrameAllocator::FreeFrames(mfxFrameAllocResponse *response)$/;"	f	class:BaseFrameAllocator
FreeGLCapture	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^void FreeGLCapture()$/;"	f
FreeMediaType	DShowPlugin/MediaInfoStuff.cpp	/^void WINAPI FreeMediaType(AM_MEDIA_TYPE& mt)$/;"	f
FreeMemInfo	OBSApi/Utility/FastAlloc.cpp	/^struct FreeMemInfo$/;"	s	file:
FreeMemory	QSVHelper/WindowsStuff.h	/^    void FreeMemory() { if(memory) UnmapViewOfFile(memory); memory = nullptr; }$/;"	f	struct:NamedSharedMemory
FreeMemory	libfaac/util.h	45;"	d
FreeProfileData	OBSApi/Utility/Profiler.cpp	/^void STDCALL FreeProfileData()$/;"	f
FreeResources	libmfx/include/msdk/include/mfxplugin.h	/^    mfxStatus (MFX_CDECL *FreeResources)(mfxHDL pthis, mfxThreadTask task, mfxStatus sts);$/;"	m	struct:mfxPlugin
Free_	QSVHelper/IntelSupport/src/base_allocator.cpp	/^mfxStatus MFXBufferAllocator::Free_(mfxHDL pthis, mfxMemId mid)$/;"	f	class:MFXBufferAllocator
Free_	QSVHelper/IntelSupport/src/base_allocator.cpp	/^mfxStatus MFXFrameAllocator::Free_(mfxHDL pthis, mfxFrameAllocResponse *response)$/;"	f	class:MFXFrameAllocator
Freeze	minhook/src/thread.cpp	/^	void ScopedThreadExclusive::Freeze($/;"	f	class:MinHook::ScopedThreadExclusive
Front	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    UINT                Front;$/;"	m	struct:_D3DBOX
Frustum	OBSApi/GraphicsSystem.h	/^inline void  Frustum(float left, float right, float top, float bottom, float znear, float zfar)$/;"	f
Frustum	Source/D3D10System.cpp	/^void D3D10System::Frustum(float left, float right, float top, float bottom, float znear, float zfar)$/;"	f	class:D3D10System
FullScreen_PresentationInterval	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    UINT                FullScreen_PresentationInterval;$/;"	m	struct:_D3DPRESENT_PARAMETERS_
FullScreen_RefreshRateInHz	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    UINT                FullScreen_RefreshRateInHz;$/;"	m	struct:_D3DPRESENT_PARAMETERS_
FullTimestampFlag	libmfx/include/msdk/include/mfxstructures.h	/^      mfxU16    FullTimestampFlag;$/;"	m
FutureShader	OBSApi/GraphicsSystem.cpp	/^template class BASE_EXPORT FutureShader<CreatePixelShaderFromBlob>;$/;"	v
FutureShader	OBSApi/GraphicsSystem.cpp	/^template class BASE_EXPORT FutureShader<CreateVertexShaderFromBlob>;$/;"	v
FutureShader	OBSApi/GraphicsSystem.h	/^    FutureShader() {}$/;"	f	class:FutureShader
FutureShader	OBSApi/GraphicsSystem.h	/^    FutureShader(FutureShader &&other)$/;"	f	class:FutureShader
FutureShader	OBSApi/GraphicsSystem.h	/^    FutureShader(HANDLE event_, ShaderBlob const &data, std::wstring const &fileData, std::wstring fileName) : shaderData(&data), fileData(&fileData), fileName(fileName), shaderReadyEvent(event_) {}$/;"	f	class:FutureShader
FutureShader	OBSApi/GraphicsSystem.h	/^class BASE_EXPORT FutureShader$/;"	c
FutureShaderContainer	OBSApi/GraphicsSystem.h	/^        FutureShaderContainer() : lock(OSCreateMutex()) {}$/;"	f	struct:GraphicsSystem::FutureShaderContainer
FutureShaderContainer	OBSApi/GraphicsSystem.h	/^    struct FutureShaderContainer$/;"	s	class:GraphicsSystem
FutureShaderContext	OBSApi/GraphicsSystem.h	/^        struct FutureShaderContext$/;"	s	struct:GraphicsSystem::FutureShaderContainer
G	libmfx/include/msdk/include/mfxstructures.h	/^        mfxU16   G;$/;"	m
G	libmfx/include/msdk/include/mfxstructures.h	/^        mfxU8   *G;$/;"	m
G	librtmp/md5.c	52;"	d	file:
GAIN_ANALYSIS_ERROR	lame/libmp3lame/gain_analysis.h	/^    enum { GAIN_NOT_ENOUGH_SAMPLES = -24601, GAIN_ANALYSIS_ERROR = 0, GAIN_ANALYSIS_OK =$/;"	e
GAIN_ANALYSIS_H	lame/libmp3lame/gain_analysis.h	29;"	d
GAIN_ANALYSIS_OK	lame/libmp3lame/gain_analysis.h	/^    enum { GAIN_NOT_ENOUGH_SAMPLES = -24601, GAIN_ANALYSIS_ERROR = 0, GAIN_ANALYSIS_OK =$/;"	e
GAIN_NOT_ENOUGH_SAMPLES	lame/libmp3lame/gain_analysis.h	/^    enum { GAIN_NOT_ENOUGH_SAMPLES = -24601, GAIN_ANALYSIS_ERROR = 0, GAIN_ANALYSIS_OK =$/;"	e
GA_URS_IFLOOP	lame/frontend/get_audio.c	1184;"	d	file:
GA_URS_IFLOOP	lame/frontend/get_audio.c	1215;"	d	file:
GENRE_ALPHA_COUNT	lame/libmp3lame/id3tag.c	113;"	d	file:
GENRE_INDEX_OTHER	lame/libmp3lame/id3tag.c	115;"	d	file:
GENRE_NAME_COUNT	lame/libmp3lame/id3tag.c	98;"	d	file:
GENRE_NUM_UNKNOWN	lame/libmp3lame/id3tag.c	276;"	d	file:
GET	librtmp/md5.c	75;"	d	file:
GET	librtmp/md5.c	84;"	d	file:
GETPLUGINDESCRIPTIONPROC	Source/WindowStuff.cpp	/^typedef CTSTR (*GETPLUGINDESCRIPTIONPROC)();$/;"	t	file:
GETPLUGINNAMEPROC	Source/OBS.cpp	/^typedef CTSTR (*GETPLUGINNAMEPROC)();$/;"	t	file:
GETPLUGINNAMEPROC	Source/WindowStuff.cpp	/^typedef CTSTR (*GETPLUGINNAMEPROC)();$/;"	t	file:
GET_DATARATE	lame/dshow/Mpegac.cpp	71;"	d	file:
GET_FRAMELENGTH	lame/dshow/Mpegac.cpp	72;"	d	file:
GIF_BLOCK_TERMINATOR	Source/libnsgif.c	112;"	d	file:
GIF_COLOUR_TABLE_MASK	Source/libnsgif.c	103;"	d	file:
GIF_COLOUR_TABLE_SIZE_MASK	Source/libnsgif.c	104;"	d	file:
GIF_DATA_ERROR	Source/libnsgif.h	/^    GIF_DATA_ERROR = -4,$/;"	e
GIF_DISPOSAL_MASK	Source/libnsgif.c	107;"	d	file:
GIF_END_OF_FRAME	Source/libnsgif.h	/^    GIF_END_OF_FRAME = -7$/;"	e
GIF_EXTENSION_APPLICATION	Source/libnsgif.c	111;"	d	file:
GIF_EXTENSION_COMMENT	Source/libnsgif.c	109;"	d	file:
GIF_EXTENSION_GRAPHIC_CONTROL	Source/libnsgif.c	106;"	d	file:
GIF_EXTENSION_INTRODUCER	Source/libnsgif.c	105;"	d	file:
GIF_EXTENSION_PLAIN_TEXT	Source/libnsgif.c	110;"	d	file:
GIF_FRAME_CLEAR	Source/libnsgif.c	98;"	d	file:
GIF_FRAME_COMBINE	Source/libnsgif.c	97;"	d	file:
GIF_FRAME_DATA_ERROR	Source/libnsgif.h	/^    GIF_FRAME_DATA_ERROR = -2,$/;"	e
GIF_FRAME_NO_DISPLAY	Source/libnsgif.h	/^    GIF_FRAME_NO_DISPLAY = -6,$/;"	e
GIF_FRAME_QUIRKS_RESTORE	Source/libnsgif.c	100;"	d	file:
GIF_FRAME_RESTORE	Source/libnsgif.c	99;"	d	file:
GIF_IMAGE_SEPARATOR	Source/libnsgif.c	101;"	d	file:
GIF_INSUFFICIENT_DATA	Source/libnsgif.h	/^    GIF_INSUFFICIENT_DATA = -3,$/;"	e
GIF_INSUFFICIENT_FRAME_DATA	Source/libnsgif.h	/^    GIF_INSUFFICIENT_FRAME_DATA = -1,$/;"	e
GIF_INSUFFICIENT_MEMORY	Source/libnsgif.h	/^    GIF_INSUFFICIENT_MEMORY = -5,$/;"	e
GIF_INTERLACE_MASK	Source/libnsgif.c	102;"	d	file:
GIF_INVALID_FRAME	Source/libnsgif.c	89;"	d	file:
GIF_MAX_COLOURS	Source/libnsgif.c	81;"	d	file:
GIF_MAX_LZW	Source/libnsgif.h	47;"	d
GIF_OK	Source/libnsgif.h	/^    GIF_OK = 0,$/;"	e
GIF_PROCESS_COLOURS	Source/libnsgif.c	85;"	d	file:
GIF_TRAILER	Source/libnsgif.c	113;"	d	file:
GIF_TRANSPARENCY_MASK	Source/libnsgif.c	108;"	d	file:
GIF_TRANSPARENT_COLOUR	Source/libnsgif.c	93;"	d	file:
GIF_WORKING	Source/libnsgif.h	/^    GIF_WORKING = 1,$/;"	e
GLBINDBUFFERPROC	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^typedef void      (WINAPI *GLBINDBUFFERPROC)(GLenum target, GLuint buffer);$/;"	t	file:
GLBINDFRAMEBUFFERPROC	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^typedef void (WINAPI *GLBINDFRAMEBUFFERPROC)(GLenum target, GLuint framebuffer);$/;"	t	file:
GLBINDTEXTUREPROC	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^typedef void      (WINAPI *GLBINDTEXTUREPROC)(GLenum target, GLuint texture);$/;"	t	file:
GLBLITFRAMEBUFFERPROC	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^typedef void (WINAPI *GLBLITFRAMEBUFFERPROC)(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);$/;"	t	file:
GLBUFFERDATAARBPROC	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^typedef void      (WINAPI *GLBUFFERDATAARBPROC) (GLenum target, GLsizeiptrARB size, const GLvoid* data, GLenum usage);$/;"	t	file:
GLDELETEBUFFERSARBPROC	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^typedef void      (WINAPI *GLDELETEBUFFERSARBPROC)(GLsizei n, const GLuint* buffers);$/;"	t	file:
GLDELETEFRAMEBUFFERSPROC	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^typedef void (WINAPI *GLDELETEFRAMEBUFFERSPROC)(GLsizei n, GLuint *framebuffers);$/;"	t	file:
GLDELETETEXTURESPROC	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^typedef void      (WINAPI *GLDELETETEXTURESPROC)(GLsizei n, const GLuint* buffers);$/;"	t	file:
GLDRAWBUFFERPROC	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^typedef void   (WINAPI *GLDRAWBUFFERPROC)(GLenum mode);$/;"	t	file:
GLFRAMEBUFFERTEXTURE2DPROC	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^typedef void (WINAPI *GLFRAMEBUFFERTEXTURE2DPROC)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	t	file:
GLGENBUFFERSARBPROC	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^typedef void      (WINAPI *GLGENBUFFERSARBPROC)(GLsizei n, GLuint* buffers);$/;"	t	file:
GLGENFRAMEBUFFERSPROC	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^typedef void (WINAPI *GLGENFRAMEBUFFERSPROC)(GLsizei n, GLuint* buffers);$/;"	t	file:
GLGENTEXTURESPROC	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^typedef void      (WINAPI *GLGENTEXTURESPROC)(GLsizei n, GLuint* textures);$/;"	t	file:
GLGETERRORPROC	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^typedef GLenum (WINAPI *GLGETERRORPROC)();$/;"	t	file:
GLGETINTEGERVPROC	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^typedef void   (WINAPI *GLGETINTEGERVPROC)(GLenum pname, GLint *params);$/;"	t	file:
GLMAPBUFFERPROC	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^typedef GLvoid*   (WINAPI *GLMAPBUFFERPROC)(GLenum target, GLenum access);$/;"	t	file:
GLOBAL_AUTH_FILE	Source/mongoose.c	/^  GLOBAL_AUTH_FILE,$/;"	e	file:
GLREADBUFFERPROC	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^typedef void   (WINAPI *GLREADBUFFERPROC)(GLenum);$/;"	t	file:
GLREADPIXELSPROC	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^typedef void   (WINAPI *GLREADPIXELSPROC)(GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLvoid*);$/;"	t	file:
GLUNMAPBUFFERPROC	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^typedef GLboolean (WINAPI *GLUNMAPBUFFERPROC)(GLenum target);$/;"	t	file:
GLUsable	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^static bool GLUsable = true;$/;"	v	file:
GL_BACK	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	51;"	d	file:
GL_BGR	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	58;"	d	file:
GL_BGRA	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	59;"	d	file:
GL_BUFFER_ACCESS	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	67;"	d	file:
GL_BUFFER_MAPPED	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	68;"	d	file:
GL_BUFFER_MAP_POINTER	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	69;"	d	file:
GL_COLOR_ATTACHMENT0	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	222;"	d	file:
GL_COLOR_ATTACHMENT1	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	223;"	d	file:
GL_COLOR_BUFFER_BIT	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	221;"	d	file:
GL_DRAW_FRAMEBUFFER	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	220;"	d	file:
GL_DRAW_FRAMEBUFFER_BINDING	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	86;"	d	file:
GL_DYNAMIC_COPY	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	78;"	d	file:
GL_DYNAMIC_DRAW	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	76;"	d	file:
GL_DYNAMIC_READ	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	77;"	d	file:
GL_FRONT	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	50;"	d	file:
GL_LINEAR	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	62;"	d	file:
GL_NEAREST	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	61;"	d	file:
GL_PIXEL_PACK_BUFFER	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	79;"	d	file:
GL_PIXEL_PACK_BUFFER_BINDING	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	81;"	d	file:
GL_PIXEL_UNPACK_BUFFER	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	80;"	d	file:
GL_PIXEL_UNPACK_BUFFER_BINDING	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	82;"	d	file:
GL_READ_FRAMEBUFFER	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	219;"	d	file:
GL_READ_ONLY	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	64;"	d	file:
GL_READ_WRITE	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	66;"	d	file:
GL_RGB	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	55;"	d	file:
GL_RGBA	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	56;"	d	file:
GL_STATIC_COPY	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	75;"	d	file:
GL_STATIC_DRAW	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	73;"	d	file:
GL_STATIC_READ	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	74;"	d	file:
GL_STREAM_COPY	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	72;"	d	file:
GL_STREAM_DRAW	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	70;"	d	file:
GL_STREAM_READ	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	71;"	d	file:
GL_TEXTURE_2D	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	84;"	d	file:
GL_TEXTURE_BINDING_2D	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	85;"	d	file:
GL_UNSIGNED_BYTE	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	53;"	d	file:
GL_WRITE_ONLY	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	65;"	d	file:
GLbitfield	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^typedef unsigned int GLbitfield;$/;"	t	file:
GLboolean	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^typedef unsigned char GLboolean;$/;"	t	file:
GLbyte	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^typedef signed char GLbyte;$/;"	t	file:
GLclampd	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^typedef double GLclampd;$/;"	t	file:
GLclampf	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^typedef float GLclampf;$/;"	t	file:
GLdouble	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^typedef double GLdouble;$/;"	t	file:
GLenum	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^typedef unsigned int GLenum;$/;"	t	file:
GLfloat	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^typedef float GLfloat;$/;"	t	file:
GLint	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^typedef int GLint;$/;"	t	file:
GLintptrARB	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^typedef ptrdiff_t GLintptrARB;$/;"	t	file:
GLshort	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^typedef short GLshort;$/;"	t	file:
GLsizei	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^typedef int GLsizei;$/;"	t	file:
GLsizeiptrARB	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^typedef ptrdiff_t GLsizeiptrARB;$/;"	t	file:
GLubyte	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^typedef unsigned char GLubyte;$/;"	t	file:
GLuint	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^typedef unsigned int GLuint;$/;"	t	file:
GLulong	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^typedef unsigned long GLulong;$/;"	t	file:
GLushort	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^typedef unsigned short GLushort;$/;"	t	file:
GLvoid	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^typedef void GLvoid;$/;"	t	file:
GM_SERVER_PORT	OBSApi/Utility/XT.cpp	/^int GM_SERVER_PORT = 2881;$/;"	v
GP	libfaac/bitstream.c	1422;"	d	file:
GRAPHICSCAPTURE_CLASSNAME	GraphicsCapture/GraphicsCapture.cpp	33;"	d	file:
GREP	lame/ACM/ADbg/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	lame/ACM/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	lame/ACM/ddk/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	lame/ACM/tinyxml/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	lame/Dll/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	lame/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	lame/debian/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	lame/doc/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	lame/doc/html/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	lame/doc/man/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	lame/dshow/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	lame/frontend/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	lame/include/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	lame/libmp3lame/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	lame/libmp3lame/i386/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	lame/libmp3lame/vector/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	lame/mac/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	lame/macosx/English.lproj/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	lame/macosx/LAME.xcodeproj/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	lame/macosx/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	lame/misc/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	lame/mpglib/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	lame/vc_solution/Makefile	/^GREP = \/bin\/grep$/;"	m
GS	OBSApi/GraphicsSystem.cpp	/^GraphicsSystem *GS = NULL;$/;"	v
GSAddressMode	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^    public enum class GSAddressMode$/;"	c	class:CLROBS::GSSampleFilter
GSAddressMode	OBSApi/GraphicsSystem.h	/^enum GSAddressMode$/;"	g
GSBlendType	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^    public enum class GSBlendType {$/;"	c	namespace:CLROBS
GSBlendType	OBSApi/GraphicsSystem.h	/^enum GSBlendType {GS_BLEND_ZERO, GS_BLEND_ONE, GS_BLEND_SRCCOLOR, GS_BLEND_INVSRCCOLOR, GS_BLEND_SRCALPHA, GS_BLEND_INVSRCALPHA, GS_BLEND_DSTCOLOR, GS_BLEND_INVDSTCOLOR, GS_BLEND_DSTALPHA, GS_BLEND_INVDSTALPHA, GS_BLEND_FACTOR, GS_BLEND_INVFACTOR};$/;"	g
GSColorFormat	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^    public enum class GSColorFormat {$/;"	c	namespace:CLROBS
GSColorFormat	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.h	/^enum GSColorFormat {GS_UNKNOWNFORMAT, GS_ALPHA, GS_GRAYSCALE, GS_RGB, GS_RGBA, GS_BGR, GS_BGRA, GS_RGBA16F, GS_RGBA32F, GS_B5G5R5A1, GS_B5G6R5, GS_R10G10B10A2, GS_DXT1, GS_DXT3, GS_DXT5};$/;"	g
GSColorFormat	OBSApi/GraphicsSystem.h	/^enum GSColorFormat {GS_UNKNOWNFORMAT, GS_ALPHA, GS_GRAYSCALE, GS_RGB, GS_RGBA, GS_BGR, GS_BGRA, GS_RGBA16F, GS_RGBA32F, GS_B5G5R5A1, GS_B5G6R5, GS_R10G10B10A2, GS_DXT1, GS_DXT3, GS_DXT5};$/;"	g
GSDrawMode	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^    public enum class GSDrawMode {$/;"	c	namespace:CLROBS
GSDrawMode	OBSApi/GraphicsSystem.h	/^enum GSDrawMode {GS_POINTS, GS_LINES, GS_LINESTRIP, GS_TRIANGLES, GS_TRIANGLESTRIP};$/;"	g
GSImageFormat	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^    public enum class GSImageFormat$/;"	c	class:CLROBS::GSSampleFilter::GSAddressMode
GSImageFormat	OBSApi/GraphicsSystem.h	/^enum GSImageFormat$/;"	g
GSIndexType	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^    public enum class GSIndexType {$/;"	c	namespace:CLROBS
GSIndexType	OBSApi/GraphicsSystem.h	/^enum GSIndexType {GS_UNSIGNED_SHORT, GS_UNSIGNED_LONG};$/;"	g
GSSampleFilter	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^    public enum class GSSampleFilter$/;"	c	namespace:CLROBS
GSSampleFilter	OBSApi/GraphicsSystem.h	/^enum GSSampleFilter$/;"	g
GS_ADDRESS_BORDER	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        GS_ADDRESS_BORDER,$/;"	m	class:CLROBS::GSSampleFilter::GSAddressMode
GS_ADDRESS_BORDER	OBSApi/GraphicsSystem.h	/^    GS_ADDRESS_BORDER,$/;"	e	enum:GSAddressMode
GS_ADDRESS_CLAMP	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        GS_ADDRESS_CLAMP,$/;"	m	class:CLROBS::GSSampleFilter::GSAddressMode
GS_ADDRESS_CLAMP	OBSApi/GraphicsSystem.h	/^    GS_ADDRESS_CLAMP,$/;"	e	enum:GSAddressMode
GS_ADDRESS_MIRROR	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        GS_ADDRESS_MIRROR,$/;"	m	class:CLROBS::GSSampleFilter::GSAddressMode
GS_ADDRESS_MIRROR	OBSApi/GraphicsSystem.h	/^    GS_ADDRESS_MIRROR,$/;"	e	enum:GSAddressMode
GS_ADDRESS_MIRRORONCE	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        GS_ADDRESS_MIRRORONCE,$/;"	m	class:CLROBS::GSSampleFilter::GSAddressMode
GS_ADDRESS_MIRRORONCE	OBSApi/GraphicsSystem.h	/^    GS_ADDRESS_MIRRORONCE,$/;"	e	enum:GSAddressMode
GS_ADDRESS_NONE	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        GS_ADDRESS_NONE=GS_ADDRESS_CLAMP,$/;"	m	class:CLROBS::GSSampleFilter::GSAddressMode
GS_ADDRESS_NONE	OBSApi/GraphicsSystem.h	/^    GS_ADDRESS_NONE=GS_ADDRESS_CLAMP,$/;"	e	enum:GSAddressMode
GS_ADDRESS_REPEAT	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        GS_ADDRESS_REPEAT=GS_ADDRESS_WRAP$/;"	m	class:CLROBS::GSSampleFilter::GSAddressMode
GS_ADDRESS_REPEAT	OBSApi/GraphicsSystem.h	/^    GS_ADDRESS_REPEAT=GS_ADDRESS_WRAP$/;"	e	enum:GSAddressMode
GS_ADDRESS_WRAP	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        GS_ADDRESS_WRAP,$/;"	m	class:CLROBS::GSSampleFilter::GSAddressMode
GS_ADDRESS_WRAP	OBSApi/GraphicsSystem.h	/^    GS_ADDRESS_WRAP,$/;"	e	enum:GSAddressMode
GS_ALPHA	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        GS_ALPHA, $/;"	m	class:CLROBS::GSColorFormat
GS_ALPHA	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.h	/^enum GSColorFormat {GS_UNKNOWNFORMAT, GS_ALPHA, GS_GRAYSCALE, GS_RGB, GS_RGBA, GS_BGR, GS_BGRA, GS_RGBA16F, GS_RGBA32F, GS_B5G5R5A1, GS_B5G6R5, GS_R10G10B10A2, GS_DXT1, GS_DXT3, GS_DXT5};$/;"	e	enum:GSColorFormat
GS_ALPHA	OBSApi/GraphicsSystem.h	/^enum GSColorFormat {GS_UNKNOWNFORMAT, GS_ALPHA, GS_GRAYSCALE, GS_RGB, GS_RGBA, GS_BGR, GS_BGRA, GS_RGBA16F, GS_RGBA32F, GS_B5G5R5A1, GS_B5G6R5, GS_R10G10B10A2, GS_DXT1, GS_DXT3, GS_DXT5};$/;"	e	enum:GSColorFormat
GS_B5G5R5A1	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        GS_B5G5R5A1, $/;"	m	class:CLROBS::GSColorFormat
GS_B5G5R5A1	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.h	/^enum GSColorFormat {GS_UNKNOWNFORMAT, GS_ALPHA, GS_GRAYSCALE, GS_RGB, GS_RGBA, GS_BGR, GS_BGRA, GS_RGBA16F, GS_RGBA32F, GS_B5G5R5A1, GS_B5G6R5, GS_R10G10B10A2, GS_DXT1, GS_DXT3, GS_DXT5};$/;"	e	enum:GSColorFormat
GS_B5G5R5A1	OBSApi/GraphicsSystem.h	/^enum GSColorFormat {GS_UNKNOWNFORMAT, GS_ALPHA, GS_GRAYSCALE, GS_RGB, GS_RGBA, GS_BGR, GS_BGRA, GS_RGBA16F, GS_RGBA32F, GS_B5G5R5A1, GS_B5G6R5, GS_R10G10B10A2, GS_DXT1, GS_DXT3, GS_DXT5};$/;"	e	enum:GSColorFormat
GS_B5G6R5	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        GS_B5G6R5, $/;"	m	class:CLROBS::GSColorFormat
GS_B5G6R5	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.h	/^enum GSColorFormat {GS_UNKNOWNFORMAT, GS_ALPHA, GS_GRAYSCALE, GS_RGB, GS_RGBA, GS_BGR, GS_BGRA, GS_RGBA16F, GS_RGBA32F, GS_B5G5R5A1, GS_B5G6R5, GS_R10G10B10A2, GS_DXT1, GS_DXT3, GS_DXT5};$/;"	e	enum:GSColorFormat
GS_B5G6R5	OBSApi/GraphicsSystem.h	/^enum GSColorFormat {GS_UNKNOWNFORMAT, GS_ALPHA, GS_GRAYSCALE, GS_RGB, GS_RGBA, GS_BGR, GS_BGRA, GS_RGBA16F, GS_RGBA32F, GS_B5G5R5A1, GS_B5G6R5, GS_R10G10B10A2, GS_DXT1, GS_DXT3, GS_DXT5};$/;"	e	enum:GSColorFormat
GS_BGR	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        GS_BGR, $/;"	m	class:CLROBS::GSColorFormat
GS_BGR	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.h	/^enum GSColorFormat {GS_UNKNOWNFORMAT, GS_ALPHA, GS_GRAYSCALE, GS_RGB, GS_RGBA, GS_BGR, GS_BGRA, GS_RGBA16F, GS_RGBA32F, GS_B5G5R5A1, GS_B5G6R5, GS_R10G10B10A2, GS_DXT1, GS_DXT3, GS_DXT5};$/;"	e	enum:GSColorFormat
GS_BGR	OBSApi/GraphicsSystem.h	/^enum GSColorFormat {GS_UNKNOWNFORMAT, GS_ALPHA, GS_GRAYSCALE, GS_RGB, GS_RGBA, GS_BGR, GS_BGRA, GS_RGBA16F, GS_RGBA32F, GS_B5G5R5A1, GS_B5G6R5, GS_R10G10B10A2, GS_DXT1, GS_DXT3, GS_DXT5};$/;"	e	enum:GSColorFormat
GS_BGRA	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        GS_BGRA, $/;"	m	class:CLROBS::GSColorFormat
GS_BGRA	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.h	/^enum GSColorFormat {GS_UNKNOWNFORMAT, GS_ALPHA, GS_GRAYSCALE, GS_RGB, GS_RGBA, GS_BGR, GS_BGRA, GS_RGBA16F, GS_RGBA32F, GS_B5G5R5A1, GS_B5G6R5, GS_R10G10B10A2, GS_DXT1, GS_DXT3, GS_DXT5};$/;"	e	enum:GSColorFormat
GS_BGRA	OBSApi/GraphicsSystem.h	/^enum GSColorFormat {GS_UNKNOWNFORMAT, GS_ALPHA, GS_GRAYSCALE, GS_RGB, GS_RGBA, GS_BGR, GS_BGRA, GS_RGBA16F, GS_RGBA32F, GS_B5G5R5A1, GS_B5G6R5, GS_R10G10B10A2, GS_DXT1, GS_DXT3, GS_DXT5};$/;"	e	enum:GSColorFormat
GS_BLEND_DSTALPHA	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        GS_BLEND_DSTALPHA, $/;"	m	class:CLROBS::GSBlendType
GS_BLEND_DSTALPHA	OBSApi/GraphicsSystem.h	/^enum GSBlendType {GS_BLEND_ZERO, GS_BLEND_ONE, GS_BLEND_SRCCOLOR, GS_BLEND_INVSRCCOLOR, GS_BLEND_SRCALPHA, GS_BLEND_INVSRCALPHA, GS_BLEND_DSTCOLOR, GS_BLEND_INVDSTCOLOR, GS_BLEND_DSTALPHA, GS_BLEND_INVDSTALPHA, GS_BLEND_FACTOR, GS_BLEND_INVFACTOR};$/;"	e	enum:GSBlendType
GS_BLEND_DSTCOLOR	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        GS_BLEND_DSTCOLOR, $/;"	m	class:CLROBS::GSBlendType
GS_BLEND_DSTCOLOR	OBSApi/GraphicsSystem.h	/^enum GSBlendType {GS_BLEND_ZERO, GS_BLEND_ONE, GS_BLEND_SRCCOLOR, GS_BLEND_INVSRCCOLOR, GS_BLEND_SRCALPHA, GS_BLEND_INVSRCALPHA, GS_BLEND_DSTCOLOR, GS_BLEND_INVDSTCOLOR, GS_BLEND_DSTALPHA, GS_BLEND_INVDSTALPHA, GS_BLEND_FACTOR, GS_BLEND_INVFACTOR};$/;"	e	enum:GSBlendType
GS_BLEND_FACTOR	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        GS_BLEND_FACTOR, $/;"	m	class:CLROBS::GSBlendType
GS_BLEND_FACTOR	OBSApi/GraphicsSystem.h	/^enum GSBlendType {GS_BLEND_ZERO, GS_BLEND_ONE, GS_BLEND_SRCCOLOR, GS_BLEND_INVSRCCOLOR, GS_BLEND_SRCALPHA, GS_BLEND_INVSRCALPHA, GS_BLEND_DSTCOLOR, GS_BLEND_INVDSTCOLOR, GS_BLEND_DSTALPHA, GS_BLEND_INVDSTALPHA, GS_BLEND_FACTOR, GS_BLEND_INVFACTOR};$/;"	e	enum:GSBlendType
GS_BLEND_INVDSTALPHA	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        GS_BLEND_INVDSTALPHA, $/;"	m	class:CLROBS::GSBlendType
GS_BLEND_INVDSTALPHA	OBSApi/GraphicsSystem.h	/^enum GSBlendType {GS_BLEND_ZERO, GS_BLEND_ONE, GS_BLEND_SRCCOLOR, GS_BLEND_INVSRCCOLOR, GS_BLEND_SRCALPHA, GS_BLEND_INVSRCALPHA, GS_BLEND_DSTCOLOR, GS_BLEND_INVDSTCOLOR, GS_BLEND_DSTALPHA, GS_BLEND_INVDSTALPHA, GS_BLEND_FACTOR, GS_BLEND_INVFACTOR};$/;"	e	enum:GSBlendType
GS_BLEND_INVDSTCOLOR	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        GS_BLEND_INVDSTCOLOR, $/;"	m	class:CLROBS::GSBlendType
GS_BLEND_INVDSTCOLOR	OBSApi/GraphicsSystem.h	/^enum GSBlendType {GS_BLEND_ZERO, GS_BLEND_ONE, GS_BLEND_SRCCOLOR, GS_BLEND_INVSRCCOLOR, GS_BLEND_SRCALPHA, GS_BLEND_INVSRCALPHA, GS_BLEND_DSTCOLOR, GS_BLEND_INVDSTCOLOR, GS_BLEND_DSTALPHA, GS_BLEND_INVDSTALPHA, GS_BLEND_FACTOR, GS_BLEND_INVFACTOR};$/;"	e	enum:GSBlendType
GS_BLEND_INVFACTOR	OBSApi/GraphicsSystem.h	/^enum GSBlendType {GS_BLEND_ZERO, GS_BLEND_ONE, GS_BLEND_SRCCOLOR, GS_BLEND_INVSRCCOLOR, GS_BLEND_SRCALPHA, GS_BLEND_INVSRCALPHA, GS_BLEND_DSTCOLOR, GS_BLEND_INVDSTCOLOR, GS_BLEND_DSTALPHA, GS_BLEND_INVDSTALPHA, GS_BLEND_FACTOR, GS_BLEND_INVFACTOR};$/;"	e	enum:GSBlendType
GS_BLEND_INVSRCALPHA	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        GS_BLEND_INVSRCALPHA, $/;"	m	class:CLROBS::GSBlendType
GS_BLEND_INVSRCALPHA	OBSApi/GraphicsSystem.h	/^enum GSBlendType {GS_BLEND_ZERO, GS_BLEND_ONE, GS_BLEND_SRCCOLOR, GS_BLEND_INVSRCCOLOR, GS_BLEND_SRCALPHA, GS_BLEND_INVSRCALPHA, GS_BLEND_DSTCOLOR, GS_BLEND_INVDSTCOLOR, GS_BLEND_DSTALPHA, GS_BLEND_INVDSTALPHA, GS_BLEND_FACTOR, GS_BLEND_INVFACTOR};$/;"	e	enum:GSBlendType
GS_BLEND_INVSRCCOLOR	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        GS_BLEND_INVSRCCOLOR, $/;"	m	class:CLROBS::GSBlendType
GS_BLEND_INVSRCCOLOR	OBSApi/GraphicsSystem.h	/^enum GSBlendType {GS_BLEND_ZERO, GS_BLEND_ONE, GS_BLEND_SRCCOLOR, GS_BLEND_INVSRCCOLOR, GS_BLEND_SRCALPHA, GS_BLEND_INVSRCALPHA, GS_BLEND_DSTCOLOR, GS_BLEND_INVDSTCOLOR, GS_BLEND_DSTALPHA, GS_BLEND_INVDSTALPHA, GS_BLEND_FACTOR, GS_BLEND_INVFACTOR};$/;"	e	enum:GSBlendType
GS_BLEND_ONE	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        GS_BLEND_ONE, $/;"	m	class:CLROBS::GSBlendType
GS_BLEND_ONE	OBSApi/GraphicsSystem.h	/^enum GSBlendType {GS_BLEND_ZERO, GS_BLEND_ONE, GS_BLEND_SRCCOLOR, GS_BLEND_INVSRCCOLOR, GS_BLEND_SRCALPHA, GS_BLEND_INVSRCALPHA, GS_BLEND_DSTCOLOR, GS_BLEND_INVDSTCOLOR, GS_BLEND_DSTALPHA, GS_BLEND_INVDSTALPHA, GS_BLEND_FACTOR, GS_BLEND_INVFACTOR};$/;"	e	enum:GSBlendType
GS_BLEND_SRCALPHA	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        GS_BLEND_SRCALPHA, $/;"	m	class:CLROBS::GSBlendType
GS_BLEND_SRCALPHA	OBSApi/GraphicsSystem.h	/^enum GSBlendType {GS_BLEND_ZERO, GS_BLEND_ONE, GS_BLEND_SRCCOLOR, GS_BLEND_INVSRCCOLOR, GS_BLEND_SRCALPHA, GS_BLEND_INVSRCALPHA, GS_BLEND_DSTCOLOR, GS_BLEND_INVDSTCOLOR, GS_BLEND_DSTALPHA, GS_BLEND_INVDSTALPHA, GS_BLEND_FACTOR, GS_BLEND_INVFACTOR};$/;"	e	enum:GSBlendType
GS_BLEND_SRCCOLOR	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        GS_BLEND_SRCCOLOR, $/;"	m	class:CLROBS::GSBlendType
GS_BLEND_SRCCOLOR	OBSApi/GraphicsSystem.h	/^enum GSBlendType {GS_BLEND_ZERO, GS_BLEND_ONE, GS_BLEND_SRCCOLOR, GS_BLEND_INVSRCCOLOR, GS_BLEND_SRCALPHA, GS_BLEND_INVSRCALPHA, GS_BLEND_DSTCOLOR, GS_BLEND_INVDSTCOLOR, GS_BLEND_DSTALPHA, GS_BLEND_INVDSTALPHA, GS_BLEND_FACTOR, GS_BLEND_INVFACTOR};$/;"	e	enum:GSBlendType
GS_BLEND_ZERO	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        GS_BLEND_ZERO,$/;"	m	class:CLROBS::GSBlendType
GS_BLEND_ZERO	OBSApi/GraphicsSystem.h	/^enum GSBlendType {GS_BLEND_ZERO, GS_BLEND_ONE, GS_BLEND_SRCCOLOR, GS_BLEND_INVSRCCOLOR, GS_BLEND_SRCALPHA, GS_BLEND_INVSRCALPHA, GS_BLEND_DSTCOLOR, GS_BLEND_INVDSTCOLOR, GS_BLEND_DSTALPHA, GS_BLEND_INVDSTALPHA, GS_BLEND_FACTOR, GS_BLEND_INVFACTOR};$/;"	e	enum:GSBlendType
GS_DXT1	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        GS_DXT1, $/;"	m	class:CLROBS::GSColorFormat
GS_DXT1	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.h	/^enum GSColorFormat {GS_UNKNOWNFORMAT, GS_ALPHA, GS_GRAYSCALE, GS_RGB, GS_RGBA, GS_BGR, GS_BGRA, GS_RGBA16F, GS_RGBA32F, GS_B5G5R5A1, GS_B5G6R5, GS_R10G10B10A2, GS_DXT1, GS_DXT3, GS_DXT5};$/;"	e	enum:GSColorFormat
GS_DXT1	OBSApi/GraphicsSystem.h	/^enum GSColorFormat {GS_UNKNOWNFORMAT, GS_ALPHA, GS_GRAYSCALE, GS_RGB, GS_RGBA, GS_BGR, GS_BGRA, GS_RGBA16F, GS_RGBA32F, GS_B5G5R5A1, GS_B5G6R5, GS_R10G10B10A2, GS_DXT1, GS_DXT3, GS_DXT5};$/;"	e	enum:GSColorFormat
GS_DXT3	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        GS_DXT3, $/;"	m	class:CLROBS::GSColorFormat
GS_DXT3	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.h	/^enum GSColorFormat {GS_UNKNOWNFORMAT, GS_ALPHA, GS_GRAYSCALE, GS_RGB, GS_RGBA, GS_BGR, GS_BGRA, GS_RGBA16F, GS_RGBA32F, GS_B5G5R5A1, GS_B5G6R5, GS_R10G10B10A2, GS_DXT1, GS_DXT3, GS_DXT5};$/;"	e	enum:GSColorFormat
GS_DXT3	OBSApi/GraphicsSystem.h	/^enum GSColorFormat {GS_UNKNOWNFORMAT, GS_ALPHA, GS_GRAYSCALE, GS_RGB, GS_RGBA, GS_BGR, GS_BGRA, GS_RGBA16F, GS_RGBA32F, GS_B5G5R5A1, GS_B5G6R5, GS_R10G10B10A2, GS_DXT1, GS_DXT3, GS_DXT5};$/;"	e	enum:GSColorFormat
GS_DXT5	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.h	/^enum GSColorFormat {GS_UNKNOWNFORMAT, GS_ALPHA, GS_GRAYSCALE, GS_RGB, GS_RGBA, GS_BGR, GS_BGRA, GS_RGBA16F, GS_RGBA32F, GS_B5G5R5A1, GS_B5G6R5, GS_R10G10B10A2, GS_DXT1, GS_DXT3, GS_DXT5};$/;"	e	enum:GSColorFormat
GS_DXT5	OBSApi/GraphicsSystem.h	/^enum GSColorFormat {GS_UNKNOWNFORMAT, GS_ALPHA, GS_GRAYSCALE, GS_RGB, GS_RGBA, GS_BGR, GS_BGRA, GS_RGBA16F, GS_RGBA32F, GS_B5G5R5A1, GS_B5G6R5, GS_R10G10B10A2, GS_DXT1, GS_DXT3, GS_DXT5};$/;"	e	enum:GSColorFormat
GS_FILTER_ANISOTROPIC	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        GS_FILTER_ANISOTROPIC,$/;"	m	class:CLROBS::GSSampleFilter
GS_FILTER_ANISOTROPIC	OBSApi/GraphicsSystem.h	/^    GS_FILTER_ANISOTROPIC,$/;"	e	enum:GSSampleFilter
GS_FILTER_LINEAR	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        GS_FILTER_LINEAR,$/;"	m	class:CLROBS::GSSampleFilter
GS_FILTER_LINEAR	OBSApi/GraphicsSystem.h	/^    GS_FILTER_LINEAR,$/;"	e	enum:GSSampleFilter
GS_FILTER_MIN_LINEAR_MAG_MIP_POINT	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        GS_FILTER_MIN_LINEAR_MAG_MIP_POINT,$/;"	m	class:CLROBS::GSSampleFilter
GS_FILTER_MIN_LINEAR_MAG_MIP_POINT	OBSApi/GraphicsSystem.h	/^    GS_FILTER_MIN_LINEAR_MAG_MIP_POINT,$/;"	e	enum:GSSampleFilter
GS_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        GS_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR,$/;"	m	class:CLROBS::GSSampleFilter
GS_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR	OBSApi/GraphicsSystem.h	/^    GS_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR,$/;"	e	enum:GSSampleFilter
GS_FILTER_MIN_MAG_LINEAR_MIP_POINT	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        GS_FILTER_MIN_MAG_LINEAR_MIP_POINT,$/;"	m	class:CLROBS::GSSampleFilter
GS_FILTER_MIN_MAG_LINEAR_MIP_POINT	OBSApi/GraphicsSystem.h	/^    GS_FILTER_MIN_MAG_LINEAR_MIP_POINT,$/;"	e	enum:GSSampleFilter
GS_FILTER_MIN_MAG_MIP_LINEAR	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        GS_FILTER_MIN_MAG_MIP_LINEAR=GS_FILTER_LINEAR$/;"	m	class:CLROBS::GSSampleFilter
GS_FILTER_MIN_MAG_MIP_LINEAR	OBSApi/GraphicsSystem.h	/^    GS_FILTER_MIN_MAG_MIP_LINEAR=GS_FILTER_LINEAR$/;"	e	enum:GSSampleFilter
GS_FILTER_MIN_MAG_MIP_POINT	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        GS_FILTER_MIN_MAG_MIP_POINT=GS_FILTER_POINT,$/;"	m	class:CLROBS::GSSampleFilter
GS_FILTER_MIN_MAG_MIP_POINT	OBSApi/GraphicsSystem.h	/^    GS_FILTER_MIN_MAG_MIP_POINT=GS_FILTER_POINT,$/;"	e	enum:GSSampleFilter
GS_FILTER_MIN_MAG_POINT_MIP_LINEAR	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        GS_FILTER_MIN_MAG_POINT_MIP_LINEAR,$/;"	m	class:CLROBS::GSSampleFilter
GS_FILTER_MIN_MAG_POINT_MIP_LINEAR	OBSApi/GraphicsSystem.h	/^    GS_FILTER_MIN_MAG_POINT_MIP_LINEAR,$/;"	e	enum:GSSampleFilter
GS_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        GS_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT,$/;"	m	class:CLROBS::GSSampleFilter
GS_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT	OBSApi/GraphicsSystem.h	/^    GS_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT,$/;"	e	enum:GSSampleFilter
GS_FILTER_MIN_POINT_MAG_MIP_LINEAR	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        GS_FILTER_MIN_POINT_MAG_MIP_LINEAR,$/;"	m	class:CLROBS::GSSampleFilter
GS_FILTER_MIN_POINT_MAG_MIP_LINEAR	OBSApi/GraphicsSystem.h	/^    GS_FILTER_MIN_POINT_MAG_MIP_LINEAR,$/;"	e	enum:GSSampleFilter
GS_FILTER_POINT	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        GS_FILTER_POINT,$/;"	m	class:CLROBS::GSSampleFilter
GS_FILTER_POINT	OBSApi/GraphicsSystem.h	/^    GS_FILTER_POINT,$/;"	e	enum:GSSampleFilter
GS_GRAYSCALE	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        GS_GRAYSCALE, $/;"	m	class:CLROBS::GSColorFormat
GS_GRAYSCALE	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.h	/^enum GSColorFormat {GS_UNKNOWNFORMAT, GS_ALPHA, GS_GRAYSCALE, GS_RGB, GS_RGBA, GS_BGR, GS_BGRA, GS_RGBA16F, GS_RGBA32F, GS_B5G5R5A1, GS_B5G6R5, GS_R10G10B10A2, GS_DXT1, GS_DXT3, GS_DXT5};$/;"	e	enum:GSColorFormat
GS_GRAYSCALE	OBSApi/GraphicsSystem.h	/^enum GSColorFormat {GS_UNKNOWNFORMAT, GS_ALPHA, GS_GRAYSCALE, GS_RGB, GS_RGBA, GS_BGR, GS_BGRA, GS_RGBA16F, GS_RGBA32F, GS_B5G5R5A1, GS_B5G6R5, GS_R10G10B10A2, GS_DXT1, GS_DXT3, GS_DXT5};$/;"	e	enum:GSColorFormat
GS_IMAGEFORMAT_A8	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        GS_IMAGEFORMAT_A8,$/;"	m	class:CLROBS::GSSampleFilter::GSAddressMode::GSImageFormat
GS_IMAGEFORMAT_A8	OBSApi/GraphicsSystem.h	/^    GS_IMAGEFORMAT_A8,$/;"	e	enum:GSImageFormat
GS_IMAGEFORMAT_BGR	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        GS_IMAGEFORMAT_BGR,$/;"	m	class:CLROBS::GSSampleFilter::GSAddressMode::GSImageFormat
GS_IMAGEFORMAT_BGR	OBSApi/GraphicsSystem.h	/^    GS_IMAGEFORMAT_BGR,$/;"	e	enum:GSImageFormat
GS_IMAGEFORMAT_BGRA	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        GS_IMAGEFORMAT_BGRA,$/;"	m	class:CLROBS::GSSampleFilter::GSAddressMode::GSImageFormat
GS_IMAGEFORMAT_BGRA	OBSApi/GraphicsSystem.h	/^    GS_IMAGEFORMAT_BGRA,$/;"	e	enum:GSImageFormat
GS_IMAGEFORMAT_BGRX	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        GS_IMAGEFORMAT_BGRX,$/;"	m	class:CLROBS::GSSampleFilter::GSAddressMode::GSImageFormat
GS_IMAGEFORMAT_BGRX	OBSApi/GraphicsSystem.h	/^    GS_IMAGEFORMAT_BGRX,$/;"	e	enum:GSImageFormat
GS_IMAGEFORMAT_L8	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        GS_IMAGEFORMAT_L8,$/;"	m	class:CLROBS::GSSampleFilter::GSAddressMode::GSImageFormat
GS_IMAGEFORMAT_L8	OBSApi/GraphicsSystem.h	/^    GS_IMAGEFORMAT_L8,$/;"	e	enum:GSImageFormat
GS_IMAGEFORMAT_RGB	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        GS_IMAGEFORMAT_RGB,$/;"	m	class:CLROBS::GSSampleFilter::GSAddressMode::GSImageFormat
GS_IMAGEFORMAT_RGB	OBSApi/GraphicsSystem.h	/^    GS_IMAGEFORMAT_RGB,$/;"	e	enum:GSImageFormat
GS_IMAGEFORMAT_RGBA	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        GS_IMAGEFORMAT_RGBA,$/;"	m	class:CLROBS::GSSampleFilter::GSAddressMode::GSImageFormat
GS_IMAGEFORMAT_RGBA	OBSApi/GraphicsSystem.h	/^    GS_IMAGEFORMAT_RGBA,$/;"	e	enum:GSImageFormat
GS_IMAGEFORMAT_RGBA16F	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        GS_IMAGEFORMAT_RGBA16F,$/;"	m	class:CLROBS::GSSampleFilter::GSAddressMode::GSImageFormat
GS_IMAGEFORMAT_RGBA16F	OBSApi/GraphicsSystem.h	/^    GS_IMAGEFORMAT_RGBA16F,$/;"	e	enum:GSImageFormat
GS_IMAGEFORMAT_RGBA32F	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        GS_IMAGEFORMAT_RGBA32F,$/;"	m	class:CLROBS::GSSampleFilter::GSAddressMode::GSImageFormat
GS_IMAGEFORMAT_RGBA32F	OBSApi/GraphicsSystem.h	/^    GS_IMAGEFORMAT_RGBA32F,$/;"	e	enum:GSImageFormat
GS_IMAGEFORMAT_RGBX	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        GS_IMAGEFORMAT_RGBX,$/;"	m	class:CLROBS::GSSampleFilter::GSAddressMode::GSImageFormat
GS_IMAGEFORMAT_RGBX	OBSApi/GraphicsSystem.h	/^    GS_IMAGEFORMAT_RGBX,$/;"	e	enum:GSImageFormat
GS_LINES	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        GS_LINES, $/;"	m	class:CLROBS::GSDrawMode
GS_LINES	OBSApi/GraphicsSystem.h	/^enum GSDrawMode {GS_POINTS, GS_LINES, GS_LINESTRIP, GS_TRIANGLES, GS_TRIANGLESTRIP};$/;"	e	enum:GSDrawMode
GS_LINESTRIP	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        GS_LINESTRIP, $/;"	m	class:CLROBS::GSDrawMode
GS_LINESTRIP	OBSApi/GraphicsSystem.h	/^enum GSDrawMode {GS_POINTS, GS_LINES, GS_LINESTRIP, GS_TRIANGLES, GS_TRIANGLESTRIP};$/;"	e	enum:GSDrawMode
GS_POINTS	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        GS_POINTS,$/;"	m	class:CLROBS::GSDrawMode
GS_POINTS	OBSApi/GraphicsSystem.h	/^enum GSDrawMode {GS_POINTS, GS_LINES, GS_LINESTRIP, GS_TRIANGLES, GS_TRIANGLESTRIP};$/;"	e	enum:GSDrawMode
GS_R10G10B10A2	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        GS_R10G10B10A2, $/;"	m	class:CLROBS::GSColorFormat
GS_R10G10B10A2	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.h	/^enum GSColorFormat {GS_UNKNOWNFORMAT, GS_ALPHA, GS_GRAYSCALE, GS_RGB, GS_RGBA, GS_BGR, GS_BGRA, GS_RGBA16F, GS_RGBA32F, GS_B5G5R5A1, GS_B5G6R5, GS_R10G10B10A2, GS_DXT1, GS_DXT3, GS_DXT5};$/;"	e	enum:GSColorFormat
GS_R10G10B10A2	OBSApi/GraphicsSystem.h	/^enum GSColorFormat {GS_UNKNOWNFORMAT, GS_ALPHA, GS_GRAYSCALE, GS_RGB, GS_RGBA, GS_BGR, GS_BGRA, GS_RGBA16F, GS_RGBA32F, GS_B5G5R5A1, GS_B5G6R5, GS_R10G10B10A2, GS_DXT1, GS_DXT3, GS_DXT5};$/;"	e	enum:GSColorFormat
GS_RGB	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        GS_RGB, $/;"	m	class:CLROBS::GSColorFormat
GS_RGB	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.h	/^enum GSColorFormat {GS_UNKNOWNFORMAT, GS_ALPHA, GS_GRAYSCALE, GS_RGB, GS_RGBA, GS_BGR, GS_BGRA, GS_RGBA16F, GS_RGBA32F, GS_B5G5R5A1, GS_B5G6R5, GS_R10G10B10A2, GS_DXT1, GS_DXT3, GS_DXT5};$/;"	e	enum:GSColorFormat
GS_RGB	OBSApi/GraphicsSystem.h	/^enum GSColorFormat {GS_UNKNOWNFORMAT, GS_ALPHA, GS_GRAYSCALE, GS_RGB, GS_RGBA, GS_BGR, GS_BGRA, GS_RGBA16F, GS_RGBA32F, GS_B5G5R5A1, GS_B5G6R5, GS_R10G10B10A2, GS_DXT1, GS_DXT3, GS_DXT5};$/;"	e	enum:GSColorFormat
GS_RGBA	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        GS_RGBA, $/;"	m	class:CLROBS::GSColorFormat
GS_RGBA	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.h	/^enum GSColorFormat {GS_UNKNOWNFORMAT, GS_ALPHA, GS_GRAYSCALE, GS_RGB, GS_RGBA, GS_BGR, GS_BGRA, GS_RGBA16F, GS_RGBA32F, GS_B5G5R5A1, GS_B5G6R5, GS_R10G10B10A2, GS_DXT1, GS_DXT3, GS_DXT5};$/;"	e	enum:GSColorFormat
GS_RGBA	OBSApi/GraphicsSystem.h	/^enum GSColorFormat {GS_UNKNOWNFORMAT, GS_ALPHA, GS_GRAYSCALE, GS_RGB, GS_RGBA, GS_BGR, GS_BGRA, GS_RGBA16F, GS_RGBA32F, GS_B5G5R5A1, GS_B5G6R5, GS_R10G10B10A2, GS_DXT1, GS_DXT3, GS_DXT5};$/;"	e	enum:GSColorFormat
GS_RGBA16F	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        GS_RGBA16F, $/;"	m	class:CLROBS::GSColorFormat
GS_RGBA16F	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.h	/^enum GSColorFormat {GS_UNKNOWNFORMAT, GS_ALPHA, GS_GRAYSCALE, GS_RGB, GS_RGBA, GS_BGR, GS_BGRA, GS_RGBA16F, GS_RGBA32F, GS_B5G5R5A1, GS_B5G6R5, GS_R10G10B10A2, GS_DXT1, GS_DXT3, GS_DXT5};$/;"	e	enum:GSColorFormat
GS_RGBA16F	OBSApi/GraphicsSystem.h	/^enum GSColorFormat {GS_UNKNOWNFORMAT, GS_ALPHA, GS_GRAYSCALE, GS_RGB, GS_RGBA, GS_BGR, GS_BGRA, GS_RGBA16F, GS_RGBA32F, GS_B5G5R5A1, GS_B5G6R5, GS_R10G10B10A2, GS_DXT1, GS_DXT3, GS_DXT5};$/;"	e	enum:GSColorFormat
GS_RGBA32F	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        GS_RGBA32F, $/;"	m	class:CLROBS::GSColorFormat
GS_RGBA32F	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.h	/^enum GSColorFormat {GS_UNKNOWNFORMAT, GS_ALPHA, GS_GRAYSCALE, GS_RGB, GS_RGBA, GS_BGR, GS_BGRA, GS_RGBA16F, GS_RGBA32F, GS_B5G5R5A1, GS_B5G6R5, GS_R10G10B10A2, GS_DXT1, GS_DXT3, GS_DXT5};$/;"	e	enum:GSColorFormat
GS_RGBA32F	OBSApi/GraphicsSystem.h	/^enum GSColorFormat {GS_UNKNOWNFORMAT, GS_ALPHA, GS_GRAYSCALE, GS_RGB, GS_RGBA, GS_BGR, GS_BGRA, GS_RGBA16F, GS_RGBA32F, GS_B5G5R5A1, GS_B5G6R5, GS_R10G10B10A2, GS_DXT1, GS_DXT3, GS_DXT5};$/;"	e	enum:GSColorFormat
GS_TRIANGLES	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        GS_TRIANGLES, $/;"	m	class:CLROBS::GSDrawMode
GS_TRIANGLES	OBSApi/GraphicsSystem.h	/^enum GSDrawMode {GS_POINTS, GS_LINES, GS_LINESTRIP, GS_TRIANGLES, GS_TRIANGLESTRIP};$/;"	e	enum:GSDrawMode
GS_TRIANGLESTRIP	OBSApi/GraphicsSystem.h	/^enum GSDrawMode {GS_POINTS, GS_LINES, GS_LINESTRIP, GS_TRIANGLES, GS_TRIANGLESTRIP};$/;"	e	enum:GSDrawMode
GS_UNKNOWNFORMAT	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        GS_UNKNOWNFORMAT, $/;"	m	class:CLROBS::GSColorFormat
GS_UNKNOWNFORMAT	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.h	/^enum GSColorFormat {GS_UNKNOWNFORMAT, GS_ALPHA, GS_GRAYSCALE, GS_RGB, GS_RGBA, GS_BGR, GS_BGRA, GS_RGBA16F, GS_RGBA32F, GS_B5G5R5A1, GS_B5G6R5, GS_R10G10B10A2, GS_DXT1, GS_DXT3, GS_DXT5};$/;"	e	enum:GSColorFormat
GS_UNKNOWNFORMAT	OBSApi/GraphicsSystem.h	/^enum GSColorFormat {GS_UNKNOWNFORMAT, GS_ALPHA, GS_GRAYSCALE, GS_RGB, GS_RGBA, GS_BGR, GS_BGRA, GS_RGBA16F, GS_RGBA32F, GS_B5G5R5A1, GS_B5G6R5, GS_R10G10B10A2, GS_DXT1, GS_DXT3, GS_DXT5};$/;"	e	enum:GSColorFormat
GS_UNSIGNED_LONG	OBSApi/GraphicsSystem.h	/^enum GSIndexType {GS_UNSIGNED_SHORT, GS_UNSIGNED_LONG};$/;"	e	enum:GSIndexType
GS_UNSIGNED_SHORT	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        GS_UNSIGNED_SHORT,$/;"	m	class:CLROBS::GSIndexType
GS_UNSIGNED_SHORT	OBSApi/GraphicsSystem.h	/^enum GSIndexType {GS_UNSIGNED_SHORT, GS_UNSIGNED_LONG};$/;"	e	enum:GSIndexType
GTK_CFLAGS	lame/ACM/ADbg/Makefile	/^GTK_CFLAGS = $/;"	m
GTK_CFLAGS	lame/ACM/Makefile	/^GTK_CFLAGS = $/;"	m
GTK_CFLAGS	lame/ACM/ddk/Makefile	/^GTK_CFLAGS = $/;"	m
GTK_CFLAGS	lame/ACM/tinyxml/Makefile	/^GTK_CFLAGS = $/;"	m
GTK_CFLAGS	lame/Dll/Makefile	/^GTK_CFLAGS = $/;"	m
GTK_CFLAGS	lame/Makefile	/^GTK_CFLAGS = $/;"	m
GTK_CFLAGS	lame/debian/Makefile	/^GTK_CFLAGS = $/;"	m
GTK_CFLAGS	lame/doc/Makefile	/^GTK_CFLAGS = $/;"	m
GTK_CFLAGS	lame/doc/html/Makefile	/^GTK_CFLAGS = $/;"	m
GTK_CFLAGS	lame/doc/man/Makefile	/^GTK_CFLAGS = $/;"	m
GTK_CFLAGS	lame/dshow/Makefile	/^GTK_CFLAGS = $/;"	m
GTK_CFLAGS	lame/frontend/Makefile	/^GTK_CFLAGS = $/;"	m
GTK_CFLAGS	lame/include/Makefile	/^GTK_CFLAGS = $/;"	m
GTK_CFLAGS	lame/libmp3lame/Makefile	/^GTK_CFLAGS = $/;"	m
GTK_CFLAGS	lame/libmp3lame/i386/Makefile	/^GTK_CFLAGS = $/;"	m
GTK_CFLAGS	lame/libmp3lame/vector/Makefile	/^GTK_CFLAGS = $/;"	m
GTK_CFLAGS	lame/mac/Makefile	/^GTK_CFLAGS = $/;"	m
GTK_CFLAGS	lame/macosx/English.lproj/Makefile	/^GTK_CFLAGS = $/;"	m
GTK_CFLAGS	lame/macosx/LAME.xcodeproj/Makefile	/^GTK_CFLAGS = $/;"	m
GTK_CFLAGS	lame/macosx/Makefile	/^GTK_CFLAGS = $/;"	m
GTK_CFLAGS	lame/misc/Makefile	/^GTK_CFLAGS = $/;"	m
GTK_CFLAGS	lame/mpglib/Makefile	/^GTK_CFLAGS = $/;"	m
GTK_CFLAGS	lame/vc_solution/Makefile	/^GTK_CFLAGS = $/;"	m
GTK_CONFIG	lame/ACM/ADbg/Makefile	/^GTK_CONFIG = no$/;"	m
GTK_CONFIG	lame/ACM/Makefile	/^GTK_CONFIG = no$/;"	m
GTK_CONFIG	lame/ACM/ddk/Makefile	/^GTK_CONFIG = no$/;"	m
GTK_CONFIG	lame/ACM/tinyxml/Makefile	/^GTK_CONFIG = no$/;"	m
GTK_CONFIG	lame/Dll/Makefile	/^GTK_CONFIG = no$/;"	m
GTK_CONFIG	lame/Makefile	/^GTK_CONFIG = no$/;"	m
GTK_CONFIG	lame/debian/Makefile	/^GTK_CONFIG = no$/;"	m
GTK_CONFIG	lame/doc/Makefile	/^GTK_CONFIG = no$/;"	m
GTK_CONFIG	lame/doc/html/Makefile	/^GTK_CONFIG = no$/;"	m
GTK_CONFIG	lame/doc/man/Makefile	/^GTK_CONFIG = no$/;"	m
GTK_CONFIG	lame/dshow/Makefile	/^GTK_CONFIG = no$/;"	m
GTK_CONFIG	lame/frontend/Makefile	/^GTK_CONFIG = no$/;"	m
GTK_CONFIG	lame/include/Makefile	/^GTK_CONFIG = no$/;"	m
GTK_CONFIG	lame/libmp3lame/Makefile	/^GTK_CONFIG = no$/;"	m
GTK_CONFIG	lame/libmp3lame/i386/Makefile	/^GTK_CONFIG = no$/;"	m
GTK_CONFIG	lame/libmp3lame/vector/Makefile	/^GTK_CONFIG = no$/;"	m
GTK_CONFIG	lame/mac/Makefile	/^GTK_CONFIG = no$/;"	m
GTK_CONFIG	lame/macosx/English.lproj/Makefile	/^GTK_CONFIG = no$/;"	m
GTK_CONFIG	lame/macosx/LAME.xcodeproj/Makefile	/^GTK_CONFIG = no$/;"	m
GTK_CONFIG	lame/macosx/Makefile	/^GTK_CONFIG = no$/;"	m
GTK_CONFIG	lame/misc/Makefile	/^GTK_CONFIG = no$/;"	m
GTK_CONFIG	lame/mpglib/Makefile	/^GTK_CONFIG = no$/;"	m
GTK_CONFIG	lame/vc_solution/Makefile	/^GTK_CONFIG = no$/;"	m
GTK_LIBS	lame/ACM/ADbg/Makefile	/^GTK_LIBS = $/;"	m
GTK_LIBS	lame/ACM/Makefile	/^GTK_LIBS = $/;"	m
GTK_LIBS	lame/ACM/ddk/Makefile	/^GTK_LIBS = $/;"	m
GTK_LIBS	lame/ACM/tinyxml/Makefile	/^GTK_LIBS = $/;"	m
GTK_LIBS	lame/Dll/Makefile	/^GTK_LIBS = $/;"	m
GTK_LIBS	lame/Makefile	/^GTK_LIBS = $/;"	m
GTK_LIBS	lame/debian/Makefile	/^GTK_LIBS = $/;"	m
GTK_LIBS	lame/doc/Makefile	/^GTK_LIBS = $/;"	m
GTK_LIBS	lame/doc/html/Makefile	/^GTK_LIBS = $/;"	m
GTK_LIBS	lame/doc/man/Makefile	/^GTK_LIBS = $/;"	m
GTK_LIBS	lame/dshow/Makefile	/^GTK_LIBS = $/;"	m
GTK_LIBS	lame/frontend/Makefile	/^GTK_LIBS = $/;"	m
GTK_LIBS	lame/include/Makefile	/^GTK_LIBS = $/;"	m
GTK_LIBS	lame/libmp3lame/Makefile	/^GTK_LIBS = $/;"	m
GTK_LIBS	lame/libmp3lame/i386/Makefile	/^GTK_LIBS = $/;"	m
GTK_LIBS	lame/libmp3lame/vector/Makefile	/^GTK_LIBS = $/;"	m
GTK_LIBS	lame/mac/Makefile	/^GTK_LIBS = $/;"	m
GTK_LIBS	lame/macosx/English.lproj/Makefile	/^GTK_LIBS = $/;"	m
GTK_LIBS	lame/macosx/LAME.xcodeproj/Makefile	/^GTK_LIBS = $/;"	m
GTK_LIBS	lame/macosx/Makefile	/^GTK_LIBS = $/;"	m
GTK_LIBS	lame/misc/Makefile	/^GTK_LIBS = $/;"	m
GTK_LIBS	lame/mpglib/Makefile	/^GTK_LIBS = $/;"	m
GTK_LIBS	lame/vc_solution/Makefile	/^GTK_LIBS = $/;"	m
GUID	ObsNvenc/inc/nvEncodeAPI.h	/^} GUID;$/;"	t
GUIDKeyName	libmfx/src/mfx_plugin_hive.cpp	/^    const wchar_t GUIDKeyName[] = L"GUID";$/;"	v
GUIDToString	DShowPlugin/DShowPlugin.cpp	/^String GUIDToString(const GUID& guid)$/;"	f
GZIP	lame/Makefile	/^	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\\$/;"	m
GZIP	lame/Makefile	/^	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\\$/;"	m
GZIP	lame/Makefile	/^	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz$/;"	m
GZIP	lame/Makefile	/^	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz$/;"	m
GZIP_ENV	lame/Makefile	/^GZIP_ENV = --best$/;"	m
GenerateGUID	Source/Updater.cpp	/^VOID GenerateGUID(String &strGUID)$/;"	f
GenuineFMSKey	librtmp/handshake.h	/^static const uint8_t GenuineFMSKey[] =$/;"	v
GenuineFPKey	librtmp/handshake.h	/^static const uint8_t GenuineFPKey[] =$/;"	v
Get	OBSApi/Utility/Template.h	/^    inline BOOL Get(unsigned int index)$/;"	f	class:BitList
GetAbrBitrateMax	lame/ACM/AEncodeProperties.h	/^	inline unsigned int GetAbrBitrateMax() const { return AverageBitrate_Max;}$/;"	f	class:AEncodeProperties
GetAbrBitrateMin	lame/ACM/AEncodeProperties.h	/^	inline unsigned int GetAbrBitrateMin() const { return AverageBitrate_Min;}$/;"	f	class:AEncodeProperties
GetAbrBitrateStep	lame/ACM/AEncodeProperties.h	/^	inline unsigned int GetAbrBitrateStep() const { return AverageBitrate_Step;}$/;"	f	class:AEncodeProperties
GetAbrOutputMode	lame/ACM/AEncodeProperties.h	/^	inline const bool GetAbrOutputMode() const { return bAbrOutput; }$/;"	f	class:AEncodeProperties
GetAbs	OBSApi/Utility/XMath.h	/^    inline Vect GetAbs() const                      {return Vect(*this).Abs();}$/;"	f	struct:Vect
GetAbs	OBSApi/Utility/XMath.h	/^    inline Vect2 GetAbs() const                     {return Vect2(*this).Abs();}$/;"	f	struct:Vect2
GetAbs	OBSApi/Utility/XMath.h	/^    inline Vect4 GetAbs()                             {Vect4 temp(*this); return temp.Abs();}$/;"	f	struct:Vect4
GetAdapter	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *GetAdapter )( $/;"	m	struct:IDXGIDevice2Vtbl
GetAdapterCount	libmfx/src/mfx_dxva2_device.cpp	/^mfxU32 DXDevice::GetAdapterCount(void) const$/;"	f	class:DXDevice
GetAdapterCount	libmfx/src/mfx_dxva2_device.cpp	/^mfxU32 DXVA2Device::GetAdapterCount(void) const$/;"	f	class:DXVA2Device
GetAllocator	DShowPlugin/CaptureFilter.cpp	/^STDMETHODIMP CapturePin::GetAllocator(IMemAllocator **ppAllocator)                     {return VFW_E_NO_ALLOCATOR;}$/;"	f	class:CapturePin
GetAllocatorRequirements	DShowPlugin/CaptureFilter.cpp	/^STDMETHODIMP CapturePin::GetAllocatorRequirements(ALLOCATOR_PROPERTIES *pProps)        {return E_NOTIMPL;}$/;"	f	class:CapturePin
GetAlphaVal	Source/TextOutputSource.cpp	/^inline DWORD GetAlphaVal(UINT opacityLevel)$/;"	f
GetAppDataPath	Source/API.cpp	/^    virtual CTSTR GetAppDataPath() const        {return lpAppDataPath;}$/;"	f	class:OBSAPIInterface
GetAppPath	Source/API.cpp	/^    virtual CTSTR GetAppPath() const            {return lpAppPath;}$/;"	f	class:OBSAPIInterface
GetApplicationMute	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/RenderProcess.cs	/^        public static bool? GetApplicationMute(int pid)$/;"	m	class:Browser.VolumeMixer
GetApplicationName	Source/WindowStuff.cpp	/^String OBS::GetApplicationName()$/;"	f	class:OBS
GetApplicationVolume	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/RenderProcess.cs	/^        public static float? GetApplicationVolume(int pid)$/;"	m	class:Browser.VolumeMixer
GetAudioDecodeTime	Source/MP4FileStream.cpp	/^    void GetAudioDecodeTime(MP4AudioFrameInfo &audioFrame, bool bLast)$/;"	f	class:MP4FileStream
GetAudioDevices	Source/GetAudioDevices.cpp	/^void GetAudioDevices(AudioDeviceList &deviceList, AudioDeviceType deviceType, bool bConnectedOnly, bool canDisable)$/;"	f
GetAudioDevices.cpp	Source/GetAudioDevices.cpp	1;"	F
GetAudioEncoder	Source/OBS.h	/^    inline AudioEncoder* GetAudioEncoder() const {return audioEncoder;}$/;"	f	class:OBS
GetAudioFilter	OBSApi/AudioSource.cpp	/^AudioFilter* AudioSource::GetAudioFilter(UINT id) {if(audioFilters.Num() > id) return audioFilters[id]; return NULL;}$/;"	f	class:AudioSource
GetAudioHeaders	Source/OBS.h	/^    inline void GetAudioHeaders(DataPacket &packet) {audioEncoder->GetHeaders(packet);}$/;"	f	class:OBS
GetAudioParam	libmfx/include/msdk/include/mfxaudio++.h	/^    virtual mfxStatus GetAudioParam(mfxAudioParam *par) { return MFXAudioDECODE_GetAudioParam(m_session, par); }$/;"	f	class:MFXAudioDECODE
GetAudioParam	libmfx/include/msdk/include/mfxaudio++.h	/^    virtual mfxStatus GetAudioParam(mfxAudioParam *par) { return MFXAudioENCODE_GetAudioParam(m_session, par); }$/;"	f	class:MFXAudioENCODE
GetAudioTime	Source/API.cpp	/^    virtual QWORD GetAudioTime() const          {return App->GetAudioTime();}$/;"	f	class:OBSAPIInterface
GetAudioTime	Source/OBS.h	/^    inline QWORD GetAudioTime() const {return latestAudioTime;}$/;"	f	class:OBS
GetAuxAudioSource	Source/API.cpp	/^    virtual AudioSource* GetAuxAudioSource(UINT id)$/;"	f	class:OBSAPIInterface
GetAxisAngle	OBSApi/Utility/XMath.cpp	/^AxisAngle Quat::GetAxisAngle() const$/;"	f	class:Quat
GetBackgroundColor	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *GetBackgroundColor )( $/;"	m	struct:IDXGISwapChain1Vtbl
GetBaseItem	OBSApi/Utility/XConfig.cpp	/^XBaseItem* XElement::GetBaseItem(CTSTR lpName) const$/;"	f	class:XElement
GetBaseItemByID	OBSApi/Utility/XConfig.cpp	/^XBaseItem* XElement::GetBaseItemByID(DWORD itemID) const$/;"	f	class:XElement
GetBaseSize	Source/API.cpp	/^    virtual Vect2 GetBaseSize() const               {return Vect2(float(App->baseCX), float(App->baseCY));}$/;"	f	class:OBSAPIInterface
GetBaseSize	Source/API.cpp	/^    virtual void GetBaseSize(UINT &width, UINT &height) const               {App->GetBaseSize(width, height);}$/;"	f	class:OBSAPIInterface
GetBaseSize	Source/OBS.cpp	/^void OBS::GetBaseSize(UINT &width, UINT &height) const$/;"	f	class:OBS
GetBaseSize	Source/OBS.h	/^    inline Vect2 GetBaseSize() const$/;"	f	class:OBS
GetBestMediaOutput	DShowPlugin/MediaInfoStuff.cpp	/^MediaOutputInfo* GetBestMediaOutput(const List<MediaOutputInfo> &outputList, UINT width, UINT height, UINT preferredType, UINT64 &frameInterval)$/;"	f
GetBitRate	ObsNvenc/src/NVENCEncoder.cpp	/^int NVENCEncoder::GetBitRate() const$/;"	f	class:NVENCEncoder
GetBitRate	Source/Encoder_AAC.cpp	/^    int GetBitRate() const {return curBitRate;}$/;"	f	class:AACEncoder
GetBitRate	Source/Encoder_MP3.cpp	/^    int GetBitRate() const {return curBitRate;}$/;"	f	class:MP3Encoder
GetBitRate	Source/Encoder_QSV.cpp	/^    int GetBitRate() const$/;"	f	class:QSVEncoder
GetBitRate	Source/Encoder_x264.cpp	/^    int GetBitRate() const$/;"	f	class:X264Encoder
GetBitRate	Source/NullOutput.cpp	/^    virtual int     GetBitRate() const {return 0;}$/;"	f	class:NullAudioEncoder
GetBitRate	Source/NullOutput.cpp	/^    virtual int  GetBitRate() const {return 0;}$/;"	f	class:NullVideoEncoder
GetBitmapData	OBSApi/OBSApi.cpp	/^static LPBYTE GetBitmapData(HBITMAP hBmp, BITMAP &bmp)$/;"	f	file:
GetBitrateLentgh	lame/ACM/AEncodeProperties.h	/^	inline const int GetBitrateLentgh() const { return sizeof(the_Bitrates) \/ sizeof(unsigned int); }$/;"	f	class:AEncodeProperties
GetBitrateString	lame/ACM/AEncodeProperties.cpp	/^const int AEncodeProperties::GetBitrateString(char * string, int string_size, int a_bitrateID) const$/;"	f	class:AEncodeProperties
GetBitrateString	lame/ACM/AEncodeProperties.h	/^	inline const int GetBitrateString(char * string, int string_size) const {return GetBitrateString(string,string_size,nMinBitrateIndex); }$/;"	f	class:AEncodeProperties
GetBitrateValue	lame/ACM/AEncodeProperties.cpp	/^const unsigned int AEncodeProperties::GetBitrateValue() const$/;"	f	class:AEncodeProperties
GetBitrateValueMPEG1	lame/ACM/AEncodeProperties.cpp	/^inline const int AEncodeProperties::GetBitrateValueMPEG1(DWORD & bitrate) const$/;"	f	class:AEncodeProperties
GetBitrateValueMPEG2	lame/ACM/AEncodeProperties.cpp	/^inline const int AEncodeProperties::GetBitrateValueMPEG2(DWORD & bitrate) const$/;"	f	class:AEncodeProperties
GetBlockAligned	lame/dshow/Encoder.cpp	/^int CEncoder::GetBlockAligned(const unsigned char ** pblock, int* piBufferSize, const long& cbAlign)$/;"	f	class:CEncoder
GetBrowserProcessHandler	CLRBrowserSourcePlugin/Plugin/Shared/BrowserApp.cs	/^        protected override CefBrowserProcessHandler GetBrowserProcessHandler()$/;"	m	class:Shared.BrowserApp
GetBuffer	OBSApi/AudioSource.cpp	/^bool AudioSource::GetBuffer(float **buffer, QWORD targetTimestamp)$/;"	f	class:AudioSource
GetBuffer	Source/DSoundAudioSource.cpp	/^    virtual bool GetBuffer(float **buffer, UINT *numFrames)$/;"	f	class:DSoundAudioSource
GetBuffer	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *GetBuffer )( $/;"	m	struct:IDXGISwapChain1Vtbl
GetBufferedAudioHeadersPacket	Source/DataPacketHelpers.h	/^inline BufferedDataPacket GetBufferedAudioHeadersPacket()$/;"	f
GetBufferedFrames	ObsNvenc/src/NVENCEncoder.cpp	/^int NVENCEncoder::GetBufferedFrames()$/;"	f	class:NVENCEncoder
GetBufferedFrames	Source/Encoder_x264.cpp	/^    virtual int GetBufferedFrames()$/;"	f	class:X264Encoder
GetBufferedFrames	Source/OBS.h	/^    virtual int GetBufferedFrames() { if(HasBufferedFrames()) return -1; return 0; }$/;"	f	class:VideoEncoder
GetBufferedSEIPacket	Source/DataPacketHelpers.h	/^inline BufferedDataPacket GetBufferedSEIPacket()$/;"	f
GetBufferedTime	OBSApi/AudioSource.cpp	/^QWORD AudioSource::GetBufferedTime()$/;"	f	class:AudioSource
GetBufferedVideoHeadersPacket	Source/DataPacketHelpers.h	/^inline BufferedDataPacket GetBufferedVideoHeadersPacket()$/;"	f
GetBytesPerSec	Source/API.cpp	/^    virtual UINT GetBytesPerSec() const       {return App->bytesPerSec;}$/;"	f	class:OBSAPIInterface
GetCBText	OBSApi/OBSApi.cpp	/^String GetCBText(HWND hwndCombo, UINT id)$/;"	f
GetCLRApi	CLRHostPlugin/CLRHostPlugin/CLRHostPlugin.h	/^    CLRHostApi *GetCLRApi() { return clrApi; }$/;"	f	class:CLRHostPlugin
GetCLRHost	CLRHostPlugin/CLRHostPlugin/CLRHostPlugin.h	/^    CLRHost *GetCLRHost() { return clrHost; }$/;"	f	class:CLRHostPlugin
GetCPUTime	lame/frontend/lametime.c	/^GetCPUTime(void)$/;"	f
GetCRCMode	lame/ACM/AEncodeProperties.h	/^	inline const bool GetCRCMode() const { return bCRC; }$/;"	f	class:AEncodeProperties
GetCache	OBSApi/Utility/XTLocalization.h	/^    const LocaleStringCache& GetCache() const {return cache;}$/;"	f	class:LocaleStringLookup
GetCaptureFPS	Source/API.cpp	/^    virtual UINT GetCaptureFPS() const        {return App->captureFPS;}$/;"	f	class:OBSAPIInterface
GetCaptureInfo	GraphicsCapture/GraphicsCaptureSource.cpp	/^static bool GetCaptureInfo(CaptureInfo &ci, DWORD processID)$/;"	f	file:
GetCapturePin	DShowPlugin/CaptureFilter.h	/^    inline CapturePin* GetCapturePin() const {return pin;}$/;"	f	class:CaptureFilter
GetCategory	CLRHostPlugin/CLRHostPlugin/CLRSettingsPane.cpp	/^std::wstring& CLRSettingsPane::GetCategory()$/;"	f	class:CLRSettingsPane
GetCategory	CLRHostPlugin/CLRHostPlugin/SettingsPaneBridge.h	/^    virtual CTSTR GetCategory() const$/;"	f	class:SettingsPaneBridge
GetCategory	NoiseGate/NoiseGate.cpp	/^CTSTR NoiseGateSettings::GetCategory() const$/;"	f	class:NoiseGateSettings
GetCategory	Source/SettingsAdvanced.cpp	/^CTSTR SettingsAdvanced::GetCategory() const$/;"	f	class:SettingsAdvanced
GetCategory	Source/SettingsAudio.cpp	/^CTSTR SettingsAudio::GetCategory() const$/;"	f	class:SettingsAudio
GetCategory	Source/SettingsEncoding.cpp	/^CTSTR SettingsEncoding::GetCategory() const$/;"	f	class:SettingsEncoding
GetCategory	Source/SettingsGeneral.cpp	/^CTSTR SettingsGeneral::GetCategory() const$/;"	f	class:SettingsGeneral
GetCategory	Source/SettingsHotkeys.cpp	/^CTSTR SettingsHotkeys::GetCategory() const$/;"	f	class:SettingsHotkeys
GetCategory	Source/SettingsPublish.cpp	/^CTSTR SettingsPublish::GetCategory() const$/;"	f	class:SettingsPublish
GetCategory	Source/SettingsQSV.cpp	/^CTSTR SettingsQSV::GetCategory() const$/;"	f	class:SettingsQSV
GetCategory	Source/SettingsVideo.cpp	/^CTSTR SettingsVideo::GetCategory() const$/;"	f	class:SettingsVideo
GetCategory	scenesw/SceneSwitcherSettings.cpp	/^CTSTR SceneSwitcherSettings::GetCategory() const$/;"	f	class:SceneSwitcherSettings
GetCeil	OBSApi/Utility/XMath.h	/^    inline Vect GetCeil() const                     {return Vect(*this).Ceil();}$/;"	f	struct:Vect
GetCeil	OBSApi/Utility/XMath.h	/^    inline Vect2 GetCeil() const                    {return Vect2(*this).Ceil();}$/;"	f	struct:Vect2
GetCeil	OBSApi/Utility/XMath.h	/^    inline Vect4 GetCeil() const                      {return Vect4(*this).Ceil();}$/;"	f	struct:Vect4
GetCenter	OBSApi/Utility/XMath.h	/^    inline Vect GetCenter() const$/;"	f	struct:Bounds
GetChannelCount	OBSApi/AudioSource.cpp	/^UINT AudioSource::GetChannelCount() const {return inputChannels;}$/;"	f	class:AudioSource
GetChannelInfo	libfaac/channels.c	/^void GetChannelInfo(ChannelInfo *channelInfo, int numChannels, int useLfe)$/;"	f
GetChannelLentgh	lame/ACM/AEncodeProperties.h	/^	inline const int GetChannelLentgh() const { return 3; }$/;"	f	class:AEncodeProperties
GetChannelModeString	lame/ACM/AEncodeProperties.cpp	/^const char * AEncodeProperties::GetChannelModeString(int a_channelID) const$/;"	f	class:AEncodeProperties
GetChannelModeString	lame/ACM/AEncodeProperties.h	/^	inline const char * GetChannelModeString() const {return GetChannelModeString(nChannelIndex); }$/;"	f	class:AEncodeProperties
GetChannelModeValue	lame/ACM/AEncodeProperties.cpp	/^const unsigned int AEncodeProperties::GetChannelModeValue() const$/;"	f	class:AEncodeProperties
GetChar	lame/ACM/tinyxml/tinyxml.h	/^	inline static const char* GetChar( const char* p, char* value )		$/;"	f	class:TiXmlBase
GetChunkInfo	Source/MP4FileStream.cpp	/^    template<typename T> void GetChunkInfo(const T &data, UINT index,$/;"	f	class:MP4FileStream
GetClampMax	OBSApi/Utility/XMath.h	/^    inline Vect GetClampMax(float f)                {return Vect(*this).ClampMax(f);}$/;"	f	struct:Vect
GetClampMin	OBSApi/Utility/XMath.h	/^    inline Vect GetClampMin(float f)                {return Vect(*this).ClampMin(f);}$/;"	f	struct:Vect
GetClampedColor	OBSApi/Utility/XMath.h	/^    inline Vect4 GetClampedColor()      {return Vect4(*this).ClampColor();}$/;"	f	struct:Vect4
GetClassID	DShowPlugin/CaptureFilter.cpp	/^STDMETHODIMP CaptureFilter::GetClassID(CLSID *pClsID) {return E_NOTIMPL;}$/;"	f	class:CaptureFilter
GetClassID	lame/dshow/Mpegac.cpp	/^STDMETHODIMP CMpegAudEnc::GetClassID(CLSID *pClsid)$/;"	f	class:CMpegAudEnc
GetClosestResolutionFPS	DShowPlugin/DShowPlugin.cpp	/^bool GetClosestResolutionFPS(List<MediaOutputInfo> &outputList, SIZE &resolution, UINT64 &frameInterval, bool bPrioritizeFPS)$/;"	f
GetCodec	Source/Encoder_AAC.cpp	/^    CTSTR GetCodec() const {return TEXT("AAC");}$/;"	f	class:AACEncoder
GetCodec	Source/Encoder_MP3.cpp	/^    CTSTR GetCodec() const {return TEXT("MP3");}$/;"	f	class:MP3Encoder
GetCodec	Source/NullOutput.cpp	/^    virtual CTSTR   GetCodec() const {return NULL;}$/;"	f	class:NullAudioEncoder
GetColor	DShowPlugin/DShowPlugin.cpp	/^    inline DWORD GetColor()$/;"	f	struct:ColorSelectionData
GetColor	OBSApi/Utility/ConfigFile.cpp	/^Color4 ConfigFile::GetColor(CTSTR lpSection, CTSTR lpKey)$/;"	f	class:ConfigFile
GetColor	OBSApi/Utility/XConfig.h	/^    inline DWORD GetColor(CTSTR lpName, DWORD def=0) const$/;"	f	class:XElement
GetColor	Source/BitmapImageSource.cpp	/^    inline DWORD GetColor()$/;"	f	struct:ColorSelectionData
GetColor	Source/DesktopImageSource.cpp	/^    inline DWORD GetColor()$/;"	f	struct:ColorSelectionData
GetColor3	OBSApi/Utility/ConfigFile.h	/^    inline Color3 GetColor3(CTSTR lpSection, CTSTR lpKey)$/;"	f	class:ConfigFile
GetColorList	OBSApi/Utility/ConfigFile.cpp	/^BOOL ConfigFile::GetColorList(CTSTR lpSection, CTSTR lpKey, List<Color4> &ColorList)$/;"	f	class:ConfigFile
GetColorList	OBSApi/Utility/XConfig.h	/^    inline void GetColorList(CTSTR lpName, List<DWORD> &ColorList) const$/;"	f	class:XElement
GetContainingOutput	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *GetContainingOutput )( $/;"	m	struct:IDXGISwapChain1Vtbl
GetCopyTexture	Source/D3D10OutputDuplicator.cpp	/^Texture* D3D10OutputDuplicator::GetCopyTexture()$/;"	f	class:D3D10OutputDuplicator
GetCopyrightMode	lame/ACM/AEncodeProperties.h	/^	inline const bool GetCopyrightMode() const { return bCopyright; }$/;"	f	class:AEncodeProperties
GetCoreParam	libmfx/include/msdk/include/mfxplugin++.h	/^    mfxStatus GetCoreParam(mfxCoreParam *par) {$/;"	f	class:MFXCoreInterface
GetCoreParam	libmfx/include/msdk/include/mfxplugin.h	/^    mfxStatus (MFX_CDECL *GetCoreParam)(mfxHDL pthis, mfxCoreParam *par);$/;"	m	struct:mfxCoreInterface
GetCoreWindow	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *GetCoreWindow )( $/;"	m	struct:IDXGISwapChain1Vtbl
GetCount	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/RenderProcess.cs	/^        int GetCount(out int SessionCount);$/;"	m	interface:Browser.IAudioSessionEnumerator
GetCrop	OBSApi/Scene.cpp	/^Vect4 SceneItem::GetCrop()$/;"	f	class:SceneItem
GetCropBL	OBSApi/Scene.cpp	/^Vect2 SceneItem::GetCropBL()$/;"	f	class:SceneItem
GetCropBR	OBSApi/Scene.cpp	/^Vect2 SceneItem::GetCropBR()$/;"	f	class:SceneItem
GetCropTL	OBSApi/Scene.cpp	/^Vect2 SceneItem::GetCropTL()$/;"	f	class:SceneItem
GetCropTR	OBSApi/Scene.cpp	/^Vect2 SceneItem::GetCropTR()$/;"	f	class:SceneItem
GetCross	OBSApi/Utility/XMath.h	/^    inline Vect2 GetCross() const$/;"	f	struct:Vect2
GetCurDesktopVolumeStats	Source/API.cpp	/^    virtual void GetCurDesktopVolumeStats(float *rms, float *max, float *peak) const$/;"	f	class:OBSAPIInterface
GetCurMicVolumeStats	Source/API.cpp	/^    virtual void GetCurMicVolumeStats(float *rms, float *max, float *peak) const$/;"	f	class:OBSAPIInterface
GetCurrentHDC	Source/DesktopImageSource.cpp	/^    HDC GetCurrentHDC()$/;"	f	class:DesktopImageSource
GetCurrentPixelShader	OBSApi/GraphicsSystem.h	/^inline Shader* GetCurrentPixelShader()                          {return GS->GetCurrentPixelShader();}$/;"	f
GetCurrentPixelShader	Source/D3D10System.cpp	/^Shader* D3D10System::GetCurrentPixelShader()$/;"	f	class:D3D10System
GetCurrentProfile	Source/OBS.h	/^    inline static CTSTR GetCurrentProfile() {return GlobalConfig->GetStringPtr(TEXT("General"), TEXT("Profile"));}$/;"	f	class:OBS
GetCurrentSceneCollection	Source/OBS.h	/^    inline static CTSTR GetCurrentSceneCollection() { return GlobalConfig->GetStringPtr(TEXT("General"), TEXT("SceneCollection")); }$/;"	f	class:OBS
GetCurrentSentBytes	Source/BandwidthAnalysis.cpp	/^    QWORD GetCurrentSentBytes() {return 0;}$/;"	f	class:BandwidthAnalyzer
GetCurrentSentBytes	Source/NullOutput.cpp	/^    QWORD GetCurrentSentBytes() {return bytesSent;}$/;"	f	class:NullNetwork	file:
GetCurrentSentBytes	Source/RTMPPublisher.cpp	/^QWORD RTMPPublisher::GetCurrentSentBytes()$/;"	f	class:RTMPPublisher
GetCurrentService	Source/Service.cpp	/^ServiceIdentifier GetCurrentService()$/;"	f
GetCurrentVertexShader	OBSApi/GraphicsSystem.h	/^inline Shader* GetCurrentVertexShader()                         {return GS->GetCurrentVertexShader();}$/;"	f
GetCurrentVertexShader	Source/D3D10System.cpp	/^Shader* D3D10System::GetCurrentVertexShader()$/;"	f	class:D3D10System
GetCursorData	OBSApi/OBSApi.cpp	/^LPBYTE GetCursorData(HICON hIcon, ICONINFO &ii, UINT &width, UINT &height)$/;"	f
GetCursorTex	Source/D3D10OutputDuplicator.cpp	/^Texture* D3D10OutputDuplicator::GetCursorTex(POINT* pos)$/;"	f	class:D3D10OutputDuplicator
GetD3D	Source/D3D10System.h	/^inline ID3D10Device*        GetD3D()        {return static_cast<ID3D10Device*>(GS->GetDevice());}$/;"	f
GetD3D11Device	QSVHelper/IntelSupport/include/d3d11_allocator.h	/^    virtual ID3D11Device * GetD3D11Device()$/;"	f	class:D3D11FrameAllocator
GetD3D9D3DPPFlagsString	GraphicsCapture/GraphicsCaptureHook/D3D9LogStuff.cpp	/^static string GetD3D9D3DPPFlagsString(DWORD flags)$/;"	f	file:
GetD3D9FormatName	GraphicsCapture/GraphicsCaptureHook/D3D9LogStuff.cpp	/^static string GetD3D9FormatName(DWORD format)$/;"	f	file:
GetD3D9MultiSampleTypeName	GraphicsCapture/GraphicsCaptureHook/D3D9LogStuff.cpp	/^static string GetD3D9MultiSampleTypeName(DWORD mst)$/;"	f	file:
GetD3D9PatchAddress	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^LPBYTE GetD3D9PatchAddress()$/;"	f
GetD3D9PatchType	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^int GetD3D9PatchType()$/;"	f
GetD3D9PoolName	GraphicsCapture/GraphicsCaptureHook/D3D9LogStuff.cpp	/^static string GetD3D9PoolName(DWORD pool)$/;"	f	file:
GetD3D9ResourceTypeName	GraphicsCapture/GraphicsCaptureHook/D3D9LogStuff.cpp	/^static string GetD3D9ResourceTypeName(DWORD rt)$/;"	f	file:
GetD3D9SwapEffectName	GraphicsCapture/GraphicsCaptureHook/D3D9LogStuff.cpp	/^static string GetD3D9SwapEffectName(DWORD se)$/;"	f	file:
GetD3D9UsageString	GraphicsCapture/GraphicsCaptureHook/D3D9LogStuff.cpp	/^static string GetD3D9UsageString(DWORD flags)$/;"	f	file:
GetD3DTexture	Source/D3D10System.h	/^    LPVOID GetD3DTexture() {return texture;}$/;"	f	class:D3D10Texture
GetDC	Source/D3D10Texture.cpp	/^bool D3D10Texture::GetDC(HDC &hDC)$/;"	f	class:D3D10Texture
GetDC	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *GetDC )( $/;"	m	struct:IDXGISurface2Vtbl
GetDHOffset1	librtmp/handshake.h	/^GetDHOffset1(uint8_t *handshake, unsigned int len)$/;"	f
GetDHOffset2	librtmp/handshake.h	/^GetDHOffset2(uint8_t *handshake, unsigned int len)$/;"	f
GetDXGIFormat	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^DXGI_FORMAT GetDXGIFormat(D3DFORMAT format)$/;"	f
GetData	OBSApi/Utility/XConfig.h	/^    inline CTSTR GetData() const        {return strData;}$/;"	f	class:XDataItem
GetData	Source/D3D10VertexBuffer.cpp	/^VBData* D3D10VertexBuffer::GetData()$/;"	f	class:D3D10VertexBuffer
GetDataItem	OBSApi/Utility/XConfig.cpp	/^XDataItem* XElement::GetDataItem(CTSTR lpName) const$/;"	f	class:XElement
GetDataItemByID	OBSApi/Utility/XConfig.cpp	/^XDataItem* XElement::GetDataItemByID(DWORD itemID) const$/;"	f	class:XElement
GetDecodeStat	libmfx/include/msdk/include/mfxvideo++.h	/^    virtual mfxStatus GetDecodeStat(mfxDecodeStat *stat) { return MFXVideoDECODE_GetDecodeStat(m_session, stat); }$/;"	f	class:MFXVideoDECODE
GetDefaultAudioEndpoint	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/RenderProcess.cs	/^        int GetDefaultAudioEndpoint(EDataFlow dataFlow, ERole role, out IMMDevice ppDevice);$/;"	m	interface:Browser.IMMDeviceEnumerator
GetDefaultDevice	Source/GetAudioDevices.cpp	/^bool GetDefaultDevice(String &strVal, EDataFlow df )$/;"	f
GetDefaultMicID	Source/GetAudioDevices.cpp	/^bool GetDefaultMicID(String &strVal) {$/;"	f
GetDefaultSpeakerID	Source/GetAudioDevices.cpp	/^bool GetDefaultSpeakerID(String &strVal) {$/;"	f
GetDesaturatedColor	OBSApi/Utility/XMath.h	/^    inline Vect4 GetDesaturatedColor()    {return Vect4(*this).DesaturateColor();}$/;"	f	struct:Vect4
GetDesc	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *GetDesc )( $/;"	m	struct:IDXGIAdapter2Vtbl
GetDesc	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *GetDesc )( $/;"	m	struct:IDXGIOutput1Vtbl
GetDesc	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *GetDesc )( $/;"	m	struct:IDXGISurface2Vtbl
GetDesc	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *GetDesc )( $/;"	m	struct:IDXGISwapChain1Vtbl
GetDesc	extras/dxgi1_2.h	/^        void ( STDMETHODCALLTYPE *GetDesc )( $/;"	m	struct:IDXGIOutputDuplicationVtbl
GetDesc1	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *GetDesc1 )( $/;"	m	struct:IDXGIAdapter2Vtbl
GetDesc1	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *GetDesc1 )( $/;"	m	struct:IDXGISwapChain1Vtbl
GetDesc2	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *GetDesc2 )( $/;"	m	struct:IDXGIAdapter2Vtbl
GetDesktopAudioSource	Source/API.cpp	/^    virtual AudioSource* GetDesktopAudioSource()    {return App->desktopAudio;}$/;"	f	class:OBSAPIInterface
GetDesktopMuted	Source/API.cpp	/^    virtual bool GetDesktopMuted()                                   {return App->GetDesktopMuted();}$/;"	f	class:OBSAPIInterface
GetDesktopMuted	Source/API.cpp	/^bool OBS::GetDesktopMuted()$/;"	f	class:OBS
GetDesktopVolume	Source/API.cpp	/^    virtual float GetDesktopVolume()                                 {return App->GetDesktopVolume();}$/;"	f	class:OBSAPIInterface
GetDesktopVolume	Source/API.cpp	/^float OBS::GetDesktopVolume()$/;"	f	class:OBS
GetDevice	Source/D3D10System.cpp	/^LPVOID D3D10System::GetDevice()$/;"	f	class:D3D10System
GetDevice	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *GetDevice )( $/;"	m	struct:IDXGIResource1Vtbl
GetDevice	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *GetDevice )( $/;"	m	struct:IDXGISurface2Vtbl
GetDevice	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *GetDevice )( $/;"	m	struct:IDXGISwapChain1Vtbl
GetDeviceByValue	DShowPlugin/DShowPlugin.cpp	/^IBaseFilter* GetDeviceByValue(const IID &enumType, WSTR lpType, CTSTR lpName, WSTR lpType2, CTSTR lpName2)$/;"	f
GetDeviceID	libmfx/src/mfx_dxva2_device.cpp	/^mfxU32 DXDevice::GetDeviceID(void) const$/;"	f	class:DXDevice
GetDeviceID	libmfx/src/mfx_dxva2_device.cpp	/^mfxU32 DXVA2Device::GetDeviceID(void) const$/;"	f	class:DXVA2Device
GetDeviceName	DShowPlugin/DeviceAudio.cpp	/^CTSTR DeviceAudioSource::GetDeviceName() const$/;"	f	class:DeviceAudioSource
GetDeviceName	Source/MMDeviceAudioSource.cpp	/^    virtual CTSTR GetDeviceName() const {return strDeviceName.Array();}$/;"	f	class:MMDeviceAudioSource
GetDeviceName2	OBSApi/AudioSource.h	/^    CTSTR GetDeviceName2() const {return GetDeviceName();}$/;"	f	class:AudioSource
GetDiamater	OBSApi/Utility/XMath.h	/^    inline float GetDiamater()$/;"	f	struct:Bounds
GetDigestOffset1	librtmp/handshake.h	/^GetDigestOffset1(uint8_t *handshake, unsigned int len)$/;"	f
GetDigestOffset2	librtmp/handshake.h	/^GetDigestOffset2(uint8_t *handshake, unsigned int len)$/;"	f
GetDirection	OBSApi/Utility/XMath.h	/^    inline Vect2& GetDirection() const$/;"	f	struct:Line2
GetDirectionVector	OBSApi/Utility/XMath.cpp	/^Vect Quat::GetDirectionVector() const$/;"	f	class:Quat
GetDisplayDevices	Source/D3D10System.cpp	/^void GetDisplayDevices(DeviceOutputs &deviceList)$/;"	f
GetDisplayHandler	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserClient.cs	/^        protected override CefDisplayHandler GetDisplayHandler()$/;"	m	class:Browser.BrowserClient
GetDisplayModeList	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *GetDisplayModeList )( $/;"	m	struct:IDXGIOutput1Vtbl
GetDisplayModeList1	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *GetDisplayModeList1 )( $/;"	m	struct:IDXGIOutput1Vtbl
GetDisplayName	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/RenderProcess.cs	/^        int GetDisplayName([MarshalAs(UnmanagedType.LPWStr)] out string pRetVal);$/;"	m	interface:Browser.IAudioSessionControl2
GetDisplayName	CLRHostPlugin/CLRHostPlugin/CLRImageSourceFactory.cpp	/^std::wstring CLRImageSourceFactory::GetDisplayName()$/;"	f	class:CLRImageSourceFactory
GetDisplaySurfaceData	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *GetDisplaySurfaceData )( $/;"	m	struct:IDXGIOutput1Vtbl
GetDisplaySurfaceData1	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *GetDisplaySurfaceData1 )( $/;"	m	struct:IDXGIOutput1Vtbl
GetDocument	lame/ACM/tinyxml/tinyxml.cpp	/^TiXmlDocument* TiXmlNode::GetDocument() const$/;"	f	class:TiXmlNode
GetDoublePlaneIntersection	OBSApi/Utility/XMath.cpp	/^BOOL Plane::GetDoublePlaneIntersection(const Plane &p2, Vect &intOrigin, Vect &intDir) const$/;"	f	class:Plane
GetDriverVersion	libmfx/src/mfx_dxva2_device.cpp	/^mfxU64 DXDevice::GetDriverVersion(void) const$/;"	f	class:DXDevice
GetDriverVersion	libmfx/src/mfx_dxva2_device.cpp	/^mfxU64 DXVA2Device::GetDriverVersion(void) const$/;"	f	class:DXVA2Device
GetEarliestTimestamp	OBSApi/AudioSource.cpp	/^bool AudioSource::GetEarliestTimestamp(QWORD &timestamp)$/;"	f	class:AudioSource
GetEditText	OBSApi/OBSApi.cpp	/^String GetEditText(HWND hwndEdit)$/;"	f
GetElement	OBSApi/Scene.h	/^    inline XElement* GetElement() const         {return element;}$/;"	f	class:SceneItem
GetElement	OBSApi/Utility/Template.h	/^    inline T& GetElement(unsigned int index)$/;"	f	class:CircularList
GetElement	OBSApi/Utility/Template.h	/^    inline T& GetElement(unsigned int index)$/;"	f	class:List
GetElement	OBSApi/Utility/XConfig.cpp	/^XElement* XElement::GetElement(CTSTR lpName) const$/;"	f	class:XElement
GetElement	OBSApi/Utility/XConfig.h	/^    inline XElement *GetElement(CTSTR lpName) {return RootElement->GetElement(lpName);}$/;"	f	class:XConfig
GetElementByID	OBSApi/Utility/XConfig.cpp	/^XElement* XElement::GetElementByID(DWORD elementID) const$/;"	f	class:XElement
GetElementByID	OBSApi/Utility/XConfig.h	/^    inline XElement *GetElementByID(DWORD elementID) {return RootElement->GetElementByID(elementID);}$/;"	f	class:XConfig
GetElementById	CLRHostPlugin/CLRHostInterop/XElement.cpp	/^CLROBS::XElement^ CLROBS::XElement::GetElementById(System::Int32 elementId)$/;"	f	class:CLROBS::XElement
GetElementByItem	OBSApi/Utility/XConfig.cpp	/^XElement* XElement::GetElementByItem(CTSTR lpName, CTSTR lpItemName, CTSTR lpItemValue) const$/;"	f	class:XElement
GetElementList	OBSApi/Utility/XConfig.cpp	/^void  XElement::GetElementList(CTSTR lpName, List<XElement*> &Elements) const$/;"	f	class:XElement
GetEncodeStat	libmfx/include/msdk/include/mfxvideo++.h	/^    virtual mfxStatus GetEncodeStat(mfxEncodeStat *stat) { return MFXVideoENCODE_GetEncodeStat(m_session, stat); }$/;"	f	class:MFXVideoENCODE
GetEntity	lame/ACM/tinyxml/tinyxmlparser.cpp	/^const char* TiXmlBase::GetEntity( const char* p, char* value )$/;"	f	class:TiXmlBase
GetEvent	GraphicsCapture/GlobalCaptureStuff.h	/^inline HANDLE GetEvent(LPCTSTR lpEvent)$/;"	f
GetEvictionPriority	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *GetEvictionPriority )( $/;"	m	struct:IDXGIResource1Vtbl
GetExceptionDevice	DShowPlugin/DShowPlugin.cpp	/^IBaseFilter* GetExceptionDevice(CTSTR lpGUID)$/;"	f
GetExceptionDevice	DShowPlugin/DShowPlugin.cpp	/^IBaseFilter* GetExceptionDevice(REFGUID targetGUID)$/;"	f
GetExp	OBSApi/Utility/XMath.h	/^    inline Quat GetExp() const {return Quat(*this).Exp();}$/;"	f	struct:Quat
GetExpandedRecordingDirectoryBase	Source/OBSCapture.cpp	/^String GetExpandedRecordingDirectoryBase(String path)$/;"	f
GetFPS	Source/OBS.h	/^    inline UINT GetFPS()       const {return fps;}$/;"	f	class:OBS
GetFile	OBSApi/Utility/XFile.h	/^    const XFile& GetFile() const {return file;}$/;"	f	class:XFileInputSerializer
GetFilePath	OBSApi/Utility/ConfigFile.h	/^    inline CTSTR GetFilePath() const {return strFileName;}$/;"	f	class:ConfigFile
GetFileSize	OBSApi/Utility/XFile_Windows.cpp	/^QWORD XFile::GetFileSize() const$/;"	f	class:XFile
GetFilesInDirectory	CLRHostPlugin/CLRHostPlugin/CLRHost.cpp	/^GetFilesInDirectory($/;"	f
GetFilterCrossbar	DShowPlugin/DShowPlugin.cpp	/^static IAMCrossbar *GetFilterCrossbar(IBaseFilter *filter)$/;"	f	file:
GetFirstBitmapSize	Source/BitmapTransitionSource.cpp	/^    static Vect2 GetFirstBitmapSize(StringList &bitmapList)$/;"	f	class:BitmapTransitionSource
GetFloat	OBSApi/Scene.h	/^    virtual bool GetFloat(CTSTR lpName, float &fValue)   const {return false;}$/;"	f	class:ImageSource
GetFloat	OBSApi/Utility/ConfigFile.cpp	/^float ConfigFile::GetFloat(CTSTR lpSection, CTSTR lpKey, float def)$/;"	f	class:ConfigFile
GetFloat	OBSApi/Utility/XConfig.cpp	/^float XElement::GetFloat(CTSTR lpName, float def) const$/;"	f	class:XElement
GetFloat	Source/GlobalSource.cpp	/^    virtual bool GetFloat(CTSTR lpName, float &fValue)   const {return globalSource ? globalSource->GetFloat  (lpName, fValue) : false;}$/;"	f	class:GlobalSource
GetFloatList	OBSApi/Utility/ConfigFile.cpp	/^BOOL ConfigFile::GetFloatList(CTSTR lpSection, CTSTR lpKey, List<float> &FloatList)$/;"	f	class:ConfigFile
GetFloor	OBSApi/Utility/XMath.h	/^    inline Vect GetFloor() const                    {return Vect(*this).Floor();}$/;"	f	struct:Vect
GetFloor	OBSApi/Utility/XMath.h	/^    inline Vect2 GetFloor() const                   {return Vect2(*this).Floor();}$/;"	f	struct:Vect2
GetFloor	OBSApi/Utility/XMath.h	/^    inline Vect4 GetFloor() const                     {return Vect4(*this).Floor();}$/;"	f	struct:Vect4
GetFont	Source/OBS.cpp	/^HFONT OBS::GetFont(CTSTR lpFontFace, int fontSize, int fontWeight)$/;"	f	class:OBS
GetFont	Source/TextOutputSource.cpp	/^    HFONT GetFont()$/;"	f	class:TextOutputSource	file:
GetFontFace	Source/TextOutputSource.cpp	/^CTSTR GetFontFace(ConfigTextSourceInfo *configInfo, HWND hwndFontList)$/;"	f
GetForceChannelMode	lame/ACM/AEncodeProperties.h	/^	inline const bool GetForceChannelMode() const { return bForceChannel; }$/;"	f	class:AEncodeProperties
GetFormat	Source/D3D10Texture.cpp	/^GSColorFormat D3D10Texture::GetFormat() const$/;"	f	class:D3D10Texture
GetFormat	lame/dshow/Mpegac.cpp	/^HRESULT STDMETHODCALLTYPE CMpegAudEncOutPin::GetFormat(AM_MEDIA_TYPE **ppmt)$/;"	f	class:CMpegAudEncOutPin
GetFrame	lame/dshow/Encoder.cpp	/^int CEncoder::GetFrame(const unsigned char ** pframe)$/;"	f	class:CEncoder
GetFrameDirtyRects	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *GetFrameDirtyRects )( $/;"	m	struct:IDXGIOutputDuplicationVtbl
GetFrameHDL	QSVHelper/IntelSupport/src/d3d11_allocator.cpp	/^mfxStatus D3D11FrameAllocator::GetFrameHDL(mfxMemId mid, mfxHDL *handle)$/;"	f	class:D3D11FrameAllocator
GetFrameIntervalDist	DShowPlugin/DShowPlugin.cpp	/^static inline UINT64 GetFrameIntervalDist(UINT64 minInterval, UINT64 maxInterval, UINT64 desiredInterval)$/;"	f	file:
GetFrameMoveRects	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *GetFrameMoveRects )( $/;"	m	struct:IDXGIOutputDuplicationVtbl
GetFramePointerShape	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *GetFramePointerShape )( $/;"	m	struct:IDXGIOutputDuplicationVtbl
GetFrameSize	Source/Encoder_AAC.cpp	/^    UINT GetFrameSize() const$/;"	f	class:AACEncoder
GetFrameSize	Source/Encoder_MP3.cpp	/^    UINT GetFrameSize() const$/;"	f	class:MP3Encoder
GetFrameSize	Source/NullOutput.cpp	/^    virtual UINT    GetFrameSize() const {return 0;}$/;"	f	class:NullAudioEncoder
GetFrameStatistics	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *GetFrameStatistics )( $/;"	m	struct:IDXGIOutput1Vtbl
GetFrameStatistics	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *GetFrameStatistics )( $/;"	m	struct:IDXGISwapChain1Vtbl
GetFrameTime	Source/OBS.h	/^    inline UINT GetFrameTime() const {return frameTime;}$/;"	f	class:OBS
GetFrameToWindowScale	Source/API.cpp	/^    virtual Vect2 GetFrameToWindowScale() const                 {return App->GetFrameToWindowScale();}$/;"	f	class:OBSAPIInterface
GetFrameToWindowScale	Source/WindowStuff.cpp	/^Vect2 OBS::GetFrameToWindowScale()$/;"	f	class:OBS
GetFramesDropped	Source/API.cpp	/^    virtual UINT GetFramesDropped() const     {return App->curFramesDropped;}$/;"	f	class:OBSAPIInterface
GetFullscreenDesc	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *GetFullscreenDesc )( $/;"	m	struct:IDXGISwapChain1Vtbl
GetFullscreenState	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *GetFullscreenState )( $/;"	m	struct:IDXGISwapChain1Vtbl
GetGPUThreadPriority	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *GetGPUThreadPriority )( $/;"	m	struct:IDXGIDevice2Vtbl
GetGSFormatFromDXGIFormat	Source/D3D10Texture.cpp	/^inline GSColorFormat GetGSFormatFromDXGIFormat(DXGI_FORMAT dxgiFormat)$/;"	f
GetGUIDFromString	DShowPlugin/DShowPlugin.cpp	/^bool GetGUIDFromString(CTSTR lpGUID, GUID &targetGUID)$/;"	f
GetGammaControl	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *GetGammaControl )( $/;"	m	struct:IDXGIOutput1Vtbl
GetGammaControlCapabilities	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *GetGammaControlCapabilities )( $/;"	m	struct:IDXGIOutput1Vtbl
GetGlobalSource	Source/OBS.h	/^    inline ImageSource* GetGlobalSource(CTSTR lpName)$/;"	f	class:OBS
GetGlobalSourceElement	Source/GlobalSource.cpp	/^XElement* OBS::GetGlobalSourceElement(CTSTR lpName)$/;"	f	class:OBS
GetGlobalSourceListElement	Source/API.cpp	/^    virtual XElement* GetGlobalSourceListElement()  {return App->scenesConfig.GetElement(TEXT("global sources"));}$/;"	f	class:OBSAPIInterface
GetGlobalSourceNames	Source/GlobalSource.cpp	/^void OBS::GetGlobalSourceNames(List<CTSTR> &globalSourceNames, bool mainSceneGlobalSourceNames)$/;"	f	class:OBS
GetGroupingParam	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/RenderProcess.cs	/^        int GetGroupingParam(out Guid pRetVal);$/;"	m	interface:Browser.IAudioSessionControl2
GetHDL	libmfx/include/msdk/include/mfxvideo.h	/^    mfxStatus  (MFX_CDECL  *GetHDL)   (mfxHDL pthis, mfxMemId mid, mfxHDL *handle);$/;"	m
GetHDL_	QSVHelper/IntelSupport/src/base_allocator.cpp	/^mfxStatus MFXFrameAllocator::GetHDL_(mfxHDL pthis, mfxMemId mid, mfxHDL *handle)$/;"	f	class:MFXFrameAllocator
GetHSpline	OBSApi/Utility/XMath.cpp	/^Vect GetHSpline(const Vect &v0, const Vect &v1, const Vect &m0, const Vect &m1, float fT)$/;"	f
GetHandle	QSVHelper/IntelSupport/src/d3d11_device.cpp	/^mfxStatus CD3D11Device::GetHandle(mfxHandleType type, mfxHDL *pHdl)$/;"	f	class:CD3D11Device
GetHandle	libmfx/include/msdk/include/mfxplugin++.h	/^    mfxStatus GetHandle (mfxHandleType type, mfxHDL *handle) {$/;"	f	class:MFXCoreInterface
GetHandle	libmfx/include/msdk/include/mfxplugin.h	/^    mfxStatus (MFX_CDECL *GetHandle) (mfxHDL pthis, mfxHandleType type, mfxHDL *handle);$/;"	m	struct:mfxCoreInterface
GetHandle	libmfx/include/msdk/include/mfxvideo++.h	/^    virtual mfxStatus GetHandle(mfxHandleType type, mfxHDL *hdl) { return MFXVideoCORE_GetHandle(m_session, type, hdl); }$/;"	f	class:MFXVideoSession
GetHashCode	CLRBrowserSourcePlugin/Plugin/Shared/BrowserPlugin.cs	/^        public override int GetHashCode()$/;"	m	class:Shared.BrowserPlugin
GetHeaders	ObsNvenc/src/NVENCEncoder.cpp	/^void NVENCEncoder::GetHeaders(DataPacket &packet)$/;"	f	class:NVENCEncoder
GetHeaders	Source/Encoder_AAC.cpp	/^    void GetHeaders(DataPacket &packet)$/;"	f	class:AACEncoder
GetHeaders	Source/Encoder_MP3.cpp	/^    void GetHeaders(DataPacket &packet)$/;"	f	class:MP3Encoder
GetHeaders	Source/Encoder_QSV.cpp	/^    void GetHeaders(DataPacket &packet)$/;"	f	class:QSVEncoder
GetHeaders	Source/Encoder_x264.cpp	/^    void GetHeaders(DataPacket &packet)$/;"	f	class:X264Encoder
GetHeaders	Source/NullOutput.cpp	/^    virtual void    GetHeaders(DataPacket &packet) {}$/;"	f	class:NullAudioEncoder
GetHeaders	Source/NullOutput.cpp	/^    virtual void GetHeaders(DataPacket &packet) {}$/;"	f	class:NullVideoEncoder
GetHex	OBSApi/Utility/ConfigFile.cpp	/^DWORD ConfigFile::GetHex(CTSTR lpSection, CTSTR lpKey, DWORD def)$/;"	f	class:ConfigFile
GetHex	OBSApi/Utility/XConfig.h	/^    inline DWORD GetHex(CTSTR lpName, DWORD def=0) const$/;"	f	class:XElement
GetHexList	OBSApi/Utility/XConfig.h	/^    inline void GetHexList(CTSTR lpName, List<DWORD> &HexList) const$/;"	f	class:XElement
GetHotkeyControlExData	OBSApi/HotkeyControlEx.cpp	/^inline HotkeyControlExData* GetHotkeyControlExData(HWND hwnd)$/;"	f
GetHwnd	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *GetHwnd )( $/;"	m	struct:IDXGISwapChain1Vtbl
GetID	OBSApi/Scene.h	/^inline UINT SceneItem::GetID()$/;"	f	class:SceneItem
GetIcon	Source/OBS.cpp	/^HICON OBS::GetIcon(HINSTANCE hInst, int resource)$/;"	f	class:OBS
GetIconPath	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/RenderProcess.cs	/^        int GetIconPath([MarshalAs(UnmanagedType.LPWStr)] out string pRetVal);$/;"	m	interface:Browser.IAudioSessionControl2
GetImageSourceClass	Source/OBS.h	/^    inline ClassInfo* GetImageSourceClass(CTSTR lpClass) const$/;"	f	class:OBS
GetImageSourceFactories	CLRHostPlugin/CLRHostPlugin/CLRHostApi.h	/^    std::map<std::wstring, CLRImageSourceFactory *> &GetImageSourceFactories() { return imageSourceFactories; }$/;"	f	class:CLRHostApi
GetImageSourceFactoryType	CLRHostPlugin/CLRHostPlugin/CLRHost.h	/^    mscorlib::_Type *GetImageSourceFactoryType() { return imageSourceFactoryType; }$/;"	f	class:CLRHost
GetImageSourceType	CLRHostPlugin/CLRHostPlugin/CLRHost.h	/^    mscorlib::_Type *GetImageSourceType() { return imageSourceType; }$/;"	f	class:CLRHost
GetImplementationType	libmfx/src/mfx_library_iterator.cpp	/^mfxIMPL MFXLibraryIterator::GetImplementationType()$/;"	f	class:MFX::MFXLibraryIterator
GetImplementationType	libmfx/src/mfx_library_iterator.cpp	/^mfxStatus GetImplementationType(const mfxU32 adapterNum, mfxIMPL *pImplInterface, mfxU32 *pVendorID, mfxU32 *pDeviceID)$/;"	f	namespace:MFX
GetInfoString	ObsNvenc/src/NVENCEncoder.cpp	/^String NVENCEncoder::GetInfoString() const$/;"	f	class:NVENCEncoder
GetInfoString	Source/Encoder_AAC.cpp	/^    String GetInfoString() const$/;"	f	class:AACEncoder
GetInfoString	Source/Encoder_MP3.cpp	/^    String GetInfoString() const$/;"	f	class:MP3Encoder
GetInfoString	Source/Encoder_QSV.cpp	/^    String GetInfoString() const$/;"	f	class:QSVEncoder
GetInfoString	Source/Encoder_x264.cpp	/^    String GetInfoString() const$/;"	f	class:X264Encoder
GetInfoString	Source/NullOutput.cpp	/^    virtual String  GetInfoString() const {return String();}$/;"	f	class:NullAudioEncoder
GetInfoString	Source/NullOutput.cpp	/^    virtual String GetInfoString() const {return String();}$/;"	f	class:NullVideoEncoder
GetInputType	lame/dshow/Encoder.h	/^    HRESULT GetInputType(WAVEFORMATEX *pwfex)$/;"	f	class:CEncoder
GetInstalledClrRuntimes	CLRHostPlugin/CLRHostPlugin/CLRHost.cpp	/^GetInstalledClrRuntimes($/;"	f
GetInt	OBSApi/Scene.h	/^    virtual bool GetInt(CTSTR lpName, int &iValue)       const {return false;}$/;"	f	class:ImageSource
GetInt	OBSApi/Utility/ConfigFile.cpp	/^int ConfigFile::GetInt(CTSTR lpSection, CTSTR lpKey, int def)$/;"	f	class:ConfigFile
GetInt	OBSApi/Utility/XConfig.cpp	/^int   XElement::GetInt(CTSTR lpName, int def) const$/;"	f	class:XElement
GetInt	Source/GlobalSource.cpp	/^    virtual bool GetInt(CTSTR lpName, int &iValue)       const {return globalSource ? globalSource->GetInt    (lpName, iValue) : false;}$/;"	f	class:GlobalSource
GetIntList	OBSApi/Utility/ConfigFile.cpp	/^BOOL ConfigFile::GetIntList(CTSTR lpSection, CTSTR lpKey, List<int> &IntList)$/;"	f	class:ConfigFile
GetIntList	OBSApi/Utility/XConfig.cpp	/^void  XElement::GetIntList(CTSTR lpName, List<int> &IntList) const$/;"	f	class:XElement
GetInterpolationTangent	OBSApi/Utility/XMath.cpp	/^Quat Quat::GetInterpolationTangent(const Quat &prev, const Quat &next) const$/;"	f	class:Quat
GetInterpolationTangent	OBSApi/Utility/XMath.cpp	/^Vect Vect::GetInterpolationTangent(const Vect &prev, const Vect &next) const$/;"	f	class:Vect
GetIntersection	OBSApi/Utility/XMath.cpp	/^BOOL Plane::GetIntersection(const Vect &p1, const Vect &p2, float &fT) const$/;"	f	class:Plane
GetInv	OBSApi/Utility/XMath.h	/^    inline Quat  GetInv() const                     {return Quat(*this).Inv();}$/;"	f	struct:Quat
GetInverse	OBSApi/Utility/XMath.cpp	/^Matrix Matrix::GetInverse() const$/;"	f	class:Matrix
GetItemModifyType	Source/WindowStuff.cpp	/^ItemModifyType GetItemModifyType(const Vect2 &mousePos, const Vect2 &itemPos, const Vect2 &itemSize, const Vect4 &crop, const Vect2 &scaleVal)$/;"	f
GetItemsOnPoint	OBSApi/Scene.h	/^    inline void GetItemsOnPoint(const Vect2 &pos, List<SceneItem*> &items) const$/;"	f	class:Scene
GetLBText	OBSApi/OBSApi.cpp	/^String GetLBText(HWND hwndList, UINT id)$/;"	f
GetLUID	libmfx/src/mfx_dxva2_device.cpp	/^mfxU64 DXDevice::GetLUID(void) const$/;"	f	class:DXDevice
GetLVText	OBSApi/OBSApi.cpp	/^String GetLVText(HWND hwndList, UINT id)$/;"	f
GetLanguage	Source/API.cpp	/^    virtual CTSTR GetLanguage() const           {return App->strLanguage;}$/;"	f	class:OBSAPIInterface
GetLastPresentCount	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *GetLastPresentCount )( $/;"	m	struct:IDXGISwapChain1Vtbl
GetLatestTimestamp	OBSApi/AudioSource.cpp	/^bool AudioSource::GetLatestTimestamp(QWORD &timestamp)$/;"	f	class:AudioSource
GetLifeSpanHandler	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserClient.cs	/^        protected override CefLifeSpanHandler GetLifeSpanHandler()$/;"	m	class:Browser.BrowserClient
GetLinePos	OBSApi/Utility/XString.cpp	/^UINT String::GetLinePos(UINT dwLine)$/;"	f	class:String
GetLoadHandler	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserClient.cs	/^        protected override CefLoadHandler GetLoadHandler()$/;"	m	class:Browser.BrowserClient
GetLocaleNativeName	OBSApi/Utility/XTLocalization.cpp	/^LocaleNativeName* STDCALL GetLocaleNativeName(CTSTR lpCode)$/;"	f
GetLog	OBSApi/Utility/XMath.h	/^    inline Quat GetLog() const {return Quat(*this).Log();}$/;"	f	struct:Quat
GetLogUploadMenuItem	Source/WindowStuff.cpp	/^String GetLogUploadMenuItem(UINT item)$/;"	f
GetLookDirection	OBSApi/Utility/XMath.h	/^    static inline Quat GetLookDirection(const Vect &dir) {return Quat().SetLookDirection(dir);}$/;"	f	struct:Quat
GetLower	OBSApi/Utility/XString.h	/^    inline String GetLower() const              {return String(*this).MakeLower();}$/;"	f	class:String
GetMP3FormatForIndex	lame/ACM/ACM.cpp	/^void ACM::GetMP3FormatForIndex(const DWORD the_Index, WAVEFORMATEX & the_Format, unsigned short the_String[ACMFORMATDETAILS_FORMAT_CHARS]) const$/;"	f	class:ACM
GetMacTime	Source/MP4FileStream.cpp	/^time_t GetMacTime()$/;"	f
GetMainWindow	Source/API.cpp	/^    virtual HWND GetMainWindow() const          {return hwndMain;}$/;"	f	class:OBSAPIInterface
GetMainWindowHandle	CLRHostPlugin/CLRHostInterop/API.cpp	/^System::IntPtr API::GetMainWindowHandle()$/;"	f	class:API
GetMasterVolume	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/RenderProcess.cs	/^        int GetMasterVolume(out float pfLevel);$/;"	m	interface:Browser.ISimpleAudioVolume
GetMatrix	OBSApi/Scene.h	/^    virtual bool GetMatrix(CTSTR lpName, Matrix &mat)    const {return false;}$/;"	f	class:ImageSource
GetMatrix	Source/GlobalSource.cpp	/^    virtual bool GetMatrix(CTSTR lpName, Matrix &mat)    const {return globalSource ? globalSource->GetMatrix (lpName, mat)    : false;}$/;"	f	class:GlobalSource
GetMaxFPS	CLRHostPlugin/CLRHostInterop/API.cpp	/^int API::GetMaxFPS()$/;"	f	class:API
GetMaxFPS	Source/API.cpp	/^    virtual UINT GetMaxFPS() const                  {return App->bRunning ? App->fps : AppConfig->GetInt(TEXT("Video"), TEXT("FPS"), 30);}$/;"	f	class:OBSAPIInterface
GetMaxPredSfb	libfaac/util.c	/^int GetMaxPredSfb(int samplingRateIdx)$/;"	f
GetMaximumFrameLatency	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *GetMaximumFrameLatency )( $/;"	m	struct:IDXGIDevice2Vtbl
GetMediaType	lame/dshow/Mpegac.cpp	/^HRESULT CMpegAudEnc::GetMediaType(int iPosition, CMediaType *pMediaType)$/;"	f	class:CMpegAudEnc
GetMediaType	lame/dshow/Mpegac.cpp	/^HRESULT CMpegAudEncOutPin::GetMediaType(int iPosition, CMediaType *pmt)$/;"	f	class:CMpegAudEncOutPin
GetMemInfo	OBSApi/Utility/FastAlloc.cpp	60;"	d	file:
GetMemoryBlock	minhook/src/buffer.cpp	/^	MEMORY_BLOCK* GetMemoryBlock(void* const pOrigin, DWORD protect, size_t capacity)$/;"	f	namespace:MinHook::<anonymous>
GetMerged	OBSApi/Utility/XMath.h	/^    inline Bounds GetMerged(const Bounds &bounds) const$/;"	f	struct:Bounds
GetMessageTimeout	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	/^BOOL GetMessageTimeout(MSG &msg, DWORD timeout)$/;"	f
GetMicAudioSource	Source/API.cpp	/^    virtual AudioSource* GetMicAudioSource()        {return App->micAudio;}$/;"	f	class:OBSAPIInterface
GetMicMuted	Source/API.cpp	/^    virtual bool GetMicMuted()                                       {return App->GetMicMuted();}$/;"	f	class:OBSAPIInterface
GetMicMuted	Source/API.cpp	/^bool OBS::GetMicMuted()$/;"	f	class:OBS
GetMicVolume	Source/API.cpp	/^    virtual float GetMicVolume()                                     {return App->GetMicVolume();}$/;"	f	class:OBSAPIInterface
GetMicVolume	Source/API.cpp	/^float OBS::GetMicVolume()$/;"	f	class:OBS
GetMirrorByPlane	OBSApi/Utility/XMath.h	/^    inline Matrix GetMirrorByPlane(const Plane &p) const$/;"	f	struct:Matrix
GetMirrorByVector	OBSApi/Utility/XMath.h	/^    inline Matrix GetMirrorByVector(const Vect &v) const$/;"	f	struct:Matrix
GetMiscFlags	DShowPlugin/CaptureFilter.cpp	/^    STDMETHODIMP_(ULONG) GetMiscFlags() {return AM_FILTER_MISC_FLAGS_IS_RENDERER;}$/;"	f	class:CaptureFlags
GetMonitor	Source/OBS.h	/^    inline const MonitorInfo& GetMonitor(UINT id) const {if(id < monitors.Num()) return monitors[id]; else return monitors[0];}$/;"	f	class:OBS
GetMostImportantInfo	Source/API.cpp	/^String OBS::GetMostImportantInfo(StreamInfoPriority &priority)$/;"	f	class:OBS
GetMultiply	OBSApi/Utility/XMath.h	/^    inline Matrix GetMultiply(const Matrix &m) const$/;"	f	struct:Matrix
GetMute	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/RenderProcess.cs	/^        int GetMute(out bool pbMute);$/;"	m	interface:Browser.ISimpleAudioVolume
GetName	OBSApi/Scene.h	/^    inline CTSTR GetName() const                {return element->GetName();}$/;"	f	class:SceneItem
GetName	OBSApi/Utility/XConfig.h	/^    inline CTSTR GetName() const        {return strName;}$/;"	f	class:XBaseItem
GetNewSceneName	Source/WindowStuff.cpp	/^void OBS::GetNewSceneName(String &strScene)$/;"	f	class:OBS
GetNewSourceName	Source/WindowStuff.cpp	/^void OBS::GetNewSourceName(String &strSource)$/;"	f	class:OBS
GetNewestFrame	OBSApi/AudioSource.cpp	/^bool AudioSource::GetNewestFrame(float **buffer)$/;"	f	class:AudioSource
GetNextBuffer	DShowPlugin/DeviceAudio.cpp	/^bool DeviceAudioSource::GetNextBuffer(void **buffer, UINT *numFrames, QWORD *timestamp)$/;"	f	class:DeviceAudioSource
GetNextBuffer	Source/MMDeviceAudioSource.cpp	/^bool MMDeviceAudioSource::GetNextBuffer(void **buffer, UINT *numFrames, QWORD *timestamp)$/;"	f	class:MMDeviceAudioSource
GetNextLine	OBSApi/Utility/XConfig.cpp	/^static inline bool GetNextLine(TSTR &lpTemp, bool isJSON)$/;"	f	file:
GetNextToken	Source/CodeTokenizer.cpp	/^BOOL CodeTokenizer::GetNextToken(String &token, BOOL bPeek)$/;"	f	class:CodeTokenizer
GetNextTokenEval	Source/CodeTokenizer.cpp	/^BOOL CodeTokenizer::GetNextTokenEval(String &token, BOOL *bFloatOccurance, int curPrecedence)$/;"	f	class:CodeTokenizer
GetNoBiResMode	lame/ACM/AEncodeProperties.h	/^	inline const bool GetNoBiResMode() const { return bNoBitRes; }$/;"	f	class:AEncodeProperties
GetNorm	OBSApi/Utility/XMath.h	/^    inline Quat GetNorm() const                     {return Quat(*this).Norm();}$/;"	f	struct:Quat
GetNorm	OBSApi/Utility/XMath.h	/^    inline Vect GetNorm() const$/;"	f	struct:Vect
GetNorm	OBSApi/Utility/XMath.h	/^    inline Vect2 GetNorm()$/;"	f	struct:Vect2
GetNormFull	OBSApi/Utility/XMath.h	/^    inline Vect4 GetNormFull()                        {return Vect4(*this).NormFull();}$/;"	f	struct:Vect4
GetNormXYZ	OBSApi/Utility/XMath.h	/^    inline Vect4 GetNormXYZ()                         {return Vect4(*this).NormXYZ();}$/;"	f	struct:Vect4
GetNormalByteValue	OBSApi/Utility/XMath.h	/^    inline void GetNormalByteValue()$/;"	f	struct:Vect
GetNormalWordValue	OBSApi/Utility/XMath.h	/^    inline void GetNormalWordValue()$/;"	f	struct:Vect
GetNumOutputs	Source/D3D10System.cpp	/^UINT D3D10System::GetNumOutputs()$/;"	f	class:D3D10System
GetNumberEncodingFormats	lame/ACM/ACM.cpp	/^DWORD ACM::GetNumberEncodingFormats() const$/;"	f	class:ACM
GetNumberOfCapabilities	lame/dshow/Mpegac.cpp	/^HRESULT STDMETHODCALLTYPE CMpegAudEncOutPin::GetNumberOfCapabilities(int *piCount, int *piSize)$/;"	f	class:CMpegAudEncOutPin
GetOBSVersion	Source/API.cpp	/^    virtual DWORD GetOBSVersion() const {return OBS_VERSION;}$/;"	f	class:OBSAPIInterface
GetObjectRef	CLRHostPlugin/CLRHostPlugin/CLRObject.h	/^    IUnknown *GetObjectRef() { return objectRef; }$/;"	f	class:CLRObject
GetObjectRef	CLRHostPlugin/CLRHostPlugin/CLRObjectRef.h	/^    void *GetObjectRef() { return objectRef; }$/;"	f	class:CLRObjectRef
GetObjectType	CLRHostPlugin/CLRHostPlugin/CLRObject.h	/^    mscorlib::_Type *GetObjectType() { return objectType; }$/;"	f	class:CLRObject
GetOpaqueSurface	libmfx/include/msdk/include/mfxplugin++.h	/^    mfxStatus GetOpaqueSurface(mfxFrameSurface1 *surf, mfxFrameSurface1 **op_surf) {$/;"	f	class:MFXCoreInterface
GetOpaqueSurface	libmfx/include/msdk/include/mfxplugin.h	/^    mfxStatus (MFX_CDECL *GetOpaqueSurface)(mfxHDL pthis, mfxFrameSurface1 *surf, mfxFrameSurface1 **op_surf);$/;"	m	struct:mfxCoreInterface
GetOriginalMode	lame/ACM/AEncodeProperties.h	/^	inline const bool GetOriginalMode() const { return bOriginal; }$/;"	f	class:AEncodeProperties
GetOutputFilename	Source/OBSCapture.cpp	/^String GetOutputFilename(bool replayBuffer=false)$/;"	f
GetOutputList	DShowPlugin/DShowPlugin.cpp	/^void GetOutputList(IPin *curPin, List<MediaOutputInfo> &outputInfoList)$/;"	f
GetOutputPin	DShowPlugin/DShowPlugin.cpp	/^IPin* GetOutputPin(IBaseFilter *filter, const GUID *majorType)$/;"	f
GetOutputSampleRate	lame/ACM/ACMStream.cpp	/^unsigned int ACMStream::GetOutputSampleRate(int samples_per_sec, int bitrate, int channels)$/;"	f	class:ACMStream
GetOutputSize	Source/API.cpp	/^    virtual Vect2 GetOutputSize() const             {return Vect2(float(App->outputCX), float(App->outputCY));}$/;"	f	class:OBSAPIInterface
GetOutputSize	Source/API.cpp	/^    virtual void GetOutputSize(UINT &width, UINT &height) const             {App->GetOutputSize(width, height);}$/;"	f	class:OBSAPIInterface
GetOutputSize	Source/OBS.h	/^    inline Vect2 GetOutputSize()      const         {return Vect2(float(outputCX), float(outputCY));}$/;"	f	class:OBS
GetOutputSize	Source/OBS.h	/^    inline void GetOutputSize(UINT &width, UINT &height) const              {width = outputCX;         height = outputCY;}$/;"	f	class:OBS
GetOutputSizeForInput	lame/ACM/ACMStream.cpp	/^DWORD ACMStream::GetOutputSizeForInput(const DWORD the_SrcLength) const$/;"	f	class:ACMStream
GetOutputSizeForInput	lame/ACM/DecodeStream.cpp	/^DWORD DecodeStream::GetOutputSizeForInput(const DWORD the_SrcLength) const$/;"	f	class:DecodeStream
GetOutputType	lame/dshow/Encoder.h	/^    HRESULT GetOutputType(MPEG_ENCODER_CONFIG* pmabsi)$/;"	f	class:CEncoder
GetPCMFormatForIndex	lame/ACM/ACM.cpp	/^void ACM::GetPCMFormatForIndex(const DWORD the_Index, WAVEFORMATEX & the_Format, unsigned short the_String[ACMFORMATDETAILS_FORMAT_CHARS]) const$/;"	f	class:ACM
GetPacketStrain	Source/BandwidthAnalysis.cpp	/^    double GetPacketStrain() const {return 0;}$/;"	f	class:BandwidthAnalyzer
GetPacketStrain	Source/NullOutput.cpp	/^    double GetPacketStrain() const {return 0;}$/;"	f	class:NullNetwork	file:
GetPacketStrain	Source/RTMPPublisher.cpp	/^double RTMPPublisher::GetPacketStrain() const$/;"	f	class:RTMPPublisher
GetPages	lame/dshow/Mpegac.cpp	/^HRESULT CMpegAudEnc::GetPages(CAUUID *pcauuid) $/;"	f	class:CMpegAudEnc
GetParameter	Source/D3D10Shader.cpp	/^HANDLE D3D10Shader::GetParameter(UINT parameter) const$/;"	f	class:D3D10Shader
GetParameterByName	Source/D3D10Shader.cpp	/^HANDLE D3D10Shader::GetParameterByName(CTSTR lpName) const$/;"	f	class:D3D10Shader
GetParameterInfo	Source/D3D10Shader.cpp	/^void   D3D10Shader::GetParameterInfo(HANDLE hObject, ShaderParameterInfo &paramInfo) const$/;"	f	class:D3D10Shader
GetParent	OBSApi/Utility/XConfig.h	/^    inline XElement* GetParent() const {return parent;}$/;"	f	class:XElement
GetParent	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *GetParent )( $/;"	m	struct:IDXGIAdapter2Vtbl
GetParent	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *GetParent )( $/;"	m	struct:IDXGIDevice2Vtbl
GetParent	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *GetParent )( $/;"	m	struct:IDXGIFactory2Vtbl
GetParent	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *GetParent )( $/;"	m	struct:IDXGIOutput1Vtbl
GetParent	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *GetParent )( $/;"	m	struct:IDXGIOutputDuplicationVtbl
GetParent	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *GetParent )( $/;"	m	struct:IDXGIResource1Vtbl
GetParent	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *GetParent )( $/;"	m	struct:IDXGISurface2Vtbl
GetParent	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *GetParent )( $/;"	m	struct:IDXGISwapChain1Vtbl
GetPath	libmfx/src/mfx_dispatcher_trace.cpp	/^    std::string& GetPath(){return m_libPath;}$/;"	f	class:sdk_library
GetPathDirectory	OBSApi/Utility/XFile_Windows.cpp	/^String GetPathDirectory(CTSTR lpPath)$/;"	f
GetPathExtension	OBSApi/Utility/XFile_Windows.cpp	/^String GetPathExtension(CTSTR lpPath)$/;"	f
GetPathFileName	OBSApi/Utility/XFile_Windows.cpp	/^String GetPathFileName(CTSTR lpPath, BOOL bExtension)$/;"	f
GetPathWithoutExtension	OBSApi/Utility/XFile_Windows.cpp	/^String GetPathWithoutExtension(CTSTR lpPath)$/;"	f
GetPayload	libmfx/include/msdk/include/mfxplugin.h	/^    mfxStatus (MFX_CDECL *GetPayload)(mfxHDL pthis, mfxU64 *ts, mfxPayload *payload);$/;"	m	struct:mfxVideoCodecPlugin
GetPayload	libmfx/include/msdk/include/mfxvideo++.h	/^    virtual mfxStatus GetPayload(mfxU64 *ts, mfxPayload *payload) {return MFXVideoDECODE_GetPayload(m_session, ts, payload); }$/;"	f	class:MFXVideoDECODE
GetPercentage	OBSApi/Utility/XMath.h	/^inline float GetPercentage(float startVal, float endVal, float middleVal)$/;"	f
GetPercentageI	OBSApi/Utility/XMath.h	/^inline float GetPercentageI(int startVal, int endVal, int middleVal)$/;"	f
GetPlaneCapsuleOffset	OBSApi/Utility/XMath.cpp	/^float GetPlaneCapsuleOffset(const Vect &dir, float capsuleHalfHeight, float capsuleRadius)$/;"	f
GetPlaneConeOffset	OBSApi/Utility/XMath.cpp	/^float GetPlaneConeOffset(const Vect &dir, float coneHeight, float coneRadius)$/;"	f
GetPlaneCylinderOffset	OBSApi/Utility/XMath.cpp	/^float GetPlaneCylinderOffset(const Vect &dir, float cylHalfHeight, float cylRadius)$/;"	f
GetPluginDataPath	CLRHostPlugin/CLRHostInterop/API.cpp	/^System::String^ API::GetPluginDataPath()$/;"	f	class:API
GetPluginDataPath	Source/API.cpp	/^    virtual String GetPluginDataPath() const    {return String() << lpAppDataPath << TEXT("\\\\pluginData");}$/;"	f	class:OBSAPIInterface
GetPluginDescription	CLRHostPlugin/CLRHostPlugin/CLRHostPlugin.cpp	/^CTSTR GetPluginDescription()$/;"	f
GetPluginDescription	CLRHostPlugin/CLRHostPlugin/CLRPlugin.cpp	/^std::wstring CLRPlugin::GetPluginDescription()$/;"	f	class:CLRPlugin
GetPluginDescription	DShowPlugin/DShowPlugin.cpp	/^CTSTR GetPluginDescription()$/;"	f
GetPluginDescription	GraphicsCapture/GraphicsCapture.cpp	/^CTSTR GetPluginDescription()$/;"	f
GetPluginDescription	NoiseGate/NoiseGate.cpp	/^CTSTR GetPluginDescription()$/;"	f
GetPluginDescription	PSVPlugin/psvplugin.cpp	/^CTSTR GetPluginDescription()$/;"	f
GetPluginDescription	scenesw/scenesw.cpp	/^CTSTR GetPluginDescription()$/;"	f
GetPluginInfo	Source/OBS.h	/^    const PluginInfo *GetPluginInfo(UINT idx) const {if (idx < plugins.Num()) return plugins+idx; else return NULL;}$/;"	f	class:OBS
GetPluginName	CLRHostPlugin/CLRHostPlugin/CLRHostPlugin.cpp	/^CTSTR GetPluginName()$/;"	f
GetPluginName	CLRHostPlugin/CLRHostPlugin/CLRPlugin.cpp	/^std::wstring CLRPlugin::GetPluginName()$/;"	f	class:CLRPlugin
GetPluginName	DShowPlugin/DShowPlugin.cpp	/^CTSTR GetPluginName()$/;"	f
GetPluginName	GraphicsCapture/GraphicsCapture.cpp	/^CTSTR GetPluginName()$/;"	f
GetPluginName	NoiseGate/NoiseGate.cpp	/^CTSTR GetPluginName()$/;"	f
GetPluginName	PSVPlugin/psvplugin.cpp	/^CTSTR GetPluginName()$/;"	f
GetPluginName	scenesw/scenesw.cpp	/^CTSTR GetPluginName()$/;"	f
GetPluginParam	libmfx/include/msdk/include/mfxplugin.h	/^    mfxStatus (MFX_CDECL *GetPluginParam)(mfxHDL pthis, mfxPluginParam *par);$/;"	m	struct:mfxPlugin
GetPoint	OBSApi/Utility/XMath.cpp	/^Vect Bounds::GetPoint(unsigned int i) const$/;"	f	class:Bounds
GetPos	OBSApi/Scene.h	/^    inline Vect2 GetPos() const                 {return pos;}$/;"	f	class:SceneItem
GetPos	OBSApi/Utility/Template.h	/^    UINT64 GetPos() const$/;"	f	class:BufferInputSerializer
GetPos	OBSApi/Utility/Template.h	/^    UINT64 GetPos() const$/;"	f	class:BufferOutputSerializer
GetPos	OBSApi/Utility/XFile.h	/^    UINT64 GetPos() const$/;"	f	class:XFileInputSerializer
GetPos	OBSApi/Utility/XFile.h	/^    UINT64 GetPos() const$/;"	f	class:XFileOutputSerializer
GetPos	OBSApi/Utility/XFile.h	/^    inline QWORD GetPos() const {return qwPos;}$/;"	f	class:XFile
GetPreviewOnly	Source/API.cpp	/^    virtual bool GetPreviewOnly()$/;"	f	class:OBSAPIInterface
GetPriority	libmfx/include/msdk/include/mfxaudio++.h	/^    virtual mfxStatus GetPriority( mfxPriority *priority) { return MFXGetPriority(m_session, priority);}$/;"	f	class:MFXAudioSession
GetPriority	libmfx/include/msdk/include/mfxvideo++.h	/^    virtual mfxStatus GetPriority( mfxPriority *priority) { return MFXGetPriority(m_session, priority);}$/;"	f	class:MFXVideoSession
GetPrivateData	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( $/;"	m	struct:IDXGIAdapter2Vtbl
GetPrivateData	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( $/;"	m	struct:IDXGIDevice2Vtbl
GetPrivateData	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( $/;"	m	struct:IDXGIFactory2Vtbl
GetPrivateData	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( $/;"	m	struct:IDXGIOutput1Vtbl
GetPrivateData	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( $/;"	m	struct:IDXGIOutputDuplicationVtbl
GetPrivateData	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( $/;"	m	struct:IDXGIResource1Vtbl
GetPrivateData	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( $/;"	m	struct:IDXGISurface2Vtbl
GetPrivateData	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *GetPrivateData )( $/;"	m	struct:IDXGISwapChain1Vtbl
GetPrivateMode	lame/ACM/AEncodeProperties.h	/^	inline const bool GetPrivateMode() const { return bPrivate; }$/;"	f	class:AEncodeProperties
GetProcessId	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/RenderProcess.cs	/^        int GetProcessId(out int pRetVal);$/;"	m	interface:Browser.IAudioSessionControl2
GetProfiles	Source/OBS.cpp	/^void OBS::GetProfiles(StringList &profileList)$/;"	f	class:OBS
GetQPCTime100NS	OBSApi/OBSApi.cpp	/^QWORD GetQPCTime100NS()$/;"	f
GetQPCTimeMS	OBSApi/OBSApi.cpp	/^QWORD GetQPCTimeMS()$/;"	f
GetQPCTimeNS	OBSApi/OBSApi.cpp	/^QWORD GetQPCTimeNS()$/;"	f
GetQWDif	OBSApi/OBSApi.h	/^inline QWORD GetQWDif(QWORD val1, QWORD val2)$/;"	f
GetQuat	OBSApi/Utility/XMath.h	/^    Quat GetQuat() const  {Quat newQuat(*this); return newQuat;}$/;"	f	struct:AxisAngle
GetQuatVect	OBSApi/Utility/XMath.cpp	/^inline Vect GetQuatVect(const Quat &q)$/;"	f
GetRGB	OBSApi/Utility/XMath.h	/^    inline DWORD GetRGB() const {return Vect_to_RGB(*this)|0xFF000000;}$/;"	f	struct:Vect
GetRGBA	OBSApi/Utility/XMath.h	/^    inline DWORD GetRGBA() const {return Vect4_to_RGBA(*this);}$/;"	f	struct:Vect4
GetRTMPErrors	Source/RTMPPublisher.cpp	/^String RTMPPublisher::GetRTMPErrors()$/;"	f	class:RTMPPublisher
GetRayIntersection	OBSApi/Utility/XMath.cpp	/^BOOL Plane::GetRayIntersection(const Vect &rayOrigin, const Vect &rayDir, float &fT) const$/;"	f	class:Plane
GetRealIndex	OBSApi/Utility/Template.h	/^    inline unsigned int GetRealIndex(unsigned int index)$/;"	f	class:CircularList
GetRealSurface	libmfx/include/msdk/include/mfxplugin++.h	/^    mfxStatus GetRealSurface(mfxFrameSurface1 *op_surf, mfxFrameSurface1 **surf) {$/;"	f	class:MFXCoreInterface
GetRealSurface	libmfx/include/msdk/include/mfxplugin.h	/^    mfxStatus (MFX_CDECL *GetRealSurface)(mfxHDL pthis, mfxFrameSurface1 *op_surf, mfxFrameSurface1 **surf);$/;"	m	struct:mfxCoreInterface
GetRealTime	lame/frontend/lametime.c	/^GetRealTime(void)$/;"	f
GetReconnectingStatus	Source/OBS.h	/^    bool GetReconnectingStatus() { return bReconnecting; }$/;"	f	class:OBS
GetRelativeBranchDestination	minhook/src/trampoline.cpp	/^	inline uintptr_t GetRelativeBranchDestination(uint8_t* pInst, const hde_t& hs, bool isShort)$/;"	f	namespace:MinHook::<anonymous>
GetRenderFrameControlSize	Source/API.cpp	/^    virtual Vect2 GetRenderFrameControlSize() const {return Vect2(float(App->renderFrameCtrlWidth), float(App->renderFrameCtrlHeight));}$/;"	f	class:OBSAPIInterface
GetRenderFrameControlSize	Source/API.cpp	/^    virtual void GetRenderFrameControlSize(UINT &width, UINT &height) const {App->GetRenderFrameControlSize(width, height);}$/;"	f	class:OBSAPIInterface
GetRenderFrameControlSize	Source/OBS.h	/^    inline Vect2 GetRenderFrameControlSize() const  {return Vect2(float(renderFrameCtrlWidth), float(renderFrameCtrlHeight));}$/;"	f	class:OBS
GetRenderFrameControlSize	Source/OBS.h	/^    inline void GetRenderFrameControlSize(UINT &width, UINT &height) const  {width = renderFrameCtrlWidth; height = renderFrameCtrlHeight;}$/;"	f	class:OBS
GetRenderFrameIn1To1Mode	Source/API.cpp	/^    virtual bool GetRenderFrameIn1To1Mode() const   {return App->renderFrameIn1To1Mode;}$/;"	f	class:OBSAPIInterface
GetRenderFrameOffset	Source/API.cpp	/^    virtual Vect2 GetRenderFrameOffset() const      {return Vect2(float(App->renderFrameX), float(App->renderFrameY));}$/;"	f	class:OBSAPIInterface
GetRenderFrameOffset	Source/API.cpp	/^    virtual void GetRenderFrameOffset(UINT &x, UINT &y) const               {App->GetRenderFrameOffset(x, y);}$/;"	f	class:OBSAPIInterface
GetRenderFrameOffset	Source/OBS.h	/^    inline Vect2 GetRenderFrameOffset() const       {return Vect2(float(renderFrameX), float(renderFrameY));}$/;"	f	class:OBS
GetRenderFrameOffset	Source/OBS.h	/^    inline void GetRenderFrameOffset(UINT &x, UINT &y) const                {x = renderFrameX; y = renderFrameY;}$/;"	f	class:OBS
GetRenderFrameSize	Source/API.cpp	/^    virtual Vect2 GetRenderFrameSize() const        {return Vect2(float(App->renderFrameWidth), float(App->renderFrameHeight));}$/;"	f	class:OBSAPIInterface
GetRenderFrameSize	Source/API.cpp	/^    virtual void GetRenderFrameSize(UINT &width, UINT &height) const        {App->GetRenderFrameSize(width, height);}$/;"	f	class:OBSAPIInterface
GetRenderFrameSize	Source/OBS.h	/^    inline Vect2 GetRenderFrameSize() const         {return Vect2(float(renderFrameWidth), float(renderFrameHeight));}$/;"	f	class:OBS
GetRenderFrameSize	Source/OBS.h	/^    inline void GetRenderFrameSize(UINT &width, UINT &height) const         {width = renderFrameWidth; height = renderFrameHeight;}$/;"	f	class:OBS
GetRenderHandler	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserClient.cs	/^        protected override CefRenderHandler GetRenderHandler()$/;"	m	class:Browser.BrowserClient
GetRenderProcessHandler	CLRBrowserSourcePlugin/Client/BrowserApp.cs	/^        protected override CefRenderProcessHandler GetRenderProcessHandler()$/;"	m	class:Shared.BrowserApp
GetResampleFreq	lame/ACM/AEncodeProperties.h	/^	inline const unsigned int GetResampleFreq() const { return the_SamplingFreqs[nSamplingFreqIndex]; }$/;"	f	class:AEncodeProperties
GetResampleMode	lame/ACM/AEncodeProperties.h	/^	inline const bool GetResampleMode() const { return bResample; }$/;"	f	class:AEncodeProperties
GetResolution	DShowPlugin/DShowPlugin.cpp	/^bool GetResolution(HWND hwndResolution, SIZE &resolution, BOOL bSelChange)$/;"	f
GetResolutionFPSInfo	DShowPlugin/DShowPlugin.cpp	/^    bool GetResolutionFPSInfo(SIZE &resolution, FPSInfo &fpsInfo)$/;"	f	struct:ConfigDialogData
GetResolutions	DShowPlugin/DShowPlugin.cpp	/^    void GetResolutions(List<SIZE> &resolutions)$/;"	f	struct:ConfigDialogData
GetResource	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *GetResource )( $/;"	m	struct:IDXGISurface2Vtbl
GetResourceFromMid	QSVHelper/IntelSupport/src/d3d11_allocator.cpp	/^D3D11FrameAllocator::TextureSubResource  D3D11FrameAllocator::GetResourceFromMid(mfxMemId mid)$/;"	f	class:D3D11FrameAllocator
GetResponseHeaders	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/AssetSchemeHandler.cs	/^        protected override void GetResponseHeaders(CefResponse response, out long responseLength, out string redirectUrl)$/;"	m	class:RemoteBrowser.AssetSchemeHandler
GetRestrictToOutput	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *GetRestrictToOutput )( $/;"	m	struct:IDXGISwapChain1Vtbl
GetReverse	OBSApi/Utility/XMath.h	/^    inline Quat  GetReverse() const                 {return Quat(*this).Reverse();}$/;"	f	struct:Quat
GetRootElement	OBSApi/Utility/XConfig.h	/^    inline XElement *GetRootElement() {return RootElement;}$/;"	f	class:XConfig
GetRootScreenRect	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserRenderHandler.cs	/^        protected override bool GetRootScreenRect(CefBrowser browser, ref CefRectangle rect)$/;"	m	class:Browser.BrowserRenderHandler
GetRotation	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *GetRotation )( $/;"	m	struct:IDXGISwapChain1Vtbl
GetSEI	ObsNvenc/src/NVENCEncoder.cpp	/^void NVENCEncoder::GetSEI(DataPacket &packet)$/;"	f	class:NVENCEncoder
GetSEI	Source/Encoder_QSV.cpp	/^    virtual void GetSEI(DataPacket &packet)$/;"	f	class:QSVEncoder
GetSEI	Source/Encoder_x264.cpp	/^    virtual void GetSEI(DataPacket &packet)$/;"	f	class:X264Encoder
GetSEI	Source/OBS.h	/^    virtual void GetSEI(DataPacket &packet) {}$/;"	f	class:VideoEncoder
GetSRIndex	libfaac/util.c	/^int GetSRIndex(unsigned int sampleRate)$/;"	f
GetSampleInsertIndex	DShowPlugin/DeviceSource.cpp	/^UINT DeviceSource::GetSampleInsertIndex(LONGLONG timestamp)$/;"	f	class:DeviceSource
GetSampleRateHz	Source/API.cpp	/^    virtual UINT GetSampleRateHz() const {return App->GetSampleRateHz();}$/;"	f	class:OBSAPIInterface
GetSampleRateHz	Source/OBS.h	/^    inline UINT GetSampleRateHz() const {return sampleRateHz;}$/;"	f	class:OBS
GetSamplerID	Source/D3D10System.h	/^    inline UINT GetSamplerID(CTSTR lpSampler)$/;"	f	struct:ShaderProcessor
GetSamplerInfo	OBSApi/GraphicsSystem.h	/^    const SamplerInfo& GetSamplerInfo() const {return info;}$/;"	f	class:SamplerState
GetSamplesPerSec	OBSApi/AudioSource.cpp	/^UINT AudioSource::GetSamplesPerSec() const {return inputSamplesPerSec;}$/;"	f	class:AudioSource
GetSamplesPerSec	Source/DSoundAudioSource.cpp	/^    virtual UINT GetSamplesPerSec() const {return 48000;}$/;"	f	class:DSoundAudioSource
GetScale	OBSApi/Scene.h	/^    inline Vect2 GetScale() const               {return source ? (source->GetSize() \/ size) : Vect2(1.0f, 1.0f);}$/;"	f	class:SceneItem
GetScale	OBSApi/Utility/XMath.h	/^    inline Matrix GetScale(const Vect &scale) const$/;"	f	struct:Matrix
GetScale	OBSApi/Utility/XMath.h	/^    inline Matrix GetScale(float scaleX, float scaleY, float scaleZ) const$/;"	f	struct:Matrix
GetScaled	OBSApi/Utility/XMath.h	/^    inline Bounds GetScaled(const Vect &scale) const$/;"	f	struct:Bounds
GetScene	Source/API.cpp	/^    virtual Scene* GetScene() const             {return App->scene;}$/;"	f	class:OBSAPIInterface
GetScene	scenesw/SceneSwitcher.h	/^	inline String GetScene(int i) const {return scenes[i];}$/;"	f	class:SceneSwitcher
GetSceneClass	Source/OBS.h	/^    inline ClassInfo* GetSceneClass(CTSTR lpClass) const$/;"	f	class:OBS
GetSceneCollection	Source/OBS.cpp	/^void OBS::GetSceneCollection(StringList &sceneCollectionList)$/;"	f	class:OBS
GetSceneCollectionName	Source/API.cpp	/^    virtual CTSTR GetSceneCollectionName() const { return App->GetCurrentSceneCollection(); }$/;"	f	class:OBSAPIInterface
GetSceneCollectionNames	Source/API.cpp	/^    virtual void GetSceneCollectionNames(StringList &list) const { return App->GetSceneCollection(list); }$/;"	f	class:OBSAPIInterface
GetSceneElement	Source/API.cpp	/^    virtual XElement* GetSceneElement()         {return App->GetSceneElement();}$/;"	f	class:OBSAPIInterface
GetSceneElement	Source/OBS.h	/^    inline XElement* GetSceneElement() const {return sceneElement;}$/;"	f	class:OBS
GetSceneImageSource	OBSApi/APIInterface.h	/^    inline ImageSource* GetSceneImageSource(CTSTR lpImageSource)$/;"	f	class:APIInterface
GetSceneItem	OBSApi/Scene.h	/^    inline SceneItem* GetSceneItem(CTSTR lpName) const$/;"	f	class:Scene
GetSceneItem	OBSApi/Scene.h	/^    inline SceneItem* GetSceneItem(UINT id) const {return sceneItems[id];}$/;"	f	class:Scene
GetSceneListElement	Source/API.cpp	/^    virtual XElement* GetSceneListElement()         {return App->scenesConfig.GetElement(TEXT("scenes"));}$/;"	f	class:OBSAPIInterface
GetSceneName	Source/API.cpp	/^    virtual CTSTR GetSceneName() const          {return App->GetSceneElement()->GetName();}$/;"	f	class:OBSAPIInterface
GetSceneTimestamp	Source/OBS.h	/^    inline QWORD GetSceneTimestamp() {return firstSceneTimestamp;}$/;"	f	class:OBS
GetScreenInfo	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserRenderHandler.cs	/^        protected override bool GetScreenInfo(CefBrowser browser, CefScreenInfo screenInfo)$/;"	m	class:Browser.BrowserRenderHandler
GetSelectedItems	OBSApi/Scene.h	/^    inline void GetSelectedItems(List<SceneItem*> &items) const$/;"	f	class:Scene
GetSemanticInfo	Source/D3D10ShaderProcessor.cpp	/^bool GetSemanticInfo(const String &strSemantic, SemanticInfo &info)$/;"	f
GetSession	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/RenderProcess.cs	/^        int GetSession(int SessionCount, out IAudioSessionControl2 Session);$/;"	m	interface:Browser.IAudioSessionEnumerator
GetSessionEnumerator	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/RenderProcess.cs	/^        int GetSessionEnumerator(out IAudioSessionEnumerator SessionEnum);$/;"	m	interface:Browser.IAudioSessionManager2
GetSessionIdentifier	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/RenderProcess.cs	/^        int GetSessionIdentifier([MarshalAs(UnmanagedType.LPWStr)] out string pRetVal);$/;"	m	interface:Browser.IAudioSessionControl2
GetSessionInstanceIdentifier	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/RenderProcess.cs	/^        int GetSessionInstanceIdentifier([MarshalAs(UnmanagedType.LPWStr)] out string pRetVal);$/;"	m	interface:Browser.IAudioSessionControl2
GetSettings	scenesw/SceneSwitcher.h	/^    inline SceneSwitcherSettings* GetSettings() const { return settings; }$/;"	f	class:SceneSwitcher
GetSettingsPaneType	CLRHostPlugin/CLRHostPlugin/CLRHost.h	/^    mscorlib::_Type *GetSettingsPaneType() { return settingsPaneType; }$/;"	f	class:CLRHost
GetSetupData	lame/dshow/Mpegac.cpp	/^LPAMOVIESETUP_FILTER CMpegAudEnc::GetSetupData()$/;"	f	class:CMpegAudEnc
GetSharedHandle	Source/D3D10Texture.cpp	/^HANDLE D3D10Texture::GetSharedHandle()$/;"	f	class:D3D10Texture
GetSharedHandle	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *GetSharedHandle )( $/;"	m	struct:IDXGIResource1Vtbl
GetSharedResourceAdapterLuid	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *GetSharedResourceAdapterLuid )( $/;"	m	struct:IDXGIFactory2Vtbl
GetSink	libmfx/src/mfx_dispatcher_log.cpp	/^IMsgHandler *ETWHandlerFactory::GetSink(const wchar_t* sguid)$/;"	f	class:ETWHandlerFactory
GetSize	CLRHostPlugin/CLRHostPlugin/CLRImageSource.cpp	/^CLRVector2 *CLRImageSource::GetSize()$/;"	f	class:CLRImageSource
GetSize	CLRHostPlugin/CLRHostPlugin/ImageSourceBridge.h	/^    virtual Vect2 GetSize() const$/;"	f	class:ImageSourceBridge
GetSize	DShowPlugin/DeviceSource.h	/^    Vect2 GetSize() const {return Vect2(float(imageCX), float(imageCY));}$/;"	f	class:DeviceSource
GetSize	GraphicsCapture/GraphicsCaptureSource.cpp	/^Vect2 GraphicsCaptureSource::GetSize() const$/;"	f	class:GraphicsCaptureSource
GetSize	OBSApi/Scene.h	/^    inline Vect2 GetSize() const                {return size;}$/;"	f	class:SceneItem
GetSize	OBSApi/Utility/XMath.h	/^    inline Vect GetSize() const$/;"	f	struct:Bounds
GetSize	Source/BitmapImage.cpp	/^Vect2 BitmapImage::GetSize(void) const$/;"	f	class:BitmapImage
GetSize	Source/BitmapImageSource.cpp	/^    Vect2 GetSize() const {return bitmapImage.GetSize();}$/;"	f	class:BitmapImageSource
GetSize	Source/BitmapTransitionSource.cpp	/^    Vect2 GetSize() const {return fullSize;}$/;"	f	class:BitmapTransitionSource
GetSize	Source/DesktopImageSource.cpp	/^    Vect2 GetSize() const$/;"	f	class:DesktopImageSource
GetSize	Source/GlobalSource.cpp	/^    Vect2 GetSize() const {return globalSource ? globalSource->GetSize() : Vect2(0.0f, 0.0f);}$/;"	f	class:GlobalSource
GetSize	Source/TextOutputSource.cpp	/^    Vect2 GetSize() const$/;"	f	class:TextOutputSource
GetSmartOutputMode	lame/ACM/AEncodeProperties.h	/^	inline const bool GetSmartOutputMode() const { return bSmartOutput; }$/;"	f	class:AEncodeProperties
GetSmartRatio	lame/ACM/AEncodeProperties.h	/^	inline double GetSmartRatio() const { return SmartRatioMax;}$/;"	f	class:AEncodeProperties
GetSockError	librtmp/rtmp_sys.h	51;"	d
GetSockError	librtmp/rtmp_sys.h	70;"	d
GetSource	OBSApi/Scene.h	/^    inline ImageSource* GetSource() const       {return source;}$/;"	f	class:SceneItem
GetSourceClassName	CLRHostPlugin/CLRHostPlugin/CLRImageSourceFactory.cpp	/^std::wstring CLRImageSourceFactory::GetSourceClassName()$/;"	f	class:CLRImageSourceFactory
GetSquarifiedColor	OBSApi/Utility/XMath.h	/^    inline Vect4 GetSquarifiedColor()   {return Vect4(*this).SquarifyColor();}$/;"	f	struct:Vect4
GetStaging	QSVHelper/IntelSupport/include/d3d11_allocator.h	/^        ID3D11Texture2D* GetStaging()const$/;"	f	class:D3D11FrameAllocator::TextureSubResource
GetState	DShowPlugin/CaptureFilter.cpp	/^STDMETHODIMP CaptureFilter::GetState(DWORD dwMSecs, FILTER_STATE *State)   {*State = state; return S_OK;}$/;"	f	class:CaptureFilter
GetStorageID	libmfx/include/mfx_library_iterator.h	/^    int  GetStorageID() const { return m_StorageID; }$/;"	f	class:MFX::MFXLibraryIterator
GetStreamCaps	lame/dshow/Mpegac.cpp	/^HRESULT STDMETHODCALLTYPE CMpegAudEncOutPin::GetStreamCaps(int iIndex, AM_MEDIA_TYPE **pmt, BYTE *pSCC)$/;"	f	class:CMpegAudEncOutPin
GetStreamReport	Source/OBS.h	/^    String GetStreamReport() { return streamReport; }$/;"	f	class:OBS
GetStreaming	Source/API.cpp	/^    virtual bool GetStreaming()$/;"	f	class:OBSAPIInterface
GetStreamingStatus	Source/OBS.h	/^    bool GetStreamingStatus() { return bStreaming; }$/;"	f	class:OBS
GetString	OBSApi/Scene.h	/^    virtual bool GetString(CTSTR lpName, String &strVal) const {return false;}$/;"	f	class:ImageSource
GetString	OBSApi/Utility/ConfigFile.cpp	/^String ConfigFile::GetString(CTSTR lpSection, CTSTR lpKey, CTSTR def)$/;"	f	class:ConfigFile
GetString	OBSApi/Utility/XConfig.cpp	/^CTSTR XElement::GetString(CTSTR lpName, TSTR def) const$/;"	f	class:XElement
GetString	Source/GlobalSource.cpp	/^    virtual bool GetString(CTSTR lpName, String &strVal) const {return globalSource ? globalSource->GetString (lpName, strVal) : false;}$/;"	f	class:GlobalSource
GetStringLine	OBSApi/Utility/XString.cpp	/^int STDCALL GetStringLine(const TCHAR *lpStart, const TCHAR *lpOffset)$/;"	f
GetStringList	OBSApi/Utility/ConfigFile.cpp	/^BOOL ConfigFile::GetStringList(CTSTR lpSection, CTSTR lpKey, StringList &StrList)$/;"	f	class:ConfigFile
GetStringList	OBSApi/Utility/XConfig.cpp	/^void  XElement::GetStringList(CTSTR lpName, StringList &stringList) const$/;"	f	class:XElement
GetStringPtr	OBSApi/Utility/ConfigFile.cpp	/^CTSTR ConfigFile::GetStringPtr(CTSTR lpSection, CTSTR lpKey, CTSTR def)$/;"	f	class:ConfigFile
GetStringSection	OBSApi/Utility/XString.cpp	/^String STDCALL GetStringSection(const TCHAR *lpStart, const TCHAR *lpOffset)$/;"	f
GetSubKeyName	libmfx/src/mfx_library_iterator.cpp	/^bool MFXLibraryIterator::GetSubKeyName(msdk_disp_char *subKeyName, size_t length) const$/;"	f	class:MFX::MFXLibraryIterator
GetSubResource	QSVHelper/IntelSupport/include/d3d11_allocator.h	/^        UINT GetSubResource()const$/;"	f	class:D3D11FrameAllocator::TextureSubResource
GetSubResource	QSVHelper/IntelSupport/include/d3d11_allocator.h	/^        UINT GetSubResource(mfxMemId id)$/;"	f	struct:D3D11FrameAllocator::TextureResource
GetSyncSource	DShowPlugin/CaptureFilter.cpp	/^STDMETHODIMP CaptureFilter::GetSyncSource(IReferenceClock **pClock)        {*pClock = NULL; return NOERROR;}$/;"	f	class:CaptureFilter
GetTexture	QSVHelper/IntelSupport/include/d3d11_allocator.h	/^        ID3D11Texture2D* GetTexture()const$/;"	f	class:D3D11FrameAllocator::TextureSubResource
GetTexture	QSVHelper/IntelSupport/include/d3d11_allocator.h	/^        ID3D11Texture2D* GetTexture(mfxMemId id)$/;"	f	struct:D3D11FrameAllocator::TextureResource
GetTexture	Source/BitmapImage.cpp	/^Texture* BitmapImage::GetTexture(void) const$/;"	f	class:BitmapImage
GetTextureFileInfo	Source/D3D10System.cpp	/^bool D3D10System::GetTextureFileInfo(CTSTR lpFile, TextureInfo &info)$/;"	f	class:D3D10System
GetThreadHandles	Source/OBS.cpp	/^void OBS::GetThreadHandles (HANDLE *videoThread, HANDLE *encodeThread)$/;"	f	class:OBS
GetThreads	minhook/src/thread.cpp	/^	void ScopedThreadExclusive::GetThreads(std::vector<DWORD>& threads)$/;"	f	class:MinHook::ScopedThreadExclusive
GetTimeOffset	OBSApi/AudioSource.cpp	/^int  AudioSource::GetTimeOffset() const {return timeOffset;}$/;"	f	class:AudioSource
GetTimestamp	Source/MMDeviceAudioSource.cpp	/^QWORD MMDeviceAudioSource::GetTimestamp(QWORD qpcTimestamp)$/;"	f	class:MMDeviceAudioSource
GetTitleGain	lame/libmp3lame/gain_analysis.c	/^GetTitleGain(replaygain_t * rgData)$/;"	f
GetToggleHotkey	scenesw/SceneSwitcher.h	/^	inline int GetToggleHotkey()	const {return toggleHotkey;}$/;"	f	class:SceneSwitcher
GetToken	OBSApi/Utility/XString.cpp	/^String String::GetToken(int id, TCHAR token) const$/;"	f	class:String
GetTokenList	OBSApi/Utility/XString.cpp	/^void String::GetTokenList(StringList &strList, TCHAR token, BOOL bIncludeEmpty) const$/;"	f	class:String
GetTokenOffset	OBSApi/Utility/XString.cpp	/^CTSTR String::GetTokenOffset(int token, TCHAR seperator) const$/;"	f	class:String
GetTokenPrecedence	Source/CodeTokenizer.cpp	/^int CodeTokenizer::GetTokenPrecedence(CTSTR lpToken)$/;"	f	class:CodeTokenizer
GetTotalFrames	Source/API.cpp	/^    virtual UINT GetTotalFrames() const       {return App->network ? App->network->NumTotalVideoFrames() : 0;}$/;"	f	class:OBSAPIInterface
GetTotalStreamTime	Source/API.cpp	/^    virtual UINT GetTotalStreamTime() const   {return App->totalStreamTime;}$/;"	f	class:OBSAPIInterface
GetTotalWritten	OBSApi/Utility/XFile.h	/^    inline QWORD GetTotalWritten() {return totalWritten;}$/;"	f	class:XFileOutputSerializer
GetTransform	OBSApi/Utility/XMath.h	/^    Plane  GetTransform(const Matrix &m) const$/;"	f	struct:Plane
GetTransformedBounds	OBSApi/Utility/XMath.cpp	/^Bounds Bounds::GetTransformedBounds(const Matrix &m) const$/;"	f	class:Bounds
GetTransformedPoint	OBSApi/Utility/XMath.h	/^    inline Vect GetTransformedPoint(const Matrix &m) const  {return Vect(*this).TransformPoint(m);}$/;"	f	struct:Vect
GetTransformedVector	OBSApi/Utility/XMath.h	/^    inline Vect GetTransformedVector(const Matrix &m) const {return Vect(*this).TransformVector(m);}$/;"	f	struct:Vect
GetTranspose	OBSApi/Utility/XMath.h	/^    inline Matrix GetTranspose() const$/;"	f	struct:Matrix
GetTriplePlaneIntersection	OBSApi/Utility/XMath.cpp	/^BOOL Plane::GetTriplePlaneIntersection(const Plane &p2, const Plane &p3, Vect &intersection) const$/;"	f	class:Plane
GetType	OBSApi/Utility/XConfig.h	/^    inline int GetType() const     {return type;}$/;"	f	class:XBaseItem
GetType	Source/D3D10System.h	/^    virtual ShaderType GetType() const {return ShaderType_Pixel;}$/;"	f	class:D3D10PixelShader
GetType	Source/D3D10System.h	/^    virtual ShaderType GetType() const {return ShaderType_Vertex;}$/;"	f	class:D3D10VertexShader
GetTypeRef	CLRHostPlugin/CLRHostPlugin/CLRObjectRef.h	/^    void *GetTypeRef() { return typeRef; }$/;"	f	class:CLRObjectRef
GetUpper	OBSApi/Utility/XString.h	/^    inline String GetUpper() const              {return String(*this).MakeUpper();}$/;"	f	class:String
GetUsage	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *GetUsage )( $/;"	m	struct:IDXGIResource1Vtbl
GetVBRUseMode	lame/ACM/AEncodeProperties.h	/^	inline const BRMode GetVBRUseMode() const { return mBRmode; }$/;"	f	class:AEncodeProperties
GetVPPStat	libmfx/include/msdk/include/mfxvideo++.h	/^    virtual mfxStatus GetVPPStat(mfxVPPStat *stat) { return MFXVideoVPP_GetVPPStat(m_session, stat); }$/;"	f	class:MFXVideoVPP
GetVTable	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.h	/^inline FARPROC GetVTable(LPVOID ptr, UINT funcOffset)$/;"	f
GetValFromPostData	Source/Main.cpp	/^char* GetValFromPostData(char* postData, char* key)$/;"	f
GetValidHandle	Source/D3D10Shader.cpp	297;"	d	file:
GetValuesFromKey	lame/ACM/AEncodeProperties.cpp	/^void AEncodeProperties::GetValuesFromKey(const std::string & config_name, const TiXmlNode & parentNode)$/;"	f	class:AEncodeProperties
GetVbrTag	lame/libmp3lame/VbrTag.c	/^GetVbrTag(VBRTAGDATA * pTagData, const unsigned char *buf)$/;"	f
GetVector	OBSApi/Scene.h	/^    virtual bool GetVector(CTSTR lpName, Vect &value)    const {return false;}$/;"	f	class:ImageSource
GetVector	Source/GlobalSource.cpp	/^    virtual bool GetVector(CTSTR lpName, Vect &value)    const {return globalSource ? globalSource->GetVector (lpName, value)  : false;}$/;"	f	class:GlobalSource
GetVector2	OBSApi/Scene.h	/^    virtual bool GetVector2(CTSTR lpName, Vect2 &value)  const {return false;}$/;"	f	class:ImageSource
GetVector2	Source/GlobalSource.cpp	/^    virtual bool GetVector2(CTSTR lpName, Vect2 &value)  const {return globalSource ? globalSource->GetVector2(lpName, value)  : false;}$/;"	f	class:GlobalSource
GetVector4	OBSApi/Scene.h	/^    virtual bool GetVector4(CTSTR lpName, Vect4 &value)  const {return false;}$/;"	f	class:ImageSource
GetVector4	Source/GlobalSource.cpp	/^    virtual bool GetVector4(CTSTR lpName, Vect4 &value)  const {return globalSource ? globalSource->GetVector4(lpName, value)  : false;}$/;"	f	class:GlobalSource
GetVendorID	libmfx/src/mfx_dxva2_device.cpp	/^mfxU32 DXDevice::GetVendorID(void) const$/;"	f	class:DXDevice
GetVendorID	libmfx/src/mfx_dxva2_device.cpp	/^mfxU32 DXVA2Device::GetVendorID(void) const$/;"	f	class:DXVA2Device
GetVersionString	lame/ACM/ACM.h	/^	static const char * GetVersionString(void) {return VersionString;}$/;"	f	class:ACM
GetVideoBMIHeader	DShowPlugin/MediaInfoStuff.h	/^inline BITMAPINFOHEADER* GetVideoBMIHeader(const AM_MEDIA_TYPE *pMT)$/;"	f
GetVideoDecodeTime	Source/MP4FileStream.cpp	/^    void GetVideoDecodeTime(MP4VideoFrameInfo &videoFrame, bool bLast)$/;"	f	class:MP4FileStream
GetVideoEncoder	Source/OBS.h	/^    inline VideoEncoder* GetVideoEncoder() const {return videoEncoder;}$/;"	f	class:OBS
GetVideoHeaders	Source/OBS.h	/^    inline void GetVideoHeaders(DataPacket &packet) {videoEncoder->GetHeaders(packet);}$/;"	f	class:OBS
GetVideoOutputType	DShowPlugin/MediaInfoStuff.cpp	/^VideoOutputType GetVideoOutputType(const AM_MEDIA_TYPE &media_type)$/;"	f
GetVideoOutputTypeFromFourCC	DShowPlugin/MediaInfoStuff.cpp	/^VideoOutputType GetVideoOutputTypeFromFourCC(DWORD fourCC)$/;"	f
GetVideoOutputTypes	DShowPlugin/MediaInfoStuff.cpp	/^bool GetVideoOutputTypes(const List<MediaOutputInfo> &outputList, UINT width, UINT height, UINT64 frameInterval, List<VideoOutputType> &types)$/;"	f
GetVideoParam	libmfx/include/msdk/include/mfxplugin.h	/^    mfxStatus (MFX_CDECL *GetVideoParam)(mfxHDL pthis, mfxVideoParam *par);$/;"	m	struct:mfxVideoCodecPlugin
GetVideoParam	libmfx/include/msdk/include/mfxvideo++.h	/^    virtual mfxStatus GetVideoParam(mfxVideoParam *par) { return MFXVideoDECODE_GetVideoParam(m_session, par); }$/;"	f	class:MFXVideoDECODE
GetVideoParam	libmfx/include/msdk/include/mfxvideo++.h	/^    virtual mfxStatus GetVideoParam(mfxVideoParam *par) { return MFXVideoENCODE_GetVideoParam(m_session, par); }$/;"	f	class:MFXVideoENCODE
GetVideoParam	libmfx/include/msdk/include/mfxvideo++.h	/^    virtual mfxStatus GetVideoParam(mfxVideoParam *par) { return MFXVideoVPP_GetVideoParam(m_session, par); }$/;"	f	class:MFXVideoVPP
GetVideoTime	Source/OBS.h	/^    inline QWORD GetVideoTime() const {return latestVideoTime;}$/;"	f	class:OBS
GetViewProj	OBSApi/GraphicsSystem.h	/^    inline HANDLE  GetViewProj() const {return hViewProj;}$/;"	f	class:Shader
GetViewRect	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserRenderHandler.cs	/^        protected override bool GetViewRect(CefBrowser browser, ref CefRectangle rect)$/;"	m	class:Browser.BrowserRenderHandler
GetVolume	OBSApi/AudioSource.cpp	/^float AudioSource::GetVolume() const {return sourceVolume;}$/;"	f	class:AudioSource
GetVolumeControlData	OBSApi/VolumeControl.cpp	/^inline VolumeControlData* GetVolumeControlData(HWND hwnd)$/;"	f
GetVolumeControlMutedVal	OBSApi/VolumeControl.cpp	/^float GetVolumeControlMutedVal(HWND hwnd)$/;"	f
GetVolumeControlValue	OBSApi/VolumeControl.cpp	/^float GetVolumeControlValue(HWND hwnd)$/;"	f
GetVolumeMeterData	OBSApi/VolumeMeter.cpp	/^inline VolumeMeterData* GetVolumeMeterData(HWND hwnd)$/;"	f
GetVolumeObject	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/RenderProcess.cs	/^        private static ISimpleAudioVolume GetVolumeObject(int pid)$/;"	m	class:Browser.VolumeMixer	file:
GetWindow	scenesw/SceneSwitcher.h	/^	inline String GetWindow(int i) const {return windows[i];}$/;"	f	class:SceneSwitcher
GetWindowAssociation	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *GetWindowAssociation )( $/;"	m	struct:IDXGIFactory2Vtbl
GetWindowToFrameScale	Source/API.cpp	/^    virtual Vect2 GetWindowToFrameScale() const                 {return App->GetWindowToFrameScale();}$/;"	f	class:OBSAPIInterface
GetWindowToFrameScale	Source/WindowStuff.cpp	/^Vect2 OBS::GetWindowToFrameScale()$/;"	f	class:OBS
GetXElementType	CLRHostPlugin/CLRHostPlugin/CLRHost.h	/^    mscorlib::_Type *GetXElementType() { return xElementType; }$/;"	f	class:CLRHost
GetXingFrameMode	lame/ACM/AEncodeProperties.h	/^	inline const bool GetXingFrameMode() const { return bXingFrame; }$/;"	f	class:AEncodeProperties
GetaltSceneName	scenesw/SceneSwitcher.h	/^	inline CTSTR GetaltSceneName()  const {return altSceneName;}$/;"	f	class:SceneSwitcher
GetmainSceneName	scenesw/SceneSwitcher.h	/^	inline CTSTR GetmainSceneName() const {return mainSceneName;}$/;"	f	class:SceneSwitcher
GetmainWndName	scenesw/SceneSwitcher.h	/^	inline CTSTR GetmainWndName()   const {return mainWndName;}$/;"	f	class:SceneSwitcher
GetnWindowsDefined	scenesw/SceneSwitcher.h	/^	inline int GetnWindowsDefined() const {return nWindowsDefined;}$/;"	f	class:SceneSwitcher
GettimeToSleep	scenesw/SceneSwitcher.h	/^	inline DWORD GettimeToSleep()   const {return timeToSleep;}$/;"	f	class:SceneSwitcher
GlobalAlpha	libmfx/include/msdk/include/mfxstructures.h	/^        mfxU16  GlobalAlpha;$/;"	m	struct:mfxVPPCompInputStream
GlobalAlphaEnable	libmfx/include/msdk/include/mfxstructures.h	/^        mfxU16  GlobalAlphaEnable;$/;"	m	struct:mfxVPPCompInputStream
GlobalCaptureStuff.h	GraphicsCapture/GlobalCaptureStuff.h	1;"	F
GlobalConfig	Source/Main.cpp	/^ConfigFile  *GlobalConfig   = NULL;$/;"	v
GlobalPsyInfo	libfaac/psych.h	/^} GlobalPsyInfo;$/;"	t
GlobalSource	Source/GlobalSource.cpp	/^class GlobalSource : public ImageSource$/;"	c	file:
GlobalSource.cpp	Source/GlobalSource.cpp	1;"	F
GlobalSourceEnterScene	DShowPlugin/DeviceSource.cpp	/^void DeviceSource::GlobalSourceEnterScene()$/;"	f	class:DeviceSource
GlobalSourceEnterScene	OBSApi/Scene.h	/^    virtual void GlobalSourceEnterScene() {}$/;"	f	class:ImageSource
GlobalSourceEnterScene	Source/DesktopImageSource.cpp	/^    void GlobalSourceEnterScene()$/;"	f	class:DesktopImageSource
GlobalSourceEnterScene	Source/GlobalSource.cpp	/^    virtual void GlobalSourceEnterScene() {if (globalSource) globalSource->GlobalSourceEnterScene();}$/;"	f	class:GlobalSource
GlobalSourceInfo	Source/OBS.h	/^struct GlobalSourceInfo$/;"	s
GlobalSourceLeaveScene	DShowPlugin/DeviceSource.cpp	/^void DeviceSource::GlobalSourceLeaveScene()$/;"	f	class:DeviceSource
GlobalSourceLeaveScene	OBSApi/Scene.h	/^    virtual void GlobalSourceLeaveScene() {}$/;"	f	class:ImageSource
GlobalSourceLeaveScene	Source/DesktopImageSource.cpp	/^    void GlobalSourceLeaveScene()$/;"	f	class:DesktopImageSource
GlobalSourceLeaveScene	Source/GlobalSource.cpp	/^    virtual void GlobalSourceLeaveScene() {if (globalSource) globalSource->GlobalSourceLeaveScene();}$/;"	f	class:GlobalSource
GlobalSourcesImportProc	Source/WindowStuff.cpp	/^INT_PTR CALLBACK OBS::GlobalSourcesImportProc(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam)$/;"	f	class:OBS
GlobalSourcesProc	Source/WindowStuff.cpp	/^INT_PTR CALLBACK OBS::GlobalSourcesProc(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam)$/;"	f	class:OBS
GopOptFlag	libmfx/include/msdk/include/mfxstructures.h	/^            mfxU16  GopOptFlag;$/;"	m
GopPicSize	libmfx/include/msdk/include/mfxstructures.h	/^            mfxU16  GopPicSize;$/;"	m
GopRefDist	libmfx/include/msdk/include/mfxstructures.h	/^            mfxU16  GopRefDist;$/;"	m
GotoClosingToken	Source/CodeTokenizer.cpp	/^BOOL CodeTokenizer::GotoClosingToken(CTSTR lpTokenPriority)$/;"	f	class:CodeTokenizer
GotoToken	Source/CodeTokenizer.cpp	/^BOOL CodeTokenizer::GotoToken(CTSTR lpTarget, BOOL bPassToken)$/;"	f	class:CodeTokenizer
GraphicsCapture.cpp	GraphicsCapture/GraphicsCapture.cpp	1;"	F
GraphicsCapture.h	GraphicsCapture/GraphicsCapture.h	1;"	F
GraphicsCaptureFindWindow	GraphicsCapture/GraphicsCaptureSource.cpp	/^BOOL CALLBACK GraphicsCaptureFindWindow(HWND hwnd, LPARAM lParam)$/;"	f
GraphicsCaptureHook.cpp	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	1;"	F
GraphicsCaptureHook.h	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.h	1;"	F
GraphicsCaptureMethod	GraphicsCapture/GraphicsCapture.h	/^class GraphicsCaptureMethod$/;"	c
GraphicsCaptureSource	GraphicsCapture/GraphicsCaptureSource.h	/^class GraphicsCaptureSource : public ImageSource$/;"	c
GraphicsCaptureSource.cpp	GraphicsCapture/GraphicsCaptureSource.cpp	1;"	F
GraphicsCaptureSource.h	GraphicsCapture/GraphicsCaptureSource.h	1;"	F
GraphicsPreemptionGranularity	extras/dxgi1_2.h	/^    DXGI_GRAPHICS_PREEMPTION_GRANULARITY GraphicsPreemptionGranularity;$/;"	m	struct:DXGI_ADAPTER_DESC2
GraphicsSystem	CLRHostPlugin/CLRHostInterop/GraphicsSystem.cpp	/^CLROBS::GraphicsSystem::GraphicsSystem(::GraphicsSystem *graphicsSystem)$/;"	f	class:CLROBS::GraphicsSystem
GraphicsSystem	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^    public ref class GraphicsSystem$/;"	c	class:CLROBS::GSSampleFilter::GSAddressMode
GraphicsSystem	OBSApi/GraphicsSystem.cpp	/^GraphicsSystem::GraphicsSystem()$/;"	f	class:GraphicsSystem
GraphicsSystem	OBSApi/GraphicsSystem.h	/^class BASE_EXPORT GraphicsSystem$/;"	c
GraphicsSystem.cpp	CLRHostPlugin/CLRHostInterop/GraphicsSystem.cpp	1;"	F
GraphicsSystem.cpp	OBSApi/GraphicsSystem.cpp	1;"	F
GraphicsSystem.h	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	1;"	F
GraphicsSystem.h	OBSApi/GraphicsSystem.h	1;"	F
GroupDigits	OBSApi/Utility/XString.cpp	/^String& String::GroupDigits()$/;"	f	class:String
GuardBandBottom	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	/^    float   GuardBandBottom;$/;"	m	struct:_D3DCAPS8
GuardBandLeft	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	/^    float   GuardBandLeft;$/;"	m	struct:_D3DCAPS8
GuardBandRight	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	/^    float   GuardBandRight;$/;"	m	struct:_D3DCAPS8
GuardBandTop	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	/^    float   GuardBandTop;$/;"	m	struct:_D3DCAPS8
GuardScope	OBSApi/Utility/RAIIHelpers.h	/^ScopeGuard<Fun> GuardScope(Fun &&fun) { return ScopeGuard<Fun>(std::move(fun)); }$/;"	f
H	librtmp/md5.c	53;"	d	file:
HANDLE	OBSApi/Utility/Defs.h	/^typedef void                VOID,*LPVOID,*HANDLE;$/;"	t
HANDLE	OBSApi/Utility/Defs.h	49;"	d
HAVE_ALLOCA	lame/mac/Precompile_Common.h	15;"	d
HAVE_CALLOC	libsamplerate/config.h	72;"	d
HAVE_CEIL	libsamplerate/config.h	75;"	d
HAVE_ERRNO_H	lame/config.h	35;"	d
HAVE_ERRNO_H	lame/configMS.h	35;"	d
HAVE_ERRNO_H	lame/mac/Precompile_Common.h	47;"	d
HAVE_FCNTL_H	lame/config.h	38;"	d
HAVE_FCNTL_H	lame/configMS.h	38;"	d
HAVE_FCNTL_H	lame/mac/Precompile_Common.h	48;"	d
HAVE_FLOOR	libsamplerate/config.h	84;"	d
HAVE_FMOD	libsamplerate/config.h	87;"	d
HAVE_FREE	libsamplerate/config.h	90;"	d
HAVE_GETTIMEOFDAY	lame/mac/Precompile_Common.h	44;"	d
HAVE_IEEE854_FLOAT80	lame/mac/Precompile_Common.h	58;"	d
HAVE_LIMITS_H	lame/config.h	41;"	d
HAVE_LIMITS_H	lame/configMS.h	41;"	d
HAVE_LIMITS_H	lame/mac/Precompile_Common.h	49;"	d
HAVE_LONG_DOUBLE	lame/mac/Precompile_Common.h	17;"	d
HAVE_LRINT_REPLACEMENT	libsamplerate/float_cast.h	152;"	d
HAVE_LRINT_REPLACEMENT	libsamplerate/float_cast.h	153;"	d
HAVE_LRINT_REPLACEMENT	libsamplerate/float_cast.h	190;"	d
HAVE_LRINT_REPLACEMENT	libsamplerate/float_cast.h	191;"	d
HAVE_LRINT_REPLACEMENT	libsamplerate/float_cast.h	226;"	d
HAVE_LRINT_REPLACEMENT	libsamplerate/float_cast.h	227;"	d
HAVE_LRINT_REPLACEMENT	libsamplerate/float_cast.h	56;"	d
HAVE_LRINT_REPLACEMENT	libsamplerate/float_cast.h	80;"	d
HAVE_LRINT_REPLACEMENT	libsamplerate/float_cast.h	81;"	d
HAVE_MALLOC	libsamplerate/config.h	105;"	d
HAVE_MEMCPY	lame/config.h	53;"	d
HAVE_MEMCPY	lame/configMS.h	53;"	d
HAVE_MEMCPY	libsamplerate/config.h	108;"	d
HAVE_MEMMOVE	libsamplerate/config.h	111;"	d
HAVE_MEMORY_H	libsamplerate/config.h	114;"	d
HAVE_SNDFILE	libsamplerate/config.h	123;"	d
HAVE_SOCKET	lame/mac/Precompile_Common.h	45;"	d
HAVE_STDLIB_H	libsamplerate/config.h	129;"	d
HAVE_STRCHR	lame/config.h	52;"	d
HAVE_STRCHR	lame/configMS.h	52;"	d
HAVE_STRINGS_H	libsamplerate/config.h	132;"	d
HAVE_STRING_H	lame/mac/Precompile_Common.h	50;"	d
HAVE_STRING_H	libsamplerate/config.h	135;"	d
HAVE_STRTOL	lame/mac/Precompile_Common.h	46;"	d
HAVE_SYS_STAT_H	libsamplerate/config.h	138;"	d
HAVE_SYS_TIME_H	lame/mac/Precompile_Common.h	51;"	d
HAVE_SYS_TYPES_H	libsamplerate/config.h	144;"	d
HAVE_TERMCAP	lame/mac/Precompile_Common.h	80;"	d
HAVE_UNISTD_H	lame/mac/Precompile_Common.h	52;"	d
HAVE_UNISTD_H	libsamplerate/config.h	147;"	d
HAVE_XMMINTRIN_H	lame/config.h	107;"	d
HAVE_XMMINTRIN_H	lame/config.h	111;"	d
HAVE_XMMINTRIN_H	lame/config.h	117;"	d
HAVE_XMMINTRIN_H	lame/configMS.h	107;"	d
HAVE_XMMINTRIN_H	lame/configMS.h	111;"	d
HAVE_XMMINTRIN_H	lame/configMS.h	117;"	d
HBE_STREAM	lame/Dll/BladeMP3EncDLL.h	/^typedef		void*			HBE_STREAM;$/;"	t
HBLKSIZE	lame/libmp3lame/encoder.h	112;"	d
HBLKSIZE_s	lame/libmp3lame/encoder.h	114;"	d
HDRCMPMASK	lame/mpglib/common.c	106;"	d	file:
HEADERBUF	librtmp/rtmp.c	5385;"	d	file:
HEADERS	lame/frontend/Makefile	/^HEADERS = $(noinst_HEADERS)$/;"	m
HEADERS	lame/include/Makefile	/^HEADERS = $(pkginclude_HEADERS)$/;"	m
HEADERS	lame/libmp3lame/Makefile	/^HEADERS = $(noinst_HEADERS)$/;"	m
HEADERS	lame/libmp3lame/i386/Makefile	/^HEADERS = $(noinst_HEADERS)$/;"	m
HEADERS	lame/libmp3lame/vector/Makefile	/^HEADERS = $(noinst_HEADERS)$/;"	m
HEADERS	lame/mpglib/Makefile	/^HEADERS = $(noinst_HEADERS)$/;"	m
HEX2BIN	librtmp/hashswf.c	441;"	d	file:
HEX2BIN	librtmp/rtmp.c	4737;"	d	file:
HEXDUMP_FILE	Source/mongoose.c	/^  HEXDUMP_FILE,$/;"	e	file:
HEXHASH_LEN	librtmp/rtmp.c	2865;"	d	file:
HEXTOI	Source/mongoose.c	2503;"	d	file:
HIDE_FILES_PATTERN	Source/mongoose.c	/^  HIDE_FILES_PATTERN,$/;"	e	file:
HIDW	OBSApi/Utility/XT.h	230;"	d
HIGH_BYTE	lame/frontend/get_audio.c	2142;"	d	file:
HIWORD	OBSApi/Utility/Defs.h	116;"	d
HIWORD	OBSApi/Utility/Defs.h	56;"	d
HIWORD	OBSApi/Utility/XT.h	231;"	d
HLOCALDeleter	Source/WindowStuff.cpp	/^    struct HLOCALDeleter$/;"	s	file:
HMAC_CTX	librtmp/handshake.h	33;"	d
HMAC_CTX	librtmp/handshake.h	51;"	d
HMAC_CTX	librtmp/handshake.h	52;"	d
HMAC_CTX	librtmp/hashswf.c	33;"	d	file:
HMAC_CTX	librtmp/hashswf.c	43;"	d	file:
HMAC_CTX	librtmp/hashswf.c	44;"	d	file:
HMAC_close	librtmp/handshake.h	56;"	d
HMAC_close	librtmp/hashswf.c	37;"	d	file:
HMAC_close	librtmp/hashswf.c	48;"	d	file:
HMAC_close	librtmp/hashswf.c	57;"	d	file:
HMAC_crunch	librtmp/handshake.h	35;"	d
HMAC_crunch	librtmp/handshake.h	54;"	d
HMAC_crunch	librtmp/handshake.h	73;"	d
HMAC_crunch	librtmp/hashswf.c	35;"	d	file:
HMAC_crunch	librtmp/hashswf.c	46;"	d	file:
HMAC_crunch	librtmp/hashswf.c	55;"	d	file:
HMAC_finish	librtmp/handshake.h	36;"	d
HMAC_finish	librtmp/handshake.h	55;"	d
HMAC_finish	librtmp/handshake.h	74;"	d
HMAC_finish	librtmp/hashswf.c	36;"	d	file:
HMAC_finish	librtmp/hashswf.c	47;"	d	file:
HMAC_finish	librtmp/hashswf.c	56;"	d	file:
HMAC_setup	librtmp/handshake.h	34;"	d
HMAC_setup	librtmp/handshake.h	53;"	d
HMAC_setup	librtmp/handshake.h	72;"	d
HMAC_setup	librtmp/hashswf.c	34;"	d	file:
HMAC_setup	librtmp/hashswf.c	45;"	d	file:
HMAC_setup	librtmp/hashswf.c	54;"	d	file:
HMACsha256	librtmp/handshake.h	/^HMACsha256(const uint8_t *message, size_t messageLen, const uint8_t *key,$/;"	f
HMONITOR	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^    DECLARE_HANDLE(HMONITOR);$/;"	v
HMONITOR_DECLARED	GraphicsCapture/GraphicsCaptureHook/d3d8.h	38;"	d
HOOK_ENTRY	minhook/src/hook.cpp	/^	struct HOOK_ENTRY$/;"	s	namespace:MinHook::<anonymous>	file:
HOTKEY_ALT	OBSApi/APIInterface.h	30;"	d
HOTKEY_CONTROL	OBSApi/APIInterface.h	29;"	d
HOTKEY_CONTROL_EX_CLASS	OBSApi/HotkeyControlEx.h	22;"	d
HOTKEY_SHIFT	OBSApi/APIInterface.h	28;"	d
HTN	lame/libmp3lame/tables.h	68;"	d
HTTPClient.cpp	Source/HTTPClient.cpp	1;"	F
HTTPClient.h	Source/HTTPClient.h	1;"	F
HTTPFindRedirect	Source/LogUploader.cpp	/^    bool HTTPFindRedirect(String url, String &location)$/;"	f
HTTPGetFile	Source/HTTPClient.cpp	/^BOOL HTTPGetFile (CTSTR url, CTSTR outputPath, CTSTR extraHeaders, int *responseCode)$/;"	f
HTTPGetString	OBSApi/Utility/XT.cpp	/^String HTTPGetString (CTSTR url, CTSTR extraHeaders, int *responseCode)$/;"	f
HTTPGetString	OBSApi/Utility/XT.cpp	/^String HTTPGetString (CTSTR url, int port, CTSTR extraHeaders, int *responseCode)$/;"	f
HTTPGetString	Source/HTTPClient.cpp	/^String HTTPGetString (CTSTR url, CTSTR extraHeaders, int *responseCode)$/;"	f
HTTPGetString	Source/HTTPClient.cpp	/^String HTTPGetString (CTSTR url, int port, CTSTR extraHeaders, int *responseCode)$/;"	f
HTTPHandle	Source/LogUploader.cpp	/^        explicit HTTPHandle(HINTERNET h=nullptr) : unique_ptr(h) {}$/;"	f	struct:<anonymous>::HTTPHandle
HTTPHandle	Source/LogUploader.cpp	/^    struct HTTPHandle : std::unique_ptr<void, HTTPHandleDeleter>$/;"	s	file:
HTTPHandleDeleter	Source/LogUploader.cpp	/^    struct HTTPHandleDeleter$/;"	s	file:
HTTPPostData	Source/LogUploader.cpp	/^    bool HTTPPostData(String url, String data, int &response, List<BYTE> *resultBody=nullptr, String const &headers=String())$/;"	f
HTTPPostData	Source/LogUploader.cpp	/^    bool HTTPPostData(String url, void *data, size_t length, int &response, List<BYTE> *resultBody, String const &headers=String())$/;"	f
HTTPPostString	Source/HTTPClient.cpp	/^String HTTPPostString(LPSTR extraHeaders)$/;"	f
HTTPProlog	Source/LogUploader.cpp	/^    bool HTTPProlog(String url, String &path, HTTPHandle &session, HTTPHandle &connect, bool &secure)$/;"	f
HTTPRES_BAD_REQUEST	librtmp/http.h	/^    HTTPRES_BAD_REQUEST,      \/* client error *\/$/;"	e
HTTPRES_LOST_CONNECTION	librtmp/http.h	/^    HTTPRES_LOST_CONNECTION   \/* connection lost while waiting for data *\/$/;"	e
HTTPRES_NOT_FOUND	librtmp/http.h	/^    HTTPRES_NOT_FOUND,        \/* not found *\/$/;"	e
HTTPRES_OK	librtmp/http.h	/^    HTTPRES_OK,               \/* result OK *\/$/;"	e
HTTPRES_OK_NOT_MODIFIED	librtmp/http.h	/^    HTTPRES_OK_NOT_MODIFIED,  \/* not modified since last request *\/$/;"	e
HTTPRES_REDIRECTED	librtmp/http.h	/^    HTTPRES_REDIRECTED,       \/* resource has been moved *\/$/;"	e
HTTPRES_SERVER_ERROR	librtmp/http.h	/^    HTTPRES_SERVER_ERROR,     \/* server reported an error *\/$/;"	e
HTTPReceiveStatus	Source/LogUploader.cpp	/^    bool HTTPReceiveStatus(HTTPHandle &request, int &status)$/;"	f
HTTPResult	librtmp/http.h	/^} HTTPResult;$/;"	t
HTTP_Post	librtmp/rtmp.c	/^HTTP_Post(RTMP *r, RTMPTCmd cmd, const char *buf, int len)$/;"	f	file:
HTTP_TIMEOUT	librtmp/hashswf.c	172;"	d	file:
HTTP_ctx	librtmp/http.h	/^struct HTTP_ctx$/;"	s
HTTP_get	librtmp/hashswf.c	/^HTTP_get(struct HTTP_ctx *http, const char *url, HTTP_read_callback *cb)$/;"	f
HTTP_read	librtmp/rtmp.c	/^HTTP_read(RTMP *r, int fill)$/;"	f	file:
HTTP_read_callback	librtmp/http.h	/^typedef size_t (HTTP_read_callback)(void *ptr, size_t size, size_t nmemb, void *stream);$/;"	t
HUFFMAN_H	libfaac/huffman.h	29;"	d
H_OBSNVENC_CUDADYNLOAD__H	ObsNvenc/inc/cudaDynload.h	20;"	d
H_OBSNVENC_MAIN__H	ObsNvenc/inc/nvmain.h	20;"	d
H_OBSNVENC_NVENCENCODER__H	ObsNvenc/inc/NVENCEncoder.h	20;"	d
HandMeAToken	Source/D3D10ShaderProcessor.cpp	27;"	d	file:
HandShake	librtmp/handshake.h	/^HandShake(RTMP * r, int FP9HandShake)$/;"	f
HandShake	librtmp/rtmp.c	/^HandShake(RTMP *r, int FP9HandShake)$/;"	f	file:
Handle	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/SharedTexture.cs	/^        public IntPtr Handle$/;"	p	class:Browser.SharedTexture
HandleAudio	librtmp/rtmp.c	/^HandleAudio(RTMP *r, const RTMPPacket *packet)$/;"	f	file:
HandleChangeChunkSize	librtmp/rtmp.c	/^HandleChangeChunkSize(RTMP *r, const RTMPPacket *packet)$/;"	f	file:
HandleClientBW	librtmp/rtmp.c	/^HandleClientBW(RTMP *r, const RTMPPacket *packet)$/;"	f	file:
HandleCloser	OBSApi/Utility/XT_Windows.cpp	/^    struct HandleCloser$/;"	s	file:
HandleCtrl	librtmp/rtmp.c	/^HandleCtrl(RTMP *r, const RTMPPacket *packet)$/;"	f	file:
HandleDialogCommand	lame/ACM/AEncodeProperties.cpp	/^bool AEncodeProperties::HandleDialogCommand(const HWND parentWnd, const WPARAM wParam, const LPARAM lParam)$/;"	f	class:AEncodeProperties
HandleGLSceneDestroy	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^static void HandleGLSceneDestroy()$/;"	f	file:
HandleGLSceneUpdate	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^void HandleGLSceneUpdate(HDC hDC)$/;"	f
HandleHotkeys	Source/API.cpp	/^void OBSAPIInterface::HandleHotkeys()$/;"	f	class:OBSAPIInterface
HandleHttpRequest	Source/Main.cpp	/^char* HandleHttpRequest(PCWSTR request, char* postData)$/;"	f
HandleInvoke	librtmp/rtmp.c	/^HandleInvoke(RTMP *r, const char *body, unsigned int nBodySize)$/;"	f	file:
HandleMetadata	librtmp/rtmp.c	/^HandleMetadata(RTMP *r, char *body, unsigned int len)$/;"	f	file:
HandleNvidiaOptimus	Source/D3D10System.cpp	/^static void HandleNvidiaOptimus(IDXGIFactory1 *factory, IDXGIAdapter1 *&adapter, UINT &adapterID)$/;"	f	file:
HandleSaveTimes	Source/ReplayBuffer.cpp	/^    void HandleSaveTimes(DWORD timestamp)$/;"	f	struct:ReplayBuffer
HandleServerBW	librtmp/rtmp.c	/^HandleServerBW(RTMP *r, const RTMPPacket *packet)$/;"	f	file:
HandleSort	libmfx/src/main.cpp	/^int HandleSort (const void * plhs, const void * prhs)$/;"	f
HandleStreamStopInfo	Source/OBSVideoCapture.cpp	/^bool OBS::HandleStreamStopInfo(OBS::StopInfo &info, PacketType type, const VideoSegment& segment)$/;"	f	class:OBS
HandleVector	libmfx/src/main.cpp	/^typedef MFXVector<MFX_DISP_HANDLE*> HandleVector;$/;"	t	file:
HandleVideo	librtmp/rtmp.c	/^HandleVideo(RTMP *r, const RTMPPacket *packet)$/;"	f	file:
Hann	libfaac/psychkni.c	/^static void Hann(GlobalPsyInfo * gpsyInfo, double *inSamples, int size)$/;"	f	file:
HasAlpha	Source/D3D10Texture.cpp	/^BOOL D3D10Texture::HasAlpha() const$/;"	f	class:D3D10Texture
HasBufferedFrames	ObsNvenc/src/NVENCEncoder.cpp	/^bool NVENCEncoder::HasBufferedFrames()$/;"	f	class:NVENCEncoder
HasBufferedFrames	Source/Encoder_QSV.cpp	/^    virtual bool HasBufferedFrames()$/;"	f	class:QSVEncoder
HasBufferedFrames	Source/Encoder_x264.cpp	/^    virtual bool HasBufferedFrames()$/;"	f	class:X264Encoder
HasBufferedFrames	Source/OBS.h	/^    virtual bool HasBufferedFrames() { return false; }$/;"	f	class:VideoEncoder
HasDefaults	CLRBrowserSourcePlugin/Plugin/BrowserSettingsPane.cs	/^        public override bool HasDefaults()$/;"	m	class:CLRBrowserSourcePlugin.BrowserSettingsPane
HasDefaults	CLRHostPlugin/CLRCSharpSamplePlugin/SampleSettingsPane.cs	/^        public override bool HasDefaults()$/;"	m	class:CSharpSamplePlugin.SampleSettingsPane
HasDefaults	CLRHostPlugin/CLRHostPlugin/CLRSettingsPane.cpp	/^bool CLRSettingsPane::HasDefaults()$/;"	f	class:CLRSettingsPane
HasDefaults	CLRHostPlugin/CLRHostPlugin/SettingsPaneBridge.h	/^    virtual bool HasDefaults() const$/;"	f	class:SettingsPaneBridge
HasDefaults	NoiseGate/NoiseGate.cpp	/^bool NoiseGateSettings::HasDefaults() const$/;"	f	class:NoiseGateSettings
HasDefaults	OBSApi/SettingsPane.cpp	/^bool SettingsPane::HasDefaults() const$/;"	f	class:SettingsPane
HasDefaults	Source/SettingsAdvanced.cpp	/^bool SettingsAdvanced::HasDefaults() const$/;"	f	class:SettingsAdvanced
HasDefaults	Source/SettingsAudio.cpp	/^bool SettingsAudio::HasDefaults() const$/;"	f	class:SettingsAudio
HasDefaults	Source/SettingsEncoding.cpp	/^bool SettingsEncoding::HasDefaults() const$/;"	f	class:SettingsEncoding
HasDefaults	Source/SettingsGeneral.cpp	/^bool SettingsGeneral::HasDefaults() const$/;"	f	class:SettingsGeneral
HasDefaults	Source/SettingsHotkeys.cpp	/^bool SettingsHotkeys::HasDefaults() const$/;"	f	class:SettingsHotkeys
HasDefaults	Source/SettingsPublish.cpp	/^bool SettingsPublish::HasDefaults() const$/;"	f	class:SettingsPublish
HasDefaults	Source/SettingsQSV.cpp	/^bool SettingsQSV::HasDefaults() const$/;"	f	class:SettingsQSV
HasDefaults	Source/SettingsVideo.cpp	/^bool SettingsVideo::HasDefaults() const$/;"	f	class:SettingsVideo
HasDefaults	scenesw/SceneSwitcherSettings.cpp	/^bool SceneSwitcherSettings::HasDefaults() const$/;"	f	class:SceneSwitcherSettings
HasID	Source/OBS.h	/^    inline bool HasID(CTSTR lpID) const$/;"	f	struct:AudioDeviceList
HasIntelGraphics	QSVHelper/QSVHelper.cpp	/^    bool HasIntelGraphics()$/;"	f
HasItem	OBSApi/Utility/XConfig.h	/^    inline bool HasItem(CTSTR lpName) const$/;"	f	class:XElement
HasKey	OBSApi/Utility/ConfigFile.cpp	/^BOOL  ConfigFile::HasKey(CTSTR lpSection, CTSTR lpKey)$/;"	f	class:ConfigFile
HasLookup	OBSApi/Utility/XTLocalization.h	/^    inline BOOL HasLookup(CTSTR lookupVal) const {return (FindNode(lookupVal) != NULL);}$/;"	f	class:LocaleStringLookup
HasMissingSources	OBSApi/Scene.h	/^    inline bool HasMissingSources() const {return bMissingSources;}$/;"	f	class:Scene
HasSSE2Support	Source/Main.cpp	/^int HasSSE2Support ()$/;"	f
HasValue	OBSApi/Utility/Template.h	/^    inline BOOL HasValue(const T& val) const$/;"	f	class:List
HasValueI	OBSApi/Utility/XString.h	/^    inline BOOL HasValueI(CTSTR lpStr) const$/;"	f	class:StringList
HasValueI	OBSApi/Utility/XString.h	/^    inline BOOL HasValueI(const String& val) const$/;"	f	class:StringList
HashToString	Source/Updater.cpp	/^VOID HashToString (BYTE *in, TCHAR *out)$/;"	f
Header	libmfx/include/msdk/include/mfxjpeg.h	/^    mfxExtBuffer    Header;$/;"	m
Header	libmfx/include/msdk/include/mfxmvc.h	/^    mfxExtBuffer    Header;$/;"	m
Header	libmfx/include/msdk/include/mfxmvc.h	/^    mfxExtBuffer Header;$/;"	m
Header	libmfx/include/msdk/include/mfxstructures.h	/^    mfxExtBuffer    Header; $/;"	m
Header	libmfx/include/msdk/include/mfxstructures.h	/^    mfxExtBuffer    Header;$/;"	m
Header	libmfx/include/msdk/include/mfxstructures.h	/^    mfxExtBuffer Header;$/;"	m
Header	libmfx/include/msdk/include/mfxstructures.h	/^  mfxExtBuffer    Header;$/;"	m
Header.h	CLRHostPlugin/CLRHostInterop/Header.h	1;"	F
HeaderPacket	Source/Encoder_QSV.cpp	/^    List<BYTE> HeaderPacket, SEIData;$/;"	m	class:QSVEncoder	file:
HeaderPacket	Source/Encoder_x264.cpp	/^    List<BYTE> HeaderPacket, SEIData;$/;"	m	class:X264Encoder	file:
Height	CLRBrowserSourcePlugin/Plugin/BrowserSource.cs	/^            public UInt32 Height { get; set; }$/;"	p	class:CLRBrowserSourcePlugin.BrowserSource.TextureDesc
Height	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public int Height { get; set; }$/;"	p	class:Shared.BrowserSourceSettings
Height	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    DWORD       Height;       \/* Viewport Dimensions *\/$/;"	m	struct:_D3DVIEWPORT8
Height	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    UINT                Height;$/;"	m	struct:_D3DRECTPATCH_INFO
Height	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    UINT                Height;$/;"	m	struct:_D3DSURFACE_DESC
Height	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    UINT                Height;$/;"	m	struct:_D3DVOLUME_DESC
Height	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    UINT            Height;$/;"	m	struct:_D3DDISPLAYMODE
Height	Source/D3D10Texture.cpp	/^DWORD D3D10Texture::Height() const$/;"	f	class:D3D10Texture
Height	extras/dxgi1_2.h	/^    UINT Height;$/;"	m	struct:DXGI_MODE_DESC1
Height	extras/dxgi1_2.h	/^    UINT Height;$/;"	m	struct:DXGI_OUTDUPL_POINTER_SHAPE_INFO
Height	extras/dxgi1_2.h	/^    UINT Height;$/;"	m	struct:DXGI_SWAP_CHAIN_DESC1
Height	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16  Height;$/;"	m
HideNotificationAreaIcon	Source/OBS.cpp	/^BOOL OBS::HideNotificationAreaIcon()$/;"	f	class:OBS
Hook	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.h	/^    inline bool Hook(FARPROC funcIn, FARPROC hookFuncIn)$/;"	f	class:HookData
HookAll	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	/^void HookAll()$/;"	f
HookData	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.h	/^    inline HookData() : bHooked(false), func(NULL), hookFunc(NULL), b64bitJump(false), bAttemptedBounce(false) {}$/;"	f	class:HookData
HookData	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.h	/^    inline HookData() : bHooked(false), func(NULL), hookFunc(NULL), b64bitJump(false), origFunc(NULL)$/;"	f	class:HookData
HookData	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.h	/^class HookData$/;"	c
HotSpot	extras/dxgi1_2.h	/^    POINT HotSpot;$/;"	m	struct:DXGI_OUTDUPL_POINTER_SHAPE_INFO
HotkeyControlEx.cpp	OBSApi/HotkeyControlEx.cpp	1;"	F
HotkeyControlEx.h	OBSApi/HotkeyControlEx.h	1;"	F
HotkeyControlExData	OBSApi/HotkeyControlEx.cpp	/^struct HotkeyControlExData$/;"	s	file:
HotkeyExProc	OBSApi/HotkeyControlEx.cpp	/^LRESULT CALLBACK HotkeyExProc(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam)$/;"	f
HotkeyInfo	Source/API.cpp	/^struct HotkeyInfo$/;"	s	file:
HotkeyThread	Source/API.cpp	/^DWORD STDCALL OBS::HotkeyThread(LPVOID lpUseless)$/;"	f	class:OBS
HotkeyToggle	scenesw/scenesw.cpp	/^void STDCALL HotkeyToggle(DWORD hotkey, UPARAM param, bool bDown)$/;"	f
HoursFlag	libmfx/include/msdk/include/mfxstructures.h	/^      mfxU16    HoursFlag;$/;"	m
HoursValue	libmfx/include/msdk/include/mfxstructures.h	/^      mfxU16    HoursValue;$/;"	m
Hue	libmfx/include/msdk/include/mfxstructures.h	/^    mfxF64   Hue;$/;"	m
HuffmanEnd	libfaac/huffman.c	/^void HuffmanEnd(CoderInfo *coderInfo, unsigned int numChannels)$/;"	f
HuffmanInit	libfaac/huffman.c	/^void HuffmanInit(CoderInfo *coderInfo, unsigned int numChannels)$/;"	f
Huffmancode	lame/libmp3lame/bitstream.c	/^Huffmancode(lame_internal_flags * const gfc, const unsigned int tableindex,$/;"	f	file:
I	librtmp/md5.c	54;"	d	file:
I1LIMIT	lame/libmp3lame/psymodel.c	244;"	d	file:
I2LIMIT	lame/libmp3lame/psymodel.c	245;"	d	file:
IAudioHRESULTToString	Source/MMDeviceAudioSource.cpp	/^const static TCHAR *IAudioHRESULTToString(HRESULT hr)$/;"	f	file:
IAudioSessionControl2	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/RenderProcess.cs	/^    internal interface IAudioSessionControl2$/;"	i	namespace:Browser
IAudioSessionEnumerator	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/RenderProcess.cs	/^    internal interface IAudioSessionEnumerator$/;"	i	namespace:Browser
IAudioSessionManager2	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/RenderProcess.cs	/^    internal interface IAudioSessionManager2$/;"	i	namespace:Browser
ICQQuality	libmfx/include/msdk/include/mfxstructures.h	/^                mfxU16  ICQQuality;$/;"	m
ID3TAGS_EXTENDED	lame/frontend/parse.c	116;"	d	file:
ID3TAGS_EXTENDED	lame/frontend/parse.c	277;"	d	file:
ID3TAG_MODE	lame/frontend/parse.c	/^enum ID3TAG_MODE $/;"	g	file:
ID3TAG_MODE_DEFAULT	lame/frontend/parse.c	/^{ ID3TAG_MODE_DEFAULT$/;"	e	enum:ID3TAG_MODE	file:
ID3TAG_MODE_V1_ONLY	lame/frontend/parse.c	/^, ID3TAG_MODE_V1_ONLY$/;"	e	enum:ID3TAG_MODE	file:
ID3TAG_MODE_V2_ONLY	lame/frontend/parse.c	/^, ID3TAG_MODE_V2_ONLY$/;"	e	enum:ID3TAG_MODE	file:
IDADD	scenesw/resource.h	35;"	d
IDA_SOURCE_BOTTOM_CANVAS	resource.h	413;"	d
IDA_SOURCE_CENTER	resource.h	381;"	d
IDA_SOURCE_CENTER_HOR	resource.h	416;"	d
IDA_SOURCE_CENTER_VER	resource.h	415;"	d
IDA_SOURCE_DELETE	resource.h	383;"	d
IDA_SOURCE_FITTOSCREEN	resource.h	384;"	d
IDA_SOURCE_LEFT_CANVAS	resource.h	407;"	d
IDA_SOURCE_MOVEDOWN	resource.h	378;"	d
IDA_SOURCE_MOVETOBOTTOM	resource.h	380;"	d
IDA_SOURCE_MOVETOTOP	resource.h	379;"	d
IDA_SOURCE_MOVEUP	resource.h	377;"	d
IDA_SOURCE_RESETCROP	resource.h	417;"	d
IDA_SOURCE_RESETSIZE	resource.h	382;"	d
IDA_SOURCE_RIGHT_CANVAS	resource.h	411;"	d
IDA_SOURCE_TOP_CANVAS	resource.h	409;"	d
IDC_64BIT_WARNING	DShowPlugin/resource.h	61;"	d
IDC_ACCURACY	resource.h	358;"	d
IDC_ACCURACY_EDIT	resource.h	357;"	d
IDC_ADD	resource.h	141;"	d
IDC_ADDFOLDER	resource.h	146;"	d
IDC_ADDNEW	resource.h	173;"	d
IDC_ALIGN	resource.h	266;"	d
IDC_ALLOWEXTRAHOTKEYMODIFIERS	resource.h	242;"	d
IDC_ALLOWOTHERHOTKEYMODIFIERS	resource.h	243;"	d
IDC_ALPHABLEND	GraphicsCapture/resource.h	21;"	d
IDC_ALTNOSWITCH	scenesw/resource.h	37;"	d
IDC_ALTSCN	scenesw/resource.h	15;"	d
IDC_ALTSWITCH	scenesw/resource.h	29;"	d
IDC_ANALYZE	resource.h	315;"	d
IDC_APPLIST	GraphicsCapture/resource.h	7;"	d
IDC_APPLIST	scenesw/resource.h	11;"	d
IDC_APPLY	resource.h	7;"	d
IDC_ASPECT	resource.h	93;"	d
IDC_ATTACKTIME_EDIT	NoiseGate/resource.h	13;"	d
IDC_AUDIOBITRATE	resource.h	72;"	d
IDC_AUDIOCHANNEL	resource.h	77;"	d
IDC_AUDIOCODEC	resource.h	69;"	d
IDC_AUDIOFORMAT	resource.h	71;"	d
IDC_AUDIOLIST	DShowPlugin/resource.h	8;"	d
IDC_AUDIOTIMEADJUST	resource.h	186;"	d
IDC_AUDIOTIMEADJUST_EDIT	resource.h	287;"	d
IDC_AUTOMATICRESOLUTION	DShowPlugin/resource.h	26;"	d
IDC_AUTORECONNECT	resource.h	103;"	d
IDC_AUTORECONNECT_TIMEOUT	resource.h	182;"	d
IDC_AUTORECONNECT_TIMEOUT_EDIT	resource.h	175;"	d
IDC_AUTORECONNECT_TIMEOUT_STATIC	resource.h	187;"	d
IDC_BACKGROUNDCOLOR	resource.h	253;"	d
IDC_BACKGROUNDOPACITY	resource.h	263;"	d
IDC_BACKGROUNDOPACITY_EDIT	resource.h	206;"	d
IDC_BASETHRESHOLD	DShowPlugin/resource.h	31;"	d
IDC_BASETHRESHOLD	resource.h	78;"	d
IDC_BASETHRESHOLD_CHI	DShowPlugin/resource.h	33;"	d
IDC_BASETHRESHOLD_EDIT	DShowPlugin/resource.h	32;"	d
IDC_BASETHRESHOLD_EDIT	resource.h	74;"	d
IDC_BFF	DShowPlugin/resource.h	58;"	d
IDC_BINDIP	resource.h	59;"	d
IDC_BITMAP	resource.h	135;"	d
IDC_BITMAPS	resource.h	219;"	d
IDC_BLEND	DShowPlugin/resource.h	35;"	d
IDC_BLEND	resource.h	80;"	d
IDC_BLEND_EDIT	DShowPlugin/resource.h	34;"	d
IDC_BLEND_EDIT	resource.h	79;"	d
IDC_BOLD	resource.h	268;"	d
IDC_BROWSE	resource.h	136;"	d
IDC_BROWSEUSERSERVICES	resource.h	139;"	d
IDC_BUFFERSENDS	resource.h	102;"	d
IDC_BUFFERSIZE	resource.h	66;"	d
IDC_BUTTON1	DShowPlugin/resource.h	21;"	d
IDC_BUTTON1	GraphicsCapture/resource.h	17;"	d
IDC_BUTTON1	resource.h	310;"	d
IDC_BYTESTRANSFERRED	resource.h	307;"	d
IDC_CANCEL	resource.h	275;"	d
IDC_CAPTURELAYERED	resource.h	231;"	d
IDC_CAPTUREMOUSE	GraphicsCapture/resource.h	10;"	d
IDC_CAPTUREMOUSE	resource.h	101;"	d
IDC_CAPTURERAM	resource.h	237;"	d
IDC_CHANNELNAME	resource.h	51;"	d
IDC_CHANNELNAME_STATIC	resource.h	117;"	d
IDC_CHECK1	DShowPlugin/resource.h	49;"	d
IDC_CHECK1	PSVPlugin/resource.h	6;"	d
IDC_CHECK1	resource.h	99;"	d
IDC_CHECK2	resource.h	227;"	d
IDC_CHECK3	resource.h	300;"	d
IDC_CHECK_CHECKSUM	lame/ACM/resource.h	10;"	d
IDC_CHECK_COPYRIGHT	lame/ACM/resource.h	9;"	d
IDC_CHECK_COPYRIGHT	lame/dshow/resource.h	13;"	d
IDC_CHECK_CRC	lame/dshow/resource.h	15;"	d
IDC_CHECK_DISABLE_SHORT_BLOCK	lame/dshow/resource.h	34;"	d
IDC_CHECK_ENC_ABR	lame/ACM/resource.h	19;"	d
IDC_CHECK_ENC_SMART	lame/ACM/resource.h	14;"	d
IDC_CHECK_ENFORCE_MIN	lame/dshow/resource.h	30;"	d
IDC_CHECK_FORCE_MS	lame/dshow/resource.h	36;"	d
IDC_CHECK_KEEP_ALL_FREQ	lame/dshow/resource.h	32;"	d
IDC_CHECK_MODE_FIXED	lame/dshow/resource.h	37;"	d
IDC_CHECK_ORIGINAL	lame/ACM/resource.h	11;"	d
IDC_CHECK_ORIGINAL	lame/dshow/resource.h	14;"	d
IDC_CHECK_OVERLAP	lame/dshow/resource.h	39;"	d
IDC_CHECK_PES	lame/dshow/resource.h	16;"	d
IDC_CHECK_PRIVATE	lame/ACM/resource.h	12;"	d
IDC_CHECK_STOP	lame/dshow/resource.h	40;"	d
IDC_CHECK_STRICT_ISO	lame/dshow/resource.h	33;"	d
IDC_CHECK_VOICE	lame/dshow/resource.h	31;"	d
IDC_CHECK_XING_TAG	lame/dshow/resource.h	35;"	d
IDC_CLEAR	resource.h	170;"	d
IDC_CLEARHOTKEY	GraphicsCapture/resource.h	18;"	d
IDC_CLEARHOTKEY	resource.h	222;"	d
IDC_CLEARHOTKEY_RECORDFROMREPLAYBUFFER	resource.h	351;"	d
IDC_CLEARHOTKEY_SAVEREPLAYBUFFER	resource.h	332;"	d
IDC_CLEARHOTKEY_STARTRECORDING	resource.h	322;"	d
IDC_CLEARHOTKEY_STARTREPLAYBUFFER	resource.h	339;"	d
IDC_CLEARHOTKEY_STARTSTREAM	resource.h	226;"	d
IDC_CLEARHOTKEY_STOPRECORDING	resource.h	324;"	d
IDC_CLEARHOTKEY_STOPREPLAYBUFFER	resource.h	345;"	d
IDC_CLEARMUTEDESKTOP	resource.h	217;"	d
IDC_CLEARMUTEMIC	resource.h	215;"	d
IDC_CLEARPUSHTOTALK	resource.h	213;"	d
IDC_CLEARPUSHTOTALK2	resource.h	220;"	d
IDC_CLEAR_HOTKEY	scenesw/resource.h	43;"	d
IDC_CLOSETHRES_DB	NoiseGate/resource.h	15;"	d
IDC_CLOSETHRES_SLIDER	NoiseGate/resource.h	9;"	d
IDC_COLOR	DShowPlugin/resource.h	30;"	d
IDC_COLOR	resource.h	244;"	d
IDC_COLORKEY	resource.h	246;"	d
IDC_COLORPICKER	DShowPlugin/resource.h	25;"	d
IDC_COLORPICKER	resource.h	61;"	d
IDC_COLORPICKET	DShowPlugin/resource.h	24;"	d
IDC_COLORSPACE	DShowPlugin/resource.h	64;"	d
IDC_COMBO1	GraphicsCapture/resource.h	6;"	d
IDC_COMBO_CBR	lame/dshow/resource.h	12;"	d
IDC_COMBO_ENC_STEREO	lame/ACM/resource.h	13;"	d
IDC_COMBO_SAMPLE_RATE	lame/dshow/resource.h	24;"	d
IDC_COMBO_VBRMAX	lame/dshow/resource.h	23;"	d
IDC_COMBO_VBRMIN	lame/dshow/resource.h	17;"	d
IDC_COMBO_VBRq	lame/dshow/resource.h	25;"	d
IDC_COMPATIBILITYMODE	resource.h	238;"	d
IDC_CONFIG	DShowPlugin/resource.h	7;"	d
IDC_CONFIG	resource.h	158;"	d
IDC_CONFIGAUDIO	DShowPlugin/resource.h	9;"	d
IDC_CONNECTEDONLY	resource.h	235;"	d
IDC_CONVERGENCE	resource.h	360;"	d
IDC_CONVERGENCE_EDIT	resource.h	359;"	d
IDC_COPIED	resource.h	314;"	d
IDC_COPY	resource.h	312;"	d
IDC_CROSSBAR	DShowPlugin/resource.h	11;"	d
IDC_CURVOL	NoiseGate/resource.h	7;"	d
IDC_CUSTOM	DShowPlugin/resource.h	22;"	d
IDC_CUSTOMBUFFER	resource.h	109;"	d
IDC_CUSTOMRESOLUTION	DShowPlugin/resource.h	27;"	d
IDC_DEFAULTS	resource.h	5;"	d
IDC_DEINTERLACELIST	DShowPlugin/resource.h	10;"	d
IDC_DELAY	DShowPlugin/resource.h	56;"	d
IDC_DELAY	resource.h	203;"	d
IDC_DELAY_EDIT	DShowPlugin/resource.h	54;"	d
IDC_DELAY_EDIT	resource.h	201;"	d
IDC_DELAY_STATIC	resource.h	269;"	d
IDC_DESCRIPTION	resource.h	148;"	d
IDC_DESKTOPBOOST	resource.h	208;"	d
IDC_DESKTOPBOOST_EDIT	resource.h	205;"	d
IDC_DEVICE	resource.h	68;"	d
IDC_DEVICELIST	DShowPlugin/resource.h	6;"	d
IDC_DISABLEAERO	resource.h	97;"	d
IDC_DISABLECTSADJUST	resource.h	284;"	d
IDC_DISABLED3DCOMPATIBILITY	resource.h	229;"	d
IDC_DISABLEFADING	resource.h	116;"	d
IDC_DISABLEMIC	resource.h	98;"	d
IDC_DISABLEPREVIEWENCODING	resource.h	240;"	d
IDC_DISABLETCPOPTIMIZATIONS	resource.h	289;"	d
IDC_DOWNSCALE	resource.h	58;"	d
IDC_DOWNSCALE2	resource.h	62;"	d
IDC_DROPPEDFRAMES	resource.h	304;"	d
IDC_EDIT1	DShowPlugin/resource.h	46;"	d
IDC_EDIT1	resource.h	174;"	d
IDC_EDIT_TEXT	lame/dshow/resource.h	41;"	d
IDC_ENABLEGATE	NoiseGate/resource.h	6;"	d
IDC_ENABLEPROJECTORCURSOR	resource.h	302;"	d
IDC_ENCODEFULLRANGE	resource.h	274;"	d
IDC_ENCODERNVENC	resource.h	329;"	d
IDC_ENCODERQSV	resource.h	326;"	d
IDC_ENCODERX264	resource.h	325;"	d
IDC_EXAMPLE	resource.h	261;"	d
IDC_EXTENTHEIGHT	resource.h	200;"	d
IDC_EXTENTHEIGHT_EDIT	resource.h	128;"	d
IDC_EXTENTWIDTH	resource.h	197;"	d
IDC_EXTENTWIDTH_EDIT	resource.h	118;"	d
IDC_FADEINONLY	resource.h	106;"	d
IDC_FADEINONLY3	resource.h	124;"	d
IDC_FILE	resource.h	252;"	d
IDC_FILEOUTPUTMODE	resource.h	333;"	d
IDC_FILEOUTPUTNORMAL	resource.h	334;"	d
IDC_FILEOUTPUTREPLAYBUFFER	resource.h	336;"	d
IDC_FILTER	resource.h	63;"	d
IDC_FILTER2	resource.h	67;"	d
IDC_FLIPIMAGE	DShowPlugin/resource.h	20;"	d
IDC_FLIPIMAGEH	DShowPlugin/resource.h	39;"	d
IDC_FONT	resource.h	254;"	d
IDC_FORCEMONO	resource.h	113;"	d
IDC_FORCEMONO2	resource.h	120;"	d
IDC_FORCE_MONO	lame/dshow/resource.h	43;"	d
IDC_FPS	DShowPlugin/resource.h	14;"	d
IDC_FPS	resource.h	83;"	d
IDC_FPS2	DShowPlugin/resource.h	16;"	d
IDC_FPS_EDIT	DShowPlugin/resource.h	13;"	d
IDC_FPS_EDIT	resource.h	88;"	d
IDC_FREQ	scenesw/resource.h	17;"	d
IDC_FULLRANGE	DShowPlugin/resource.h	45;"	d
IDC_GAMMA	DShowPlugin/resource.h	57;"	d
IDC_GAMMA	GraphicsCapture/resource.h	22;"	d
IDC_GAMMA	resource.h	92;"	d
IDC_GAMMAVAL	DShowPlugin/resource.h	65;"	d
IDC_GAMMAVAL	GraphicsCapture/resource.h	25;"	d
IDC_GAMMAVAL	resource.h	292;"	d
IDC_GAMMA_EDIT	DShowPlugin/resource.h	36;"	d
IDC_GPUDEINT	DShowPlugin/resource.h	59;"	d
IDC_HAND	lame/ACM/ACM.cpp	57;"	d	file:
IDC_HOLDTIME_EDIT	NoiseGate/resource.h	12;"	d
IDC_HOTKEY	GraphicsCapture/resource.h	24;"	d
IDC_HOTKEY	resource.h	168;"	d
IDC_HOTKEY1	resource.h	167;"	d
IDC_HOTKEYLABEL	scenesw/resource.h	41;"	d
IDC_ICQQUALITY	resource.h	370;"	d
IDC_ICQQUALITY_EDIT	resource.h	369;"	d
IDC_IGNOREASPECT	GraphicsCapture/resource.h	14;"	d
IDC_IMPORT	resource.h	375;"	d
IDC_INFO	GraphicsCapture/resource.h	12;"	d
IDC_INFO	resource.h	82;"	d
IDC_INFO2	resource.h	85;"	d
IDC_INNERWINDOW	resource.h	165;"	d
IDC_INVERTMOUSEONCLICK	GraphicsCapture/resource.h	11;"	d
IDC_INVERTMOUSEONCLICK2	GraphicsCapture/resource.h	19;"	d
IDC_ITALIC	resource.h	270;"	d
IDC_KEEPRECORDING	resource.h	134;"	d
IDC_KEYCOLOR	resource.h	247;"	d
IDC_KEYFRAMEINTERVAL	resource.h	190;"	d
IDC_KEYFRAMEINTERVAL_EDIT	resource.h	75;"	d
IDC_LADEPTH	resource.h	368;"	d
IDC_LADEPTH_EDIT	resource.h	367;"	d
IDC_LAME_LA	lame/dshow/resource.h	42;"	d
IDC_LAME_URL	lame/dshow/resource.h	45;"	d
IDC_LAME_VER	lame/dshow/resource.h	44;"	d
IDC_LANGUAGE	resource.h	81;"	d
IDC_LATEFRAMES	resource.h	305;"	d
IDC_LATENCYMETHOD	resource.h	288;"	d
IDC_LATENCYTUNE	resource.h	290;"	d
IDC_LIST1	resource.h	218;"	d
IDC_LOWLATENCYMODE	resource.h	233;"	d
IDC_MAINSCN	scenesw/resource.h	13;"	d
IDC_MAXBITRATE	resource.h	60;"	d
IDC_MAXKBPS	resource.h	356;"	d
IDC_MICBOOST	resource.h	184;"	d
IDC_MICBOOST2	resource.h	207;"	d
IDC_MICBOOST_EDIT	resource.h	179;"	d
IDC_MICBOOST_EDIT2	resource.h	198;"	d
IDC_MICDEVICES	resource.h	138;"	d
IDC_MICSYNCFIX	resource.h	299;"	d
IDC_MICTIMEOFFSET	resource.h	202;"	d
IDC_MICTIMEOFFSET_EDIT	resource.h	199;"	d
IDC_MINIZENOTIFICATION	resource.h	234;"	d
IDC_MODE	resource.h	47;"	d
IDC_MONITOR	resource.h	73;"	d
IDC_MONITORCAPTURE	resource.h	155;"	d
IDC_MOVEDOWN	resource.h	147;"	d
IDC_MOVEDOWNWARD	resource.h	152;"	d
IDC_MOVETOBOTTOM	resource.h	153;"	d
IDC_MOVETOTOP	resource.h	151;"	d
IDC_MOVEUP	resource.h	144;"	d
IDC_MOVEUPWARD	resource.h	149;"	d
IDC_MUTEDESKTOPHOTKEY	resource.h	172;"	d
IDC_MUTEMICHOTKEY	resource.h	171;"	d
IDC_NAME	resource.h	133;"	d
IDC_NOTIFICATIONICON	resource.h	110;"	d
IDC_NVENCPRESET	resource.h	283;"	d
IDC_NVENCPRESET_LABEL	resource.h	316;"	d
IDC_OPACITY	DShowPlugin/resource.h	42;"	d
IDC_OPACITY	resource.h	107;"	d
IDC_OPACITY2	resource.h	115;"	d
IDC_OPACITY_EDIT	DShowPlugin/resource.h	41;"	d
IDC_OPACITY_EDIT	resource.h	178;"	d
IDC_OPENTHRES_DB	NoiseGate/resource.h	14;"	d
IDC_OPENTHRES_SLIDER	NoiseGate/resource.h	10;"	d
IDC_OPTIMIZE	resource.h	8;"	d
IDC_OUTERWINDOW	resource.h	163;"	d
IDC_OUTLINECOLOR	resource.h	245;"	d
IDC_OUTLINEOPACITY	resource.h	296;"	d
IDC_OUTLINEOPACITY_EDIT	resource.h	295;"	d
IDC_OUTLINETHICKNESS	resource.h	260;"	d
IDC_OUTLINETHICKNESS_EDIT	resource.h	204;"	d
IDC_OUTPUTSOUND	DShowPlugin/resource.h	43;"	d
IDC_PADCBR	resource.h	281;"	d
IDC_PLAYBACKDEVICES	resource.h	286;"	d
IDC_PLAYDESKTOPSOUND	DShowPlugin/resource.h	44;"	d
IDC_PLAYPATH	resource.h	50;"	d
IDC_PLAYPATH_STATIC	resource.h	126;"	d
IDC_PLUGINS	resource.h	143;"	d
IDC_POINTFILTERING	DShowPlugin/resource.h	53;"	d
IDC_POINTFILTERING	resource.h	95;"	d
IDC_POSX	resource.h	159;"	d
IDC_POSY	resource.h	160;"	d
IDC_PREFERREDOUTPUT	DShowPlugin/resource.h	40;"	d
IDC_PREFERREDOUTPUT2	DShowPlugin/resource.h	63;"	d
IDC_PRESERVESIZE	DShowPlugin/resource.h	60;"	d
IDC_PRESET	resource.h	55;"	d
IDC_PRESET2	resource.h	64;"	d
IDC_PREVIEWON	NoiseGate/resource.h	8;"	d
IDC_PRIORITY	resource.h	279;"	d
IDC_PROFILE	resource.h	84;"	d
IDC_PROGRESS1	resource.h	241;"	d
IDC_PTTDELAY	resource.h	194;"	d
IDC_PTTDELAY_EDIT	resource.h	189;"	d
IDC_PUSHTOTALK	resource.h	104;"	d
IDC_PUSHTOTALKHOTKEY	resource.h	169;"	d
IDC_PUSHTOTALKHOTKEY2	resource.h	297;"	d
IDC_QPB	resource.h	366;"	d
IDC_QPB_EDIT	resource.h	365;"	d
IDC_QPI	resource.h	362;"	d
IDC_QPI_EDIT	resource.h	361;"	d
IDC_QPP	resource.h	364;"	d
IDC_QPP_EDIT	resource.h	363;"	d
IDC_QSVAVBR	resource.h	346;"	d
IDC_QSVCBR	resource.h	342;"	d
IDC_QSVCQP	resource.h	350;"	d
IDC_QSVICQ	resource.h	352;"	d
IDC_QSVLA	resource.h	282;"	d
IDC_QSVLAICQ	resource.h	353;"	d
IDC_QSVMAXKBPS	resource.h	355;"	d
IDC_QSVPRESET	resource.h	320;"	d
IDC_QSVPRESET_LABEL	resource.h	319;"	d
IDC_QSVUSEVIDEOENCODERSETTINGS	resource.h	278;"	d
IDC_QSVVBR	resource.h	344;"	d
IDC_QSVVCM	resource.h	354;"	d
IDC_QSVVIDEOENCODERSETTINGS	resource.h	195;"	d
IDC_QSV_CONFIG_WARNING	resource.h	87;"	d
IDC_QSV_WINVER_WARNING	resource.h	89;"	d
IDC_QUALITY	resource.h	52;"	d
IDC_RADIO_CBR	lame/dshow/resource.h	19;"	d
IDC_RADIO_DUAL	lame/dshow/resource.h	28;"	d
IDC_RADIO_JSTEREO	lame/dshow/resource.h	27;"	d
IDC_RADIO_MONO	lame/dshow/resource.h	29;"	d
IDC_RADIO_STEREO	lame/dshow/resource.h	26;"	d
IDC_RADIO_VBR	lame/dshow/resource.h	20;"	d
IDC_RANDOMIZE	resource.h	125;"	d
IDC_RECONNECTING	resource.h	191;"	d
IDC_RECORDFROMREPLAYBUFFERHOTKEY	resource.h	349;"	d
IDC_RECORDFROMREPLAYBUFFERHOTKEY_STATIC	resource.h	347;"	d
IDC_REFRESH	DShowPlugin/resource.h	15;"	d
IDC_REFRESH	GraphicsCapture/resource.h	8;"	d
IDC_REFRESH	resource.h	164;"	d
IDC_REGIONCAPTURE	resource.h	157;"	d
IDC_RELEASETIME_EDIT	NoiseGate/resource.h	11;"	d
IDC_REMOVE	resource.h	142;"	d
IDC_REMOVE2	resource.h	150;"	d
IDC_RENAME	resource.h	154;"	d
IDC_RENAME2	resource.h	156;"	d
IDC_REPLACE	resource.h	145;"	d
IDC_REPLAYBUFFERBROWSE	resource.h	137;"	d
IDC_REPLAYBUFFERLENGTH	resource.h	211;"	d
IDC_REPLAYBUFFERLENGTH_EDIT	resource.h	209;"	d
IDC_REPLAYBUFFERLENGTH_STATIC	resource.h	272;"	d
IDC_REPLAYBUFFERMEMORY	resource.h	340;"	d
IDC_REPLAYBUFFERMEMORY_STATIC	resource.h	338;"	d
IDC_REPLAYBUFFERSAVEPATH	resource.h	214;"	d
IDC_REPLAYBUFFERSAVEPATH_STATIC	resource.h	212;"	d
IDC_RESETMIC	resource.h	311;"	d
IDC_RESETSIZE	resource.h	100;"	d
IDC_RESOLUTION	DShowPlugin/resource.h	12;"	d
IDC_RICHEDIT_LAME	lame/dshow/resource.h	38;"	d
IDC_RUN	scenesw/resource.h	19;"	d
IDC_SAVEPATH	resource.h	192;"	d
IDC_SAVEPATH_STATIC	resource.h	196;"	d
IDC_SAVEREPLAYBUFFERHOTKEY	resource.h	330;"	d
IDC_SAVEREPLAYBUFFERHOTKEY_STATIC	resource.h	328;"	d
IDC_SAVETOFILE	resource.h	130;"	d
IDC_SCENEBUFFERTIME	resource.h	294;"	d
IDC_SCENEBUFFERTIME_EDIT	resource.h	293;"	d
IDC_SCENECOLLECTION	resource.h	331;"	d
IDC_SCROLLMODE	resource.h	301;"	d
IDC_SCROLLSPEED	resource.h	114;"	d
IDC_SCROLLSPEED3	resource.h	127;"	d
IDC_SCROLLSPEED_EDIT	resource.h	193;"	d
IDC_SELECT	resource.h	267;"	d
IDC_SELECTAPP	GraphicsCapture/resource.h	15;"	d
IDC_SELECTCOLOR	DShowPlugin/resource.h	23;"	d
IDC_SELECTFONT	resource.h	256;"	d
IDC_SELECTREGION	resource.h	166;"	d
IDC_SENDBUFFERSIZE	resource.h	216;"	d
IDC_SERVER	resource.h	54;"	d
IDC_SERVEREDIT	resource.h	111;"	d
IDC_SERVERLIST	resource.h	56;"	d
IDC_SERVER_STATIC	resource.h	131;"	d
IDC_SERVICE	resource.h	57;"	d
IDC_SERVICE_STATIC	resource.h	132;"	d
IDC_SETSTREAMSIZE	resource.h	291;"	d
IDC_SETTINGSLIST	resource.h	45;"	d
IDC_SET_DURATION	lame/dshow/resource.h	46;"	d
IDC_SHOWLOGWINDOWONLAUNCH	resource.h	323;"	d
IDC_SIZEX	resource.h	90;"	d
IDC_SIZEY	resource.h	91;"	d
IDC_SKIPPEDFRAMES	resource.h	306;"	d
IDC_SLIDER_AVERAGE_MAX	lame/ACM/resource.h	21;"	d
IDC_SLIDER_AVERAGE_MIN	lame/ACM/resource.h	20;"	d
IDC_SLIDER_AVERAGE_SAMPLE	lame/ACM/resource.h	23;"	d
IDC_SLIDER_AVERAGE_STEP	lame/ACM/resource.h	22;"	d
IDC_SLIDER_QUALITY	lame/dshow/resource.h	21;"	d
IDC_SOURCES	resource.h	140;"	d
IDC_SPILLREDUCTION	DShowPlugin/resource.h	38;"	d
IDC_SPILLREDUCTION_EDIT	DShowPlugin/resource.h	37;"	d
IDC_SPIN1	resource.h	181;"	d
IDC_STARTAUTO	scenesw/resource.h	23;"	d
IDC_STARTRECORDINGHOTKEY	resource.h	318;"	d
IDC_STARTRECORDINGHOTKEY_STATIC	resource.h	313;"	d
IDC_STARTREPLAYBUFFERHOTKEY	resource.h	337;"	d
IDC_STARTREPLAYBUFFERHOTKEY_STATIC	resource.h	335;"	d
IDC_STARTSTREAMHOTKEY	GraphicsCapture/resource.h	23;"	d
IDC_STARTSTREAMHOTKEY	resource.h	225;"	d
IDC_STARTSTREAMHOTKEY_STATIC	resource.h	224;"	d
IDC_STATIC	NoiseGate/resource.h	2;"	d
IDC_STATIC	lame/dshow/resource.h	47;"	d
IDC_STATIC_ABOUT_TITLE	lame/ACM/resource.h	16;"	d
IDC_STATIC_ABOUT_URL	lame/ACM/resource.h	17;"	d
IDC_STATIC_AVERAGE_MAX	lame/ACM/resource.h	25;"	d
IDC_STATIC_AVERAGE_MAX_VALUE	lame/ACM/resource.h	29;"	d
IDC_STATIC_AVERAGE_MIN	lame/ACM/resource.h	24;"	d
IDC_STATIC_AVERAGE_MIN_VALUE	lame/ACM/resource.h	28;"	d
IDC_STATIC_AVERAGE_SAMPLE	lame/ACM/resource.h	27;"	d
IDC_STATIC_AVERAGE_SAMPLE_VALUE	lame/ACM/resource.h	31;"	d
IDC_STATIC_AVERAGE_STEP	lame/ACM/resource.h	26;"	d
IDC_STATIC_AVERAGE_STEP_VALUE	lame/ACM/resource.h	30;"	d
IDC_STATIC_CONFIG_VERSION	lame/ACM/resource.h	18;"	d
IDC_STATIC_DECODING	lame/ACM/resource.h	8;"	d
IDC_STATIC_ENC_ICON	lame/ACM/resource.h	15;"	d
IDC_STOP	scenesw/resource.h	21;"	d
IDC_STOPRECORDINGHOTKEY	resource.h	321;"	d
IDC_STOPRECORDINGHOTKEY_STATIC	resource.h	317;"	d
IDC_STOPREPLAYBUFFERHOTKEY	resource.h	343;"	d
IDC_STOPREPLAYBUFFERHOTKEY_STATIC	resource.h	341;"	d
IDC_STOPSTREAMHOTKEY	resource.h	221;"	d
IDC_STOPSTREAMHOTKEY_STATIC	resource.h	223;"	d
IDC_STREAMKEY	resource.h	49;"	d
IDC_STRETCHTOSCREEN	GraphicsCapture/resource.h	9;"	d
IDC_STRETCHTOSCREEN2	GraphicsCapture/resource.h	13;"	d
IDC_SUBDIALOG	resource.h	46;"	d
IDC_SYNCTOVIDEOTIME	resource.h	250;"	d
IDC_TARGETKBPS	resource.h	348;"	d
IDC_TESTER	scenesw/resource.h	45;"	d
IDC_TEXT	resource.h	180;"	d
IDC_TEXTOPACITY	resource.h	257;"	d
IDC_TEXTOPACITY2	resource.h	259;"	d
IDC_TEXTOPACITY3	resource.h	262;"	d
IDC_TEXTOPACITY_EDIT	resource.h	188;"	d
IDC_TEXTSIZE	resource.h	185;"	d
IDC_TEXTSIZE_EDIT	resource.h	255;"	d
IDC_TEXT_QUALITY	lame/dshow/resource.h	22;"	d
IDC_TFF	DShowPlugin/resource.h	50;"	d
IDC_TIMELEFT	resource.h	271;"	d
IDC_TIMEOFFSET	DShowPlugin/resource.h	48;"	d
IDC_TIMEOFFSET_EDIT	DShowPlugin/resource.h	47;"	d
IDC_TIMER1	resource.h	236;"	d
IDC_TITLE_TEXT	lame/dshow/resource.h	18;"	d
IDC_TOGGLEHOTKEY	scenesw/resource.h	39;"	d
IDC_TOGGLEPSV	PSVPlugin/resource.h	7;"	d
IDC_TOTALFRAMES	resource.h	303;"	d
IDC_TOTALFRAMES2	resource.h	308;"	d
IDC_TRANSITIONTIME	resource.h	177;"	d
IDC_TRANSITIONTIME_EDIT	resource.h	183;"	d
IDC_TSRCOPACITY	resource.h	376;"	d
IDC_TSRCOPACITY_EDIT	resource.h	374;"	d
IDC_UNDERLINE	resource.h	265;"	d
IDC_UNLOCKHIGHFPS	resource.h	273;"	d
IDC_UNLOCKHIGHFPS2	resource.h	276;"	d
IDC_URL	resource.h	53;"	d
IDC_URL_STATIC	resource.h	119;"	d
IDC_USEAUDIORENDER	DShowPlugin/resource.h	62;"	d
IDC_USEBUFFERING	DShowPlugin/resource.h	19;"	d
IDC_USECBR	resource.h	280;"	d
IDC_USECFR	resource.h	285;"	d
IDC_USECHROMAKEY	DShowPlugin/resource.h	28;"	d
IDC_USECOLORKEY	DShowPlugin/resource.h	29;"	d
IDC_USECOLORKEY	resource.h	70;"	d
IDC_USECUSTOM	resource.h	94;"	d
IDC_USECUSTOMPARAMS	resource.h	371;"	d
IDC_USED3DCOMPATIBILITY	resource.h	228;"	d
IDC_USEFILE	resource.h	251;"	d
IDC_USEGLOBALBITRATE	resource.h	372;"	d
IDC_USEGLOBALBUFFERSIZE	resource.h	373;"	d
IDC_USEHOTKEY	GraphicsCapture/resource.h	16;"	d
IDC_USEMICQPC	resource.h	123;"	d
IDC_USEMICTIME	resource.h	122;"	d
IDC_USEMICTIMESTAMP	resource.h	121;"	d
IDC_USEMONITOR	resource.h	96;"	d
IDC_USEMULTITHREADEDOPTIMIZATIONS	resource.h	230;"	d
IDC_USEMULTITHREADEDOPTIMIZATIONS2	resource.h	239;"	d
IDC_USENVENC	resource.h	309;"	d
IDC_USEOUTLINE	resource.h	232;"	d
IDC_USEPREFERREDOUTPUT	DShowPlugin/resource.h	17;"	d
IDC_USEPREFERREDOUTPUT2	DShowPlugin/resource.h	18;"	d
IDC_USEQSV	resource.h	277;"	d
IDC_USERNAME	resource.h	48;"	d
IDC_USERNAME_STATIC	resource.h	129;"	d
IDC_USESAFEHOOK	GraphicsCapture/resource.h	20;"	d
IDC_USESENDBUFFER	resource.h	112;"	d
IDC_USESYNCFIX	resource.h	210;"	d
IDC_USETEXT	resource.h	248;"	d
IDC_USETEXTEXTENTS	resource.h	108;"	d
IDC_USEVIDEOENCODERSETTINGS	resource.h	105;"	d
IDC_USEVIDEOSYNC	resource.h	249;"	d
IDC_VERTICALSCRIPT	resource.h	264;"	d
IDC_VIDEOCODEC	resource.h	76;"	d
IDC_VIDEODELAY	DShowPlugin/resource.h	55;"	d
IDC_VIDEOENCODERSETTINGS	resource.h	176;"	d
IDC_VOLMETER	DShowPlugin/resource.h	52;"	d
IDC_VOLUME	DShowPlugin/resource.h	51;"	d
IDC_WARNING	resource.h	298;"	d
IDC_WARNINGS	resource.h	86;"	d
IDC_WINDOW	resource.h	162;"	d
IDC_WINDOWCAPTURE	resource.h	161;"	d
IDC_WRAP	resource.h	258;"	d
IDC_WSMAP	scenesw/resource.h	25;"	d
IDC_X264PRESET_LABEL	resource.h	327;"	d
IDC_X264PROFILE	resource.h	65;"	d
IDDOWN	scenesw/resource.h	27;"	d
IDD_ABOUT	lame/ACM/resource.h	7;"	d
IDD_ABOUT	lame/dshow/resource.h	10;"	d
IDD_ADVPROPS	lame/dshow/resource.h	9;"	d
IDD_AUDIOENCPROPS	lame/dshow/resource.h	8;"	d
IDD_BUILDINGMP4	resource.h	33;"	d
IDD_CONFIG	DShowPlugin/resource.h	5;"	d
IDD_CONFIG	GraphicsCapture/resource.h	5;"	d
IDD_CONFIG	lame/ACM/resource.h	6;"	d
IDD_CONFIGPSV	PSVPlugin/resource.h	5;"	d
IDD_CONFIGUREBITMAP	resource.h	22;"	d
IDD_CONFIGUREBITMAPSOURCE	resource.h	23;"	d
IDD_CONFIGUREDESKTOPSOURCE	resource.h	21;"	d
IDD_CONFIGUREMONITORCAPTURE	resource.h	39;"	d
IDD_CONFIGURENOISEGATE	NoiseGate/resource.h	5;"	d
IDD_CONFIGURETEXTSOURCE	resource.h	34;"	d
IDD_CONFIGURETRANSITIONSOURCE	resource.h	32;"	d
IDD_CONFIGUREWINDOWCAPTURE	resource.h	37;"	d
IDD_DIALOG1	resource.h	28;"	d
IDD_ENDINGDELAY	resource.h	35;"	d
IDD_ENTERNAME	resource.h	20;"	d
IDD_GLOBAL_SOURCES	resource.h	25;"	d
IDD_GLOBAL_SOURCES_IMPORT	resource.h	44;"	d
IDD_LOGUPLOADED	resource.h	41;"	d
IDD_MONITORCAPTURE	resource.h	38;"	d
IDD_PLUGINS	resource.h	26;"	d
IDD_RECONNECTING	resource.h	29;"	d
IDD_SCENEHOTKEY	resource.h	27;"	d
IDD_SETTINGS	resource.h	9;"	d
IDD_SETTINGS_ADVANCED	resource.h	30;"	d
IDD_SETTINGS_AUDIO	resource.h	19;"	d
IDD_SETTINGS_ENCODING	resource.h	16;"	d
IDD_SETTINGS_GENERAL	resource.h	18;"	d
IDD_SETTINGS_HOTKEYS	resource.h	42;"	d
IDD_SETTINGS_PUBLISH	resource.h	15;"	d
IDD_SETTINGS_QSV	resource.h	43;"	d
IDD_SETTINGS_SCENESW	scenesw/resource.h	9;"	d
IDD_SETTINGS_VIDEO	resource.h	17;"	d
IDD_STATS	resource.h	40;"	d
IDI_ICON	lame/ACM/resource.h	5;"	d
IDI_ICON1	resource.h	10;"	d
IDI_ICON2	lame/dshow/resource.h	11;"	d
IDI_ICON2	resource.h	36;"	d
IDI_SOUND_DESKTOP	resource.h	13;"	d
IDI_SOUND_DESKTOP_MUTED	resource.h	14;"	d
IDI_SOUND_MIC	resource.h	11;"	d
IDI_SOUND_MIC_MUTED	resource.h	12;"	d
IDOK2	resource.h	6;"	d
IDREM	scenesw/resource.h	33;"	d
IDR_ACCELERATOR1	resource.h	24;"	d
IDR_MAINMENU	resource.h	31;"	d
IDS_ABOUT	lame/dshow/resource.h	7;"	d
IDS_AUDIO_ADVANCED_TITLE	lame/dshow/resource.h	6;"	d
IDS_AUDIO_PROPS_TITLE	lame/dshow/resource.h	5;"	d
IDT_XINPUT_HOTKEY_TIMER	OBSApi/HotkeyControlEx.cpp	25;"	d	file:
IDUP	scenesw/resource.h	31;"	d
IDXGIAdapter2	extras/dxgi1_2.h	/^typedef interface IDXGIAdapter2 IDXGIAdapter2;$/;"	t
IDXGIAdapter2Vtbl	extras/dxgi1_2.h	/^    typedef struct IDXGIAdapter2Vtbl$/;"	s
IDXGIAdapter2Vtbl	extras/dxgi1_2.h	/^    } IDXGIAdapter2Vtbl;$/;"	t
IDXGIAdapter2_AddRef	extras/dxgi1_2.h	2114;"	d
IDXGIAdapter2_CheckInterfaceSupport	extras/dxgi1_2.h	2140;"	d
IDXGIAdapter2_EnumOutputs	extras/dxgi1_2.h	2134;"	d
IDXGIAdapter2_GetDesc	extras/dxgi1_2.h	2137;"	d
IDXGIAdapter2_GetDesc1	extras/dxgi1_2.h	2144;"	d
IDXGIAdapter2_GetDesc2	extras/dxgi1_2.h	2148;"	d
IDXGIAdapter2_GetParent	extras/dxgi1_2.h	2130;"	d
IDXGIAdapter2_GetPrivateData	extras/dxgi1_2.h	2127;"	d
IDXGIAdapter2_QueryInterface	extras/dxgi1_2.h	2111;"	d
IDXGIAdapter2_Release	extras/dxgi1_2.h	2117;"	d
IDXGIAdapter2_SetPrivateData	extras/dxgi1_2.h	2121;"	d
IDXGIAdapter2_SetPrivateDataInterface	extras/dxgi1_2.h	2124;"	d
IDXGIDevice2	extras/dxgi1_2.h	/^typedef interface IDXGIDevice2 IDXGIDevice2;$/;"	t
IDXGIDevice2Vtbl	extras/dxgi1_2.h	/^    typedef struct IDXGIDevice2Vtbl$/;"	s
IDXGIDevice2Vtbl	extras/dxgi1_2.h	/^    } IDXGIDevice2Vtbl;$/;"	t
IDXGIDevice2_AddRef	extras/dxgi1_2.h	1095;"	d
IDXGIDevice2_CreateSurface	extras/dxgi1_2.h	1118;"	d
IDXGIDevice2_EnqueueSetEvent	extras/dxgi1_2.h	1144;"	d
IDXGIDevice2_GetAdapter	extras/dxgi1_2.h	1115;"	d
IDXGIDevice2_GetGPUThreadPriority	extras/dxgi1_2.h	1127;"	d
IDXGIDevice2_GetMaximumFrameLatency	extras/dxgi1_2.h	1134;"	d
IDXGIDevice2_GetParent	extras/dxgi1_2.h	1111;"	d
IDXGIDevice2_GetPrivateData	extras/dxgi1_2.h	1108;"	d
IDXGIDevice2_OfferResources	extras/dxgi1_2.h	1138;"	d
IDXGIDevice2_QueryInterface	extras/dxgi1_2.h	1092;"	d
IDXGIDevice2_QueryResourceResidency	extras/dxgi1_2.h	1121;"	d
IDXGIDevice2_ReclaimResources	extras/dxgi1_2.h	1141;"	d
IDXGIDevice2_Release	extras/dxgi1_2.h	1098;"	d
IDXGIDevice2_SetGPUThreadPriority	extras/dxgi1_2.h	1124;"	d
IDXGIDevice2_SetMaximumFrameLatency	extras/dxgi1_2.h	1131;"	d
IDXGIDevice2_SetPrivateData	extras/dxgi1_2.h	1102;"	d
IDXGIDevice2_SetPrivateDataInterface	extras/dxgi1_2.h	1105;"	d
IDXGIDisplayControl	extras/dxgi1_2.h	/^typedef interface IDXGIDisplayControl IDXGIDisplayControl;$/;"	t
IDXGIDisplayControlVtbl	extras/dxgi1_2.h	/^    typedef struct IDXGIDisplayControlVtbl$/;"	s
IDXGIDisplayControlVtbl	extras/dxgi1_2.h	/^    } IDXGIDisplayControlVtbl;$/;"	t
IDXGIDisplayControl_AddRef	extras/dxgi1_2.h	189;"	d
IDXGIDisplayControl_IsStereoEnabled	extras/dxgi1_2.h	196;"	d
IDXGIDisplayControl_QueryInterface	extras/dxgi1_2.h	186;"	d
IDXGIDisplayControl_Release	extras/dxgi1_2.h	192;"	d
IDXGIDisplayControl_SetStereoEnabled	extras/dxgi1_2.h	199;"	d
IDXGIFactory2	extras/dxgi1_2.h	/^typedef interface IDXGIFactory2 IDXGIFactory2;$/;"	t
IDXGIFactory2Vtbl	extras/dxgi1_2.h	/^    typedef struct IDXGIFactory2Vtbl$/;"	s
IDXGIFactory2Vtbl	extras/dxgi1_2.h	/^    } IDXGIFactory2Vtbl;$/;"	t
IDXGIFactory2_AddRef	extras/dxgi1_2.h	1868;"	d
IDXGIFactory2_CreateSoftwareAdapter	extras/dxgi1_2.h	1900;"	d
IDXGIFactory2_CreateSwapChain	extras/dxgi1_2.h	1897;"	d
IDXGIFactory2_CreateSwapChainForComposition	extras/dxgi1_2.h	1941;"	d
IDXGIFactory2_CreateSwapChainForCoreWindow	extras/dxgi1_2.h	1917;"	d
IDXGIFactory2_CreateSwapChainForHwnd	extras/dxgi1_2.h	1914;"	d
IDXGIFactory2_EnumAdapters	extras/dxgi1_2.h	1888;"	d
IDXGIFactory2_EnumAdapters1	extras/dxgi1_2.h	1904;"	d
IDXGIFactory2_GetParent	extras/dxgi1_2.h	1884;"	d
IDXGIFactory2_GetPrivateData	extras/dxgi1_2.h	1881;"	d
IDXGIFactory2_GetSharedResourceAdapterLuid	extras/dxgi1_2.h	1920;"	d
IDXGIFactory2_GetWindowAssociation	extras/dxgi1_2.h	1894;"	d
IDXGIFactory2_IsCurrent	extras/dxgi1_2.h	1907;"	d
IDXGIFactory2_IsWindowedStereoEnabled	extras/dxgi1_2.h	1911;"	d
IDXGIFactory2_MakeWindowAssociation	extras/dxgi1_2.h	1891;"	d
IDXGIFactory2_QueryInterface	extras/dxgi1_2.h	1865;"	d
IDXGIFactory2_RegisterOcclusionStatusEvent	extras/dxgi1_2.h	1935;"	d
IDXGIFactory2_RegisterOcclusionStatusWindow	extras/dxgi1_2.h	1932;"	d
IDXGIFactory2_RegisterStereoStatusEvent	extras/dxgi1_2.h	1926;"	d
IDXGIFactory2_RegisterStereoStatusWindow	extras/dxgi1_2.h	1923;"	d
IDXGIFactory2_Release	extras/dxgi1_2.h	1871;"	d
IDXGIFactory2_SetPrivateData	extras/dxgi1_2.h	1875;"	d
IDXGIFactory2_SetPrivateDataInterface	extras/dxgi1_2.h	1878;"	d
IDXGIFactory2_UnregisterOcclusionStatus	extras/dxgi1_2.h	1938;"	d
IDXGIFactory2_UnregisterStereoStatus	extras/dxgi1_2.h	1929;"	d
IDXGIOutput1	extras/dxgi1_2.h	/^typedef interface IDXGIOutput1 IDXGIOutput1;$/;"	t
IDXGIOutput1Vtbl	extras/dxgi1_2.h	/^    typedef struct IDXGIOutput1Vtbl$/;"	s
IDXGIOutput1Vtbl	extras/dxgi1_2.h	/^    } IDXGIOutput1Vtbl;$/;"	t
IDXGIOutput1_AddRef	extras/dxgi1_2.h	2366;"	d
IDXGIOutput1_DuplicateOutput	extras/dxgi1_2.h	2432;"	d
IDXGIOutput1_FindClosestMatchingMode	extras/dxgi1_2.h	2392;"	d
IDXGIOutput1_FindClosestMatchingMode1	extras/dxgi1_2.h	2426;"	d
IDXGIOutput1_GetDesc	extras/dxgi1_2.h	2386;"	d
IDXGIOutput1_GetDisplayModeList	extras/dxgi1_2.h	2389;"	d
IDXGIOutput1_GetDisplayModeList1	extras/dxgi1_2.h	2423;"	d
IDXGIOutput1_GetDisplaySurfaceData	extras/dxgi1_2.h	2416;"	d
IDXGIOutput1_GetDisplaySurfaceData1	extras/dxgi1_2.h	2429;"	d
IDXGIOutput1_GetFrameStatistics	extras/dxgi1_2.h	2419;"	d
IDXGIOutput1_GetGammaControl	extras/dxgi1_2.h	2410;"	d
IDXGIOutput1_GetGammaControlCapabilities	extras/dxgi1_2.h	2404;"	d
IDXGIOutput1_GetParent	extras/dxgi1_2.h	2382;"	d
IDXGIOutput1_GetPrivateData	extras/dxgi1_2.h	2379;"	d
IDXGIOutput1_QueryInterface	extras/dxgi1_2.h	2363;"	d
IDXGIOutput1_Release	extras/dxgi1_2.h	2369;"	d
IDXGIOutput1_ReleaseOwnership	extras/dxgi1_2.h	2401;"	d
IDXGIOutput1_SetDisplaySurface	extras/dxgi1_2.h	2413;"	d
IDXGIOutput1_SetGammaControl	extras/dxgi1_2.h	2407;"	d
IDXGIOutput1_SetPrivateData	extras/dxgi1_2.h	2373;"	d
IDXGIOutput1_SetPrivateDataInterface	extras/dxgi1_2.h	2376;"	d
IDXGIOutput1_TakeOwnership	extras/dxgi1_2.h	2398;"	d
IDXGIOutput1_WaitForVBlank	extras/dxgi1_2.h	2395;"	d
IDXGIOutputDuplication	extras/dxgi1_2.h	/^typedef interface IDXGIOutputDuplication IDXGIOutputDuplication;$/;"	t
IDXGIOutputDuplicationVtbl	extras/dxgi1_2.h	/^    typedef struct IDXGIOutputDuplicationVtbl$/;"	s
IDXGIOutputDuplicationVtbl	extras/dxgi1_2.h	/^    } IDXGIOutputDuplicationVtbl;$/;"	t
IDXGIOutputDuplication_AcquireNextFrame	extras/dxgi1_2.h	475;"	d
IDXGIOutputDuplication_AddRef	extras/dxgi1_2.h	452;"	d
IDXGIOutputDuplication_GetDesc	extras/dxgi1_2.h	472;"	d
IDXGIOutputDuplication_GetFrameDirtyRects	extras/dxgi1_2.h	478;"	d
IDXGIOutputDuplication_GetFrameMoveRects	extras/dxgi1_2.h	481;"	d
IDXGIOutputDuplication_GetFramePointerShape	extras/dxgi1_2.h	484;"	d
IDXGIOutputDuplication_GetParent	extras/dxgi1_2.h	468;"	d
IDXGIOutputDuplication_GetPrivateData	extras/dxgi1_2.h	465;"	d
IDXGIOutputDuplication_MapDesktopSurface	extras/dxgi1_2.h	487;"	d
IDXGIOutputDuplication_QueryInterface	extras/dxgi1_2.h	449;"	d
IDXGIOutputDuplication_Release	extras/dxgi1_2.h	455;"	d
IDXGIOutputDuplication_ReleaseFrame	extras/dxgi1_2.h	493;"	d
IDXGIOutputDuplication_SetPrivateData	extras/dxgi1_2.h	459;"	d
IDXGIOutputDuplication_SetPrivateDataInterface	extras/dxgi1_2.h	462;"	d
IDXGIOutputDuplication_UnMapDesktopSurface	extras/dxgi1_2.h	490;"	d
IDXGIResource1	extras/dxgi1_2.h	/^typedef interface IDXGIResource1 IDXGIResource1;$/;"	t
IDXGIResource1Vtbl	extras/dxgi1_2.h	/^    typedef struct IDXGIResource1Vtbl$/;"	s
IDXGIResource1Vtbl	extras/dxgi1_2.h	/^    } IDXGIResource1Vtbl;$/;"	t
IDXGIResource1_AddRef	extras/dxgi1_2.h	857;"	d
IDXGIResource1_CreateSharedHandle	extras/dxgi1_2.h	897;"	d
IDXGIResource1_CreateSubresourceSurface	extras/dxgi1_2.h	894;"	d
IDXGIResource1_GetDevice	extras/dxgi1_2.h	877;"	d
IDXGIResource1_GetEvictionPriority	extras/dxgi1_2.h	890;"	d
IDXGIResource1_GetParent	extras/dxgi1_2.h	873;"	d
IDXGIResource1_GetPrivateData	extras/dxgi1_2.h	870;"	d
IDXGIResource1_GetSharedHandle	extras/dxgi1_2.h	881;"	d
IDXGIResource1_GetUsage	extras/dxgi1_2.h	884;"	d
IDXGIResource1_QueryInterface	extras/dxgi1_2.h	854;"	d
IDXGIResource1_Release	extras/dxgi1_2.h	860;"	d
IDXGIResource1_SetEvictionPriority	extras/dxgi1_2.h	887;"	d
IDXGIResource1_SetPrivateData	extras/dxgi1_2.h	864;"	d
IDXGIResource1_SetPrivateDataInterface	extras/dxgi1_2.h	867;"	d
IDXGISurface2	extras/dxgi1_2.h	/^typedef interface IDXGISurface2 IDXGISurface2;$/;"	t
IDXGISurface2Vtbl	extras/dxgi1_2.h	/^    typedef struct IDXGISurface2Vtbl$/;"	s
IDXGISurface2Vtbl	extras/dxgi1_2.h	/^    } IDXGISurface2Vtbl;$/;"	t
IDXGISurface2_AddRef	extras/dxgi1_2.h	661;"	d
IDXGISurface2_GetDC	extras/dxgi1_2.h	695;"	d
IDXGISurface2_GetDesc	extras/dxgi1_2.h	685;"	d
IDXGISurface2_GetDevice	extras/dxgi1_2.h	681;"	d
IDXGISurface2_GetParent	extras/dxgi1_2.h	677;"	d
IDXGISurface2_GetPrivateData	extras/dxgi1_2.h	674;"	d
IDXGISurface2_GetResource	extras/dxgi1_2.h	702;"	d
IDXGISurface2_Map	extras/dxgi1_2.h	688;"	d
IDXGISurface2_QueryInterface	extras/dxgi1_2.h	658;"	d
IDXGISurface2_Release	extras/dxgi1_2.h	664;"	d
IDXGISurface2_ReleaseDC	extras/dxgi1_2.h	698;"	d
IDXGISurface2_SetPrivateData	extras/dxgi1_2.h	668;"	d
IDXGISurface2_SetPrivateDataInterface	extras/dxgi1_2.h	671;"	d
IDXGISurface2_Unmap	extras/dxgi1_2.h	691;"	d
IDXGISwapChain1	extras/dxgi1_2.h	/^typedef interface IDXGISwapChain1 IDXGISwapChain1;$/;"	t
IDXGISwapChain1Vtbl	extras/dxgi1_2.h	/^    typedef struct IDXGISwapChain1Vtbl$/;"	s
IDXGISwapChain1Vtbl	extras/dxgi1_2.h	/^    } IDXGISwapChain1Vtbl;$/;"	t
IDXGISwapChain1_AddRef	extras/dxgi1_2.h	1475;"	d
IDXGISwapChain1_GetBackgroundColor	extras/dxgi1_2.h	1554;"	d
IDXGISwapChain1_GetBuffer	extras/dxgi1_2.h	1502;"	d
IDXGISwapChain1_GetContainingOutput	extras/dxgi1_2.h	1520;"	d
IDXGISwapChain1_GetCoreWindow	extras/dxgi1_2.h	1539;"	d
IDXGISwapChain1_GetDesc	extras/dxgi1_2.h	1511;"	d
IDXGISwapChain1_GetDesc1	extras/dxgi1_2.h	1530;"	d
IDXGISwapChain1_GetDevice	extras/dxgi1_2.h	1495;"	d
IDXGISwapChain1_GetFrameStatistics	extras/dxgi1_2.h	1523;"	d
IDXGISwapChain1_GetFullscreenDesc	extras/dxgi1_2.h	1533;"	d
IDXGISwapChain1_GetFullscreenState	extras/dxgi1_2.h	1508;"	d
IDXGISwapChain1_GetHwnd	extras/dxgi1_2.h	1536;"	d
IDXGISwapChain1_GetLastPresentCount	extras/dxgi1_2.h	1526;"	d
IDXGISwapChain1_GetParent	extras/dxgi1_2.h	1491;"	d
IDXGISwapChain1_GetPrivateData	extras/dxgi1_2.h	1488;"	d
IDXGISwapChain1_GetRestrictToOutput	extras/dxgi1_2.h	1548;"	d
IDXGISwapChain1_GetRotation	extras/dxgi1_2.h	1560;"	d
IDXGISwapChain1_IsTemporaryMonoSupported	extras/dxgi1_2.h	1545;"	d
IDXGISwapChain1_Present	extras/dxgi1_2.h	1499;"	d
IDXGISwapChain1_Present1	extras/dxgi1_2.h	1542;"	d
IDXGISwapChain1_QueryInterface	extras/dxgi1_2.h	1472;"	d
IDXGISwapChain1_Release	extras/dxgi1_2.h	1478;"	d
IDXGISwapChain1_ResizeBuffers	extras/dxgi1_2.h	1514;"	d
IDXGISwapChain1_ResizeTarget	extras/dxgi1_2.h	1517;"	d
IDXGISwapChain1_SetBackgroundColor	extras/dxgi1_2.h	1551;"	d
IDXGISwapChain1_SetFullscreenState	extras/dxgi1_2.h	1505;"	d
IDXGISwapChain1_SetPrivateData	extras/dxgi1_2.h	1482;"	d
IDXGISwapChain1_SetPrivateDataInterface	extras/dxgi1_2.h	1485;"	d
IDXGISwapChain1_SetRotation	extras/dxgi1_2.h	1557;"	d
ID_AENC	lame/libmp3lame/id3tag.c	/^        , ID_AENC = FRAME_ID('A', 'E', 'N', 'C')$/;"	e	enum:MiscIDs	file:
ID_ALBUM	lame/libmp3lame/id3tag.c	/^        , ID_ALBUM = FRAME_ID('T', 'A', 'L', 'B')$/;"	e	enum:UsualStringIDs	file:
ID_ALWAYSONTOP	resource.h	401;"	d
ID_APIC	lame/libmp3lame/id3tag.c	/^        , ID_APIC = FRAME_ID('A', 'P', 'I', 'C')$/;"	e	enum:MiscIDs	file:
ID_ARTIST	lame/libmp3lame/id3tag.c	/^        , ID_ARTIST = FRAME_ID('T', 'P', 'E', '1')$/;"	e	enum:UsualStringIDs	file:
ID_CCE	libfaac/bitstream.h	117;"	d
ID_COMMENT	lame/libmp3lame/id3tag.c	/^        , ID_COMMENT = FRAME_ID('C', 'O', 'M', 'M') \/* full text string *\/$/;"	e	enum:UsualStringIDs	file:
ID_CPE	libfaac/bitstream.h	116;"	d
ID_DASHBOARD	Source/OBS.h	/^    ID_DASHBOARD,$/;"	e
ID_DATE	lame/libmp3lame/id3tag.c	/^typedef enum NumericStringIDs { ID_DATE = FRAME_ID('T', 'D', 'A', 'T') \/* "ddMM" *\/$/;"	e	enum:NumericStringIDs	file:
ID_DESKTOPVOLUME	Source/OBS.h	/^    ID_DESKTOPVOLUME,$/;"	e
ID_DESKTOPVOLUMEMETER	Source/OBS.h	/^    ID_DESKTOPVOLUMEMETER,$/;"	e
ID_DSE	libfaac/bitstream.h	119;"	d
ID_ENCODER	lame/libmp3lame/id3tag.c	/^        , ID_ENCODER = FRAME_ID('T', 'S', 'S', 'E')$/;"	e	enum:UsualStringIDs	file:
ID_ENCR	lame/libmp3lame/id3tag.c	/^        , ID_ENCR = FRAME_ID('E', 'N', 'C', 'R')$/;"	e	enum:MiscIDs	file:
ID_END	libfaac/bitstream.h	122;"	d
ID_EXIT	Source/OBS.h	/^    ID_EXIT,$/;"	e
ID_FIL	libfaac/bitstream.h	121;"	d
ID_FILE_EXIT	resource.h	396;"	d
ID_FILE_SAVE2	resource.h	406;"	d
ID_FULLSCREENMODE	resource.h	402;"	d
ID_GENRE	lame/libmp3lame/id3tag.c	/^        , ID_GENRE = FRAME_ID('T', 'C', 'O', 'N')$/;"	e	enum:UsualStringIDs	file:
ID_GEOB	lame/libmp3lame/id3tag.c	/^        , ID_GEOB = FRAME_ID('G', 'E', 'O', 'B')$/;"	e	enum:MiscIDs	file:
ID_GLOBALSOURCES	Source/OBS.h	/^    ID_GLOBALSOURCES,$/;"	e
ID_GRID	lame/libmp3lame/id3tag.c	/^        , ID_GRID = FRAME_ID('G', 'R', 'I', 'D')$/;"	e	enum:MiscIDs	file:
ID_HELP_ABOUT	resource.h	395;"	d
ID_HELP_ANALYZE_CURRENT_LOG	resource.h	422;"	d
ID_HELP_CHECK_FOR_UPDATES	resource.h	418;"	d
ID_HELP_OPENHELP	resource.h	394;"	d
ID_HELP_UPLOAD_CURRENT_LOG	resource.h	419;"	d
ID_HELP_UPLOAD_LAST_LOG	resource.h	420;"	d
ID_HELP_VISITWEBSITE	resource.h	399;"	d
ID_HIDE	Source/OBS.h	/^    ID_HIDE,$/;"	e
ID_LFE	libfaac/bitstream.h	118;"	d
ID_LINK	lame/libmp3lame/id3tag.c	/^        , ID_LINK = FRAME_ID('L', 'I', 'N', 'K')$/;"	e	enum:MiscIDs	file:
ID_LISTBOX_ADD	Source/WindowStuff.cpp	/^    ID_LISTBOX_ADD,$/;"	e	file:
ID_LISTBOX_CENTER	Source/WindowStuff.cpp	/^    ID_LISTBOX_CENTER,$/;"	e	file:
ID_LISTBOX_CENTERHOR	Source/WindowStuff.cpp	/^    ID_LISTBOX_CENTERHOR,$/;"	e	file:
ID_LISTBOX_CENTERVER	Source/WindowStuff.cpp	/^    ID_LISTBOX_CENTERVER,$/;"	e	file:
ID_LISTBOX_CONFIG	Source/WindowStuff.cpp	/^    ID_LISTBOX_CONFIG,$/;"	e	file:
ID_LISTBOX_COPY	Source/WindowStuff.cpp	/^    ID_LISTBOX_COPY,$/;"	e	file:
ID_LISTBOX_COPYTO	Source/WindowStuff.cpp	/^    ID_LISTBOX_COPYTO=7000,$/;"	e	file:
ID_LISTBOX_FITTOSCREEN	Source/WindowStuff.cpp	/^    ID_LISTBOX_FITTOSCREEN,$/;"	e	file:
ID_LISTBOX_GLOBALSOURCE	Source/WindowStuff.cpp	/^    ID_LISTBOX_GLOBALSOURCE=5000,$/;"	e	file:
ID_LISTBOX_HOTKEY	Source/WindowStuff.cpp	/^    ID_LISTBOX_HOTKEY,$/;"	e	file:
ID_LISTBOX_MOVEBOTTOM	Source/WindowStuff.cpp	/^    ID_LISTBOX_MOVEBOTTOM,$/;"	e	file:
ID_LISTBOX_MOVEDOWN	Source/WindowStuff.cpp	/^    ID_LISTBOX_MOVEDOWN,$/;"	e	file:
ID_LISTBOX_MOVELEFT	Source/WindowStuff.cpp	/^    ID_LISTBOX_MOVELEFT,$/;"	e	file:
ID_LISTBOX_MOVERIGHT	Source/WindowStuff.cpp	/^    ID_LISTBOX_MOVERIGHT,$/;"	e	file:
ID_LISTBOX_MOVETOBOTTOM	Source/WindowStuff.cpp	/^    ID_LISTBOX_MOVETOBOTTOM,$/;"	e	file:
ID_LISTBOX_MOVETOP	Source/WindowStuff.cpp	/^    ID_LISTBOX_MOVETOP,$/;"	e	file:
ID_LISTBOX_MOVETOTOP	Source/WindowStuff.cpp	/^    ID_LISTBOX_MOVETOTOP,$/;"	e	file:
ID_LISTBOX_MOVEUP	Source/WindowStuff.cpp	/^    ID_LISTBOX_MOVEUP,$/;"	e	file:
ID_LISTBOX_REMOVE	Source/WindowStuff.cpp	/^    ID_LISTBOX_REMOVE = 1,$/;"	e	file:
ID_LISTBOX_RENAME	Source/WindowStuff.cpp	/^    ID_LISTBOX_RENAME,$/;"	e	file:
ID_LISTBOX_RESETCROP	Source/WindowStuff.cpp	/^    ID_LISTBOX_RESETCROP,$/;"	e	file:
ID_LISTBOX_RESETSIZE	Source/WindowStuff.cpp	/^    ID_LISTBOX_RESETSIZE,$/;"	e	file:
ID_LOG_WINDOW	Source/OBS.h	/^    ID_LOG_WINDOW,$/;"	e
ID_MAINMENU	resource.h	403;"	d
ID_MAINMENU_	resource.h	390;"	d
ID_MAINMENU_CLONE	resource.h	427;"	d
ID_MAINMENU_MAINMENU	resource.h	385;"	d
ID_MAINMENU_MAINMENU40032	resource.h	389;"	d
ID_MAINMENU_MAINMENU40034	resource.h	391;"	d
ID_MAINMENU_MAINMENU40042	resource.h	398;"	d
ID_MAINMENU_MAINMENU40044	resource.h	400;"	d
ID_MAINMENU_MAINMENU40048	resource.h	405;"	d
ID_MAINMENU_MAINMENU40052	resource.h	410;"	d
ID_MAINMENU_MAINMENU40053	resource.h	412;"	d
ID_MAINMENU_MAINMENU40062	resource.h	421;"	d
ID_MAINMENU_MAINMENU40077	resource.h	434;"	d
ID_MAINMENU_MAINMENU40078	resource.h	435;"	d
ID_MAINMENU_NEW	resource.h	426;"	d
ID_MAINMENU_NOTHINGHERE	resource.h	404;"	d
ID_MAINMENU_NOTHINGHERE40051	resource.h	408;"	d
ID_MAINMENU_REMOVE	resource.h	428;"	d
ID_MAINMENU_RENAME	resource.h	432;"	d
ID_MAINMENU_SETTINGS	resource.h	386;"	d
ID_MICVOLUME	Source/OBS.h	/^    ID_MICVOLUME,$/;"	e
ID_MICVOLUMEMETER	Source/OBS.h	/^    ID_MICVOLUMEMETER,$/;"	e
ID_MINIMIZERESTORE	Source/OBS.h	/^    ID_MINIMIZERESTORE,$/;"	e
ID_PCE	libfaac/bitstream.h	120;"	d
ID_PCNT	lame/libmp3lame/id3tag.c	/^        , ID_PCNT = FRAME_ID('P', 'C', 'N', 'T')$/;"	e	enum:MiscIDs	file:
ID_PCST	lame/libmp3lame/id3tag.c	/^        , ID_PCST = FRAME_ID('P', 'C', 'S', 'T') \/* iTunes Podcast indicator, only presence important *\/$/;"	e	enum:MiscIDs	file:
ID_PLAYLENGTH	lame/libmp3lame/id3tag.c	/^        , ID_PLAYLENGTH = FRAME_ID('T', 'L', 'E', 'N')$/;"	e	enum:UsualStringIDs	file:
ID_PLUGINS	Source/OBS.h	/^    ID_PLUGINS,$/;"	e
ID_PREVIEW1TO1MODE	Source/WindowStuff.cpp	/^    ID_PREVIEW1TO1MODE,$/;"	e	file:
ID_PREVIEWSCALETOFITMODE	Source/WindowStuff.cpp	/^    ID_PREVIEWSCALETOFITMODE,$/;"	e	file:
ID_PRIV	lame/libmp3lame/id3tag.c	/^        , ID_PRIV = FRAME_ID('P', 'R', 'I', 'V')$/;"	e	enum:MiscIDs	file:
ID_PROFILE_CLONE	resource.h	441;"	d
ID_PROFILE_EXPORT	resource.h	444;"	d
ID_PROFILE_IMPORT	resource.h	443;"	d
ID_PROFILE_NEW	resource.h	439;"	d
ID_PROFILE_REMOVE	resource.h	442;"	d
ID_PROFILE_RENAME	resource.h	440;"	d
ID_PROJECTOR	Source/WindowStuff.cpp	/^    ID_PROJECTOR=6000,$/;"	e	file:
ID_RECORDINGSFOLDER	resource.h	425;"	d
ID_REFRESH_LOGS	Source/OBS.h	/^    ID_REFRESH_LOGS,$/;"	e
ID_SAVEDREPLAYBUFFERS	resource.h	438;"	d
ID_SCE	libfaac/bitstream.h	115;"	d
ID_SCENECOLLECTION_CLONE	resource.h	430;"	d
ID_SCENECOLLECTION_EXPORT	resource.h	437;"	d
ID_SCENECOLLECTION_IMPORT	resource.h	436;"	d
ID_SCENECOLLECTION_NEW	resource.h	431;"	d
ID_SCENECOLLECTION_REMOVE	resource.h	429;"	d
ID_SCENECOLLECTION_RENAME	resource.h	433;"	d
ID_SCENEEDITOR	Source/OBS.h	/^    ID_SCENEEDITOR,$/;"	e
ID_SCENES	Source/OBS.h	/^    ID_SCENES,$/;"	e
ID_SCENES_TEXT	Source/OBS.h	/^    ID_SCENES_TEXT,$/;"	e
ID_SETTINGS	Source/OBS.h	/^    ID_SETTINGS=5000,$/;"	e
ID_SETTINGS_DISABLEPROJECTOR	resource.h	414;"	d
ID_SETTINGS_MAINMENU	resource.h	387;"	d
ID_SETTINGS_MAINMENU40031	resource.h	388;"	d
ID_SETTINGS_OPENCONFIGFOLDER	resource.h	392;"	d
ID_SETTINGS_OPENLOGFOLDER	resource.h	393;"	d
ID_SETTINGS_SETTINGS	resource.h	397;"	d
ID_SETTINGS_SHOWCONSOLE	resource.h	423;"	d
ID_SHOW	Source/OBS.h	/^    ID_SHOW,$/;"	e
ID_SHOWLOG	resource.h	424;"	d
ID_SOURCES	Source/OBS.h	/^    ID_SOURCES,$/;"	e
ID_SOURCES_TEXT	Source/OBS.h	/^    ID_SOURCES_TEXT,$/;"	e
ID_STARTRECORD	Source/OBS.h	/^    ID_STARTRECORD,$/;"	e
ID_STARTREPLAYBUFFER	Source/OBS.h	/^    ID_STARTREPLAYBUFFER,$/;"	e
ID_STARTSTOP	Source/OBS.h	/^    ID_STARTSTOP,$/;"	e
ID_STARTSTREAM	Source/OBS.h	/^    ID_STARTSTREAM,$/;"	e
ID_STATUS	Source/OBS.h	/^    ID_STATUS,$/;"	e
ID_STOPRECORD	Source/OBS.h	/^    ID_STOPRECORD,$/;"	e
ID_STOPREPLAYBUFFER	Source/OBS.h	/^    ID_STOPREPLAYBUFFER,$/;"	e
ID_STOPSTREAM	Source/OBS.h	/^    ID_STOPSTREAM,$/;"	e
ID_SWITCHPROFILE	Source/OBS.h	/^    ID_SWITCHPROFILE,$/;"	e
ID_SWITCHPROFILE_END	Source/OBS.h	/^    ID_SWITCHPROFILE_END = ID_SWITCHPROFILE+1000,$/;"	e
ID_SWITCHSCENECOLLECTION	Source/OBS.h	/^    ID_SWITCHSCENECOLLECTION,$/;"	e
ID_SWITCHSCENECOLLECTION_END	Source/OBS.h	/^    ID_SWITCHSCENECOLLECTION_END = ID_SWITCHSCENECOLLECTION+1000,$/;"	e
ID_SYLT	lame/libmp3lame/id3tag.c	/^        , ID_SYLT = FRAME_ID('S', 'Y', 'L', 'T')$/;"	e	enum:MiscIDs	file:
ID_TESTSTREAM	Source/OBS.h	/^    ID_TESTSTREAM,$/;"	e
ID_TIME	lame/libmp3lame/id3tag.c	/^        , ID_TIME = FRAME_ID('T', 'I', 'M', 'E') \/* "hhmm" *\/$/;"	e	enum:NumericStringIDs	file:
ID_TITLE	lame/libmp3lame/id3tag.c	/^typedef enum UsualStringIDs { ID_TITLE = FRAME_ID('T', 'I', 'T', '2')$/;"	e	enum:UsualStringIDs	file:
ID_TOGGLEFULLSCREEN	Source/WindowStuff.cpp	/^    ID_TOGGLEFULLSCREEN,$/;"	e	file:
ID_TOGGLEPANEL	Source/WindowStuff.cpp	/^    ID_TOGGLEPANEL,$/;"	e	file:
ID_TOGGLERECORDING	Source/OBS.h	/^    ID_TOGGLERECORDING,$/;"	e
ID_TOGGLERECORDINGREPLAYBUFFER	Source/OBS.h	/^    ID_TOGGLERECORDINGREPLAYBUFFER,$/;"	e
ID_TOGGLERENDERVIEW	Source/WindowStuff.cpp	/^    ID_TOGGLERENDERVIEW,$/;"	e	file:
ID_TPOS	lame/libmp3lame/id3tag.c	/^        , ID_TPOS = FRAME_ID('T', 'P', 'O', 'S') \/* '0'-'9' and '\/' allowed *\/$/;"	e	enum:NumericStringIDs	file:
ID_TRACK	lame/libmp3lame/id3tag.c	/^        , ID_TRACK = FRAME_ID('T', 'R', 'C', 'K') \/* '0'-'9' and '\/' allowed *\/$/;"	e	enum:NumericStringIDs	file:
ID_TXXX	lame/libmp3lame/id3tag.c	/^typedef enum MiscIDs { ID_TXXX = FRAME_ID('T', 'X', 'X', 'X')$/;"	e	enum:MiscIDs	file:
ID_UPLOAD_ANALYZE_LOG	Source/OBS.h	/^    ID_UPLOAD_ANALYZE_LOG,$/;"	e
ID_UPLOAD_ANALYZE_LOG_END	Source/OBS.h	/^    ID_UPLOAD_ANALYZE_LOG_END = ID_UPLOAD_ANALYZE_LOG+1000,$/;"	e
ID_UPLOAD_LOG	Source/OBS.h	/^    ID_UPLOAD_LOG,$/;"	e
ID_UPLOAD_LOG_END	Source/OBS.h	/^    ID_UPLOAD_LOG_END = ID_UPLOAD_LOG+1000,$/;"	e
ID_USER	lame/libmp3lame/id3tag.c	/^        , ID_USER = FRAME_ID('U', 'S', 'E', 'R') \/* full text string *\/$/;"	e	enum:MiscIDs	file:
ID_VIEW_LOG	Source/OBS.h	/^    ID_VIEW_LOG,$/;"	e
ID_VIEW_LOG_END	Source/OBS.h	/^    ID_VIEW_LOG_END = ID_VIEW_LOG+1000,$/;"	e
ID_VSLT	lame/libmp3lame/id3tag.c	/^        , ID_VSLT = FRAME_ID('V', 'S', 'L', 'T') \/* full text string *\/$/;"	e	enum:MiscIDs	file:
ID_WFED	lame/libmp3lame/id3tag.c	/^        , ID_WFED = FRAME_ID('W', 'F', 'E', 'D') \/* iTunes Podcast URL as TEXT FRAME !!! violates standard *\/$/;"	e	enum:MiscIDs	file:
ID_WXXX	lame/libmp3lame/id3tag.c	/^        , ID_WXXX = FRAME_ID('W', 'X', 'X', 'X')$/;"	e	enum:MiscIDs	file:
ID_YEAR	lame/libmp3lame/id3tag.c	/^        , ID_YEAR = FRAME_ID('T', 'Y', 'E', 'R') \/* "yyyy" *\/$/;"	e	enum:NumericStringIDs	file:
IDirect3D8	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^interface IDirect3D8;$/;"	v
IDirect3D8	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^typedef interface IDirect3D8                IDirect3D8;$/;"	t
IDirect3D8_AddRef	GraphicsCapture/GraphicsCaptureHook/d3d8.h	192;"	d
IDirect3D8_AddRef	GraphicsCapture/GraphicsCaptureHook/d3d8.h	209;"	d
IDirect3D8_CheckDepthStencilMatch	GraphicsCapture/GraphicsCaptureHook/d3d8.h	203;"	d
IDirect3D8_CheckDepthStencilMatch	GraphicsCapture/GraphicsCaptureHook/d3d8.h	220;"	d
IDirect3D8_CheckDeviceFormat	GraphicsCapture/GraphicsCaptureHook/d3d8.h	201;"	d
IDirect3D8_CheckDeviceFormat	GraphicsCapture/GraphicsCaptureHook/d3d8.h	218;"	d
IDirect3D8_CheckDeviceMultiSampleType	GraphicsCapture/GraphicsCaptureHook/d3d8.h	202;"	d
IDirect3D8_CheckDeviceMultiSampleType	GraphicsCapture/GraphicsCaptureHook/d3d8.h	219;"	d
IDirect3D8_CheckDeviceType	GraphicsCapture/GraphicsCaptureHook/d3d8.h	200;"	d
IDirect3D8_CheckDeviceType	GraphicsCapture/GraphicsCaptureHook/d3d8.h	217;"	d
IDirect3D8_CreateDevice	GraphicsCapture/GraphicsCaptureHook/d3d8.h	206;"	d
IDirect3D8_CreateDevice	GraphicsCapture/GraphicsCaptureHook/d3d8.h	223;"	d
IDirect3D8_EnumAdapterModes	GraphicsCapture/GraphicsCaptureHook/d3d8.h	198;"	d
IDirect3D8_EnumAdapterModes	GraphicsCapture/GraphicsCaptureHook/d3d8.h	215;"	d
IDirect3D8_GetAdapterCount	GraphicsCapture/GraphicsCaptureHook/d3d8.h	195;"	d
IDirect3D8_GetAdapterCount	GraphicsCapture/GraphicsCaptureHook/d3d8.h	212;"	d
IDirect3D8_GetAdapterDisplayMode	GraphicsCapture/GraphicsCaptureHook/d3d8.h	199;"	d
IDirect3D8_GetAdapterDisplayMode	GraphicsCapture/GraphicsCaptureHook/d3d8.h	216;"	d
IDirect3D8_GetAdapterIdentifier	GraphicsCapture/GraphicsCaptureHook/d3d8.h	196;"	d
IDirect3D8_GetAdapterIdentifier	GraphicsCapture/GraphicsCaptureHook/d3d8.h	213;"	d
IDirect3D8_GetAdapterModeCount	GraphicsCapture/GraphicsCaptureHook/d3d8.h	197;"	d
IDirect3D8_GetAdapterModeCount	GraphicsCapture/GraphicsCaptureHook/d3d8.h	214;"	d
IDirect3D8_GetAdapterMonitor	GraphicsCapture/GraphicsCaptureHook/d3d8.h	205;"	d
IDirect3D8_GetAdapterMonitor	GraphicsCapture/GraphicsCaptureHook/d3d8.h	222;"	d
IDirect3D8_GetDeviceCaps	GraphicsCapture/GraphicsCaptureHook/d3d8.h	204;"	d
IDirect3D8_GetDeviceCaps	GraphicsCapture/GraphicsCaptureHook/d3d8.h	221;"	d
IDirect3D8_QueryInterface	GraphicsCapture/GraphicsCaptureHook/d3d8.h	191;"	d
IDirect3D8_QueryInterface	GraphicsCapture/GraphicsCaptureHook/d3d8.h	208;"	d
IDirect3D8_RegisterSoftwareDevice	GraphicsCapture/GraphicsCaptureHook/d3d8.h	194;"	d
IDirect3D8_RegisterSoftwareDevice	GraphicsCapture/GraphicsCaptureHook/d3d8.h	211;"	d
IDirect3D8_Release	GraphicsCapture/GraphicsCaptureHook/d3d8.h	193;"	d
IDirect3D8_Release	GraphicsCapture/GraphicsCaptureHook/d3d8.h	210;"	d
IDirect3DBaseTexture8	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^interface IDirect3DBaseTexture8;$/;"	v
IDirect3DBaseTexture8	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^typedef interface IDirect3DBaseTexture8     IDirect3DBaseTexture8;$/;"	t
IDirect3DBaseTexture8_AddRef	GraphicsCapture/GraphicsCaptureHook/d3d8.h	666;"	d
IDirect3DBaseTexture8_AddRef	GraphicsCapture/GraphicsCaptureHook/d3d8.h	681;"	d
IDirect3DBaseTexture8_FreePrivateData	GraphicsCapture/GraphicsCaptureHook/d3d8.h	671;"	d
IDirect3DBaseTexture8_FreePrivateData	GraphicsCapture/GraphicsCaptureHook/d3d8.h	686;"	d
IDirect3DBaseTexture8_GetDevice	GraphicsCapture/GraphicsCaptureHook/d3d8.h	668;"	d
IDirect3DBaseTexture8_GetDevice	GraphicsCapture/GraphicsCaptureHook/d3d8.h	683;"	d
IDirect3DBaseTexture8_GetLOD	GraphicsCapture/GraphicsCaptureHook/d3d8.h	677;"	d
IDirect3DBaseTexture8_GetLOD	GraphicsCapture/GraphicsCaptureHook/d3d8.h	692;"	d
IDirect3DBaseTexture8_GetLevelCount	GraphicsCapture/GraphicsCaptureHook/d3d8.h	678;"	d
IDirect3DBaseTexture8_GetLevelCount	GraphicsCapture/GraphicsCaptureHook/d3d8.h	693;"	d
IDirect3DBaseTexture8_GetPriority	GraphicsCapture/GraphicsCaptureHook/d3d8.h	673;"	d
IDirect3DBaseTexture8_GetPriority	GraphicsCapture/GraphicsCaptureHook/d3d8.h	688;"	d
IDirect3DBaseTexture8_GetPrivateData	GraphicsCapture/GraphicsCaptureHook/d3d8.h	670;"	d
IDirect3DBaseTexture8_GetPrivateData	GraphicsCapture/GraphicsCaptureHook/d3d8.h	685;"	d
IDirect3DBaseTexture8_GetType	GraphicsCapture/GraphicsCaptureHook/d3d8.h	675;"	d
IDirect3DBaseTexture8_GetType	GraphicsCapture/GraphicsCaptureHook/d3d8.h	690;"	d
IDirect3DBaseTexture8_PreLoad	GraphicsCapture/GraphicsCaptureHook/d3d8.h	674;"	d
IDirect3DBaseTexture8_PreLoad	GraphicsCapture/GraphicsCaptureHook/d3d8.h	689;"	d
IDirect3DBaseTexture8_QueryInterface	GraphicsCapture/GraphicsCaptureHook/d3d8.h	665;"	d
IDirect3DBaseTexture8_QueryInterface	GraphicsCapture/GraphicsCaptureHook/d3d8.h	680;"	d
IDirect3DBaseTexture8_Release	GraphicsCapture/GraphicsCaptureHook/d3d8.h	667;"	d
IDirect3DBaseTexture8_Release	GraphicsCapture/GraphicsCaptureHook/d3d8.h	682;"	d
IDirect3DBaseTexture8_SetLOD	GraphicsCapture/GraphicsCaptureHook/d3d8.h	676;"	d
IDirect3DBaseTexture8_SetLOD	GraphicsCapture/GraphicsCaptureHook/d3d8.h	691;"	d
IDirect3DBaseTexture8_SetPriority	GraphicsCapture/GraphicsCaptureHook/d3d8.h	672;"	d
IDirect3DBaseTexture8_SetPriority	GraphicsCapture/GraphicsCaptureHook/d3d8.h	687;"	d
IDirect3DBaseTexture8_SetPrivateData	GraphicsCapture/GraphicsCaptureHook/d3d8.h	669;"	d
IDirect3DBaseTexture8_SetPrivateData	GraphicsCapture/GraphicsCaptureHook/d3d8.h	684;"	d
IDirect3DCubeTexture8	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^interface IDirect3DCubeTexture8;$/;"	v
IDirect3DCubeTexture8	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^typedef interface IDirect3DCubeTexture8     IDirect3DCubeTexture8;$/;"	t
IDirect3DCubeTexture8_AddDirtyRect	GraphicsCapture/GraphicsCaptureHook/d3d8.h	904;"	d
IDirect3DCubeTexture8_AddDirtyRect	GraphicsCapture/GraphicsCaptureHook/d3d8.h	924;"	d
IDirect3DCubeTexture8_AddRef	GraphicsCapture/GraphicsCaptureHook/d3d8.h	887;"	d
IDirect3DCubeTexture8_AddRef	GraphicsCapture/GraphicsCaptureHook/d3d8.h	907;"	d
IDirect3DCubeTexture8_FreePrivateData	GraphicsCapture/GraphicsCaptureHook/d3d8.h	892;"	d
IDirect3DCubeTexture8_FreePrivateData	GraphicsCapture/GraphicsCaptureHook/d3d8.h	912;"	d
IDirect3DCubeTexture8_GetCubeMapSurface	GraphicsCapture/GraphicsCaptureHook/d3d8.h	901;"	d
IDirect3DCubeTexture8_GetCubeMapSurface	GraphicsCapture/GraphicsCaptureHook/d3d8.h	921;"	d
IDirect3DCubeTexture8_GetDevice	GraphicsCapture/GraphicsCaptureHook/d3d8.h	889;"	d
IDirect3DCubeTexture8_GetDevice	GraphicsCapture/GraphicsCaptureHook/d3d8.h	909;"	d
IDirect3DCubeTexture8_GetLOD	GraphicsCapture/GraphicsCaptureHook/d3d8.h	898;"	d
IDirect3DCubeTexture8_GetLOD	GraphicsCapture/GraphicsCaptureHook/d3d8.h	918;"	d
IDirect3DCubeTexture8_GetLevelCount	GraphicsCapture/GraphicsCaptureHook/d3d8.h	899;"	d
IDirect3DCubeTexture8_GetLevelCount	GraphicsCapture/GraphicsCaptureHook/d3d8.h	919;"	d
IDirect3DCubeTexture8_GetLevelDesc	GraphicsCapture/GraphicsCaptureHook/d3d8.h	900;"	d
IDirect3DCubeTexture8_GetLevelDesc	GraphicsCapture/GraphicsCaptureHook/d3d8.h	920;"	d
IDirect3DCubeTexture8_GetPriority	GraphicsCapture/GraphicsCaptureHook/d3d8.h	894;"	d
IDirect3DCubeTexture8_GetPriority	GraphicsCapture/GraphicsCaptureHook/d3d8.h	914;"	d
IDirect3DCubeTexture8_GetPrivateData	GraphicsCapture/GraphicsCaptureHook/d3d8.h	891;"	d
IDirect3DCubeTexture8_GetPrivateData	GraphicsCapture/GraphicsCaptureHook/d3d8.h	911;"	d
IDirect3DCubeTexture8_GetType	GraphicsCapture/GraphicsCaptureHook/d3d8.h	896;"	d
IDirect3DCubeTexture8_GetType	GraphicsCapture/GraphicsCaptureHook/d3d8.h	916;"	d
IDirect3DCubeTexture8_LockRect	GraphicsCapture/GraphicsCaptureHook/d3d8.h	902;"	d
IDirect3DCubeTexture8_LockRect	GraphicsCapture/GraphicsCaptureHook/d3d8.h	922;"	d
IDirect3DCubeTexture8_PreLoad	GraphicsCapture/GraphicsCaptureHook/d3d8.h	895;"	d
IDirect3DCubeTexture8_PreLoad	GraphicsCapture/GraphicsCaptureHook/d3d8.h	915;"	d
IDirect3DCubeTexture8_QueryInterface	GraphicsCapture/GraphicsCaptureHook/d3d8.h	886;"	d
IDirect3DCubeTexture8_QueryInterface	GraphicsCapture/GraphicsCaptureHook/d3d8.h	906;"	d
IDirect3DCubeTexture8_Release	GraphicsCapture/GraphicsCaptureHook/d3d8.h	888;"	d
IDirect3DCubeTexture8_Release	GraphicsCapture/GraphicsCaptureHook/d3d8.h	908;"	d
IDirect3DCubeTexture8_SetLOD	GraphicsCapture/GraphicsCaptureHook/d3d8.h	897;"	d
IDirect3DCubeTexture8_SetLOD	GraphicsCapture/GraphicsCaptureHook/d3d8.h	917;"	d
IDirect3DCubeTexture8_SetPriority	GraphicsCapture/GraphicsCaptureHook/d3d8.h	893;"	d
IDirect3DCubeTexture8_SetPriority	GraphicsCapture/GraphicsCaptureHook/d3d8.h	913;"	d
IDirect3DCubeTexture8_SetPrivateData	GraphicsCapture/GraphicsCaptureHook/d3d8.h	890;"	d
IDirect3DCubeTexture8_SetPrivateData	GraphicsCapture/GraphicsCaptureHook/d3d8.h	910;"	d
IDirect3DCubeTexture8_UnlockRect	GraphicsCapture/GraphicsCaptureHook/d3d8.h	903;"	d
IDirect3DCubeTexture8_UnlockRect	GraphicsCapture/GraphicsCaptureHook/d3d8.h	923;"	d
IDirect3DDevice8	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^interface IDirect3DDevice8;$/;"	v
IDirect3DDevice8	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^typedef interface IDirect3DDevice8          IDirect3DDevice8;$/;"	t
IDirect3DDevice8_AddRef	GraphicsCapture/GraphicsCaptureHook/d3d8.h	355;"	d
IDirect3DDevice8_AddRef	GraphicsCapture/GraphicsCaptureHook/d3d8.h	453;"	d
IDirect3DDevice8_ApplyStateBlock	GraphicsCapture/GraphicsCaptureHook/d3d8.h	408;"	d
IDirect3DDevice8_ApplyStateBlock	GraphicsCapture/GraphicsCaptureHook/d3d8.h	506;"	d
IDirect3DDevice8_BeginScene	GraphicsCapture/GraphicsCaptureHook/d3d8.h	388;"	d
IDirect3DDevice8_BeginScene	GraphicsCapture/GraphicsCaptureHook/d3d8.h	486;"	d
IDirect3DDevice8_BeginStateBlock	GraphicsCapture/GraphicsCaptureHook/d3d8.h	406;"	d
IDirect3DDevice8_BeginStateBlock	GraphicsCapture/GraphicsCaptureHook/d3d8.h	504;"	d
IDirect3DDevice8_CaptureStateBlock	GraphicsCapture/GraphicsCaptureHook/d3d8.h	409;"	d
IDirect3DDevice8_CaptureStateBlock	GraphicsCapture/GraphicsCaptureHook/d3d8.h	507;"	d
IDirect3DDevice8_Clear	GraphicsCapture/GraphicsCaptureHook/d3d8.h	390;"	d
IDirect3DDevice8_Clear	GraphicsCapture/GraphicsCaptureHook/d3d8.h	488;"	d
IDirect3DDevice8_CopyRects	GraphicsCapture/GraphicsCaptureHook/d3d8.h	382;"	d
IDirect3DDevice8_CopyRects	GraphicsCapture/GraphicsCaptureHook/d3d8.h	480;"	d
IDirect3DDevice8_CreateAdditionalSwapChain	GraphicsCapture/GraphicsCaptureHook/d3d8.h	367;"	d
IDirect3DDevice8_CreateAdditionalSwapChain	GraphicsCapture/GraphicsCaptureHook/d3d8.h	465;"	d
IDirect3DDevice8_CreateCubeTexture	GraphicsCapture/GraphicsCaptureHook/d3d8.h	376;"	d
IDirect3DDevice8_CreateCubeTexture	GraphicsCapture/GraphicsCaptureHook/d3d8.h	474;"	d
IDirect3DDevice8_CreateDepthStencilSurface	GraphicsCapture/GraphicsCaptureHook/d3d8.h	380;"	d
IDirect3DDevice8_CreateDepthStencilSurface	GraphicsCapture/GraphicsCaptureHook/d3d8.h	478;"	d
IDirect3DDevice8_CreateImageSurface	GraphicsCapture/GraphicsCaptureHook/d3d8.h	381;"	d
IDirect3DDevice8_CreateImageSurface	GraphicsCapture/GraphicsCaptureHook/d3d8.h	479;"	d
IDirect3DDevice8_CreateIndexBuffer	GraphicsCapture/GraphicsCaptureHook/d3d8.h	378;"	d
IDirect3DDevice8_CreateIndexBuffer	GraphicsCapture/GraphicsCaptureHook/d3d8.h	476;"	d
IDirect3DDevice8_CreatePixelShader	GraphicsCapture/GraphicsCaptureHook/d3d8.h	441;"	d
IDirect3DDevice8_CreatePixelShader	GraphicsCapture/GraphicsCaptureHook/d3d8.h	539;"	d
IDirect3DDevice8_CreateRenderTarget	GraphicsCapture/GraphicsCaptureHook/d3d8.h	379;"	d
IDirect3DDevice8_CreateRenderTarget	GraphicsCapture/GraphicsCaptureHook/d3d8.h	477;"	d
IDirect3DDevice8_CreateStateBlock	GraphicsCapture/GraphicsCaptureHook/d3d8.h	411;"	d
IDirect3DDevice8_CreateStateBlock	GraphicsCapture/GraphicsCaptureHook/d3d8.h	509;"	d
IDirect3DDevice8_CreateTexture	GraphicsCapture/GraphicsCaptureHook/d3d8.h	374;"	d
IDirect3DDevice8_CreateTexture	GraphicsCapture/GraphicsCaptureHook/d3d8.h	472;"	d
IDirect3DDevice8_CreateVertexBuffer	GraphicsCapture/GraphicsCaptureHook/d3d8.h	377;"	d
IDirect3DDevice8_CreateVertexBuffer	GraphicsCapture/GraphicsCaptureHook/d3d8.h	475;"	d
IDirect3DDevice8_CreateVertexShader	GraphicsCapture/GraphicsCaptureHook/d3d8.h	429;"	d
IDirect3DDevice8_CreateVertexShader	GraphicsCapture/GraphicsCaptureHook/d3d8.h	527;"	d
IDirect3DDevice8_CreateVolumeTexture	GraphicsCapture/GraphicsCaptureHook/d3d8.h	375;"	d
IDirect3DDevice8_CreateVolumeTexture	GraphicsCapture/GraphicsCaptureHook/d3d8.h	473;"	d
IDirect3DDevice8_DeletePatch	GraphicsCapture/GraphicsCaptureHook/d3d8.h	450;"	d
IDirect3DDevice8_DeletePatch	GraphicsCapture/GraphicsCaptureHook/d3d8.h	548;"	d
IDirect3DDevice8_DeletePixelShader	GraphicsCapture/GraphicsCaptureHook/d3d8.h	444;"	d
IDirect3DDevice8_DeletePixelShader	GraphicsCapture/GraphicsCaptureHook/d3d8.h	542;"	d
IDirect3DDevice8_DeleteStateBlock	GraphicsCapture/GraphicsCaptureHook/d3d8.h	410;"	d
IDirect3DDevice8_DeleteStateBlock	GraphicsCapture/GraphicsCaptureHook/d3d8.h	508;"	d
IDirect3DDevice8_DeleteVertexShader	GraphicsCapture/GraphicsCaptureHook/d3d8.h	432;"	d
IDirect3DDevice8_DeleteVertexShader	GraphicsCapture/GraphicsCaptureHook/d3d8.h	530;"	d
IDirect3DDevice8_DrawIndexedPrimitive	GraphicsCapture/GraphicsCaptureHook/d3d8.h	425;"	d
IDirect3DDevice8_DrawIndexedPrimitive	GraphicsCapture/GraphicsCaptureHook/d3d8.h	523;"	d
IDirect3DDevice8_DrawIndexedPrimitiveUP	GraphicsCapture/GraphicsCaptureHook/d3d8.h	427;"	d
IDirect3DDevice8_DrawIndexedPrimitiveUP	GraphicsCapture/GraphicsCaptureHook/d3d8.h	525;"	d
IDirect3DDevice8_DrawPrimitive	GraphicsCapture/GraphicsCaptureHook/d3d8.h	424;"	d
IDirect3DDevice8_DrawPrimitive	GraphicsCapture/GraphicsCaptureHook/d3d8.h	522;"	d
IDirect3DDevice8_DrawPrimitiveUP	GraphicsCapture/GraphicsCaptureHook/d3d8.h	426;"	d
IDirect3DDevice8_DrawPrimitiveUP	GraphicsCapture/GraphicsCaptureHook/d3d8.h	524;"	d
IDirect3DDevice8_DrawRectPatch	GraphicsCapture/GraphicsCaptureHook/d3d8.h	448;"	d
IDirect3DDevice8_DrawRectPatch	GraphicsCapture/GraphicsCaptureHook/d3d8.h	546;"	d
IDirect3DDevice8_DrawTriPatch	GraphicsCapture/GraphicsCaptureHook/d3d8.h	449;"	d
IDirect3DDevice8_DrawTriPatch	GraphicsCapture/GraphicsCaptureHook/d3d8.h	547;"	d
IDirect3DDevice8_EndScene	GraphicsCapture/GraphicsCaptureHook/d3d8.h	389;"	d
IDirect3DDevice8_EndScene	GraphicsCapture/GraphicsCaptureHook/d3d8.h	487;"	d
IDirect3DDevice8_EndStateBlock	GraphicsCapture/GraphicsCaptureHook/d3d8.h	407;"	d
IDirect3DDevice8_EndStateBlock	GraphicsCapture/GraphicsCaptureHook/d3d8.h	505;"	d
IDirect3DDevice8_GetAvailableTextureMem	GraphicsCapture/GraphicsCaptureHook/d3d8.h	358;"	d
IDirect3DDevice8_GetAvailableTextureMem	GraphicsCapture/GraphicsCaptureHook/d3d8.h	456;"	d
IDirect3DDevice8_GetBackBuffer	GraphicsCapture/GraphicsCaptureHook/d3d8.h	370;"	d
IDirect3DDevice8_GetBackBuffer	GraphicsCapture/GraphicsCaptureHook/d3d8.h	468;"	d
IDirect3DDevice8_GetClipPlane	GraphicsCapture/GraphicsCaptureHook/d3d8.h	403;"	d
IDirect3DDevice8_GetClipPlane	GraphicsCapture/GraphicsCaptureHook/d3d8.h	501;"	d
IDirect3DDevice8_GetClipStatus	GraphicsCapture/GraphicsCaptureHook/d3d8.h	413;"	d
IDirect3DDevice8_GetClipStatus	GraphicsCapture/GraphicsCaptureHook/d3d8.h	511;"	d
IDirect3DDevice8_GetCreationParameters	GraphicsCapture/GraphicsCaptureHook/d3d8.h	363;"	d
IDirect3DDevice8_GetCreationParameters	GraphicsCapture/GraphicsCaptureHook/d3d8.h	461;"	d
IDirect3DDevice8_GetCurrentTexturePalette	GraphicsCapture/GraphicsCaptureHook/d3d8.h	423;"	d
IDirect3DDevice8_GetCurrentTexturePalette	GraphicsCapture/GraphicsCaptureHook/d3d8.h	521;"	d
IDirect3DDevice8_GetDepthStencilSurface	GraphicsCapture/GraphicsCaptureHook/d3d8.h	387;"	d
IDirect3DDevice8_GetDepthStencilSurface	GraphicsCapture/GraphicsCaptureHook/d3d8.h	485;"	d
IDirect3DDevice8_GetDeviceCaps	GraphicsCapture/GraphicsCaptureHook/d3d8.h	361;"	d
IDirect3DDevice8_GetDeviceCaps	GraphicsCapture/GraphicsCaptureHook/d3d8.h	459;"	d
IDirect3DDevice8_GetDirect3D	GraphicsCapture/GraphicsCaptureHook/d3d8.h	360;"	d
IDirect3DDevice8_GetDirect3D	GraphicsCapture/GraphicsCaptureHook/d3d8.h	458;"	d
IDirect3DDevice8_GetDisplayMode	GraphicsCapture/GraphicsCaptureHook/d3d8.h	362;"	d
IDirect3DDevice8_GetDisplayMode	GraphicsCapture/GraphicsCaptureHook/d3d8.h	460;"	d
IDirect3DDevice8_GetFrontBuffer	GraphicsCapture/GraphicsCaptureHook/d3d8.h	384;"	d
IDirect3DDevice8_GetFrontBuffer	GraphicsCapture/GraphicsCaptureHook/d3d8.h	482;"	d
IDirect3DDevice8_GetGammaRamp	GraphicsCapture/GraphicsCaptureHook/d3d8.h	373;"	d
IDirect3DDevice8_GetGammaRamp	GraphicsCapture/GraphicsCaptureHook/d3d8.h	471;"	d
IDirect3DDevice8_GetIndices	GraphicsCapture/GraphicsCaptureHook/d3d8.h	440;"	d
IDirect3DDevice8_GetIndices	GraphicsCapture/GraphicsCaptureHook/d3d8.h	538;"	d
IDirect3DDevice8_GetInfo	GraphicsCapture/GraphicsCaptureHook/d3d8.h	419;"	d
IDirect3DDevice8_GetInfo	GraphicsCapture/GraphicsCaptureHook/d3d8.h	517;"	d
IDirect3DDevice8_GetLight	GraphicsCapture/GraphicsCaptureHook/d3d8.h	399;"	d
IDirect3DDevice8_GetLight	GraphicsCapture/GraphicsCaptureHook/d3d8.h	497;"	d
IDirect3DDevice8_GetLightEnable	GraphicsCapture/GraphicsCaptureHook/d3d8.h	401;"	d
IDirect3DDevice8_GetLightEnable	GraphicsCapture/GraphicsCaptureHook/d3d8.h	499;"	d
IDirect3DDevice8_GetMaterial	GraphicsCapture/GraphicsCaptureHook/d3d8.h	397;"	d
IDirect3DDevice8_GetMaterial	GraphicsCapture/GraphicsCaptureHook/d3d8.h	495;"	d
IDirect3DDevice8_GetPaletteEntries	GraphicsCapture/GraphicsCaptureHook/d3d8.h	421;"	d
IDirect3DDevice8_GetPaletteEntries	GraphicsCapture/GraphicsCaptureHook/d3d8.h	519;"	d
IDirect3DDevice8_GetPixelShader	GraphicsCapture/GraphicsCaptureHook/d3d8.h	443;"	d
IDirect3DDevice8_GetPixelShader	GraphicsCapture/GraphicsCaptureHook/d3d8.h	541;"	d
IDirect3DDevice8_GetPixelShaderConstant	GraphicsCapture/GraphicsCaptureHook/d3d8.h	446;"	d
IDirect3DDevice8_GetPixelShaderConstant	GraphicsCapture/GraphicsCaptureHook/d3d8.h	544;"	d
IDirect3DDevice8_GetPixelShaderFunction	GraphicsCapture/GraphicsCaptureHook/d3d8.h	447;"	d
IDirect3DDevice8_GetPixelShaderFunction	GraphicsCapture/GraphicsCaptureHook/d3d8.h	545;"	d
IDirect3DDevice8_GetRasterStatus	GraphicsCapture/GraphicsCaptureHook/d3d8.h	371;"	d
IDirect3DDevice8_GetRasterStatus	GraphicsCapture/GraphicsCaptureHook/d3d8.h	469;"	d
IDirect3DDevice8_GetRenderState	GraphicsCapture/GraphicsCaptureHook/d3d8.h	405;"	d
IDirect3DDevice8_GetRenderState	GraphicsCapture/GraphicsCaptureHook/d3d8.h	503;"	d
IDirect3DDevice8_GetRenderTarget	GraphicsCapture/GraphicsCaptureHook/d3d8.h	386;"	d
IDirect3DDevice8_GetRenderTarget	GraphicsCapture/GraphicsCaptureHook/d3d8.h	484;"	d
IDirect3DDevice8_GetStreamSource	GraphicsCapture/GraphicsCaptureHook/d3d8.h	438;"	d
IDirect3DDevice8_GetStreamSource	GraphicsCapture/GraphicsCaptureHook/d3d8.h	536;"	d
IDirect3DDevice8_GetTexture	GraphicsCapture/GraphicsCaptureHook/d3d8.h	414;"	d
IDirect3DDevice8_GetTexture	GraphicsCapture/GraphicsCaptureHook/d3d8.h	512;"	d
IDirect3DDevice8_GetTextureStageState	GraphicsCapture/GraphicsCaptureHook/d3d8.h	416;"	d
IDirect3DDevice8_GetTextureStageState	GraphicsCapture/GraphicsCaptureHook/d3d8.h	514;"	d
IDirect3DDevice8_GetTransform	GraphicsCapture/GraphicsCaptureHook/d3d8.h	392;"	d
IDirect3DDevice8_GetTransform	GraphicsCapture/GraphicsCaptureHook/d3d8.h	490;"	d
IDirect3DDevice8_GetVertexShader	GraphicsCapture/GraphicsCaptureHook/d3d8.h	431;"	d
IDirect3DDevice8_GetVertexShader	GraphicsCapture/GraphicsCaptureHook/d3d8.h	529;"	d
IDirect3DDevice8_GetVertexShaderConstant	GraphicsCapture/GraphicsCaptureHook/d3d8.h	434;"	d
IDirect3DDevice8_GetVertexShaderConstant	GraphicsCapture/GraphicsCaptureHook/d3d8.h	532;"	d
IDirect3DDevice8_GetVertexShaderDeclaration	GraphicsCapture/GraphicsCaptureHook/d3d8.h	435;"	d
IDirect3DDevice8_GetVertexShaderDeclaration	GraphicsCapture/GraphicsCaptureHook/d3d8.h	533;"	d
IDirect3DDevice8_GetVertexShaderFunction	GraphicsCapture/GraphicsCaptureHook/d3d8.h	436;"	d
IDirect3DDevice8_GetVertexShaderFunction	GraphicsCapture/GraphicsCaptureHook/d3d8.h	534;"	d
IDirect3DDevice8_GetViewport	GraphicsCapture/GraphicsCaptureHook/d3d8.h	395;"	d
IDirect3DDevice8_GetViewport	GraphicsCapture/GraphicsCaptureHook/d3d8.h	493;"	d
IDirect3DDevice8_LightEnable	GraphicsCapture/GraphicsCaptureHook/d3d8.h	400;"	d
IDirect3DDevice8_LightEnable	GraphicsCapture/GraphicsCaptureHook/d3d8.h	498;"	d
IDirect3DDevice8_MultiplyTransform	GraphicsCapture/GraphicsCaptureHook/d3d8.h	393;"	d
IDirect3DDevice8_MultiplyTransform	GraphicsCapture/GraphicsCaptureHook/d3d8.h	491;"	d
IDirect3DDevice8_Present	GraphicsCapture/GraphicsCaptureHook/d3d8.h	369;"	d
IDirect3DDevice8_Present	GraphicsCapture/GraphicsCaptureHook/d3d8.h	467;"	d
IDirect3DDevice8_ProcessVertices	GraphicsCapture/GraphicsCaptureHook/d3d8.h	428;"	d
IDirect3DDevice8_ProcessVertices	GraphicsCapture/GraphicsCaptureHook/d3d8.h	526;"	d
IDirect3DDevice8_QueryInterface	GraphicsCapture/GraphicsCaptureHook/d3d8.h	354;"	d
IDirect3DDevice8_QueryInterface	GraphicsCapture/GraphicsCaptureHook/d3d8.h	452;"	d
IDirect3DDevice8_Release	GraphicsCapture/GraphicsCaptureHook/d3d8.h	356;"	d
IDirect3DDevice8_Release	GraphicsCapture/GraphicsCaptureHook/d3d8.h	454;"	d
IDirect3DDevice8_Reset	GraphicsCapture/GraphicsCaptureHook/d3d8.h	368;"	d
IDirect3DDevice8_Reset	GraphicsCapture/GraphicsCaptureHook/d3d8.h	466;"	d
IDirect3DDevice8_ResourceManagerDiscardBytes	GraphicsCapture/GraphicsCaptureHook/d3d8.h	359;"	d
IDirect3DDevice8_ResourceManagerDiscardBytes	GraphicsCapture/GraphicsCaptureHook/d3d8.h	457;"	d
IDirect3DDevice8_SetClipPlane	GraphicsCapture/GraphicsCaptureHook/d3d8.h	402;"	d
IDirect3DDevice8_SetClipPlane	GraphicsCapture/GraphicsCaptureHook/d3d8.h	500;"	d
IDirect3DDevice8_SetClipStatus	GraphicsCapture/GraphicsCaptureHook/d3d8.h	412;"	d
IDirect3DDevice8_SetClipStatus	GraphicsCapture/GraphicsCaptureHook/d3d8.h	510;"	d
IDirect3DDevice8_SetCurrentTexturePalette	GraphicsCapture/GraphicsCaptureHook/d3d8.h	422;"	d
IDirect3DDevice8_SetCurrentTexturePalette	GraphicsCapture/GraphicsCaptureHook/d3d8.h	520;"	d
IDirect3DDevice8_SetCursorPosition	GraphicsCapture/GraphicsCaptureHook/d3d8.h	365;"	d
IDirect3DDevice8_SetCursorPosition	GraphicsCapture/GraphicsCaptureHook/d3d8.h	463;"	d
IDirect3DDevice8_SetCursorProperties	GraphicsCapture/GraphicsCaptureHook/d3d8.h	364;"	d
IDirect3DDevice8_SetCursorProperties	GraphicsCapture/GraphicsCaptureHook/d3d8.h	462;"	d
IDirect3DDevice8_SetGammaRamp	GraphicsCapture/GraphicsCaptureHook/d3d8.h	372;"	d
IDirect3DDevice8_SetGammaRamp	GraphicsCapture/GraphicsCaptureHook/d3d8.h	470;"	d
IDirect3DDevice8_SetIndices	GraphicsCapture/GraphicsCaptureHook/d3d8.h	439;"	d
IDirect3DDevice8_SetIndices	GraphicsCapture/GraphicsCaptureHook/d3d8.h	537;"	d
IDirect3DDevice8_SetLight	GraphicsCapture/GraphicsCaptureHook/d3d8.h	398;"	d
IDirect3DDevice8_SetLight	GraphicsCapture/GraphicsCaptureHook/d3d8.h	496;"	d
IDirect3DDevice8_SetMaterial	GraphicsCapture/GraphicsCaptureHook/d3d8.h	396;"	d
IDirect3DDevice8_SetMaterial	GraphicsCapture/GraphicsCaptureHook/d3d8.h	494;"	d
IDirect3DDevice8_SetPaletteEntries	GraphicsCapture/GraphicsCaptureHook/d3d8.h	420;"	d
IDirect3DDevice8_SetPaletteEntries	GraphicsCapture/GraphicsCaptureHook/d3d8.h	518;"	d
IDirect3DDevice8_SetPixelShader	GraphicsCapture/GraphicsCaptureHook/d3d8.h	442;"	d
IDirect3DDevice8_SetPixelShader	GraphicsCapture/GraphicsCaptureHook/d3d8.h	540;"	d
IDirect3DDevice8_SetPixelShaderConstant	GraphicsCapture/GraphicsCaptureHook/d3d8.h	445;"	d
IDirect3DDevice8_SetPixelShaderConstant	GraphicsCapture/GraphicsCaptureHook/d3d8.h	543;"	d
IDirect3DDevice8_SetRenderState	GraphicsCapture/GraphicsCaptureHook/d3d8.h	404;"	d
IDirect3DDevice8_SetRenderState	GraphicsCapture/GraphicsCaptureHook/d3d8.h	502;"	d
IDirect3DDevice8_SetRenderTarget	GraphicsCapture/GraphicsCaptureHook/d3d8.h	385;"	d
IDirect3DDevice8_SetRenderTarget	GraphicsCapture/GraphicsCaptureHook/d3d8.h	483;"	d
IDirect3DDevice8_SetStreamSource	GraphicsCapture/GraphicsCaptureHook/d3d8.h	437;"	d
IDirect3DDevice8_SetStreamSource	GraphicsCapture/GraphicsCaptureHook/d3d8.h	535;"	d
IDirect3DDevice8_SetTexture	GraphicsCapture/GraphicsCaptureHook/d3d8.h	415;"	d
IDirect3DDevice8_SetTexture	GraphicsCapture/GraphicsCaptureHook/d3d8.h	513;"	d
IDirect3DDevice8_SetTextureStageState	GraphicsCapture/GraphicsCaptureHook/d3d8.h	417;"	d
IDirect3DDevice8_SetTextureStageState	GraphicsCapture/GraphicsCaptureHook/d3d8.h	515;"	d
IDirect3DDevice8_SetTransform	GraphicsCapture/GraphicsCaptureHook/d3d8.h	391;"	d
IDirect3DDevice8_SetTransform	GraphicsCapture/GraphicsCaptureHook/d3d8.h	489;"	d
IDirect3DDevice8_SetVertexShader	GraphicsCapture/GraphicsCaptureHook/d3d8.h	430;"	d
IDirect3DDevice8_SetVertexShader	GraphicsCapture/GraphicsCaptureHook/d3d8.h	528;"	d
IDirect3DDevice8_SetVertexShaderConstant	GraphicsCapture/GraphicsCaptureHook/d3d8.h	433;"	d
IDirect3DDevice8_SetVertexShaderConstant	GraphicsCapture/GraphicsCaptureHook/d3d8.h	531;"	d
IDirect3DDevice8_SetViewport	GraphicsCapture/GraphicsCaptureHook/d3d8.h	394;"	d
IDirect3DDevice8_SetViewport	GraphicsCapture/GraphicsCaptureHook/d3d8.h	492;"	d
IDirect3DDevice8_ShowCursor	GraphicsCapture/GraphicsCaptureHook/d3d8.h	366;"	d
IDirect3DDevice8_ShowCursor	GraphicsCapture/GraphicsCaptureHook/d3d8.h	464;"	d
IDirect3DDevice8_TestCooperativeLevel	GraphicsCapture/GraphicsCaptureHook/d3d8.h	357;"	d
IDirect3DDevice8_TestCooperativeLevel	GraphicsCapture/GraphicsCaptureHook/d3d8.h	455;"	d
IDirect3DDevice8_UpdateTexture	GraphicsCapture/GraphicsCaptureHook/d3d8.h	383;"	d
IDirect3DDevice8_UpdateTexture	GraphicsCapture/GraphicsCaptureHook/d3d8.h	481;"	d
IDirect3DDevice8_ValidateDevice	GraphicsCapture/GraphicsCaptureHook/d3d8.h	418;"	d
IDirect3DDevice8_ValidateDevice	GraphicsCapture/GraphicsCaptureHook/d3d8.h	516;"	d
IDirect3DIndexBuffer8	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^interface IDirect3DIndexBuffer8;$/;"	v
IDirect3DIndexBuffer8	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^typedef interface IDirect3DIndexBuffer8     IDirect3DIndexBuffer8;$/;"	t
IDirect3DIndexBuffer8_AddRef	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1019;"	d
IDirect3DIndexBuffer8_AddRef	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1034;"	d
IDirect3DIndexBuffer8_FreePrivateData	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1024;"	d
IDirect3DIndexBuffer8_FreePrivateData	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1039;"	d
IDirect3DIndexBuffer8_GetDesc	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1031;"	d
IDirect3DIndexBuffer8_GetDesc	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1046;"	d
IDirect3DIndexBuffer8_GetDevice	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1021;"	d
IDirect3DIndexBuffer8_GetDevice	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1036;"	d
IDirect3DIndexBuffer8_GetPriority	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1026;"	d
IDirect3DIndexBuffer8_GetPriority	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1041;"	d
IDirect3DIndexBuffer8_GetPrivateData	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1023;"	d
IDirect3DIndexBuffer8_GetPrivateData	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1038;"	d
IDirect3DIndexBuffer8_GetType	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1028;"	d
IDirect3DIndexBuffer8_GetType	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1043;"	d
IDirect3DIndexBuffer8_Lock	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1029;"	d
IDirect3DIndexBuffer8_Lock	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1044;"	d
IDirect3DIndexBuffer8_PreLoad	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1027;"	d
IDirect3DIndexBuffer8_PreLoad	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1042;"	d
IDirect3DIndexBuffer8_QueryInterface	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1018;"	d
IDirect3DIndexBuffer8_QueryInterface	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1033;"	d
IDirect3DIndexBuffer8_Release	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1020;"	d
IDirect3DIndexBuffer8_Release	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1035;"	d
IDirect3DIndexBuffer8_SetPriority	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1025;"	d
IDirect3DIndexBuffer8_SetPriority	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1040;"	d
IDirect3DIndexBuffer8_SetPrivateData	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1022;"	d
IDirect3DIndexBuffer8_SetPrivateData	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1037;"	d
IDirect3DIndexBuffer8_Unlock	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1030;"	d
IDirect3DIndexBuffer8_Unlock	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1045;"	d
IDirect3DResource8	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^interface IDirect3DResource8;$/;"	v
IDirect3DResource8	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^typedef interface IDirect3DResource8        IDirect3DResource8;$/;"	t
IDirect3DResource8_AddRef	GraphicsCapture/GraphicsCaptureHook/d3d8.h	611;"	d
IDirect3DResource8_AddRef	GraphicsCapture/GraphicsCaptureHook/d3d8.h	623;"	d
IDirect3DResource8_FreePrivateData	GraphicsCapture/GraphicsCaptureHook/d3d8.h	616;"	d
IDirect3DResource8_FreePrivateData	GraphicsCapture/GraphicsCaptureHook/d3d8.h	628;"	d
IDirect3DResource8_GetDevice	GraphicsCapture/GraphicsCaptureHook/d3d8.h	613;"	d
IDirect3DResource8_GetDevice	GraphicsCapture/GraphicsCaptureHook/d3d8.h	625;"	d
IDirect3DResource8_GetPriority	GraphicsCapture/GraphicsCaptureHook/d3d8.h	618;"	d
IDirect3DResource8_GetPriority	GraphicsCapture/GraphicsCaptureHook/d3d8.h	630;"	d
IDirect3DResource8_GetPrivateData	GraphicsCapture/GraphicsCaptureHook/d3d8.h	615;"	d
IDirect3DResource8_GetPrivateData	GraphicsCapture/GraphicsCaptureHook/d3d8.h	627;"	d
IDirect3DResource8_GetType	GraphicsCapture/GraphicsCaptureHook/d3d8.h	620;"	d
IDirect3DResource8_GetType	GraphicsCapture/GraphicsCaptureHook/d3d8.h	632;"	d
IDirect3DResource8_PreLoad	GraphicsCapture/GraphicsCaptureHook/d3d8.h	619;"	d
IDirect3DResource8_PreLoad	GraphicsCapture/GraphicsCaptureHook/d3d8.h	631;"	d
IDirect3DResource8_QueryInterface	GraphicsCapture/GraphicsCaptureHook/d3d8.h	610;"	d
IDirect3DResource8_QueryInterface	GraphicsCapture/GraphicsCaptureHook/d3d8.h	622;"	d
IDirect3DResource8_Release	GraphicsCapture/GraphicsCaptureHook/d3d8.h	612;"	d
IDirect3DResource8_Release	GraphicsCapture/GraphicsCaptureHook/d3d8.h	624;"	d
IDirect3DResource8_SetPriority	GraphicsCapture/GraphicsCaptureHook/d3d8.h	617;"	d
IDirect3DResource8_SetPriority	GraphicsCapture/GraphicsCaptureHook/d3d8.h	629;"	d
IDirect3DResource8_SetPrivateData	GraphicsCapture/GraphicsCaptureHook/d3d8.h	614;"	d
IDirect3DResource8_SetPrivateData	GraphicsCapture/GraphicsCaptureHook/d3d8.h	626;"	d
IDirect3DSurface8	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^interface IDirect3DSurface8;$/;"	v
IDirect3DSurface8	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^typedef interface IDirect3DSurface8         IDirect3DSurface8;$/;"	t
IDirect3DSurface8_AddRef	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1077;"	d
IDirect3DSurface8_AddRef	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1089;"	d
IDirect3DSurface8_FreePrivateData	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1082;"	d
IDirect3DSurface8_FreePrivateData	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1094;"	d
IDirect3DSurface8_GetContainer	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1083;"	d
IDirect3DSurface8_GetContainer	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1095;"	d
IDirect3DSurface8_GetDesc	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1084;"	d
IDirect3DSurface8_GetDesc	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1096;"	d
IDirect3DSurface8_GetDevice	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1079;"	d
IDirect3DSurface8_GetDevice	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1091;"	d
IDirect3DSurface8_GetPrivateData	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1081;"	d
IDirect3DSurface8_GetPrivateData	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1093;"	d
IDirect3DSurface8_LockRect	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1085;"	d
IDirect3DSurface8_LockRect	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1097;"	d
IDirect3DSurface8_QueryInterface	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1076;"	d
IDirect3DSurface8_QueryInterface	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1088;"	d
IDirect3DSurface8_Release	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1078;"	d
IDirect3DSurface8_Release	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1090;"	d
IDirect3DSurface8_SetPrivateData	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1080;"	d
IDirect3DSurface8_SetPrivateData	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1092;"	d
IDirect3DSurface8_UnlockRect	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1086;"	d
IDirect3DSurface8_UnlockRect	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1098;"	d
IDirect3DSwapChain8	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^interface IDirect3DSwapChain8;$/;"	v
IDirect3DSwapChain8	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^typedef interface IDirect3DSwapChain8       IDirect3DSwapChain8;$/;"	t
IDirect3DSwapChain8_AddRef	GraphicsCapture/GraphicsCaptureHook/d3d8.h	572;"	d
IDirect3DSwapChain8_AddRef	GraphicsCapture/GraphicsCaptureHook/d3d8.h	578;"	d
IDirect3DSwapChain8_GetBackBuffer	GraphicsCapture/GraphicsCaptureHook/d3d8.h	575;"	d
IDirect3DSwapChain8_GetBackBuffer	GraphicsCapture/GraphicsCaptureHook/d3d8.h	581;"	d
IDirect3DSwapChain8_Present	GraphicsCapture/GraphicsCaptureHook/d3d8.h	574;"	d
IDirect3DSwapChain8_Present	GraphicsCapture/GraphicsCaptureHook/d3d8.h	580;"	d
IDirect3DSwapChain8_QueryInterface	GraphicsCapture/GraphicsCaptureHook/d3d8.h	571;"	d
IDirect3DSwapChain8_QueryInterface	GraphicsCapture/GraphicsCaptureHook/d3d8.h	577;"	d
IDirect3DSwapChain8_Release	GraphicsCapture/GraphicsCaptureHook/d3d8.h	573;"	d
IDirect3DSwapChain8_Release	GraphicsCapture/GraphicsCaptureHook/d3d8.h	579;"	d
IDirect3DTexture8	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^interface IDirect3DTexture8;$/;"	v
IDirect3DTexture8	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^typedef interface IDirect3DTexture8         IDirect3DTexture8;$/;"	t
IDirect3DTexture8_AddDirtyRect	GraphicsCapture/GraphicsCaptureHook/d3d8.h	750;"	d
IDirect3DTexture8_AddDirtyRect	GraphicsCapture/GraphicsCaptureHook/d3d8.h	770;"	d
IDirect3DTexture8_AddRef	GraphicsCapture/GraphicsCaptureHook/d3d8.h	733;"	d
IDirect3DTexture8_AddRef	GraphicsCapture/GraphicsCaptureHook/d3d8.h	753;"	d
IDirect3DTexture8_FreePrivateData	GraphicsCapture/GraphicsCaptureHook/d3d8.h	738;"	d
IDirect3DTexture8_FreePrivateData	GraphicsCapture/GraphicsCaptureHook/d3d8.h	758;"	d
IDirect3DTexture8_GetDevice	GraphicsCapture/GraphicsCaptureHook/d3d8.h	735;"	d
IDirect3DTexture8_GetDevice	GraphicsCapture/GraphicsCaptureHook/d3d8.h	755;"	d
IDirect3DTexture8_GetLOD	GraphicsCapture/GraphicsCaptureHook/d3d8.h	744;"	d
IDirect3DTexture8_GetLOD	GraphicsCapture/GraphicsCaptureHook/d3d8.h	764;"	d
IDirect3DTexture8_GetLevelCount	GraphicsCapture/GraphicsCaptureHook/d3d8.h	745;"	d
IDirect3DTexture8_GetLevelCount	GraphicsCapture/GraphicsCaptureHook/d3d8.h	765;"	d
IDirect3DTexture8_GetLevelDesc	GraphicsCapture/GraphicsCaptureHook/d3d8.h	746;"	d
IDirect3DTexture8_GetLevelDesc	GraphicsCapture/GraphicsCaptureHook/d3d8.h	766;"	d
IDirect3DTexture8_GetPriority	GraphicsCapture/GraphicsCaptureHook/d3d8.h	740;"	d
IDirect3DTexture8_GetPriority	GraphicsCapture/GraphicsCaptureHook/d3d8.h	760;"	d
IDirect3DTexture8_GetPrivateData	GraphicsCapture/GraphicsCaptureHook/d3d8.h	737;"	d
IDirect3DTexture8_GetPrivateData	GraphicsCapture/GraphicsCaptureHook/d3d8.h	757;"	d
IDirect3DTexture8_GetSurfaceLevel	GraphicsCapture/GraphicsCaptureHook/d3d8.h	747;"	d
IDirect3DTexture8_GetSurfaceLevel	GraphicsCapture/GraphicsCaptureHook/d3d8.h	767;"	d
IDirect3DTexture8_GetType	GraphicsCapture/GraphicsCaptureHook/d3d8.h	742;"	d
IDirect3DTexture8_GetType	GraphicsCapture/GraphicsCaptureHook/d3d8.h	762;"	d
IDirect3DTexture8_LockRect	GraphicsCapture/GraphicsCaptureHook/d3d8.h	748;"	d
IDirect3DTexture8_LockRect	GraphicsCapture/GraphicsCaptureHook/d3d8.h	768;"	d
IDirect3DTexture8_PreLoad	GraphicsCapture/GraphicsCaptureHook/d3d8.h	741;"	d
IDirect3DTexture8_PreLoad	GraphicsCapture/GraphicsCaptureHook/d3d8.h	761;"	d
IDirect3DTexture8_QueryInterface	GraphicsCapture/GraphicsCaptureHook/d3d8.h	732;"	d
IDirect3DTexture8_QueryInterface	GraphicsCapture/GraphicsCaptureHook/d3d8.h	752;"	d
IDirect3DTexture8_Release	GraphicsCapture/GraphicsCaptureHook/d3d8.h	734;"	d
IDirect3DTexture8_Release	GraphicsCapture/GraphicsCaptureHook/d3d8.h	754;"	d
IDirect3DTexture8_SetLOD	GraphicsCapture/GraphicsCaptureHook/d3d8.h	743;"	d
IDirect3DTexture8_SetLOD	GraphicsCapture/GraphicsCaptureHook/d3d8.h	763;"	d
IDirect3DTexture8_SetPriority	GraphicsCapture/GraphicsCaptureHook/d3d8.h	739;"	d
IDirect3DTexture8_SetPriority	GraphicsCapture/GraphicsCaptureHook/d3d8.h	759;"	d
IDirect3DTexture8_SetPrivateData	GraphicsCapture/GraphicsCaptureHook/d3d8.h	736;"	d
IDirect3DTexture8_SetPrivateData	GraphicsCapture/GraphicsCaptureHook/d3d8.h	756;"	d
IDirect3DTexture8_UnlockRect	GraphicsCapture/GraphicsCaptureHook/d3d8.h	749;"	d
IDirect3DTexture8_UnlockRect	GraphicsCapture/GraphicsCaptureHook/d3d8.h	769;"	d
IDirect3DVertexBuffer8	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^interface IDirect3DVertexBuffer8;$/;"	v
IDirect3DVertexBuffer8	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^typedef interface IDirect3DVertexBuffer8    IDirect3DVertexBuffer8;$/;"	t
IDirect3DVertexBuffer8_AddRef	GraphicsCapture/GraphicsCaptureHook/d3d8.h	958;"	d
IDirect3DVertexBuffer8_AddRef	GraphicsCapture/GraphicsCaptureHook/d3d8.h	973;"	d
IDirect3DVertexBuffer8_FreePrivateData	GraphicsCapture/GraphicsCaptureHook/d3d8.h	963;"	d
IDirect3DVertexBuffer8_FreePrivateData	GraphicsCapture/GraphicsCaptureHook/d3d8.h	978;"	d
IDirect3DVertexBuffer8_GetDesc	GraphicsCapture/GraphicsCaptureHook/d3d8.h	970;"	d
IDirect3DVertexBuffer8_GetDesc	GraphicsCapture/GraphicsCaptureHook/d3d8.h	985;"	d
IDirect3DVertexBuffer8_GetDevice	GraphicsCapture/GraphicsCaptureHook/d3d8.h	960;"	d
IDirect3DVertexBuffer8_GetDevice	GraphicsCapture/GraphicsCaptureHook/d3d8.h	975;"	d
IDirect3DVertexBuffer8_GetPriority	GraphicsCapture/GraphicsCaptureHook/d3d8.h	965;"	d
IDirect3DVertexBuffer8_GetPriority	GraphicsCapture/GraphicsCaptureHook/d3d8.h	980;"	d
IDirect3DVertexBuffer8_GetPrivateData	GraphicsCapture/GraphicsCaptureHook/d3d8.h	962;"	d
IDirect3DVertexBuffer8_GetPrivateData	GraphicsCapture/GraphicsCaptureHook/d3d8.h	977;"	d
IDirect3DVertexBuffer8_GetType	GraphicsCapture/GraphicsCaptureHook/d3d8.h	967;"	d
IDirect3DVertexBuffer8_GetType	GraphicsCapture/GraphicsCaptureHook/d3d8.h	982;"	d
IDirect3DVertexBuffer8_Lock	GraphicsCapture/GraphicsCaptureHook/d3d8.h	968;"	d
IDirect3DVertexBuffer8_Lock	GraphicsCapture/GraphicsCaptureHook/d3d8.h	983;"	d
IDirect3DVertexBuffer8_PreLoad	GraphicsCapture/GraphicsCaptureHook/d3d8.h	966;"	d
IDirect3DVertexBuffer8_PreLoad	GraphicsCapture/GraphicsCaptureHook/d3d8.h	981;"	d
IDirect3DVertexBuffer8_QueryInterface	GraphicsCapture/GraphicsCaptureHook/d3d8.h	957;"	d
IDirect3DVertexBuffer8_QueryInterface	GraphicsCapture/GraphicsCaptureHook/d3d8.h	972;"	d
IDirect3DVertexBuffer8_Release	GraphicsCapture/GraphicsCaptureHook/d3d8.h	959;"	d
IDirect3DVertexBuffer8_Release	GraphicsCapture/GraphicsCaptureHook/d3d8.h	974;"	d
IDirect3DVertexBuffer8_SetPriority	GraphicsCapture/GraphicsCaptureHook/d3d8.h	964;"	d
IDirect3DVertexBuffer8_SetPriority	GraphicsCapture/GraphicsCaptureHook/d3d8.h	979;"	d
IDirect3DVertexBuffer8_SetPrivateData	GraphicsCapture/GraphicsCaptureHook/d3d8.h	961;"	d
IDirect3DVertexBuffer8_SetPrivateData	GraphicsCapture/GraphicsCaptureHook/d3d8.h	976;"	d
IDirect3DVertexBuffer8_Unlock	GraphicsCapture/GraphicsCaptureHook/d3d8.h	969;"	d
IDirect3DVertexBuffer8_Unlock	GraphicsCapture/GraphicsCaptureHook/d3d8.h	984;"	d
IDirect3DVolume8	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^interface IDirect3DVolume8;$/;"	v
IDirect3DVolume8	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^typedef interface IDirect3DVolume8          IDirect3DVolume8;$/;"	t
IDirect3DVolume8_AddRef	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1129;"	d
IDirect3DVolume8_AddRef	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1141;"	d
IDirect3DVolume8_FreePrivateData	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1134;"	d
IDirect3DVolume8_FreePrivateData	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1146;"	d
IDirect3DVolume8_GetContainer	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1135;"	d
IDirect3DVolume8_GetContainer	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1147;"	d
IDirect3DVolume8_GetDesc	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1136;"	d
IDirect3DVolume8_GetDesc	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1148;"	d
IDirect3DVolume8_GetDevice	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1131;"	d
IDirect3DVolume8_GetDevice	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1143;"	d
IDirect3DVolume8_GetPrivateData	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1133;"	d
IDirect3DVolume8_GetPrivateData	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1145;"	d
IDirect3DVolume8_LockBox	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1137;"	d
IDirect3DVolume8_LockBox	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1149;"	d
IDirect3DVolume8_QueryInterface	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1128;"	d
IDirect3DVolume8_QueryInterface	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1140;"	d
IDirect3DVolume8_Release	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1130;"	d
IDirect3DVolume8_Release	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1142;"	d
IDirect3DVolume8_SetPrivateData	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1132;"	d
IDirect3DVolume8_SetPrivateData	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1144;"	d
IDirect3DVolume8_UnlockBox	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1138;"	d
IDirect3DVolume8_UnlockBox	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1150;"	d
IDirect3DVolumeTexture8	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^interface IDirect3DVolumeTexture8;$/;"	v
IDirect3DVolumeTexture8	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^typedef interface IDirect3DVolumeTexture8   IDirect3DVolumeTexture8;$/;"	t
IDirect3DVolumeTexture8_AddDirtyBox	GraphicsCapture/GraphicsCaptureHook/d3d8.h	827;"	d
IDirect3DVolumeTexture8_AddDirtyBox	GraphicsCapture/GraphicsCaptureHook/d3d8.h	847;"	d
IDirect3DVolumeTexture8_AddRef	GraphicsCapture/GraphicsCaptureHook/d3d8.h	810;"	d
IDirect3DVolumeTexture8_AddRef	GraphicsCapture/GraphicsCaptureHook/d3d8.h	830;"	d
IDirect3DVolumeTexture8_FreePrivateData	GraphicsCapture/GraphicsCaptureHook/d3d8.h	815;"	d
IDirect3DVolumeTexture8_FreePrivateData	GraphicsCapture/GraphicsCaptureHook/d3d8.h	835;"	d
IDirect3DVolumeTexture8_GetDevice	GraphicsCapture/GraphicsCaptureHook/d3d8.h	812;"	d
IDirect3DVolumeTexture8_GetDevice	GraphicsCapture/GraphicsCaptureHook/d3d8.h	832;"	d
IDirect3DVolumeTexture8_GetLOD	GraphicsCapture/GraphicsCaptureHook/d3d8.h	821;"	d
IDirect3DVolumeTexture8_GetLOD	GraphicsCapture/GraphicsCaptureHook/d3d8.h	841;"	d
IDirect3DVolumeTexture8_GetLevelCount	GraphicsCapture/GraphicsCaptureHook/d3d8.h	822;"	d
IDirect3DVolumeTexture8_GetLevelCount	GraphicsCapture/GraphicsCaptureHook/d3d8.h	842;"	d
IDirect3DVolumeTexture8_GetLevelDesc	GraphicsCapture/GraphicsCaptureHook/d3d8.h	823;"	d
IDirect3DVolumeTexture8_GetLevelDesc	GraphicsCapture/GraphicsCaptureHook/d3d8.h	843;"	d
IDirect3DVolumeTexture8_GetPriority	GraphicsCapture/GraphicsCaptureHook/d3d8.h	817;"	d
IDirect3DVolumeTexture8_GetPriority	GraphicsCapture/GraphicsCaptureHook/d3d8.h	837;"	d
IDirect3DVolumeTexture8_GetPrivateData	GraphicsCapture/GraphicsCaptureHook/d3d8.h	814;"	d
IDirect3DVolumeTexture8_GetPrivateData	GraphicsCapture/GraphicsCaptureHook/d3d8.h	834;"	d
IDirect3DVolumeTexture8_GetType	GraphicsCapture/GraphicsCaptureHook/d3d8.h	819;"	d
IDirect3DVolumeTexture8_GetType	GraphicsCapture/GraphicsCaptureHook/d3d8.h	839;"	d
IDirect3DVolumeTexture8_GetVolumeLevel	GraphicsCapture/GraphicsCaptureHook/d3d8.h	824;"	d
IDirect3DVolumeTexture8_GetVolumeLevel	GraphicsCapture/GraphicsCaptureHook/d3d8.h	844;"	d
IDirect3DVolumeTexture8_LockBox	GraphicsCapture/GraphicsCaptureHook/d3d8.h	825;"	d
IDirect3DVolumeTexture8_LockBox	GraphicsCapture/GraphicsCaptureHook/d3d8.h	845;"	d
IDirect3DVolumeTexture8_PreLoad	GraphicsCapture/GraphicsCaptureHook/d3d8.h	818;"	d
IDirect3DVolumeTexture8_PreLoad	GraphicsCapture/GraphicsCaptureHook/d3d8.h	838;"	d
IDirect3DVolumeTexture8_QueryInterface	GraphicsCapture/GraphicsCaptureHook/d3d8.h	809;"	d
IDirect3DVolumeTexture8_QueryInterface	GraphicsCapture/GraphicsCaptureHook/d3d8.h	829;"	d
IDirect3DVolumeTexture8_Release	GraphicsCapture/GraphicsCaptureHook/d3d8.h	811;"	d
IDirect3DVolumeTexture8_Release	GraphicsCapture/GraphicsCaptureHook/d3d8.h	831;"	d
IDirect3DVolumeTexture8_SetLOD	GraphicsCapture/GraphicsCaptureHook/d3d8.h	820;"	d
IDirect3DVolumeTexture8_SetLOD	GraphicsCapture/GraphicsCaptureHook/d3d8.h	840;"	d
IDirect3DVolumeTexture8_SetPriority	GraphicsCapture/GraphicsCaptureHook/d3d8.h	816;"	d
IDirect3DVolumeTexture8_SetPriority	GraphicsCapture/GraphicsCaptureHook/d3d8.h	836;"	d
IDirect3DVolumeTexture8_SetPrivateData	GraphicsCapture/GraphicsCaptureHook/d3d8.h	813;"	d
IDirect3DVolumeTexture8_SetPrivateData	GraphicsCapture/GraphicsCaptureHook/d3d8.h	833;"	d
IDirect3DVolumeTexture8_UnlockBox	GraphicsCapture/GraphicsCaptureHook/d3d8.h	826;"	d
IDirect3DVolumeTexture8_UnlockBox	GraphicsCapture/GraphicsCaptureHook/d3d8.h	846;"	d
IFF_AIFF	lame/frontend/get_audio.c	/^} IFF_AIFF;$/;"	t	file:
IFF_AIFF_struct	lame/frontend/get_audio.c	/^typedef struct IFF_AIFF_struct {$/;"	s	file:
IFF_ID_2CBE	lame/frontend/get_audio.c	/^static int const IFF_ID_2CBE = 0x74776f73; \/* "twos" *\/\/* AIFF-C data format *\/$/;"	v	file:
IFF_ID_2CLE	lame/frontend/get_audio.c	/^static int const IFF_ID_2CLE = 0x736f7774; \/* "sowt" *\/\/* AIFF-C data format *\/$/;"	v	file:
IFF_ID_AIFC	lame/frontend/get_audio.c	/^static int const IFF_ID_AIFC = 0x41494643; \/* "AIFC" *\/$/;"	v	file:
IFF_ID_AIFF	lame/frontend/get_audio.c	/^static int const IFF_ID_AIFF = 0x41494646; \/* "AIFF" *\/$/;"	v	file:
IFF_ID_COMM	lame/frontend/get_audio.c	/^static int const IFF_ID_COMM = 0x434f4d4d; \/* "COMM" *\/$/;"	v	file:
IFF_ID_FORM	lame/frontend/get_audio.c	/^static int const IFF_ID_FORM = 0x464f524d; \/* "FORM" *\/$/;"	v	file:
IFF_ID_MPEG	lame/frontend/get_audio.c	/^static int const IFF_ID_MPEG = 0x4d504547; \/* "MPEG" *\/$/;"	v	file:
IFF_ID_NONE	lame/frontend/get_audio.c	/^static int const IFF_ID_NONE = 0x4e4f4e45; \/* "NONE" *\/\/* AIFF-C data format *\/$/;"	v	file:
IFF_ID_SSND	lame/frontend/get_audio.c	/^static int const IFF_ID_SSND = 0x53534e44; \/* "SSND" *\/$/;"	v	file:
IFilterBank	libfaac/filtbank.c	/^void IFilterBank(faacEncHandle hEncoder,$/;"	f
IFrameIDs	Source/MP4FileStream.cpp	/^    List<UINT>      IFrameIDs;$/;"	m	class:MP4FileStream	file:
IID_IDXGIAdapter2	extras/dxgi1_2.h	/^EXTERN_C const IID IID_IDXGIAdapter2;$/;"	v
IID_IDXGIDevice2	extras/dxgi1_2.h	/^EXTERN_C const IID IID_IDXGIDevice2;$/;"	v
IID_IDXGIDisplayControl	extras/dxgi1_2.h	/^EXTERN_C const IID IID_IDXGIDisplayControl;$/;"	v
IID_IDXGIFactory2	extras/dxgi1_2.h	/^EXTERN_C const IID IID_IDXGIFactory2;$/;"	v
IID_IDXGIOutput1	extras/dxgi1_2.h	/^EXTERN_C const IID IID_IDXGIOutput1;$/;"	v
IID_IDXGIOutputDuplication	extras/dxgi1_2.h	/^EXTERN_C const IID IID_IDXGIOutputDuplication;$/;"	v
IID_IDXGIResource1	extras/dxgi1_2.h	/^EXTERN_C const IID IID_IDXGIResource1;$/;"	v
IID_IDXGISurface2	extras/dxgi1_2.h	/^EXTERN_C const IID IID_IDXGISurface2;$/;"	v
IID_IDXGISwapChain1	extras/dxgi1_2.h	/^EXTERN_C const IID IID_IDXGISwapChain1;$/;"	v
III_antialias	lame/mpglib/layer3.c	/^III_antialias(real xr[SBLIMIT][SSLIMIT], struct gr_info_s *gr_infos)$/;"	f	file:
III_dequantize_sample	lame/mpglib/layer3.c	/^III_dequantize_sample(PMPSTR mp, real xr[SBLIMIT][SSLIMIT], int *scf,$/;"	f	file:
III_get_scale_factors_1	lame/mpglib/layer3.c	/^III_get_scale_factors_1(PMPSTR mp, int *scf, struct gr_info_s *gr_infos)$/;"	f	file:
III_get_scale_factors_2	lame/mpglib/layer3.c	/^III_get_scale_factors_2(PMPSTR mp, int *scf, struct gr_info_s *gr_infos, int i_stereo)$/;"	f	file:
III_get_side_info_1	lame/mpglib/layer3.c	/^III_get_side_info_1(PMPSTR mp, int stereo,$/;"	f	file:
III_get_side_info_2	lame/mpglib/layer3.c	/^III_get_side_info_2(PMPSTR mp, int stereo, int ms_stereo, long sfreq, int single)$/;"	f	file:
III_hybrid	lame/mpglib/layer3.c	/^III_hybrid(PMPSTR mp, real fsIn[SBLIMIT][SSLIMIT], real tsOut[SSLIMIT][SBLIMIT],$/;"	f	file:
III_i_stereo	lame/mpglib/layer3.c	/^III_i_stereo(real xr_buf[2][SBLIMIT][SSLIMIT], int *scalefac,$/;"	f	file:
III_psy_ratio	lame/libmp3lame/l3side.h	/^} III_psy_ratio;$/;"	t
III_psy_xmin	lame/libmp3lame/l3side.h	/^} III_psy_xmin;$/;"	t
III_side_info_t	lame/libmp3lame/l3side.h	/^} III_side_info_t;$/;"	t
III_sideinfo	lame/mpglib/mpg123.h	/^struct III_sideinfo {$/;"	s
II_sblimit	lame/mpglib/mpg123.h	/^    int     II_sblimit;$/;"	m	struct:frame
II_select_table	lame/mpglib/layer2.c	/^II_select_table(struct frame *fr)$/;"	f	file:
II_step_one	lame/mpglib/layer2.c	/^II_step_one(PMPSTR mp, sideinfo_layer_II *si, struct frame *fr)$/;"	f	file:
II_step_two	lame/mpglib/layer2.c	/^II_step_two(PMPSTR mp, sideinfo_layer_II* si, struct frame *fr, int gr, real fraction[2][4][SBLIMIT])$/;"	f	file:
IMDCT	libfaac/filtbank.c	/^static void IMDCT( FFT_Tables *fft_tables, double *data, int N)$/;"	f	file:
IMMDevice	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/RenderProcess.cs	/^    internal interface IMMDevice$/;"	i	namespace:Browser
IMMDeviceEnumerator	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/RenderProcess.cs	/^    internal interface IMMDeviceEnumerator$/;"	i	namespace:Browser
IMsgHandler	libmfx/include/mfx_dispatcher_log.h	/^class IMsgHandler$/;"	c
INCLUDES	lame/ACM/ADbg/Makefile	/^INCLUDES = -I$(top_srcdir)\/include -I$(srcdir)$/;"	m
INCLUDES	lame/ACM/Makefile	/^INCLUDES = -I$(top_srcdir)\/include -I$(srcdir)$/;"	m
INCLUDES	lame/ACM/ddk/Makefile	/^INCLUDES = -I$(top_srcdir)\/include -I$(srcdir)$/;"	m
INCLUDES	lame/ACM/tinyxml/Makefile	/^INCLUDES = -I$(top_srcdir)\/include -I$(srcdir)$/;"	m
INCLUDES	lame/Dll/Makefile	/^INCLUDES = -I$(top_srcdir)\/include -I$(srcdir)$/;"	m
INCLUDES	lame/Makefile	/^INCLUDES = -I$(top_srcdir)\/include -I$(srcdir)$/;"	m
INCLUDES	lame/debian/Makefile	/^INCLUDES = -I$(top_srcdir)\/include -I$(srcdir)$/;"	m
INCLUDES	lame/doc/Makefile	/^INCLUDES = -I$(top_srcdir)\/include -I$(srcdir)$/;"	m
INCLUDES	lame/doc/html/Makefile	/^INCLUDES = -I$(top_srcdir)\/include -I$(srcdir)$/;"	m
INCLUDES	lame/doc/man/Makefile	/^INCLUDES = -I$(top_srcdir)\/include -I$(srcdir)$/;"	m
INCLUDES	lame/dshow/Makefile	/^INCLUDES = -I$(top_srcdir)\/include -I$(srcdir)$/;"	m
INCLUDES	lame/frontend/Makefile	/^INCLUDES = -I$(top_srcdir)\/libmp3lame -I$(top_srcdir)\/include -I$(top_builddir)$/;"	m
INCLUDES	lame/include/Makefile	/^INCLUDES = -I$(top_srcdir)\/include -I$(srcdir)$/;"	m
INCLUDES	lame/libmp3lame/Makefile	/^INCLUDES = -I$(top_srcdir)\/include -I$(srcdir) -I$(top_srcdir)\/mpglib -I$(top_builddir)$/;"	m
INCLUDES	lame/libmp3lame/i386/Makefile	/^INCLUDES = -I$(top_srcdir)\/include -I$(srcdir) -I$(top_srcdir)\/libmp3lame\/no$/;"	m
INCLUDES	lame/libmp3lame/vector/Makefile	/^INCLUDES = -I$(top_srcdir)\/include -I$(srcdir) \\$/;"	m
INCLUDES	lame/mac/Makefile	/^INCLUDES = -I$(top_srcdir)\/include -I$(srcdir)$/;"	m
INCLUDES	lame/macosx/English.lproj/Makefile	/^INCLUDES = -I$(top_srcdir)\/include -I$(srcdir)$/;"	m
INCLUDES	lame/macosx/LAME.xcodeproj/Makefile	/^INCLUDES = -I$(top_srcdir)\/include -I$(srcdir)$/;"	m
INCLUDES	lame/macosx/Makefile	/^INCLUDES = -I$(top_srcdir)\/include -I$(srcdir)$/;"	m
INCLUDES	lame/misc/Makefile	/^INCLUDES = -I$(top_srcdir)\/include -I$(srcdir)$/;"	m
INCLUDES	lame/mpglib/Makefile	/^INCLUDES = -I$(top_srcdir)\/include -I$(srcdir) -I$(top_srcdir)\/libmp3lame -I$(top_builddir)$/;"	m
INCLUDES	lame/vc_solution/Makefile	/^INCLUDES = -I$(top_srcdir)\/include -I$(srcdir)$/;"	m
INDEX_FILES	Source/mongoose.c	/^  INDEX_FILES,$/;"	e	file:
INFO_MEMORY	GraphicsCapture/GlobalCaptureStuff.h	36;"	d
INITGUID	libmfx/src/mfx_dxva2_device.cpp	33;"	d	file:
INITIALIZE_HTTP_RESPONSE	Source/Server.h	23;"	d
INIT_GAIN_ANALYSIS_ERROR	lame/libmp3lame/gain_analysis.h	/^            1, INIT_GAIN_ANALYSIS_ERROR = 0, INIT_GAIN_ANALYSIS_OK = 1$/;"	e
INIT_GAIN_ANALYSIS_OK	lame/libmp3lame/gain_analysis.h	/^            1, INIT_GAIN_ANALYSIS_ERROR = 0, INIT_GAIN_ANALYSIS_OK = 1$/;"	e
INIT_REQUEST	QSVHelper/IPCInfo.h	27;"	d
INIT_RESPONSE	QSVHelper/IPCInfo.h	30;"	d
INSANE	lame/include/lame.h	/^    INSANE = 1003,$/;"	e	enum:preset_mode_e
INSTALL	lame/ACM/ADbg/Makefile	/^INSTALL = \/bin\/install -c$/;"	m
INSTALL	lame/ACM/Makefile	/^INSTALL = \/bin\/install -c$/;"	m
INSTALL	lame/ACM/ddk/Makefile	/^INSTALL = \/bin\/install -c$/;"	m
INSTALL	lame/ACM/tinyxml/Makefile	/^INSTALL = \/bin\/install -c$/;"	m
INSTALL	lame/Dll/Makefile	/^INSTALL = \/bin\/install -c$/;"	m
INSTALL	lame/Makefile	/^INSTALL = \/bin\/install -c$/;"	m
INSTALL	lame/debian/Makefile	/^INSTALL = \/bin\/install -c$/;"	m
INSTALL	lame/doc/Makefile	/^INSTALL = \/bin\/install -c$/;"	m
INSTALL	lame/doc/html/Makefile	/^INSTALL = \/bin\/install -c$/;"	m
INSTALL	lame/doc/man/Makefile	/^INSTALL = \/bin\/install -c$/;"	m
INSTALL	lame/dshow/Makefile	/^INSTALL = \/bin\/install -c$/;"	m
INSTALL	lame/frontend/Makefile	/^INSTALL = \/bin\/install -c$/;"	m
INSTALL	lame/include/Makefile	/^INSTALL = \/bin\/install -c$/;"	m
INSTALL	lame/libmp3lame/Makefile	/^INSTALL = \/bin\/install -c$/;"	m
INSTALL	lame/libmp3lame/i386/Makefile	/^INSTALL = \/bin\/install -c$/;"	m
INSTALL	lame/libmp3lame/vector/Makefile	/^INSTALL = \/bin\/install -c$/;"	m
INSTALL	lame/mac/Makefile	/^INSTALL = \/bin\/install -c$/;"	m
INSTALL	lame/macosx/English.lproj/Makefile	/^INSTALL = \/bin\/install -c$/;"	m
INSTALL	lame/macosx/LAME.xcodeproj/Makefile	/^INSTALL = \/bin\/install -c$/;"	m
INSTALL	lame/macosx/Makefile	/^INSTALL = \/bin\/install -c$/;"	m
INSTALL	lame/misc/Makefile	/^INSTALL = \/bin\/install -c$/;"	m
INSTALL	lame/mpglib/Makefile	/^INSTALL = \/bin\/install -c$/;"	m
INSTALL	lame/vc_solution/Makefile	/^INSTALL = \/bin\/install -c$/;"	m
INSTALL_DATA	lame/ACM/ADbg/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	lame/ACM/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	lame/ACM/ddk/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	lame/ACM/tinyxml/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	lame/Dll/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	lame/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	lame/debian/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	lame/doc/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	lame/doc/html/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	lame/doc/man/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	lame/dshow/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	lame/frontend/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	lame/include/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	lame/libmp3lame/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	lame/libmp3lame/i386/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	lame/libmp3lame/vector/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	lame/mac/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	lame/macosx/English.lproj/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	lame/macosx/LAME.xcodeproj/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	lame/macosx/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	lame/misc/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	lame/mpglib/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	lame/vc_solution/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_HEADER	lame/ACM/ADbg/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	lame/ACM/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	lame/ACM/ddk/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	lame/ACM/tinyxml/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	lame/Dll/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	lame/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	lame/debian/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	lame/doc/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	lame/doc/html/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	lame/doc/man/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	lame/dshow/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	lame/frontend/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	lame/include/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	lame/libmp3lame/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	lame/libmp3lame/i386/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	lame/libmp3lame/vector/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	lame/mac/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	lame/macosx/English.lproj/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	lame/macosx/LAME.xcodeproj/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	lame/macosx/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	lame/misc/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	lame/mpglib/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	lame/vc_solution/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_PROGRAM	lame/ACM/ADbg/Makefile	/^	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \\$/;"	m
INSTALL_PROGRAM	lame/ACM/ADbg/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	lame/ACM/Makefile	/^	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \\$/;"	m
INSTALL_PROGRAM	lame/ACM/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	lame/ACM/ddk/Makefile	/^	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \\$/;"	m
INSTALL_PROGRAM	lame/ACM/ddk/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	lame/ACM/tinyxml/Makefile	/^	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \\$/;"	m
INSTALL_PROGRAM	lame/ACM/tinyxml/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	lame/Dll/Makefile	/^	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \\$/;"	m
INSTALL_PROGRAM	lame/Dll/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	lame/Makefile	/^	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \\$/;"	m
INSTALL_PROGRAM	lame/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	lame/debian/Makefile	/^	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \\$/;"	m
INSTALL_PROGRAM	lame/debian/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	lame/doc/Makefile	/^	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \\$/;"	m
INSTALL_PROGRAM	lame/doc/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	lame/doc/html/Makefile	/^	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \\$/;"	m
INSTALL_PROGRAM	lame/doc/html/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	lame/doc/man/Makefile	/^	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \\$/;"	m
INSTALL_PROGRAM	lame/doc/man/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	lame/dshow/Makefile	/^	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \\$/;"	m
INSTALL_PROGRAM	lame/dshow/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	lame/frontend/Makefile	/^	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \\$/;"	m
INSTALL_PROGRAM	lame/frontend/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	lame/include/Makefile	/^	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \\$/;"	m
INSTALL_PROGRAM	lame/include/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	lame/libmp3lame/Makefile	/^	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \\$/;"	m
INSTALL_PROGRAM	lame/libmp3lame/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	lame/libmp3lame/i386/Makefile	/^	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \\$/;"	m
INSTALL_PROGRAM	lame/libmp3lame/i386/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	lame/libmp3lame/vector/Makefile	/^	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \\$/;"	m
INSTALL_PROGRAM	lame/libmp3lame/vector/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	lame/mac/Makefile	/^	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \\$/;"	m
INSTALL_PROGRAM	lame/mac/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	lame/macosx/English.lproj/Makefile	/^	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \\$/;"	m
INSTALL_PROGRAM	lame/macosx/English.lproj/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	lame/macosx/LAME.xcodeproj/Makefile	/^	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \\$/;"	m
INSTALL_PROGRAM	lame/macosx/LAME.xcodeproj/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	lame/macosx/Makefile	/^	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \\$/;"	m
INSTALL_PROGRAM	lame/macosx/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	lame/misc/Makefile	/^	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \\$/;"	m
INSTALL_PROGRAM	lame/misc/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	lame/mpglib/Makefile	/^	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \\$/;"	m
INSTALL_PROGRAM	lame/mpglib/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	lame/vc_solution/Makefile	/^	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \\$/;"	m
INSTALL_PROGRAM	lame/vc_solution/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM_ENV	lame/ACM/ADbg/Makefile	/^	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install$/;"	m
INSTALL_PROGRAM_ENV	lame/ACM/Makefile	/^	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install$/;"	m
INSTALL_PROGRAM_ENV	lame/ACM/ddk/Makefile	/^	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install$/;"	m
INSTALL_PROGRAM_ENV	lame/ACM/tinyxml/Makefile	/^	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install$/;"	m
INSTALL_PROGRAM_ENV	lame/Dll/Makefile	/^	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install$/;"	m
INSTALL_PROGRAM_ENV	lame/Makefile	/^	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install$/;"	m
INSTALL_PROGRAM_ENV	lame/debian/Makefile	/^	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install$/;"	m
INSTALL_PROGRAM_ENV	lame/doc/Makefile	/^	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install$/;"	m
INSTALL_PROGRAM_ENV	lame/doc/html/Makefile	/^	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install$/;"	m
INSTALL_PROGRAM_ENV	lame/doc/man/Makefile	/^	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install$/;"	m
INSTALL_PROGRAM_ENV	lame/dshow/Makefile	/^	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install$/;"	m
INSTALL_PROGRAM_ENV	lame/frontend/Makefile	/^	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install$/;"	m
INSTALL_PROGRAM_ENV	lame/include/Makefile	/^	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install$/;"	m
INSTALL_PROGRAM_ENV	lame/libmp3lame/Makefile	/^	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install$/;"	m
INSTALL_PROGRAM_ENV	lame/libmp3lame/i386/Makefile	/^	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install$/;"	m
INSTALL_PROGRAM_ENV	lame/libmp3lame/vector/Makefile	/^	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install$/;"	m
INSTALL_PROGRAM_ENV	lame/mac/Makefile	/^	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install$/;"	m
INSTALL_PROGRAM_ENV	lame/macosx/English.lproj/Makefile	/^	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install$/;"	m
INSTALL_PROGRAM_ENV	lame/macosx/LAME.xcodeproj/Makefile	/^	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install$/;"	m
INSTALL_PROGRAM_ENV	lame/macosx/Makefile	/^	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install$/;"	m
INSTALL_PROGRAM_ENV	lame/misc/Makefile	/^	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install$/;"	m
INSTALL_PROGRAM_ENV	lame/mpglib/Makefile	/^	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install$/;"	m
INSTALL_PROGRAM_ENV	lame/vc_solution/Makefile	/^	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install$/;"	m
INSTALL_SCRIPT	lame/ACM/ADbg/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	lame/ACM/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	lame/ACM/ddk/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	lame/ACM/tinyxml/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	lame/Dll/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	lame/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	lame/debian/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	lame/doc/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	lame/doc/html/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	lame/doc/man/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	lame/dshow/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	lame/frontend/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	lame/include/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	lame/libmp3lame/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	lame/libmp3lame/i386/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	lame/libmp3lame/vector/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	lame/mac/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	lame/macosx/English.lproj/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	lame/macosx/LAME.xcodeproj/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	lame/macosx/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	lame/misc/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	lame/mpglib/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	lame/vc_solution/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_STRIP_FLAG	lame/ACM/ADbg/Makefile	/^	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \\$/;"	m
INSTALL_STRIP_FLAG	lame/ACM/Makefile	/^	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \\$/;"	m
INSTALL_STRIP_FLAG	lame/ACM/ddk/Makefile	/^	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \\$/;"	m
INSTALL_STRIP_FLAG	lame/ACM/tinyxml/Makefile	/^	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \\$/;"	m
INSTALL_STRIP_FLAG	lame/Dll/Makefile	/^	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \\$/;"	m
INSTALL_STRIP_FLAG	lame/Makefile	/^	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \\$/;"	m
INSTALL_STRIP_FLAG	lame/debian/Makefile	/^	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \\$/;"	m
INSTALL_STRIP_FLAG	lame/doc/Makefile	/^	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \\$/;"	m
INSTALL_STRIP_FLAG	lame/doc/html/Makefile	/^	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \\$/;"	m
INSTALL_STRIP_FLAG	lame/doc/man/Makefile	/^	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \\$/;"	m
INSTALL_STRIP_FLAG	lame/dshow/Makefile	/^	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \\$/;"	m
INSTALL_STRIP_FLAG	lame/frontend/Makefile	/^	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \\$/;"	m
INSTALL_STRIP_FLAG	lame/include/Makefile	/^	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \\$/;"	m
INSTALL_STRIP_FLAG	lame/libmp3lame/Makefile	/^	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \\$/;"	m
INSTALL_STRIP_FLAG	lame/libmp3lame/i386/Makefile	/^	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \\$/;"	m
INSTALL_STRIP_FLAG	lame/libmp3lame/vector/Makefile	/^	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \\$/;"	m
INSTALL_STRIP_FLAG	lame/mac/Makefile	/^	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \\$/;"	m
INSTALL_STRIP_FLAG	lame/macosx/English.lproj/Makefile	/^	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \\$/;"	m
INSTALL_STRIP_FLAG	lame/macosx/LAME.xcodeproj/Makefile	/^	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \\$/;"	m
INSTALL_STRIP_FLAG	lame/macosx/Makefile	/^	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \\$/;"	m
INSTALL_STRIP_FLAG	lame/misc/Makefile	/^	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \\$/;"	m
INSTALL_STRIP_FLAG	lame/mpglib/Makefile	/^	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \\$/;"	m
INSTALL_STRIP_FLAG	lame/vc_solution/Makefile	/^	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \\$/;"	m
INSTALL_STRIP_PROGRAM	lame/ACM/ADbg/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	lame/ACM/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	lame/ACM/ddk/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	lame/ACM/tinyxml/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	lame/Dll/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	lame/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	lame/debian/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	lame/doc/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	lame/doc/html/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	lame/doc/man/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	lame/dshow/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	lame/frontend/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	lame/include/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	lame/libmp3lame/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	lame/libmp3lame/i386/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	lame/libmp3lame/vector/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	lame/mac/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	lame/macosx/English.lproj/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	lame/macosx/LAME.xcodeproj/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	lame/macosx/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	lame/misc/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	lame/mpglib/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	lame/vc_solution/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INT	OBSApi/Utility/Defs.h	/^typedef int                 BOOL,INT,*LPINT;$/;"	t
INT	OBSApi/Utility/Defs.h	34;"	d
INT16	OBSApi/Utility/Defs.h	/^typedef signed short        INT16;$/;"	t
INT16	OBSApi/Utility/Defs.h	36;"	d
INT16_C	extras/stdint.h	188;"	d
INT16_C	lame/stdint.h	188;"	d
INT16_C	librtmp/stdint.h	187;"	d
INT16_C	minhook/src/pstdint.h	258;"	d
INT16_C	minhook/src/pstdint.h	360;"	d
INT16_C	minhook/src/pstdint.h	366;"	d
INT16_MAX	extras/stdint.h	77;"	d
INT16_MAX	lame/stdint.h	77;"	d
INT16_MAX	librtmp/stdint.h	76;"	d
INT16_MAX	minhook/src/pstdint.h	352;"	d
INT16_MIN	extras/stdint.h	72;"	d
INT16_MIN	lame/stdint.h	72;"	d
INT16_MIN	librtmp/stdint.h	71;"	d
INT16_MIN	minhook/src/pstdint.h	355;"	d
INT32	OBSApi/Utility/Defs.h	37;"	d
INT32_C	extras/stdint.h	189;"	d
INT32_C	lame/stdint.h	189;"	d
INT32_C	librtmp/stdint.h	188;"	d
INT32_C	minhook/src/pstdint.h	252;"	d
INT32_C	minhook/src/pstdint.h	411;"	d
INT32_C	minhook/src/pstdint.h	417;"	d
INT32_C	minhook/src/pstdint.h	423;"	d
INT32_MAX	extras/stdint.h	78;"	d
INT32_MAX	lame/stdint.h	78;"	d
INT32_MAX	librtmp/stdint.h	77;"	d
INT32_MAX	minhook/src/pstdint.h	279;"	d
INT32_MAX	minhook/src/pstdint.h	403;"	d
INT32_MIN	extras/stdint.h	73;"	d
INT32_MIN	lame/stdint.h	73;"	d
INT32_MIN	librtmp/stdint.h	72;"	d
INT32_MIN	minhook/src/pstdint.h	406;"	d
INT64	OBSApi/Utility/Defs.h	/^typedef long long           LONG64,INT64,LONGLONG;$/;"	t
INT64	OBSApi/Utility/Defs.h	38;"	d
INT64_C	extras/stdint.h	190;"	d
INT64_C	lame/stdint.h	190;"	d
INT64_C	librtmp/stdint.h	189;"	d
INT64_C	minhook/src/pstdint.h	246;"	d
INT64_C	minhook/src/pstdint.h	446;"	d
INT64_C	minhook/src/pstdint.h	459;"	d
INT64_C	minhook/src/pstdint.h	468;"	d
INT64_C	minhook/src/pstdint.h	477;"	d
INT64_FMT	Source/mongoose.c	1351;"	d	file:
INT64_FMT	Source/mongoose.c	1371;"	d	file:
INT64_MAX	extras/stdint.h	79;"	d
INT64_MAX	lame/stdint.h	79;"	d
INT64_MAX	librtmp/stdint.h	78;"	d
INT64_MAX	minhook/src/pstdint.h	273;"	d
INT64_MAX	minhook/src/pstdint.h	492;"	d
INT64_MIN	extras/stdint.h	74;"	d
INT64_MIN	lame/stdint.h	74;"	d
INT64_MIN	librtmp/stdint.h	73;"	d
INT64_MIN	minhook/src/pstdint.h	495;"	d
INT8	OBSApi/Utility/Defs.h	/^typedef signed char         INT8;$/;"	t
INT8	OBSApi/Utility/Defs.h	35;"	d
INT8_C	extras/stdint.h	187;"	d
INT8_C	lame/stdint.h	187;"	d
INT8_C	librtmp/stdint.h	186;"	d
INT8_C	minhook/src/pstdint.h	264;"	d
INT8_C	minhook/src/pstdint.h	324;"	d
INT8_MAX	extras/stdint.h	76;"	d
INT8_MAX	lame/stdint.h	76;"	d
INT8_MAX	librtmp/stdint.h	75;"	d
INT8_MAX	minhook/src/pstdint.h	316;"	d
INT8_MIN	extras/stdint.h	71;"	d
INT8_MIN	lame/stdint.h	71;"	d
INT8_MIN	librtmp/stdint.h	70;"	d
INT8_MIN	minhook/src/pstdint.h	319;"	d
INTENSITY_HCB	libfaac/huffman.h	44;"	d
INTENSITY_HCB2	libfaac/huffman.h	45;"	d
INTERFACE	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1052;"	d
INTERFACE	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1053;"	d
INTERFACE	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1104;"	d
INTERFACE	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1105;"	d
INTERFACE	GraphicsCapture/GraphicsCaptureHook/d3d8.h	162;"	d
INTERFACE	GraphicsCapture/GraphicsCaptureHook/d3d8.h	163;"	d
INTERFACE	GraphicsCapture/GraphicsCaptureHook/d3d8.h	244;"	d
INTERFACE	GraphicsCapture/GraphicsCaptureHook/d3d8.h	245;"	d
INTERFACE	GraphicsCapture/GraphicsCaptureHook/d3d8.h	553;"	d
INTERFACE	GraphicsCapture/GraphicsCaptureHook/d3d8.h	554;"	d
INTERFACE	GraphicsCapture/GraphicsCaptureHook/d3d8.h	586;"	d
INTERFACE	GraphicsCapture/GraphicsCaptureHook/d3d8.h	587;"	d
INTERFACE	GraphicsCapture/GraphicsCaptureHook/d3d8.h	638;"	d
INTERFACE	GraphicsCapture/GraphicsCaptureHook/d3d8.h	639;"	d
INTERFACE	GraphicsCapture/GraphicsCaptureHook/d3d8.h	700;"	d
INTERFACE	GraphicsCapture/GraphicsCaptureHook/d3d8.h	701;"	d
INTERFACE	GraphicsCapture/GraphicsCaptureHook/d3d8.h	777;"	d
INTERFACE	GraphicsCapture/GraphicsCaptureHook/d3d8.h	778;"	d
INTERFACE	GraphicsCapture/GraphicsCaptureHook/d3d8.h	854;"	d
INTERFACE	GraphicsCapture/GraphicsCaptureHook/d3d8.h	855;"	d
INTERFACE	GraphicsCapture/GraphicsCaptureHook/d3d8.h	930;"	d
INTERFACE	GraphicsCapture/GraphicsCaptureHook/d3d8.h	931;"	d
INTERFACE	GraphicsCapture/GraphicsCaptureHook/d3d8.h	991;"	d
INTERFACE	GraphicsCapture/GraphicsCaptureHook/d3d8.h	992;"	d
INTERFACE_H_INCLUDED	lame/mpglib/interface.h	23;"	d
INTERNAL_OPTS	lame/frontend/parse.c	75;"	d	file:
INTERNAL_OPTS	lame/frontend/parse.c	77;"	d	file:
INTEROP_ASSEMBLY	CLRHostPlugin/CLRHostPlugin/CLRHost.h	26;"	d
INTEROP_ASSEMBLY_PATH	CLRHostPlugin/CLRHostPlugin/CLRHost.h	27;"	d
INTEROP_LOAD_CLASS	CLRHostPlugin/CLRHostPlugin/CLRHost.h	28;"	d
INTEROP_PATH	CLRHostPlugin/CLRHostPlugin/CLRHost.h	24;"	d
INTEROP_PATH_SEARCH	CLRHostPlugin/CLRHostPlugin/CLRHost.h	25;"	d
INTMAX_C	extras/stdint.h	198;"	d
INTMAX_C	lame/stdint.h	198;"	d
INTMAX_C	librtmp/stdint.h	197;"	d
INTMAX_C	minhook/src/pstdint.h	544;"	d
INTMAX_C	minhook/src/pstdint.h	560;"	d
INTMAX_MAX	extras/stdint.h	132;"	d
INTMAX_MAX	lame/stdint.h	132;"	d
INTMAX_MAX	librtmp/stdint.h	131;"	d
INTMAX_MAX	minhook/src/pstdint.h	282;"	d
INTMAX_MAX	minhook/src/pstdint.h	540;"	d
INTMAX_MAX	minhook/src/pstdint.h	557;"	d
INTMAX_MIN	extras/stdint.h	131;"	d
INTMAX_MIN	lame/stdint.h	131;"	d
INTMAX_MIN	librtmp/stdint.h	130;"	d
INTMAX_MIN	minhook/src/pstdint.h	285;"	d
INTMAX_MIN	minhook/src/pstdint.h	541;"	d
INTPTR_C	minhook/src/pstdint.h	705;"	d
INTPTR_MAX	extras/stdint.h	122;"	d
INTPTR_MAX	extras/stdint.h	126;"	d
INTPTR_MAX	lame/stdint.h	122;"	d
INTPTR_MAX	lame/stdint.h	126;"	d
INTPTR_MAX	librtmp/stdint.h	121;"	d
INTPTR_MAX	librtmp/stdint.h	125;"	d
INTPTR_MAX	minhook/src/pstdint.h	699;"	d
INTPTR_MIN	extras/stdint.h	121;"	d
INTPTR_MIN	extras/stdint.h	125;"	d
INTPTR_MIN	lame/stdint.h	121;"	d
INTPTR_MIN	lame/stdint.h	125;"	d
INTPTR_MIN	librtmp/stdint.h	120;"	d
INTPTR_MIN	librtmp/stdint.h	124;"	d
INTPTR_MIN	minhook/src/pstdint.h	702;"	d
INT_FAST16_MAX	extras/stdint.h	109;"	d
INT_FAST16_MAX	lame/stdint.h	109;"	d
INT_FAST16_MAX	librtmp/stdint.h	108;"	d
INT_FAST16_MAX	minhook/src/pstdint.h	628;"	d
INT_FAST16_MIN	extras/stdint.h	104;"	d
INT_FAST16_MIN	lame/stdint.h	104;"	d
INT_FAST16_MIN	librtmp/stdint.h	103;"	d
INT_FAST16_MIN	minhook/src/pstdint.h	632;"	d
INT_FAST32_MAX	extras/stdint.h	110;"	d
INT_FAST32_MAX	lame/stdint.h	110;"	d
INT_FAST32_MAX	librtmp/stdint.h	109;"	d
INT_FAST32_MAX	minhook/src/pstdint.h	630;"	d
INT_FAST32_MIN	extras/stdint.h	105;"	d
INT_FAST32_MIN	lame/stdint.h	105;"	d
INT_FAST32_MIN	librtmp/stdint.h	104;"	d
INT_FAST32_MIN	minhook/src/pstdint.h	633;"	d
INT_FAST64_MAX	extras/stdint.h	111;"	d
INT_FAST64_MAX	lame/stdint.h	111;"	d
INT_FAST64_MAX	librtmp/stdint.h	110;"	d
INT_FAST64_MAX	minhook/src/pstdint.h	638;"	d
INT_FAST64_MIN	extras/stdint.h	106;"	d
INT_FAST64_MIN	lame/stdint.h	106;"	d
INT_FAST64_MIN	librtmp/stdint.h	105;"	d
INT_FAST64_MIN	minhook/src/pstdint.h	639;"	d
INT_FAST8_MAX	extras/stdint.h	108;"	d
INT_FAST8_MAX	lame/stdint.h	108;"	d
INT_FAST8_MAX	librtmp/stdint.h	107;"	d
INT_FAST8_MAX	minhook/src/pstdint.h	626;"	d
INT_FAST8_MIN	extras/stdint.h	103;"	d
INT_FAST8_MIN	lame/stdint.h	103;"	d
INT_FAST8_MIN	librtmp/stdint.h	102;"	d
INT_FAST8_MIN	minhook/src/pstdint.h	631;"	d
INT_LEAST16_MAX	extras/stdint.h	93;"	d
INT_LEAST16_MAX	lame/stdint.h	93;"	d
INT_LEAST16_MAX	librtmp/stdint.h	92;"	d
INT_LEAST16_MAX	minhook/src/pstdint.h	591;"	d
INT_LEAST16_MIN	extras/stdint.h	88;"	d
INT_LEAST16_MIN	lame/stdint.h	88;"	d
INT_LEAST16_MIN	librtmp/stdint.h	87;"	d
INT_LEAST16_MIN	minhook/src/pstdint.h	595;"	d
INT_LEAST32_MAX	extras/stdint.h	94;"	d
INT_LEAST32_MAX	lame/stdint.h	94;"	d
INT_LEAST32_MAX	librtmp/stdint.h	93;"	d
INT_LEAST32_MAX	minhook/src/pstdint.h	593;"	d
INT_LEAST32_MIN	extras/stdint.h	89;"	d
INT_LEAST32_MIN	lame/stdint.h	89;"	d
INT_LEAST32_MIN	librtmp/stdint.h	88;"	d
INT_LEAST32_MIN	minhook/src/pstdint.h	596;"	d
INT_LEAST64_MAX	extras/stdint.h	95;"	d
INT_LEAST64_MAX	lame/stdint.h	95;"	d
INT_LEAST64_MAX	librtmp/stdint.h	94;"	d
INT_LEAST64_MAX	minhook/src/pstdint.h	602;"	d
INT_LEAST64_MIN	extras/stdint.h	90;"	d
INT_LEAST64_MIN	lame/stdint.h	90;"	d
INT_LEAST64_MIN	librtmp/stdint.h	89;"	d
INT_LEAST64_MIN	minhook/src/pstdint.h	603;"	d
INT_LEAST8_MAX	extras/stdint.h	92;"	d
INT_LEAST8_MAX	lame/stdint.h	92;"	d
INT_LEAST8_MAX	librtmp/stdint.h	91;"	d
INT_LEAST8_MAX	minhook/src/pstdint.h	589;"	d
INT_LEAST8_MIN	extras/stdint.h	87;"	d
INT_LEAST8_MIN	lame/stdint.h	87;"	d
INT_LEAST8_MIN	librtmp/stdint.h	86;"	d
INT_LEAST8_MIN	minhook/src/pstdint.h	594;"	d
INVALID	OBSApi/Utility/Defs.h	122;"	d
INVALID_LL	Source/OBSCapture.cpp	1295;"	d	file:
INVALID_SOCKET	Source/mongoose.c	157;"	d	file:
INV_FP_ONE	libsamplerate/src_sinc.c	42;"	d	file:
IOBUF_SIZE	Source/mongoose.c	1379;"	d	file:
IOPattern	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16  IOPattern;$/;"	m
IPCArray	QSVHelper/WindowsStuff.h	/^    IPCArray() {}$/;"	f	struct:IPCArray
IPCArray	QSVHelper/WindowsStuff.h	/^    IPCArray(std::wstring name, size_t size) : memory(name, sizeof(T)*size), size(size) {}$/;"	f	struct:IPCArray
IPCArray	QSVHelper/WindowsStuff.h	/^struct IPCArray$/;"	s
IPCInfo.h	QSVHelper/IPCInfo.h	1;"	F
IPCLockedSignalledArray	QSVHelper/WindowsStuff.h	/^    IPCLockedSignalledArray() {}$/;"	f	struct:IPCLockedSignalledArray
IPCLockedSignalledArray	QSVHelper/WindowsStuff.h	/^    IPCLockedSignalledArray(std::wstring name, size_t size) : IPCSignalledArray(name, size), IPCMutex(name+L"Lock") {}$/;"	f	struct:IPCLockedSignalledArray
IPCLockedSignalledArray	QSVHelper/WindowsStuff.h	/^struct IPCLockedSignalledArray : IPCSignalledArray<T>, IPCMutex$/;"	s
IPCLockedSignalledType	QSVHelper/WindowsStuff.h	/^    IPCLockedSignalledType() {}$/;"	f	struct:IPCLockedSignalledType
IPCLockedSignalledType	QSVHelper/WindowsStuff.h	/^    IPCLockedSignalledType(std::wstring name) : IPCSignalledType(name), IPCMutex(name+L"Lock") {}$/;"	f	struct:IPCLockedSignalledType
IPCLockedSignalledType	QSVHelper/WindowsStuff.h	/^struct IPCLockedSignalledType : IPCSignalledType<T>, IPCMutex$/;"	s
IPCMutex	QSVHelper/WindowsStuff.h	/^    IPCMutex() {}$/;"	f	struct:IPCMutex
IPCMutex	QSVHelper/WindowsStuff.h	/^    IPCMutex(std::wstring name) { mutex_.reset(CreateMutex(nullptr, false, name.c_str())); }$/;"	f	struct:IPCMutex
IPCMutex	QSVHelper/WindowsStuff.h	/^struct IPCMutex$/;"	s
IPCMutexLock	QSVHelper/WindowsStuff.h	/^    IPCMutexLock(IPCMutexLock &&other) : t(other.t), enabled(other.enabled) { other.enabled = false; }$/;"	f	struct:IPCMutexLock
IPCMutexLock	QSVHelper/WindowsStuff.h	/^    IPCMutexLock(T &t) : t(t), enabled(true) { t.lock(); }$/;"	f	struct:IPCMutexLock
IPCMutexLock	QSVHelper/WindowsStuff.h	/^struct IPCMutexLock$/;"	s
IPCSignal	QSVHelper/WindowsStuff.h	/^    IPCSignal() {}$/;"	f	struct:IPCSignal
IPCSignal	QSVHelper/WindowsStuff.h	/^    IPCSignal(std::wstring name) { signal_.reset(CreateEvent(nullptr, manual, false, name.c_str())); }$/;"	f	struct:IPCSignal
IPCSignal	QSVHelper/WindowsStuff.h	/^struct IPCSignal$/;"	s
IPCSignalledArray	QSVHelper/WindowsStuff.h	/^    IPCSignalledArray() {}$/;"	f	struct:IPCSignalledArray
IPCSignalledArray	QSVHelper/WindowsStuff.h	/^    IPCSignalledArray(std::wstring name, size_t size) : IPCArray(name, size), IPCSignal(name+L"Signal") {}$/;"	f	struct:IPCSignalledArray
IPCSignalledArray	QSVHelper/WindowsStuff.h	/^struct IPCSignalledArray : IPCArray<T>, IPCSignal<false>$/;"	s
IPCSignalledType	QSVHelper/WindowsStuff.h	/^    IPCSignalledType() {}$/;"	f	struct:IPCSignalledType
IPCSignalledType	QSVHelper/WindowsStuff.h	/^    IPCSignalledType(std::wstring name) : IPCType(name), IPCSignal(name+L"Signal") {}$/;"	f	struct:IPCSignalledType
IPCSignalledType	QSVHelper/WindowsStuff.h	/^struct IPCSignalledType : IPCType<T>, IPCSignal<false>$/;"	s
IPCStructs.h	QSVHelper/IPCStructs.h	1;"	F
IPCType	QSVHelper/WindowsStuff.h	/^    IPCType() {}$/;"	f	struct:IPCType
IPCType	QSVHelper/WindowsStuff.h	/^    IPCType(std::wstring name) : memory(name, sizeof(T)) {}$/;"	f	struct:IPCType
IPCType	QSVHelper/WindowsStuff.h	/^struct IPCType$/;"	s
IPCWaiter	QSVHelper/WindowsStuff.h	/^struct IPCWaiter$/;"	s
IPOW20	lame/libmp3lame/machine.h	96;"	d
IPOW20	libfaac/aacquant.h	38;"	d
IP_MULTICAST_TTL	lame/frontend/rtp.c	164;"	d	file:
ISOLATION_AWARE_ENABLED	OBSApi/OBSApi.h	28;"	d
ISOLATION_AWARE_ENABLED	OBSApi/Utility/XT_Windows.cpp	26;"	d	file:
ISOLATION_AWARE_ENABLED	Source/Main.h	27;"	d
IS_X264_TYPE_B	x264/x264.h	239;"	d
IS_X264_TYPE_I	x264/x264.h	238;"	d
ISimpleAudioVolume	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/RenderProcess.cs	/^    internal interface ISimpleAudioVolume$/;"	i	namespace:Browser
IVideoCaptureFilter.h	DShowPlugin/IVideoCaptureFilter.h	1;"	F
IXMAX_VAL	lame/libmp3lame/quantize_pvt.h	25;"	d
IXMAX_VAL	libfaac/aacquant.h	32;"	d
I_step_one	lame/mpglib/layer1.c	/^I_step_one(PMPSTR mp, sideinfo_layer_I* si)$/;"	f	file:
I_step_two	lame/mpglib/layer1.c	/^I_step_two(PMPSTR mp, sideinfo_layer_I *si, real fraction[2][SBLIMIT])$/;"	f	file:
IconInfo	Source/OBS.h	/^struct IconInfo$/;"	s
Icons	Source/OBS.h	/^    List<IconInfo> Icons;$/;"	m	class:OBS
Identify	lame/ACM/tinyxml/tinyxmlparser.cpp	/^TiXmlNode* TiXmlNode::Identify( const char* p )$/;"	f	class:TiXmlNode
Identity	OBSApi/Utility/XMath.h	/^    static inline Matrix Identity()$/;"	f	struct:Matrix
Identity	OBSApi/Utility/XMath.h	/^    static inline Quat Identity() {return Quat().SetIdentity();}$/;"	f	struct:Quat
IdrInterval	libmfx/include/msdk/include/mfxstructures.h	/^            mfxU16  IdrInterval;$/;"	m
IgnoreCertificateErrors	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public bool IgnoreCertificateErrors { get; set; }$/;"	p	class:Shared.BrowserRuntimeSettings
ImageLoading	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public CefState ImageLoading { get; set; }$/;"	p	class:Shared.BrowserInstanceSettings
ImageMadness.cpp	DShowPlugin/ImageMadness.cpp	1;"	F
ImageProcessing.cpp	Source/ImageProcessing.cpp	1;"	F
ImageShrinkStandaloneToFit	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public CefState ImageShrinkStandaloneToFit { get; set; }$/;"	p	class:Shared.BrowserInstanceSettings
ImageSource	CLRHostPlugin/CLRHostInterop/ImageSource.h	/^    public interface class ImageSource$/;"	c	namespace:CLROBS
ImageSource	OBSApi/Scene.h	/^class BASE_EXPORT ImageSource$/;"	c
ImageSource.cpp	CLRHostPlugin/CLRHostInterop/ImageSource.cpp	1;"	F
ImageSource.h	CLRHostPlugin/CLRHostInterop/ImageSource.h	1;"	F
ImageSourceBridge	CLRHostPlugin/CLRHostPlugin/ImageSourceBridge.h	/^    ImageSourceBridge(CLRImageSource *clrImageSource)$/;"	f	class:ImageSourceBridge
ImageSourceBridge	CLRHostPlugin/CLRHostPlugin/ImageSourceBridge.h	/^class ImageSourceBridge : public ImageSource$/;"	c
ImageSourceBridge.h	CLRHostPlugin/CLRHostPlugin/ImageSourceBridge.h	1;"	F
ImageSourceFactory	CLRHostPlugin/CLRHostInterop/ImageSourceFactory.h	/^    public interface class ImageSourceFactory$/;"	c	namespace:CLROBS
ImageSourceFactory.h	CLRHostPlugin/CLRHostInterop/ImageSourceFactory.h	1;"	F
Impl	libmfx/include/msdk/include/mfxplugin.h	/^    mfxIMPL Impl;$/;"	m	struct:mfxCoreParam
Import	OBSApi/Utility/XConfig.cpp	/^bool XElement::Import(CTSTR lpFile)$/;"	f	class:XElement
ImportProfile	Source/WindowStuff.cpp	/^void OBS::ImportProfile()$/;"	f	class:OBS
ImportSceneCollection	Source/WindowStuff.cpp	/^void OBS::ImportSceneCollection()$/;"	f	class:OBS
In	libmfx/include/msdk/include/mfxstructures.h	/^    mfxFrameInfo    In;$/;"	m
In	libmfx/include/msdk/include/mfxstructures.h	/^    } In, Out;$/;"	m
InVBlank	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    BOOL            InVBlank;$/;"	m	struct:_D3DRASTER_STATUS
IncreaseReference	libmfx/include/msdk/include/mfxplugin++.h	/^    mfxStatus IncreaseReference (mfxFrameData *fd) {$/;"	f	class:MFXCoreInterface
IncreaseReference	libmfx/include/msdk/include/mfxplugin.h	/^    mfxStatus (MFX_CDECL *IncreaseReference) (mfxHDL pthis, mfxFrameData *fd);$/;"	m	struct:mfxCoreInterface
Info	libmfx/include/msdk/include/mfxstructures.h	/^    mfxFrameInfo    Info;$/;"	m
Init	DShowPlugin/DShowPlugin.cpp	/^    inline bool Init()$/;"	f	struct:ColorSelectionData
Init	DShowPlugin/DeviceSource.cpp	/^bool DeviceSource::Init(XElement *data)$/;"	f	class:DeviceSource
Init	GraphicsCapture/GraphicsCaptureSource.cpp	/^bool GraphicsCaptureSource::Init(XElement *data)$/;"	f	class:GraphicsCaptureSource
Init	GraphicsCapture/MemoryCapture.cpp	/^bool MemoryCapture::Init(CaptureInfo &info)$/;"	f	class:MemoryCapture
Init	GraphicsCapture/SharedTexCapture.cpp	/^bool SharedTexCapture::Init(CaptureInfo &info)$/;"	f	class:SharedTexCapture
Init	GraphicsCapture/WindowCapture.cpp	/^bool WindowCapture::Init(CaptureInfo &info)$/;"	f	class:WindowCapture
Init	OBSApi/GraphicsSystem.cpp	/^void GraphicsSystem::Init()$/;"	f	class:GraphicsSystem
Init	QSVHelper/IntelSupport/src/d3d11_allocator.cpp	/^mfxStatus D3D11FrameAllocator::Init(mfxAllocatorParams *pParams)$/;"	f	class:D3D11FrameAllocator
Init	QSVHelper/IntelSupport/src/d3d11_device.cpp	/^mfxStatus CD3D11Device::Init($/;"	f	class:CD3D11Device
Init	QSVHelper/QSVStuff.cpp	/^void Parameters::Init(mfxU16 target_usage, mfxU16 profile, int fps, int keyframe_interval_frames, int bframes, int width, int height, int max_bitrate,$/;"	f	class:Parameters
Init	QSVHelper/SupportStuff.h	/^    void Init(mfxU8 *bs_start, mfxU32 bs_size)$/;"	f	struct:encode_task
Init	Source/BitmapImage.cpp	/^void BitmapImage::Init(void)$/;"	f	class:BitmapImage
Init	Source/BitmapImageSource.cpp	/^    inline bool Init()$/;"	f	struct:ColorSelectionData
Init	Source/D3D10OutputDuplicator.cpp	/^bool D3D10OutputDuplicator::Init(UINT output)$/;"	f	class:D3D10OutputDuplicator
Init	Source/D3D10System.cpp	/^void D3D10System::Init()$/;"	f	class:D3D10System
Init	Source/DesktopImageSource.cpp	/^    inline bool Init()$/;"	f	struct:ColorSelectionData
Init	Source/Encoder_QSV.cpp	/^        void Init(unsigned bframe_delay_, mfxVersion &ver, bool use_cfr, uint64_t frame_ticks_)$/;"	f	struct:<anonymous>::DTSGenerator
Init	Source/FLVFileStream.cpp	/^    bool Init(CTSTR lpFile)$/;"	f	class:FLVFileStream
Init	Source/GlobalSource.cpp	/^    void Init(XElement *data)$/;"	f	class:GlobalSource
Init	Source/MP4FileStream.cpp	/^    bool Init(CTSTR lpFile)$/;"	f	class:MP4FileStream
Init	Source/RTMPPublisher.cpp	/^bool RTMPPublisher::Init(UINT tcpBufferSize)$/;"	f	class:RTMPPublisher
Init	lame/dshow/Encoder.cpp	/^HRESULT CEncoder::Init()$/;"	f	class:CEncoder
Init	libmfx/include/msdk/include/mfxaudio++.h	/^    virtual mfxStatus Init(mfxAudioParam *par) { return MFXAudioDECODE_Init(m_session, par); }$/;"	f	class:MFXAudioDECODE
Init	libmfx/include/msdk/include/mfxaudio++.h	/^    virtual mfxStatus Init(mfxAudioParam *par) { return MFXAudioENCODE_Init(m_session, par); }$/;"	f	class:MFXAudioENCODE
Init	libmfx/include/msdk/include/mfxaudio++.h	/^    virtual mfxStatus Init(mfxIMPL impl, mfxVersion *ver) { return MFXInit(impl, ver, &m_session); }$/;"	f	class:MFXAudioSession
Init	libmfx/include/msdk/include/mfxplugin.h	/^    mfxStatus (MFX_CDECL *Init)(mfxHDL pthis, mfxVideoParam *par);$/;"	m	struct:mfxVideoCodecPlugin
Init	libmfx/include/msdk/include/mfxvideo++.h	/^    virtual mfxStatus Init(mfxIMPL impl, mfxVersion *ver) { return MFXInit(impl, ver, &m_session); }$/;"	f	class:MFXVideoSession
Init	libmfx/include/msdk/include/mfxvideo++.h	/^    virtual mfxStatus Init(mfxVideoParam *par) { return MFXVideoDECODE_Init(m_session, par); }$/;"	f	class:MFXVideoDECODE
Init	libmfx/include/msdk/include/mfxvideo++.h	/^    virtual mfxStatus Init(mfxVideoParam *par) { return MFXVideoENCODE_Init(m_session, par); }$/;"	f	class:MFXVideoENCODE
Init	libmfx/include/msdk/include/mfxvideo++.h	/^    virtual mfxStatus Init(mfxVideoParam *par) { return MFXVideoVPP_Init(m_session, par); }$/;"	f	class:MFXVideoVPP
Init	libmfx/src/mfx_dxva2_device.cpp	/^bool D3D9Device::Init(const mfxU32 adapterNum)$/;"	f	class:D3D9Device
Init	libmfx/src/mfx_dxva2_device.cpp	/^bool DXGI1Device::Init(const mfxU32 adapterNum)$/;"	f	class:DXGI1Device
Init	libmfx/src/mfx_library_iterator.cpp	/^mfxStatus MFXLibraryIterator::Init(eMfxImplType implType, mfxIMPL implInterface, const mfxU32 adapterNum, int storageID)$/;"	f	class:MFX::MFXLibraryIterator
InitAddExt	QSVHelper/QSVStuff.h	/^    void InitAddExt(T& t, decltype(mfxExtBuffer::BufferId) id) { zero(t); t.Header.BufferId = id; t.Header.BufferSz = sizeof(T); AddExt(t); }$/;"	f	struct:Parameters
InitAudioData	OBSApi/AudioSource.cpp	/^void AudioSource::InitAudioData(bool bFloat, UINT channels, UINT samplesPerSec, UINT bitsPerSample, UINT blockSize, DWORD channelMask)$/;"	f	class:AudioSource
InitBuffer	Source/DataPacketHelpers.h	/^    void InitBuffer()$/;"	f	struct:BufferedDataPacket
InitBufferedPackets	Source/FLVFileStream.cpp	/^    void InitBufferedPackets()$/;"	f	class:FLVFileStream
InitBufferedPackets	Source/MP4FileStream.cpp	/^    void InitBufferedPackets()$/;"	f	class:MP4FileStream
InitClient	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserWrapper.cs	/^        private void InitClient(BrowserSource browserSource)$/;"	m	class:Browser.BrowserWrapper	file:
InitColorControl	OBSApi/ColorControl.cpp	/^void InitColorControl(HINSTANCE hInstance)$/;"	f
InitConfigDlg	lame/ACM/AEncodeProperties.cpp	/^bool AEncodeProperties::InitConfigDlg(HWND HwndDlg)$/;"	f	class:AEncodeProperties
InitD3D8Capture	GraphicsCapture/GraphicsCaptureHook/D3D8Capture.cpp	/^bool InitD3D8Capture()$/;"	f
InitD3D9	libmfx/src/mfx_dxva2_device.cpp	/^bool DXVA2Device::InitD3D9(const mfxU32 adapterNum)$/;"	f	class:DXVA2Device
InitD3D9Capture	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^bool InitD3D9Capture()$/;"	f
InitDDrawCapture	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	/^bool InitDDrawCapture()$/;"	f
InitDXGI1	libmfx/src/mfx_dxva2_device.cpp	/^bool DXVA2Device::InitDXGI1(const mfxU32 adapterNum)$/;"	f	class:DXVA2Device
InitDXGICapture	GraphicsCapture/GraphicsCaptureHook/DXGICapture.cpp	/^bool InitDXGICapture()$/;"	f
InitEncoderData	Source/RTMPPublisher.cpp	/^void RTMPPublisher::InitEncoderData()$/;"	f	class:RTMPPublisher
InitFolder	libmfx/src/mfx_library_iterator.cpp	/^mfxStatus MFXLibraryIterator::InitFolder(eMfxImplType implType, mfxIMPL implInterface, const mfxU32 adapterNum, const msdk_disp_char * path)$/;"	f	class:MFX::MFXLibraryIterator
InitFrame	QSVHelper/SupportStuff.h	/^void InitFrame(mfxFrameData &frame, mfxU8 *Y, mfxU8 *UV, mfxU8 *V, mfxU16 pitch)$/;"	f
InitGLCapture	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^bool InitGLCapture()$/;"	f
InitGainAnalysis	lame/libmp3lame/gain_analysis.c	/^InitGainAnalysis(replaygain_t * rgData, long samplefreq)$/;"	f
InitHotkeyExControl	OBSApi/HotkeyControlEx.cpp	/^void InitHotkeyExControl(HINSTANCE hInstance)$/;"	f
InitMP3	lame/mpglib/interface.c	/^InitMP3(PMPSTR mp)$/;"	f
InitMemory	QSVHelper/WindowsStuff.h	/^    void InitMemory()$/;"	f	struct:NamedSharedMemory
InitNVENCEncoder	ObsNvenc/src/nvmain.cpp	/^extern "C" __declspec(dllexport) bool __cdecl InitNVENCEncoder(ConfigFile **appConfig)$/;"	f
InitNVENCEncoder	Source/Encoder_NVENC.cpp	/^void InitNVENCEncoder(bool log=true)$/;"	f
InitPropertiesDialog	lame/dshow/PropPage.cpp	/^void CMpegAudEncPropertyPage::InitPropertiesDialog(HWND hwndParent)$/;"	f	class:CMpegAudEncPropertyPage
InitPropertiesDialog	lame/dshow/PropPage_adv.cpp	/^void CMpegAudEncPropertyPageAdv::InitPropertiesDialog(HWND hwndParent)$/;"	f	class:CMpegAudEncPropertyPageAdv
InitRC4Encryption	librtmp/handshake.h	/^static void InitRC4Encryption$/;"	f
InitRegistry	libmfx/src/mfx_library_iterator.cpp	/^mfxStatus MFXLibraryIterator::InitRegistry(eMfxImplType implType, mfxIMPL implInterface, const mfxU32 adapterNum, int storageID)$/;"	f	class:MFX::MFXLibraryIterator
InitSEIUserData	QSVHelper/SupportStuff.h	/^std::vector<mfxU8> InitSEIUserData(bool use_cbr, const Parameters& params, const mfxVersion& ver)$/;"	f
InitSockets	Source/RTMPStuff.cpp	/^void InitSockets()$/;"	f
InitVbrTag	lame/libmp3lame/VbrTag.c	/^InitVbrTag(lame_global_flags * gfp)$/;"	f
InitVolumeControl	OBSApi/VolumeControl.cpp	/^void InitVolumeControl(HINSTANCE hInst)$/;"	f
InitVolumeMeter	OBSApi/VolumeMeter.cpp	/^void InitVolumeMeter(HINSTANCE hInst)$/;"	f
InitXT	OBSApi/Utility/XT.cpp	/^BOOL STDCALL InitXT(CTSTR logFile, CTSTR allocatorName)$/;"	f
InitXTLog	OBSApi/Utility/XT.cpp	/^void STDCALL InitXTLog(CTSTR logFile)$/;"	f
InitialDelayInKB	libmfx/include/msdk/include/mfxstructures.h	/^                mfxU16  InitialDelayInKB;$/;"	m
Initialize	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserPluginManager.cs	/^        internal void Initialize()$/;"	m	class:RemoteBrowser.BrowserPluginManager	file:
Initialize	CLRHostPlugin/CLRHostPlugin/CLRHost.cpp	/^CLRHost::Initialize() $/;"	f	class:CLRHost
Initialize	DShowPlugin/DeviceAudio.cpp	/^bool DeviceAudioSource::Initialize(DeviceSource *parent)$/;"	f	class:DeviceAudioSource
Initialize	Source/MMDeviceAudioSource.cpp	/^bool MMDeviceAudioSource::Initialize(bool bMic, CTSTR lpID)$/;"	f	class:MMDeviceAudioSource
Initialize	minhook/src/hook.cpp	/^	MH_STATUS Initialize()$/;"	f	namespace:MinHook
InitializeBuffer	Source/RTMPPublisher.cpp	/^void RTMPPublisher::InitializeBuffer()$/;"	f	class:RTMPPublisher
InitializeBuffer	minhook/src/buffer.cpp	/^	void InitializeBuffer()$/;"	f	namespace:MinHook
InitializeBuffers	QSVHelper/Encoder.h	/^    void InitializeBuffers(ipc_init_response &init_res)$/;"	f	struct:Encoder
InitializeEncoder	QSVHelper/Encoder.h	/^    mfxStatus InitializeEncoder()$/;"	f	struct:Encoder
InitializeExceptionHandler	Source/Main.cpp	/^void InitializeExceptionHandler()$/;"	f
InitializeGLCaptureStuff	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^static inline bool InitializeGLCaptureStuff()$/;"	f	file:
InitializeMFX	QSVHelper/Encoder.h	/^    mfxStatus InitializeMFX(T& impl, bool force=false)$/;"	f	struct:Encoder
InitializeSharedMemoryCPUCapture	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	/^UINT InitializeSharedMemoryCPUCapture(UINT textureSize, DWORD *totalSize, MemoryCopyData **copyData, LPBYTE *textureBuffers)$/;"	f
InitializeSharedMemoryGPUCapture	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	/^UINT InitializeSharedMemoryGPUCapture(SharedTexData **texData)$/;"	f
InjectLibrary	GraphicsCapture/GraphicsCaptureSource.cpp	/^BOOL WINAPI InjectLibrary(HANDLE hProcess, CTSTR lpDLL)$/;"	f
InjectLibrary	injectHelper/injectHelper.c	/^BOOL WINAPI InjectLibrary(HANDLE hProcess, const wchar_t *pDLL, DWORD dwLen)$/;"	f
InjectLibrarySafe	injectHelper/injectHelper.c	/^BOOL WINAPI InjectLibrarySafe(DWORD threadID, const wchar_t *pDLL, DWORD dwLen)$/;"	f
Inline.h	OBSApi/Utility/Inline.h	1;"	F
InputStream	libmfx/include/msdk/include/mfxstructures.h	/^    mfxVPPCompInputStream *InputStream;     $/;"	m
InputTypeDefined	lame/dshow/Mpegac.cpp	/^STDMETHODIMP CMpegAudEnc::InputTypeDefined()$/;"	f	class:CMpegAudEnc
Insert	OBSApi/Utility/Template.h	/^    inline void Insert(unsigned int index, const T& val) { DumpError(TEXT("Illegal Insert into SafeList")); }$/;"	f	class:SafeList
Insert	OBSApi/Utility/Template.h	/^    inline void Insert(unsigned int index, const T& val)$/;"	f	class:CircularList
Insert	OBSApi/Utility/Template.h	/^    inline void Insert(unsigned int index, const T& val)$/;"	f	class:List
Insert	OBSApi/Utility/XString.h	/^    inline void Insert(unsigned int index, CTSTR lpStr)$/;"	f	class:StringList
Insert	OBSApi/Utility/XString.h	/^    inline void Insert(unsigned int index, const String &val)$/;"	f	class:StringList
Insert	Source/WindowStuff.cpp	/^        bool Insert(String &str)$/;"	f	struct:<anonymous>::ClipboardHelper
InsertAfterChild	lame/ACM/tinyxml/tinyxml.cpp	/^TiXmlNode* TiXmlNode::InsertAfterChild( TiXmlNode* afterThis, const TiXmlNode& addThis )$/;"	f	class:TiXmlNode
InsertArray	OBSApi/Utility/Template.h	/^    inline void InsertArray(unsigned int index, const T *new_array, unsigned int n)$/;"	f	class:List
InsertArray	OBSApi/Utility/XString.h	/^    inline void InsertArray(unsigned int index, const String *new_array, unsigned int n)$/;"	f	class:StringList
InsertAudioFilter	OBSApi/AudioSource.cpp	/^void AudioSource::InsertAudioFilter(UINT pos, AudioFilter *filter) {audioFilters.Insert(pos, filter);}$/;"	f	class:AudioSource
InsertBeforeChild	lame/ACM/tinyxml/tinyxml.cpp	/^TiXmlNode* TiXmlNode::InsertBeforeChild( TiXmlNode* beforeThis, const TiXmlNode& addThis )$/;"	f	class:TiXmlNode
InsertChar	OBSApi/Utility/XString.cpp	/^String& String::InsertChar(UINT pos, TCHAR chr)$/;"	f	class:String
InsertElement	CLRHostPlugin/CLRHostInterop/XElement.cpp	/^CLROBS::XElement^ CLROBS::XElement::InsertElement($/;"	f	class:CLROBS::XElement
InsertElement	OBSApi/Utility/XConfig.cpp	/^XElement* XElement::InsertElement(UINT pos, CTSTR lpName)$/;"	f	class:XElement
InsertEndChild	lame/ACM/tinyxml/tinyxml.cpp	/^TiXmlNode* TiXmlNode::InsertEndChild( const TiXmlNode& addThis )$/;"	f	class:TiXmlNode
InsertImageSource	OBSApi/Scene.cpp	/^SceneItem* Scene::InsertImageSource(UINT pos, XElement *sourceElement)$/;"	f	class:Scene
InsertList	OBSApi/Utility/Template.h	/^    inline void InsertList(unsigned int index, const List<T>& list)$/;"	f	class:List
InsertList	OBSApi/Utility/XString.h	/^    inline void InsertList(unsigned int index, const StringList& list)$/;"	f	class:StringList
InsertNew	OBSApi/Utility/Template.h	/^    inline T* InsertNew(int index)$/;"	f	class:CircularList
InsertNew	OBSApi/Utility/Template.h	/^    inline T* InsertNew(int index)$/;"	f	class:List
InsertSourceItem	Source/API.cpp	/^void OBS::InsertSourceItem(UINT index, LPWSTR name, bool checked)$/;"	f	class:OBS
InsertString	OBSApi/Utility/XString.cpp	/^void String::InsertString(UINT dwPos, CTSTR str)$/;"	f	class:String
InstallService.cpp	Source/InstallService.cpp	1;"	F
InstallUserService	Source/InstallService.cpp	/^bool InstallUserService(TCHAR *path)$/;"	f
Instance	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserManager.cs	/^        public static BrowserManager Instance$/;"	p	class:Browser.BrowserManager
Instance	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public static BrowserSettings Instance$/;"	p	class:Shared.BrowserSettings
InstanceSettings	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^            public BrowserInstanceSettings InstanceSettings { get; set; }$/;"	p	class:Shared.BrowserSettings.SerializedSettings
InstanceSettings	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public BrowserInstanceSettings InstanceSettings$/;"	p	class:Shared.BrowserSettings
Int64String	OBSApi/Utility/XString.cpp	/^String Int64String(INT64 i, int radix)$/;"	f
IntRefCycleSize	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16      IntRefCycleSize;$/;"	m
IntRefQPDelta	libmfx/include/msdk/include/mfxstructures.h	/^    mfxI16      IntRefQPDelta;$/;"	m
IntRefType	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16      IntRefType;$/;"	m
IntString	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.h	/^inline string IntString(DWORD val)$/;"	f
IntString	OBSApi/Utility/XString.cpp	/^String IntString(int i, int radix)$/;"	f
IntValue	lame/ACM/tinyxml/tinyxml.cpp	/^const int TiXmlAttribute::IntValue() const$/;"	f	class:TiXmlAttribute
InterPredBlockSize	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16      InterPredBlockSize;$/;"	m
Interleaved	libmfx/include/msdk/include/mfxstructures.h	/^            mfxU16  Interleaved;$/;"	m
InterleavedDec	libmfx/include/msdk/include/mfxstructures.h	/^            mfxU16  InterleavedDec;$/;"	m
InterpolateQuat	OBSApi/Utility/XMath.cpp	/^Quat InterpolateQuat(const Quat &from, const Quat &to, float t)$/;"	f
Intersects	OBSApi/Utility/XMath.h	/^    inline BOOL Intersects(const Bounds &test, float epsilon=EPSILON) const$/;"	f	struct:Bounds
IntersectsOBB	OBSApi/Utility/XMath.cpp	/^BOOL Bounds::IntersectsOBB(const Bounds &test, const Matrix &transform) const$/;"	f	class:Bounds
IntraPredBlockSize	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16      IntraPredBlockSize;$/;"	m
Inv	OBSApi/Utility/XMath.h	/^    inline Quat& Inv()                              {w=-w;return *this;}\/\/{x=-x;y=-y;z=-z;return *this;}$/;"	f	struct:Quat
Invalid01	OBSApi/APIInterface.h	/^    virtual void Invalid01() {}$/;"	f	class:APIInterface
Invalid02	OBSApi/APIInterface.h	/^    virtual void Invalid02() {}$/;"	f	class:APIInterface
Invalid03	OBSApi/APIInterface.h	/^    virtual void Invalid03() const {}$/;"	f	class:APIInterface
Inverse	OBSApi/Utility/XMath.cpp	/^Matrix& Matrix::Inverse()$/;"	f	class:Matrix
InvertPre47Scenes	Source/Main.cpp	/^void InvertPre47Scenes()$/;"	f
Is64BitWindows	GraphicsCapture/GraphicsCapture.h	/^inline BOOL Is64BitWindows()$/;"	f
IsAltDoSwitch	scenesw/SceneSwitcher.h	/^	inline bool IsAltDoSwitch()     const {return altDoSwitch!=0;}$/;"	f	class:SceneSwitcher
IsApplyingTemplate	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public bool IsApplyingTemplate { get; set; }$/;"	p	class:Shared.BrowserSourceSettings
IsClosingToken	Source/CodeTokenizer.cpp	/^BOOL CodeTokenizer::IsClosingToken(const String &token, CTSTR lpTokenPriority)$/;"	f	class:CodeTokenizer
IsCodePadding	minhook/src/trampoline.cpp	/^	bool IsCodePadding(uint8_t* pInst, size_t size)$/;"	f	namespace:MinHook::<anonymous>
IsCoreSet	libmfx/include/msdk/include/mfxplugin++.h	/^    bool IsCoreSet() {$/;"	f	class:MFXCoreInterface
IsCropped	OBSApi/Scene.h	/^    inline bool IsCropped() const               {return !(CloseFloat(crop.w, 0.0f) && CloseFloat(crop.x, 0.0f) && CloseFloat(crop.y, 0.0f) && CloseFloat(crop.z, 0.0f));}$/;"	f	class:SceneItem
IsCurrent	extras/dxgi1_2.h	/^        BOOL ( STDMETHODCALLTYPE *IsCurrent )( $/;"	m	struct:IDXGIFactory2Vtbl
IsData	OBSApi/Utility/XConfig.h	/^    inline bool IsData() const     {return type == XConfig_Data;}$/;"	f	class:XBaseItem
IsElement	OBSApi/Utility/XConfig.h	/^    inline bool IsElement() const  {return type == XConfig_Element;}$/;"	f	class:XBaseItem
IsEmpty	OBSApi/Utility/XString.h	/^    inline BOOL    IsEmpty() const              {return !lpString || !*lpString || curLength == 0;}$/;"	f	class:String
IsExecutableAddress	minhook/src/hook.cpp	/^	bool IsExecutableAddress(void* pAddress)$/;"	f	namespace:MinHook::<anonymous>
IsExecutableAddress	minhook/src/trampoline.cpp	/^	bool IsExecutableAddress(void* pAddress)$/;"	f	namespace:MinHook::<anonymous>
IsInitialized	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserPluginManager.cs	/^        internal bool IsInitialized { get; private set; }$/;"	p	class:RemoteBrowser.BrowserPluginManager
IsInternalJump	minhook/src/trampoline.cpp	/^	inline bool IsInternalJump(void* pTarget, uintptr_t dest)$/;"	f	namespace:MinHook::<anonymous>
IsKnownQSVCPUPlatform	Source/Encoder_QSV.cpp	/^bool IsKnownQSVCPUPlatform()$/;"	f
IsLoading	OBSApi/Utility/Template.h	/^    BOOL IsLoading() {return FALSE;}$/;"	f	class:BufferOutputSerializer
IsLoading	OBSApi/Utility/Template.h	/^    BOOL IsLoading() {return TRUE;}$/;"	f	class:BufferInputSerializer
IsLoading	OBSApi/Utility/XFile.h	/^    BOOL IsLoading() {return FALSE;}$/;"	f	class:XFileOutputSerializer
IsLoading	OBSApi/Utility/XFile.h	/^    BOOL IsLoading() {return TRUE;}$/;"	f	class:XFileInputSerializer
IsMuted	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/RenderProcess.cs	/^        public bool? IsMuted$/;"	p	class:Browser.RenderProcess
IsMuted	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public bool IsMuted { get; set; }$/;"	p	class:Shared.BrowserSourceSettings
IsOpen	OBSApi/Utility/XConfig.h	/^    inline bool IsOpen() const {return RootElement != NULL;}$/;"	f	class:XConfig
IsOpen	OBSApi/Utility/XFile_Windows.cpp	/^BOOL XFile::IsOpen()$/;"	f	class:XFile
IsPES	lame/dshow/Encoder.h	/^    BOOL IsPES() const$/;"	f	class:CEncoder
IsPow2	Source/D3D10Texture.cpp	/^inline bool IsPow2(UINT num)$/;"	f
IsRunning	Source/OBS.h	/^    inline bool IsRunning()    const {return bRunning;}$/;"	f	class:OBS
IsRunning	scenesw/SceneSwitcher.h	/^	inline bool IsRunning()		    const {return thread!=0;}$/;"	f	class:SceneSwitcher
IsSafeFilename	OBSApi/Utility/XFile_Windows.cpp	/^BOOL IsSafeFilename(CTSTR path)$/;"	f
IsSafePath	Source/Updater.cpp	/^BOOL IsSafePath (CTSTR path)$/;"	f
IsSame	QSVHelper/IntelSupport/include/base_allocator.h	/^    struct IsSame$/;"	s	class:BaseFrameAllocator
IsSelected	OBSApi/Scene.h	/^    inline bool IsSelected() const              {return bSelected;}$/;"	f	class:SceneItem
IsShowingAdvancedProperties	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public bool IsShowingAdvancedProperties { get; set; }$/;"	p	class:Shared.BrowserSourceSettings
IsSmartOutput	lame/ACM/ACM.cpp	/^bool ACM::IsSmartOutput(const int frequency, const int bitrate, const int channels) const$/;"	f	class:ACM
IsStartAuto	scenesw/SceneSwitcher.h	/^	inline bool IsStartAuto()	    const {return startAuto!=0;}$/;"	f	class:SceneSwitcher
IsStereoEnabled	extras/dxgi1_2.h	/^        BOOL ( STDMETHODCALLTYPE *IsStereoEnabled )( $/;"	m	struct:IDXGIDisplayControlVtbl
IsSystemSoundsSession	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/RenderProcess.cs	/^        int IsSystemSoundsSession();$/;"	m	interface:Browser.IAudioSessionControl2
IsTemporaryMonoSupported	extras/dxgi1_2.h	/^        BOOL ( STDMETHODCALLTYPE *IsTemporaryMonoSupported )( $/;"	m	struct:IDXGISwapChain1Vtbl
IsTestVersion	Source/API.cpp	/^    virtual bool IsTestVersion() const {return 0;}$/;"	f	class:OBSAPIInterface
IsTestVersion	Source/API.cpp	/^    virtual bool IsTestVersion() const {return 1;}$/;"	f	class:OBSAPIInterface
IsValid	CLRHostPlugin/CLRHostPlugin/CLRObject.h	/^    virtual bool IsValid() { return (objectRef != nullptr && objectType != nullptr ); }$/;"	f	class:CLRObject
IsValid	OBSApi/Utility/XString.h	/^    inline BOOL    IsValid() const              {return !IsEmpty();}$/;"	f	class:String
IsValidFileName	Source/SettingsGeneral.cpp	/^BOOL IsValidFileName(CTSTR lpFileName)$/;"	f
IsValidMediaType	DShowPlugin/CaptureFilter.cpp	/^bool CapturePin::IsValidMediaType(const AM_MEDIA_TYPE *pmt) const$/;"	f	class:CapturePin
IsVbrTag	lame/libmp3lame/VbrTag.c	/^IsVbrTag(const unsigned char *buf)$/;"	f	file:
IsWebrootLoaded	Source/OBS.cpp	/^BOOL IsWebrootLoaded()$/;"	f
IsWhiteSpace	lame/ACM/tinyxml/tinyxml.h	/^	static bool IsWhiteSpace( int c )		{ return ( isspace( c ) || c == '\\n' || c == '\\r' ); }$/;"	f	class:TiXmlBase
IsWhiteSpaceCondensed	lame/ACM/tinyxml/tinyxml.h	/^	static bool IsWhiteSpaceCondensed()						{ return condenseWhiteSpace; }$/;"	f	class:TiXmlBase
IsWindowedStereoEnabled	extras/dxgi1_2.h	/^        BOOL ( STDMETHODCALLTYPE *IsWindowedStereoEnabled )( $/;"	m	struct:IDXGIFactory2Vtbl
ItemExists	OBSApi/Utility/Template.h	/^    inline BOOL ItemExists(unsigned int id)$/;"	f	class:SafeList
ItemModifyType	Source/OBS.h	/^enum ItemModifyType$/;"	g
ItemModifyType_CropBottom	Source/OBS.h	/^    ItemModifyType_CropBottom$/;"	e	enum:ItemModifyType
ItemModifyType_CropBottomLeft	Source/OBS.h	/^    ItemModifyType_CropBottomLeft,$/;"	e	enum:ItemModifyType
ItemModifyType_CropBottomRight	Source/OBS.h	/^    ItemModifyType_CropBottomRight,$/;"	e	enum:ItemModifyType
ItemModifyType_CropLeft	Source/OBS.h	/^    ItemModifyType_CropLeft,$/;"	e	enum:ItemModifyType
ItemModifyType_CropRight	Source/OBS.h	/^    ItemModifyType_CropRight,$/;"	e	enum:ItemModifyType
ItemModifyType_CropTop	Source/OBS.h	/^    ItemModifyType_CropTop,$/;"	e	enum:ItemModifyType
ItemModifyType_CropTopLeft	Source/OBS.h	/^    ItemModifyType_CropTopLeft,$/;"	e	enum:ItemModifyType
ItemModifyType_CropTopRight	Source/OBS.h	/^    ItemModifyType_CropTopRight,$/;"	e	enum:ItemModifyType
ItemModifyType_Move	Source/OBS.h	/^    ItemModifyType_Move,$/;"	e	enum:ItemModifyType
ItemModifyType_None	Source/OBS.h	/^    ItemModifyType_None,$/;"	e	enum:ItemModifyType
ItemModifyType_ScaleBottom	Source/OBS.h	/^    ItemModifyType_ScaleBottom,$/;"	e	enum:ItemModifyType
ItemModifyType_ScaleBottomLeft	Source/OBS.h	/^    ItemModifyType_ScaleBottomLeft,$/;"	e	enum:ItemModifyType
ItemModifyType_ScaleBottomRight	Source/OBS.h	/^    ItemModifyType_ScaleBottomRight,$/;"	e	enum:ItemModifyType
ItemModifyType_ScaleLeft	Source/OBS.h	/^    ItemModifyType_ScaleLeft,$/;"	e	enum:ItemModifyType
ItemModifyType_ScaleRight	Source/OBS.h	/^    ItemModifyType_ScaleRight,$/;"	e	enum:ItemModifyType
ItemModifyType_ScaleTop	Source/OBS.h	/^    ItemModifyType_ScaleTop,$/;"	e	enum:ItemModifyType
ItemModifyType_ScaleTopLeft	Source/OBS.h	/^    ItemModifyType_ScaleTopLeft,$/;"	e	enum:ItemModifyType
ItemModifyType_ScaleTopRight	Source/OBS.h	/^    ItemModifyType_ScaleTopRight,$/;"	e	enum:ItemModifyType
Iter	QSVHelper/IntelSupport/include/base_allocator.h	/^    typedef std::list<mfxFrameAllocResponse>::iterator Iter;$/;"	t	class:BaseFrameAllocator
IterateChildren	lame/ACM/tinyxml/tinyxml.cpp	/^TiXmlNode* TiXmlNode::IterateChildren( TiXmlNode* previous ) const$/;"	f	class:TiXmlNode
IterateChildren	lame/ACM/tinyxml/tinyxml.cpp	/^TiXmlNode* TiXmlNode::IterateChildren( const std::string& val, TiXmlNode* previous ) const$/;"	f	class:TiXmlNode
Izero	libfaac/filtbank.c	/^static double Izero(double x)$/;"	f	file:
JAN02_1980	librtmp/hashswf.c	339;"	d	file:
JCC_ABS	minhook/src/trampoline.cpp	/^	struct JCC_ABS$/;"	s	namespace:MinHook::<anonymous>	file:
JCC_REL	minhook/src/trampoline.cpp	/^	typedef JMP_ABS CALL_ABS, JCC_REL;$/;"	t	namespace:MinHook::<anonymous>	file:
JMP_ABS	minhook/src/hook.cpp	/^	struct JMP_ABS$/;"	s	namespace:MinHook::<anonymous>	file:
JMP_ABS	minhook/src/trampoline.cpp	/^	struct JMP_ABS$/;"	s	namespace:MinHook::<anonymous>	file:
JMP_REL	minhook/src/hook.cpp	/^	struct JMP_REL$/;"	s	namespace:MinHook::<anonymous>	file:
JMP_REL	minhook/src/trampoline.cpp	/^	struct JMP_REL$/;"	s	namespace:MinHook::<anonymous>	file:
JMP_REL_SHORT	minhook/src/hook.cpp	/^	struct JMP_REL_SHORT$/;"	s	namespace:MinHook::<anonymous>	file:
JMP_REL_SHORT	minhook/src/trampoline.cpp	/^	struct JMP_REL_SHORT$/;"	s	namespace:MinHook::<anonymous>	file:
JOINT_STEREO	lame/include/lame.h	/^  JOINT_STEREO,$/;"	e	enum:MPEG_mode_e
JPEGChromaFormat	libmfx/include/msdk/include/mfxstructures.h	/^            mfxU16  JPEGChromaFormat;$/;"	m
JPEGColorFormat	libmfx/include/msdk/include/mfxstructures.h	/^            mfxU16  JPEGColorFormat;$/;"	m
Java	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public CefState Java { get; set; }$/;"	p	class:Shared.BrowserInstanceSettings
JavaScript	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public CefState JavaScript { get; set; }$/;"	p	class:Shared.BrowserInstanceSettings
JavaScriptAccessClipboard	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public CefState JavaScriptAccessClipboard { get; set; }$/;"	p	class:Shared.BrowserInstanceSettings
JavaScriptCloseWindows	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public CefState JavaScriptCloseWindows { get; set; }$/;"	p	class:Shared.BrowserInstanceSettings
JavaScriptDomPaste	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public CefState JavaScriptDomPaste { get; set; }$/;"	p	class:Shared.BrowserInstanceSettings
JavaScriptFlags	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public string JavaScriptFlags { get; set; }$/;"	p	class:Shared.BrowserRuntimeSettings
JavaScriptOpenWindows	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public CefState JavaScriptOpenWindows { get; set; }$/;"	p	class:Shared.BrowserInstanceSettings
Join	OBSApi/Utility/XString.h	/^    inline String Join(String separator)$/;"	f	class:StringList
JoinFilterGraph	DShowPlugin/CaptureFilter.cpp	/^STDMETHODIMP CaptureFilter::JoinFilterGraph(IFilterGraph *pGraph, LPCWSTR pName)   {graph = pGraph; return NOERROR;}$/;"	f	class:CaptureFilter
JoinSession	libmfx/include/msdk/include/mfxaudio++.h	/^    virtual mfxStatus JoinSession(mfxSession child_session) { return MFXJoinSession(m_session, child_session);}$/;"	f	class:MFXAudioSession
JoinSession	libmfx/include/msdk/include/mfxvideo++.h	/^    virtual mfxStatus JoinSession(mfxSession child_session) { return MFXJoinSession(m_session, child_session);}$/;"	f	class:MFXVideoSession
KBD_WINDOW	libfaac/filtbank.h	42;"	d
KEY	CLRHostPlugin/CLRHostPlugin/Localization.h	7;"	d
KEYBYTES	librtmp/handshake.h	584;"	d
KEY_LAME_ENCODER	lame/dshow/Mpegac.h	26;"	d
KISS_FFT_H	libfaac/kiss_fft/kiss_fft.h	2;"	d
KISS_FTR_H	libfaac/kiss_fft/kiss_fftr.h	2;"	d
KOR_mc	libfaac/coder.h	/^    double VAR_mc[LPC+1][BLOCK_LEN_LONG], KOR_mc[LPC+1][BLOCK_LEN_LONG];$/;"	m
KSAUDIO_SPEAKER_2POINT1	OBSApi/AudioSource.cpp	26;"	d	file:
KSAUDIO_SPEAKER_3POINT1	OBSApi/AudioSource.cpp	25;"	d	file:
KSAUDIO_SPEAKER_4POINT1	OBSApi/AudioSource.cpp	24;"	d	file:
K_mc	libfaac/coder.h	/^    double K_mc[LPC+1][BLOCK_LEN_LONG], R_mc[LPC+1][BLOCK_LEN_LONG];$/;"	m
Keys	OBSApi/Utility/ConfigFile.h	/^    List<ConfigKey> Keys;$/;"	m	struct:ConfigSection
Kill	OBSApi/Utility/ComPtr.hpp	/^	inline void Kill()$/;"	f	class:ComPtr
Kill	QSVHelper/ComPtr.hpp	/^	inline void Kill()$/;"	f	class:ComPtr
KillSpaces	OBSApi/Utility/XString.h	/^    inline String& KillSpaces()                 {if(lpString) curLength = slen(sfix(lpString)); return *this;}$/;"	f	class:String
KillThreads	DShowPlugin/DeviceSource.cpp	/^void DeviceSource::KillThreads()$/;"	f	class:DeviceSource
L3psycho_anal_vbr	lame/libmp3lame/psymodel.c	/^L3psycho_anal_vbr(lame_internal_flags * gfc,$/;"	f
LAMEHEADERSIZE	lame/libmp3lame/VbrTag.c	61;"	d	file:
LAME_ALPHA_VERSION	lame/libmp3lame/version.h	41;"	d
LAME_BADBITRATE	lame/include/lame.h	/^    LAME_BADBITRATE       = -11,$/;"	e
LAME_BADBITRATE	lame/libmp3lame/lameerror.h	/^    LAME_BADBITRATE = -11,$/;"	e
LAME_BADSAMPFREQ	lame/include/lame.h	/^    LAME_BADSAMPFREQ      = -12,$/;"	e
LAME_BADSAMPFREQ	lame/libmp3lame/lameerror.h	/^    LAME_BADSAMPFREQ = -12,$/;"	e
LAME_BETA_VERSION	lame/libmp3lame/version.h	42;"	d
LAME_BITSTREAM_H	lame/libmp3lame/bitstream.h	23;"	d
LAME_BRHIST_H	lame/frontend/brhist.h	23;"	d
LAME_CONSOLE_H	lame/frontend/console.h	10;"	d
LAME_DEFAULT_QUALITY	lame/libmp3lame/lame.c	64;"	d	file:
LAME_ENCODER_H	lame/libmp3lame/encoder.h	24;"	d
LAME_FFT_H	lame/libmp3lame/fft.h	23;"	d
LAME_GENERICERROR	lame/include/lame.h	/^    LAME_GENERICERROR     =  -1,$/;"	e
LAME_GENERICERROR	lame/libmp3lame/lameerror.h	/^    LAME_GENERICERROR = -1,$/;"	e
LAME_GET_AUDIO_H	lame/frontend/get_audio.h	25;"	d
LAME_GLOBAL_FLAGS_H	lame/libmp3lame/lame_global_flags.h	2;"	d
LAME_GPKPLOTTING_H	lame/frontend/gpkplotting.h	23;"	d
LAME_GTKANAL_H	lame/libmp3lame/lame-analysis.h	23;"	d
LAME_GTKCONTROL_H	lame/frontend/gtkanal.h	20;"	d
LAME_ID	lame/libmp3lame/util.h	486;"	d
LAME_ID3_H	lame/libmp3lame/id3tag.h	3;"	d
LAME_INTERNALERROR	lame/include/lame.h	/^    LAME_INTERNALERROR    = -13,$/;"	e
LAME_INTERNALERROR	lame/libmp3lame/lameerror.h	/^    LAME_INTERNALERROR = -13,$/;"	e
LAME_INTRIN_H	lame/libmp3lame/vector/lame_intrin.h	24;"	d
LAME_L3SIDE_H	lame/libmp3lame/l3side.h	23;"	d
LAME_LAMETIME_H	lame/frontend/lametime.h	23;"	d
LAME_LAME_H	lame/include/lame.h	25;"	d
LAME_LIBRARY_BUILD	lame/config.h	102;"	d
LAME_LIBRARY_BUILD	lame/configMS.h	102;"	d
LAME_MACHINE_H	lame/libmp3lame/machine.h	23;"	d
LAME_MAJOR_VERSION	lame/libmp3lame/version.h	37;"	d
LAME_MAXALBUMART	lame/include/lame.h	1296;"	d
LAME_MAXMP3BUFFER	lame/include/lame.h	1301;"	d
LAME_MINOR_VERSION	lame/libmp3lame/version.h	38;"	d
LAME_NEWMDCT_H	lame/libmp3lame/newmdct.h	23;"	d
LAME_NOERROR	lame/include/lame.h	/^    LAME_NOERROR          =   0,$/;"	e
LAME_NOERROR	lame/libmp3lame/lameerror.h	/^    LAME_NOERROR = 0,$/;"	e
LAME_NOMEM	lame/include/lame.h	/^    LAME_NOMEM            = -10,$/;"	e
LAME_NOMEM	lame/libmp3lame/lameerror.h	/^    LAME_NOMEM = -10,$/;"	e
LAME_OKAY	lame/include/lame.h	/^    LAME_OKAY             =   0,$/;"	e
LAME_OKAY	lame/libmp3lame/lameerror.h	/^    LAME_OKAY = 0,$/;"	e
LAME_PATCH_LEVEL_STRING	lame/libmp3lame/version.h	51;"	d
LAME_PATCH_LEVEL_STRING	lame/libmp3lame/version.h	54;"	d
LAME_PATCH_LEVEL_STRING	lame/libmp3lame/version.h	58;"	d
LAME_PATCH_LEVEL_STRING	lame/libmp3lame/version.h	60;"	d
LAME_PATCH_VERSION	lame/libmp3lame/version.h	40;"	d
LAME_PSYMODEL_H	lame/libmp3lame/psymodel.h	23;"	d
LAME_QUALITY_PRESET	lame/Dll/BladeMP3EncDLL.h	/^} LAME_QUALITY_PRESET;$/;"	t
LAME_QUANTIZE_H	lame/libmp3lame/quantize.h	23;"	d
LAME_QUANTIZE_PVT_H	lame/libmp3lame/quantize_pvt.h	23;"	d
LAME_RELEASE_VERSION	lame/libmp3lame/version.h	43;"	d
LAME_RESERVOIR_H	lame/libmp3lame/reservoir.h	23;"	d
LAME_RTP_H	lame/frontend/rtp.h	26;"	d
LAME_TABLES_H	lame/libmp3lame/tables.h	23;"	d
LAME_TIMESTATUS_H	lame/frontend/timestatus.h	23;"	d
LAME_TYPE_VERSION	lame/libmp3lame/version.h	39;"	d
LAME_URL	lame/libmp3lame/version.h	34;"	d
LAME_UTIL_H	lame/libmp3lame/util.h	24;"	d
LAME_VBRQUANTIZE_H	lame/libmp3lame/vbrquantize.h	23;"	d
LAME_VERSION_H	lame/libmp3lame/version.h	23;"	d
LAME_VERSION_STRING	lame/libmp3lame/version.h	64;"	d
LAME_VRBTAG_H	lame/libmp3lame/VbrTag.h	23;"	d
LAMEmainbits	lame/libmp3lame/lame-analysis.h	/^    int     LAMEmainbits[2][2];$/;"	m	struct:plotting_data
LAMEqss	lame/libmp3lame/lame-analysis.h	/^    int     LAMEqss[2][2];$/;"	m	struct:plotting_data
LAMEsfb	lame/libmp3lame/lame-analysis.h	/^    double  LAMEsfb[2][2][SBMAX_l];$/;"	m	struct:plotting_data
LAMEsfb_s	lame/libmp3lame/lame-analysis.h	/^    double  LAMEsfb_s[2][2][3 * SBMAX_s];$/;"	m	struct:plotting_data
LAMEsfbits	lame/libmp3lame/lame-analysis.h	/^    int     LAMEsfbits[2][2];$/;"	m	struct:plotting_data
LARGE_BITS	lame/libmp3lame/quantize_pvt.h	126;"	d
LARGE_BITS	libfaac/aacquant.h	34;"	d
LARGE_EPSILON	OBSApi/Utility/XMath.h	43;"	d
LASTINTAB	libfaac/huffman.h	42;"	d
LAYER1_H_INCLUDED	lame/mpglib/layer1.h	23;"	d
LAYER2_H_INCLUDED	lame/mpglib/layer2.h	24;"	d
LAYER3_H_INCLUDED	lame/mpglib/layer3.h	23;"	d
LAYER_III	lame/dshow/Encoder.cpp	355;"	d	file:
LCLINTFLAGS	lame/frontend/Makefile	/^LCLINTFLAGS = \\$/;"	m
LCLINTFLAGS	lame/libmp3lame/Makefile	/^LCLINTFLAGS = \\$/;"	m
LCLINTFLAGS	lame/libmp3lame/vector/Makefile	/^LCLINTFLAGS = \\$/;"	m
LCLINTFLAGS	lame/mpglib/Makefile	/^LCLINTFLAGS = \\$/;"	m
LD	lame/ACM/ADbg/Makefile	/^LD = d:\/mingw32\/x86_64-w64-mingw32\/bin\/ld.exe$/;"	m
LD	lame/ACM/Makefile	/^LD = d:\/mingw32\/x86_64-w64-mingw32\/bin\/ld.exe$/;"	m
LD	lame/ACM/ddk/Makefile	/^LD = d:\/mingw32\/x86_64-w64-mingw32\/bin\/ld.exe$/;"	m
LD	lame/ACM/tinyxml/Makefile	/^LD = d:\/mingw32\/x86_64-w64-mingw32\/bin\/ld.exe$/;"	m
LD	lame/Dll/Makefile	/^LD = d:\/mingw32\/x86_64-w64-mingw32\/bin\/ld.exe$/;"	m
LD	lame/Makefile	/^LD = d:\/mingw32\/x86_64-w64-mingw32\/bin\/ld.exe$/;"	m
LD	lame/debian/Makefile	/^LD = d:\/mingw32\/x86_64-w64-mingw32\/bin\/ld.exe$/;"	m
LD	lame/doc/Makefile	/^LD = d:\/mingw32\/x86_64-w64-mingw32\/bin\/ld.exe$/;"	m
LD	lame/doc/html/Makefile	/^LD = d:\/mingw32\/x86_64-w64-mingw32\/bin\/ld.exe$/;"	m
LD	lame/doc/man/Makefile	/^LD = d:\/mingw32\/x86_64-w64-mingw32\/bin\/ld.exe$/;"	m
LD	lame/dshow/Makefile	/^LD = d:\/mingw32\/x86_64-w64-mingw32\/bin\/ld.exe$/;"	m
LD	lame/frontend/Makefile	/^LD = d:\/mingw32\/x86_64-w64-mingw32\/bin\/ld.exe$/;"	m
LD	lame/include/Makefile	/^LD = d:\/mingw32\/x86_64-w64-mingw32\/bin\/ld.exe$/;"	m
LD	lame/libmp3lame/Makefile	/^LD = d:\/mingw32\/x86_64-w64-mingw32\/bin\/ld.exe$/;"	m
LD	lame/libmp3lame/i386/Makefile	/^LD = d:\/mingw32\/x86_64-w64-mingw32\/bin\/ld.exe$/;"	m
LD	lame/libmp3lame/vector/Makefile	/^LD = d:\/mingw32\/x86_64-w64-mingw32\/bin\/ld.exe$/;"	m
LD	lame/mac/Makefile	/^LD = d:\/mingw32\/x86_64-w64-mingw32\/bin\/ld.exe$/;"	m
LD	lame/macosx/English.lproj/Makefile	/^LD = d:\/mingw32\/x86_64-w64-mingw32\/bin\/ld.exe$/;"	m
LD	lame/macosx/LAME.xcodeproj/Makefile	/^LD = d:\/mingw32\/x86_64-w64-mingw32\/bin\/ld.exe$/;"	m
LD	lame/macosx/Makefile	/^LD = d:\/mingw32\/x86_64-w64-mingw32\/bin\/ld.exe$/;"	m
LD	lame/misc/Makefile	/^LD = d:\/mingw32\/x86_64-w64-mingw32\/bin\/ld.exe$/;"	m
LD	lame/mpglib/Makefile	/^LD = d:\/mingw32\/x86_64-w64-mingw32\/bin\/ld.exe$/;"	m
LD	lame/vc_solution/Makefile	/^LD = d:\/mingw32\/x86_64-w64-mingw32\/bin\/ld.exe$/;"	m
LDADD	lame/ACM/ADbg/Makefile	/^LDADD = $/;"	m
LDADD	lame/ACM/Makefile	/^LDADD = $/;"	m
LDADD	lame/ACM/ddk/Makefile	/^LDADD = $/;"	m
LDADD	lame/ACM/tinyxml/Makefile	/^LDADD = $/;"	m
LDADD	lame/Dll/Makefile	/^LDADD = $/;"	m
LDADD	lame/Makefile	/^LDADD = $/;"	m
LDADD	lame/debian/Makefile	/^LDADD = $/;"	m
LDADD	lame/doc/Makefile	/^LDADD = $/;"	m
LDADD	lame/doc/html/Makefile	/^LDADD = $/;"	m
LDADD	lame/doc/man/Makefile	/^LDADD = $/;"	m
LDADD	lame/dshow/Makefile	/^LDADD = $/;"	m
LDADD	lame/frontend/Makefile	/^LDADD =  \\$/;"	m
LDADD	lame/include/Makefile	/^LDADD = $/;"	m
LDADD	lame/libmp3lame/Makefile	/^LDADD = $/;"	m
LDADD	lame/libmp3lame/i386/Makefile	/^LDADD = $/;"	m
LDADD	lame/libmp3lame/vector/Makefile	/^LDADD = $/;"	m
LDADD	lame/mac/Makefile	/^LDADD = $/;"	m
LDADD	lame/macosx/English.lproj/Makefile	/^LDADD = $/;"	m
LDADD	lame/macosx/LAME.xcodeproj/Makefile	/^LDADD = $/;"	m
LDADD	lame/macosx/Makefile	/^LDADD = $/;"	m
LDADD	lame/misc/Makefile	/^LDADD = $/;"	m
LDADD	lame/mpglib/Makefile	/^LDADD = $/;"	m
LDADD	lame/vc_solution/Makefile	/^LDADD = $/;"	m
LDFLAGS	lame/ACM/ADbg/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	lame/ACM/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	lame/ACM/ddk/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	lame/ACM/tinyxml/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	lame/Dll/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	lame/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	lame/debian/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	lame/doc/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	lame/doc/html/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	lame/doc/man/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	lame/dshow/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	lame/frontend/Makefile	/^LDFLAGS =   -static $/;"	m
LDFLAGS	lame/include/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	lame/libmp3lame/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	lame/libmp3lame/i386/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	lame/libmp3lame/vector/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	lame/mac/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	lame/macosx/English.lproj/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	lame/macosx/LAME.xcodeproj/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	lame/macosx/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	lame/misc/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	lame/mpglib/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	lame/vc_solution/Makefile	/^LDFLAGS = $/;"	m
LEN_BYTE	libfaac/bitstream.h	101;"	d
LEN_CB	libfaac/bitstream.h	61;"	d
LEN_CCH_CGP	libfaac/bitstream.h	96;"	d
LEN_CCH_GES	libfaac/bitstream.h	95;"	d
LEN_CC_DOM	libfaac/bitstream.h	93;"	d
LEN_CC_LR	libfaac/bitstream.h	92;"	d
LEN_CC_SGN	libfaac/bitstream.h	94;"	d
LEN_COM_WIN	libfaac/bitstream.h	55;"	d
LEN_D_CNT	libfaac/bitstream.h	97;"	d
LEN_D_ESC	libfaac/bitstream.h	98;"	d
LEN_F_CNT	libfaac/bitstream.h	99;"	d
LEN_F_ESC	libfaac/bitstream.h	100;"	d
LEN_GAIN_PRES	libfaac/bitstream.h	81;"	d
LEN_GLOB_GAIN	libfaac/bitstream.h	54;"	d
LEN_HCR_LONGCW	libfaac/bitstream.h	108;"	d
LEN_HCR_REORDSD	libfaac/bitstream.h	107;"	d
LEN_ICS_RESERV	libfaac/bitstream.h	56;"	d
LEN_IS_CPE	libfaac/bitstream.h	91;"	d
LEN_LTP_COEF	libfaac/coder.h	76;"	d
LEN_LTP_DATA_PRESENT	libfaac/coder.h	74;"	d
LEN_LTP_LAG	libfaac/coder.h	75;"	d
LEN_LTP_LONG_USED	libfaac/coder.h	81;"	d
LEN_LTP_SHORT_LAG	libfaac/coder.h	79;"	d
LEN_LTP_SHORT_LAG_PRESENT	libfaac/coder.h	78;"	d
LEN_LTP_SHORT_USED	libfaac/coder.h	77;"	d
LEN_MASK	libfaac/bitstream.h	68;"	d
LEN_MASK_PRES	libfaac/bitstream.h	67;"	d
LEN_MAX_SFBL	libfaac/bitstream.h	59;"	d
LEN_MAX_SFBS	libfaac/bitstream.h	60;"	d
LEN_NCC	libfaac/bitstream.h	90;"	d
LEN_NEC_NPULSE	libfaac/bitstream.h	83;"	d
LEN_NEC_PAMP	libfaac/bitstream.h	86;"	d
LEN_NEC_POFF	libfaac/bitstream.h	85;"	d
LEN_NEC_ST_SFB	libfaac/bitstream.h	84;"	d
LEN_PAD_DATA	libfaac/bitstream.h	102;"	d
LEN_PC_COMM	libfaac/bitstream.h	104;"	d
LEN_PRED_ENAB	libfaac/bitstream.h	66;"	d
LEN_PRED_PRES	libfaac/bitstream.h	63;"	d
LEN_PRED_RST	libfaac/bitstream.h	64;"	d
LEN_PRED_RSTGRP	libfaac/bitstream.h	65;"	d
LEN_PRESORT_CODEBOOK	libfaac/bitstream.c	1045;"	d	file:
LEN_PULSE_PRES	libfaac/bitstream.h	69;"	d
LEN_SCL_PCM	libfaac/bitstream.h	62;"	d
LEN_SE_ID	libfaac/bitstream.h	52;"	d
LEN_TAG	libfaac/bitstream.h	53;"	d
LEN_TNS_COEFF_RES	libfaac/bitstream.h	74;"	d
LEN_TNS_COMPRESS	libfaac/bitstream.h	80;"	d
LEN_TNS_DIRECTION	libfaac/bitstream.h	79;"	d
LEN_TNS_LENGTHL	libfaac/bitstream.h	75;"	d
LEN_TNS_LENGTHS	libfaac/bitstream.h	76;"	d
LEN_TNS_NFILTL	libfaac/bitstream.h	72;"	d
LEN_TNS_NFILTL	libfaac/coder.h	70;"	d
LEN_TNS_NFILTS	libfaac/bitstream.h	73;"	d
LEN_TNS_NFILTS	libfaac/coder.h	71;"	d
LEN_TNS_ORDERL	libfaac/bitstream.h	77;"	d
LEN_TNS_ORDERS	libfaac/bitstream.h	78;"	d
LEN_TNS_PRES	libfaac/bitstream.h	71;"	d
LEN_WIN_SEQ	libfaac/bitstream.h	57;"	d
LEN_WIN_SH	libfaac/bitstream.h	58;"	d
LERP	lame/libmp3lame/presets.c	140;"	d	file:
LHV1	lame/Dll/BladeMP3EncDLL.h	/^			} LHV1;					\/\/ LAME header version 1$/;"	m
LIBICONV	lame/ACM/ADbg/Makefile	/^LIBICONV = $/;"	m
LIBICONV	lame/ACM/Makefile	/^LIBICONV = $/;"	m
LIBICONV	lame/ACM/ddk/Makefile	/^LIBICONV = $/;"	m
LIBICONV	lame/ACM/tinyxml/Makefile	/^LIBICONV = $/;"	m
LIBICONV	lame/Dll/Makefile	/^LIBICONV = $/;"	m
LIBICONV	lame/Makefile	/^LIBICONV = $/;"	m
LIBICONV	lame/debian/Makefile	/^LIBICONV = $/;"	m
LIBICONV	lame/doc/Makefile	/^LIBICONV = $/;"	m
LIBICONV	lame/doc/html/Makefile	/^LIBICONV = $/;"	m
LIBICONV	lame/doc/man/Makefile	/^LIBICONV = $/;"	m
LIBICONV	lame/dshow/Makefile	/^LIBICONV = $/;"	m
LIBICONV	lame/frontend/Makefile	/^LIBICONV = $/;"	m
LIBICONV	lame/include/Makefile	/^LIBICONV = $/;"	m
LIBICONV	lame/libmp3lame/Makefile	/^LIBICONV = $/;"	m
LIBICONV	lame/libmp3lame/i386/Makefile	/^LIBICONV = $/;"	m
LIBICONV	lame/libmp3lame/vector/Makefile	/^LIBICONV = $/;"	m
LIBICONV	lame/mac/Makefile	/^LIBICONV = $/;"	m
LIBICONV	lame/macosx/English.lproj/Makefile	/^LIBICONV = $/;"	m
LIBICONV	lame/macosx/LAME.xcodeproj/Makefile	/^LIBICONV = $/;"	m
LIBICONV	lame/macosx/Makefile	/^LIBICONV = $/;"	m
LIBICONV	lame/misc/Makefile	/^LIBICONV = $/;"	m
LIBICONV	lame/mpglib/Makefile	/^LIBICONV = $/;"	m
LIBICONV	lame/vc_solution/Makefile	/^LIBICONV = $/;"	m
LIBOBJS	lame/ACM/ADbg/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	lame/ACM/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	lame/ACM/ddk/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	lame/ACM/tinyxml/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	lame/Dll/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	lame/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	lame/debian/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	lame/doc/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	lame/doc/html/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	lame/doc/man/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	lame/dshow/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	lame/frontend/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	lame/include/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	lame/libmp3lame/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	lame/libmp3lame/i386/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	lame/libmp3lame/vector/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	lame/mac/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	lame/macosx/English.lproj/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	lame/macosx/LAME.xcodeproj/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	lame/macosx/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	lame/misc/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	lame/mpglib/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	lame/vc_solution/Makefile	/^LIBOBJS = $/;"	m
LIBS	lame/ACM/ADbg/Makefile	/^LIBS = $/;"	m
LIBS	lame/ACM/Makefile	/^LIBS = $/;"	m
LIBS	lame/ACM/ddk/Makefile	/^LIBS = $/;"	m
LIBS	lame/ACM/tinyxml/Makefile	/^LIBS = $/;"	m
LIBS	lame/Dll/Makefile	/^LIBS = $/;"	m
LIBS	lame/Makefile	/^LIBS = $/;"	m
LIBS	lame/debian/Makefile	/^LIBS = $/;"	m
LIBS	lame/doc/Makefile	/^LIBS = $/;"	m
LIBS	lame/doc/html/Makefile	/^LIBS = $/;"	m
LIBS	lame/doc/man/Makefile	/^LIBS = $/;"	m
LIBS	lame/dshow/Makefile	/^LIBS = $/;"	m
LIBS	lame/frontend/Makefile	/^LIBS = $/;"	m
LIBS	lame/include/Makefile	/^LIBS = $/;"	m
LIBS	lame/libmp3lame/Makefile	/^LIBS = $/;"	m
LIBS	lame/libmp3lame/i386/Makefile	/^LIBS = $/;"	m
LIBS	lame/libmp3lame/vector/Makefile	/^LIBS = $/;"	m
LIBS	lame/mac/Makefile	/^LIBS = $/;"	m
LIBS	lame/macosx/English.lproj/Makefile	/^LIBS = $/;"	m
LIBS	lame/macosx/LAME.xcodeproj/Makefile	/^LIBS = $/;"	m
LIBS	lame/macosx/Makefile	/^LIBS = $/;"	m
LIBS	lame/misc/Makefile	/^LIBS = $/;"	m
LIBS	lame/mpglib/Makefile	/^LIBS = $/;"	m
LIBS	lame/vc_solution/Makefile	/^LIBS = $/;"	m
LIBTOOL	lame/ACM/ADbg/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	lame/ACM/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	lame/ACM/ddk/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	lame/ACM/tinyxml/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	lame/Dll/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	lame/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	lame/debian/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	lame/doc/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	lame/doc/html/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	lame/doc/man/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	lame/dshow/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	lame/frontend/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	lame/include/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	lame/libmp3lame/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	lame/libmp3lame/i386/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	lame/libmp3lame/vector/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	lame/mac/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	lame/macosx/English.lproj/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	lame/macosx/LAME.xcodeproj/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	lame/macosx/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	lame/misc/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	lame/mpglib/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	lame/vc_solution/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL_DEPS	lame/ACM/ADbg/Makefile	/^LIBTOOL_DEPS = .\/ltmain.sh$/;"	m
LIBTOOL_DEPS	lame/ACM/Makefile	/^LIBTOOL_DEPS = .\/ltmain.sh$/;"	m
LIBTOOL_DEPS	lame/ACM/ddk/Makefile	/^LIBTOOL_DEPS = .\/ltmain.sh$/;"	m
LIBTOOL_DEPS	lame/ACM/tinyxml/Makefile	/^LIBTOOL_DEPS = .\/ltmain.sh$/;"	m
LIBTOOL_DEPS	lame/Dll/Makefile	/^LIBTOOL_DEPS = .\/ltmain.sh$/;"	m
LIBTOOL_DEPS	lame/Makefile	/^LIBTOOL_DEPS = .\/ltmain.sh$/;"	m
LIBTOOL_DEPS	lame/debian/Makefile	/^LIBTOOL_DEPS = .\/ltmain.sh$/;"	m
LIBTOOL_DEPS	lame/doc/Makefile	/^LIBTOOL_DEPS = .\/ltmain.sh$/;"	m
LIBTOOL_DEPS	lame/doc/html/Makefile	/^LIBTOOL_DEPS = .\/ltmain.sh$/;"	m
LIBTOOL_DEPS	lame/doc/man/Makefile	/^LIBTOOL_DEPS = .\/ltmain.sh$/;"	m
LIBTOOL_DEPS	lame/dshow/Makefile	/^LIBTOOL_DEPS = .\/ltmain.sh$/;"	m
LIBTOOL_DEPS	lame/frontend/Makefile	/^LIBTOOL_DEPS = .\/ltmain.sh$/;"	m
LIBTOOL_DEPS	lame/include/Makefile	/^LIBTOOL_DEPS = .\/ltmain.sh$/;"	m
LIBTOOL_DEPS	lame/libmp3lame/Makefile	/^LIBTOOL_DEPS = .\/ltmain.sh$/;"	m
LIBTOOL_DEPS	lame/libmp3lame/i386/Makefile	/^LIBTOOL_DEPS = .\/ltmain.sh$/;"	m
LIBTOOL_DEPS	lame/libmp3lame/vector/Makefile	/^LIBTOOL_DEPS = .\/ltmain.sh$/;"	m
LIBTOOL_DEPS	lame/mac/Makefile	/^LIBTOOL_DEPS = .\/ltmain.sh$/;"	m
LIBTOOL_DEPS	lame/macosx/English.lproj/Makefile	/^LIBTOOL_DEPS = .\/ltmain.sh$/;"	m
LIBTOOL_DEPS	lame/macosx/LAME.xcodeproj/Makefile	/^LIBTOOL_DEPS = .\/ltmain.sh$/;"	m
LIBTOOL_DEPS	lame/macosx/Makefile	/^LIBTOOL_DEPS = .\/ltmain.sh$/;"	m
LIBTOOL_DEPS	lame/misc/Makefile	/^LIBTOOL_DEPS = .\/ltmain.sh$/;"	m
LIBTOOL_DEPS	lame/mpglib/Makefile	/^LIBTOOL_DEPS = .\/ltmain.sh$/;"	m
LIBTOOL_DEPS	lame/vc_solution/Makefile	/^LIBTOOL_DEPS = .\/ltmain.sh$/;"	m
LIB_MAJOR_VERSION	lame/ACM/ADbg/Makefile	/^LIB_MAJOR_VERSION = 0$/;"	m
LIB_MAJOR_VERSION	lame/ACM/Makefile	/^LIB_MAJOR_VERSION = 0$/;"	m
LIB_MAJOR_VERSION	lame/ACM/ddk/Makefile	/^LIB_MAJOR_VERSION = 0$/;"	m
LIB_MAJOR_VERSION	lame/ACM/tinyxml/Makefile	/^LIB_MAJOR_VERSION = 0$/;"	m
LIB_MAJOR_VERSION	lame/Dll/Makefile	/^LIB_MAJOR_VERSION = 0$/;"	m
LIB_MAJOR_VERSION	lame/Makefile	/^LIB_MAJOR_VERSION = 0$/;"	m
LIB_MAJOR_VERSION	lame/debian/Makefile	/^LIB_MAJOR_VERSION = 0$/;"	m
LIB_MAJOR_VERSION	lame/doc/Makefile	/^LIB_MAJOR_VERSION = 0$/;"	m
LIB_MAJOR_VERSION	lame/doc/html/Makefile	/^LIB_MAJOR_VERSION = 0$/;"	m
LIB_MAJOR_VERSION	lame/doc/man/Makefile	/^LIB_MAJOR_VERSION = 0$/;"	m
LIB_MAJOR_VERSION	lame/dshow/Makefile	/^LIB_MAJOR_VERSION = 0$/;"	m
LIB_MAJOR_VERSION	lame/frontend/Makefile	/^LIB_MAJOR_VERSION = 0$/;"	m
LIB_MAJOR_VERSION	lame/include/Makefile	/^LIB_MAJOR_VERSION = 0$/;"	m
LIB_MAJOR_VERSION	lame/libmp3lame/Makefile	/^LIB_MAJOR_VERSION = 0$/;"	m
LIB_MAJOR_VERSION	lame/libmp3lame/i386/Makefile	/^LIB_MAJOR_VERSION = 0$/;"	m
LIB_MAJOR_VERSION	lame/libmp3lame/vector/Makefile	/^LIB_MAJOR_VERSION = 0$/;"	m
LIB_MAJOR_VERSION	lame/mac/Makefile	/^LIB_MAJOR_VERSION = 0$/;"	m
LIB_MAJOR_VERSION	lame/macosx/English.lproj/Makefile	/^LIB_MAJOR_VERSION = 0$/;"	m
LIB_MAJOR_VERSION	lame/macosx/LAME.xcodeproj/Makefile	/^LIB_MAJOR_VERSION = 0$/;"	m
LIB_MAJOR_VERSION	lame/macosx/Makefile	/^LIB_MAJOR_VERSION = 0$/;"	m
LIB_MAJOR_VERSION	lame/misc/Makefile	/^LIB_MAJOR_VERSION = 0$/;"	m
LIB_MAJOR_VERSION	lame/mpglib/Makefile	/^LIB_MAJOR_VERSION = 0$/;"	m
LIB_MAJOR_VERSION	lame/vc_solution/Makefile	/^LIB_MAJOR_VERSION = 0$/;"	m
LIB_MINOR_VERSION	lame/ACM/ADbg/Makefile	/^LIB_MINOR_VERSION = 0$/;"	m
LIB_MINOR_VERSION	lame/ACM/Makefile	/^LIB_MINOR_VERSION = 0$/;"	m
LIB_MINOR_VERSION	lame/ACM/ddk/Makefile	/^LIB_MINOR_VERSION = 0$/;"	m
LIB_MINOR_VERSION	lame/ACM/tinyxml/Makefile	/^LIB_MINOR_VERSION = 0$/;"	m
LIB_MINOR_VERSION	lame/Dll/Makefile	/^LIB_MINOR_VERSION = 0$/;"	m
LIB_MINOR_VERSION	lame/Makefile	/^LIB_MINOR_VERSION = 0$/;"	m
LIB_MINOR_VERSION	lame/debian/Makefile	/^LIB_MINOR_VERSION = 0$/;"	m
LIB_MINOR_VERSION	lame/doc/Makefile	/^LIB_MINOR_VERSION = 0$/;"	m
LIB_MINOR_VERSION	lame/doc/html/Makefile	/^LIB_MINOR_VERSION = 0$/;"	m
LIB_MINOR_VERSION	lame/doc/man/Makefile	/^LIB_MINOR_VERSION = 0$/;"	m
LIB_MINOR_VERSION	lame/dshow/Makefile	/^LIB_MINOR_VERSION = 0$/;"	m
LIB_MINOR_VERSION	lame/frontend/Makefile	/^LIB_MINOR_VERSION = 0$/;"	m
LIB_MINOR_VERSION	lame/include/Makefile	/^LIB_MINOR_VERSION = 0$/;"	m
LIB_MINOR_VERSION	lame/libmp3lame/Makefile	/^LIB_MINOR_VERSION = 0$/;"	m
LIB_MINOR_VERSION	lame/libmp3lame/i386/Makefile	/^LIB_MINOR_VERSION = 0$/;"	m
LIB_MINOR_VERSION	lame/libmp3lame/vector/Makefile	/^LIB_MINOR_VERSION = 0$/;"	m
LIB_MINOR_VERSION	lame/mac/Makefile	/^LIB_MINOR_VERSION = 0$/;"	m
LIB_MINOR_VERSION	lame/macosx/English.lproj/Makefile	/^LIB_MINOR_VERSION = 0$/;"	m
LIB_MINOR_VERSION	lame/macosx/LAME.xcodeproj/Makefile	/^LIB_MINOR_VERSION = 0$/;"	m
LIB_MINOR_VERSION	lame/macosx/Makefile	/^LIB_MINOR_VERSION = 0$/;"	m
LIB_MINOR_VERSION	lame/misc/Makefile	/^LIB_MINOR_VERSION = 0$/;"	m
LIB_MINOR_VERSION	lame/mpglib/Makefile	/^LIB_MINOR_VERSION = 0$/;"	m
LIB_MINOR_VERSION	lame/vc_solution/Makefile	/^LIB_MINOR_VERSION = 0$/;"	m
LIMIT_STACK_USAGE	lame/mac/Precompile_Common.h	60;"	d
LINEAR_DATA	libsamplerate/src_linear.c	/^} LINEAR_DATA ;$/;"	t	file:
LINEAR_MAGIC_MARKER	libsamplerate/src_linear.c	39;"	d	file:
LINK	lame/frontend/Makefile	/^LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\$/;"	m
LINK	lame/libmp3lame/Makefile	/^LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\$/;"	m
LINK	lame/libmp3lame/i386/Makefile	/^LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \\$/;"	m
LINK	lame/libmp3lame/vector/Makefile	/^LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\$/;"	m
LINK	lame/misc/Makefile	/^LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\$/;"	m
LINK	lame/mpglib/Makefile	/^LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\$/;"	m
LIPO	lame/ACM/ADbg/Makefile	/^LIPO = $/;"	m
LIPO	lame/ACM/Makefile	/^LIPO = $/;"	m
LIPO	lame/ACM/ddk/Makefile	/^LIPO = $/;"	m
LIPO	lame/ACM/tinyxml/Makefile	/^LIPO = $/;"	m
LIPO	lame/Dll/Makefile	/^LIPO = $/;"	m
LIPO	lame/Makefile	/^LIPO = $/;"	m
LIPO	lame/debian/Makefile	/^LIPO = $/;"	m
LIPO	lame/doc/Makefile	/^LIPO = $/;"	m
LIPO	lame/doc/html/Makefile	/^LIPO = $/;"	m
LIPO	lame/doc/man/Makefile	/^LIPO = $/;"	m
LIPO	lame/dshow/Makefile	/^LIPO = $/;"	m
LIPO	lame/frontend/Makefile	/^LIPO = $/;"	m
LIPO	lame/include/Makefile	/^LIPO = $/;"	m
LIPO	lame/libmp3lame/Makefile	/^LIPO = $/;"	m
LIPO	lame/libmp3lame/i386/Makefile	/^LIPO = $/;"	m
LIPO	lame/libmp3lame/vector/Makefile	/^LIPO = $/;"	m
LIPO	lame/mac/Makefile	/^LIPO = $/;"	m
LIPO	lame/macosx/English.lproj/Makefile	/^LIPO = $/;"	m
LIPO	lame/macosx/LAME.xcodeproj/Makefile	/^LIPO = $/;"	m
LIPO	lame/macosx/Makefile	/^LIPO = $/;"	m
LIPO	lame/misc/Makefile	/^LIPO = $/;"	m
LIPO	lame/mpglib/Makefile	/^LIPO = $/;"	m
LIPO	lame/vc_solution/Makefile	/^LIPO = $/;"	m
LISTENING_PORT	Source/mongoose.c	/^  LISTENING_PORT,$/;"	e	file:
LL_MODE_AUTO	Source/RTMPPublisher.h	/^    LL_MODE_AUTO,$/;"	e
LL_MODE_FIXED	Source/RTMPPublisher.h	/^    LL_MODE_FIXED,$/;"	e
LL_MODE_NONE	Source/RTMPPublisher.h	/^    LL_MODE_NONE = 0,$/;"	e
LN_S	lame/ACM/ADbg/Makefile	/^LN_S = ln -s$/;"	m
LN_S	lame/ACM/Makefile	/^LN_S = ln -s$/;"	m
LN_S	lame/ACM/ddk/Makefile	/^LN_S = ln -s$/;"	m
LN_S	lame/ACM/tinyxml/Makefile	/^LN_S = ln -s$/;"	m
LN_S	lame/Dll/Makefile	/^LN_S = ln -s$/;"	m
LN_S	lame/Makefile	/^LN_S = ln -s$/;"	m
LN_S	lame/debian/Makefile	/^LN_S = ln -s$/;"	m
LN_S	lame/doc/Makefile	/^LN_S = ln -s$/;"	m
LN_S	lame/doc/html/Makefile	/^LN_S = ln -s$/;"	m
LN_S	lame/doc/man/Makefile	/^LN_S = ln -s$/;"	m
LN_S	lame/dshow/Makefile	/^LN_S = ln -s$/;"	m
LN_S	lame/frontend/Makefile	/^LN_S = ln -s$/;"	m
LN_S	lame/include/Makefile	/^LN_S = ln -s$/;"	m
LN_S	lame/libmp3lame/Makefile	/^LN_S = ln -s$/;"	m
LN_S	lame/libmp3lame/i386/Makefile	/^LN_S = ln -s$/;"	m
LN_S	lame/libmp3lame/vector/Makefile	/^LN_S = ln -s$/;"	m
LN_S	lame/mac/Makefile	/^LN_S = ln -s$/;"	m
LN_S	lame/macosx/English.lproj/Makefile	/^LN_S = ln -s$/;"	m
LN_S	lame/macosx/LAME.xcodeproj/Makefile	/^LN_S = ln -s$/;"	m
LN_S	lame/macosx/Makefile	/^LN_S = ln -s$/;"	m
LN_S	lame/misc/Makefile	/^LN_S = ln -s$/;"	m
LN_S	lame/mpglib/Makefile	/^LN_S = ln -s$/;"	m
LN_S	lame/vc_solution/Makefile	/^LN_S = ln -s$/;"	m
LN_TO_LOG10	lame/libmp3lame/psymodel.c	160;"	d	file:
LN_TO_LOG10	lame/libmp3lame/psymodel.c	162;"	d	file:
LOADPLUGINEXPROC	Source/OBS.cpp	/^typedef bool (*LOADPLUGINEXPROC)(UINT);$/;"	t	file:
LOADPLUGINPROC	Source/OBS.cpp	/^typedef bool (*LOADPLUGINPROC)();$/;"	t	file:
LODW	OBSApi/Utility/XT.h	229;"	d
LOG	Source/libnsgif.c	22;"	d	file:
LOG	Source/libnsgif.c	24;"	d	file:
LOG10	lame/libmp3lame/util.h	70;"	d
LOG10	lame/libmp3lame/util.h	72;"	d
LOG2	lame/libmp3lame/util.h	64;"	d
LOG2	lame/libmp3lame/util.h	66;"	d
LOG2_SIZE	lame/libmp3lame/util.c	949;"	d	file:
LOG2_SIZE_L2	lame/libmp3lame/util.c	950;"	d	file:
LOGLONGFRAMESDEFAULT	Source/OBSVideoCapture.cpp	354;"	d	file:
LOGLONGFRAMESDEFAULT	Source/OBSVideoCapture.cpp	356;"	d	file:
LONG	OBSApi/Utility/Defs.h	/^typedef long                LONG,*LPLONG;$/;"	t
LONG	OBSApi/Utility/Defs.h	40;"	d
LONG64	OBSApi/Utility/Defs.h	/^typedef long long           LONG64,INT64,LONGLONG;$/;"	t
LONG64	OBSApi/Utility/Defs.h	50;"	d
LONGLONG	OBSApi/Utility/Defs.h	/^typedef long long           LONG64,INT64,LONGLONG;$/;"	t
LONG_LONG_MAX	minhook/src/pstdint.h	485;"	d
LONG_NUMBIT	libfaac/bitstream.h	137;"	d
LONG_SHORT_WINDOW	libfaac/coder.h	/^    LONG_SHORT_WINDOW,$/;"	e	enum:WINDOW_TYPE
LOOPS	lame/misc/scalartest.c	7;"	d	file:
LOW	libfaac/bitstream.h	131;"	d
LOW	libfaac/include/faaccfg.h	33;"	d
LOWORD	OBSApi/Utility/Defs.h	117;"	d
LOWORD	OBSApi/Utility/Defs.h	57;"	d
LOWORD	OBSApi/Utility/XT.h	232;"	d
LOW__BYTE	lame/frontend/get_audio.c	2141;"	d	file:
LPACMDRIVERDETAILS	lame/ACM/ddk/msacmdrv.h	45;"	d
LPACMDRIVERDETAILS	lame/ACM/ddk/msacmdrv.h	49;"	d
LPACMDRVFORMATSUGGEST	lame/ACM/ddk/msacmdrv.h	/^} ACMDRVFORMATSUGGEST, *PACMDRVFORMATSUGGEST, FAR *LPACMDRVFORMATSUGGEST;$/;"	t
LPACMDRVOPENDESC	lame/ACM/ddk/msacmdrv.h	/^} ACMDRVOPENDESC, *PACMDRVOPENDESC, FAR *LPACMDRVOPENDESC;$/;"	t
LPACMDRVSTREAMHEADER	lame/ACM/ddk/msacmdrv.h	/^typedef struct tACMDRVSTREAMHEADER FAR *LPACMDRVSTREAMHEADER;$/;"	t
LPACMDRVSTREAMINSTANCE	lame/ACM/ddk/msacmdrv.h	/^} ACMDRVSTREAMINSTANCE, *PACMDRVSTREAMINSTANCE, FAR *LPACMDRVSTREAMINSTANCE;$/;"	t
LPACMDRVSTREAMSIZE	lame/ACM/ddk/msacmdrv.h	/^} ACMDRVSTREAMSIZE, *PACMDRVSTREAMSIZE, FAR *LPACMDRVSTREAMSIZE;$/;"	t
LPACMFORMATDETAILS	lame/ACM/ddk/msacmdrv.h	61;"	d
LPACMFORMATDETAILS	lame/ACM/ddk/msacmdrv.h	65;"	d
LPACMFORMATTAGDETAILS	lame/ACM/ddk/msacmdrv.h	53;"	d
LPACMFORMATTAGDETAILS	lame/ACM/ddk/msacmdrv.h	57;"	d
LPBYTE	OBSApi/Utility/Defs.h	/^typedef unsigned char       UCHAR,BYTE,*LPBYTE;$/;"	t
LPBYTE	OBSApi/Utility/Defs.h	32;"	d
LPC	libfaac/coder.h	89;"	d
LPCHAR	OBSApi/Utility/Defs.h	/^typedef char                CHAR,*LPCHAR;$/;"	t
LPCHAR	OBSApi/Utility/Defs.h	47;"	d
LPCSTR	OBSApi/Utility/Defs.h	/^typedef const char          *LPCSTR;$/;"	t
LPCVOID	OBSApi/Utility/Defs.h	/^typedef const void          *LPCVOID;$/;"	t
LPD3DDEVINFO_D3DVERTEXSTATS	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DDEVINFO_D3DVERTEXSTATS, *LPD3DDEVINFO_D3DVERTEXSTATS;$/;"	t
LPD3DDEVINFO_RESOURCEMANAGER	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^} D3DDEVINFO_RESOURCEMANAGER, *LPD3DDEVINFO_RESOURCEMANAGER;$/;"	t
LPDIRECT3D8	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^typedef struct IDirect3D8 *LPDIRECT3D8, *PDIRECT3D8;$/;"	t
LPDIRECT3DBASETEXTURE8	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^typedef struct IDirect3DBaseTexture8 *LPDIRECT3DBASETEXTURE8, *PDIRECT3DBASETEXTURE8;$/;"	t
LPDIRECT3DCUBETEXTURE8	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^typedef struct IDirect3DCubeTexture8 *LPDIRECT3DCUBETEXTURE8, *PDIRECT3DCUBETEXTURE8;$/;"	t
LPDIRECT3DDEVICE8	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^typedef struct IDirect3DDevice8 *LPDIRECT3DDEVICE8, *PDIRECT3DDEVICE8;$/;"	t
LPDIRECT3DINDEXBUFFER8	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^typedef struct IDirect3DIndexBuffer8 *LPDIRECT3DINDEXBUFFER8, *PDIRECT3DINDEXBUFFER8;$/;"	t
LPDIRECT3DRESOURCE8	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^typedef struct IDirect3DResource8 *LPDIRECT3DRESOURCE8, *PDIRECT3DRESOURCE8;$/;"	t
LPDIRECT3DSURFACE8	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^typedef struct IDirect3DSurface8 *LPDIRECT3DSURFACE8, *PDIRECT3DSURFACE8;$/;"	t
LPDIRECT3DSWAPCHAIN8	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^typedef struct IDirect3DSwapChain8 *LPDIRECT3DSWAPCHAIN8, *PDIRECT3DSWAPCHAIN8;$/;"	t
LPDIRECT3DTEXTURE8	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^typedef struct IDirect3DTexture8 *LPDIRECT3DTEXTURE8, *PDIRECT3DTEXTURE8;$/;"	t
LPDIRECT3DVERTEXBUFFER8	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^typedef struct IDirect3DVertexBuffer8 *LPDIRECT3DVERTEXBUFFER8, *PDIRECT3DVERTEXBUFFER8;$/;"	t
LPDIRECT3DVOLUME8	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^typedef struct IDirect3DVolume8 *LPDIRECT3DVOLUME8, *PDIRECT3DVOLUME8;$/;"	t
LPDIRECT3DVOLUMETEXTURE8	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^typedef struct IDirect3DVolumeTexture8 *LPDIRECT3DVOLUMETEXTURE8, *PDIRECT3DVOLUMETEXTURE8;$/;"	t
LPDWORD	OBSApi/Utility/Defs.h	/^typedef unsigned long       ULONG,DWORD,*LPDWORD;$/;"	t
LPDWORD	OBSApi/Utility/Defs.h	26;"	d
LPINT	OBSApi/Utility/Defs.h	/^typedef int                 BOOL,INT,*LPINT;$/;"	t
LPINT	OBSApi/Utility/Defs.h	39;"	d
LPLONG	OBSApi/Utility/Defs.h	/^typedef long                LONG,*LPLONG;$/;"	t
LPLONG	OBSApi/Utility/Defs.h	41;"	d
LPSHORT	OBSApi/Utility/Defs.h	/^typedef short               SHORT,*LPSHORT;$/;"	t
LPSHORT	OBSApi/Utility/Defs.h	43;"	d
LPSTR	OBSApi/Utility/Defs.h	/^typedef char                *LPSTR;$/;"	t
LPUINT	OBSApi/Utility/Defs.h	/^typedef unsigned int        UINT,*LPUINT;$/;"	t
LPUINT	OBSApi/Utility/Defs.h	23;"	d
LPVOID	OBSApi/Utility/Defs.h	/^typedef void                VOID,*LPVOID,*HANDLE;$/;"	t
LPWORD	OBSApi/Utility/Defs.h	/^typedef unsigned short      USHORT,WORD,*LPWORD;$/;"	t
LPWORD	OBSApi/Utility/Defs.h	29;"	d
LQP_ABR	lame/Dll/BladeMP3EncDLL.h	/^	LQP_ABR					= 11,$/;"	e
LQP_AM	lame/Dll/BladeMP3EncDLL.h	/^	LQP_AM		=3000,$/;"	e
LQP_CBR	lame/Dll/BladeMP3EncDLL.h	/^	LQP_CBR					= 12,$/;"	e
LQP_CD	lame/Dll/BladeMP3EncDLL.h	/^	LQP_CD		=9000,$/;"	e
LQP_EXTREME	lame/Dll/BladeMP3EncDLL.h	/^	LQP_EXTREME				= 8,$/;"	e
LQP_FAST_EXTREME	lame/Dll/BladeMP3EncDLL.h	/^	LQP_FAST_EXTREME		= 9,$/;"	e
LQP_FAST_MEDIUM	lame/Dll/BladeMP3EncDLL.h	/^	LQP_FAST_MEDIUM			= 14,$/;"	e
LQP_FAST_STANDARD	lame/Dll/BladeMP3EncDLL.h	/^	LQP_FAST_STANDARD		= 7,$/;"	e
LQP_FM	lame/Dll/BladeMP3EncDLL.h	/^	LQP_FM		=4000,$/;"	e
LQP_HIFI	lame/Dll/BladeMP3EncDLL.h	/^	LQP_HIFI	=8000,$/;"	e
LQP_HIGH_QUALITY	lame/Dll/BladeMP3EncDLL.h	/^	LQP_HIGH_QUALITY		= 2,$/;"	e
LQP_INSANE	lame/Dll/BladeMP3EncDLL.h	/^	LQP_INSANE				= 10,$/;"	e
LQP_LOW_QUALITY	lame/Dll/BladeMP3EncDLL.h	/^	LQP_LOW_QUALITY			= 1,$/;"	e
LQP_MEDIUM	lame/Dll/BladeMP3EncDLL.h	/^	LQP_MEDIUM				= 13,$/;"	e
LQP_NOPRESET	lame/Dll/BladeMP3EncDLL.h	/^	LQP_NOPRESET			=-1,$/;"	e
LQP_NORMAL_QUALITY	lame/Dll/BladeMP3EncDLL.h	/^	LQP_NORMAL_QUALITY		= 0,$/;"	e
LQP_PHONE	lame/Dll/BladeMP3EncDLL.h	/^	LQP_PHONE	=1000,$/;"	e
LQP_R3MIX	lame/Dll/BladeMP3EncDLL.h	/^	LQP_R3MIX				= 4,$/;"	e
LQP_RADIO	lame/Dll/BladeMP3EncDLL.h	/^	LQP_RADIO	=6000,$/;"	e
LQP_STANDARD	lame/Dll/BladeMP3EncDLL.h	/^	LQP_STANDARD			= 6,$/;"	e
LQP_STUDIO	lame/Dll/BladeMP3EncDLL.h	/^	LQP_STUDIO	=10000$/;"	e
LQP_SW	lame/Dll/BladeMP3EncDLL.h	/^	LQP_SW		=2000,$/;"	e
LQP_TAPE	lame/Dll/BladeMP3EncDLL.h	/^	LQP_TAPE	=7000,$/;"	e
LQP_VERYHIGH_QUALITY	lame/Dll/BladeMP3EncDLL.h	/^	LQP_VERYHIGH_QUALITY	= 5,$/;"	e
LQP_VOICE	lame/Dll/BladeMP3EncDLL.h	/^	LQP_VOICE	=5000,$/;"	e
LQP_VOICE_QUALITY	lame/Dll/BladeMP3EncDLL.h	/^	LQP_VOICE_QUALITY		= 3,$/;"	e
LR	lame/frontend/brhist.c	299;"	d	file:
LTCOMPILE	lame/frontend/Makefile	/^LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\$/;"	m
LTCOMPILE	lame/libmp3lame/Makefile	/^LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\$/;"	m
LTCOMPILE	lame/libmp3lame/i386/Makefile	/^LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) \\$/;"	m
LTCOMPILE	lame/libmp3lame/vector/Makefile	/^LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\$/;"	m
LTCOMPILE	lame/misc/Makefile	/^LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\$/;"	m
LTCOMPILE	lame/mpglib/Makefile	/^LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\$/;"	m
LTLIBICONV	lame/ACM/ADbg/Makefile	/^LTLIBICONV = $/;"	m
LTLIBICONV	lame/ACM/Makefile	/^LTLIBICONV = $/;"	m
LTLIBICONV	lame/ACM/ddk/Makefile	/^LTLIBICONV = $/;"	m
LTLIBICONV	lame/ACM/tinyxml/Makefile	/^LTLIBICONV = $/;"	m
LTLIBICONV	lame/Dll/Makefile	/^LTLIBICONV = $/;"	m
LTLIBICONV	lame/Makefile	/^LTLIBICONV = $/;"	m
LTLIBICONV	lame/debian/Makefile	/^LTLIBICONV = $/;"	m
LTLIBICONV	lame/doc/Makefile	/^LTLIBICONV = $/;"	m
LTLIBICONV	lame/doc/html/Makefile	/^LTLIBICONV = $/;"	m
LTLIBICONV	lame/doc/man/Makefile	/^LTLIBICONV = $/;"	m
LTLIBICONV	lame/dshow/Makefile	/^LTLIBICONV = $/;"	m
LTLIBICONV	lame/frontend/Makefile	/^LTLIBICONV = $/;"	m
LTLIBICONV	lame/include/Makefile	/^LTLIBICONV = $/;"	m
LTLIBICONV	lame/libmp3lame/Makefile	/^LTLIBICONV = $/;"	m
LTLIBICONV	lame/libmp3lame/i386/Makefile	/^LTLIBICONV = $/;"	m
LTLIBICONV	lame/libmp3lame/vector/Makefile	/^LTLIBICONV = $/;"	m
LTLIBICONV	lame/mac/Makefile	/^LTLIBICONV = $/;"	m
LTLIBICONV	lame/macosx/English.lproj/Makefile	/^LTLIBICONV = $/;"	m
LTLIBICONV	lame/macosx/LAME.xcodeproj/Makefile	/^LTLIBICONV = $/;"	m
LTLIBICONV	lame/macosx/Makefile	/^LTLIBICONV = $/;"	m
LTLIBICONV	lame/misc/Makefile	/^LTLIBICONV = $/;"	m
LTLIBICONV	lame/mpglib/Makefile	/^LTLIBICONV = $/;"	m
LTLIBICONV	lame/vc_solution/Makefile	/^LTLIBICONV = $/;"	m
LTLIBOBJS	lame/ACM/ADbg/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	lame/ACM/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	lame/ACM/ddk/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	lame/ACM/tinyxml/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	lame/Dll/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	lame/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	lame/debian/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	lame/doc/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	lame/doc/html/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	lame/doc/man/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	lame/dshow/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	lame/frontend/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	lame/include/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	lame/libmp3lame/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	lame/libmp3lame/i386/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	lame/libmp3lame/vector/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	lame/mac/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	lame/macosx/English.lproj/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	lame/macosx/LAME.xcodeproj/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	lame/macosx/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	lame/misc/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	lame/mpglib/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	lame/vc_solution/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBRARIES	lame/libmp3lame/Makefile	/^LTLIBRARIES = $(lib_LTLIBRARIES)$/;"	m
LTLIBRARIES	lame/libmp3lame/i386/Makefile	/^LTLIBRARIES = $(noinst_LTLIBRARIES)$/;"	m
LTLIBRARIES	lame/libmp3lame/vector/Makefile	/^LTLIBRARIES = $(noinst_LTLIBRARIES)$/;"	m
LTLIBRARIES	lame/mpglib/Makefile	/^LTLIBRARIES = $(noinst_LTLIBRARIES)$/;"	m
LTP	libfaac/bitstream.h	133;"	d
LTP	libfaac/include/faaccfg.h	35;"	d
LTP_H	libfaac/ltp.h	23;"	d
LTP_LAG_OFFSET	libfaac/coder.h	80;"	d
LT_OBJDIR	libsamplerate/config.h	151;"	d
Lame	lame/dshow/REG.CPP	/^namespace Lame$/;"	n	file:
Lame	lame/dshow/REG.H	/^namespace Lame$/;"	n
LameDLLInterface.htm	lame/Dll/LameDLLInterface.htm	1;"	F
Lame_enc.dll debug option	lame/Dll/LameDLLInterface.htm	/^<h1><a name="Lame_enc.dll debug option">Lame_enc.dll debug option<\/a><\/h1>$/;"	a
Last	OBSApi/Utility/Template.h	/^    inline T& Last() const$/;"	f	class:CircularList
Last	OBSApi/Utility/Template.h	/^    inline T& Last() const$/;"	f	class:List
Last	lame/ACM/tinyxml/tinyxml.h	/^	TiXmlAttribute* Last()  const	{ return ( sentinel.prev == &sentinel ) ? 0 : sentinel.prev; }$/;"	f	class:TiXmlAttributeSet
LastAttribute	lame/ACM/tinyxml/tinyxml.h	/^	TiXmlAttribute* LastAttribute()	const 	{ return attributeSet.Last(); }		\/\/\/< Access the last attribute in this element.$/;"	f	class:TiXmlElement
LastChild	lame/ACM/tinyxml/tinyxml.cpp	/^TiXmlNode* TiXmlNode::LastChild( const std::string& value ) const$/;"	f	class:TiXmlNode
LastChild	lame/ACM/tinyxml/tinyxml.h	/^	TiXmlNode* LastChild() const	{ return lastChild; }		\/\/\/ The last child of this node. Will be null if there are no children.$/;"	f	class:TiXmlNode
LastMouseUpdateTime	extras/dxgi1_2.h	/^    LARGE_INTEGER LastMouseUpdateTime;$/;"	m	struct:DXGI_OUTDUPL_FRAME_INFO
LastPresentTime	extras/dxgi1_2.h	/^    LARGE_INTEGER LastPresentTime;$/;"	m	struct:DXGI_OUTDUPL_FRAME_INFO
LastPri	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    DWORD   LastPri;                \/* priority of last object evicted *\/$/;"	m	struct:_D3DRESOURCESTATS
Layer	libmfx/include/msdk/include/mfxastructures.h	/^            mfxU16       Layer;$/;"	m
Layer	libmfx/include/msdk/include/mfxstructures.h	/^    }Layer[8];$/;"	m
LeaveSceneMutex	Source/API.cpp	/^    virtual void LeaveSceneMutex() {App->LeaveSceneMutex();}$/;"	f	class:OBSAPIInterface
LeaveSceneMutex	Source/OBS.h	/^    inline void LeaveSceneMutex() {OSLeaveMutex(hSceneMutex);}$/;"	f	class:OBS
Left	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    UINT                Left;$/;"	m	struct:_D3DBOX
Left	OBSApi/Utility/XString.cpp	/^String  String::Left(UINT iOffset)$/;"	f	class:String
Left	libmfx/include/msdk/include/mfxstructures.h	/^        mfxU32  Left;$/;"	m
Len	OBSApi/Utility/XMath.h	/^    inline float Len() const                        {return (float)sqrt((double)(x*x)+(y*y));}$/;"	f	struct:Vect2
Len	OBSApi/Utility/XMath.h	/^    inline float Len() const                        {return (float)sqrt((double)(x*x)+(y*y)+(z*z));}$/;"	f	struct:Vect
Len	OBSApi/Utility/XMath.h	/^    inline float Len() const                        {return (float)sqrt((double)(x*x)+(y*y)+(z*z)+(w*w));}$/;"	f	struct:Quat
Len	OBSApi/Utility/XMath.h	/^    inline float Len() const$/;"	f	struct:Quat
Len	OBSApi/Utility/XMath.h	/^    inline float Len() const$/;"	f	struct:Vect
Length	OBSApi/Utility/XString.h	/^    inline UINT    Length() const               {return curLength;}$/;"	f	class:String
Lerp	OBSApi/Utility/Template.h	/^template<typename T> T Lerp(const T &p1, const T &p2, float t)$/;"	f
LevelIdc	libmfx/include/msdk/include/mfxmvc.h	/^    mfxU16 LevelIdc;$/;"	m
LevelStrings	libmfx/src/mfx_dispatcher_log.cpp	/^} LevelStrings []= $/;"	v
LevinsonDurbin	libfaac/tns.c	/^static double LevinsonDurbin(int fOrder,          \/* Filter order *\/$/;"	f	file:
LifeSpanHandler	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserClient.cs	/^        public BrowserLifeSpanHandler LifeSpanHandler { get; set; }$/;"	p	class:Browser.BrowserClient
Line2	OBSApi/Utility/XMath.h	/^    Line2()                                                 {}$/;"	f	struct:Line2
Line2	OBSApi/Utility/XMath.h	/^    Line2(const Vect2 &v1, const Vect2 &v2) : A(v1), B(v2)  {}$/;"	f	struct:Line2
Line2	OBSApi/Utility/XMath.h	/^struct BASE_EXPORT Line2$/;"	s
LineCaps	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	/^    DWORD   LineCaps;                   \/\/ D3DLINECAPS$/;"	m	struct:_D3DCAPS8
LineInside	OBSApi/Utility/XMath.h	/^    inline int LineInside(const Vect &p1, const Vect &p2, float precision=EPSILON) const$/;"	f	struct:Plane
LineIntersection	OBSApi/Utility/XMath.cpp	/^BOOL Bounds::LineIntersection(const Vect &v1, const Vect &v2, float &fT) const$/;"	f	class:Bounds
LineIntersectionTopDown	OBSApi/Utility/XMath.cpp	/^BOOL Bounds::LineIntersectionTopDown(const Vect &v1, const Vect &v2, float &fT) const$/;"	f	class:Bounds
LineIntersects	OBSApi/Utility/XMath.h	/^    inline BOOL LineIntersects(const Vect &v1, const Vect &v2) const$/;"	f	struct:Bounds
LineIntersectsTopDown	OBSApi/Utility/XMath.h	/^    inline BOOL LineIntersectsTopDown(const Vect &v1, const Vect &v2) const$/;"	f	struct:Bounds
Line_in	lame/doc/html/links.html	/^<h3><a name="Line_in">MP3 Encoding direct from line-in:<\/a><\/h3>$/;"	a
LinesIntersect	OBSApi/Utility/XMath.cpp	/^BOOL Line2::LinesIntersect(const Line2 &collider) const$/;"	f	class:Line2
Link	librtmp/rtmp.h	/^        RTMP_LNK Link;$/;"	m	struct:RTMP
LinkEndChild	lame/ACM/tinyxml/tinyxml.cpp	/^TiXmlNode* TiXmlNode::LinkEndChild( TiXmlNode* node )$/;"	f	class:TiXmlNode
List	OBSApi/Utility/Template.h	/^    inline List() : array(NULL), num(0) {}$/;"	f	class:List
List	OBSApi/Utility/Template.h	/^template<typename T> class List$/;"	c
ListboxHook	Source/WindowStuff.cpp	/^LRESULT CALLBACK OBS::ListboxHook(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam)$/;"	f	class:OBS
LoadAudioEncoderPropertiesFromRegistry	lame/dshow/Mpegac.cpp	/^STDMETHODIMP CMpegAudEnc::LoadAudioEncoderPropertiesFromRegistry()$/;"	f	class:CMpegAudEnc
LoadBuiltinServices	Source/Service.cpp	/^static inline void LoadBuiltinServices(vector<ServiceIdentifier> &services_)$/;"	f	file:
LoadDLLModule	libmfx/src/mfx_dxva2_device.cpp	/^void DXDevice::LoadDLLModule(const wchar_t *pModuleName)$/;"	f	class:DXDevice
LoadData	OBSApi/Utility/ConfigFile.cpp	/^void ConfigFile::LoadData()$/;"	f	class:ConfigFile
LoadDefaults	NoiseGate/NoiseGate.cpp	/^void NoiseGate::LoadDefaults()$/;"	f	class:NoiseGate
LoadDefaults	Source/D3D10Shader.cpp	/^void D3D10Shader::LoadDefaults()$/;"	f	class:D3D10Shader
LoadFile	OBSApi/Utility/ConfigFile.cpp	/^BOOL ConfigFile::LoadFile(DWORD dwOpenMode)$/;"	f	class:ConfigFile
LoadFile	lame/ACM/tinyxml/tinyxml.cpp	/^bool TiXmlDocument::LoadFile( const std::string& filename )$/;"	f	class:TiXmlDocument
LoadFile	lame/ACM/tinyxml/tinyxml.cpp	/^bool TiXmlDocument::LoadFile()$/;"	f	class:TiXmlDocument
LoadFilters	DShowPlugin/DeviceSource.cpp	/^bool DeviceSource::LoadFilters()$/;"	f	class:DeviceSource
LoadGlobalIni	Source/Main.cpp	/^void LoadGlobalIni()$/;"	f
LoadHandler	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserClient.cs	/^        public BrowserLoadHandler LoadHandler { get; set; }$/;"	p	class:Browser.BrowserClient
LoadImage	CLRHostPlugin/CLRCSharpSamplePlugin/SampleConfiguration.xaml.cs	/^        private void LoadImage(Uri imageUri)$/;"	m	class:CSharpSamplePlugin.SampleConfigurationDialog	file:
LoadInteropLibrary	CLRHostPlugin/CLRHostPlugin/CLRHost.cpp	/^CLRHost::LoadInteropLibrary() $/;"	f	class:CLRHost
LoadLibrary	CLRBrowserSourcePlugin/Client/CLRBrowserSourceClient.cs	/^        public extern static int LoadLibrary(string librayName);$/;"	m	class:CLRBrowserSourceClient.CLRBrowserSourceClient	file:
LoadLibrary	CLRBrowserSourcePlugin/Plugin/CLRBrowserSourcePlugin.cs	/^        public extern static int LoadLibrary(string librayName);$/;"	m	class:CLRBrowserSourcePlugin.CLRBrowserSourcePlugin	file:
LoadOutputCapabilities	lame/dshow/Mpegac.cpp	/^void CMpegAudEnc::LoadOutputCapabilities(DWORD sample_rate)$/;"	f	class:CMpegAudEnc
LoadPixelShader	OBSApi/GraphicsSystem.h	/^inline void  LoadPixelShader(Shader *pShader)                   {GS->LoadPixelShader(pShader);}$/;"	f
LoadPixelShader	Source/D3D10System.cpp	/^void D3D10System::LoadPixelShader(Shader *pShader)$/;"	f	class:D3D10System
LoadPlugin	CLRBrowserSourcePlugin/Plugin/CLRBrowserSourcePlugin.cs	/^        public override bool LoadPlugin()$/;"	m	class:CLRBrowserSourcePlugin.CLRBrowserSourcePlugin
LoadPlugin	CLRHostPlugin/CLRCSharpSamplePlugin/SamplePlugin.cs	/^        public override bool LoadPlugin()$/;"	m	class:CSharpSamplePlugin.SamplePlugin
LoadPlugin	CLRHostPlugin/CLRHostInterop/AbstractPlugin.h	/^        virtual bool LoadPlugin() { return true; };$/;"	f	class:CLROBS::abstract
LoadPlugin	CLRHostPlugin/CLRHostPlugin/CLRHostPlugin.cpp	/^bool LoadPlugin()$/;"	f
LoadPlugin	CLRHostPlugin/CLRHostPlugin/CLRPlugin.cpp	/^bool CLRPlugin::LoadPlugin()$/;"	f	class:CLRPlugin
LoadPlugin	DShowPlugin/DShowPlugin.cpp	/^bool LoadPlugin()$/;"	f
LoadPlugin	GraphicsCapture/GraphicsCapture.cpp	/^bool LoadPlugin()$/;"	f
LoadPlugin	NoiseGate/NoiseGate.cpp	/^bool LoadPlugin()$/;"	f
LoadPlugin	PSVPlugin/psvplugin.cpp	/^bool LoadPlugin()$/;"	f
LoadPlugin	scenesw/scenesw.cpp	/^bool LoadPlugin()$/;"	f
LoadPluginEx	scenesw/scenesw.cpp	/^bool LoadPluginEx(UINT apiVer)$/;"	f
LoadPlugins	CLRHostPlugin/CLRHostPlugin/CLRHost.cpp	/^CLRHost::LoadPlugins()$/;"	f	class:CLRHost
LoadPlugins	CLRHostPlugin/CLRHostPlugin/CLRHostPlugin.cpp	/^void CLRHostPlugin::LoadPlugins()$/;"	f	class:CLRHostPlugin
LoadSamplerState	OBSApi/GraphicsSystem.h	/^inline void  LoadSamplerState(SamplerState *sampler, UINT idSampler=0) {GS->LoadSamplerState(sampler, idSampler);}$/;"	f
LoadSamplerState	Source/D3D10System.cpp	/^void D3D10System::LoadSamplerState(SamplerState *sampler, UINT idSampler)$/;"	f	class:D3D10System
LoadSeDebugPrivilege	Source/Main.cpp	/^BOOL LoadSeDebugPrivilege()$/;"	f
LoadSeDebugPrivilege	injectHelper/injectHelper.c	/^BOOL LoadSeDebugPrivilege()$/;"	f
LoadSelectedDLL	libmfx/src/mfx_dispatcher.cpp	/^mfxStatus MFX_DISP_HANDLE::LoadSelectedDLL(const msdk_disp_char *pPath, eMfxImplType implType,$/;"	f	class:MFX_DISP_HANDLE
LoadService	Source/Service.cpp	/^std::pair<std::unique_ptr<XConfig>, XElement*>  LoadService(String *failReason)$/;"	f
LoadService	Source/Service.cpp	/^std::pair<std::unique_ptr<XConfig>, XElement*> LoadService(const ServiceIdentifier& sid, String *failReason)$/;"	f
LoadServiceIdentifiers	Source/Service.cpp	/^vector<ServiceIdentifier> LoadServiceIdentifiers()$/;"	f
LoadSettingComboInt	Source/Settings.cpp	/^int LoadSettingComboInt(HWND hwnd, CTSTR lpConfigSection, CTSTR lpConfigName, int defVal, int maxVal)$/;"	f
LoadSettingComboString	Source/Settings.cpp	/^String LoadSettingComboString(HWND hwnd, CTSTR lpConfigSection, CTSTR lpConfigName, CTSTR lpDefault)$/;"	f
LoadSettingEditInt	Source/Settings.cpp	/^int LoadSettingEditInt(HWND hwnd, CTSTR lpConfigSection, CTSTR lpConfigName, int defVal)$/;"	f
LoadSettingEditString	Source/Settings.cpp	/^String LoadSettingEditString(HWND hwnd, CTSTR lpConfigSection, CTSTR lpConfigName, CTSTR lpDefault)$/;"	f
LoadSettingTextComboString	Source/Settings.cpp	/^String LoadSettingTextComboString(HWND hwnd, CTSTR lpConfigSection, CTSTR lpConfigName, CTSTR lpDefault)$/;"	f
LoadSettings	NoiseGate/NoiseGate.cpp	/^void NoiseGate::LoadSettings()$/;"	f	class:NoiseGate
LoadSettings	PSVPlugin/psvplugin.cpp	/^void LoadSettings()$/;"	f
LoadStringFile	OBSApi/Utility/XTLocalization.cpp	/^BOOL LocaleStringLookup::LoadStringFile(CTSTR lpFile, bool bClear)$/;"	f	class:LocaleStringLookup
LoadStringFile	OBSApi/Utility/XTLocalization.h	/^inline BOOL  LoadStringFile(CTSTR lpResource)   {return locale->LoadStringFile(lpResource);}$/;"	f
LoadTexture	CLRHostPlugin/CLRCSharpSamplePlugin/SampleImageSource.cs	/^        private void LoadTexture(String imageFile)$/;"	m	class:CSharpSamplePlugin.SampleImageSource	file:
LoadTexture	OBSApi/GraphicsSystem.h	/^inline void  LoadTexture(Texture *texture, UINT idTexture=0)    {GS->LoadTexture(texture, idTexture);}$/;"	f
LoadTexture	Source/D3D10System.cpp	/^void D3D10System::LoadTexture(Texture *texture, UINT idTexture)$/;"	f	class:D3D10System
LoadUserServices	Source/Service.cpp	/^static inline void LoadUserServices(vector<ServiceIdentifier> &services)$/;"	f	file:
LoadVertexBuffer	OBSApi/GraphicsSystem.h	/^inline void  LoadVertexBuffer(VertexBuffer* vb)                 {GS->LoadVertexBuffer(vb);}$/;"	f
LoadVertexBuffer	Source/D3D10System.cpp	/^void D3D10System::LoadVertexBuffer(VertexBuffer* vb)$/;"	f	class:D3D10System
LoadVertexShader	OBSApi/GraphicsSystem.h	/^inline void  LoadVertexShader(Shader *vShader)                  {GS->LoadVertexShader(vShader);}$/;"	f
LoadVertexShader	Source/D3D10System.cpp	/^void D3D10System::LoadVertexShader(Shader *vShader)$/;"	f	class:D3D10System
LocalStorage	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public CefState LocalStorage { get; set; }$/;"	p	class:Shared.BrowserInstanceSettings
Locale	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public string Locale { get; set; }$/;"	p	class:Shared.BrowserRuntimeSettings
LocaleIsRTL	OBSApi/Utility/XTLocalization.cpp	/^bool LocaleIsRTL(LocaleStringLookup *l)$/;"	f
LocaleNativeName	OBSApi/Utility/XTLocalization.h	/^struct LocaleNativeName$/;"	s
LocaleStringCache	OBSApi/Utility/XTLocalization.h	/^struct LocaleStringCache : public List<LocaleStringItem*>$/;"	s
LocaleStringItem	OBSApi/Utility/XTLocalization.h	/^struct LocaleStringItem$/;"	s
LocaleStringLookup	OBSApi/Utility/XTLocalization.cpp	/^LocaleStringLookup::LocaleStringLookup()$/;"	f	class:LocaleStringLookup
LocaleStringLookup	OBSApi/Utility/XTLocalization.h	/^class BASE_EXPORT LocaleStringLookup$/;"	c
LocalesDirPath	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public string LocalesDirPath { get; set; }$/;"	p	class:Shared.BrowserRuntimeSettings
Localization.h	CLRHostPlugin/CLRHostPlugin/Localization.h	1;"	F
LocalizeMenu	OBSApi/OBSApi.cpp	/^void LocalizeMenu(HMENU hMenu, LocaleStringLookup *lookup)$/;"	f
LocalizeWindow	OBSApi/OBSApi.cpp	/^void LocalizeWindow(HWND hwnd, LocaleStringLookup *lookup)$/;"	f
Lock	libmfx/include/msdk/include/mfxvideo.h	/^    mfxStatus  (MFX_CDECL  *Lock)     (mfxHDL pthis, mfxMemId mid, mfxFrameData *ptr);$/;"	m
Lock	libmfx/include/msdk/include/mfxvideo.h	/^    mfxStatus  (MFX_CDECL *Lock)     (mfxHDL pthis, mfxMemId mid, mfxU8 **ptr);$/;"	m
LockFrame	QSVHelper/IntelSupport/src/d3d11_allocator.cpp	/^mfxStatus D3D11FrameAllocator::LockFrame(mfxMemId mid, mfxFrameData *ptr)$/;"	f	class:D3D11FrameAllocator
LockTexture	GraphicsCapture/MemoryCapture.cpp	/^Texture* MemoryCapture::LockTexture()$/;"	f	class:MemoryCapture
LockTexture	GraphicsCapture/SharedTexCapture.cpp	/^Texture* SharedTexCapture::LockTexture()$/;"	f	class:SharedTexCapture
LockTexture	GraphicsCapture/WindowCapture.cpp	/^Texture* WindowCapture::LockTexture()$/;"	f	class:WindowCapture
Lock_	QSVHelper/IntelSupport/src/base_allocator.cpp	/^mfxStatus MFXBufferAllocator::Lock_(mfxHDL pthis, mfxMemId mid, mfxU8 **ptr)$/;"	f	class:MFXBufferAllocator
Lock_	QSVHelper/IntelSupport/src/base_allocator.cpp	/^mfxStatus MFXFrameAllocator::Lock_(mfxHDL pthis, mfxMemId mid, mfxFrameData *ptr)$/;"	f	class:MFXFrameAllocator
Locked	libmfx/include/msdk/include/mfxastructures.h	/^    mfxU16  Locked;$/;"	m
Locked	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16      Locked;$/;"	m
Log	OBSApi/Utility/XMath.cpp	/^Quat& Quat::Log()$/;"	f	class:Quat
Log	OBSApi/Utility/XT.cpp	/^void __cdecl Log(const TCHAR *format, ...)$/;"	f
LogD3D9SurfaceInfo	GraphicsCapture/GraphicsCaptureHook/D3D9LogStuff.cpp	/^void LogD3D9SurfaceInfo(IDirect3DSurface9 *surf)$/;"	f
LogFile	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public string LogFile { get; set; }$/;"	p	class:Shared.BrowserRuntimeSettings
LogFile	OBSApi/Utility/XT.cpp	/^XFile                   LogFile;$/;"	v
LogFileAge	Source/LogUploader.cpp	/^    String LogFileAge(String &name)$/;"	f
LogInterfaceType	Source/RTMPPublisher.cpp	/^void LogInterfaceType (RTMP *rtmp)$/;"	f
LogModule	Source/Main.cpp	/^static void LogModule(CTSTR lpModuleName, HMODULE addr)$/;"	f	file:
LogPresentParams	GraphicsCapture/GraphicsCaptureHook/D3D9LogStuff.cpp	/^void LogPresentParams(D3DPRESENT_PARAMETERS &pp)$/;"	f
LogRaw	OBSApi/Utility/XT.cpp	/^void __cdecl LogRaw(const TCHAR *text, UINT len)$/;"	f
LogSeverity	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public CefLogSeverity LogSeverity { get; set; }$/;"	p	class:Shared.BrowserRuntimeSettings
LogSystemStats	Source/Main.cpp	/^void LogSystemStats()$/;"	f
LogUpdateCallback	OBSApi/Utility/XT.h	/^typedef void(*LogUpdateCallback)();$/;"	t
LogUpdateProc	OBSApi/Utility/XT.cpp	/^LogUpdateCallback       LogUpdateProc;$/;"	v
LogUploadMonitorCallback	Source/WindowStuff.cpp	/^void LogUploadMonitorCallback()$/;"	f
LogUploadResult	Source/LogUploader.h	/^    LogUploadResult() : openAnalyzerOnSuccess(false) {}$/;"	f	struct:LogUploadResult
LogUploadResult	Source/LogUploader.h	/^struct LogUploadResult$/;"	s
LogUploadResultProc	Source/WindowStuff.cpp	/^INT_PTR CALLBACK LogUploadResultProc(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam)$/;"	f
LogUploader.cpp	Source/LogUploader.cpp	1;"	F
LogUploader.h	Source/LogUploader.h	1;"	F
LogVideoCardStats	Source/D3D10System.cpp	/^void LogVideoCardStats()$/;"	f
LogWindowProc	Source/WindowStuff.cpp	/^LRESULT CALLBACK OBS::LogWindowProc(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam)$/;"	f	class:OBS
Logva	OBSApi/Utility/XT.cpp	/^void __cdecl Logva(const TCHAR *format, va_list argptr)$/;"	f
LongHuffmancodebits	lame/libmp3lame/bitstream.c	/^LongHuffmancodebits(lame_internal_flags * gfc, gr_info const *gi)$/;"	f	file:
LongTermIdx	libmfx/include/msdk/include/mfxstructures.h	/^            mfxU16      LongTermIdx;$/;"	m
LongTermIdx	libmfx/include/msdk/include/mfxstructures.h	/^        mfxU16      LongTermIdx;$/;"	m
LongTermIdx	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16          LongTermIdx;$/;"	m
LongTermRefList	libmfx/include/msdk/include/mfxstructures.h	/^    } PreferredRefList[32], RejectedRefList[16], LongTermRefList[16];$/;"	m
LookAheadDS	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16      LookAheadDS;$/;"	m
LookAheadDepth	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16      LookAheadDepth;$/;"	m
LookupString	OBSApi/Utility/XTLocalization.cpp	/^CTSTR LocaleStringLookup::LookupString(CTSTR lookupVal)$/;"	f	class:LocaleStringLookup
LtpEncode	libfaac/ltp.c	/^int LtpEncode(faacEncHandle hEncoder,$/;"	f
LtpEnd	libfaac/ltp.c	/^void LtpEnd(faacEncHandle hEncoder)$/;"	f
LtpInfo	libfaac/coder.h	/^} LtpInfo;$/;"	t
LtpInit	libfaac/ltp.c	/^void LtpInit(faacEncHandle hEncoder)$/;"	f
LtpReconstruct	libfaac/ltp.c	/^void LtpReconstruct(CoderInfo *coderInfo, LtpInfo *ltpInfo, double *p_spectrum)$/;"	f
LtpUpdate	libfaac/ltp.c	/^void  LtpUpdate(LtpInfo *ltpInfo, double *time_signal,$/;"	f
LumaKeyEnable	libmfx/include/msdk/include/mfxstructures.h	/^        mfxU16  LumaKeyEnable;$/;"	m	struct:mfxVPPCompInputStream
LumaKeyMax	libmfx/include/msdk/include/mfxstructures.h	/^        mfxU16  LumaKeyMax;$/;"	m	struct:mfxVPPCompInputStream
LumaKeyMin	libmfx/include/msdk/include/mfxstructures.h	/^        mfxU16  LumaKeyMin;$/;"	m	struct:mfxVPPCompInputStream
MACRO0	lame/mpglib/layer3.c	1307;"	d	file:
MACRO1	lame/mpglib/layer3.c	1314;"	d	file:
MACRO2	lame/mpglib/layer3.c	1319;"	d	file:
MAD	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU32          MAD;$/;"	m
MAGIC_FLOAT	lame/libmp3lame/takehiro.c	140;"	d	file:
MAGIC_FLOAT	lame/libmp3lame/vbrquantize.c	/^static DOUBLEX const MAGIC_FLOAT = MAGIC_FLOAT_def;$/;"	v	file:
MAGIC_FLOAT	libfaac/aacquant.c	290;"	d	file:
MAGIC_FLOAT_def	lame/libmp3lame/vbrquantize.c	90;"	d	file:
MAGIC_INT	lame/libmp3lame/takehiro.c	141;"	d	file:
MAGIC_INT	lame/libmp3lame/vbrquantize.c	/^static int const MAGIC_INT = MAGIC_INT_def;$/;"	v	file:
MAGIC_INT	libfaac/aacquant.c	291;"	d	file:
MAGIC_INT_def	lame/libmp3lame/vbrquantize.c	91;"	d	file:
MAIN	libfaac/bitstream.h	130;"	d
MAIN	libfaac/include/faaccfg.h	32;"	d
MAINT	lame/ACM/ADbg/Makefile	/^MAINT = #$/;"	m
MAINT	lame/ACM/Makefile	/^MAINT = #$/;"	m
MAINT	lame/ACM/ddk/Makefile	/^MAINT = #$/;"	m
MAINT	lame/ACM/tinyxml/Makefile	/^MAINT = #$/;"	m
MAINT	lame/Dll/Makefile	/^MAINT = #$/;"	m
MAINT	lame/Makefile	/^MAINT = #$/;"	m
MAINT	lame/debian/Makefile	/^MAINT = #$/;"	m
MAINT	lame/doc/Makefile	/^MAINT = #$/;"	m
MAINT	lame/doc/html/Makefile	/^MAINT = #$/;"	m
MAINT	lame/doc/man/Makefile	/^MAINT = #$/;"	m
MAINT	lame/dshow/Makefile	/^MAINT = #$/;"	m
MAINT	lame/frontend/Makefile	/^MAINT = #$/;"	m
MAINT	lame/include/Makefile	/^MAINT = #$/;"	m
MAINT	lame/libmp3lame/Makefile	/^MAINT = #$/;"	m
MAINT	lame/libmp3lame/i386/Makefile	/^MAINT = #$/;"	m
MAINT	lame/libmp3lame/vector/Makefile	/^MAINT = #$/;"	m
MAINT	lame/mac/Makefile	/^MAINT = #$/;"	m
MAINT	lame/macosx/English.lproj/Makefile	/^MAINT = #$/;"	m
MAINT	lame/macosx/LAME.xcodeproj/Makefile	/^MAINT = #$/;"	m
MAINT	lame/macosx/Makefile	/^MAINT = #$/;"	m
MAINT	lame/misc/Makefile	/^MAINT = #$/;"	m
MAINT	lame/mpglib/Makefile	/^MAINT = #$/;"	m
MAINT	lame/vc_solution/Makefile	/^MAINT = #$/;"	m
MAIN_H_INCLUDED	lame/frontend/main.h	25;"	d
MAJORVERSION	lame/Dll/BladeMP3EncDLL.c	/^const BYTE MAJORVERSION = 1;$/;"	v
MAKEBGR	OBSApi/Utility/XT.h	289;"	d
MAKEBGRA	OBSApi/Utility/XT.h	287;"	d
MAKEDEP	lame/ACM/ADbg/Makefile	/^MAKEDEP = -M$/;"	m
MAKEDEP	lame/ACM/Makefile	/^MAKEDEP = -M$/;"	m
MAKEDEP	lame/ACM/ddk/Makefile	/^MAKEDEP = -M$/;"	m
MAKEDEP	lame/ACM/tinyxml/Makefile	/^MAKEDEP = -M$/;"	m
MAKEDEP	lame/Dll/Makefile	/^MAKEDEP = -M$/;"	m
MAKEDEP	lame/Makefile	/^MAKEDEP = -M$/;"	m
MAKEDEP	lame/debian/Makefile	/^MAKEDEP = -M$/;"	m
MAKEDEP	lame/doc/Makefile	/^MAKEDEP = -M$/;"	m
MAKEDEP	lame/doc/html/Makefile	/^MAKEDEP = -M$/;"	m
MAKEDEP	lame/doc/man/Makefile	/^MAKEDEP = -M$/;"	m
MAKEDEP	lame/dshow/Makefile	/^MAKEDEP = -M$/;"	m
MAKEDEP	lame/frontend/Makefile	/^MAKEDEP = -M$/;"	m
MAKEDEP	lame/include/Makefile	/^MAKEDEP = -M$/;"	m
MAKEDEP	lame/libmp3lame/Makefile	/^MAKEDEP = -M$/;"	m
MAKEDEP	lame/libmp3lame/i386/Makefile	/^MAKEDEP = -M$/;"	m
MAKEDEP	lame/libmp3lame/vector/Makefile	/^MAKEDEP = -M$/;"	m
MAKEDEP	lame/mac/Makefile	/^MAKEDEP = -M$/;"	m
MAKEDEP	lame/macosx/English.lproj/Makefile	/^MAKEDEP = -M$/;"	m
MAKEDEP	lame/macosx/LAME.xcodeproj/Makefile	/^MAKEDEP = -M$/;"	m
MAKEDEP	lame/macosx/Makefile	/^MAKEDEP = -M$/;"	m
MAKEDEP	lame/misc/Makefile	/^MAKEDEP = -M$/;"	m
MAKEDEP	lame/mpglib/Makefile	/^MAKEDEP = -M$/;"	m
MAKEDEP	lame/vc_solution/Makefile	/^MAKEDEP = -M$/;"	m
MAKEDWORD	OBSApi/Utility/XT.h	227;"	d
MAKEFOURCC	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1262;"	d
MAKEINFO	lame/ACM/ADbg/Makefile	/^MAKEINFO = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run makeinfo$/;"	m
MAKEINFO	lame/ACM/Makefile	/^MAKEINFO = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run makeinfo$/;"	m
MAKEINFO	lame/ACM/ddk/Makefile	/^MAKEINFO = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run makeinfo$/;"	m
MAKEINFO	lame/ACM/tinyxml/Makefile	/^MAKEINFO = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run makeinfo$/;"	m
MAKEINFO	lame/Dll/Makefile	/^MAKEINFO = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run makeinfo$/;"	m
MAKEINFO	lame/Makefile	/^MAKEINFO = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run makeinfo$/;"	m
MAKEINFO	lame/debian/Makefile	/^MAKEINFO = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run makeinfo$/;"	m
MAKEINFO	lame/doc/Makefile	/^MAKEINFO = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run makeinfo$/;"	m
MAKEINFO	lame/doc/html/Makefile	/^MAKEINFO = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run makeinfo$/;"	m
MAKEINFO	lame/doc/man/Makefile	/^MAKEINFO = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run makeinfo$/;"	m
MAKEINFO	lame/dshow/Makefile	/^MAKEINFO = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run makeinfo$/;"	m
MAKEINFO	lame/frontend/Makefile	/^MAKEINFO = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run makeinfo$/;"	m
MAKEINFO	lame/include/Makefile	/^MAKEINFO = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run makeinfo$/;"	m
MAKEINFO	lame/libmp3lame/Makefile	/^MAKEINFO = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run makeinfo$/;"	m
MAKEINFO	lame/libmp3lame/i386/Makefile	/^MAKEINFO = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run makeinfo$/;"	m
MAKEINFO	lame/libmp3lame/vector/Makefile	/^MAKEINFO = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run makeinfo$/;"	m
MAKEINFO	lame/mac/Makefile	/^MAKEINFO = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run makeinfo$/;"	m
MAKEINFO	lame/macosx/English.lproj/Makefile	/^MAKEINFO = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run makeinfo$/;"	m
MAKEINFO	lame/macosx/LAME.xcodeproj/Makefile	/^MAKEINFO = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run makeinfo$/;"	m
MAKEINFO	lame/macosx/Makefile	/^MAKEINFO = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run makeinfo$/;"	m
MAKEINFO	lame/misc/Makefile	/^MAKEINFO = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run makeinfo$/;"	m
MAKEINFO	lame/mpglib/Makefile	/^MAKEINFO = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run makeinfo$/;"	m
MAKEINFO	lame/vc_solution/Makefile	/^MAKEINFO = ${SHELL} \/d\/projects\/opensplit\/lame\/missing --run makeinfo$/;"	m
MAKEQUAD	OBSApi/Utility/XT.h	228;"	d
MAKERGB	OBSApi/Utility/XT.h	288;"	d
MAKERGBA	OBSApi/Utility/XT.h	286;"	d
MAKE_ACM_VERSION	lame/ACM/ddk/msacmdrv.h	68;"	d
MAKE_D3DHRESULT	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1243;"	d
MAKE_INCREMENT_T	libsamplerate/src_sinc.c	38;"	d	file:
MAKE_MAGIC	libsamplerate/common.h	47;"	d
MANIFEST_PATH	Source/Updater.cpp	109;"	d	file:
MANIFEST_URL	Source/Updater.cpp	113;"	d	file:
MANIFEST_WITH_ARCHIVES	Source/Updater.cpp	105;"	d	file:
MANS	lame/doc/man/Makefile	/^MANS = $(man_MANS)$/;"	m
MANUAL_BUFFER_SIZE	OBSApi/GraphicsSystem.cpp	24;"	d	file:
MAP_FAILED	Source/mongoose.c	1626;"	d	file:
MAP_FAILED	Source/mongoose.c	1657;"	d	file:
MAP_PRIVATE	Source/mongoose.c	1627;"	d	file:
MAP_PRIVATE	Source/mongoose.c	1658;"	d	file:
MAX	OBSApi/Utility/XT.h	226;"	d
MAX	lame/misc/abx.c	80;"	d	file:
MAX	libsamplerate/common.h	41;"	d
MAXFACTORS	libfaac/kiss_fft/_kiss_fft_guts.h	22;"	d
MAXFRAMESIZE	lame/libmp3lame/VbrTag.c	498;"	d	file:
MAXFRAMESIZE	lame/mpglib/mpg123.h	85;"	d
MAXINDEX	libfaac/huffman.h	39;"	d
MAXLOGM	libfaac/fft.c	29;"	d	file:
MAXLOGR	libfaac/fft.c	30;"	d	file:
MAXMPGLAG	lame/libmp3lame/lame-analysis.h	27;"	d
MAX_BITS_PER_CHANNEL	lame/libmp3lame/util.h	85;"	d
MAX_BITS_PER_GRANULE	lame/libmp3lame/util.h	86;"	d
MAX_BUFFERED_PACKETS	Source/RTMPPublisher.cpp	24;"	d	file:
MAX_CGI_ENVIR_VARS	Source/mongoose.c	1383;"	d	file:
MAX_CHANNELS	libfaac/coder.h	35;"	d
MAX_DEVICE_IDENTIFIER_STRING	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1587;"	d
MAX_ENTITY_LENGTH	lame/ACM/tinyxml/tinyxml.h	/^		MAX_ENTITY_LENGTH = 6$/;"	e	enum:TiXmlBase::<anonymous>
MAX_FFT	libfaac/fft.h	29;"	d
MAX_HEADER_BUF	lame/libmp3lame/util.h	276;"	d
MAX_HEADER_LEN	lame/libmp3lame/util.h	277;"	d
MAX_IAMSTREAMCONFIG_CAPS	lame/dshow/Mpegac.h	85;"	d
MAX_IGNORED_FRAMES	librtmp/rtmp.c	4900;"	d	file:
MAX_INDICATOR	lame/include/lame.h	/^  MAX_INDICATOR   \/* Don't use this! It's used for sanity checks. *\/$/;"	e	enum:MPEG_mode_e
MAX_INPUT_FRAMESIZE	lame/mpglib/common.c	108;"	d	file:
MAX_LEN	lame/misc/abx.c	98;"	d	file:
MAX_LENGTH	lame/libmp3lame/bitstream.c	50;"	d	file:
MAX_LT_PRED_LONG_SFB	libfaac/coder.h	82;"	d
MAX_LT_PRED_SHORT_SFB	libfaac/coder.h	83;"	d
MAX_NOGAP	lame/frontend/lame_main.c	618;"	d	file:
MAX_ORDER	lame/libmp3lame/gain_analysis.h	/^    enum { MAX_ORDER = (BUTTER_ORDER > YULE_ORDER ? BUTTER_ORDER : YULE_ORDER)$/;"	e
MAX_PATH_SIZE	Source/mongoose.c	1380;"	d	file:
MAX_PLUGIN_FILE_LINE	libmfx/src/mfx_plugin_hive.cpp	/^        MAX_PLUGIN_FILE_LINE = 4096$/;"	e	file:
MAX_PLUGIN_NAME	libmfx/include/mfx_plugin_hive.h	/^        MAX_PLUGIN_NAME = 4096$/;"	e	enum:MFX::<anonymous>
MAX_PLUGIN_PATH	libmfx/include/mfx_plugin_hive.h	/^        MAX_PLUGIN_PATH = 4096$/;"	e	enum:MFX::<anonymous>
MAX_PREFIX_LENGTH	lame/ACM/ADbg/ADbg.h	/^static const int MAX_PREFIX_LENGTH = 128;$/;"	v
MAX_PRINT_LEN	librtmp/log.c	27;"	d	file:
MAX_REQUEST_SIZE	Source/mongoose.c	1378;"	d	file:
MAX_SAMPLES_PER_WINDOW	lame/libmp3lame/gain_analysis.h	/^            , MAX_SAMPLES_PER_WINDOW = ((MAX_SAMP_FREQ * RMS_WINDOW_TIME_NUMERATOR) \/ RMS_WINDOW_TIME_DENOMINATOR + 1) \/* max. Samples per Time slice *\/$/;"	e
MAX_SAMP_FREQ	lame/libmp3lame/gain_analysis.h	55;"	d
MAX_SCFAC_BANDS	libfaac/coder.h	56;"	d
MAX_SHORT_WINDOWS	libfaac/coder.h	55;"	d
MAX_STACK_TRACE	OBSApi/Utility/XT.cpp	169;"	d	file:
MAX_TEX_SIZE_H	Source/TextOutputSource.cpp	32;"	d	file:
MAX_TEX_SIZE_W	Source/TextOutputSource.cpp	31;"	d	file:
MAX_TRANSITION_TIME	Source/BitmapTransitionSource.cpp	27;"	d	file:
MAX_ULONG_STR	Source/Server.cpp	241;"	d	file:
MAX_U_32_NUM	lame/frontend/get_audio.c	61;"	d	file:
MAX_U_32_NUM	lame/libmp3lame/util.h	49;"	d
MAX_U_32_NUM	lame/libmp3lame/util.h	51;"	d
MAX_X	OBSApi/Utility/XMath.h	/^enum {MAX_Z=1, MAX_Y=2, MAX_X=4};$/;"	e
MAX_Y	OBSApi/Utility/XMath.h	/^enum {MAX_Z=1, MAX_Y=2, MAX_X=4};$/;"	e
MAX_Z	OBSApi/Utility/XMath.h	/^enum {MAX_Z=1, MAX_Y=2, MAX_X=4};$/;"	e
MAX_dB	lame/libmp3lame/gain_analysis.h	59;"	d
MBBRC	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16      MBBRC;                  \/* tri-state option *\/$/;"	m
MBPerSec	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU32      MBPerSec;$/;"	m
MD5Context	Source/mongoose.c	/^typedef struct MD5Context {$/;"	s	file:
MD5Final	Source/mongoose.c	/^static void MD5Final(unsigned char digest[16], MD5_CTX *ctx) {$/;"	f	file:
MD5Init	Source/mongoose.c	/^static void MD5Init(MD5_CTX *ctx) {$/;"	f	file:
MD5STEP	Source/mongoose.c	4015;"	d	file:
MD5Transform	Source/mongoose.c	/^static void MD5Transform(uint32_t buf[4], uint32_t const in[16]) {$/;"	f	file:
MD5Update	Source/mongoose.c	/^static void MD5Update(MD5_CTX *ctx, unsigned char const *buf, unsigned len) {$/;"	f	file:
MD5_CTX	Source/mongoose.c	/^} MD5_CTX;$/;"	t	file:
MD5_CTX	librtmp/md5.h	/^} MD5_CTX;$/;"	t
MD5_CTX	librtmp/rtmp.c	/^typedef struct md5_ctx	MD5_CTX;$/;"	t	file:
MD5_CTX	librtmp/rtmp.c	2815;"	d	file:
MD5_DIGEST_LENGTH	librtmp/rtmp.c	34;"	d	file:
MD5_DIGEST_LENGTH	librtmp/rtmp.c	50;"	d	file:
MD5_DIGEST_LENGTH	librtmp/rtmp_sys.h	149;"	d
MD5_Final	librtmp/md5.c	/^void MD5_Final(unsigned char *result, MD5_CTX *ctx)$/;"	f
MD5_Final	librtmp/rtmp.c	2818;"	d	file:
MD5_Final	librtmp/rtmp.c	2823;"	d	file:
MD5_Init	librtmp/md5.c	/^void MD5_Init(MD5_CTX *ctx)$/;"	f
MD5_Init	librtmp/rtmp.c	2816;"	d	file:
MD5_Init	librtmp/rtmp.c	2821;"	d	file:
MD5_Update	librtmp/md5.c	/^void MD5_Update(MD5_CTX *ctx, void *data, unsigned long size)$/;"	f
MD5_Update	librtmp/rtmp.c	2817;"	d	file:
MD5_Update	librtmp/rtmp.c	2822;"	d	file:
MD5_u32plus	librtmp/md5.h	/^typedef unsigned int MD5_u32plus;$/;"	t
MDB_DEFAULT	lame/include/lame.h	/^    MDB_DEFAULT=0,$/;"	e	enum:buffer_constraint_e
MDB_MAXIMUM	lame/include/lame.h	/^    MDB_MAXIMUM=2$/;"	e	enum:buffer_constraint_e
MDB_STRICT_ISO	lame/include/lame.h	/^    MDB_STRICT_ISO=1,$/;"	e	enum:buffer_constraint_e
MDCT	libfaac/filtbank.c	/^static void MDCT( FFT_Tables *fft_tables, double *data, int N )$/;"	f	file:
MDCTDELAY	lame/libmp3lame/encoder.h	82;"	d
MDH	librtmp/dh.h	/^typedef struct MDH$/;"	s
MDH	librtmp/dh.h	/^} MDH;$/;"	t
MDH	librtmp/dh.h	138;"	d
MDH_compute_key	librtmp/dh.h	/^static int MDH_compute_key(uint8_t *secret, size_t len, MP_t pub, MDH *dh)$/;"	f
MDH_compute_key	librtmp/dh.h	142;"	d
MDH_free	librtmp/dh.h	101;"	d
MDH_free	librtmp/dh.h	140;"	d
MDH_free	librtmp/dh.h	51;"	d
MDH_generate_key	librtmp/dh.h	/^static int MDH_generate_key(MDH *dh)$/;"	f
MDH_generate_key	librtmp/dh.h	106;"	d
MDH_generate_key	librtmp/dh.h	141;"	d
MDH_new	librtmp/dh.h	100;"	d
MDH_new	librtmp/dh.h	139;"	d
MDH_new	librtmp/dh.h	50;"	d
MECostType	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16      MECostType;$/;"	m
MEDIASUBTYPE_I420	DShowPlugin/MediaInfoStuff.h	/^const GUID MEDIASUBTYPE_I420 = {0x30323449, 0x0000, 0x0010, {0x80, 0x00, 0x00, 0xaa, 0x00, 0x38, 0x9b, 0x71}};$/;"	v
MEDIUM	lame/include/lame.h	/^    MEDIUM = 1006,$/;"	e	enum:preset_mode_e
MEDIUM_FAST	lame/include/lame.h	/^    MEDIUM_FAST = 1007$/;"	e	enum:preset_mode_e
MEMBOUNDRY	OBSApi/Utility/XString.cpp	43;"	d	file:
MEMBOUNDRY	OBSApi/Utility/XString.cpp	45;"	d	file:
MEMORY_BLOCK	minhook/src/buffer.cpp	/^	struct MEMORY_BLOCK$/;"	s	namespace:MinHook::<anonymous>	file:
MEMTYPE_FROM_MASK	QSVHelper/IntelSupport/include/base_allocator.h	/^    static const mfxU32 MEMTYPE_FROM_MASK = MFX_MEMTYPE_FROM_ENCODE | MFX_MEMTYPE_FROM_DECODE | MFX_MEMTYPE_FROM_VPPIN | MFX_MEMTYPE_FROM_VPPOUT;$/;"	m	class:BaseFrameAllocator
MESearchType	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16      MESearchType;$/;"	m
MFSIZE	lame/libmp3lame/util.h	297;"	d
MFX	libmfx/include/mfx_critical_section.h	/^namespace MFX$/;"	n
MFX	libmfx/include/mfx_dxva2_device.h	/^namespace MFX$/;"	n
MFX	libmfx/include/mfx_library_iterator.h	/^namespace MFX$/;"	n
MFX	libmfx/include/mfx_load_dll.h	/^namespace MFX$/;"	n
MFX	libmfx/include/mfx_load_plugin.h	/^namespace MFX$/;"	n
MFX	libmfx/include/mfx_plugin_hive.h	/^namespace MFX {$/;"	n
MFX	libmfx/include/mfx_vector.h	/^namespace MFX $/;"	n
MFX	libmfx/include/mfx_win_reg_key.h	/^namespace MFX {$/;"	n
MFX	libmfx/src/mfx_critical_section.cpp	/^namespace MFX$/;"	n	file:
MFX	libmfx/src/mfx_library_iterator.cpp	/^namespace MFX$/;"	n	file:
MFX	libmfx/src/mfx_load_dll.cpp	/^namespace MFX$/;"	n	file:
MFX	libmfx/src/mfx_win_reg_key.cpp	/^namespace MFX$/;"	n	file:
MFXAudioDECODE	libmfx/include/msdk/include/mfxaudio++.h	/^    MFXAudioDECODE(mfxSession session) { m_session = session; }$/;"	f	class:MFXAudioDECODE
MFXAudioDECODE	libmfx/include/msdk/include/mfxaudio++.h	/^class MFXAudioDECODE$/;"	c
MFXAudioENCODE	libmfx/include/msdk/include/mfxaudio++.h	/^    MFXAudioENCODE(mfxSession session) { m_session = session; }$/;"	f	class:MFXAudioENCODE
MFXAudioENCODE	libmfx/include/msdk/include/mfxaudio++.h	/^class MFXAudioENCODE$/;"	c
MFXAudioSession	libmfx/include/msdk/include/mfxaudio++.h	/^    MFXAudioSession(void) { m_session = (mfxSession) 0; }$/;"	f	class:MFXAudioSession
MFXAudioSession	libmfx/include/msdk/include/mfxaudio++.h	/^class MFXAudioSession$/;"	c
MFXAutomaticCriticalSection	libmfx/include/mfx_critical_section.h	/^    explicit MFXAutomaticCriticalSection(mfxCriticalSection *pCSection)$/;"	f	class:MFX::MFXAutomaticCriticalSection
MFXAutomaticCriticalSection	libmfx/include/mfx_critical_section.h	/^class MFXAutomaticCriticalSection$/;"	c	namespace:MFX
MFXBufferAllocator	QSVHelper/IntelSupport/include/base_allocator.h	/^class MFXBufferAllocator : public mfxBufferAllocator$/;"	c
MFXBufferAllocator	QSVHelper/IntelSupport/src/base_allocator.cpp	/^MFXBufferAllocator::MFXBufferAllocator()$/;"	f	class:MFXBufferAllocator
MFXCloneSession	libmfx/src/main.cpp	/^mfxStatus DISPATCHER_EXPOSED_PREFIX(MFXCloneSession)(mfxSession session, mfxSession *clone)$/;"	f
MFXClose	libmfx/src/main.cpp	/^mfxStatus DISPATCHER_EXPOSED_PREFIX(MFXClose)(mfxSession session)$/;"	f
MFXCodecPlugin	libmfx/include/msdk/include/mfxplugin++.h	/^struct MFXCodecPlugin : MFXPlugin$/;"	s
MFXCodecPluginAdapterBase	libmfx/include/msdk/include/mfxplugin++.h	/^        MFXCodecPluginAdapterBase(T * pCodecPlg)$/;"	f	class:detail::MFXCodecPluginAdapterBase
MFXCodecPluginAdapterBase	libmfx/include/msdk/include/mfxplugin++.h	/^        MFXCodecPluginAdapterBase(const MFXCodecPluginAdapterBase<T> & that) $/;"	f	class:detail::MFXCodecPluginAdapterBase
MFXCodecPluginAdapterBase	libmfx/include/msdk/include/mfxplugin++.h	/^    class MFXCodecPluginAdapterBase : public MFXPluginAdapterBase<T>$/;"	c	namespace:detail
MFXCoreInterface	libmfx/include/msdk/include/mfxplugin++.h	/^    MFXCoreInterface()$/;"	f	class:MFXCoreInterface
MFXCoreInterface	libmfx/include/msdk/include/mfxplugin++.h	/^    MFXCoreInterface(const MFXCoreInterface & that)$/;"	f	class:MFXCoreInterface
MFXCoreInterface	libmfx/include/msdk/include/mfxplugin++.h	/^    MFXCoreInterface(const mfxCoreInterface & pCore)$/;"	f	class:MFXCoreInterface
MFXCoreInterface	libmfx/include/msdk/include/mfxplugin++.h	/^class MFXCoreInterface$/;"	c
MFXDecoderPlugin	libmfx/include/msdk/include/mfxplugin++.h	/^struct MFXDecoderPlugin : MFXCodecPlugin$/;"	s
MFXDefaultPlugins	libmfx/include/mfx_plugin_hive.h	/^    class MFXDefaultPlugins : public MFXPluginStorageBase$/;"	c	namespace:MFX
MFXDefaultPlugins	libmfx/src/mfx_plugin_hive.cpp	/^MFX::MFXDefaultPlugins::MFXDefaultPlugins(mfxVersion currentAPIVersion, MFX_DISP_HANDLE * hdl, int implType)$/;"	f	class:MFX::MFXDefaultPlugins
MFXEncoderPlugin	libmfx/include/msdk/include/mfxplugin++.h	/^struct MFXEncoderPlugin : MFXCodecPlugin$/;"	s
MFXFOURCCTYPE	libmfx/include/mfx_dispatcher_log.h	53;"	d
MFXFrameAllocator	QSVHelper/IntelSupport/include/base_allocator.h	/^class MFXFrameAllocator : public mfxFrameAllocator$/;"	c
MFXFrameAllocator	QSVHelper/IntelSupport/src/base_allocator.cpp	/^MFXFrameAllocator::MFXFrameAllocator()$/;"	f	class:MFXFrameAllocator
MFXGUIDTOHEX	libmfx/include/mfx_dispatcher_log.h	63;"	d
MFXGUIDTYPE	libmfx/include/mfx_dispatcher_log.h	61;"	d
MFXGenericPlugin	libmfx/include/msdk/include/mfxplugin++.h	/^struct MFXGenericPlugin : MFXPlugin$/;"	s
MFXInit	libmfx/src/main.cpp	/^mfxStatus DISPATCHER_EXPOSED_PREFIX(MFXInit)(mfxIMPL impl, mfxVersion *pVer, mfxSession *session)$/;"	f
MFXJoinSession	libmfx/src/main.cpp	/^mfxStatus DISPATCHER_EXPOSED_PREFIX(MFXJoinSession)(mfxSession session, mfxSession child_session)$/;"	f
MFXLibraryIterator	libmfx/include/mfx_library_iterator.h	/^class MFXLibraryIterator$/;"	c	namespace:MFX
MFXLibraryIterator	libmfx/src/mfx_library_iterator.cpp	/^MFXLibraryIterator::MFXLibraryIterator(void)$/;"	f	class:MFX::MFXLibraryIterator
MFXPlugin	libmfx/include/msdk/include/mfxplugin++.h	/^struct MFXPlugin$/;"	s
MFXPluginAdapter	libmfx/include/msdk/include/mfxplugin++.h	/^    MFXPluginAdapter(T* pPlugin = NULL)$/;"	f	class:MFXPluginAdapter
MFXPluginAdapter	libmfx/include/msdk/include/mfxplugin++.h	/^class MFXPluginAdapter$/;"	c
MFXPluginAdapterBase	libmfx/include/msdk/include/mfxplugin++.h	/^        MFXPluginAdapterBase( T *plugin, mfxVideoCodecPlugin *pCodec)$/;"	f	class:detail::MFXPluginAdapterBase
MFXPluginAdapterBase	libmfx/include/msdk/include/mfxplugin++.h	/^    class MFXPluginAdapterBase$/;"	c	namespace:detail
MFXPluginAdapterInternal	libmfx/include/msdk/include/mfxplugin++.h	/^        MFXPluginAdapterInternal(MFXDecoderPlugin *pPlugin)$/;"	f	class:detail::MFXPluginAdapterInternal
MFXPluginAdapterInternal	libmfx/include/msdk/include/mfxplugin++.h	/^        MFXPluginAdapterInternal(MFXEncoderPlugin *pPlugin)$/;"	f	class:detail::MFXPluginAdapterInternal
MFXPluginAdapterInternal	libmfx/include/msdk/include/mfxplugin++.h	/^        MFXPluginAdapterInternal(MFXGenericPlugin *pPlugin)$/;"	f	class:detail::MFXPluginAdapterInternal
MFXPluginAdapterInternal	libmfx/include/msdk/include/mfxplugin++.h	/^        MFXPluginAdapterInternal(MFXVPPPlugin *pPlugin)$/;"	f	class:detail::MFXPluginAdapterInternal
MFXPluginAdapterInternal	libmfx/include/msdk/include/mfxplugin++.h	/^        MFXPluginAdapterInternal(const MFXPluginAdapterInternal & that )$/;"	f	class:detail::MFXPluginAdapterInternal
MFXPluginAdapterInternal	libmfx/include/msdk/include/mfxplugin++.h	/^        MFXPluginAdapterInternal(const MFXPluginAdapterInternal & that)$/;"	f	class:detail::MFXPluginAdapterInternal
MFXPluginAdapterInternal	libmfx/include/msdk/include/mfxplugin++.h	/^    class MFXPluginAdapterInternal<MFXDecoderPlugin> : public MFXCodecPluginAdapterBase<MFXDecoderPlugin>$/;"	c	namespace:detail
MFXPluginAdapterInternal	libmfx/include/msdk/include/mfxplugin++.h	/^    class MFXPluginAdapterInternal<MFXEncoderPlugin> : public MFXCodecPluginAdapterBase<MFXEncoderPlugin>$/;"	c	namespace:detail
MFXPluginAdapterInternal	libmfx/include/msdk/include/mfxplugin++.h	/^    class MFXPluginAdapterInternal<MFXGenericPlugin> : public MFXPluginAdapterBase<MFXGenericPlugin>$/;"	c	namespace:detail
MFXPluginAdapterInternal	libmfx/include/msdk/include/mfxplugin++.h	/^    class MFXPluginAdapterInternal<MFXVPPPlugin> : public MFXCodecPluginAdapterBase<MFXVPPPlugin>$/;"	c	namespace:detail
MFXPluginAdapterInternal	libmfx/include/msdk/include/mfxplugin++.h	/^    struct MFXPluginAdapterInternal{};$/;"	s	namespace:detail
MFXPluginFactory	libmfx/include/mfx_load_plugin.h	/^    class MFXPluginFactory {$/;"	c	namespace:MFX
MFXPluginFactory	libmfx/src/mfx_load_plugin.cpp	/^MFX::MFXPluginFactory::MFXPluginFactory( mfxSession session ) $/;"	f	class:MFX::MFXPluginFactory
MFXPluginParam	libmfx/include/msdk/include/mfxplugin++.h	/^    MFXPluginParam(mfxU32 CodecId, mfxU32  Type, mfxPluginUID uid, mfxThreadPolicy ThreadPolicy = MFX_THREADPOLICY_SERIAL, mfxU32  MaxThreadNum = 1)$/;"	f	class:MFXPluginParam
MFXPluginParam	libmfx/include/msdk/include/mfxplugin++.h	/^class MFXPluginParam {$/;"	c
MFXPluginStorage	libmfx/include/mfx_plugin_hive.h	/^    typedef MFXVector<PluginDescriptionRecord> MFXPluginStorage;$/;"	t	namespace:MFX
MFXPluginStorageBase	libmfx/include/mfx_plugin_hive.h	/^        MFXPluginStorageBase(mfxVersion currentAPIVersion) $/;"	f	class:MFX::MFXPluginStorageBase
MFXPluginStorageBase	libmfx/include/mfx_plugin_hive.h	/^    class  MFXPluginStorageBase : public MFXPluginStorage $/;"	c	namespace:MFX
MFXPluginsInFS	libmfx/include/mfx_plugin_hive.h	/^    class MFXPluginsInFS : public MFXPluginStorageBase$/;"	c	namespace:MFX
MFXPluginsInFS	libmfx/src/mfx_plugin_hive.cpp	/^MFX::MFXPluginsInFS::MFXPluginsInFS( mfxVersion currentAPIVersion ) $/;"	f	class:MFX::MFXPluginsInFS
MFXPluginsInHive	libmfx/include/mfx_plugin_hive.h	/^    class MFXPluginsInHive : public MFXPluginStorageBase$/;"	c	namespace:MFX
MFXPluginsInHive	libmfx/src/mfx_plugin_hive.cpp	/^MFX::MFXPluginsInHive::MFXPluginsInHive(int mfxStorageID, const msdk_disp_char *msdkLibSubKey, mfxVersion currentAPIVersion)$/;"	f	class:MFX::MFXPluginsInHive
MFXReadWriteMid	QSVHelper/IntelSupport/include/d3d11_allocator.h	/^    MFXReadWriteMid(mfxMemId mid, mfxU8 flag = not_set)$/;"	f	class:MFXReadWriteMid
MFXReadWriteMid	QSVHelper/IntelSupport/include/d3d11_allocator.h	/^class MFXReadWriteMid$/;"	c
MFXU32TOFOURCC	libmfx/include/mfx_dispatcher_log.h	55;"	d
MFXVPPPlugin	libmfx/include/msdk/include/mfxplugin++.h	/^struct MFXVPPPlugin : MFXCodecPlugin$/;"	s
MFXVector	libmfx/include/mfx_vector.h	/^        MFXVector()$/;"	f	class:MFX::MFXVector
MFXVector	libmfx/include/mfx_vector.h	/^        MFXVector(const MFXVector & rhs)$/;"	f	class:MFX::MFXVector
MFXVector	libmfx/include/mfx_vector.h	/^    class MFXVector  $/;"	c	namespace:MFX
MFXVectorRangeError	libmfx/include/mfx_vector.h	/^    class MFXVectorRangeError : public std::exception$/;"	c	namespace:MFX
MFXVideoDECODE	libmfx/include/msdk/include/mfxvideo++.h	/^    MFXVideoDECODE(mfxSession session) { m_session = session; }$/;"	f	class:MFXVideoDECODE
MFXVideoDECODE	libmfx/include/msdk/include/mfxvideo++.h	/^class MFXVideoDECODE$/;"	c
MFXVideoENCODE	libmfx/include/msdk/include/mfxvideo++.h	/^    MFXVideoENCODE(mfxSession session) { m_session = session; }$/;"	f	class:MFXVideoENCODE
MFXVideoENCODE	libmfx/include/msdk/include/mfxvideo++.h	/^class MFXVideoENCODE$/;"	c
MFXVideoSession	libmfx/include/msdk/include/mfxvideo++.h	/^    MFXVideoSession(void) { m_session = (mfxSession) 0; }$/;"	f	class:MFXVideoSession
MFXVideoSession	libmfx/include/msdk/include/mfxvideo++.h	/^class MFXVideoSession$/;"	c
MFXVideoUSER	libmfx/include/msdk/include/mfxplugin++.h	/^    explicit MFXVideoUSER(mfxSession session)$/;"	f	class:MFXVideoUSER
MFXVideoUSER	libmfx/include/msdk/include/mfxplugin++.h	/^class MFXVideoUSER {$/;"	c
MFXVideoUSER_Load	libmfx/src/main.cpp	/^mfxStatus DISPATCHER_EXPOSED_PREFIX(MFXVideoUSER_Load)(mfxSession session, const mfxPluginUID *uid, mfxU32 version) $/;"	f
MFXVideoUSER_UnLoad	libmfx/src/main.cpp	/^mfxStatus DISPATCHER_EXPOSED_PREFIX(MFXVideoUSER_UnLoad)(mfxSession session, const mfxPluginUID *uid) $/;"	f
MFXVideoVPP	libmfx/include/msdk/include/mfxvideo++.h	/^    MFXVideoVPP(mfxSession session) { m_session = session; }$/;"	f	class:MFXVideoVPP
MFXVideoVPP	libmfx/include/msdk/include/mfxvideo++.h	/^class MFXVideoVPP$/;"	c
MFX_APP_FOLDER	libmfx/include/mfx_library_iterator.h	/^    MFX_APP_FOLDER              = 2,$/;"	e	enum:MFX::<anonymous>
MFX_AUDIO_AAC_ADIF	libmfx/include/msdk/include/mfxastructures.h	/^    MFX_AUDIO_AAC_ADIF=            2,$/;"	e
MFX_AUDIO_AAC_ADTS	libmfx/include/msdk/include/mfxastructures.h	/^    MFX_AUDIO_AAC_ADTS=            1,$/;"	e
MFX_AUDIO_AAC_HE_DWNSMPL_OFF	libmfx/include/msdk/include/mfxastructures.h	/^    MFX_AUDIO_AAC_HE_DWNSMPL_OFF=0,$/;"	e
MFX_AUDIO_AAC_HE_DWNSMPL_ON	libmfx/include/msdk/include/mfxastructures.h	/^    MFX_AUDIO_AAC_HE_DWNSMPL_ON= 1$/;"	e
MFX_AUDIO_AAC_JOINT_STEREO	libmfx/include/msdk/include/mfxastructures.h	/^    MFX_AUDIO_AAC_JOINT_STEREO=    3$/;"	e
MFX_AUDIO_AAC_LR_STEREO	libmfx/include/msdk/include/mfxastructures.h	/^    MFX_AUDIO_AAC_LR_STEREO=       1,$/;"	e
MFX_AUDIO_AAC_MONO	libmfx/include/msdk/include/mfxastructures.h	/^    MFX_AUDIO_AAC_MONO=            0,$/;"	e
MFX_AUDIO_AAC_MS_STEREO	libmfx/include/msdk/include/mfxastructures.h	/^    MFX_AUDIO_AAC_MS_STEREO=       2,$/;"	e
MFX_AUDIO_AAC_PS_DISABLE	libmfx/include/msdk/include/mfxastructures.h	/^    MFX_AUDIO_AAC_PS_DISABLE=   0,$/;"	e
MFX_AUDIO_AAC_PS_ENABLE_BL	libmfx/include/msdk/include/mfxastructures.h	/^    MFX_AUDIO_AAC_PS_ENABLE_BL= 111,$/;"	e
MFX_AUDIO_AAC_PS_ENABLE_UR	libmfx/include/msdk/include/mfxastructures.h	/^    MFX_AUDIO_AAC_PS_ENABLE_UR= 411$/;"	e
MFX_AUDIO_AAC_PS_PARSER	libmfx/include/msdk/include/mfxastructures.h	/^    MFX_AUDIO_AAC_PS_PARSER=    1,$/;"	e
MFX_AUDIO_AAC_RAW	libmfx/include/msdk/include/mfxastructures.h	/^    MFX_AUDIO_AAC_RAW=             3,$/;"	e
MFX_AUDIO_AAC_SBR_DISABLE	libmfx/include/msdk/include/mfxastructures.h	/^    MFX_AUDIO_AAC_SBR_DISABLE =  0,$/;"	e
MFX_AUDIO_AAC_SBR_ENABLE	libmfx/include/msdk/include/mfxastructures.h	/^    MFX_AUDIO_AAC_SBR_ENABLE=    1,$/;"	e
MFX_AUDIO_AAC_SBR_UNDEF	libmfx/include/msdk/include/mfxastructures.h	/^    MFX_AUDIO_AAC_SBR_UNDEF=     2$/;"	e
MFX_AUDIO_MPEG1_LAYER1	libmfx/include/msdk/include/mfxastructures.h	/^    MFX_AUDIO_MPEG1_LAYER1      =0x00000110, $/;"	e
MFX_AUDIO_MPEG1_LAYER2	libmfx/include/msdk/include/mfxastructures.h	/^    MFX_AUDIO_MPEG1_LAYER2      =0x00000120,$/;"	e
MFX_AUDIO_MPEG1_LAYER3	libmfx/include/msdk/include/mfxastructures.h	/^    MFX_AUDIO_MPEG1_LAYER3      =0x00000140,$/;"	e
MFX_AUDIO_MPEG2_LAYER1	libmfx/include/msdk/include/mfxastructures.h	/^    MFX_AUDIO_MPEG2_LAYER1      =0x00000210,$/;"	e
MFX_AUDIO_MPEG2_LAYER2	libmfx/include/msdk/include/mfxastructures.h	/^    MFX_AUDIO_MPEG2_LAYER2      =0x00000220,$/;"	e
MFX_AUDIO_MPEG2_LAYER3	libmfx/include/msdk/include/mfxastructures.h	/^    MFX_AUDIO_MPEG2_LAYER3      =0x00000240$/;"	e
MFX_AUDIO_VERSION_MAJOR	libmfx/include/msdk/include/mfxaudio.h	36;"	d
MFX_AUDIO_VERSION_MINOR	libmfx/include/msdk/include/mfxaudio.h	37;"	d
MFX_BITSTREAM_COMPLETE_FRAME	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_BITSTREAM_COMPLETE_FRAME    = 0x0001,        \/* the bitstream contains a complete frame or field pair of data *\/$/;"	e
MFX_BITSTREAM_EOS	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_BITSTREAM_EOS               = 0x0002$/;"	e
MFX_BLOCKSIZE_MIN_16X16	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_BLOCKSIZE_MIN_16X16 = 1, \/* 16x16              *\/$/;"	e
MFX_BLOCKSIZE_MIN_4X4	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_BLOCKSIZE_MIN_4X4   = 3  \/* 16x16, 8x8, 4x4    *\/$/;"	e
MFX_BLOCKSIZE_MIN_8X8	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_BLOCKSIZE_MIN_8X8   = 2, \/* 16x16, 8x8         *\/$/;"	e
MFX_BLOCKSIZE_UNKNOWN	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_BLOCKSIZE_UNKNOWN   = 0,$/;"	e
MFX_B_REF_OFF	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_B_REF_OFF     = 1,$/;"	e
MFX_B_REF_PYRAMID	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_B_REF_PYRAMID = 2$/;"	e
MFX_B_REF_UNKNOWN	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_B_REF_UNKNOWN = 0,$/;"	e
MFX_CDECL	libmfx/include/msdk/include/mfxdefs.h	48;"	d
MFX_CDECL	libmfx/include/msdk/include/mfxdefs.h	51;"	d
MFX_CHROMAFORMAT_MONOCHROME	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_CHROMAFORMAT_MONOCHROME =0,$/;"	e
MFX_CHROMAFORMAT_YUV400	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_CHROMAFORMAT_YUV400     = MFX_CHROMAFORMAT_MONOCHROME,$/;"	e
MFX_CHROMAFORMAT_YUV411	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_CHROMAFORMAT_YUV411     = 4,$/;"	e
MFX_CHROMAFORMAT_YUV420	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_CHROMAFORMAT_YUV420     =1,$/;"	e
MFX_CHROMAFORMAT_YUV422	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_CHROMAFORMAT_YUV422     =2,$/;"	e
MFX_CHROMAFORMAT_YUV422H	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_CHROMAFORMAT_YUV422H    = MFX_CHROMAFORMAT_YUV422,$/;"	e
MFX_CHROMAFORMAT_YUV422V	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_CHROMAFORMAT_YUV422V    = 5$/;"	e
MFX_CHROMAFORMAT_YUV444	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_CHROMAFORMAT_YUV444     =3,$/;"	e
MFX_CODEC_AAC	libmfx/include/msdk/include/mfxastructures.h	/^    MFX_CODEC_AAC         =MFX_MAKEFOURCC('A','A','C',' '),$/;"	e
MFX_CODEC_AVC	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_CODEC_AVC         =MFX_MAKEFOURCC('A','V','C',' '),$/;"	e
MFX_CODEC_HEVC	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_CODEC_HEVC        =MFX_MAKEFOURCC('H','E','V','C'),$/;"	e
MFX_CODEC_JPEG	libmfx/include/msdk/include/mfxjpeg.h	/^    MFX_CODEC_JPEG    = MFX_MAKEFOURCC('J','P','E','G')$/;"	e
MFX_CODEC_MP3	libmfx/include/msdk/include/mfxastructures.h	/^    MFX_CODEC_MP3         =MFX_MAKEFOURCC('M','P','3',' ')$/;"	e
MFX_CODEC_MPEG2	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_CODEC_MPEG2       =MFX_MAKEFOURCC('M','P','G','2'),$/;"	e
MFX_CODEC_VC1	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_CODEC_VC1         =MFX_MAKEFOURCC('V','C','1',' ')$/;"	e
MFX_CODINGOPTION_ADAPTIVE	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_CODINGOPTION_ADAPTIVE   =0x30$/;"	e
MFX_CODINGOPTION_OFF	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_CODINGOPTION_OFF        =0x20,$/;"	e
MFX_CODINGOPTION_ON	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_CODINGOPTION_ON         =0x10,$/;"	e
MFX_CODINGOPTION_UNKNOWN	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_CODINGOPTION_UNKNOWN    =0,$/;"	e
MFX_CORRUPTION_ABSENT_BOTTOM_FIELD	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_CORRUPTION_ABSENT_BOTTOM_FIELD           = 0x0008,$/;"	e
MFX_CORRUPTION_ABSENT_TOP_FIELD	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_CORRUPTION_ABSENT_TOP_FIELD           = 0x0004,$/;"	e
MFX_CORRUPTION_MAJOR	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_CORRUPTION_MAJOR           = 0x0002,$/;"	e
MFX_CORRUPTION_MINOR	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_CORRUPTION_MINOR           = 0x0001,$/;"	e
MFX_CORRUPTION_REFERENCE_FRAME	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_CORRUPTION_REFERENCE_FRAME = 0x0010,$/;"	e
MFX_CORRUPTION_REFERENCE_LIST	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_CORRUPTION_REFERENCE_LIST  = 0x0020$/;"	e
MFX_CURRENT_USER_KEY	libmfx/include/mfx_library_iterator.h	/^    MFX_CURRENT_USER_KEY        = 0,$/;"	e	enum:MFX::<anonymous>
MFX_D3D11_SUPPORT	QSVHelper/IntelSupport/include/sample_defs.h	29;"	d
MFX_D3D11_SUPPORT	QSVHelper/IntelSupport/include/sample_defs.h	32;"	d
MFX_DEINTERLACING_ADVANCED	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_DEINTERLACING_ADVANCED = 0x0002$/;"	e
MFX_DEINTERLACING_BOB	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_DEINTERLACING_BOB      = 0x0001,$/;"	e
MFX_DISPATCHER_VERSION_MAJOR	libmfx/include/mfx_dispatcher.h	/^    MFX_DISPATCHER_VERSION_MAJOR = 1,$/;"	e
MFX_DISPATCHER_VERSION_MINOR	libmfx/include/mfx_dispatcher.h	/^    MFX_DISPATCHER_VERSION_MINOR = 2$/;"	e
MFX_DISP_HANDLE	libmfx/include/mfx_dispatcher.h	/^struct MFX_DISP_HANDLE$/;"	s
MFX_DISP_HANDLE	libmfx/src/mfx_dispatcher.cpp	/^MFX_DISP_HANDLE::MFX_DISP_HANDLE(const mfxVersion requiredVersion) :$/;"	f	class:MFX_DISP_HANDLE
MFX_ERR_ABORTED	libmfx/include/msdk/include/mfxdefs.h	/^    MFX_ERR_ABORTED                     = -12,  \/* operation aborted *\/$/;"	e
MFX_ERR_DEVICE_FAILED	libmfx/include/msdk/include/mfxdefs.h	/^    MFX_ERR_DEVICE_FAILED               = -17,  \/* device operation failure *\/$/;"	e
MFX_ERR_DEVICE_LOST	libmfx/include/msdk/include/mfxdefs.h	/^    MFX_ERR_DEVICE_LOST                 = -13,  \/* lose the HW acceleration device *\/$/;"	e
MFX_ERR_INCOMPATIBLE_AUDIO_PARAM	libmfx/include/msdk/include/mfxdefs.h	/^    MFX_ERR_INCOMPATIBLE_AUDIO_PARAM    = -19,  \/* incompatible audio parameters *\/$/;"	e
MFX_ERR_INCOMPATIBLE_VIDEO_PARAM	libmfx/include/msdk/include/mfxdefs.h	/^    MFX_ERR_INCOMPATIBLE_VIDEO_PARAM    = -14,  \/* incompatible video parameters *\/$/;"	e
MFX_ERR_INVALID_AUDIO_PARAM	libmfx/include/msdk/include/mfxdefs.h	/^    MFX_ERR_INVALID_AUDIO_PARAM         = -20,  \/* invalid audio parameters *\/$/;"	e
MFX_ERR_INVALID_HANDLE	libmfx/include/msdk/include/mfxdefs.h	/^    MFX_ERR_INVALID_HANDLE              = -6,   \/* invalid handle *\/$/;"	e
MFX_ERR_INVALID_VIDEO_PARAM	libmfx/include/msdk/include/mfxdefs.h	/^    MFX_ERR_INVALID_VIDEO_PARAM         = -15,  \/* invalid video parameters *\/$/;"	e
MFX_ERR_LOCK_MEMORY	libmfx/include/msdk/include/mfxdefs.h	/^    MFX_ERR_LOCK_MEMORY                 = -7,   \/* failed to lock the memory block *\/$/;"	e
MFX_ERR_MEMORY_ALLOC	libmfx/include/msdk/include/mfxdefs.h	/^    MFX_ERR_MEMORY_ALLOC                = -4,   \/* failed to allocate memory *\/$/;"	e
MFX_ERR_MORE_BITSTREAM	libmfx/include/msdk/include/mfxdefs.h	/^    MFX_ERR_MORE_BITSTREAM              = -18,  \/* expect more bitstream buffers at output *\/$/;"	e
MFX_ERR_MORE_DATA	libmfx/include/msdk/include/mfxdefs.h	/^    MFX_ERR_MORE_DATA                   = -10,  \/* expect more data at input *\/$/;"	e
MFX_ERR_MORE_SURFACE	libmfx/include/msdk/include/mfxdefs.h	/^    MFX_ERR_MORE_SURFACE                = -11,  \/* expect more surface at output *\/$/;"	e
MFX_ERR_NONE	libmfx/include/msdk/include/mfxdefs.h	/^    MFX_ERR_NONE                        = 0,    \/* no error *\/$/;"	e
MFX_ERR_NOT_ENOUGH_BUFFER	libmfx/include/msdk/include/mfxdefs.h	/^    MFX_ERR_NOT_ENOUGH_BUFFER           = -5,   \/* insufficient buffer at input\/output *\/$/;"	e
MFX_ERR_NOT_FOUND	libmfx/include/msdk/include/mfxdefs.h	/^    MFX_ERR_NOT_FOUND                   = -9,   \/* the specified object is not found *\/$/;"	e
MFX_ERR_NOT_INITIALIZED	libmfx/include/msdk/include/mfxdefs.h	/^    MFX_ERR_NOT_INITIALIZED             = -8,   \/* member function called before initialization *\/$/;"	e
MFX_ERR_NULL_PTR	libmfx/include/msdk/include/mfxdefs.h	/^    MFX_ERR_NULL_PTR                    = -2,   \/* null pointer *\/$/;"	e
MFX_ERR_UNDEFINED_BEHAVIOR	libmfx/include/msdk/include/mfxdefs.h	/^    MFX_ERR_UNDEFINED_BEHAVIOR          = -16,  \/* undefined behavior *\/$/;"	e
MFX_ERR_UNKNOWN	libmfx/include/msdk/include/mfxdefs.h	/^    MFX_ERR_UNKNOWN                     = -1,   \/* unknown error. *\/$/;"	e
MFX_ERR_UNSUPPORTED	libmfx/include/msdk/include/mfxdefs.h	/^    MFX_ERR_UNSUPPORTED                 = -3,   \/* undeveloped feature *\/$/;"	e
MFX_EXTBUFF_AVC_REFLISTS	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_EXTBUFF_AVC_REFLISTS               = MFX_MAKEFOURCC('R','L','T','S')$/;"	e
MFX_EXTBUFF_AVC_REFLIST_CTRL	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_EXTBUFF_AVC_REFLIST_CTRL       =   MFX_MAKEFOURCC('R','L','S','T'),$/;"	e
MFX_EXTBUFF_AVC_TEMPORAL_LAYERS	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_EXTBUFF_AVC_TEMPORAL_LAYERS        = MFX_MAKEFOURCC('A','T','M','L'),$/;"	e
MFX_EXTBUFF_CODING_OPTION	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_EXTBUFF_CODING_OPTION       =   MFX_MAKEFOURCC('C','D','O','P'),$/;"	e
MFX_EXTBUFF_CODING_OPTION2	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_EXTBUFF_CODING_OPTION2             = MFX_MAKEFOURCC('C','D','O','2'),$/;"	e
MFX_EXTBUFF_CODING_OPTION_SPSPPS	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_EXTBUFF_CODING_OPTION_SPSPPS=   MFX_MAKEFOURCC('C','O','S','P'),$/;"	e
MFX_EXTBUFF_ENCODED_FRAME_INFO	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_EXTBUFF_ENCODED_FRAME_INFO         = MFX_MAKEFOURCC('E','N','F','I'),$/;"	e
MFX_EXTBUFF_ENCODER_CAPABILITY	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_EXTBUFF_ENCODER_CAPABILITY         = MFX_MAKEFOURCC('E','N','C','P'),$/;"	e
MFX_EXTBUFF_ENCODER_RESET_OPTION	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_EXTBUFF_ENCODER_RESET_OPTION       = MFX_MAKEFOURCC('E','N','R','O'),$/;"	e
MFX_EXTBUFF_ENCODER_ROI	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_EXTBUFF_ENCODER_ROI                = MFX_MAKEFOURCC('E','R','O','I'),$/;"	e
MFX_EXTBUFF_JPEG_HUFFMAN	libmfx/include/msdk/include/mfxjpeg.h	/^    MFX_EXTBUFF_JPEG_HUFFMAN     =   MFX_MAKEFOURCC('J','P','G','H')$/;"	e
MFX_EXTBUFF_JPEG_QT	libmfx/include/msdk/include/mfxjpeg.h	/^    MFX_EXTBUFF_JPEG_QT     =   MFX_MAKEFOURCC('J','P','G','Q'),$/;"	e
MFX_EXTBUFF_MVC_SEQ_DESC	libmfx/include/msdk/include/mfxmvc.h	/^    MFX_EXTBUFF_MVC_SEQ_DESC =   MFX_MAKEFOURCC('M','V','C','D'),$/;"	e
MFX_EXTBUFF_MVC_TARGET_VIEWS	libmfx/include/msdk/include/mfxmvc.h	/^    MFX_EXTBUFF_MVC_TARGET_VIEWS    =   MFX_MAKEFOURCC('M','V','C','T')$/;"	e
MFX_EXTBUFF_OPAQUE_SURFACE_ALLOCATION	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_EXTBUFF_OPAQUE_SURFACE_ALLOCATION  = MFX_MAKEFOURCC('O','P','Q','S'),$/;"	e
MFX_EXTBUFF_PICTURE_TIMING_SEI	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_EXTBUFF_PICTURE_TIMING_SEI         = MFX_MAKEFOURCC('P','T','S','E'),$/;"	e
MFX_EXTBUFF_VIDEO_SIGNAL_INFO	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_EXTBUFF_VIDEO_SIGNAL_INFO   =   MFX_MAKEFOURCC('V','S','I','N'),$/;"	e
MFX_EXTBUFF_VPP_AUXDATA	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_EXTBUFF_VPP_AUXDATA         =   MFX_MAKEFOURCC('A','U','X','D'),$/;"	e
MFX_EXTBUFF_VPP_COMPOSITE	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_EXTBUFF_VPP_COMPOSITE              = MFX_MAKEFOURCC('V','C','M','P'),$/;"	e
MFX_EXTBUFF_VPP_DEINTERLACING	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_EXTBUFF_VPP_DEINTERLACING          = MFX_MAKEFOURCC('V','P','D','I'),$/;"	e
MFX_EXTBUFF_VPP_DENOISE	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_EXTBUFF_VPP_DENOISE         =   MFX_MAKEFOURCC('D','N','I','S'),$/;"	e
MFX_EXTBUFF_VPP_DETAIL	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_EXTBUFF_VPP_DETAIL          =   MFX_MAKEFOURCC('D','E','T',' '),$/;"	e
MFX_EXTBUFF_VPP_DONOTUSE	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_EXTBUFF_VPP_DONOTUSE        =   MFX_MAKEFOURCC('N','U','S','E'),$/;"	e
MFX_EXTBUFF_VPP_DOUSE	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_EXTBUFF_VPP_DOUSE           =   MFX_MAKEFOURCC('D','U','S','E'),$/;"	e
MFX_EXTBUFF_VPP_FRAME_RATE_CONVERSION	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_EXTBUFF_VPP_FRAME_RATE_CONVERSION  = MFX_MAKEFOURCC('F','R','C',' '),$/;"	e
MFX_EXTBUFF_VPP_IMAGE_STABILIZATION	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_EXTBUFF_VPP_IMAGE_STABILIZATION    = MFX_MAKEFOURCC('I','S','T','B'),$/;"	e
MFX_EXTBUFF_VPP_PICSTRUCT_DETECTION	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_EXTBUFF_VPP_PICSTRUCT_DETECTION    = MFX_MAKEFOURCC('I','D','E','T'),$/;"	e
MFX_EXTBUFF_VPP_PROCAMP	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_EXTBUFF_VPP_PROCAMP         =   MFX_MAKEFOURCC('P','A','M','P'),$/;"	e
MFX_EXTBUFF_VPP_SCENE_ANALYSIS	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_EXTBUFF_VPP_SCENE_ANALYSIS  =   MFX_MAKEFOURCC('S','C','L','Y'),$/;"	e
MFX_EXTBUFF_VPP_SCENE_CHANGE	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_EXTBUFF_VPP_SCENE_CHANGE    =   MFX_EXTBUFF_VPP_SCENE_ANALYSIS,$/;"	e
MFX_EXTBUFF_VPP_VIDEO_SIGNAL_INFO	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_EXTBUFF_VPP_VIDEO_SIGNAL_INFO      = MFX_MAKEFOURCC('V','V','S','I'),$/;"	e
MFX_FOURCC_A2RGB10	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_FOURCC_A2RGB10      = MFX_MAKEFOURCC('R','G','1','0'),   \/* ARGB in that order, A channel is two MSBs *\/$/;"	e
MFX_FOURCC_ARGB16	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_FOURCC_ARGB16       = MFX_MAKEFOURCC('R','G','1','6'),   \/* ARGB in that order, 64 bits, A channel is 16 MSBs *\/$/;"	e
MFX_FOURCC_BGR4	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_FOURCC_BGR4         = MFX_MAKEFOURCC('B','G','R','4'),   \/* ABGR in that order, A channel is 8 MSBs *\/$/;"	e
MFX_FOURCC_NV12	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_FOURCC_NV12         = MFX_MAKEFOURCC('N','V','1','2'),   \/* Native Format *\/$/;"	e
MFX_FOURCC_P010	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_FOURCC_P010         = MFX_MAKEFOURCC('P','0','1','0'), $/;"	e
MFX_FOURCC_P8	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_FOURCC_P8           = 41,                                \/*  D3DFMT_P8   *\/$/;"	e
MFX_FOURCC_P8_TEXTURE	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_FOURCC_P8_TEXTURE   = MFX_MAKEFOURCC('P','8','M','B'),$/;"	e
MFX_FOURCC_R16	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_FOURCC_R16          = MFX_MAKEFOURCC('R','1','6','U') $/;"	e
MFX_FOURCC_RGB3	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_FOURCC_RGB3         = MFX_MAKEFOURCC('R','G','B','3'),   \/* deprecated *\/$/;"	e
MFX_FOURCC_RGB4	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_FOURCC_RGB4         = MFX_MAKEFOURCC('R','G','B','4'),   \/* ARGB in that order, A channel is 8 MSBs *\/$/;"	e
MFX_FOURCC_YUY2	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_FOURCC_YUY2         = MFX_MAKEFOURCC('Y','U','Y','2'),$/;"	e
MFX_FOURCC_YV12	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_FOURCC_YV12         = MFX_MAKEFOURCC('Y','V','1','2'),$/;"	e
MFX_FRAMEDATA_ORIGINAL_TIMESTAMP	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_FRAMEDATA_ORIGINAL_TIMESTAMP = 0x0001$/;"	e
MFX_FRAMEORDER_UNKNOWN	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_FRAMEORDER_UNKNOWN = -1$/;"	e
MFX_FRAMETYPE_B	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_FRAMETYPE_B             =0x0004,$/;"	e
MFX_FRAMETYPE_I	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_FRAMETYPE_I             =0x0001,$/;"	e
MFX_FRAMETYPE_IDR	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_FRAMETYPE_IDR           =0x0080,$/;"	e
MFX_FRAMETYPE_P	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_FRAMETYPE_P             =0x0002,$/;"	e
MFX_FRAMETYPE_REF	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_FRAMETYPE_REF           =0x0040,$/;"	e
MFX_FRAMETYPE_S	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_FRAMETYPE_S             =0x0008,$/;"	e
MFX_FRAMETYPE_UNKNOWN	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_FRAMETYPE_UNKNOWN       =0x0000,$/;"	e
MFX_FRAMETYPE_xB	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_FRAMETYPE_xB            =0x0400,$/;"	e
MFX_FRAMETYPE_xI	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_FRAMETYPE_xI            =0x0100,$/;"	e
MFX_FRAMETYPE_xIDR	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_FRAMETYPE_xIDR          =0x8000$/;"	e
MFX_FRAMETYPE_xP	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_FRAMETYPE_xP            =0x0200,$/;"	e
MFX_FRAMETYPE_xREF	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_FRAMETYPE_xREF          =0x4000,$/;"	e
MFX_FRAMETYPE_xS	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_FRAMETYPE_xS            =0x0800,$/;"	e
MFX_FRCALGM_DISTRIBUTED_TIMESTAMP	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_FRCALGM_DISTRIBUTED_TIMESTAMP = 0x0002,$/;"	e
MFX_FRCALGM_FRAME_INTERPOLATION	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_FRCALGM_FRAME_INTERPOLATION   = 0x0004$/;"	e
MFX_FRCALGM_PRESERVE_TIMESTAMP	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_FRCALGM_PRESERVE_TIMESTAMP    = 0x0001,$/;"	e
MFX_GOP_CLOSED	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_GOP_CLOSED          =1,$/;"	e
MFX_GOP_STRICT	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_GOP_STRICT          =2$/;"	e
MFX_HANDLE_D3D11_DEVICE	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_HANDLE_D3D11_DEVICE                     = 3,$/;"	e
MFX_HANDLE_D3D9_DEVICE_MANAGER	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_HANDLE_D3D9_DEVICE_MANAGER              = MFX_HANDLE_DIRECT3D_DEVICE_MANAGER9,$/;"	e
MFX_HANDLE_DIRECT3D_DEVICE_MANAGER9	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_HANDLE_DIRECT3D_DEVICE_MANAGER9         =1,      \/* IDirect3DDeviceManager9      *\/$/;"	e
MFX_HANDLE_RESERVED1	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_HANDLE_RESERVED1                        = 2,$/;"	e
MFX_HANDLE_RESERVED3	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_HANDLE_RESERVED3                        = 5$/;"	e
MFX_HANDLE_VA_DISPLAY	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_HANDLE_VA_DISPLAY                       = 4,$/;"	e
MFX_IMAGESTAB_MODE_BOXING	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_IMAGESTAB_MODE_BOXING  = 0x0002$/;"	e
MFX_IMAGESTAB_MODE_UPSCALE	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_IMAGESTAB_MODE_UPSCALE = 0x0001,$/;"	e
MFX_IMPL_AUDIO	libmfx/include/msdk/include/mfxcommon.h	/^    MFX_IMPL_AUDIO        = 0x8000,$/;"	e
MFX_IMPL_AUTO	libmfx/include/msdk/include/mfxcommon.h	/^    MFX_IMPL_AUTO         = 0x0000,  \/* Auto Selection\/In or Not Supported\/Out *\/$/;"	e
MFX_IMPL_AUTO_ANY	libmfx/include/msdk/include/mfxcommon.h	/^    MFX_IMPL_AUTO_ANY     = 0x0003,  \/* Auto selection of any hardware\/software implementation *\/$/;"	e
MFX_IMPL_BASETYPE	libmfx/include/msdk/include/mfxcommon.h	51;"	d
MFX_IMPL_HARDWARE	libmfx/include/msdk/include/mfxcommon.h	/^    MFX_IMPL_HARDWARE     = 0x0002,  \/* Hardware Accelerated Implementation (default device) *\/$/;"	e
MFX_IMPL_HARDWARE2	libmfx/include/msdk/include/mfxcommon.h	/^    MFX_IMPL_HARDWARE2    = 0x0005,  \/* Hardware accelerated implementation (2nd device) *\/$/;"	e
MFX_IMPL_HARDWARE3	libmfx/include/msdk/include/mfxcommon.h	/^    MFX_IMPL_HARDWARE3    = 0x0006,  \/* Hardware accelerated implementation (3rd device) *\/$/;"	e
MFX_IMPL_HARDWARE4	libmfx/include/msdk/include/mfxcommon.h	/^    MFX_IMPL_HARDWARE4    = 0x0007,  \/* Hardware accelerated implementation (4th device) *\/$/;"	e
MFX_IMPL_HARDWARE_ANY	libmfx/include/msdk/include/mfxcommon.h	/^    MFX_IMPL_HARDWARE_ANY = 0x0004,  \/* Auto selection of any hardware implementation *\/$/;"	e
MFX_IMPL_RUNTIME	libmfx/include/msdk/include/mfxcommon.h	/^    MFX_IMPL_RUNTIME      = 0x0008, $/;"	e
MFX_IMPL_SOFTWARE	libmfx/include/msdk/include/mfxcommon.h	/^    MFX_IMPL_SOFTWARE     = 0x0001,  \/* Pure Software Implementation *\/$/;"	e
MFX_IMPL_UNSUPPORTED	libmfx/include/msdk/include/mfxcommon.h	/^    MFX_IMPL_UNSUPPORTED  = 0x0000  \/* One of the MFXQueryIMPL returns *\/$/;"	e
MFX_IMPL_VIA_ANY	libmfx/include/msdk/include/mfxcommon.h	/^    MFX_IMPL_VIA_ANY      = 0x0100,$/;"	e
MFX_IMPL_VIA_D3D11	libmfx/include/msdk/include/mfxcommon.h	/^    MFX_IMPL_VIA_D3D11    = 0x0300,$/;"	e
MFX_IMPL_VIA_D3D9	libmfx/include/msdk/include/mfxcommon.h	/^    MFX_IMPL_VIA_D3D9     = 0x0200,$/;"	e
MFX_IMPL_VIA_VAAPI	libmfx/include/msdk/include/mfxcommon.h	/^    MFX_IMPL_VIA_VAAPI    = 0x0400,$/;"	e
MFX_INFINITE	libmfx/include/msdk/include/mfxdefs.h	55;"	d
MFX_IOPATTERN_IN_OPAQUE_MEMORY	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_IOPATTERN_IN_OPAQUE_MEMORY  = 0x04,$/;"	e
MFX_IOPATTERN_IN_SYSTEM_MEMORY	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_IOPATTERN_IN_SYSTEM_MEMORY  = 0x02,$/;"	e
MFX_IOPATTERN_IN_VIDEO_MEMORY	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_IOPATTERN_IN_VIDEO_MEMORY   = 0x01,$/;"	e
MFX_IOPATTERN_OUT_OPAQUE_MEMORY	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_IOPATTERN_OUT_OPAQUE_MEMORY = 0x40$/;"	e
MFX_IOPATTERN_OUT_SYSTEM_MEMORY	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_IOPATTERN_OUT_SYSTEM_MEMORY = 0x20,$/;"	e
MFX_IOPATTERN_OUT_VIDEO_MEMORY	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_IOPATTERN_OUT_VIDEO_MEMORY  = 0x10,$/;"	e
MFX_JPEG_COLORFORMAT_RGB	libmfx/include/msdk/include/mfxjpeg.h	/^    MFX_JPEG_COLORFORMAT_RGB = 2$/;"	e
MFX_JPEG_COLORFORMAT_UNKNOWN	libmfx/include/msdk/include/mfxjpeg.h	/^    MFX_JPEG_COLORFORMAT_UNKNOWN = 0,$/;"	e
MFX_JPEG_COLORFORMAT_YCbCr	libmfx/include/msdk/include/mfxjpeg.h	/^    MFX_JPEG_COLORFORMAT_YCbCr = 1,$/;"	e
MFX_LEVEL_AVC_1	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_LEVEL_AVC_1                         =10,$/;"	e
MFX_LEVEL_AVC_11	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_LEVEL_AVC_11                        =11,$/;"	e
MFX_LEVEL_AVC_12	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_LEVEL_AVC_12                        =12,$/;"	e
MFX_LEVEL_AVC_13	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_LEVEL_AVC_13                        =13,$/;"	e
MFX_LEVEL_AVC_1b	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_LEVEL_AVC_1b                        =9,$/;"	e
MFX_LEVEL_AVC_2	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_LEVEL_AVC_2                         =20,$/;"	e
MFX_LEVEL_AVC_21	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_LEVEL_AVC_21                        =21,$/;"	e
MFX_LEVEL_AVC_22	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_LEVEL_AVC_22                        =22,$/;"	e
MFX_LEVEL_AVC_3	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_LEVEL_AVC_3                         =30,$/;"	e
MFX_LEVEL_AVC_31	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_LEVEL_AVC_31                        =31,$/;"	e
MFX_LEVEL_AVC_32	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_LEVEL_AVC_32                        =32,$/;"	e
MFX_LEVEL_AVC_4	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_LEVEL_AVC_4                         =40,$/;"	e
MFX_LEVEL_AVC_41	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_LEVEL_AVC_41                        =41,$/;"	e
MFX_LEVEL_AVC_42	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_LEVEL_AVC_42                        =42,$/;"	e
MFX_LEVEL_AVC_5	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_LEVEL_AVC_5                         =50,$/;"	e
MFX_LEVEL_AVC_51	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_LEVEL_AVC_51                        =51,$/;"	e
MFX_LEVEL_AVC_52	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_LEVEL_AVC_52                        =52,$/;"	e
MFX_LEVEL_HEVC_1	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_LEVEL_HEVC_1   = 10,$/;"	e
MFX_LEVEL_HEVC_2	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_LEVEL_HEVC_2   = 20,$/;"	e
MFX_LEVEL_HEVC_21	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_LEVEL_HEVC_21  = 21,$/;"	e
MFX_LEVEL_HEVC_3	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_LEVEL_HEVC_3   = 30,$/;"	e
MFX_LEVEL_HEVC_31	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_LEVEL_HEVC_31  = 31,$/;"	e
MFX_LEVEL_HEVC_4	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_LEVEL_HEVC_4   = 40,$/;"	e
MFX_LEVEL_HEVC_41	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_LEVEL_HEVC_41  = 41,$/;"	e
MFX_LEVEL_HEVC_5	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_LEVEL_HEVC_5   = 50,$/;"	e
MFX_LEVEL_HEVC_51	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_LEVEL_HEVC_51  = 51,$/;"	e
MFX_LEVEL_HEVC_52	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_LEVEL_HEVC_52  = 52,$/;"	e
MFX_LEVEL_HEVC_6	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_LEVEL_HEVC_6   = 60,$/;"	e
MFX_LEVEL_HEVC_61	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_LEVEL_HEVC_61  = 61,$/;"	e
MFX_LEVEL_HEVC_62	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_LEVEL_HEVC_62  = 62,$/;"	e
MFX_LEVEL_MPEG2_HIGH	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_LEVEL_MPEG2_HIGH                    =0x4,$/;"	e
MFX_LEVEL_MPEG2_HIGH1440	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_LEVEL_MPEG2_HIGH1440                =0x6,$/;"	e
MFX_LEVEL_MPEG2_LOW	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_LEVEL_MPEG2_LOW                     =0xA,$/;"	e
MFX_LEVEL_MPEG2_MAIN	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_LEVEL_MPEG2_MAIN                    =0x8,$/;"	e
MFX_LEVEL_UNKNOWN	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_LEVEL_UNKNOWN                       =0,$/;"	e
MFX_LEVEL_VC1_0	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_LEVEL_VC1_0                         =(0x00+1),$/;"	e
MFX_LEVEL_VC1_1	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_LEVEL_VC1_1                         =(0x01+1),$/;"	e
MFX_LEVEL_VC1_2	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_LEVEL_VC1_2                         =(0x02+1),$/;"	e
MFX_LEVEL_VC1_3	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_LEVEL_VC1_3                         =(0x03+1),$/;"	e
MFX_LEVEL_VC1_4	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_LEVEL_VC1_4                         =(0x04+1),$/;"	e
MFX_LEVEL_VC1_HIGH	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_LEVEL_VC1_HIGH                      =(4+1),$/;"	e
MFX_LEVEL_VC1_LOW	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_LEVEL_VC1_LOW                       =(0+1),$/;"	e
MFX_LEVEL_VC1_MEDIAN	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_LEVEL_VC1_MEDIAN                    =(2+1),$/;"	e
MFX_LIB_HARDWARE	libmfx/include/mfx_dispatcher.h	/^    MFX_LIB_HARDWARE            = 0,$/;"	e	enum:eMfxImplType
MFX_LIB_IMPL_TYPES	libmfx/include/mfx_dispatcher.h	/^    MFX_LIB_IMPL_TYPES$/;"	e	enum:eMfxImplType
MFX_LIB_PSEUDO	libmfx/include/mfx_dispatcher.h	/^    MFX_LIB_PSEUDO              = 2,$/;"	e	enum:eMfxImplType
MFX_LIB_SOFTWARE	libmfx/include/mfx_dispatcher.h	/^    MFX_LIB_SOFTWARE            = 1,$/;"	e	enum:eMfxImplType
MFX_LOCAL_MACHINE_KEY	libmfx/include/mfx_library_iterator.h	/^    MFX_LOCAL_MACHINE_KEY       = 1,$/;"	e	enum:MFX::<anonymous>
MFX_LOOKAHEAD_DS_2x	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_LOOKAHEAD_DS_2x      = 2,$/;"	e
MFX_LOOKAHEAD_DS_4x	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_LOOKAHEAD_DS_4x      = 3$/;"	e
MFX_LOOKAHEAD_DS_OFF	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_LOOKAHEAD_DS_OFF     = 1,$/;"	e
MFX_LOOKAHEAD_DS_UNKNOWN	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_LOOKAHEAD_DS_UNKNOWN = 0,$/;"	e
MFX_MAKEFOURCC	libmfx/include/msdk/include/mfxcommon.h	41;"	d
MFX_MAX_DLL_PATH	libmfx/include/mfx_dispatcher.h	/^    MFX_MAX_DLL_PATH = 1024$/;"	e
MFX_MAX_MERIT	libmfx/src/mfx_library_iterator.cpp	/^    MFX_MAX_MERIT               = 0x7fffffff$/;"	e	enum:MFX::<anonymous>	file:
MFX_MAX_REAL_LIBNAME	libmfx/include/mfx_library_iterator.h	54;"	d
MFX_MAX_REGISTRY_KEY_NAME	libmfx/include/mfx_dispatcher.h	/^    MFX_MAX_REGISTRY_KEY_NAME = 256$/;"	e
MFX_MEMTYPE_BASE	libmfx/include/msdk/include/mfxstructures.h	686;"	d
MFX_MEMTYPE_DXVA2_DECODER_TARGET	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_MEMTYPE_DXVA2_DECODER_TARGET       =0x0010,$/;"	e
MFX_MEMTYPE_DXVA2_PROCESSOR_TARGET	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_MEMTYPE_DXVA2_PROCESSOR_TARGET     =0x0020,$/;"	e
MFX_MEMTYPE_EXTERNAL_FRAME	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_MEMTYPE_EXTERNAL_FRAME  = 0x0002,$/;"	e
MFX_MEMTYPE_FROM_DECODE	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_MEMTYPE_FROM_DECODE     = 0x0200,$/;"	e
MFX_MEMTYPE_FROM_ENCODE	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_MEMTYPE_FROM_ENCODE     = 0x0100,$/;"	e
MFX_MEMTYPE_FROM_VPPIN	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_MEMTYPE_FROM_VPPIN      = 0x0400,$/;"	e
MFX_MEMTYPE_FROM_VPPOUT	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_MEMTYPE_FROM_VPPOUT     = 0x0800,$/;"	e
MFX_MEMTYPE_INTERNAL_FRAME	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_MEMTYPE_INTERNAL_FRAME  = 0x0001,$/;"	e
MFX_MEMTYPE_OPAQUE_FRAME	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_MEMTYPE_OPAQUE_FRAME    = 0x0004$/;"	e
MFX_MEMTYPE_PERSISTENT_MEMORY	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_MEMTYPE_PERSISTENT_MEMORY   =0x0002$/;"	e
MFX_MEMTYPE_RESERVED1	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_MEMTYPE_RESERVED1                  =0x0080,$/;"	e
MFX_MEMTYPE_SYSTEM_MEMORY	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_MEMTYPE_SYSTEM_MEMORY              =0x0040,$/;"	e
MFX_MEMTYPE_VIDEO_MEMORY_DECODER_TARGET	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_MEMTYPE_VIDEO_MEMORY_DECODER_TARGET   = MFX_MEMTYPE_DXVA2_DECODER_TARGET,$/;"	e
MFX_MEMTYPE_VIDEO_MEMORY_PROCESSOR_TARGET	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_MEMTYPE_VIDEO_MEMORY_PROCESSOR_TARGET = MFX_MEMTYPE_DXVA2_PROCESSOR_TARGET,$/;"	e
MFX_MIN_REAL_LIBNAME	libmfx/include/mfx_library_iterator.h	53;"	d
MFX_MVPRECISION_HALFPEL	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_MVPRECISION_HALFPEL    = (1 << 1),$/;"	e
MFX_MVPRECISION_INTEGER	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_MVPRECISION_INTEGER    = (1 << 0),$/;"	e
MFX_MVPRECISION_QUARTERPEL	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_MVPRECISION_QUARTERPEL = (1 << 2)$/;"	e
MFX_MVPRECISION_UNKNOWN	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_MVPRECISION_UNKNOWN    = 0,$/;"	e
MFX_NOMINALRANGE_0_255	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_NOMINALRANGE_0_255     = 1,$/;"	e
MFX_NOMINALRANGE_16_235	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_NOMINALRANGE_16_235    = 2$/;"	e
MFX_NOMINALRANGE_UNKNOWN	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_NOMINALRANGE_UNKNOWN   = 0,$/;"	e
MFX_PICSTRUCT_FIELD_BFF	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_PICSTRUCT_FIELD_BFF     =0x04,$/;"	e
MFX_PICSTRUCT_FIELD_REPEATED	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_PICSTRUCT_FIELD_REPEATED=0x10,  \/* first field repeated, pic_struct=5 or 6 in H.264 *\/$/;"	e
MFX_PICSTRUCT_FIELD_TFF	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_PICSTRUCT_FIELD_TFF     =0x02,$/;"	e
MFX_PICSTRUCT_FRAME_DOUBLING	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_PICSTRUCT_FRAME_DOUBLING=0x20,  \/* pic_struct=7 in H.264 *\/$/;"	e
MFX_PICSTRUCT_FRAME_TRIPLING	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_PICSTRUCT_FRAME_TRIPLING=0x40   \/* pic_struct=8 in H.264 *\/$/;"	e
MFX_PICSTRUCT_PROGRESSIVE	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_PICSTRUCT_PROGRESSIVE   =0x01,$/;"	e
MFX_PICSTRUCT_UNKNOWN	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_PICSTRUCT_UNKNOWN       =0x00,$/;"	e
MFX_PLUGINID_CAMERA_HW	libmfx/include/msdk/include/mfxplugin.h	/^static const mfxPluginUID  MFX_PLUGINID_CAMERA_HW    = {{0x54, 0x54, 0x26, 0x16, 0x24, 0x33, 0x41, 0xe6, 0x93, 0xae, 0x89, 0x99, 0x42, 0xce, 0x73, 0x55}};$/;"	v
MFX_PLUGINID_HEVCD_HW	libmfx/include/msdk/include/mfxplugin.h	/^static const mfxPluginUID  MFX_PLUGINID_HEVCD_HW     = {{0x33, 0xa6, 0x1c, 0x0b, 0x4c, 0x27, 0x45, 0x4c, 0xa8, 0xd8, 0x5d, 0xde, 0x75, 0x7c, 0x6f, 0x8e}};$/;"	v
MFX_PLUGINID_HEVCD_SW	libmfx/include/msdk/include/mfxplugin.h	/^static const mfxPluginUID  MFX_PLUGINID_HEVCD_SW     = {{0x15, 0xdd, 0x93, 0x68, 0x25, 0xad, 0x47, 0x5e, 0xa3, 0x4e, 0x35, 0xf3, 0xf5, 0x42, 0x17, 0xa6}};$/;"	v
MFX_PLUGINID_HEVCE_SW	libmfx/include/msdk/include/mfxplugin.h	/^static const mfxPluginUID  MFX_PLUGINID_HEVCE_SW     = {{0x2f, 0xca, 0x99, 0x74, 0x9f, 0xdb, 0x49, 0xae, 0xb1, 0x21, 0xa5, 0xb6, 0x3e, 0xf5, 0x68, 0xf7}};$/;"	v
MFX_PLUGINID_VP8D_HW	libmfx/include/msdk/include/mfxplugin.h	/^static const mfxPluginUID  MFX_PLUGINID_VP8D_HW      = {{0xf6, 0x22, 0x39, 0x4d, 0x8d, 0x87, 0x45, 0x2f, 0x87, 0x8c, 0x51, 0xf2, 0xfc, 0x9b, 0x41, 0x31}};$/;"	v
MFX_PLUGINTYPE_VIDEO_DECODE	libmfx/include/msdk/include/mfxplugin.h	/^    MFX_PLUGINTYPE_VIDEO_DECODE    = 1,$/;"	e
MFX_PLUGINTYPE_VIDEO_ENCODE	libmfx/include/msdk/include/mfxplugin.h	/^    MFX_PLUGINTYPE_VIDEO_ENCODE    = 2,$/;"	e
MFX_PLUGINTYPE_VIDEO_GENERAL	libmfx/include/msdk/include/mfxplugin.h	/^    MFX_PLUGINTYPE_VIDEO_GENERAL   = 0,$/;"	e
MFX_PLUGINTYPE_VIDEO_VPP	libmfx/include/msdk/include/mfxplugin.h	/^    MFX_PLUGINTYPE_VIDEO_VPP       = 3$/;"	e
MFX_PRIORITY_HIGH	libmfx/include/msdk/include/mfxcommon.h	/^    MFX_PRIORITY_HIGH = 2$/;"	e
MFX_PRIORITY_LOW	libmfx/include/msdk/include/mfxcommon.h	/^    MFX_PRIORITY_LOW = 0,$/;"	e
MFX_PRIORITY_NORMAL	libmfx/include/msdk/include/mfxcommon.h	/^    MFX_PRIORITY_NORMAL = 1,$/;"	e
MFX_PRODUCT_VERSION	QSVHelper/IntelSupport/include/sample_defs.h	88;"	d
MFX_PROFILE_AAC_ALS	libmfx/include/msdk/include/mfxastructures.h	/^    MFX_PROFILE_AAC_ALS         =0x20,$/;"	e
MFX_PROFILE_AAC_BSAC	libmfx/include/msdk/include/mfxastructures.h	/^    MFX_PROFILE_AAC_BSAC        =22,$/;"	e
MFX_PROFILE_AAC_HE	libmfx/include/msdk/include/mfxastructures.h	/^    MFX_PROFILE_AAC_HE          =5,$/;"	e
MFX_PROFILE_AAC_LC	libmfx/include/msdk/include/mfxastructures.h	/^    MFX_PROFILE_AAC_LC          =2,$/;"	e
MFX_PROFILE_AAC_LTP	libmfx/include/msdk/include/mfxastructures.h	/^    MFX_PROFILE_AAC_LTP         =4,$/;"	e
MFX_PROFILE_AAC_MAIN	libmfx/include/msdk/include/mfxastructures.h	/^    MFX_PROFILE_AAC_MAIN        =1,$/;"	e
MFX_PROFILE_AAC_PS	libmfx/include/msdk/include/mfxastructures.h	/^    MFX_PROFILE_AAC_PS          =29,$/;"	e
MFX_PROFILE_AAC_SSR	libmfx/include/msdk/include/mfxastructures.h	/^    MFX_PROFILE_AAC_SSR         =3,$/;"	e
MFX_PROFILE_AVC_BASELINE	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_PROFILE_AVC_BASELINE                =66,$/;"	e
MFX_PROFILE_AVC_CONSTRAINED_BASELINE	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_PROFILE_AVC_CONSTRAINED_BASELINE    =MFX_PROFILE_AVC_BASELINE + MFX_PROFILE_AVC_CONSTRAINT_SET1,$/;"	e
MFX_PROFILE_AVC_CONSTRAINED_HIGH	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_PROFILE_AVC_CONSTRAINED_HIGH        =MFX_PROFILE_AVC_HIGH     + MFX_PROFILE_AVC_CONSTRAINT_SET4$/;"	e
MFX_PROFILE_AVC_CONSTRAINT_SET0	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_PROFILE_AVC_CONSTRAINT_SET0     = (0x100 << 0),$/;"	e
MFX_PROFILE_AVC_CONSTRAINT_SET1	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_PROFILE_AVC_CONSTRAINT_SET1     = (0x100 << 1),$/;"	e
MFX_PROFILE_AVC_CONSTRAINT_SET2	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_PROFILE_AVC_CONSTRAINT_SET2     = (0x100 << 2),$/;"	e
MFX_PROFILE_AVC_CONSTRAINT_SET3	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_PROFILE_AVC_CONSTRAINT_SET3     = (0x100 << 3),$/;"	e
MFX_PROFILE_AVC_CONSTRAINT_SET4	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_PROFILE_AVC_CONSTRAINT_SET4     = (0x100 << 4),$/;"	e
MFX_PROFILE_AVC_CONSTRAINT_SET5	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_PROFILE_AVC_CONSTRAINT_SET5     = (0x100 << 5),$/;"	e
MFX_PROFILE_AVC_EXTENDED	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_PROFILE_AVC_EXTENDED                =88,$/;"	e
MFX_PROFILE_AVC_HIGH	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_PROFILE_AVC_HIGH                    =100,$/;"	e
MFX_PROFILE_AVC_MAIN	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_PROFILE_AVC_MAIN                    =77,$/;"	e
MFX_PROFILE_AVC_MULTIVIEW_HIGH	libmfx/include/msdk/include/mfxmvc.h	/^    MFX_PROFILE_AVC_MULTIVIEW_HIGH =118,$/;"	e
MFX_PROFILE_AVC_PROGRESSIVE_HIGH	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_PROFILE_AVC_PROGRESSIVE_HIGH        =MFX_PROFILE_AVC_HIGH     + MFX_PROFILE_AVC_CONSTRAINT_SET4,$/;"	e
MFX_PROFILE_AVC_STEREO_HIGH	libmfx/include/msdk/include/mfxmvc.h	/^    MFX_PROFILE_AVC_STEREO_HIGH    =128$/;"	e
MFX_PROFILE_HEVC_MAIN	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_PROFILE_HEVC_MAIN             =1,$/;"	e
MFX_PROFILE_HEVC_MAIN10	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_PROFILE_HEVC_MAIN10           =2,$/;"	e
MFX_PROFILE_HEVC_MAINSP	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_PROFILE_HEVC_MAINSP           =3,$/;"	e
MFX_PROFILE_JPEG_BASELINE	libmfx/include/msdk/include/mfxjpeg.h	/^    MFX_PROFILE_JPEG_BASELINE      = 1$/;"	e
MFX_PROFILE_MPEG2_HIGH	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_PROFILE_MPEG2_HIGH                  =0x10,$/;"	e
MFX_PROFILE_MPEG2_MAIN	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_PROFILE_MPEG2_MAIN                  =0x40,$/;"	e
MFX_PROFILE_MPEG2_SIMPLE	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_PROFILE_MPEG2_SIMPLE                =0x50,$/;"	e
MFX_PROFILE_UNKNOWN	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_PROFILE_UNKNOWN                     =0,$/;"	e
MFX_PROFILE_VC1_ADVANCED	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_PROFILE_VC1_ADVANCED                =(12+1),$/;"	e
MFX_PROFILE_VC1_MAIN	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_PROFILE_VC1_MAIN                    =(4+1),$/;"	e
MFX_PROFILE_VC1_SIMPLE	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_PROFILE_VC1_SIMPLE                  =(0+1),$/;"	e
MFX_RATECONTROL_AVBR	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_RATECONTROL_AVBR    =4,$/;"	e
MFX_RATECONTROL_CBR	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_RATECONTROL_CBR     =1,$/;"	e
MFX_RATECONTROL_CQP	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_RATECONTROL_CQP     =3,$/;"	e
MFX_RATECONTROL_ICQ	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_RATECONTROL_ICQ       =9,$/;"	e
MFX_RATECONTROL_LA	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_RATECONTROL_LA        =8,$/;"	e
MFX_RATECONTROL_LA_ICQ	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_RATECONTROL_LA_ICQ    =11$/;"	e
MFX_RATECONTROL_RESERVED1	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_RATECONTROL_RESERVED1 =5,$/;"	e
MFX_RATECONTROL_RESERVED2	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_RATECONTROL_RESERVED2 =6,$/;"	e
MFX_RATECONTROL_RESERVED3	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_RATECONTROL_RESERVED3 =100,$/;"	e
MFX_RATECONTROL_RESERVED4	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_RATECONTROL_RESERVED4 =7,$/;"	e
MFX_RATECONTROL_VBR	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_RATECONTROL_VBR     =2,$/;"	e
MFX_RATECONTROL_VCM	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_RATECONTROL_VCM       =10,$/;"	e
MFX_ROTATION_0	libmfx/include/msdk/include/mfxjpeg.h	/^    MFX_ROTATION_0      = 0,$/;"	e
MFX_ROTATION_180	libmfx/include/msdk/include/mfxjpeg.h	/^    MFX_ROTATION_180    = 2,$/;"	e
MFX_ROTATION_270	libmfx/include/msdk/include/mfxjpeg.h	/^    MFX_ROTATION_270    = 3$/;"	e
MFX_ROTATION_90	libmfx/include/msdk/include/mfxjpeg.h	/^    MFX_ROTATION_90     = 1,$/;"	e
MFX_SCANTYPE_INTERLEAVED	libmfx/include/msdk/include/mfxjpeg.h	/^    MFX_SCANTYPE_INTERLEAVED = 1,$/;"	e
MFX_SCANTYPE_NONINTERLEAVED	libmfx/include/msdk/include/mfxjpeg.h	/^    MFX_SCANTYPE_NONINTERLEAVED = 2$/;"	e
MFX_SCANTYPE_UNKNOWN	libmfx/include/msdk/include/mfxjpeg.h	/^    MFX_SCANTYPE_UNKNOWN = 0,$/;"	e
MFX_SC_IS_FREE	libmfx/src/mfx_critical_section.cpp	/^    MFX_SC_IS_FREE = 0,$/;"	e	file:
MFX_SC_IS_TAKEN	libmfx/src/mfx_critical_section.cpp	/^    MFX_SC_IS_TAKEN = 1$/;"	e	file:
MFX_SKIPMODE_LESS	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_SKIPMODE_LESS=2$/;"	e
MFX_SKIPMODE_MORE	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_SKIPMODE_MORE=1,$/;"	e
MFX_SKIPMODE_NOSKIP	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_SKIPMODE_NOSKIP=0,$/;"	e
MFX_SO_BASE_NAME_LEN	libmfx/include/mfx_library_iterator.h	47;"	d
MFX_SO_BASE_NAME_LEN	libmfx/include/mfx_library_iterator.h	50;"	d
MFX_STDCALL	libmfx/include/msdk/include/mfxdefs.h	49;"	d
MFX_STDCALL	libmfx/include/msdk/include/mfxdefs.h	52;"	d
MFX_STORAGE_ID_FIRST	libmfx/include/mfx_library_iterator.h	/^    MFX_STORAGE_ID_FIRST    = MFX_CURRENT_USER_KEY,$/;"	e	enum:MFX::<anonymous>
MFX_STORAGE_ID_LAST	libmfx/include/mfx_library_iterator.h	/^    MFX_STORAGE_ID_LAST     = MFX_LOCAL_MACHINE_KEY$/;"	e	enum:MFX::<anonymous>
MFX_TARGETUSAGE_1	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_TARGETUSAGE_1    =1,$/;"	e
MFX_TARGETUSAGE_2	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_TARGETUSAGE_2    =2,$/;"	e
MFX_TARGETUSAGE_3	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_TARGETUSAGE_3    =3,$/;"	e
MFX_TARGETUSAGE_4	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_TARGETUSAGE_4    =4,$/;"	e
MFX_TARGETUSAGE_5	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_TARGETUSAGE_5    =5,$/;"	e
MFX_TARGETUSAGE_6	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_TARGETUSAGE_6    =6,$/;"	e
MFX_TARGETUSAGE_7	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_TARGETUSAGE_7    =7,$/;"	e
MFX_TARGETUSAGE_BALANCED	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_TARGETUSAGE_BALANCED        =MFX_TARGETUSAGE_4,$/;"	e
MFX_TARGETUSAGE_BEST_QUALITY	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_TARGETUSAGE_BEST_QUALITY    =MFX_TARGETUSAGE_1,$/;"	e
MFX_TARGETUSAGE_BEST_SPEED	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_TARGETUSAGE_BEST_SPEED      =MFX_TARGETUSAGE_7$/;"	e
MFX_TARGETUSAGE_UNKNOWN	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_TARGETUSAGE_UNKNOWN         =0,$/;"	e
MFX_TASK_BUSY	libmfx/include/msdk/include/mfxdefs.h	/^    MFX_TASK_BUSY = 9 \/* task is waiting for resources *\/$/;"	e
MFX_TASK_DONE	libmfx/include/msdk/include/mfxdefs.h	/^    MFX_TASK_DONE = MFX_ERR_NONE, \/* task has been completed *\/$/;"	e
MFX_TASK_WORKING	libmfx/include/msdk/include/mfxdefs.h	/^    MFX_TASK_WORKING = 8, \/*  there is some more work to do *\/$/;"	e
MFX_THREADPOLICY_PARALLEL	libmfx/include/msdk/include/mfxplugin.h	/^    MFX_THREADPOLICY_PARALLEL    = 1$/;"	e
MFX_THREADPOLICY_SERIAL	libmfx/include/msdk/include/mfxplugin.h	/^    MFX_THREADPOLICY_SERIAL    = 0,$/;"	e
MFX_TIER_HEVC_HIGH	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_TIER_HEVC_HIGH  = 0x100,$/;"	e
MFX_TIER_HEVC_MAIN	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_TIER_HEVC_MAIN  = 0,$/;"	e
MFX_TIMESTAMPCALC_TELECINE	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_TIMESTAMPCALC_TELECINE = 1,$/;"	e
MFX_TIMESTAMPCALC_UNKNOWN	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_TIMESTAMPCALC_UNKNOWN = 0,$/;"	e
MFX_TIMESTAMP_UNKNOWN	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_TIMESTAMP_UNKNOWN = -1$/;"	e
MFX_TIME_FACTOR	Source/Encoder_QSV.cpp	132;"	d	file:
MFX_TIME_FACTOR	Source/Encoder_QSV.cpp	144;"	d	file:
MFX_TRANSFERMATRIX_BT601	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_TRANSFERMATRIX_BT601   = 2$/;"	e
MFX_TRANSFERMATRIX_BT709	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_TRANSFERMATRIX_BT709   = 1,$/;"	e
MFX_TRANSFERMATRIX_UNKNOWN	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_TRANSFERMATRIX_UNKNOWN = 0,$/;"	e
MFX_TRELLIS_B	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_TRELLIS_B       =0x08$/;"	e
MFX_TRELLIS_I	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_TRELLIS_I       =0x02,$/;"	e
MFX_TRELLIS_OFF	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_TRELLIS_OFF     =0x01,$/;"	e
MFX_TRELLIS_P	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_TRELLIS_P       =0x04,$/;"	e
MFX_TRELLIS_UNKNOWN	libmfx/include/msdk/include/mfxstructures.h	/^    MFX_TRELLIS_UNKNOWN =0,$/;"	e
MFX_UNKNOWN_KEY	libmfx/include/mfx_library_iterator.h	/^    MFX_UNKNOWN_KEY             = -1,$/;"	e	enum:MFX::<anonymous>
MFX_VERSION_MAJOR	libmfx/include/msdk/include/mfxvideo.h	35;"	d
MFX_VERSION_MINOR	libmfx/include/msdk/include/mfxvideo.h	36;"	d
MFX_WAIT	libmfx/src/mfx_critical_section.cpp	44;"	d	file:
MFX_WRN_DEVICE_BUSY	libmfx/include/msdk/include/mfxdefs.h	/^    MFX_WRN_DEVICE_BUSY                 = 2,    \/* the HW acceleration device is busy *\/$/;"	e
MFX_WRN_FILTER_SKIPPED	libmfx/include/msdk/include/mfxdefs.h	/^    MFX_WRN_FILTER_SKIPPED              = 10,     \/* one of requested filters has been skipped *\/$/;"	e
MFX_WRN_INCOMPATIBLE_AUDIO_PARAM	libmfx/include/msdk/include/mfxdefs.h	/^    MFX_WRN_INCOMPATIBLE_AUDIO_PARAM    = 11,    \/* incompatible audio parameters *\/$/;"	e
MFX_WRN_INCOMPATIBLE_VIDEO_PARAM	libmfx/include/msdk/include/mfxdefs.h	/^    MFX_WRN_INCOMPATIBLE_VIDEO_PARAM    = 5,    \/* incompatible video parameters *\/$/;"	e
MFX_WRN_IN_EXECUTION	libmfx/include/msdk/include/mfxdefs.h	/^    MFX_WRN_IN_EXECUTION                = 1,    \/* the previous asynchrous operation is in execution *\/$/;"	e
MFX_WRN_OUT_OF_RANGE	libmfx/include/msdk/include/mfxdefs.h	/^    MFX_WRN_OUT_OF_RANGE                = 7,      \/* the value is out of valid range *\/$/;"	e
MFX_WRN_PARTIAL_ACCELERATION	libmfx/include/msdk/include/mfxdefs.h	/^    MFX_WRN_PARTIAL_ACCELERATION        = 4,    \/* SW is used *\/$/;"	e
MFX_WRN_VALUE_NOT_CHANGED	libmfx/include/msdk/include/mfxdefs.h	/^    MFX_WRN_VALUE_NOT_CHANGED           = 6,      \/* the value is saturated based on its valid range *\/$/;"	e
MFX_WRN_VIDEO_PARAM_CHANGED	libmfx/include/msdk/include/mfxdefs.h	/^    MFX_WRN_VIDEO_PARAM_CHANGED         = 3,    \/* the video parameters are changed during decoding *\/$/;"	e
MG_AUTH	Source/mongoose.h	/^  MG_AUTH,        \/\/ If callback returns MG_FALSE, authentication fails$/;"	e	enum:mg_event
MG_CGI_CONN	Source/mongoose.c	1530;"	d	file:
MG_CLOSE	Source/mongoose.h	/^  MG_CLOSE,       \/\/ Connection is closed, callback return value is ignored$/;"	e	enum:mg_event
MG_CONNECT	Source/mongoose.h	/^  MG_CONNECT,     \/\/ If callback returns MG_FALSE, connect fails$/;"	e	enum:mg_event
MG_CONN_2_CONN	Source/mongoose.c	1547;"	d	file:
MG_FALSE	Source/mongoose.h	/^enum mg_result { MG_FALSE, MG_TRUE, MG_MORE };$/;"	e	enum:mg_result
MG_HEADERS_SENT	Source/mongoose.c	1528;"	d	file:
MG_HTTP_ERROR	Source/mongoose.h	/^  MG_HTTP_ERROR   \/\/ If callback returns MG_FALSE, Mongoose continues with err$/;"	e	enum:mg_event
MG_MORE	Source/mongoose.h	/^enum mg_result { MG_FALSE, MG_TRUE, MG_MORE };$/;"	e	enum:mg_result
MG_POLL	Source/mongoose.h	/^  MG_POLL = 100,  \/\/ If callback returns MG_TRUE connection closes$/;"	e	enum:mg_event
MG_PROXY_CONN	Source/mongoose.c	1531;"	d	file:
MG_PROXY_DONT_PARSE	Source/mongoose.c	1532;"	d	file:
MG_RECV	Source/mongoose.h	/^  MG_RECV,        \/\/ Mongoose has received POST data chunk.$/;"	e	enum:mg_event
MG_REPLY	Source/mongoose.h	/^  MG_REPLY,       \/\/ If callback returns MG_FALSE, Mongoose closes connection$/;"	e	enum:mg_event
MG_REQUEST	Source/mongoose.h	/^  MG_REQUEST,     \/\/ If callback returns MG_FALSE, Mongoose continues with req$/;"	e	enum:mg_event
MG_S_WEBSOCKET_PING_DATA_LEN	Source/mongoose.c	3050;"	d	file:
MG_TRUE	Source/mongoose.h	/^enum mg_result { MG_FALSE, MG_TRUE, MG_MORE };$/;"	e	enum:mg_result
MG_USING_CHUNKED_API	Source/mongoose.c	1529;"	d	file:
MG_WS_CONNECT	Source/mongoose.h	/^  MG_WS_CONNECT,  \/\/ New websocket connection established$/;"	e	enum:mg_event
MG_WS_HANDSHAKE	Source/mongoose.h	/^  MG_WS_HANDSHAKE,  \/\/ New websocket connection, handshake request$/;"	e	enum:mg_event
MH_ALL_HOOKS	minhook/include/MinHook.h	75;"	d
MH_ApplyQueued	minhook/src/export.cpp	/^MH_STATUS WINAPI MH_ApplyQueued()$/;"	f
MH_CreateHook	minhook/src/export.cpp	/^MH_STATUS WINAPI MH_CreateHook(void* pTarget, void* const pDetour, void** ppOriginal)$/;"	f
MH_DisableHook	minhook/src/export.cpp	/^MH_STATUS WINAPI MH_DisableHook(void* pTarget)$/;"	f
MH_ERROR_ALREADY_CREATED	minhook/include/MinHook.h	/^	MH_ERROR_ALREADY_CREATED,$/;"	e	enum:MH_STATUS
MH_ERROR_ALREADY_INITIALIZED	minhook/include/MinHook.h	/^	MH_ERROR_ALREADY_INITIALIZED,$/;"	e	enum:MH_STATUS
MH_ERROR_DISABLED	minhook/include/MinHook.h	/^	MH_ERROR_DISABLED,$/;"	e	enum:MH_STATUS
MH_ERROR_ENABLED	minhook/include/MinHook.h	/^	MH_ERROR_ENABLED,$/;"	e	enum:MH_STATUS
MH_ERROR_MEMORY_ALLOC	minhook/include/MinHook.h	/^	MH_ERROR_MEMORY_ALLOC,$/;"	e	enum:MH_STATUS
MH_ERROR_MEMORY_PROTECT	minhook/include/MinHook.h	/^	MH_ERROR_MEMORY_PROTECT$/;"	e	enum:MH_STATUS
MH_ERROR_NOT_CREATED	minhook/include/MinHook.h	/^	MH_ERROR_NOT_CREATED,$/;"	e	enum:MH_STATUS
MH_ERROR_NOT_EXECUTABLE	minhook/include/MinHook.h	/^	MH_ERROR_NOT_EXECUTABLE,$/;"	e	enum:MH_STATUS
MH_ERROR_NOT_INITIALIZED	minhook/include/MinHook.h	/^	MH_ERROR_NOT_INITIALIZED,$/;"	e	enum:MH_STATUS
MH_ERROR_UNSUPPORTED_FUNCTION	minhook/include/MinHook.h	/^	MH_ERROR_UNSUPPORTED_FUNCTION,$/;"	e	enum:MH_STATUS
MH_EnableHook	minhook/src/export.cpp	/^MH_STATUS WINAPI MH_EnableHook(void* pTarget)$/;"	f
MH_Initialize	minhook/src/export.cpp	/^MH_STATUS WINAPI MH_Initialize()$/;"	f
MH_OK	minhook/include/MinHook.h	/^	MH_OK = 0,$/;"	e	enum:MH_STATUS
MH_QueueDisableHook	minhook/src/export.cpp	/^MH_STATUS WINAPI MH_QueueDisableHook(void* pTarget)$/;"	f
MH_QueueEnableHook	minhook/src/export.cpp	/^MH_STATUS WINAPI MH_QueueEnableHook(void* pTarget)$/;"	f
MH_RemoveHook	minhook/src/export.cpp	/^MH_STATUS WINAPI MH_RemoveHook(void* pTarget)$/;"	f
MH_STATUS	minhook/include/MinHook.h	/^MH_STATUS;$/;"	t
MH_STATUS	minhook/include/MinHook.h	/^typedef enum MH_STATUS$/;"	g
MH_UNKNOWN	minhook/include/MinHook.h	/^	MH_UNKNOWN = -1,$/;"	e	enum:MH_STATUS
MH_Uninitialize	minhook/src/export.cpp	/^MH_STATUS WINAPI MH_Uninitialize()$/;"	f
MIMETYPE_GIF	lame/libmp3lame/id3tag.h	/^    MIMETYPE_GIF,$/;"	e
MIMETYPE_JPEG	lame/libmp3lame/id3tag.h	/^    MIMETYPE_JPEG,$/;"	e
MIMETYPE_NONE	lame/libmp3lame/id3tag.h	/^    MIMETYPE_NONE = 0,$/;"	e
MIMETYPE_PNG	lame/libmp3lame/id3tag.h	/^    MIMETYPE_PNG,$/;"	e
MIN	OBSApi/Utility/XT.h	225;"	d
MIN	libsamplerate/common.h	42;"	d
MINIDUMPWRITEDUMP	Source/CrashDumpHandler.h	/^typedef BOOL (WINAPI *MINIDUMPWRITEDUMP) ($/;"	t
MINORVERSION	lame/Dll/BladeMP3EncDLL.c	/^const BYTE MINORVERSION = 32;$/;"	v
MINVAR	libfaac/backpred.h	32;"	d
MIN_TEX_SIZE_H	Source/TextOutputSource.cpp	34;"	d	file:
MIN_TEX_SIZE_W	Source/TextOutputSource.cpp	33;"	d	file:
MIN_TRANSITION_TIME	Source/BitmapTransitionSource.cpp	26;"	d	file:
MKDIR_P	lame/ACM/ADbg/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	lame/ACM/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	lame/ACM/ddk/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	lame/ACM/tinyxml/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	lame/Dll/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	lame/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	lame/debian/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	lame/doc/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	lame/doc/html/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	lame/doc/man/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	lame/dshow/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	lame/frontend/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	lame/include/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	lame/libmp3lame/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	lame/libmp3lame/i386/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	lame/libmp3lame/vector/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	lame/mac/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	lame/macosx/English.lproj/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	lame/macosx/LAME.xcodeproj/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	lame/macosx/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	lame/misc/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	lame/mpglib/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	lame/vc_solution/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MLIMIT	lame/libmp3lame/psymodel.c	246;"	d	file:
MMDeviceAudioSource	Source/MMDeviceAudioSource.cpp	/^class MMDeviceAudioSource : public AudioSource$/;"	c	file:
MMDeviceAudioSource.cpp	Source/MMDeviceAudioSource.cpp	1;"	F
MMDeviceEnumerator	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/RenderProcess.cs	/^    internal class MMDeviceEnumerator$/;"	c	namespace:Browser
MMX	lame/include/lame.h	/^    MMX = 1,$/;"	e	enum:asm_optimizations_e
MMX	lame/libmp3lame/util.h	/^            unsigned int MMX:1; \/* Pentium MMX, Pentium II...IV, K6, K6-2,$/;"	m	struct:lame_internal_flags::<anonymous>
MNON_OVERLAPPED	libfaac/filtbank.h	38;"	d
MODE_ENCODE	QSVHelper/IPCStructs.h	/^    enum { MODE_QUERY, MODE_ENCODE } mode;$/;"	e	enum:init_request::<anonymous>
MODE_QUERY	QSVHelper/IPCStructs.h	/^    enum { MODE_QUERY, MODE_ENCODE } mode;$/;"	e	enum:init_request::<anonymous>
MONGOOSE_ENABLE_THREADS	Source/mongoose.c	72;"	d	file:
MONGOOSE_HEADER_INCLUDED	Source/mongoose.h	19;"	d
MONGOOSE_IDLE_TIMEOUT_SECONDS	Source/mongoose.c	1401;"	d	file:
MONGOOSE_NO_AUTH	Source/mongoose.c	1409;"	d	file:
MONGOOSE_NO_CGI	Source/mongoose.c	1405;"	d	file:
MONGOOSE_NO_CGI	Source/mongoose.c	1411;"	d	file:
MONGOOSE_NO_DAV	Source/mongoose.c	1413;"	d	file:
MONGOOSE_NO_DIRECTORY_LISTING	Source/mongoose.c	1414;"	d	file:
MONGOOSE_NO_DL	Source/mongoose.c	1417;"	d	file:
MONGOOSE_NO_LOGGING	Source/mongoose.c	1415;"	d	file:
MONGOOSE_NO_SSI	Source/mongoose.c	1416;"	d	file:
MONGOOSE_POST_SIZE_LIMIT	Source/mongoose.c	1397;"	d	file:
MONGOOSE_USE_EXTRA_HTTP_HEADERS	Source/mongoose.c	1393;"	d	file:
MONGOOSE_USE_WEBSOCKET_PING_INTERVAL	Source/mongoose.c	1388;"	d	file:
MONGOOSE_VERSION	Source/mongoose.h	21;"	d
MONO	lame/include/lame.h	/^  MONO,$/;"	e	enum:MPEG_mode_e
MOVERLAPPED	libfaac/filtbank.h	37;"	d
MP3Encoder	Source/Encoder_MP3.cpp	/^    MP3Encoder(UINT bitRate)$/;"	f	class:MP3Encoder
MP3Encoder	Source/Encoder_MP3.cpp	/^class MP3Encoder : public AudioEncoder$/;"	c	file:
MP3OutputBuffer	Source/Encoder_MP3.cpp	/^    List<BYTE> MP3OutputBuffer;$/;"	m	class:MP3Encoder	file:
MP3X_ALPHA_VERSION	lame/frontend/gtkanal.c	65;"	d	file:
MP3X_BETA_VERSION	lame/frontend/gtkanal.c	66;"	d	file:
MP3X_MAJOR_VERSION	lame/frontend/gtkanal.c	63;"	d	file:
MP3X_MINOR_VERSION	lame/frontend/gtkanal.c	64;"	d	file:
MP3_ERR	lame/mpglib/mpglib.h	90;"	d
MP3_NEED_MORE	lame/mpglib/mpglib.h	92;"	d
MP3_OK	lame/mpglib/mpglib.h	91;"	d
MP3_general	lame/doc/html/links.html	/^<h3><a name="MP3_general">General MP3 Web Sites:<\/a><\/h3>$/;"	a
MP3_sites	lame/doc/html/links.html	/^<h3><a name="MP3_sites">MP3 Encoding Web Sites:<\/a><\/h3>$/;"	a
MP3export.pas	lame/Dll/MP3export.pas	1;"	F
MP4AudioFrameInfo	Source/MP4FileStream.cpp	/^struct MP4AudioFrameInfo$/;"	s	file:
MP4FileStream	Source/MP4FileStream.cpp	/^class MP4FileStream : public VideoFileStream$/;"	c	file:
MP4FileStream.cpp	Source/MP4FileStream.cpp	1;"	F
MP4ProgressDialogProc	Source/MP4FileStream.cpp	/^    static INT_PTR CALLBACK MP4ProgressDialogProc(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam)$/;"	f	class:MP4FileStream	file:
MP4VideoFrameInfo	Source/MP4FileStream.cpp	/^struct MP4VideoFrameInfo$/;"	s	file:
MPEG1	lame/Dll/BladeMP3EncDLL.h	71;"	d
MPEG2	lame/Dll/BladeMP3EncDLL.h	72;"	d
MPEG2	libfaac/bitstream.h	126;"	d
MPEG2	libfaac/include/faaccfg.h	28;"	d
MPEG4	libfaac/bitstream.h	127;"	d
MPEG4	libfaac/include/faaccfg.h	29;"	d
MPEGABase	lame/frontend/amiga_mpega.c	/^struct Library *MPEGABase = NULL;$/;"	v
MPEGChannelMode	lame/libmp3lame/encoder.h	/^enum MPEGChannelMode$/;"	g
MPEG_1	lame/libmp3lame/tables.c	/^    MPEG_1 = 1,$/;"	e	file:
MPEG_2	lame/libmp3lame/tables.c	/^    MPEG_2 = 0,$/;"	e	file:
MPEG_25	lame/libmp3lame/tables.c	/^    MPEG_25 = 2$/;"	e	file:
MPEG_ENCODER_CONFIG	lame/dshow/Encoder.h	/^} MPEG_ENCODER_CONFIG;$/;"	t
MPEG_VERSION_1	lame/dshow/Encoder.cpp	353;"	d	file:
MPEG_VERSION_RESERVED	lame/dshow/Encoder.cpp	352;"	d	file:
MPEG_mode	lame/include/lame.h	/^} MPEG_mode;$/;"	t
MPEG_mode_e	lame/include/lame.h	/^typedef enum MPEG_mode_e {$/;"	g
MPEG_t	lame/libmp3lame/tables.c	/^} MPEG_t;$/;"	t	file:
MPG123_H_INCLUDED	lame/mpglib/mpg123.h	22;"	d
MPGLIB_DCT64_I386_H_INCLUDED	lame/mpglib/dct64_i386.h	23;"	d
MPGLIB_TABINIT_H_INCLUDED	lame/mpglib/tabinit.h	23;"	d
MPG_MD_DUAL_CHANNEL	lame/dshow/PropPage_adv.cpp	34;"	d	file:
MPG_MD_DUAL_CHANNEL	lame/mpglib/mpg123.h	82;"	d
MPG_MD_JOINT_STEREO	lame/dshow/PropPage_adv.cpp	33;"	d	file:
MPG_MD_JOINT_STEREO	lame/mpglib/mpg123.h	81;"	d
MPG_MD_LR_I	lame/libmp3lame/encoder.h	/^,   MPG_MD_LR_I  = 1$/;"	e	enum:MPEGChannelMode
MPG_MD_LR_I	lame/libmp3lame/encoder.h	135;"	d
MPG_MD_LR_LR	lame/libmp3lame/encoder.h	/^{   MPG_MD_LR_LR = 0$/;"	e	enum:MPEGChannelMode
MPG_MD_LR_LR	lame/libmp3lame/encoder.h	134;"	d
MPG_MD_MONO	lame/dshow/PropPage_adv.cpp	35;"	d	file:
MPG_MD_MONO	lame/mpglib/mpg123.h	83;"	d
MPG_MD_MS_I	lame/libmp3lame/encoder.h	/^,   MPG_MD_MS_I  = 3$/;"	e	enum:MPEGChannelMode
MPG_MD_MS_I	lame/libmp3lame/encoder.h	137;"	d
MPG_MD_MS_LR	lame/libmp3lame/encoder.h	/^,   MPG_MD_MS_LR = 2$/;"	e	enum:MPEGChannelMode
MPG_MD_MS_LR	lame/libmp3lame/encoder.h	136;"	d
MPG_MD_STEREO	lame/dshow/PropPage_adv.cpp	32;"	d	file:
MPG_MD_STEREO	lame/mpglib/mpg123.h	80;"	d
MPSTR	lame/mpglib/mpglib.h	/^} MPSTR, *PMPSTR;$/;"	t
MP_bytes	librtmp/dh.h	134;"	d
MP_bytes	librtmp/dh.h	36;"	d
MP_bytes	librtmp/dh.h	87;"	d
MP_cmp	librtmp/dh.h	127;"	d
MP_cmp	librtmp/dh.h	29;"	d
MP_cmp	librtmp/dh.h	80;"	d
MP_cmp_1	librtmp/dh.h	130;"	d
MP_cmp_1	librtmp/dh.h	32;"	d
MP_cmp_1	librtmp/dh.h	83;"	d
MP_free	librtmp/dh.h	132;"	d
MP_free	librtmp/dh.h	34;"	d
MP_free	librtmp/dh.h	85;"	d
MP_getbin	librtmp/dh.h	136;"	d
MP_getbin	librtmp/dh.h	38;"	d
MP_getbin	librtmp/dh.h	89;"	d
MP_gethex	librtmp/dh.h	133;"	d
MP_gethex	librtmp/dh.h	35;"	d
MP_gethex	librtmp/dh.h	86;"	d
MP_modexp	librtmp/dh.h	131;"	d
MP_modexp	librtmp/dh.h	33;"	d
MP_modexp	librtmp/dh.h	84;"	d
MP_new	librtmp/dh.h	125;"	d
MP_new	librtmp/dh.h	27;"	d
MP_new	librtmp/dh.h	78;"	d
MP_set	librtmp/dh.h	128;"	d
MP_set	librtmp/dh.h	30;"	d
MP_set	librtmp/dh.h	81;"	d
MP_set_w	librtmp/dh.h	126;"	d
MP_set_w	librtmp/dh.h	28;"	d
MP_set_w	librtmp/dh.h	79;"	d
MP_setbin	librtmp/dh.h	135;"	d
MP_setbin	librtmp/dh.h	37;"	d
MP_setbin	librtmp/dh.h	88;"	d
MP_sub_w	librtmp/dh.h	129;"	d
MP_sub_w	librtmp/dh.h	31;"	d
MP_sub_w	librtmp/dh.h	82;"	d
MP_t	librtmp/dh.h	/^typedef BIGNUM * MP_t;$/;"	t
MP_t	librtmp/dh.h	/^typedef mpi * MP_t;$/;"	t
MP_t	librtmp/dh.h	/^typedef mpz_ptr MP_t;$/;"	t
MS	lame/frontend/brhist.c	300;"	d	file:
MSDK2WIDE	libmfx/include/mfx_dispatcher_defs.h	41;"	d
MSDK2WIDE	libmfx/include/mfx_dispatcher_defs.h	54;"	d
MSDK2WIDE	libmfx/include/mfx_dispatcher_defs.h	62;"	d
MSDK_ALIGN	QSVHelper/IntelSupport/include/sample_defs.h	74;"	d
MSDK_ALIGN16	QSVHelper/IntelSupport/include/sample_defs.h	72;"	d
MSDK_ALIGN32	QSVHelper/IntelSupport/include/sample_defs.h	73;"	d
MSDK_ARRAY_LEN	QSVHelper/IntelSupport/include/sample_defs.h	75;"	d
MSDK_BREAK_ON_ERROR	QSVHelper/IntelSupport/include/sample_defs.h	61;"	d
MSDK_CHAR	QSVHelper/IntelSupport/include/vm/strings_defs.h	23;"	d
MSDK_CHECK_ERROR	QSVHelper/IntelSupport/include/sample_defs.h	52;"	d
MSDK_CHECK_NOT_EQUAL	QSVHelper/IntelSupport/include/sample_defs.h	53;"	d
MSDK_CHECK_PARSE_RESULT	QSVHelper/IntelSupport/include/sample_defs.h	55;"	d
MSDK_CHECK_POINTER	QSVHelper/IntelSupport/include/sample_defs.h	58;"	d
MSDK_CHECK_POINTER_NO_RET	QSVHelper/IntelSupport/include/sample_defs.h	59;"	d
MSDK_CHECK_POINTER_SAFE	QSVHelper/IntelSupport/include/sample_defs.h	60;"	d
MSDK_CHECK_RESULT	QSVHelper/IntelSupport/include/sample_defs.h	54;"	d
MSDK_CHECK_RESULT_SAFE	QSVHelper/IntelSupport/include/sample_defs.h	56;"	d
MSDK_DEC_WAIT_INTERVAL	QSVHelper/IntelSupport/include/sample_defs.h	41;"	d
MSDK_ENC_WAIT_INTERVAL	QSVHelper/IntelSupport/include/sample_defs.h	42;"	d
MSDK_IGNORE_MFX_STS	QSVHelper/IntelSupport/include/sample_defs.h	57;"	d
MSDK_INVALID_SURF_IDX	QSVHelper/IntelSupport/include/sample_defs.h	46;"	d
MSDK_MAX	QSVHelper/IntelSupport/include/sample_defs.h	70;"	d
MSDK_MAX_FILENAME_LEN	QSVHelper/IntelSupport/include/sample_defs.h	48;"	d
MSDK_MEMCPY_BITSTREAM	QSVHelper/IntelSupport/include/sample_defs.h	77;"	d
MSDK_MEMCPY_BUF	QSVHelper/IntelSupport/include/sample_defs.h	79;"	d
MSDK_MEMCPY_VAR	QSVHelper/IntelSupport/include/sample_defs.h	81;"	d
MSDK_MIN	QSVHelper/IntelSupport/include/sample_defs.h	71;"	d
MSDK_PRINT_RET_MSG	QSVHelper/IntelSupport/include/sample_defs.h	50;"	d
MSDK_SAFE_DELETE	QSVHelper/IntelSupport/include/sample_defs.h	66;"	d
MSDK_SAFE_DELETE_ARRAY	QSVHelper/IntelSupport/include/sample_defs.h	62;"	d
MSDK_SAFE_RELEASE	QSVHelper/IntelSupport/include/sample_defs.h	63;"	d
MSDK_SAMPLE_VERSION	QSVHelper/IntelSupport/include/sample_defs.h	91;"	d
MSDK_SLEEP	QSVHelper/IntelSupport/include/vm/time_defs.h	17;"	d
MSDK_STRING	QSVHelper/IntelSupport/include/vm/strings_defs.h	22;"	d
MSDK_VPP_WAIT_INTERVAL	QSVHelper/IntelSupport/include/sample_defs.h	43;"	d
MSDK_WAIT_INTERVAL	QSVHelper/IntelSupport/include/sample_defs.h	44;"	d
MSDK_ZERO_MEMORY	QSVHelper/IntelSupport/include/sample_defs.h	69;"	d
MSEncode	libfaac/midside.c	/^void MSEncode(CoderInfo *coderInfo,$/;"	f
MSGF	lame/libmp3lame/util.h	611;"	d
MSInfo	libfaac/channels.h	/^} MSInfo;$/;"	t
MSReconstruct	libfaac/midside.c	/^void MSReconstruct(CoderInfo *coderInfo,$/;"	f
MVPrecision	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16      MVPrecision;$/;"	m
MVSearchWindow	libmfx/include/msdk/include/mfxstructures.h	/^    mfxI16Pair  MVSearchWindow;$/;"	m
MX	librtmp/rtmp.c	4789;"	d	file:
M_INFINITE	OBSApi/Utility/XMath.h	34;"	d
M_INFINITE	OBSApi/Utility/XMath.h	46;"	d
M_PI	OBSApi/Utility/XMath.h	33;"	d
M_PI	OBSApi/Utility/XMath.h	40;"	d
M_PI	lame/mpglib/mpg123.h	50;"	d
M_PI	libfaac/psych.h	30;"	d
M_PI	libfaac/util.h	40;"	d
M_SQRT2	lame/mpglib/mpg123.h	53;"	d
MacDLLMain.c	lame/mac/MacDLLMain.c	1;"	F
MacOS	lame/doc/html/links.html	/^<p><b>&nbsp;&nbsp;<a name="MacOS">MacOS Classic:<\/a><\/b><\/p>$/;"	a
Main	CLRBrowserSourcePlugin/Client/CLRBrowserSourceClient.cs	/^        static int Main(String[] args)$/;"	m	class:CLRBrowserSourceClient.CLRBrowserSourceClient	file:
Main.cpp	Source/Main.cpp	1;"	F
Main.h	Source/Main.h	1;"	F
MainAllocator	OBSApi/Utility/XT.cpp	/^Alloc                  *MainAllocator   = NULL;$/;"	v
MainAudioLoop	Source/OBSCapture.cpp	/^void OBS::MainAudioLoop()$/;"	f	class:OBS
MainAudioThread	Source/OBSCapture.cpp	/^DWORD STDCALL OBS::MainAudioThread(LPVOID lpUnused)$/;"	f	class:OBS
MainCaptureLoop	Source/OBSVideoCapture.cpp	/^void OBS::MainCaptureLoop()$/;"	f	class:OBS
MainCaptureThread	Source/OBSVideoCapture.cpp	/^DWORD STDCALL OBS::MainCaptureThread(LPVOID lpUnused)$/;"	f	class:OBS
Major	libmfx/include/msdk/include/mfxcommon.h	/^        mfxU16  Major;$/;"	m
MakeBufferList	Source/D3D10VertexBuffer.cpp	/^void D3D10VertexBuffer::MakeBufferList(D3D10VertexShader *vShader, List<ID3D10Buffer*> &bufferList, List<UINT> &strides) const$/;"	f	class:D3D10VertexBuffer
MakeFromAxisAngle	OBSApi/Utility/XMath.cpp	/^Quat& Quat::MakeFromAxisAngle(const AxisAngle &aa)$/;"	f	class:Quat
MakeFromDirection	OBSApi/Utility/XMath.cpp	/^Quat& Quat::MakeFromDirection(const Vect &dir)$/;"	f	class:Quat
MakeFromPoints	OBSApi/Utility/XMath.cpp	/^Bounds& Bounds::MakeFromPoints(const List<Vect> &pointList)$/;"	f	class:Bounds
MakeFromQuat	OBSApi/Utility/XMath.cpp	/^AxisAngle& AxisAngle::MakeFromQuat(const Quat &q)$/;"	f	class:AxisAngle
MakeFromRGB	OBSApi/Utility/XMath.h	/^    inline Vect &MakeFromRGB(DWORD dwRGB)$/;"	f	struct:Vect
MakeFromRGBA	OBSApi/Utility/XMath.h	/^    inline Vect4& MakeFromRGBA(DWORD dwRGBA)$/;"	f	struct:Vect4
MakeLower	OBSApi/Utility/XString.h	/^    inline String& MakeLower()                  {if(lpString) slwr(lpString); return *this;}$/;"	f	class:String
MakeUpper	OBSApi/Utility/XString.h	/^    inline String& MakeUpper()                  {if(lpString) supr(lpString); return *this;}$/;"	f	class:String
MakeWindowAssociation	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *MakeWindowAssociation )( $/;"	m	struct:IDXGIFactory2Vtbl
Makefile	lame/ACM/ADbg/Makefile	1;"	F
Makefile	lame/ACM/Makefile	1;"	F
Makefile	lame/ACM/ddk/Makefile	1;"	F
Makefile	lame/ACM/tinyxml/Makefile	1;"	F
Makefile	lame/Dll/Makefile	1;"	F
Makefile	lame/Makefile	1;"	F
Makefile	lame/debian/Makefile	1;"	F
Makefile	lame/doc/Makefile	1;"	F
Makefile	lame/doc/html/Makefile	1;"	F
Makefile	lame/doc/man/Makefile	1;"	F
Makefile	lame/dshow/Makefile	1;"	F
Makefile	lame/frontend/Makefile	1;"	F
Makefile	lame/include/Makefile	1;"	F
Makefile	lame/libmp3lame/Makefile	1;"	F
Makefile	lame/libmp3lame/i386/Makefile	1;"	F
Makefile	lame/libmp3lame/vector/Makefile	1;"	F
Makefile	lame/mac/Makefile	1;"	F
Makefile	lame/macosx/English.lproj/Makefile	1;"	F
Makefile	lame/macosx/LAME.xcodeproj/Makefile	1;"	F
Makefile	lame/macosx/Makefile	1;"	F
Makefile	lame/misc/Makefile	1;"	F
Makefile	lame/mpglib/Makefile	1;"	F
Makefile	lame/vc_solution/Makefile	1;"	F
Map	Source/D3D10Texture.cpp	/^bool D3D10Texture::Map(BYTE *&lpData, UINT &pitch)$/;"	f	class:D3D10Texture
Map	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *Map )( $/;"	m	struct:IDXGISurface2Vtbl
MapDesktopSurface	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *MapDesktopSurface )( $/;"	m	struct:IDXGIOutputDuplicationVtbl
MapFrameToWindowPos	Source/API.cpp	/^    virtual Vect2 MapFrameToWindowPos(Vect2 framePos) const     {return App->MapFrameToWindowPos(framePos);}$/;"	f	class:OBSAPIInterface
MapFrameToWindowPos	Source/WindowStuff.cpp	/^Vect2 OBS::MapFrameToWindowPos(Vect2 framePos)$/;"	f	class:OBS
MapFrameToWindowSize	Source/API.cpp	/^    virtual Vect2 MapFrameToWindowSize(Vect2 frameSize) const   {return App->MapFrameToWindowSize(frameSize);}$/;"	f	class:OBSAPIInterface
MapFrameToWindowSize	Source/WindowStuff.cpp	/^Vect2 OBS::MapFrameToWindowSize(Vect2 frameSize)$/;"	f	class:OBS
MapOpaqueSurface	libmfx/include/msdk/include/mfxplugin++.h	/^    mfxStatus MapOpaqueSurface(mfxU32  num, mfxU32  type, mfxFrameSurface1 **op_surf) {$/;"	f	class:MFXCoreInterface
MapOpaqueSurface	libmfx/include/msdk/include/mfxplugin.h	/^    mfxStatus (MFX_CDECL *MapOpaqueSurface)(mfxHDL pthis, mfxU32  num, mfxU32  type, mfxFrameSurface1 **op_surf);$/;"	m	struct:mfxCoreInterface
MapWindowToFramePos	Source/API.cpp	/^    virtual Vect2 MapWindowToFramePos(Vect2 mousePos) const     {return App->MapWindowToFramePos(mousePos);}$/;"	f	class:OBSAPIInterface
MapWindowToFramePos	Source/WindowStuff.cpp	/^Vect2 OBS::MapWindowToFramePos(Vect2 mousePos)$/;"	f	class:OBS
MapWindowToFrameSize	Source/API.cpp	/^    virtual Vect2 MapWindowToFrameSize(Vect2 windowSize) const  {return App->MapWindowToFrameSize(windowSize);}$/;"	f	class:OBSAPIInterface
MapWindowToFrameSize	Source/WindowStuff.cpp	/^Vect2 OBS::MapWindowToFrameSize(Vect2 windowSize)$/;"	f	class:OBS
Matrix	OBSApi/Utility/XMath.h	/^    inline Matrix()                                 {}$/;"	f	struct:Matrix
Matrix	OBSApi/Utility/XMath.h	/^    inline Matrix(const AxisAngle &aa)              {CreateFromQuat(aa.GetQuat()); T = 0;}$/;"	f	struct:Matrix
Matrix	OBSApi/Utility/XMath.h	/^    inline Matrix(const Euler &e)                   {SetIdentity() *= e;}$/;"	f	struct:Matrix
Matrix	OBSApi/Utility/XMath.h	/^    inline Matrix(const Quat &q)                    {CreateFromQuat(q); T = 0;}$/;"	f	struct:Matrix
Matrix	OBSApi/Utility/XMath.h	/^    inline Matrix(const Vect &a, const Vect &b, const Vect &c, const Vect &o)$/;"	f	struct:Matrix
Matrix	OBSApi/Utility/XMath.h	/^struct BASE_EXPORT Matrix$/;"	s
Matrix3x3Determinant	OBSApi/Utility/XMath.cpp	/^float Matrix3x3Determinant(float *M1)$/;"	f
Matrix4x4Convert	OBSApi/Utility/XMath.cpp	/^void Matrix4x4Convert(Matrix &mat, float *m4x4)$/;"	f
Matrix4x4Convert	OBSApi/Utility/XMath.cpp	/^void Matrix4x4Convert(float *destMatrix, const Matrix &mat)$/;"	f
Matrix4x4Determinant	OBSApi/Utility/XMath.cpp	/^float Matrix4x4Determinant(float *M1)$/;"	f
Matrix4x4Frustum	OBSApi/Utility/XMath.cpp	/^void Matrix4x4Frustum(float *destMatrix, double left, double right, double bottom, double top, double near, double far)$/;"	f
Matrix4x4Identity	OBSApi/Utility/XMath.cpp	/^void Matrix4x4Identity(float *destMatrix)$/;"	f
Matrix4x4Inverse	OBSApi/Utility/XMath.cpp	/^BOOL Matrix4x4Inverse(float *destMatrix, float *M1)$/;"	f
Matrix4x4Multiply	OBSApi/Utility/XMath.cpp	/^void  Matrix4x4Multiply(float *destMatrix, float *M1, float *M2)$/;"	f
Matrix4x4Ortho	OBSApi/Utility/XMath.cpp	/^void Matrix4x4Ortho(float *destMatrix, double left, double right, double bottom, double top, double near, double far)$/;"	f
Matrix4x4Perspective	OBSApi/Utility/XMath.cpp	/^void Matrix4x4Perspective(float *destMatrix, float angle, float aspect, float near, float far)$/;"	f
Matrix4x4SubMatrix	OBSApi/Utility/XMath.cpp	/^void Matrix4x4SubMatrix(float *destMatrix, float *M1, int i, int j)$/;"	f
Matrix4x4TransformVect	OBSApi/Utility/XMath.cpp	/^void  Matrix4x4TransformVect(Vect4 &out, float *M1, const Vect4 &vect)$/;"	f
Matrix4x4Transpose	OBSApi/Utility/XMath.cpp	/^void Matrix4x4Transpose(float *destMatrix, float *srcMatrix)$/;"	f
MatrixCoefficients	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16          MatrixCoefficients;$/;"	m
MatrixGet	OBSApi/GraphicsSystem.cpp	/^inline void  GraphicsSystem::MatrixGet(Matrix &m)$/;"	f	class:GraphicsSystem
MatrixGet	OBSApi/GraphicsSystem.cpp	/^inline void  GraphicsSystem::MatrixGet(Vect &v, Quat &q)$/;"	f	class:GraphicsSystem
MatrixGet	OBSApi/GraphicsSystem.h	/^inline void  MatrixGet(Matrix &m)                               {GS->MatrixGet(m);}$/;"	f
MatrixIdentity	OBSApi/GraphicsSystem.cpp	/^inline void  GraphicsSystem::MatrixIdentity()$/;"	f	class:GraphicsSystem
MatrixIdentity	OBSApi/GraphicsSystem.h	/^inline void  MatrixIdentity()                                   {GS->MatrixIdentity();}$/;"	f
MatrixMultiply	OBSApi/GraphicsSystem.cpp	/^inline void  GraphicsSystem::MatrixMultiply(const Matrix &m)$/;"	f	class:GraphicsSystem
MatrixMultiply	OBSApi/GraphicsSystem.h	/^inline void  MatrixMultiply(const Matrix &m)                    {GS->MatrixMultiply(m);}$/;"	f
MatrixPop	OBSApi/GraphicsSystem.cpp	/^inline void  GraphicsSystem::MatrixPop()$/;"	f	class:GraphicsSystem
MatrixPop	OBSApi/GraphicsSystem.h	/^inline void  MatrixPop()                                        {GS->MatrixPop();}$/;"	f
MatrixPush	OBSApi/GraphicsSystem.cpp	/^inline void  GraphicsSystem::MatrixPush()$/;"	f	class:GraphicsSystem
MatrixPush	OBSApi/GraphicsSystem.h	/^inline void  MatrixPush()                                       {GS->MatrixPush();}$/;"	f
MatrixRotate	OBSApi/GraphicsSystem.cpp	/^inline void  GraphicsSystem::MatrixRotate(const AxisAngle &aa)$/;"	f	class:GraphicsSystem
MatrixRotate	OBSApi/GraphicsSystem.cpp	/^inline void  GraphicsSystem::MatrixRotate(const Quat &q)$/;"	f	class:GraphicsSystem
MatrixRotate	OBSApi/GraphicsSystem.cpp	/^inline void  GraphicsSystem::MatrixRotate(float x, float y, float z, float a)$/;"	f	class:GraphicsSystem
MatrixRotate	OBSApi/GraphicsSystem.h	/^inline void  MatrixRotate(const AxisAngle &aa)                  {GS->MatrixRotate(aa);}$/;"	f
MatrixRotate	OBSApi/GraphicsSystem.h	/^inline void  MatrixRotate(const Quat &q)                        {GS->MatrixRotate(q);}$/;"	f
MatrixRotate	OBSApi/GraphicsSystem.h	/^inline void  MatrixRotate(float x, float y, float z, float a)   {GS->MatrixRotate(x, y, z, a);}  \/\/axis angle$/;"	f
MatrixScale	OBSApi/GraphicsSystem.cpp	/^inline void  GraphicsSystem::MatrixScale(const Vect2 &scale)$/;"	f	class:GraphicsSystem
MatrixScale	OBSApi/GraphicsSystem.cpp	/^inline void  GraphicsSystem::MatrixScale(float x, float y)$/;"	f	class:GraphicsSystem
MatrixScale	OBSApi/GraphicsSystem.h	/^inline void  MatrixScale(const Vect2 &scale)                    {GS->MatrixScale(scale);}$/;"	f
MatrixScale	OBSApi/GraphicsSystem.h	/^inline void  MatrixScale(float x, float y)                      {GS->MatrixScale(x, y);}$/;"	f
MatrixSet	OBSApi/GraphicsSystem.cpp	/^inline void  GraphicsSystem::MatrixSet(const Matrix &m)$/;"	f	class:GraphicsSystem
MatrixSet	OBSApi/GraphicsSystem.h	/^inline void  MatrixSet(const Matrix &m)                         {GS->MatrixSet(m);}$/;"	f
MatrixStack	OBSApi/GraphicsSystem.h	/^    List<Matrix> MatrixStack;$/;"	m	class:GraphicsSystem
MatrixTranslate	OBSApi/GraphicsSystem.cpp	/^inline void  GraphicsSystem::MatrixTranslate(const Vect2 &pos)$/;"	f	class:GraphicsSystem
MatrixTranslate	OBSApi/GraphicsSystem.cpp	/^inline void  GraphicsSystem::MatrixTranslate(float x, float y)$/;"	f	class:GraphicsSystem
MatrixTranslate	OBSApi/GraphicsSystem.h	/^inline void  MatrixTranslate(const Vect2 &pos)                  {GS->MatrixTranslate(pos);}$/;"	f
MatrixTranslate	OBSApi/GraphicsSystem.h	/^inline void  MatrixTranslate(float x, float y)                  {GS->MatrixTranslate(x, y);}$/;"	f
MatrixTranspose	OBSApi/GraphicsSystem.cpp	/^inline void  GraphicsSystem::MatrixTranspose()$/;"	f	class:GraphicsSystem
MatrixTranspose	OBSApi/GraphicsSystem.h	/^inline void  MatrixTranspose()                                  {GS->MatrixTranspose();}$/;"	f
Max	OBSApi/Utility/XMath.h	/^    Vect Max;$/;"	m	struct:Bounds
Max	OBSApi/Utility/XMath.h	/^    static inline Vect Max(const Vect &v,  float val)       {Vect out(_mm_max_ps(v.m, _mm_set1_ps(val))); out.w = 0.0f; return out;}$/;"	f	struct:Vect
Max	OBSApi/Utility/XMath.h	/^    static inline Vect Max(const Vect &v,  float val)       {return Vect(MAX(v.x, val),   MAX(v.y, val),   MAX(v.z, val));}$/;"	f	struct:Vect
Max	OBSApi/Utility/XMath.h	/^    static inline Vect Max(const Vect &v1, const Vect &v2)  {Vect out(_mm_max_ps(v1.m, v2.m)); out.w = 0.0f; return out;}$/;"	f	struct:Vect
Max	OBSApi/Utility/XMath.h	/^    static inline Vect Max(const Vect &v1, const Vect &v2)  {return Vect(MAX(v1.x, v2.x), MAX(v1.y, v2.y), MAX(v1.z, v2.z));}$/;"	f	struct:Vect
Max	OBSApi/Utility/XMath.h	/^    static inline Vect2 Max(const Vect2 &v,  float val)       {return Vect2(MAX(v.x, val),   MAX(v.y, val));}$/;"	f	struct:Vect2
Max	OBSApi/Utility/XMath.h	/^    static inline Vect2 Max(const Vect2 &v1, const Vect2 &v2) {return Vect2(MAX(v1.x, v2.x), MAX(v1.y, v2.y));}$/;"	f	struct:Vect2
Max	lame/Dll/BladeMP3EncDLL.c	35;"	d	file:
Max	lame/libmp3lame/presets.c	45;"	d	file:
Max	lame/libmp3lame/util.c	329;"	d	file:
Max	lame/libmp3lame/util.h	92;"	d
MaxActiveLights	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	/^    DWORD   MaxActiveLights;$/;"	m	struct:_D3DCAPS8
MaxAnisotropy	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	/^    DWORD   MaxAnisotropy;$/;"	m	struct:_D3DCAPS8
MaxBitrate	libfaac/util.c	/^unsigned int MaxBitrate(unsigned long sampleRate)$/;"	f
MaxBitresSize	libfaac/util.c	/^unsigned int MaxBitresSize(unsigned long bitRate, unsigned long sampleRate)$/;"	f
MaxDecFrameBuffering	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16      MaxDecFrameBuffering;$/;"	m
MaxDistFrom	OBSApi/Utility/XMath.h	/^    inline float MaxDistFrom(const Plane &p) const$/;"	f	struct:Bounds
MaxFrameSize	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU32      MaxFrameSize;$/;"	m
MaxKbps	libmfx/include/msdk/include/mfxstructures.h	/^                mfxU16  MaxKbps;$/;"	m
MaxLength	libmfx/include/msdk/include/mfxastructures.h	/^    mfxU32  MaxLength;$/;"	m
MaxLength	libmfx/include/msdk/include/mfxcommon.h	/^    mfxU32  MaxLength;$/;"	m
MaxPixelShaderValue	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	/^    float   MaxPixelShaderValue;        \/\/ max value of pixel shader arithmetic component$/;"	m	struct:_D3DCAPS8
MaxPointSize	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	/^    float   MaxPointSize;$/;"	m	struct:_D3DCAPS8
MaxPredSfb	libfaac/util.c	/^const int MaxPredSfb[] = { 33, 33, 38, 40, 40, 40, 41, 41, 37, 37, 37, 34, 0 };$/;"	v
MaxPrimitiveCount	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	/^    DWORD   MaxPrimitiveCount;          \/\/ max number of primitives per DrawPrimitive call$/;"	m	struct:_D3DCAPS8
MaxQPB	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU8       MaxQPB;                 \/* 1..51, 0 = default *\/$/;"	m
MaxQPI	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU8       MaxQPI;                 \/* 1..51, 0 = default *\/$/;"	m
MaxQPP	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU8       MaxQPP;                 \/* 1..51, 0 = default *\/$/;"	m
MaxSimultaneousTextures	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	/^    DWORD   MaxSimultaneousTextures;$/;"	m	struct:_D3DCAPS8
MaxSliceSize	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU32      MaxSliceSize;$/;"	m
MaxStreamStride	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	/^    DWORD   MaxStreamStride;            \/\/ max stride for SetStreamSource$/;"	m	struct:_D3DCAPS8
MaxStreams	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	/^    DWORD   MaxStreams;$/;"	m	struct:_D3DCAPS8
MaxTextureAspectRatio	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	/^    DWORD   MaxTextureAspectRatio;$/;"	m	struct:_D3DCAPS8
MaxTextureBlendStages	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	/^    DWORD   MaxTextureBlendStages;$/;"	m	struct:_D3DCAPS8
MaxTextureHeight	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	/^    DWORD   MaxTextureWidth, MaxTextureHeight;$/;"	m	struct:_D3DCAPS8
MaxTextureRepeat	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	/^    DWORD   MaxTextureRepeat;$/;"	m	struct:_D3DCAPS8
MaxTextureWidth	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	/^    DWORD   MaxTextureWidth, MaxTextureHeight;$/;"	m	struct:_D3DCAPS8
MaxThreadNum	libmfx/include/msdk/include/mfxplugin.h	/^    mfxU32  MaxThreadNum;$/;"	m	struct:mfxPluginParam
MaxUserClipPlanes	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	/^    DWORD   MaxUserClipPlanes;$/;"	m	struct:_D3DCAPS8
MaxVertexBlendMatrices	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	/^    DWORD   MaxVertexBlendMatrices;$/;"	m	struct:_D3DCAPS8
MaxVertexBlendMatrixIndex	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	/^    DWORD   MaxVertexBlendMatrixIndex;$/;"	m	struct:_D3DCAPS8
MaxVertexIndex	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	/^    DWORD   MaxVertexIndex;$/;"	m	struct:_D3DCAPS8
MaxVertexShaderConst	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	/^    DWORD   MaxVertexShaderConst;       \/\/ number of vertex shader constant registers$/;"	m	struct:_D3DCAPS8
MaxVertexW	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	/^    float   MaxVertexW;$/;"	m	struct:_D3DCAPS8
MaxVolumeExtent	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	/^    DWORD   MaxVolumeExtent;$/;"	m	struct:_D3DCAPS8
MaxZ	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    float       MaxZ;$/;"	m	struct:_D3DVIEWPORT8
MediaInfoStuff.cpp	DShowPlugin/MediaInfoStuff.cpp	1;"	F
MediaInfoStuff.h	DShowPlugin/MediaInfoStuff.h	1;"	F
MediaOutputInfo	DShowPlugin/MediaInfoStuff.h	/^struct MediaOutputInfo$/;"	s
MemId	libmfx/include/msdk/include/mfxstructures.h	/^    mfxMemId    MemId;$/;"	m
MemInfo	OBSApi/Utility/FastAlloc.cpp	/^struct MemInfo$/;"	s	file:
MemInfoList	OBSApi/Utility/FastAlloc.cpp	/^MemInfo MemInfoList[12],*SizeToMemInfo[0x8001];$/;"	v
MemUnlocker	Source/WindowStuff.cpp	/^    struct MemUnlocker$/;"	s	file:
MemoryCapture	GraphicsCapture/MemoryCapture.h	/^class MemoryCapture : public GraphicsCaptureMethod$/;"	c
MemoryCapture.cpp	GraphicsCapture/MemoryCapture.cpp	1;"	F
MemoryCapture.h	GraphicsCapture/MemoryCapture.h	1;"	F
MemoryCopyData	GraphicsCapture/GlobalCaptureStuff.h	/^struct MemoryCopyData$/;"	s
Merge	OBSApi/Utility/XMath.h	/^    inline Bounds& Merge(const Bounds &bounds)$/;"	f	struct:Bounds
MergePoint	OBSApi/Utility/XMath.h	/^    inline Bounds& MergePoint(const Vect &point)$/;"	f	struct:Bounds
MergeProfileInfo	OBSApi/Utility/Profiler.cpp	/^    static void MergeProfileInfo(ProfileNodeInfo &info)$/;"	f	struct:ProfileNodeInfo
MergeProfileInfo	OBSApi/Utility/Profiler.cpp	/^    void MergeProfileInfo(ProfileNodeInfo *info, DWORD rootLastCall, DWORD updatedLastCall)$/;"	f	struct:ProfileNodeInfo
MergeWith	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public void MergeWith(AbstractSettings secondary)$/;"	m	class:Shared.AbstractSettings
Message	lame/misc/abx.c	/^void Message ( const char* s, size_t index, long freq, size_t start, size_t stop )$/;"	f
MicroToMS	OBSApi/Utility/Profiler.cpp	/^inline double MicroToMS(DWORD microseconds)$/;"	f
Mid	OBSApi/Utility/XString.cpp	/^String  String::Mid(UINT iStart, UINT iEnd)$/;"	f	class:String
MimeTypeManager	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/MimeTypeManager.cs	/^        static MimeTypeManager(){$/;"	m	class:RemoteBrowser.MimeTypeManager	file:
MimeTypeManager	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/MimeTypeManager.cs	/^    static class MimeTypeManager$/;"	c	namespace:RemoteBrowser
MimeTypeManager.cs	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/MimeTypeManager.cs	1;"	F
MimeTypes	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/MimeTypeManager.cs	/^        public static Dictionary<String, String> MimeTypes { get; private set; }$/;"	p	class:RemoteBrowser.MimeTypeManager
Min	OBSApi/Utility/XMath.h	/^    Vect Min;$/;"	m	struct:Bounds
Min	OBSApi/Utility/XMath.h	/^    static inline Vect Min(const Vect &v,  float val)       {Vect out(_mm_min_ps(v.m, _mm_set1_ps(val))); out.w = 0.0f; return out;}$/;"	f	struct:Vect
Min	OBSApi/Utility/XMath.h	/^    static inline Vect Min(const Vect &v,  float val)       {return Vect(MIN(v.x, val),   MIN(v.y, val),   MIN(v.z, val));}$/;"	f	struct:Vect
Min	OBSApi/Utility/XMath.h	/^    static inline Vect Min(const Vect &v1, const Vect &v2)  {Vect out(_mm_min_ps(v1.m, v2.m)); out.w = 0.0f; return out;}$/;"	f	struct:Vect
Min	OBSApi/Utility/XMath.h	/^    static inline Vect Min(const Vect &v1, const Vect &v2)  {return Vect(MIN(v1.x, v2.x), MIN(v1.y, v2.y), MIN(v1.z, v2.z));}$/;"	f	struct:Vect
Min	OBSApi/Utility/XMath.h	/^    static inline Vect2 Min(const Vect2 &v,  float val)       {return Vect2(MIN(v.x, val),   MIN(v.y, val));}$/;"	f	struct:Vect2
Min	OBSApi/Utility/XMath.h	/^    static inline Vect2 Min(const Vect2 &v1, const Vect2 &v2) {return Vect2(MIN(v1.x, v2.x), MIN(v1.y, v2.y));}$/;"	f	struct:Vect2
Min	lame/Dll/BladeMP3EncDLL.c	34;"	d	file:
Min	lame/libmp3lame/presets.c	44;"	d	file:
Min	lame/libmp3lame/util.c	326;"	d	file:
Min	lame/libmp3lame/util.h	91;"	d
MinBitrate	libfaac/util.c	/^unsigned int MinBitrate()$/;"	f
MinDistFrom	OBSApi/Utility/XMath.cpp	/^float Bounds::MinDistFrom(const Plane &p) const$/;"	f	class:Bounds
MinHook	minhook/src/buffer.cpp	/^namespace MinHook { namespace$/;"	n	file:
MinHook	minhook/src/buffer.cpp	/^namespace MinHook$/;"	n	file:
MinHook	minhook/src/buffer.h	/^namespace MinHook$/;"	n
MinHook	minhook/src/hook.cpp	/^namespace MinHook { namespace$/;"	n	file:
MinHook	minhook/src/hook.cpp	/^namespace MinHook$/;"	n	file:
MinHook	minhook/src/hook.h	/^namespace MinHook$/;"	n
MinHook	minhook/src/thread.cpp	/^namespace MinHook { namespace$/;"	n	file:
MinHook	minhook/src/thread.cpp	/^namespace MinHook$/;"	n	file:
MinHook	minhook/src/thread.h	/^namespace MinHook$/;"	n
MinHook	minhook/src/trampoline.cpp	/^namespace MinHook { namespace$/;"	n	file:
MinHook	minhook/src/trampoline.cpp	/^namespace MinHook$/;"	n	file:
MinHook	minhook/src/trampoline.h	/^namespace MinHook$/;"	n
MinHook.h	minhook/include/MinHook.h	1;"	F
MinQPB	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU8       MinQPB;                 \/* 1..51, 0 = default *\/$/;"	m
MinQPI	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU8       MinQPI;                 \/* 1..51, 0 = default *\/$/;"	m
MinQPP	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU8       MinQPP;                 \/* 1..51, 0 = default *\/$/;"	m
MinZ	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    float       MinZ;         \/* Min\/max of clip Volume *\/$/;"	m	struct:_D3DVIEWPORT8
MinimumFontSize	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public int MinimumFontSize { get; set; }$/;"	p	class:Shared.BrowserInstanceSettings
MinimumLogicalFontSize	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public int MinimumLogicalFontSize { get; set; }$/;"	p	class:Shared.BrowserInstanceSettings
Minor	libmfx/include/msdk/include/mfxcommon.h	/^        mfxU16  Minor;$/;"	m
MinutesFlag	libmfx/include/msdk/include/mfxstructures.h	/^      mfxU16    MinutesFlag;$/;"	m
MinutesValue	libmfx/include/msdk/include/mfxstructures.h	/^      mfxU16    MinutesValue;$/;"	m
MirrorByPlane	OBSApi/Utility/XMath.h	/^    inline Matrix& MirrorByPlane(const Plane &p)$/;"	f	struct:Matrix
MirrorByPlane	OBSApi/Utility/XMath.h	/^inline void Vect::MirrorByPlane(const Plane& p)$/;"	f	class:Vect
MirrorByVector	OBSApi/Utility/XMath.h	/^    inline Matrix& MirrorByVector(const Vect &v)$/;"	f	struct:Matrix
MirrorByVector	OBSApi/Utility/XMath.h	/^inline void Vect::MirrorByVector(const Vect& v)$/;"	f	class:Vect
MiscIDs	lame/libmp3lame/id3tag.c	/^typedef enum MiscIDs { ID_TXXX = FRAME_ID('T', 'X', 'X', 'X')$/;"	g	file:
MiscIDs	lame/libmp3lame/id3tag.c	/^} MiscIDs;$/;"	t	file:
MixAudio	OBSApi/OBSApi.cpp	/^void MixAudio(float *bufferDest, float *bufferSrc, UINT totalFloats, bool bForceMono)$/;"	f
Mode	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16  Mode;$/;"	m
ModeDesc	extras/dxgi1_2.h	/^    DXGI_MODE_DESC ModeDesc;$/;"	m	struct:DXGI_OUTDUPL_DESC
ModifiedPos	OBSApi/Utility/XMath.h	/^    inline Bounds ModifiedPos(const Vect &pos) const$/;"	f	struct:Bounds
MonitorInfo	Source/OBS.h	/^    inline MonitorInfo() {zero(this, sizeof(MonitorInfo));}$/;"	f	struct:MonitorInfo
MonitorInfo	Source/OBS.h	/^    inline MonitorInfo(HMONITOR hMonitor, RECT *lpRect)$/;"	f	struct:MonitorInfo
MonitorInfo	Source/OBS.h	/^struct MonitorInfo$/;"	s
MonitorInfoEnumProc	Source/OBS.cpp	/^BOOL CALLBACK MonitorInfoEnumProc(HMONITOR hMonitor, HDC hdcMonitor, LPRECT lprcMonitor, List<MonitorInfo> &monitors)$/;"	f
MonitorThread	OBSApi/Utility/Profiler.cpp	/^void ProfilerNode::MonitorThread(HANDLE thread_)$/;"	f	class:ProfilerNode
MoreVariables	OBSApi/AudioSource.cpp	60;"	d	file:
MoveDown	CLRHostPlugin/CLRHostInterop/XElement.cpp	/^void CLROBS::XElement::MoveDown() { element->MoveDown(); }$/;"	f	class:CLROBS::XElement
MoveDown	OBSApi/Scene.cpp	/^void SceneItem::MoveDown()$/;"	f	class:SceneItem
MoveDown	OBSApi/Utility/XConfig.cpp	/^void XElement::MoveDown()$/;"	f	class:XElement
MoveItem	OBSApi/Utility/Template.h	/^    inline void MoveItem(UINT valFrom, UINT valTo)$/;"	f	class:CircularList
MoveItem	OBSApi/Utility/Template.h	/^    inline void MoveItem(int id, int newID)$/;"	f	class:List
MoveItemsByPixels	Source/WindowStuff.cpp	/^void OBS::MoveItemsByPixels(int dx, int dy)$/;"	f	class:OBS
MoveItemsToEdge	Source/WindowStuff.cpp	/^void OBS::MoveItemsToEdge(int horizontal, int vertical)$/;"	f	class:OBS
MoveSourcesDown	Source/WindowStuff.cpp	/^void OBS::MoveSourcesDown()$/;"	f	class:OBS
MoveSourcesToBottom	Source/WindowStuff.cpp	/^void OBS::MoveSourcesToBottom()$/;"	f	class:OBS
MoveSourcesToTop	Source/WindowStuff.cpp	/^void OBS::MoveSourcesToTop()$/;"	f	class:OBS
MoveSourcesUp	Source/WindowStuff.cpp	/^void OBS::MoveSourcesUp()$/;"	f	class:OBS
MoveToBottom	CLRHostPlugin/CLRHostInterop/XElement.cpp	/^void CLROBS::XElement::MoveToBottom() { element->MoveToBottom(); }$/;"	f	class:CLROBS::XElement
MoveToBottom	OBSApi/Scene.cpp	/^void SceneItem::MoveToBottom()$/;"	f	class:SceneItem
MoveToBottom	OBSApi/Utility/XConfig.cpp	/^void XElement::MoveToBottom()$/;"	f	class:XElement
MoveToEnd	OBSApi/Utility/Template.h	/^    inline void MoveToEnd(int id)$/;"	f	class:List
MoveToFront	OBSApi/Utility/Template.h	/^    inline void MoveToFront(int id)$/;"	f	class:List
MoveToTop	CLRHostPlugin/CLRHostInterop/XElement.cpp	/^void CLROBS::XElement::MoveToTop() { element->MoveToTop(); }$/;"	f	class:CLROBS::XElement
MoveToTop	OBSApi/Scene.cpp	/^void SceneItem::MoveToTop()$/;"	f	class:SceneItem
MoveToTop	OBSApi/Utility/XConfig.cpp	/^void XElement::MoveToTop()$/;"	f	class:XElement
MoveUp	CLRHostPlugin/CLRHostInterop/XElement.cpp	/^void CLROBS::XElement::MoveUp() { element->MoveUp(); }$/;"	f	class:CLROBS::XElement
MoveUp	OBSApi/Scene.cpp	/^void SceneItem::MoveUp()$/;"	f	class:SceneItem
MoveUp	OBSApi/Utility/XConfig.cpp	/^void XElement::MoveUp()$/;"	f	class:XElement
MoveWebcamToEdge	Source/OBS.cpp	/^void OBS::MoveWebcamToEdge(int horizontal, int vertical)$/;"	f	class:OBS
Mpegac.cpp	lame/dshow/Mpegac.cpp	1;"	F
Mpegac.h	lame/dshow/Mpegac.h	1;"	F
MsgClicked	NoiseGate/NoiseGate.cpp	/^INT_PTR NoiseGateSettings::MsgClicked(int controlId, int code, HWND controlHwnd)$/;"	f	class:NoiseGateSettings
MsgClicked	scenesw/SceneSwitcherSettings.cpp	/^INT_PTR SceneSwitcherSettings::MsgClicked(int controlId, int code, HWND controlHwnd)$/;"	f	class:SceneSwitcherSettings
MsgDestroy	NoiseGate/NoiseGate.cpp	/^void NoiseGateSettings::MsgDestroy()$/;"	f	class:NoiseGateSettings
MsgInitDialog	NoiseGate/NoiseGate.cpp	/^void NoiseGateSettings::MsgInitDialog()$/;"	f	class:NoiseGateSettings
MsgInitDialog	scenesw/SceneSwitcherSettings.cpp	/^void SceneSwitcherSettings::MsgInitDialog()$/;"	f	class:SceneSwitcherSettings
MsgScroll	NoiseGate/NoiseGate.cpp	/^INT_PTR NoiseGateSettings::MsgScroll(bool vertical, WPARAM wParam, LPARAM lParam)$/;"	f	class:NoiseGateSettings
MsgTimer	NoiseGate/NoiseGate.cpp	/^INT_PTR NoiseGateSettings::MsgTimer(int timerId)$/;"	f	class:NoiseGateSettings
MultiSampleType	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DMULTISAMPLE_TYPE MultiSampleType;$/;"	m	struct:_D3DPRESENT_PARAMETERS_
MultiSampleType	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DMULTISAMPLE_TYPE MultiSampleType;$/;"	m	struct:_D3DSURFACE_DESC
MultiThreadedMessageLoop	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public bool MultiThreadedMessageLoop { get; set; }$/;"	p	class:Shared.BrowserRuntimeSettings
Multiplatform	lame/doc/html/links.html	/^<p><b>&nbsp;&nbsp;<a name="Multiplatform">Multiplatform:<\/a><\/b><\/p>$/;"	a
Multiply	OBSApi/Utility/XMath.h	/^    inline Matrix& Multiply(const Matrix &m)$/;"	f	struct:Matrix
MultiplyAudioBuffer	OBSApi/AudioSource.cpp	/^void MultiplyAudioBuffer(float *buffer, int totalFloats, float mulVal)$/;"	f
MuteDesktopHotkey	Source/OBSHotkeyHandlers.cpp	/^void STDCALL OBS::MuteDesktopHotkey(DWORD hotkey, UPARAM param, bool bDown)$/;"	f	class:OBS
MuteMicHotkey	Source/OBSHotkeyHandlers.cpp	/^void STDCALL OBS::MuteMicHotkey(DWORD hotkey, UPARAM param, bool bDown)$/;"	f	class:OBS
MutexDeleter	OBSApi/Utility/RAIIHelpers.h	/^struct MutexDeleter$/;"	s
NAL_AUD	x264/x264.h	/^    NAL_AUD         = 9,$/;"	e	enum:nal_unit_type_e
NAL_FILLER	x264/x264.h	/^    NAL_FILLER      = 12,$/;"	e	enum:nal_unit_type_e
NAL_PPS	x264/x264.h	/^    NAL_PPS         = 8,$/;"	e	enum:nal_unit_type_e
NAL_PRIORITY_DISPOSABLE	x264/x264.h	/^    NAL_PRIORITY_DISPOSABLE = 0,$/;"	e	enum:nal_priority_e
NAL_PRIORITY_HIGH	x264/x264.h	/^    NAL_PRIORITY_HIGH       = 2,$/;"	e	enum:nal_priority_e
NAL_PRIORITY_HIGHEST	x264/x264.h	/^    NAL_PRIORITY_HIGHEST    = 3,$/;"	e	enum:nal_priority_e
NAL_PRIORITY_LOW	x264/x264.h	/^    NAL_PRIORITY_LOW        = 1,$/;"	e	enum:nal_priority_e
NAL_SEI	x264/x264.h	/^    NAL_SEI         = 6,    \/* ref_idc == 0 *\/$/;"	e	enum:nal_unit_type_e
NAL_SLICE	x264/x264.h	/^    NAL_SLICE       = 1,$/;"	e	enum:nal_unit_type_e
NAL_SLICE_DPA	x264/x264.h	/^    NAL_SLICE_DPA   = 2,$/;"	e	enum:nal_unit_type_e
NAL_SLICE_DPB	x264/x264.h	/^    NAL_SLICE_DPB   = 3,$/;"	e	enum:nal_unit_type_e
NAL_SLICE_DPC	x264/x264.h	/^    NAL_SLICE_DPC   = 4,$/;"	e	enum:nal_unit_type_e
NAL_SLICE_IDR	x264/x264.h	/^    NAL_SLICE_IDR   = 5,    \/* ref_idc != 0 *\/$/;"	e	enum:nal_unit_type_e
NAL_SPS	x264/x264.h	/^    NAL_SPS         = 7,$/;"	e	enum:nal_unit_type_e
NAL_UNKNOWN	x264/x264.h	/^    NAL_UNKNOWN     = 0,$/;"	e	enum:nal_unit_type_e
NASM	lame/ACM/ADbg/Makefile	/^NASM = no$/;"	m
NASM	lame/ACM/Makefile	/^NASM = no$/;"	m
NASM	lame/ACM/ddk/Makefile	/^NASM = no$/;"	m
NASM	lame/ACM/tinyxml/Makefile	/^NASM = no$/;"	m
NASM	lame/Dll/Makefile	/^NASM = no$/;"	m
NASM	lame/Makefile	/^NASM = no$/;"	m
NASM	lame/debian/Makefile	/^NASM = no$/;"	m
NASM	lame/doc/Makefile	/^NASM = no$/;"	m
NASM	lame/doc/html/Makefile	/^NASM = no$/;"	m
NASM	lame/doc/man/Makefile	/^NASM = no$/;"	m
NASM	lame/dshow/Makefile	/^NASM = no$/;"	m
NASM	lame/frontend/Makefile	/^NASM = no$/;"	m
NASM	lame/include/Makefile	/^NASM = no$/;"	m
NASM	lame/libmp3lame/Makefile	/^NASM = no$/;"	m
NASM	lame/libmp3lame/i386/Makefile	/^NASM = no$/;"	m
NASM	lame/libmp3lame/i386/nasm.h	/^;	1999\/11\/07 pushf, popf ��NASM�ΥХ��б�$/;"	v
NASM	lame/libmp3lame/vector/Makefile	/^NASM = no$/;"	m
NASM	lame/mac/Makefile	/^NASM = no$/;"	m
NASM	lame/macosx/English.lproj/Makefile	/^NASM = no$/;"	m
NASM	lame/macosx/LAME.xcodeproj/Makefile	/^NASM = no$/;"	m
NASM	lame/macosx/Makefile	/^NASM = no$/;"	m
NASM	lame/misc/Makefile	/^NASM = no$/;"	m
NASM	lame/mpglib/Makefile	/^NASM = no$/;"	m
NASM	lame/vc_solution/Makefile	/^NASM = no$/;"	m
NASMFLAGS	lame/libmp3lame/i386/Makefile	/^NASMFLAGS = -f win32 -DWIN32 -i $(top_srcdir)\/libmp3lame\/no\/$/;"	m
NASM_FORMAT	lame/ACM/ADbg/Makefile	/^NASM_FORMAT = -f win32 -DWIN32$/;"	m
NASM_FORMAT	lame/ACM/Makefile	/^NASM_FORMAT = -f win32 -DWIN32$/;"	m
NASM_FORMAT	lame/ACM/ddk/Makefile	/^NASM_FORMAT = -f win32 -DWIN32$/;"	m
NASM_FORMAT	lame/ACM/tinyxml/Makefile	/^NASM_FORMAT = -f win32 -DWIN32$/;"	m
NASM_FORMAT	lame/Dll/Makefile	/^NASM_FORMAT = -f win32 -DWIN32$/;"	m
NASM_FORMAT	lame/Makefile	/^NASM_FORMAT = -f win64 -DWIN64$/;"	m
NASM_FORMAT	lame/debian/Makefile	/^NASM_FORMAT = -f win32 -DWIN32$/;"	m
NASM_FORMAT	lame/doc/Makefile	/^NASM_FORMAT = -f win32 -DWIN32$/;"	m
NASM_FORMAT	lame/doc/html/Makefile	/^NASM_FORMAT = -f win32 -DWIN32$/;"	m
NASM_FORMAT	lame/doc/man/Makefile	/^NASM_FORMAT = -f win32 -DWIN32$/;"	m
NASM_FORMAT	lame/dshow/Makefile	/^NASM_FORMAT = -f win32 -DWIN32$/;"	m
NASM_FORMAT	lame/frontend/Makefile	/^NASM_FORMAT = -f win32 -DWIN32$/;"	m
NASM_FORMAT	lame/include/Makefile	/^NASM_FORMAT = -f win32 -DWIN32$/;"	m
NASM_FORMAT	lame/libmp3lame/Makefile	/^NASM_FORMAT = -f win64 -DWIN64$/;"	m
NASM_FORMAT	lame/libmp3lame/i386/Makefile	/^NASM_FORMAT = -f win64 -DWIN64$/;"	m
NASM_FORMAT	lame/libmp3lame/vector/Makefile	/^NASM_FORMAT = -f win32 -DWIN32$/;"	m
NASM_FORMAT	lame/mac/Makefile	/^NASM_FORMAT = -f win32 -DWIN32$/;"	m
NASM_FORMAT	lame/macosx/English.lproj/Makefile	/^NASM_FORMAT = -f win32 -DWIN32$/;"	m
NASM_FORMAT	lame/macosx/LAME.xcodeproj/Makefile	/^NASM_FORMAT = -f win32 -DWIN32$/;"	m
NASM_FORMAT	lame/macosx/Makefile	/^NASM_FORMAT = -f win32 -DWIN32$/;"	m
NASM_FORMAT	lame/misc/Makefile	/^NASM_FORMAT = -f win32 -DWIN32$/;"	m
NASM_FORMAT	lame/mpglib/Makefile	/^NASM_FORMAT = -f win32 -DWIN32$/;"	m
NASM_FORMAT	lame/vc_solution/Makefile	/^NASM_FORMAT = -f win32 -DWIN32$/;"	m
NDEBUG	lame/libmp3lame/machine.h	28;"	d
NEAR_SILENT	DShowPlugin/DeviceSource.cpp	44;"	d	file:
NEAR_SILENTf	DShowPlugin/DeviceSource.cpp	45;"	d	file:
NEC_OFFSET_AMP	libfaac/bitstream.h	88;"	d
NEQ	lame/libmp3lame/machine.h	175;"	d
NFLAT_LS	libfaac/filtbank.h	32;"	d
NFLAT_LS	libfaac/filtbank.h	34;"	d
NFrames	libmfx/include/msdk/include/mfxstructures.h	/^      mfxU16    NFrames;$/;"	m
NL	lame/libmp3lame/newmdct.c	231;"	d	file:
NM	lame/ACM/ADbg/Makefile	/^NM = \/mingw\/bin\/nm$/;"	m
NM	lame/ACM/Makefile	/^NM = \/mingw\/bin\/nm$/;"	m
NM	lame/ACM/ddk/Makefile	/^NM = \/mingw\/bin\/nm$/;"	m
NM	lame/ACM/tinyxml/Makefile	/^NM = \/mingw\/bin\/nm$/;"	m
NM	lame/Dll/Makefile	/^NM = \/mingw\/bin\/nm$/;"	m
NM	lame/Makefile	/^NM = \/mingw\/bin\/nm$/;"	m
NM	lame/debian/Makefile	/^NM = \/mingw\/bin\/nm$/;"	m
NM	lame/doc/Makefile	/^NM = \/mingw\/bin\/nm$/;"	m
NM	lame/doc/html/Makefile	/^NM = \/mingw\/bin\/nm$/;"	m
NM	lame/doc/man/Makefile	/^NM = \/mingw\/bin\/nm$/;"	m
NM	lame/dshow/Makefile	/^NM = \/mingw\/bin\/nm$/;"	m
NM	lame/frontend/Makefile	/^NM = \/mingw\/bin\/nm$/;"	m
NM	lame/include/Makefile	/^NM = \/mingw\/bin\/nm$/;"	m
NM	lame/libmp3lame/Makefile	/^NM = \/mingw\/bin\/nm$/;"	m
NM	lame/libmp3lame/i386/Makefile	/^NM = \/mingw\/bin\/nm$/;"	m
NM	lame/libmp3lame/vector/Makefile	/^NM = \/mingw\/bin\/nm$/;"	m
NM	lame/mac/Makefile	/^NM = \/mingw\/bin\/nm$/;"	m
NM	lame/macosx/English.lproj/Makefile	/^NM = \/mingw\/bin\/nm$/;"	m
NM	lame/macosx/LAME.xcodeproj/Makefile	/^NM = \/mingw\/bin\/nm$/;"	m
NM	lame/macosx/Makefile	/^NM = \/mingw\/bin\/nm$/;"	m
NM	lame/misc/Makefile	/^NM = \/mingw\/bin\/nm$/;"	m
NM	lame/mpglib/Makefile	/^NM = \/mingw\/bin\/nm$/;"	m
NM	lame/vc_solution/Makefile	/^NM = \/mingw\/bin\/nm$/;"	m
NMEDIT	lame/ACM/ADbg/Makefile	/^NMEDIT = $/;"	m
NMEDIT	lame/ACM/Makefile	/^NMEDIT = $/;"	m
NMEDIT	lame/ACM/ddk/Makefile	/^NMEDIT = $/;"	m
NMEDIT	lame/ACM/tinyxml/Makefile	/^NMEDIT = $/;"	m
NMEDIT	lame/Dll/Makefile	/^NMEDIT = $/;"	m
NMEDIT	lame/Makefile	/^NMEDIT = $/;"	m
NMEDIT	lame/debian/Makefile	/^NMEDIT = $/;"	m
NMEDIT	lame/doc/Makefile	/^NMEDIT = $/;"	m
NMEDIT	lame/doc/html/Makefile	/^NMEDIT = $/;"	m
NMEDIT	lame/doc/man/Makefile	/^NMEDIT = $/;"	m
NMEDIT	lame/dshow/Makefile	/^NMEDIT = $/;"	m
NMEDIT	lame/frontend/Makefile	/^NMEDIT = $/;"	m
NMEDIT	lame/include/Makefile	/^NMEDIT = $/;"	m
NMEDIT	lame/libmp3lame/Makefile	/^NMEDIT = $/;"	m
NMEDIT	lame/libmp3lame/i386/Makefile	/^NMEDIT = $/;"	m
NMEDIT	lame/libmp3lame/vector/Makefile	/^NMEDIT = $/;"	m
NMEDIT	lame/mac/Makefile	/^NMEDIT = $/;"	m
NMEDIT	lame/macosx/English.lproj/Makefile	/^NMEDIT = $/;"	m
NMEDIT	lame/macosx/LAME.xcodeproj/Makefile	/^NMEDIT = $/;"	m
NMEDIT	lame/macosx/Makefile	/^NMEDIT = $/;"	m
NMEDIT	lame/misc/Makefile	/^NMEDIT = $/;"	m
NMEDIT	lame/mpglib/Makefile	/^NMEDIT = $/;"	m
NMEDIT	lame/vc_solution/Makefile	/^NMEDIT = $/;"	m
NODEBUG	librtmp/log.h	34;"	d
NOK_LT_BLEN	libfaac/coder.h	86;"	d
NOMINMAX	Source/ReplayBuffer.cpp	19;"	d	file:
NOMINMAX	Source/Settings.cpp	19;"	d	file:
NOOP	lame/libmp3lame/presets.c	139;"	d	file:
NORMAL_INSTALL	lame/ACM/ADbg/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	lame/ACM/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	lame/ACM/ddk/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	lame/ACM/tinyxml/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	lame/Dll/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	lame/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	lame/debian/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	lame/doc/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	lame/doc/html/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	lame/doc/man/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	lame/dshow/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	lame/frontend/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	lame/include/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	lame/libmp3lame/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	lame/libmp3lame/i386/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	lame/libmp3lame/vector/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	lame/mac/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	lame/macosx/English.lproj/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	lame/macosx/LAME.xcodeproj/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	lame/macosx/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	lame/misc/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	lame/mpglib/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	lame/vc_solution/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_UNINSTALL	lame/ACM/ADbg/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	lame/ACM/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	lame/ACM/ddk/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	lame/ACM/tinyxml/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	lame/Dll/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	lame/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	lame/debian/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	lame/doc/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	lame/doc/html/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	lame/doc/man/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	lame/dshow/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	lame/frontend/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	lame/include/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	lame/libmp3lame/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	lame/libmp3lame/i386/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	lame/libmp3lame/vector/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	lame/mac/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	lame/macosx/English.lproj/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	lame/macosx/LAME.xcodeproj/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	lame/macosx/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	lame/misc/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	lame/mpglib/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	lame/vc_solution/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORM_TYPE	lame/libmp3lame/encoder.h	118;"	d
NOT_SET	lame/include/lame.h	/^  NOT_SET,$/;"	e	enum:MPEG_mode_e
NO_COMPETING_THREAD_BEGIN	extras/concurrencysal.h	261;"	d
NO_COMPETING_THREAD_BEGIN	extras/concurrencysal.h	348;"	d
NO_COMPETING_THREAD_END	extras/concurrencysal.h	262;"	d
NO_COMPETING_THREAD_END	extras/concurrencysal.h	349;"	d
NO_CRYPTO	librtmp/rtmp.h	28;"	d
NROFF	lame/doc/man/Makefile	/^NROFF = nroff$/;"	m
NS	lame/libmp3lame/newmdct.c	230;"	d	file:
NSATHSCALE	lame/libmp3lame/quantize_pvt.c	41;"	d	file:
NSATTACKTHRE	lame/libmp3lame/psymodel.h	61;"	d
NSATTACKTHRE_S	lame/libmp3lame/psymodel.h	62;"	d
NSFB_LONG	libfaac/coder.h	53;"	d
NSFB_SHORT	libfaac/coder.h	54;"	d
NSFIRLEN	lame/libmp3lame/psymodel.c	157;"	d	file:
NSF_BUFFER_BUT_DONT_SEND	Source/mongoose.c	258;"	d	file:
NSF_CLOSE_IMMEDIATELY	Source/mongoose.c	261;"	d	file:
NSF_CONNECTING	Source/mongoose.c	260;"	d	file:
NSF_DISCARD	Source/mongoose.c	266;"	d	file:
NSF_FINISHED_SENDING_DATA	Source/mongoose.c	257;"	d	file:
NSF_LISTENING	Source/mongoose.c	264;"	d	file:
NSF_SSL_HANDSHAKE_DONE	Source/mongoose.c	259;"	d	file:
NSF_UDP	Source/mongoose.c	265;"	d	file:
NSF_USER_1	Source/mongoose.c	268;"	d	file:
NSF_USER_2	Source/mongoose.c	269;"	d	file:
NSF_USER_3	Source/mongoose.c	270;"	d	file:
NSF_USER_4	Source/mongoose.c	271;"	d	file:
NSF_USER_5	Source/mongoose.c	272;"	d	file:
NSF_USER_6	Source/mongoose.c	273;"	d	file:
NSF_WANT_READ	Source/mongoose.c	262;"	d	file:
NSF_WANT_WRITE	Source/mongoose.c	263;"	d	file:
NS_ACCEPT	Source/mongoose.c	224;"	d	file:
NS_CALLOC	Source/mongoose.c	340;"	d	file:
NS_CLOSE	Source/mongoose.c	228;"	d	file:
NS_CONNECT	Source/mongoose.c	225;"	d	file:
NS_CTL_MSG_MESSAGE_SIZE	Source/mongoose.c	344;"	d	file:
NS_DISABLE_THREADS	Source/mongoose.c	76;"	d	file:
NS_FREE	Source/mongoose.c	336;"	d	file:
NS_INTERP	lame/libmp3lame/psymodel.c	/^NS_INTERP(FLOAT x, FLOAT y, FLOAT r)$/;"	f	file:
NS_MALLOC	Source/mongoose.c	328;"	d	file:
NS_MAX_SOCKETPAIR_ATTEMPTS	Source/mongoose.c	343;"	d	file:
NS_MSFIX	lame/libmp3lame/psymodel.h	60;"	d
NS_POLL	Source/mongoose.c	223;"	d	file:
NS_PREECHO_ATT0	lame/libmp3lame/psymodel.h	56;"	d
NS_PREECHO_ATT1	lame/libmp3lame/psymodel.h	57;"	d
NS_PREECHO_ATT2	lame/libmp3lame/psymodel.h	58;"	d
NS_READ_BUFFER_SIZE	Source/mongoose.c	345;"	d	file:
NS_REALLOC	Source/mongoose.c	332;"	d	file:
NS_RECV	Source/mongoose.c	226;"	d	file:
NS_SEND	Source/mongoose.c	227;"	d	file:
NS_SKELETON_HEADER_INCLUDED	Source/mongoose.c	39;"	d	file:
NS_SKELETON_VERSION	Source/mongoose.c	41;"	d	file:
NS_UDP_RECEIVE_BUFFER_SIZE	Source/mongoose.c	346;"	d	file:
NS_VPRINTF_BUFFER_SIZE	Source/mongoose.c	347;"	d	file:
NTDDI_VERSION	OBSApi/OBSApi.h	25;"	d
NTDDI_VERSION	Source/Main.h	25;"	d
NUMBACK	lame/libmp3lame/lame-analysis.h	29;"	d
NUMCLOSINGTOKENS	Source/CodeTokenizer.cpp	24;"	d	file:
NUMINTAB	libfaac/huffman.h	40;"	d
NUMPINFO	lame/libmp3lame/lame-analysis.h	30;"	d
NUMTOCENTRIES	lame/libmp3lame/VbrTag.h	48;"	d
NUM_BUFFERS	GraphicsCapture/GraphicsCaptureHook/D3D8Capture.cpp	/^const int NUM_BUFFERS = 3;$/;"	v
NUM_BUFFERS	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	48;"	d	file:
NUM_BUFFERS	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	37;"	d	file:
NUM_BUFFERS	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	148;"	d	file:
NUM_CAPTURE_TEXTURES	Source/DesktopImageSource.cpp	24;"	d	file:
NUM_ENTITY	lame/ACM/tinyxml/tinyxml.h	/^		NUM_ENTITY = 5,$/;"	e	enum:TiXmlBase::<anonymous>
NUM_KNOWN_PATCHES	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	114;"	d	file:
NUM_KNOWN_PATCHES	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	152;"	d	file:
NUM_NEC_LINES	libfaac/bitstream.h	87;"	d
NUM_OPTIONS	Source/mongoose.c	/^  NUM_OPTIONS$/;"	e	file:
NUM_OUT_BUFFERS	Source/OBSVideoCapture.cpp	117;"	d	file:
NUM_RENDER_BUFFERS	Source/OBS.h	28;"	d
NUM_VIDEO_CAPTURE_FILTER_DEVICE_TYPE	DShowPlugin/IVideoCaptureFilter.h	/^    NUM_VIDEO_CAPTURE_FILTER_DEVICE_TYPE$/;"	e	enum:VIDEO_CAPTURE_FILTER_DEVICE_TYPE
NVENCAPI	ObsNvenc/inc/nvEncodeAPI.h	100;"	d
NVENCAPI	ObsNvenc/inc/nvEncodeAPI.h	97;"	d
NVENCAPI_MAJOR_VERSION	ObsNvenc/inc/nvEncodeAPI.h	136;"	d
NVENCAPI_MINOR_VERSION	ObsNvenc/inc/nvEncodeAPI.h	137;"	d
NVENCAPI_STRUCT_VERSION	ObsNvenc/inc/nvEncodeAPI.h	144;"	d
NVENCAPI_VERSION	ObsNvenc/inc/nvEncodeAPI.h	139;"	d
NVENCEncoder	ObsNvenc/inc/NVENCEncoder.h	/^class NVENCEncoder : public VideoEncoder$/;"	c
NVENCEncoder	ObsNvenc/src/NVENCEncoder.cpp	/^NVENCEncoder::NVENCEncoder(int fps, int width, int height, int quality, CTSTR preset, bool bUse444, ColorDescription &colorDesc, int maxBitRate, int bufferSize, bool bUseCFR)$/;"	f	class:NVENCEncoder
NVENCEncoder.cpp	ObsNvenc/src/NVENCEncoder.cpp	1;"	F
NVENCEncoder.h	ObsNvenc/inc/NVENCEncoder.h	1;"	F
NVENCEncoderOutputSurface	ObsNvenc/inc/NVENCEncoder.h	/^struct NVENCEncoderOutputSurface$/;"	s
NVENCEncoderSurface	ObsNvenc/inc/NVENCEncoder.h	/^struct NVENCEncoderSurface$/;"	s
NVENCSTATUS	ObsNvenc/inc/nvEncodeAPI.h	/^} NVENCSTATUS;$/;"	t
NVENC_EXTERNAL_ME_HINT	ObsNvenc/inc/nvEncodeAPI.h	/^} NVENC_EXTERNAL_ME_HINT;$/;"	t
NVENC_EXTERNAL_ME_HINT_COUNTS_PER_BLOCKTYPE	ObsNvenc/inc/nvEncodeAPI.h	/^} NVENC_EXTERNAL_ME_HINT_COUNTS_PER_BLOCKTYPE;$/;"	t
NVENC_INFINITE_GOPLENGTH	ObsNvenc/inc/nvEncodeAPI.h	147;"	d
NVENC_RECT	ObsNvenc/inc/nvEncodeAPI.h	/^typedef RECT NVENC_RECT;$/;"	t
NVENC_RECT	ObsNvenc/inc/nvEncodeAPI.h	/^} NVENC_RECT;$/;"	t
NV_CLIENT_KEY	ObsNvenc/inc/license.h	/^static const GUID NV_CLIENT_KEY = { 0x0, 0x0, 0x0, { 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 } };$/;"	v
NV_ENCODE_API_FUNCTION_LIST	ObsNvenc/inc/nvEncodeAPI.h	/^} NV_ENCODE_API_FUNCTION_LIST;$/;"	t
NV_ENCODE_API_FUNCTION_LIST_VER	ObsNvenc/inc/nvEncodeAPI.h	2847;"	d
NV_ENC_BUFFER_FORMAT	ObsNvenc/inc/nvEncodeAPI.h	/^} NV_ENC_BUFFER_FORMAT;$/;"	t
NV_ENC_BUFFER_FORMAT_IYUV_PL	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_BUFFER_FORMAT_IYUV_PL            = 0x100,  \/**< Packed YUV [YUV separate bytes per pixel] allocated as serial 2D buffer. *\/$/;"	e	enum:_NV_ENC_BUFFER_FORMAT
NV_ENC_BUFFER_FORMAT_IYUV_TILED16x16	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_BUFFER_FORMAT_IYUV_TILED16x16    = 0x200,  \/**< Packed YUV [YUV separate bytes per pixel] allocated as 16x16 tiles.      *\/$/;"	e	enum:_NV_ENC_BUFFER_FORMAT
NV_ENC_BUFFER_FORMAT_IYUV_TILED64x16	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_BUFFER_FORMAT_IYUV_TILED64x16    = 0x300,  \/**< Packed YUV [YUV separate bytes per pixel] allocated as 64x16 tiles.      *\/$/;"	e	enum:_NV_ENC_BUFFER_FORMAT
NV_ENC_BUFFER_FORMAT_NV12_PL	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_BUFFER_FORMAT_NV12_PL            = 0x1,    \/**< Semi-Planar YUV [UV interleaved] allocated as serial 2D buffer. *\/$/;"	e	enum:_NV_ENC_BUFFER_FORMAT
NV_ENC_BUFFER_FORMAT_NV12_TILED16x16	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_BUFFER_FORMAT_NV12_TILED16x16    = 0x2,    \/**< Semi-Planar YUV [UV interleaved] allocated as 16x16 tiles.      *\/$/;"	e	enum:_NV_ENC_BUFFER_FORMAT
NV_ENC_BUFFER_FORMAT_NV12_TILED64x16	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_BUFFER_FORMAT_NV12_TILED64x16    = 0x3,    \/**< Semi-Planar YUV [UV interleaved] allocated as 64x16 tiles.      *\/$/;"	e	enum:_NV_ENC_BUFFER_FORMAT
NV_ENC_BUFFER_FORMAT_UNDEFINED	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_BUFFER_FORMAT_UNDEFINED          = 0x0,    \/**< Undefined buffer format. *\/$/;"	e	enum:_NV_ENC_BUFFER_FORMAT
NV_ENC_BUFFER_FORMAT_YUV444_PL	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_BUFFER_FORMAT_YUV444_PL          = 0x1000, \/**< Planar YUV [YUV separate bytes per pixel] allocated as serial 2D buffer. *\/$/;"	e	enum:_NV_ENC_BUFFER_FORMAT
NV_ENC_BUFFER_FORMAT_YUV444_TILED16x16	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_BUFFER_FORMAT_YUV444_TILED16x16  = 0x2000, \/**< Planar YUV [YUV separate bytes per pixel] allocated as 16x16 tiles.      *\/$/;"	e	enum:_NV_ENC_BUFFER_FORMAT
NV_ENC_BUFFER_FORMAT_YUV444_TILED64x16	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_BUFFER_FORMAT_YUV444_TILED64x16  = 0x3000, \/**< Planar YUV [YUV separate bytes per pixel] allocated as 64x16 tiles.      *\/$/;"	e	enum:_NV_ENC_BUFFER_FORMAT
NV_ENC_BUFFER_FORMAT_YV12_PL	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_BUFFER_FORMAT_YV12_PL            = 0x10,   \/**< Planar YUV [YUV separate planes] allocated as serial 2D buffer. *\/$/;"	e	enum:_NV_ENC_BUFFER_FORMAT
NV_ENC_BUFFER_FORMAT_YV12_TILED16x16	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_BUFFER_FORMAT_YV12_TILED16x16    = 0x20,   \/**< Planar YUV [YUV separate planes] allocated as 16x16 tiles.      *\/$/;"	e	enum:_NV_ENC_BUFFER_FORMAT
NV_ENC_BUFFER_FORMAT_YV12_TILED64x16	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_BUFFER_FORMAT_YV12_TILED64x16    = 0x30,   \/**< Planar YUV [YUV separate planes] allocated as 64x16 tiles.      *\/$/;"	e	enum:_NV_ENC_BUFFER_FORMAT
NV_ENC_CAPS	ObsNvenc/inc/nvEncodeAPI.h	/^} NV_ENC_CAPS;$/;"	t
NV_ENC_CAPS_ASYNC_ENCODE_SUPPORT	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_CAPS_ASYNC_ENCODE_SUPPORT,$/;"	e	enum:_NV_ENC_CAPS
NV_ENC_CAPS_EXPOSED_COUNT	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_CAPS_EXPOSED_COUNT$/;"	e	enum:_NV_ENC_CAPS
NV_ENC_CAPS_HEIGHT_MAX	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_CAPS_HEIGHT_MAX,$/;"	e	enum:_NV_ENC_CAPS
NV_ENC_CAPS_LEVEL_MAX	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_CAPS_LEVEL_MAX,$/;"	e	enum:_NV_ENC_CAPS
NV_ENC_CAPS_LEVEL_MIN	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_CAPS_LEVEL_MIN,$/;"	e	enum:_NV_ENC_CAPS
NV_ENC_CAPS_MB_NUM_MAX	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_CAPS_MB_NUM_MAX,$/;"	e	enum:_NV_ENC_CAPS
NV_ENC_CAPS_MB_PER_SEC_MAX	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_CAPS_MB_PER_SEC_MAX,$/;"	e	enum:_NV_ENC_CAPS
NV_ENC_CAPS_NUM_MAX_BFRAMES	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_CAPS_NUM_MAX_BFRAMES,$/;"	e	enum:_NV_ENC_CAPS
NV_ENC_CAPS_NUM_MAX_TEMPORAL_LAYERS	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_CAPS_NUM_MAX_TEMPORAL_LAYERS,$/;"	e	enum:_NV_ENC_CAPS
NV_ENC_CAPS_PARAM	ObsNvenc/inc/nvEncodeAPI.h	/^} NV_ENC_CAPS_PARAM;$/;"	t
NV_ENC_CAPS_PARAM_VER	ObsNvenc/inc/nvEncodeAPI.h	907;"	d
NV_ENC_CAPS_PREPROC_SUPPORT	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_CAPS_PREPROC_SUPPORT,$/;"	e	enum:_NV_ENC_CAPS
NV_ENC_CAPS_SEPARATE_COLOUR_PLANE	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_CAPS_SEPARATE_COLOUR_PLANE,$/;"	e	enum:_NV_ENC_CAPS
NV_ENC_CAPS_SUPPORTED_RATECONTROL_MODES	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_CAPS_SUPPORTED_RATECONTROL_MODES,$/;"	e	enum:_NV_ENC_CAPS
NV_ENC_CAPS_SUPPORT_ADAPTIVE_TRANSFORM	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_CAPS_SUPPORT_ADAPTIVE_TRANSFORM,$/;"	e	enum:_NV_ENC_CAPS
NV_ENC_CAPS_SUPPORT_BDIRECT_MODE	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_CAPS_SUPPORT_BDIRECT_MODE,$/;"	e	enum:_NV_ENC_CAPS
NV_ENC_CAPS_SUPPORT_CABAC	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_CAPS_SUPPORT_CABAC,$/;"	e	enum:_NV_ENC_CAPS
NV_ENC_CAPS_SUPPORT_CONSTRAINED_ENCODING	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_CAPS_SUPPORT_CONSTRAINED_ENCODING,$/;"	e	enum:_NV_ENC_CAPS
NV_ENC_CAPS_SUPPORT_CUSTOM_VBV_BUF_SIZE	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_CAPS_SUPPORT_CUSTOM_VBV_BUF_SIZE,$/;"	e	enum:_NV_ENC_CAPS
NV_ENC_CAPS_SUPPORT_DYNAMIC_SLICE_MODE	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_CAPS_SUPPORT_DYNAMIC_SLICE_MODE,$/;"	e	enum:_NV_ENC_CAPS
NV_ENC_CAPS_SUPPORT_DYN_BITRATE_CHANGE	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_CAPS_SUPPORT_DYN_BITRATE_CHANGE,$/;"	e	enum:_NV_ENC_CAPS
NV_ENC_CAPS_SUPPORT_DYN_FORCE_CONSTQP	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_CAPS_SUPPORT_DYN_FORCE_CONSTQP,$/;"	e	enum:_NV_ENC_CAPS
NV_ENC_CAPS_SUPPORT_DYN_RCMODE_CHANGE	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_CAPS_SUPPORT_DYN_RCMODE_CHANGE,$/;"	e	enum:_NV_ENC_CAPS
NV_ENC_CAPS_SUPPORT_DYN_RES_CHANGE	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_CAPS_SUPPORT_DYN_RES_CHANGE,$/;"	e	enum:_NV_ENC_CAPS
NV_ENC_CAPS_SUPPORT_FIELD_ENCODING	ObsNvenc/inc/nvEncodeAPI.h	/^     NV_ENC_CAPS_SUPPORT_FIELD_ENCODING,$/;"	e	enum:_NV_ENC_CAPS
NV_ENC_CAPS_SUPPORT_FMO	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_CAPS_SUPPORT_FMO,$/;"	e	enum:_NV_ENC_CAPS
NV_ENC_CAPS_SUPPORT_HIERARCHICAL_BFRAMES	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_CAPS_SUPPORT_HIERARCHICAL_BFRAMES,$/;"	e	enum:_NV_ENC_CAPS
NV_ENC_CAPS_SUPPORT_HIERARCHICAL_PFRAMES	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_CAPS_SUPPORT_HIERARCHICAL_PFRAMES,$/;"	e	enum:_NV_ENC_CAPS
NV_ENC_CAPS_SUPPORT_INTRA_REFRESH	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_CAPS_SUPPORT_INTRA_REFRESH,$/;"	e	enum:_NV_ENC_CAPS
NV_ENC_CAPS_SUPPORT_LOSSLESS_ENCODE	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_CAPS_SUPPORT_LOSSLESS_ENCODE,$/;"	e	enum:_NV_ENC_CAPS
NV_ENC_CAPS_SUPPORT_MONOCHROME	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_CAPS_SUPPORT_MONOCHROME,$/;"	e	enum:_NV_ENC_CAPS
NV_ENC_CAPS_SUPPORT_QPELMV	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_CAPS_SUPPORT_QPELMV,$/;"	e	enum:_NV_ENC_CAPS
NV_ENC_CAPS_SUPPORT_REF_PIC_INVALIDATION	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_CAPS_SUPPORT_REF_PIC_INVALIDATION,$/;"	e	enum:_NV_ENC_CAPS
NV_ENC_CAPS_SUPPORT_STEREO_MVC	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_CAPS_SUPPORT_STEREO_MVC,$/;"	e	enum:_NV_ENC_CAPS
NV_ENC_CAPS_SUPPORT_SUBFRAME_READBACK	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_CAPS_SUPPORT_SUBFRAME_READBACK,$/;"	e	enum:_NV_ENC_CAPS
NV_ENC_CAPS_SUPPORT_TEMPORAL_SVC	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_CAPS_SUPPORT_TEMPORAL_SVC,$/;"	e	enum:_NV_ENC_CAPS
NV_ENC_CAPS_SUPPORT_YUV444_ENCODE	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_CAPS_SUPPORT_YUV444_ENCODE,$/;"	e	enum:_NV_ENC_CAPS
NV_ENC_CAPS_WIDTH_MAX	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_CAPS_WIDTH_MAX,$/;"	e	enum:_NV_ENC_CAPS
NV_ENC_CODEC_CONFIG	ObsNvenc/inc/nvEncodeAPI.h	/^} NV_ENC_CODEC_CONFIG;$/;"	t
NV_ENC_CODEC_H264_GUID	ObsNvenc/inc/nvEncodeAPI.h	/^static const GUID NV_ENC_CODEC_H264_GUID =$/;"	v
NV_ENC_CODEC_PIC_PARAMS	ObsNvenc/inc/nvEncodeAPI.h	/^} NV_ENC_CODEC_PIC_PARAMS;$/;"	t
NV_ENC_CODEC_PROFILE_AUTOSELECT_GUID	ObsNvenc/inc/nvEncodeAPI.h	/^static const GUID NV_ENC_CODEC_PROFILE_AUTOSELECT_GUID = $/;"	v
NV_ENC_CONFIG	ObsNvenc/inc/nvEncodeAPI.h	/^} NV_ENC_CONFIG;$/;"	t
NV_ENC_CONFIG_H264	ObsNvenc/inc/nvEncodeAPI.h	/^} NV_ENC_CONFIG_H264;$/;"	t
NV_ENC_CONFIG_H264_VUI_PARAMETERS	ObsNvenc/inc/nvEncodeAPI.h	/^}NV_ENC_CONFIG_H264_VUI_PARAMETERS;$/;"	t
NV_ENC_CONFIG_VER	ObsNvenc/inc/nvEncodeAPI.h	1137;"	d
NV_ENC_CREATE_BITSTREAM_BUFFER	ObsNvenc/inc/nvEncodeAPI.h	/^} NV_ENC_CREATE_BITSTREAM_BUFFER;$/;"	t
NV_ENC_CREATE_BITSTREAM_BUFFER_VER	ObsNvenc/inc/nvEncodeAPI.h	946;"	d
NV_ENC_CREATE_INPUT_BUFFER	ObsNvenc/inc/nvEncodeAPI.h	/^} NV_ENC_CREATE_INPUT_BUFFER;$/;"	t
NV_ENC_CREATE_INPUT_BUFFER_VER	ObsNvenc/inc/nvEncodeAPI.h	928;"	d
NV_ENC_DEVICE_TYPE	ObsNvenc/inc/nvEncodeAPI.h	/^} NV_ENC_DEVICE_TYPE;$/;"	t
NV_ENC_DEVICE_TYPE_CUDA	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_DEVICE_TYPE_CUDA             = 0x1,   \/**< encode device type is a cuda device *\/$/;"	e	enum:_NV_ENC_DEVICE_TYPE
NV_ENC_DEVICE_TYPE_DIRECTX	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_DEVICE_TYPE_DIRECTX          = 0x0,   \/**< encode device type is a directx9 device *\/$/;"	e	enum:_NV_ENC_DEVICE_TYPE
NV_ENC_ERR_DEVICE_NOT_EXIST	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_ERR_DEVICE_NOT_EXIST,$/;"	e	enum:_NVENCSTATUS
NV_ENC_ERR_ENCODER_BUSY	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_ERR_ENCODER_BUSY,$/;"	e	enum:_NVENCSTATUS
NV_ENC_ERR_ENCODER_NOT_INITIALIZED	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_ERR_ENCODER_NOT_INITIALIZED,$/;"	e	enum:_NVENCSTATUS
NV_ENC_ERR_EVENT_NOT_REGISTERD	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_ERR_EVENT_NOT_REGISTERD,$/;"	e	enum:_NVENCSTATUS
NV_ENC_ERR_GENERIC	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_ERR_GENERIC,$/;"	e	enum:_NVENCSTATUS
NV_ENC_ERR_INCOMPATIBLE_CLIENT_KEY	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_ERR_INCOMPATIBLE_CLIENT_KEY,$/;"	e	enum:_NVENCSTATUS
NV_ENC_ERR_INVALID_CALL	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_ERR_INVALID_CALL,$/;"	e	enum:_NVENCSTATUS
NV_ENC_ERR_INVALID_DEVICE	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_ERR_INVALID_DEVICE,$/;"	e	enum:_NVENCSTATUS
NV_ENC_ERR_INVALID_ENCODERDEVICE	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_ERR_INVALID_ENCODERDEVICE,$/;"	e	enum:_NVENCSTATUS
NV_ENC_ERR_INVALID_EVENT	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_ERR_INVALID_EVENT,$/;"	e	enum:_NVENCSTATUS
NV_ENC_ERR_INVALID_PARAM	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_ERR_INVALID_PARAM,$/;"	e	enum:_NVENCSTATUS
NV_ENC_ERR_INVALID_PTR	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_ERR_INVALID_PTR,$/;"	e	enum:_NVENCSTATUS
NV_ENC_ERR_INVALID_VERSION	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_ERR_INVALID_VERSION,$/;"	e	enum:_NVENCSTATUS
NV_ENC_ERR_LOCK_BUSY	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_ERR_LOCK_BUSY,$/;"	e	enum:_NVENCSTATUS
NV_ENC_ERR_MAP_FAILED	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_ERR_MAP_FAILED,$/;"	e	enum:_NVENCSTATUS
NV_ENC_ERR_NEED_MORE_INPUT	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_ERR_NEED_MORE_INPUT,$/;"	e	enum:_NVENCSTATUS
NV_ENC_ERR_NOT_ENOUGH_BUFFER	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_ERR_NOT_ENOUGH_BUFFER,$/;"	e	enum:_NVENCSTATUS
NV_ENC_ERR_NO_ENCODE_DEVICE	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_ERR_NO_ENCODE_DEVICE,$/;"	e	enum:_NVENCSTATUS
NV_ENC_ERR_OUT_OF_MEMORY	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_ERR_OUT_OF_MEMORY,$/;"	e	enum:_NVENCSTATUS
NV_ENC_ERR_RESOURCE_NOT_MAPPED	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_ERR_RESOURCE_NOT_MAPPED,$/;"	e	enum:_NVENCSTATUS
NV_ENC_ERR_RESOURCE_NOT_REGISTERED	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_ERR_RESOURCE_NOT_REGISTERED,$/;"	e	enum:_NVENCSTATUS
NV_ENC_ERR_RESOURCE_REGISTER_FAILED	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_ERR_RESOURCE_REGISTER_FAILED,$/;"	e	enum:_NVENCSTATUS
NV_ENC_ERR_UNIMPLEMENTED	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_ERR_UNIMPLEMENTED,$/;"	e	enum:_NVENCSTATUS
NV_ENC_ERR_UNSUPPORTED_DEVICE	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_ERR_UNSUPPORTED_DEVICE,$/;"	e	enum:_NVENCSTATUS
NV_ENC_ERR_UNSUPPORTED_PARAM	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_ERR_UNSUPPORTED_PARAM,$/;"	e	enum:_NVENCSTATUS
NV_ENC_EVENT_PARAMS	ObsNvenc/inc/nvEncodeAPI.h	/^} NV_ENC_EVENT_PARAMS;$/;"	t
NV_ENC_EVENT_PARAMS_VER	ObsNvenc/inc/nvEncodeAPI.h	1481;"	d
NV_ENC_H264_ADAPTIVE_TRANSFORM_AUTOSELECT	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_H264_ADAPTIVE_TRANSFORM_AUTOSELECT = 0x0,   \/**< Adaptive Transform 8x8 mode is auto selected by the encoder driver*\/$/;"	e	enum:_NV_ENC_H264_ADAPTIVE_TRANSFORM_MODE
NV_ENC_H264_ADAPTIVE_TRANSFORM_DISABLE	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_H264_ADAPTIVE_TRANSFORM_DISABLE    = 0x1,   \/**< Adaptive Transform 8x8 mode disabled *\/$/;"	e	enum:_NV_ENC_H264_ADAPTIVE_TRANSFORM_MODE
NV_ENC_H264_ADAPTIVE_TRANSFORM_ENABLE	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_H264_ADAPTIVE_TRANSFORM_ENABLE     = 0x2,   \/**< Adaptive Transform 8x8 mode should be used *\/$/;"	e	enum:_NV_ENC_H264_ADAPTIVE_TRANSFORM_MODE
NV_ENC_H264_ADAPTIVE_TRANSFORM_MODE	ObsNvenc/inc/nvEncodeAPI.h	/^} NV_ENC_H264_ADAPTIVE_TRANSFORM_MODE;$/;"	t
NV_ENC_H264_BDIRECT_MODE	ObsNvenc/inc/nvEncodeAPI.h	/^} NV_ENC_H264_BDIRECT_MODE;$/;"	t
NV_ENC_H264_BDIRECT_MODE_AUTOSELECT	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_H264_BDIRECT_MODE_AUTOSELECT = 0x0,          \/**< BDirect mode is auto selected by the encoder driver *\/$/;"	e	enum:_NV_ENC_H264_BDIRECT_MODE
NV_ENC_H264_BDIRECT_MODE_DISABLE	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_H264_BDIRECT_MODE_DISABLE    = 0x1,          \/**< Disable BDirect mode *\/$/;"	e	enum:_NV_ENC_H264_BDIRECT_MODE
NV_ENC_H264_BDIRECT_MODE_SPATIAL	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_H264_BDIRECT_MODE_SPATIAL    = 0x3           \/**< Spatial BDirect mode *\/$/;"	e	enum:_NV_ENC_H264_BDIRECT_MODE
NV_ENC_H264_BDIRECT_MODE_TEMPORAL	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_H264_BDIRECT_MODE_TEMPORAL   = 0x2,          \/**< Temporal BDirect mode *\/$/;"	e	enum:_NV_ENC_H264_BDIRECT_MODE
NV_ENC_H264_ENTROPY_CODING_MODE	ObsNvenc/inc/nvEncodeAPI.h	/^} NV_ENC_H264_ENTROPY_CODING_MODE;$/;"	t
NV_ENC_H264_ENTROPY_CODING_MODE_AUTOSELECT	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_H264_ENTROPY_CODING_MODE_AUTOSELECT = 0x0,   \/**< Entropy coding mode is auto selected by the encoder driver *\/$/;"	e	enum:_NV_ENC_H264_ENTROPY_CODING_MODE
NV_ENC_H264_ENTROPY_CODING_MODE_CABAC	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_H264_ENTROPY_CODING_MODE_CABAC      = 0x1,   \/**< Entropy coding mode is CABAC *\/$/;"	e	enum:_NV_ENC_H264_ENTROPY_CODING_MODE
NV_ENC_H264_ENTROPY_CODING_MODE_CAVLC	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_H264_ENTROPY_CODING_MODE_CAVLC      = 0x2    \/**< Entropy coding mode is CAVLC *\/$/;"	e	enum:_NV_ENC_H264_ENTROPY_CODING_MODE
NV_ENC_H264_FMO_AUTOSELECT	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_H264_FMO_AUTOSELECT          = 0x0,          \/**< FMO usage is auto selected by the encoder driver *\/$/;"	e	enum:_NV_ENC_H264_FMO_MODE
NV_ENC_H264_FMO_DISABLE	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_H264_FMO_DISABLE             = 0x2,          \/**< Disble FMO *\/$/;"	e	enum:_NV_ENC_H264_FMO_MODE
NV_ENC_H264_FMO_ENABLE	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_H264_FMO_ENABLE              = 0x1,          \/**< Enable FMO *\/$/;"	e	enum:_NV_ENC_H264_FMO_MODE
NV_ENC_H264_FMO_MODE	ObsNvenc/inc/nvEncodeAPI.h	/^} NV_ENC_H264_FMO_MODE;$/;"	t
NV_ENC_H264_PROFILE_BASELINE_GUID	ObsNvenc/inc/nvEncodeAPI.h	/^static const GUID  NV_ENC_H264_PROFILE_BASELINE_GUID =$/;"	v
NV_ENC_H264_PROFILE_CONSTRAINED_HIGH_GUID	ObsNvenc/inc/nvEncodeAPI.h	/^static const GUID NV_ENC_H264_PROFILE_CONSTRAINED_HIGH_GUID = $/;"	v
NV_ENC_H264_PROFILE_HIGH_444_GUID	ObsNvenc/inc/nvEncodeAPI.h	/^static const GUID  NV_ENC_H264_PROFILE_HIGH_444_GUID = $/;"	v
NV_ENC_H264_PROFILE_HIGH_GUID	ObsNvenc/inc/nvEncodeAPI.h	/^static const GUID NV_ENC_H264_PROFILE_HIGH_GUID =$/;"	v
NV_ENC_H264_PROFILE_MAIN_GUID	ObsNvenc/inc/nvEncodeAPI.h	/^static const GUID  NV_ENC_H264_PROFILE_MAIN_GUID =$/;"	v
NV_ENC_H264_PROFILE_STEREO_GUID	ObsNvenc/inc/nvEncodeAPI.h	/^static const GUID NV_ENC_H264_PROFILE_STEREO_GUID =$/;"	v
NV_ENC_H264_PROFILE_SVC_TEMPORAL_SCALABILTY	ObsNvenc/inc/nvEncodeAPI.h	/^static const GUID NV_ENC_H264_PROFILE_SVC_TEMPORAL_SCALABILTY =$/;"	v
NV_ENC_H264_SEI_PAYLOAD	ObsNvenc/inc/nvEncodeAPI.h	/^} NV_ENC_H264_SEI_PAYLOAD;$/;"	t
NV_ENC_INITIALIZE_PARAMS	ObsNvenc/inc/nvEncodeAPI.h	/^} NV_ENC_INITIALIZE_PARAMS;$/;"	t
NV_ENC_INITIALIZE_PARAMS_VER	ObsNvenc/inc/nvEncodeAPI.h	1178;"	d
NV_ENC_INPUT_PTR	ObsNvenc/inc/nvEncodeAPI.h	/^typedef void* NV_ENC_INPUT_PTR;             \/**< NVENCODE API input buffer                              *\/$/;"	t
NV_ENC_INPUT_RESOURCE_TYPE	ObsNvenc/inc/nvEncodeAPI.h	/^} NV_ENC_INPUT_RESOURCE_TYPE;$/;"	t
NV_ENC_INPUT_RESOURCE_TYPE_CUDAARRAY	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_INPUT_RESOURCE_TYPE_CUDAARRAY        = 0x2,   \/**< input resource type is a cuda array surface *\/$/;"	e	enum:_NV_ENC_INPUT_RESOURCE_TYPE
NV_ENC_INPUT_RESOURCE_TYPE_CUDADEVICEPTR	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_INPUT_RESOURCE_TYPE_CUDADEVICEPTR    = 0x1,   \/**< input resource type is a cuda device pointer surface*\/$/;"	e	enum:_NV_ENC_INPUT_RESOURCE_TYPE
NV_ENC_INPUT_RESOURCE_TYPE_DIRECTX	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_INPUT_RESOURCE_TYPE_DIRECTX          = 0x0,   \/**< input resource type is a directx9 surface*\/$/;"	e	enum:_NV_ENC_INPUT_RESOURCE_TYPE
NV_ENC_KEY_STREAMING	ObsNvenc/inc/nvmain.h	/^static const GUID NV_ENC_KEY_STREAMING =$/;"	v
NV_ENC_LEVEL	ObsNvenc/inc/nvEncodeAPI.h	/^} NV_ENC_LEVEL;$/;"	t
NV_ENC_LEVEL_AUTOSELECT	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_LEVEL_AUTOSELECT         = 0,$/;"	e	enum:_NV_ENC_LEVEL
NV_ENC_LEVEL_H264_1	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_LEVEL_H264_1             = 10,$/;"	e	enum:_NV_ENC_LEVEL
NV_ENC_LEVEL_H264_11	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_LEVEL_H264_11            = 11,$/;"	e	enum:_NV_ENC_LEVEL
NV_ENC_LEVEL_H264_12	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_LEVEL_H264_12            = 12,$/;"	e	enum:_NV_ENC_LEVEL
NV_ENC_LEVEL_H264_13	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_LEVEL_H264_13            = 13,$/;"	e	enum:_NV_ENC_LEVEL
NV_ENC_LEVEL_H264_1b	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_LEVEL_H264_1b            = 9,$/;"	e	enum:_NV_ENC_LEVEL
NV_ENC_LEVEL_H264_2	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_LEVEL_H264_2             = 20,$/;"	e	enum:_NV_ENC_LEVEL
NV_ENC_LEVEL_H264_21	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_LEVEL_H264_21            = 21,$/;"	e	enum:_NV_ENC_LEVEL
NV_ENC_LEVEL_H264_22	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_LEVEL_H264_22            = 22,$/;"	e	enum:_NV_ENC_LEVEL
NV_ENC_LEVEL_H264_3	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_LEVEL_H264_3             = 30,$/;"	e	enum:_NV_ENC_LEVEL
NV_ENC_LEVEL_H264_31	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_LEVEL_H264_31            = 31,$/;"	e	enum:_NV_ENC_LEVEL
NV_ENC_LEVEL_H264_32	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_LEVEL_H264_32            = 32,$/;"	e	enum:_NV_ENC_LEVEL
NV_ENC_LEVEL_H264_4	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_LEVEL_H264_4             = 40,$/;"	e	enum:_NV_ENC_LEVEL
NV_ENC_LEVEL_H264_41	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_LEVEL_H264_41            = 41,$/;"	e	enum:_NV_ENC_LEVEL
NV_ENC_LEVEL_H264_42	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_LEVEL_H264_42            = 42,$/;"	e	enum:_NV_ENC_LEVEL
NV_ENC_LEVEL_H264_5	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_LEVEL_H264_5             = 50,$/;"	e	enum:_NV_ENC_LEVEL
NV_ENC_LEVEL_H264_51	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_LEVEL_H264_51            = 51,$/;"	e	enum:_NV_ENC_LEVEL
NV_ENC_LOCK_BITSTREAM	ObsNvenc/inc/nvEncodeAPI.h	/^} NV_ENC_LOCK_BITSTREAM;$/;"	t
NV_ENC_LOCK_BITSTREAM_VER	ObsNvenc/inc/nvEncodeAPI.h	1362;"	d
NV_ENC_LOCK_INPUT_BUFFER	ObsNvenc/inc/nvEncodeAPI.h	/^} NV_ENC_LOCK_INPUT_BUFFER;$/;"	t
NV_ENC_LOCK_INPUT_BUFFER_VER	ObsNvenc/inc/nvEncodeAPI.h	1382;"	d
NV_ENC_MAP_INPUT_RESOURCE	ObsNvenc/inc/nvEncodeAPI.h	/^} NV_ENC_MAP_INPUT_RESOURCE;$/;"	t
NV_ENC_MAP_INPUT_RESOURCE_VER	ObsNvenc/inc/nvEncodeAPI.h	1402;"	d
NV_ENC_MEMORY_HEAP	ObsNvenc/inc/nvEncodeAPI.h	/^} NV_ENC_MEMORY_HEAP;$/;"	t
NV_ENC_MEMORY_HEAP_AUTOSELECT	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_MEMORY_HEAP_AUTOSELECT      = 0, \/**< Memory heap to be decided by the encoder driver based on the usage *\/$/;"	e	enum:_NV_ENC_MEMORY_HEAP
NV_ENC_MEMORY_HEAP_SYSMEM_CACHED	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_MEMORY_HEAP_SYSMEM_CACHED   = 2, \/**< Memory heap is in cached system memory *\/$/;"	e	enum:_NV_ENC_MEMORY_HEAP
NV_ENC_MEMORY_HEAP_SYSMEM_UNCACHED	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_MEMORY_HEAP_SYSMEM_UNCACHED = 3  \/**< Memory heap is in uncached system memory *\/$/;"	e	enum:_NV_ENC_MEMORY_HEAP
NV_ENC_MEMORY_HEAP_VID	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_MEMORY_HEAP_VID             = 1, \/**< Memory heap is in local video memory *\/$/;"	e	enum:_NV_ENC_MEMORY_HEAP
NV_ENC_MV_PRECISION	ObsNvenc/inc/nvEncodeAPI.h	/^} NV_ENC_MV_PRECISION;$/;"	t
NV_ENC_MV_PRECISION_FULL_PEL	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_MV_PRECISION_FULL_PEL    = 0x01,    \/**< FullPel  motion vector precision *\/$/;"	e	enum:_NV_ENC_MV_PRECISION
NV_ENC_MV_PRECISION_HALF_PEL	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_MV_PRECISION_HALF_PEL    = 0x02,    \/**< HalfPel motion vector precision *\/$/;"	e	enum:_NV_ENC_MV_PRECISION
NV_ENC_MV_PRECISION_QUARTER_PEL	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_MV_PRECISION_QUARTER_PEL = 0x03     \/**< QuarterPel motion vector precision *\/$/;"	e	enum:_NV_ENC_MV_PRECISION
NV_ENC_OPEN_ENCODE_SESSION_EX_PARAMS	ObsNvenc/inc/nvEncodeAPI.h	/^} NV_ENC_OPEN_ENCODE_SESSION_EX_PARAMS;$/;"	t
NV_ENC_OPEN_ENCODE_SESSION_EX_PARAMS_VER	ObsNvenc/inc/nvEncodeAPI.h	1497;"	d
NV_ENC_OUTPUT_PTR	ObsNvenc/inc/nvEncodeAPI.h	/^typedef void* NV_ENC_OUTPUT_PTR;            \/**< NVENCODE API output buffer*\/$/;"	t
NV_ENC_PARAMS_FRAME_FIELD_MODE	ObsNvenc/inc/nvEncodeAPI.h	/^} NV_ENC_PARAMS_FRAME_FIELD_MODE;$/;"	t
NV_ENC_PARAMS_FRAME_FIELD_MODE_FIELD	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_PARAMS_FRAME_FIELD_MODE_FIELD = 0x02,  \/**< Field mode *\/$/;"	e	enum:_NV_ENC_PARAMS_FRAME_FIELD_MODE
NV_ENC_PARAMS_FRAME_FIELD_MODE_FRAME	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_PARAMS_FRAME_FIELD_MODE_FRAME = 0x01,  \/**< Frame mode *\/$/;"	e	enum:_NV_ENC_PARAMS_FRAME_FIELD_MODE
NV_ENC_PARAMS_FRAME_FIELD_MODE_MBAFF	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_PARAMS_FRAME_FIELD_MODE_MBAFF = 0x03   \/**< MB adaptive frame\/field *\/$/;"	e	enum:_NV_ENC_PARAMS_FRAME_FIELD_MODE
NV_ENC_PARAMS_RC_2_PASS_FRAMESIZE_CAP	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_PARAMS_RC_2_PASS_FRAMESIZE_CAP   = 0x10,      \/**< Multi pass encoding optimized for maintaining frame size and works only with low latency mode *\/$/;"	e	enum:_NV_ENC_PARAMS_RC_MODE
NV_ENC_PARAMS_RC_2_PASS_QUALITY	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_PARAMS_RC_2_PASS_QUALITY         = 0x8,       \/**< Multi pass encoding optimized for image quality and works only with low latency mode *\/$/;"	e	enum:_NV_ENC_PARAMS_RC_MODE
NV_ENC_PARAMS_RC_2_PASS_VBR	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_PARAMS_RC_2_PASS_VBR             = 0x20       \/**< Multi pass VBR *\/$/;"	e	enum:_NV_ENC_PARAMS_RC_MODE
NV_ENC_PARAMS_RC_CBR	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_PARAMS_RC_CBR                    = 0x2,       \/**< Constant bitrate mode *\/$/;"	e	enum:_NV_ENC_PARAMS_RC_MODE
NV_ENC_PARAMS_RC_CBR2	ObsNvenc/inc/nvEncodeAPI.h	267;"	d
NV_ENC_PARAMS_RC_CONSTQP	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_PARAMS_RC_CONSTQP                = 0x0,       \/**< Constant QP mode *\/$/;"	e	enum:_NV_ENC_PARAMS_RC_MODE
NV_ENC_PARAMS_RC_MODE	ObsNvenc/inc/nvEncodeAPI.h	/^} NV_ENC_PARAMS_RC_MODE;$/;"	t
NV_ENC_PARAMS_RC_VBR	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_PARAMS_RC_VBR                    = 0x1,       \/**< Variable bitrate mode *\/$/;"	e	enum:_NV_ENC_PARAMS_RC_MODE
NV_ENC_PARAMS_RC_VBR_MINQP	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_PARAMS_RC_VBR_MINQP              = 0x4,       \/**< Variable bitrate mode with MinQP *\/$/;"	e	enum:_NV_ENC_PARAMS_RC_MODE
NV_ENC_PIC_FLAGS	ObsNvenc/inc/nvEncodeAPI.h	/^} NV_ENC_PIC_FLAGS;$/;"	t
NV_ENC_PIC_FLAG_DYN_AQ_CHANGE	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_PIC_FLAG_DYN_AQ_CHANGE      = 0x200, \/**< Deprecated, use ::NvEncReconfigureEncoder() API *\/$/;"	e	enum:_NV_ENC_PIC_FLAGS
NV_ENC_PIC_FLAG_DYN_BITRATE_CHANGE	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_PIC_FLAG_DYN_BITRATE_CHANGE = 0x20,  \/**< Deprecated, use ::NvEncReconfigureEncoder() API *\/$/;"	e	enum:_NV_ENC_PIC_FLAGS
NV_ENC_PIC_FLAG_DYN_RCMODE_CHANGE	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_PIC_FLAG_DYN_RCMODE_CHANGE  = 0x80,  \/**< Deprecated, use ::NvEncReconfigureEncoder() API *\/$/;"	e	enum:_NV_ENC_PIC_FLAGS
NV_ENC_PIC_FLAG_DYN_RES_CHANGE	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_PIC_FLAG_DYN_RES_CHANGE     = 0x10,  \/**< Deprecated, use ::NvEncReconfigureEncoder() API *\/$/;"	e	enum:_NV_ENC_PIC_FLAGS
NV_ENC_PIC_FLAG_EOS	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_PIC_FLAG_EOS                = 0x8,   \/**< Indicates end of the input stream *\/ $/;"	e	enum:_NV_ENC_PIC_FLAGS
NV_ENC_PIC_FLAG_FORCEIDR	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_PIC_FLAG_FORCEIDR           = 0x2,   \/**< Encode the current picture as an IDR picture. $/;"	e	enum:_NV_ENC_PIC_FLAGS
NV_ENC_PIC_FLAG_FORCEINTRA	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_PIC_FLAG_FORCEINTRA         = 0x1,   \/**< Encode the current picture as an Intra picture *\/$/;"	e	enum:_NV_ENC_PIC_FLAGS
NV_ENC_PIC_FLAG_OUTPUT_SPSPPS	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_PIC_FLAG_OUTPUT_SPSPPS      = 0x4,   \/**< Write the sequence and picture header in encoded bitstream of the current picture *\/$/;"	e	enum:_NV_ENC_PIC_FLAGS
NV_ENC_PIC_FLAG_REINIT_ENCODER	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_PIC_FLAG_REINIT_ENCODER     = 0x100, \/**< Deprecated, use ::NvEncReconfigureEncoder() API *\/$/;"	e	enum:_NV_ENC_PIC_FLAGS
NV_ENC_PIC_FLAG_USER_FORCE_CONSTQP	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_PIC_FLAG_USER_FORCE_CONSTQP = 0x40,  \/**< Deprecated, use ::NvEncReconfigureEncoder() API *\/$/;"	e	enum:_NV_ENC_PIC_FLAGS
NV_ENC_PIC_PARAMS	ObsNvenc/inc/nvEncodeAPI.h	/^} NV_ENC_PIC_PARAMS;$/;"	t
NV_ENC_PIC_PARAMS_H264	ObsNvenc/inc/nvEncodeAPI.h	/^} NV_ENC_PIC_PARAMS_H264;$/;"	t
NV_ENC_PIC_PARAMS_VER	ObsNvenc/inc/nvEncodeAPI.h	1329;"	d
NV_ENC_PIC_STRUCT	ObsNvenc/inc/nvEncodeAPI.h	/^} NV_ENC_PIC_STRUCT;$/;"	t
NV_ENC_PIC_STRUCT_FIELD_BOTTOM_TOP	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_PIC_STRUCT_FIELD_BOTTOM_TOP  = 0x03                  \/**< Field encoding bottom field first *\/$/;"	e	enum:_NV_ENC_PIC_STRUCT
NV_ENC_PIC_STRUCT_FIELD_TOP_BOTTOM	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_PIC_STRUCT_FIELD_TOP_BOTTOM  = 0x02,                 \/**< Field encoding top field first *\/$/;"	e	enum:_NV_ENC_PIC_STRUCT
NV_ENC_PIC_STRUCT_FRAME	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_PIC_STRUCT_FRAME             = 0x01,                 \/**< Progressive frame *\/$/;"	e	enum:_NV_ENC_PIC_STRUCT
NV_ENC_PIC_TYPE	ObsNvenc/inc/nvEncodeAPI.h	/^} NV_ENC_PIC_TYPE;$/;"	t
NV_ENC_PIC_TYPE_B	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_PIC_TYPE_B               = 0x01,    \/**< Bi-directionally predicted picture *\/$/;"	e	enum:_NV_ENC_PIC_TYPE
NV_ENC_PIC_TYPE_BI	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_PIC_TYPE_BI              = 0x04,    \/**< Bi-directionally predicted with only Intra MBs *\/$/;"	e	enum:_NV_ENC_PIC_TYPE
NV_ENC_PIC_TYPE_I	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_PIC_TYPE_I               = 0x02,    \/**< Intra predicted picture *\/$/;"	e	enum:_NV_ENC_PIC_TYPE
NV_ENC_PIC_TYPE_IDR	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_PIC_TYPE_IDR             = 0x03,    \/**< IDR picture *\/$/;"	e	enum:_NV_ENC_PIC_TYPE
NV_ENC_PIC_TYPE_INTRA_REFRESH	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_PIC_TYPE_INTRA_REFRESH   = 0x06,    \/**< First picture in intra refresh cycle *\/$/;"	e	enum:_NV_ENC_PIC_TYPE
NV_ENC_PIC_TYPE_P	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_PIC_TYPE_P               = 0x0,     \/**< Forward predicted *\/$/;"	e	enum:_NV_ENC_PIC_TYPE
NV_ENC_PIC_TYPE_SKIPPED	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_PIC_TYPE_SKIPPED         = 0x05,    \/**< Picture is skipped *\/$/;"	e	enum:_NV_ENC_PIC_TYPE
NV_ENC_PIC_TYPE_UNKNOWN	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_PIC_TYPE_UNKNOWN         = 0xFF     \/**< Picture type unknown *\/$/;"	e	enum:_NV_ENC_PIC_TYPE
NV_ENC_PRESET_BD_GUID	ObsNvenc/inc/nvEncodeAPI.h	/^static const GUID NV_ENC_PRESET_BD_GUID  = $/;"	v
NV_ENC_PRESET_CONFIG	ObsNvenc/inc/nvEncodeAPI.h	/^}NV_ENC_PRESET_CONFIG;$/;"	t
NV_ENC_PRESET_CONFIG_VER	ObsNvenc/inc/nvEncodeAPI.h	1213;"	d
NV_ENC_PRESET_DEFAULT_GUID	ObsNvenc/inc/nvEncodeAPI.h	/^static const GUID NV_ENC_PRESET_DEFAULT_GUID =$/;"	v
NV_ENC_PRESET_HP_GUID	ObsNvenc/inc/nvEncodeAPI.h	/^static const GUID NV_ENC_PRESET_HP_GUID =$/;"	v
NV_ENC_PRESET_HQ_GUID	ObsNvenc/inc/nvEncodeAPI.h	/^static const GUID NV_ENC_PRESET_HQ_GUID =$/;"	v
NV_ENC_PRESET_LOSSLESS_DEFAULT_GUID	ObsNvenc/inc/nvEncodeAPI.h	/^static const GUID NV_ENC_PRESET_LOSSLESS_DEFAULT_GUID = $/;"	v
NV_ENC_PRESET_LOSSLESS_HP_GUID	ObsNvenc/inc/nvEncodeAPI.h	/^static const GUID NV_ENC_PRESET_LOSSLESS_HP_GUID = $/;"	v
NV_ENC_PRESET_LOW_LATENCY_DEFAULT_GUID	ObsNvenc/inc/nvEncodeAPI.h	/^static const GUID NV_ENC_PRESET_LOW_LATENCY_DEFAULT_GUID  = $/;"	v
NV_ENC_PRESET_LOW_LATENCY_HP_GUID	ObsNvenc/inc/nvEncodeAPI.h	/^static const GUID NV_ENC_PRESET_LOW_LATENCY_HP_GUID =$/;"	v
NV_ENC_PRESET_LOW_LATENCY_HQ_GUID	ObsNvenc/inc/nvEncodeAPI.h	/^static const GUID NV_ENC_PRESET_LOW_LATENCY_HQ_GUID  = $/;"	v
NV_ENC_PRESET_STREAMING	ObsNvenc/inc/nvmain.h	/^static const GUID NV_ENC_PRESET_STREAMING =$/;"	v
NV_ENC_QP	ObsNvenc/inc/nvEncodeAPI.h	/^} NV_ENC_QP;$/;"	t
NV_ENC_RC_PARAMS	ObsNvenc/inc/nvEncodeAPI.h	/^ } NV_ENC_RC_PARAMS;$/;"	t
NV_ENC_RC_PARAMS_VER	ObsNvenc/inc/nvEncodeAPI.h	985;"	d
NV_ENC_RECONFIGURE_PARAMS	ObsNvenc/inc/nvEncodeAPI.h	/^}NV_ENC_RECONFIGURE_PARAMS;$/;"	t
NV_ENC_RECONFIGURE_PARAMS_VER	ObsNvenc/inc/nvEncodeAPI.h	1198;"	d
NV_ENC_REGISTERED_PTR	ObsNvenc/inc/nvEncodeAPI.h	/^typedef void* NV_ENC_REGISTERED_PTR;        \/**< A Resource that has beenr egistered with NVENCODE API*\/$/;"	t
NV_ENC_REGISTER_RESOURCE	ObsNvenc/inc/nvEncodeAPI.h	/^} NV_ENC_REGISTER_RESOURCE;$/;"	t
NV_ENC_REGISTER_RESOURCE_VER	ObsNvenc/inc/nvEncodeAPI.h	1424;"	d
NV_ENC_SEQUENCE_PARAM_PAYLOAD	ObsNvenc/inc/nvEncodeAPI.h	/^} NV_ENC_SEQUENCE_PARAM_PAYLOAD;$/;"	t
NV_ENC_SEQUENCE_PARAM_PAYLOAD_VER	ObsNvenc/inc/nvEncodeAPI.h	1465;"	d
NV_ENC_SLICE_TYPE	ObsNvenc/inc/nvEncodeAPI.h	/^} NV_ENC_SLICE_TYPE;$/;"	t
NV_ENC_SLICE_TYPE_DEFAULT	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_SLICE_TYPE_DEFAULT         = 0x0,   \/**< Slice type is same as picture type *\/$/;"	e	enum:_NV_ENC_SLICE_TYPE
NV_ENC_SLICE_TYPE_I	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_SLICE_TYPE_I               = 0x02,  \/**< Intra predicted slice *\/$/;"	e	enum:_NV_ENC_SLICE_TYPE
NV_ENC_SLICE_TYPE_UNKNOWN	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_SLICE_TYPE_UNKNOWN         = 0xFF   \/**< Slice type unknown *\/$/;"	e	enum:_NV_ENC_SLICE_TYPE
NV_ENC_STAT	ObsNvenc/inc/nvEncodeAPI.h	/^} NV_ENC_STAT;$/;"	t
NV_ENC_STAT_VER	ObsNvenc/inc/nvEncodeAPI.h	1445;"	d
NV_ENC_STEREO_PACKING_MODE	ObsNvenc/inc/nvEncodeAPI.h	/^} NV_ENC_STEREO_PACKING_MODE;$/;"	t
NV_ENC_STEREO_PACKING_MODE_CHECKERBOARD	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_STEREO_PACKING_MODE_CHECKERBOARD     = 0x1,  \/**< Checkerboard mode for packing stereo frames *\/$/;"	e	enum:_NV_ENC_STEREO_PACKING_MODE
NV_ENC_STEREO_PACKING_MODE_COLINTERLEAVE	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_STEREO_PACKING_MODE_COLINTERLEAVE    = 0x2,  \/**< Column Interleave mode for packing stereo frames *\/$/;"	e	enum:_NV_ENC_STEREO_PACKING_MODE
NV_ENC_STEREO_PACKING_MODE_FRAMESEQ	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_STEREO_PACKING_MODE_FRAMESEQ         = 0x6   \/**< Frame Sequential mode for packing stereo frames *\/$/;"	e	enum:_NV_ENC_STEREO_PACKING_MODE
NV_ENC_STEREO_PACKING_MODE_NONE	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_STEREO_PACKING_MODE_NONE             = 0x0,  \/**< No Stereo packing required *\/$/;"	e	enum:_NV_ENC_STEREO_PACKING_MODE
NV_ENC_STEREO_PACKING_MODE_ROWINTERLEAVE	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_STEREO_PACKING_MODE_ROWINTERLEAVE    = 0x3,  \/**< Row Interleave mode for packing stereo frames *\/$/;"	e	enum:_NV_ENC_STEREO_PACKING_MODE
NV_ENC_STEREO_PACKING_MODE_SIDEBYSIDE	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_STEREO_PACKING_MODE_SIDEBYSIDE       = 0x4,  \/**< Side-by-side mode for packing stereo frames *\/$/;"	e	enum:_NV_ENC_STEREO_PACKING_MODE
NV_ENC_STEREO_PACKING_MODE_TOPBOTTOM	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_STEREO_PACKING_MODE_TOPBOTTOM        = 0x5,  \/**< Top-Bottom mode for packing stereo frames *\/$/;"	e	enum:_NV_ENC_STEREO_PACKING_MODE
NV_ENC_SUCCESS	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_SUCCESS,$/;"	e	enum:_NVENCSTATUS
NV_MAX_SEQ_HDR_LEN	ObsNvenc/inc/nvEncodeAPI.h	149;"	d
NV_WINDOWS	ObsNvenc/src/nvEncodeAPI.cpp	22;"	d	file:
N_FORMAT	Source/LogUploader.cpp	220;"	d	file:
N_FORMAT	Source/LogUploader.cpp	226;"	d	file:
NalHrdConformance	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16      NalHrdConformance;      \/* tri-state option *\/$/;"	m
Name	CLRBrowserSourcePlugin/Plugin/Shared/BrowserPlugin.cs	/^        public String Name { get; private set; }$/;"	p	class:Shared.BrowserPlugin
Name	lame/ACM/tinyxml/tinyxml.h	/^	const std::string& Name()  const { return name; }		\/\/\/< Return the name of this attribute.$/;"	f	class:TiXmlAttribute
NamedSharedMemory	QSVHelper/WindowsStuff.h	/^    NamedSharedMemory() : memory(nullptr) {}$/;"	f	struct:NamedSharedMemory
NamedSharedMemory	QSVHelper/WindowsStuff.h	/^    NamedSharedMemory(NamedSharedMemory&& other)$/;"	f	struct:NamedSharedMemory
NamedSharedMemory	QSVHelper/WindowsStuff.h	/^    NamedSharedMemory(std::wstring name, uint64_t size=1) : name(name), size(size), memory(nullptr) { InitMemory(); }$/;"	f	struct:NamedSharedMemory
NamedSharedMemory	QSVHelper/WindowsStuff.h	/^struct NamedSharedMemory$/;"	s
NetworkFailed	Source/OBS.h	/^    inline void NetworkFailed() { if (hwndMain) PostMessage(hwndMain, OBS_NETWORK_FAILED, 0, 0); }$/;"	f	class:OBS
NetworkPacket	Source/RTMPPublisher.h	/^struct NetworkPacket$/;"	s
NetworkStream	Source/OBS.h	/^class NetworkStream : public ClosableStream$/;"	c
NewCapture	GraphicsCapture/GraphicsCaptureSource.cpp	/^void GraphicsCaptureSource::NewCapture()$/;"	f	class:GraphicsCaptureSource
NewElementCopy	OBSApi/Utility/XConfig.cpp	/^XElement* XElement::NewElementCopy(XElement* element, bool bSelfAsRoot)$/;"	f	class:XElement
NewPatch	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	110;"	d	file:
NewSegment	DShowPlugin/CaptureFilter.cpp	/^STDMETHODIMP CapturePin::NewSegment(REFERENCE_TIME tStart, REFERENCE_TIME tStop, double dRate) {return S_OK;}$/;"	f	class:CapturePin
Next	DShowPlugin/CaptureFilter.cpp	/^STDMETHODIMP CaptureEnumMediaTypes::Next(ULONG cMediaTypes, AM_MEDIA_TYPE **ppMediaTypes, ULONG *pcFetched) {return S_FALSE;}$/;"	f	class:CaptureEnumMediaTypes
Next	DShowPlugin/CaptureFilter.cpp	/^STDMETHODIMP CaptureEnumPins::Next(ULONG cPins, IPin **ppPins, ULONG *pcFetched)$/;"	f	class:CaptureEnumPins
Next	lame/ACM/tinyxml/tinyxml.cpp	/^TiXmlAttribute* TiXmlAttribute::Next() const$/;"	f	class:TiXmlAttribute
Next	lame/dshow/REG.H	/^	LONG Next(LPTSTR pszStr, DWORD cbName)$/;"	f	class:Lame::CRegEnumKey
NextSibling	lame/ACM/tinyxml/tinyxml.cpp	/^TiXmlNode* TiXmlNode::NextSibling( const std::string& value ) const$/;"	f	class:TiXmlNode
NextSibling	lame/ACM/tinyxml/tinyxml.h	/^	TiXmlNode* NextSibling() const				{ return next; }$/;"	f	class:TiXmlNode
NextSiblingElement	lame/ACM/tinyxml/tinyxml.cpp	/^TiXmlElement* TiXmlNode::NextSiblingElement( const std::string& value ) const$/;"	f	class:TiXmlNode
NextSiblingElement	lame/ACM/tinyxml/tinyxml.cpp	/^TiXmlElement* TiXmlNode::NextSiblingElement() const$/;"	f	class:TiXmlNode
NoAudioAvailable	OBSApi/AudioSource.h	/^    NoAudioAvailable,$/;"	e
NoChildren	lame/ACM/tinyxml/tinyxml.h	/^	bool NoChildren() const						{ return !firstChild; }$/;"	f	class:TiXmlNode
NodeType	lame/ACM/tinyxml/tinyxml.h	/^	enum NodeType $/;"	g	class:TiXmlNode
NoiseGate	NoiseGate/NoiseGate.cpp	/^NoiseGate::NoiseGate()$/;"	f	class:NoiseGate
NoiseGate	NoiseGate/NoiseGate.h	/^class NoiseGate$/;"	c
NoiseGate.cpp	NoiseGate/NoiseGate.cpp	1;"	F
NoiseGate.h	NoiseGate/NoiseGate.h	1;"	F
NoiseGateFilter	NoiseGate/NoiseGate.cpp	/^NoiseGateFilter::NoiseGateFilter(NoiseGate *parent)$/;"	f	class:NoiseGateFilter
NoiseGateFilter	NoiseGate/NoiseGate.h	/^class NoiseGateFilter : public AudioFilter$/;"	c
NoiseGateSettings	NoiseGate/NoiseGate.cpp	/^NoiseGateSettings::NoiseGateSettings(NoiseGate *parent)$/;"	f	class:NoiseGateSettings
NoiseGateSettings	NoiseGate/NoiseGate.h	/^class NoiseGateSettings : public SettingsPane$/;"	c
NoiselessBitCount	libfaac/huffman.c	/^int NoiselessBitCount(CoderInfo *coderInfo,$/;"	f
NominalRange	libmfx/include/msdk/include/mfxstructures.h	/^        mfxU16  NominalRange;$/;"	m
NonAnchorRefL0	libmfx/include/msdk/include/mfxmvc.h	/^    mfxU16 NonAnchorRefL0[16];$/;"	m
NonAnchorRefL1	libmfx/include/msdk/include/mfxmvc.h	/^    mfxU16 NonAnchorRefL1[16];$/;"	m
NonDelegatingQueryInterface	lame/dshow/Mpegac.cpp	/^STDMETHODIMP CMpegAudEnc::NonDelegatingQueryInterface(REFIID riid, void ** ppv) $/;"	f	class:CMpegAudEnc
NonDelegatingQueryInterface	lame/dshow/Mpegac.cpp	/^STDMETHODIMP CMpegAudEncOutPin::NonDelegatingQueryInterface(REFIID riid, void **ppv)$/;"	f	class:CMpegAudEncOutPin
Norm	OBSApi/Utility/XMath.h	/^    inline Quat& Norm()$/;"	f	struct:Quat
Norm	OBSApi/Utility/XMath.h	/^    inline Vect& Norm()$/;"	f	struct:Vect
Norm	OBSApi/Utility/XMath.h	/^    inline Vect2& Norm()$/;"	f	struct:Vect2
NormFull	OBSApi/Utility/XMath.h	/^    inline Vect4& NormFull()$/;"	f	struct:Vect4
NormToPolar	OBSApi/Utility/XMath.cpp	/^Vect2 NormToPolar(const Vect &norm)$/;"	f
NormToPolar	OBSApi/Utility/XMath.cpp	/^void NormToPolar(const Vect &norm, float &latitude, float &longitude)$/;"	f
NormXYZ	OBSApi/Utility/XMath.h	/^    inline Vect4& NormXYZ()$/;"	f	struct:Vect4
Normal	OBSApi/GraphicsSystem.cpp	/^void GraphicsSystem::Normal(const Vect &v)$/;"	f	class:GraphicsSystem
Normal	OBSApi/GraphicsSystem.cpp	/^void GraphicsSystem::Normal(float x, float y, float z)$/;"	f	class:GraphicsSystem
Normal	OBSApi/GraphicsSystem.h	/^inline void  Normal(const Vect &v)                              {GS->Normal(v);}$/;"	f
Normal	OBSApi/GraphicsSystem.h	/^inline void  Normal(float x, float y, float z)                  {GS->Normal(x, y, z);}$/;"	f
NormalList	OBSApi/GraphicsSystem.h	/^    List<Vect>      NormalList;$/;"	m	struct:VBData
NotAResampler	OBSApi/AudioSource.cpp	/^struct NotAResampler$/;"	s	file:
NotImpl0	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/RenderProcess.cs	/^        int NotImpl0();$/;"	m	interface:Browser.IAudioSessionControl2
NotImpl1	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/RenderProcess.cs	/^        int NotImpl1();$/;"	m	interface:Browser.IAudioSessionControl2
NotImpl1	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/RenderProcess.cs	/^        int NotImpl1();$/;"	m	interface:Browser.IAudioSessionManager2
NotImpl1	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/RenderProcess.cs	/^        int NotImpl1();$/;"	m	interface:Browser.IMMDeviceEnumerator
NotImpl2	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/RenderProcess.cs	/^        int NotImpl2();$/;"	m	interface:Browser.IAudioSessionControl2
NotImpl2	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/RenderProcess.cs	/^        int NotImpl2();$/;"	m	interface:Browser.IAudioSessionManager2
NotifyAllocator	DShowPlugin/CaptureFilter.cpp	/^STDMETHODIMP CapturePin::NotifyAllocator(IMemAllocator *pAllocator, BOOL bReadOnly)    {return S_OK;}$/;"	f	class:CapturePin
NuitFieldBasedFlag	libmfx/include/msdk/include/mfxstructures.h	/^      mfxU16    NuitFieldBasedFlag;$/;"	m
NullAudioEncoder	Source/NullOutput.cpp	/^class NullAudioEncoder : public AudioEncoder$/;"	c	file:
NullNetwork	Source/NullOutput.cpp	/^class NullNetwork : public NetworkStream$/;"	c	file:
NullOutput.cpp	Source/NullOutput.cpp	1;"	F
NullVideoEncoder	Source/NullOutput.cpp	/^class NullVideoEncoder : public VideoEncoder$/;"	c	file:
Num	OBSApi/Utility/Template.h	/^    inline UINT Num() {return bitSize;}$/;"	f	class:BitList
Num	OBSApi/Utility/Template.h	/^    inline unsigned int Num() const     {return num;}$/;"	f	class:List
Num	OBSApi/Utility/Template.h	/^    inline unsigned int Num() const$/;"	f	class:CircularList
NumACTable	libmfx/include/msdk/include/mfxjpeg.h	/^    mfxU16  NumACTable;$/;"	m
NumAlg	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU32          NumAlg;$/;"	m
NumAnchorRefsL0	libmfx/include/msdk/include/mfxmvc.h	/^    mfxU16 NumAnchorRefsL0;$/;"	m
NumAnchorRefsL1	libmfx/include/msdk/include/mfxmvc.h	/^    mfxU16 NumAnchorRefsL1;$/;"	m
NumAudioChannels	Source/OBS.h	/^    inline UINT NumAudioChannels() const {return audioChannels;}$/;"	f	class:OBS
NumAudioFilters	OBSApi/AudioSource.cpp	/^UINT AudioSource::NumAudioFilters() const {return audioFilters.Num();}$/;"	f	class:AudioSource
NumAuxAudioSources	Source/API.cpp	/^    virtual UINT NumAuxAudioSources() const$/;"	f	class:OBSAPIInterface
NumBaseItems	OBSApi/Utility/XConfig.cpp	/^DWORD XElement::NumBaseItems(CTSTR lpName)$/;"	f	class:XElement
NumBit	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU32      NumBit;     \/* number of bits *\/$/;"	m
NumBit	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU64  NumBit;$/;"	m
NumBuffersExpected	Source/D3D10System.h	/^    inline UINT NumBuffersExpected() const$/;"	f	class:D3D10VertexShader
NumCachedFrame	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU32  NumCachedFrame;$/;"	m
NumChannel	libmfx/include/msdk/include/mfxastructures.h	/^    mfxU16  NumChannel;$/;"	m
NumChannels	libmfx/include/msdk/include/mfxastructures.h	/^    mfxU16  NumChannels;$/;"	m
NumDCTable	libmfx/include/msdk/include/mfxjpeg.h	/^    mfxU16  NumDCTable;$/;"	m
NumDataItems	OBSApi/Utility/XConfig.cpp	/^DWORD XElement::NumDataItems(CTSTR lpName)$/;"	f	class:XElement
NumDroppedFrames	Source/BandwidthAnalysis.cpp	/^    DWORD NumDroppedFrames() const {return 0;}$/;"	f	class:BandwidthAnalyzer
NumDroppedFrames	Source/NullOutput.cpp	/^    virtual DWORD NumDroppedFrames() const {return 0;}$/;"	f	class:NullNetwork	file:
NumDroppedFrames	Source/RTMPPublisher.cpp	/^DWORD RTMPPublisher::NumDroppedFrames() const$/;"	f	class:RTMPPublisher
NumElements	OBSApi/Utility/XConfig.cpp	/^DWORD XElement::NumElements(CTSTR lpName)$/;"	f	class:XElement
NumError	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU32  NumError;$/;"	m
NumEvicts	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    DWORD   NumEvicts;              \/* number of objects evicted *\/$/;"	m	struct:_D3DRESOURCESTATS
NumExtParam	libmfx/include/msdk/include/mfxastructures.h	/^    mfxU16            NumExtParam;$/;"	m
NumExtParam	libmfx/include/msdk/include/mfxastructures.h	/^    mfxU32  NumExtParam;$/;"	m
NumExtParam	libmfx/include/msdk/include/mfxcommon.h	/^            mfxU16  NumExtParam;$/;"	m
NumExtParam	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16  NumExtParam;$/;"	m
NumExtraClippingTriangles	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    DWORD   NumExtraClippingTriangles;  \/* Number of new triangles generated by clipping *\/$/;"	m	struct:_D3DDEVINFO_D3DVERTEXSTATS
NumFrame	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU32  NumFrame;$/;"	m
NumFrameActual	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16      NumFrameActual;$/;"	m
NumFrameMin	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16  NumFrameMin;$/;"	m
NumFrameSuggested	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16  NumFrameSuggested;$/;"	m
NumInputStream	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16      NumInputStream;$/;"	m
NumMbPerSlice	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16      NumMbPerSlice;$/;"	m
NumMonitors	Source/OBS.h	/^    inline UINT NumMonitors()  const {return monitors.Num();}$/;"	f	class:OBS
NumNonAnchorRefsL0	libmfx/include/msdk/include/mfxmvc.h	/^    mfxU16 NumNonAnchorRefsL0;$/;"	m
NumNonAnchorRefsL1	libmfx/include/msdk/include/mfxmvc.h	/^    mfxU16 NumNonAnchorRefsL1;$/;"	m
NumOP	libmfx/include/msdk/include/mfxmvc.h	/^    mfxU32 NumOP;$/;"	m
NumOPAlloc	libmfx/include/msdk/include/mfxmvc.h	/^    mfxU32 NumOPAlloc;$/;"	m
NumParams	Source/D3D10Shader.cpp	/^int    D3D10Shader::NumParams() const$/;"	f	class:D3D10Shader
NumPayload	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16  NumPayload;     \/* MPEG-2 user data or H.264 SEI message(s) *\/$/;"	m
NumPlugins	Source/OBS.h	/^    UINT NumPlugins() const {return plugins.Num();}$/;"	f	class:OBS
NumROI	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16  NumROI;$/;"	m
NumRefFrame	libmfx/include/msdk/include/mfxstructures.h	/^            mfxU16  NumRefFrame;$/;"	m
NumRefIdxL0Active	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16          NumRefIdxL0Active;$/;"	m
NumRefIdxL1Active	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16          NumRefIdxL1Active;$/;"	m
NumRefsTotal	libmfx/include/msdk/include/mfxmvc.h	/^    mfxU16 NumRefsTotal;$/;"	m
NumRenderedTriangles	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    DWORD   NumRenderedTriangles;       \/* total number of triangles that are not clipped in this frame *\/$/;"	m	struct:_D3DDEVINFO_D3DVERTEXSTATS
NumSceneItems	OBSApi/Scene.h	/^    inline UINT NumSceneItems() const {return sceneItems.Num();}$/;"	f	class:Scene
NumSkippedFrame	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU32  NumSkippedFrame;$/;"	m
NumSlice	libmfx/include/msdk/include/mfxstructures.h	/^            mfxU16  NumSlice;$/;"	m
NumSurface	libmfx/include/msdk/include/mfxstructures.h	/^        mfxU16  NumSurface;$/;"	m
NumTable	libmfx/include/msdk/include/mfxjpeg.h	/^    mfxU16  NumTable;$/;"	m
NumTargetViews	libmfx/include/msdk/include/mfxmvc.h	/^    mfxU16 NumTargetViews;$/;"	m
NumThread	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16  NumThread;$/;"	m
NumTokens	OBSApi/Utility/XString.cpp	/^int String::NumTokens(TCHAR token) const$/;"	f	class:String
NumTotalVideoFrames	Source/BandwidthAnalysis.cpp	/^    DWORD NumTotalVideoFrames() const {return 1;}$/;"	f	class:BandwidthAnalyzer
NumTotalVideoFrames	Source/NullOutput.cpp	/^    virtual DWORD NumTotalVideoFrames() const {return framesRendered;}$/;"	f	class:NullNetwork	file:
NumTotalVideoFrames	Source/RTMPPublisher.h	/^    DWORD NumTotalVideoFrames() const {return totalVideoFrames;}$/;"	f	class:RTMPPublisher
NumUsed	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    DWORD   NumUsed;                \/* number of objects set to the device *\/$/;"	m	struct:_D3DRESOURCESTATS
NumUsedInVidMem	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    DWORD   NumUsedInVidMem;        \/* number of objects set to the device, which are already in video memory *\/$/;"	m	struct:_D3DRESOURCESTATS
NumVertices	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    UINT                NumVertices;$/;"	m	struct:_D3DTRIPATCH_INFO
NumVidCreates	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    DWORD   NumVidCreates;          \/* number of objects created in video memory *\/$/;"	m	struct:_D3DRESOURCESTATS
NumView	libmfx/include/msdk/include/mfxmvc.h	/^    mfxU32 NumView;$/;"	m
NumViewAlloc	libmfx/include/msdk/include/mfxmvc.h	/^    mfxU32 NumViewAlloc;$/;"	m
NumViewId	libmfx/include/msdk/include/mfxmvc.h	/^    mfxU32 NumViewId;$/;"	m
NumViewIdAlloc	libmfx/include/msdk/include/mfxmvc.h	/^    mfxU32 NumViewIdAlloc;$/;"	m
NumViews	libmfx/include/msdk/include/mfxmvc.h	/^    mfxU16 NumViews;$/;"	m
NumWorkingThread	libmfx/include/msdk/include/mfxplugin.h	/^    mfxU32  NumWorkingThread;$/;"	m	struct:mfxCoreParam
NumericStringIDs	lame/libmp3lame/id3tag.c	/^typedef enum NumericStringIDs { ID_DATE = FRAME_ID('T', 'D', 'A', 'T') \/* "ddMM" *\/$/;"	g	file:
NumericStringIDs	lame/libmp3lame/id3tag.c	/^} NumericStringIDs;$/;"	t	file:
NvAppConfig	ObsNvenc/src/nvmain.cpp	/^ConfigFile **NvAppConfig = 0;$/;"	v
NvLog	ObsNvenc/inc/nvmain.h	30;"	d
OBJDUMP	lame/ACM/ADbg/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	lame/ACM/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	lame/ACM/ddk/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	lame/ACM/tinyxml/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	lame/Dll/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	lame/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	lame/debian/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	lame/doc/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	lame/doc/html/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	lame/doc/man/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	lame/dshow/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	lame/frontend/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	lame/include/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	lame/libmp3lame/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	lame/libmp3lame/i386/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	lame/libmp3lame/vector/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	lame/mac/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	lame/macosx/English.lproj/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	lame/macosx/LAME.xcodeproj/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	lame/macosx/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	lame/misc/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	lame/mpglib/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	lame/vc_solution/Makefile	/^OBJDUMP = objdump$/;"	m
OBJEXT	lame/ACM/ADbg/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	lame/ACM/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	lame/ACM/ddk/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	lame/ACM/tinyxml/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	lame/Dll/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	lame/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	lame/debian/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	lame/doc/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	lame/doc/html/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	lame/doc/man/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	lame/dshow/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	lame/frontend/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	lame/include/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	lame/libmp3lame/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	lame/libmp3lame/i386/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	lame/libmp3lame/vector/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	lame/mac/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	lame/macosx/English.lproj/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	lame/macosx/LAME.xcodeproj/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	lame/macosx/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	lame/misc/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	lame/mpglib/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	lame/vc_solution/Makefile	/^OBJEXT = o$/;"	m
OBS	Source/OBS.cpp	/^OBS::OBS()$/;"	f	class:OBS
OBS	Source/OBS.h	/^class OBS$/;"	c
OBS.cpp	Source/OBS.cpp	1;"	F
OBS.h	Source/OBS.h	1;"	F
OBSAPIInterface	Source/API.cpp	/^class OBSAPIInterface : public APIInterface$/;"	c	file:
OBSAddAudioSource	OBSApi/APIDefs.cpp	/^void OBSAddAudioSource(AudioSource *source)     {API->AddAudioSource(source);}$/;"	f
OBSAddSettingsPane	OBSApi/APIDefs.cpp	/^void OBSAddSettingsPane(SettingsPane *pane)     {API->AddSettingsPane(pane);}$/;"	f
OBSAddStreamInfo	OBSApi/APIDefs.cpp	/^UINT OBSAddStreamInfo(CTSTR lpInfo, StreamInfoPriority priority)            {return API->AddStreamInfo(lpInfo, priority);}$/;"	f
OBSApi.cpp	OBSApi/OBSApi.cpp	1;"	F
OBSApi.h	OBSApi/OBSApi.h	1;"	F
OBSCONFIGPROC	OBSApi/APIInterface.h	/^typedef bool (STDCALL* OBSCONFIGPROC)(XElement*, bool); \/\/element, bInitializing$/;"	t
OBSCREATEPROC	OBSApi/APIInterface.h	/^typedef LPVOID (STDCALL* OBSCREATEPROC)(XElement*); \/\/data$/;"	t
OBSCapture.cpp	Source/OBSCapture.cpp	1;"	F
OBSCreateDialog	OBSApi/OBSApi.cpp	/^HWND OBSCreateDialog(HINSTANCE hInstance, LPCWSTR lpTemplateName, HWND hWndParent, DLGPROC lpDialogFunc, LPARAM dwInitParam)$/;"	f
OBSCreateHotkey	OBSApi/APIDefs.cpp	/^UINT OBSCreateHotkey(DWORD hotkey, OBSHOTKEYPROC hotkeyProc, UPARAM param)$/;"	f
OBSCreateImageSource	OBSApi/APIDefs.cpp	/^ImageSource* OBSCreateImageSource(CTSTR lpClassName, XElement *data)$/;"	f
OBSDeleteHotkey	OBSApi/APIDefs.cpp	/^void OBSDeleteHotkey(UINT hotkeyID)$/;"	f
OBSDialogBox	OBSApi/OBSApi.cpp	/^INT_PTR OBSDialogBox(HINSTANCE hInstance, LPCWSTR lpTemplateName, HWND hWndParent, DLGPROC lpDialogFunc, LPARAM dwInitParam)$/;"	f
OBSDisableTransitions	OBSApi/APIDefs.cpp	/^void OBSDisableTransitions()    { API->DisableTransitions(); }$/;"	f
OBSEnableTransitions	OBSApi/APIDefs.cpp	/^void OBSEnableTransitions()     { API->EnableTransitions(); }$/;"	f
OBSEnterSceneMutex	OBSApi/APIDefs.cpp	/^void OBSEnterSceneMutex() {API->EnterSceneMutex();}$/;"	f
OBSEvents.cpp	Source/OBSEvents.cpp	1;"	F
OBSExceptionHandler	Source/CrashDumpHandler.cpp	/^LONG CALLBACK OBSExceptionHandler (PEXCEPTION_POINTERS exceptionInfo)$/;"	f
OBSGetAPIVersion	OBSApi/APIDefs.cpp	/^UINT OBSGetAPIVersion()                         {return 0x0103;}$/;"	f
OBSGetAppDataPath	OBSApi/APIDefs.cpp	/^CTSTR OBSGetAppDataPath()       {return API->GetAppDataPath();}$/;"	f
OBSGetAppPath	OBSApi/APIDefs.cpp	/^CTSTR OBSGetAppPath()           {return API->GetAppPath();}$/;"	f
OBSGetAudioTime	OBSApi/APIDefs.cpp	/^QWORD OBSGetAudioTime()         {return API->GetAudioTime();}$/;"	f
OBSGetAuxAudioSource	OBSApi/APIDefs.cpp	/^AudioSource* OBSGetAuxAudioSource(UINT id)  {return API->GetAuxAudioSource(id);}$/;"	f
OBSGetBaseSize	OBSApi/APIDefs.cpp	/^Vect2 OBSGetBaseSize()          {return API->GetBaseSize();}$/;"	f
OBSGetBaseSize	OBSApi/APIDefs.cpp	/^void OBSGetBaseSize(UINT &width, UINT &height)                  {API->GetBaseSize(width, height);}$/;"	f
OBSGetBytesPerSec	OBSApi/APIDefs.cpp	/^UINT OBSGetBytesPerSec()        {return API->GetBytesPerSec();}$/;"	f
OBSGetCaptureFPS	OBSApi/APIDefs.cpp	/^UINT OBSGetCaptureFPS()                                         {return API->GetCaptureFPS();}$/;"	f
OBSGetCurDesktopVolumeStats	OBSApi/APIDefs.cpp	/^void OBSGetCurDesktopVolumeStats(float *rms, float *max, float *peak)   {API->GetCurDesktopVolumeStats(rms, max, peak);}$/;"	f
OBSGetCurMicVolumeStats	OBSApi/APIDefs.cpp	/^void OBSGetCurMicVolumeStats(float *rms, float *max, float *peak)       {API->GetCurMicVolumeStats(rms, max, peak);}$/;"	f
OBSGetDesktopAudioSource	OBSApi/APIDefs.cpp	/^AudioSource* OBSGetDesktopAudioSource()     {return API->GetDesktopAudioSource();}$/;"	f
OBSGetDesktopMuted	OBSApi/APIDefs.cpp	/^bool OBSGetDesktopMuted()                                   {return API->GetDesktopMuted();}$/;"	f
OBSGetDesktopVolume	OBSApi/APIDefs.cpp	/^float OBSGetDesktopVolume()                                 {return API->GetDesktopVolume();}$/;"	f
OBSGetFramesDropped	OBSApi/APIDefs.cpp	/^UINT OBSGetFramesDropped()                                      {return API->GetFramesDropped();}$/;"	f
OBSGetGlobalSourceListElement	OBSApi/APIDefs.cpp	/^XElement* OBSGetGlobalSourceListElement()$/;"	f
OBSGetKeepRecording	OBSApi/APIDefs.cpp	/^bool OBSGetKeepRecording()      {return API->GetKeepRecording();}$/;"	f
OBSGetLanguage	OBSApi/APIDefs.cpp	/^CTSTR OBSGetLanguage()          {return API->GetLanguage();}$/;"	f
OBSGetMainWindow	OBSApi/APIDefs.cpp	/^HWND OBSGetMainWindow()         {return API->GetMainWindow();}$/;"	f
OBSGetMaxFPS	OBSApi/APIDefs.cpp	/^UINT OBSGetMaxFPS()                                             {return API->GetMaxFPS();}$/;"	f
OBSGetMicAudioSource	OBSApi/APIDefs.cpp	/^AudioSource* OBSGetMicAudioSource()         {return API->GetMicAudioSource();}$/;"	f
OBSGetMicMuted	OBSApi/APIDefs.cpp	/^bool OBSGetMicMuted()                                       {return API->GetMicMuted();}$/;"	f
OBSGetMicVolume	OBSApi/APIDefs.cpp	/^float OBSGetMicVolume()                                     {return API->GetMicVolume();}$/;"	f
OBSGetOutputSize	OBSApi/APIDefs.cpp	/^Vect2 OBSGetOutputSize()        {return API->GetOutputSize();}$/;"	f
OBSGetOutputSize	OBSApi/APIDefs.cpp	/^void OBSGetOutputSize(UINT &width, UINT &height)                {API->GetOutputSize(width, height);}$/;"	f
OBSGetPluginDataPath	OBSApi/APIDefs.cpp	/^String OBSGetPluginDataPath()   {return API->GetPluginDataPath();}$/;"	f
OBSGetPreviewOnly	OBSApi/APIDefs.cpp	/^bool OBSGetPreviewOnly()        {return API->GetPreviewOnly();}$/;"	f
OBSGetRecording	OBSApi/APIDefs.cpp	/^bool OBSGetRecording()          {return API->GetRecording();}$/;"	f
OBSGetRecordingReplayBuffer	OBSApi/APIDefs.cpp	/^bool OBSGetRecordingReplayBuffer()       {return API->GetRecordingReplayBuffer();}$/;"	f
OBSGetRenderFrameControlSize	OBSApi/APIDefs.cpp	/^void OBSGetRenderFrameControlSize(UINT &width, UINT &height)    {API->GetRenderFrameControlSize(width, height);}$/;"	f
OBSGetRenderFrameIn1To1Mode	OBSApi/APIDefs.cpp	/^bool OBSGetRenderFrameIn1To1Mode()                              {return API->GetRenderFrameIn1To1Mode();}$/;"	f
OBSGetRenderFrameOffset	OBSApi/APIDefs.cpp	/^void OBSGetRenderFrameOffset(UINT &x, UINT &y)                  {API->GetRenderFrameOffset(x, y);}$/;"	f
OBSGetRenderFrameSize	OBSApi/APIDefs.cpp	/^Vect2 OBSGetRenderFrameSize()   {return API->GetRenderFrameSize();}$/;"	f
OBSGetRenderFrameSize	OBSApi/APIDefs.cpp	/^void OBSGetRenderFrameSize(UINT &width, UINT &height)           {API->GetRenderFrameSize(width, height);}$/;"	f
OBSGetSampleRateHz	OBSApi/APIDefs.cpp	/^UINT OBSGetSampleRateHz()                       {return API->GetSampleRateHz();}$/;"	f
OBSGetScene	OBSApi/APIDefs.cpp	/^Scene* OBSGetScene()            {return API->GetScene();}$/;"	f
OBSGetSceneCollectionName	OBSApi/APIDefs.cpp	/^CTSTR OBSGetSceneCollectionName()                   { return API->GetSceneCollectionName(); }$/;"	f
OBSGetSceneCollectionNames	OBSApi/APIDefs.cpp	/^void OBSGetSceneCollectionNames(StringList &list)   { API->GetSceneCollectionNames(list); }$/;"	f
OBSGetSceneElement	OBSApi/APIDefs.cpp	/^XElement* OBSGetSceneElement()  {return API->GetSceneElement();}$/;"	f
OBSGetSceneImageSource	OBSApi/APIInterface.h	/^inline ImageSource* OBSGetSceneImageSource(CTSTR lpImageSource)$/;"	f
OBSGetSceneListElement	OBSApi/APIDefs.cpp	/^XElement* OBSGetSceneListElement()$/;"	f
OBSGetSceneName	OBSApi/APIDefs.cpp	/^CTSTR OBSGetSceneName()         {return API->GetSceneName();}$/;"	f
OBSGetStreaming	OBSApi/APIDefs.cpp	/^bool OBSGetStreaming()          {return API->GetStreaming();}$/;"	f
OBSGetTotalFrames	OBSApi/APIDefs.cpp	/^UINT OBSGetTotalFrames()                                        {return API->GetTotalFrames();}$/;"	f
OBSGetTotalStreamTime	OBSApi/APIDefs.cpp	/^UINT OBSGetTotalStreamTime()    {return API->GetTotalStreamTime();}$/;"	f
OBSGetVersion	OBSApi/APIDefs.cpp	/^DWORD OBSGetVersion()                       {return API->GetOBSVersion();}$/;"	f
OBSHOTKEYPROC	OBSApi/APIInterface.h	/^typedef void (STDCALL* OBSHOTKEYPROC)(DWORD, UPARAM, bool);$/;"	t
OBSHotkeyHandlers.cpp	Source/OBSHotkeyHandlers.cpp	1;"	F
OBSIsTestVersion	OBSApi/APIDefs.cpp	/^bool OBSIsTestVersion()                     {return API->IsTestVersion();}$/;"	f
OBSLeaveSceneMutex	OBSApi/APIDefs.cpp	/^void OBSLeaveSceneMutex() {API->LeaveSceneMutex();}$/;"	f
OBSLog	Source/Main.cpp	/^void OBSLog(const char *log, ...)$/;"	f
OBSLog	Source/Main.cpp	/^void OBSLog(const wchar_t *log, ...)$/;"	f
OBSMessageBox	OBSApi/OBSApi.cpp	/^int OBSMessageBox(HWND hwnd, LPCTSTR lpText, LPCTSTR lpCaption, UINT flags)$/;"	f
OBSNumAuxAudioSources	OBSApi/APIDefs.cpp	/^UINT OBSNumAuxAudioSources()                {return API->NumAuxAudioSources();}$/;"	f
OBSProc	Source/WindowStuff.cpp	/^LRESULT CALLBACK OBS::OBSProc(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam)$/;"	f	class:OBS
OBSRegisterImageSourceClass	OBSApi/APIDefs.cpp	/^void OBSRegisterImageSourceClass(CTSTR lpClassName, CTSTR lpDisplayName, OBSCREATEPROC createProc, OBSCONFIGPROC configProc)$/;"	f
OBSRegisterSceneClass	OBSApi/APIDefs.cpp	/^void OBSRegisterSceneClass(CTSTR lpClassName, CTSTR lpDisplayName,$/;"	f
OBSRemoveAudioSource	OBSApi/APIDefs.cpp	/^void OBSRemoveAudioSource(AudioSource *source)  {API->RemoveAudioSource(source);}$/;"	f
OBSRemoveSettingsPane	OBSApi/APIDefs.cpp	/^void OBSRemoveSettingsPane(SettingsPane *pane)  {API->RemoveSettingsPane(pane);}$/;"	f
OBSRemoveStreamInfo	OBSApi/APIDefs.cpp	/^void OBSRemoveStreamInfo(UINT infoID)                                       {API->RemoveStreamInfo(infoID);}$/;"	f
OBSSaveReplayBuffer	OBSApi/APIDefs.cpp	/^void OBSSaveReplayBuffer()               {API->SaveReplayBuffer();}$/;"	f
OBSSetDesktopVolume	OBSApi/APIDefs.cpp	/^void OBSSetDesktopVolume(float val, bool finalValue)        {API->SetDesktopVolume(val, finalValue);}$/;"	f
OBSSetMicVolume	OBSApi/APIDefs.cpp	/^void OBSSetMicVolume(float val, bool finalValue)            {API->SetMicVolume(val, finalValue);}$/;"	f
OBSSetScene	OBSApi/APIDefs.cpp	/^bool OBSSetScene(CTSTR lpScene, bool bPost)$/;"	f
OBSSetSceneCollection	OBSApi/APIDefs.cpp	/^bool OBSSetSceneCollection(CTSTR lpCollection, CTSTR lpScene)$/;"	f
OBSSetSourceOrder	OBSApi/APIDefs.cpp	/^void OBSSetSourceOrder(StringList &sourceNames)             {API->SetSourceOrder(sourceNames);}$/;"	f
OBSSetSourceRender	OBSApi/APIDefs.cpp	/^void OBSSetSourceRender(CTSTR lpSource, bool render)        {API->SetSourceRender(lpSource, render);}$/;"	f
OBSSetStreamInfo	OBSApi/APIDefs.cpp	/^void OBSSetStreamInfo(UINT infoID, CTSTR lpInfo)                            {API->SetStreamInfo(infoID, lpInfo);}$/;"	f
OBSSetStreamInfoPriority	OBSApi/APIDefs.cpp	/^void OBSSetStreamInfoPriority(UINT infoID, StreamInfoPriority priority)     {API->SetStreamInfoPriority(infoID, priority);}$/;"	f
OBSStartStopPreview	OBSApi/APIDefs.cpp	/^void OBSStartStopPreview()      {API->StartStopPreview();}$/;"	f
OBSStartStopRecording	OBSApi/APIDefs.cpp	/^void OBSStartStopRecording()    {API->StartStopRecording();}$/;"	f
OBSStartStopRecordingReplayBuffer	OBSApi/APIDefs.cpp	/^void OBSStartStopRecordingReplayBuffer() {API->StartStopRecordingReplayBuffer();}$/;"	f
OBSStartStopStream	OBSApi/APIDefs.cpp	/^void OBSStartStopStream()       {API->StartStopStream();}$/;"	f
OBSToggleDesktopMute	OBSApi/APIDefs.cpp	/^void OBSToggleDesktopMute()                                 {API->ToggleDesktopMute();}$/;"	f
OBSToggleMicMute	OBSApi/APIDefs.cpp	/^void OBSToggleMicMute()                                     {API->ToggleMicMute();}$/;"	f
OBSTransitionsEnabled	OBSApi/APIDefs.cpp	/^bool OBSTransitionsEnabled()    { return API->TransitionsEnabled(); }$/;"	f
OBSUpdateLog	Source/WindowStuff.cpp	/^static void OBSUpdateLog()$/;"	f	file:
OBSUseMultithreadedOptimizations	OBSApi/APIDefs.cpp	/^bool OBSUseMultithreadedOptimizations()         {return API->UseMultithreadedOptimizations();}$/;"	f
OBSUtils.cpp	CLRHostPlugin/CLRHostInterop/OBSUtils.cpp	1;"	F
OBSUtils.h	CLRHostPlugin/CLRHostInterop/OBSUtils.h	1;"	F
OBSVideoCapture.cpp	Source/OBSVideoCapture.cpp	1;"	F
OBS_CALLBACK	Source/OBS.h	/^typedef void (*OBS_CALLBACK)();$/;"	t
OBS_CALLHOTKEY	Source/OBS.h	/^    OBS_CALLHOTKEY,$/;"	e
OBS_CONFIGURE_STREAM_BUTTONS	Source/OBS.h	/^    OBS_CONFIGURE_STREAM_BUTTONS,$/;"	e
OBS_CONFIG_UPDATE_KEY	Source/Main.h	100;"	d
OBS_CONFIG_UPDATE_KEY	Source/Main.h	102;"	d
OBS_DISABLE_AUTOUPDATE	Source/Main.h	92;"	d
OBS_DISABLE_AUTOUPDATE	Source/Main.h	96;"	d
OBS_KEEPALIVE_EVENT	GraphicsCapture/GlobalCaptureStuff.h	39;"	d
OBS_LOGWINDOW_CLASS	Source/Main.h	106;"	d
OBS_LOG_UPDATE_CALLBACK	Source/OBS.h	/^typedef void (*OBS_LOG_UPDATE_CALLBACK)(CTSTR \/*delta*\/, UINT \/*length*\/);$/;"	t
OBS_NETWORK_FAILED	Source/OBS.h	/^    OBS_NETWORK_FAILED,$/;"	e
OBS_NOTIFICATIONAREA	Source/OBS.h	/^    OBS_NOTIFICATIONAREA,$/;"	e
OBS_PROJECTORFRAME_CLASS	Source/Main.h	108;"	d
OBS_RECONNECT	Source/OBS.h	/^    OBS_RECONNECT,$/;"	e
OBS_RENDERFRAME_CLASS	Source/Main.h	107;"	d
OBS_REPLAY_BUFFER_SAVED_CALLBACK	Source/OBS.h	/^typedef void (*OBS_REPLAY_BUFFER_SAVED_CALLBACK)(CTSTR filename, UINT recordingLengthMS);$/;"	t
OBS_REQUESTSTOP	Source/OBS.h	/^    OBS_REQUESTSTOP=WM_USER+1,$/;"	e
OBS_SCENE_SWITCH_CALLBACK	Source/OBS.h	/^typedef void (*OBS_SCENE_SWITCH_CALLBACK)(CTSTR);$/;"	t
OBS_SETSCENE	Source/OBS.h	/^    OBS_SETSCENE,$/;"	e
OBS_SETSOURCEORDER	Source/OBS.h	/^    OBS_SETSOURCEORDER,$/;"	e
OBS_SETSOURCERENDER	Source/OBS.h	/^    OBS_SETSOURCERENDER,$/;"	e
OBS_SOURCE_CHANGED_CALLBACK	Source/OBS.h	/^typedef void (*OBS_SOURCE_CHANGED_CALLBACK)(CTSTR \/*sourceName*\/, XElement* \/*source*\/); $/;"	t
OBS_STATUS_CALLBACK	Source/OBS.h	/^typedef void (*OBS_STATUS_CALLBACK)(bool \/*running*\/, bool \/*streaming*\/, bool \/*recording*\/,$/;"	t
OBS_STREAM_STATUS_CALLBACK	Source/OBS.h	/^typedef void (*OBS_STREAM_STATUS_CALLBACK)(bool \/*streaming*\/, bool \/*previewOnly*\/,$/;"	t
OBS_UPDATESTATUSBAR	Source/OBS.h	/^    OBS_UPDATESTATUSBAR,$/;"	e
OBS_VERSION	Source/Main.h	84;"	d
OBS_VERSION_STRING	Source/Main.h	89;"	d
OBS_VERSION_STRING_ANSI	Source/Main.h	88;"	d
OBS_VERSION_STRING_RAW	Source/Main.h	85;"	d
OBS_VERSION_SUFFIX	Source/Main.h	81;"	d
OBS_VOLUME_CHANGED_CALLBACK	Source/OBS.h	/^typedef void (*OBS_VOLUME_CHANGED_CALLBACK)(float \/*level*\/, bool \/*muted*\/, bool \/*finalFalue*\/);$/;"	t
OBS_WINDOW_CLASS	GraphicsCapture/GlobalCaptureStuff.h	23;"	d
OBS_WINDOW_CLASS	Source/Main.h	105;"	d
OFF	librtmp/rtmp.c	575;"	d	file:
OFFSETOF	libsamplerate/common.h	45;"	d
OLDHOOKS	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.h	44;"	d
ONLY_LONG_WINDOW	libfaac/coder.h	/^    ONLY_LONG_WINDOW,$/;"	e	enum:WINDOW_TYPE
ONLY_SHORT_WINDOW	libfaac/coder.h	/^    ONLY_SHORT_WINDOW,$/;"	e	enum:WINDOW_TYPE
OP	libmfx/include/msdk/include/mfxmvc.h	/^    mfxMVCOperationPoint *OP;$/;"	m
OPPROC	GraphicsCapture/GraphicsCapture.cpp	/^typedef HANDLE (WINAPI *OPPROC) (DWORD, BOOL, DWORD);$/;"	t	file:
OPPROC	GraphicsCapture/GraphicsCaptureSource.cpp	/^typedef HANDLE(WINAPI *OPPROC) (DWORD, BOOL, DWORD);$/;"	t	file:
OPPROC	injectHelper/injectHelper.c	/^typedef HANDLE(WINAPI *OPPROC) (DWORD, BOOL, DWORD);$/;"	t	file:
OPT_BOOL	librtmp/rtmp.c	/^enum { OPT_STR=0, OPT_INT, OPT_BOOL, OPT_CONN };$/;"	e	file:
OPT_CONN	librtmp/rtmp.c	/^enum { OPT_STR=0, OPT_INT, OPT_BOOL, OPT_CONN };$/;"	e	file:
OPT_INT	librtmp/rtmp.c	/^enum { OPT_STR=0, OPT_INT, OPT_BOOL, OPT_CONN };$/;"	e	file:
OPT_STR	librtmp/rtmp.c	/^enum { OPT_STR=0, OPT_INT, OPT_BOOL, OPT_CONN };$/;"	e	file:
OSCheckForBuggyDLLs	OBSApi/Utility/XT_Windows.cpp	/^VOID STDCALL OSCheckForBuggyDLLs ()$/;"	f
OSCloseEvent	OBSApi/Utility/XT_Windows.cpp	/^void OSCloseEvent(HANDLE event)$/;"	f
OSCloseMutex	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	/^void   WINAPI OSCloseMutex(HANDLE hMutex)$/;"	f
OSCloseMutex	OBSApi/Utility/XT_Windows.cpp	/^void   STDCALL OSCloseMutex(HANDLE hMutex)$/;"	f
OSCloseThread	OBSApi/Utility/XT_Windows.cpp	/^BOOL   STDCALL OSCloseThread(HANDLE hThread)$/;"	f
OSCopyFile	OBSApi/Utility/XT_Windows.cpp	/^BOOL   STDCALL OSCopyFile(CTSTR lpFileDest, CTSTR lpFileSrc)$/;"	f
OSCreateDirectory	OBSApi/Utility/XT_Windows.cpp	/^BOOL   STDCALL OSCreateDirectory(CTSTR lpDirectory)$/;"	f
OSCreateMutex	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	/^HANDLE WINAPI OSCreateMutex()$/;"	f
OSCreateMutex	OBSApi/Utility/XT_Windows.cpp	/^HANDLE STDCALL OSCreateMutex()$/;"	f
OSCreateThread	OBSApi/Utility/XT_Windows.cpp	/^HANDLE STDCALL OSCreateThread(XTHREAD lpThreadFunc, LPVOID param)$/;"	f
OSCriticalExit	OBSApi/Utility/XT_Windows.cpp	/^void   STDCALL OSCriticalExit()$/;"	f
OSDebugOut	OBSApi/Utility/XT_Windows.cpp	/^void __cdecl OSDebugOut(const TCHAR *format, ...)$/;"	f
OSDebugOutva	OBSApi/Utility/XT_Windows.cpp	/^void __cdecl OSDebugOutva(const TCHAR *format, va_list argptr)$/;"	f
OSDebuggerPresent	OBSApi/Utility/XT_Windows.cpp	/^BOOL STDCALL OSDebuggerPresent()$/;"	f
OSDeleteFile	OBSApi/Utility/XT_Windows.cpp	/^BOOL   STDCALL OSDeleteFile(CTSTR lpFile)$/;"	f
OSDirectoryMonitorCallback	OBSApi/Utility/XT.h	/^typedef void (*OSDirectoryMonitorCallback)();$/;"	t
OSDirectoryMonitorData	OBSApi/Utility/XT_Windows.cpp	/^struct OSDirectoryMonitorData$/;"	s	file:
OSEnterMutex	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	/^void   WINAPI OSEnterMutex(HANDLE hMutex)$/;"	f
OSEnterMutex	OBSApi/Utility/XT_Windows.cpp	/^void   STDCALL OSEnterMutex(HANDLE hMutex)$/;"	f
OSExit	OBSApi/Utility/XT_Windows.cpp	/^void   STDCALL OSExit()$/;"	f
OSExitProgram	OBSApi/Utility/XT_Windows.cpp	/^void   STDCALL OSExitProgram()$/;"	f
OSFileChangeData	OBSApi/Utility/XT_Windows.cpp	/^struct OSFileChangeData$/;"	s	file:
OSFileExists	OBSApi/Utility/XT_Windows.cpp	/^BOOL   STDCALL OSFileExists(CTSTR lpFile)$/;"	f
OSFileHasChanged	OBSApi/Utility/XT_Windows.cpp	/^BOOL STDCALL OSFileHasChanged (OSFileChangeData *data)$/;"	f
OSFileIsDirectory	OBSApi/Utility/XT_Windows.cpp	/^bool   STDCALL OSFileIsDirectory(CTSTR file)$/;"	f
OSFindClose	OBSApi/Utility/XT_Windows.cpp	/^void  STDCALL OSFindClose(HANDLE hFind)$/;"	f
OSFindData	OBSApi/Utility/XT.h	/^struct OSFindData$/;"	s
OSFindFirstFile	OBSApi/Utility/XT_Windows.cpp	/^HANDLE STDCALL OSFindFirstFile(CTSTR lpFileName, OSFindData &findData)$/;"	f
OSFindNextFile	OBSApi/Utility/XT_Windows.cpp	/^BOOL  STDCALL OSFindNextFile(HANDLE hFind, OSFindData &findData)$/;"	f
OSFreeLibrary	OBSApi/Utility/XT_Windows.cpp	/^void   STDCALL OSFreeLibrary(HANDLE hLibrary)$/;"	f
OSGetCurrentThread	OBSApi/Utility/XT_Windows.cpp	/^HANDLE STDCALL OSGetCurrentThread()$/;"	f
OSGetCursorPos	OBSApi/Utility/XT_Windows.cpp	/^void STDCALL OSGetCursorPos(int &x, int &y)$/;"	f
OSGetDefaultVideoSavePath	OBSApi/Utility/XT_Windows.cpp	/^String STDCALL OSGetDefaultVideoSavePath(CTSTR append)$/;"	f
OSGetErrorString	OBSApi/Utility/XT_Windows.cpp	/^CTSTR STDCALL OSGetErrorString(DWORD errorCode)$/;"	f
OSGetFileModificationTime	OBSApi/Utility/XT_Windows.cpp	/^QWORD STDCALL OSGetFileModificationTime(String path)$/;"	f
OSGetLoadedModuleList	OBSApi/Utility/XT_Windows.cpp	/^BOOL   STDCALL OSGetLoadedModuleList(HANDLE hProcess, StringList &ModuleList)$/;"	f
OSGetLogicalCores	OBSApi/Utility/XT_Windows.cpp	/^int    STDCALL OSGetLogicalCores()$/;"	f
OSGetProcAddress	OBSApi/Utility/XT_Windows.cpp	/^DEFPROC STDCALL OSGetProcAddress(HANDLE hLibrary, LPCSTR lpProcedure)$/;"	f
OSGetProcessorCount	OBSApi/Utility/XT_Windows.cpp	/^UINT STDCALL OSGetProcessorCount()$/;"	f
OSGetSysPageSize	OBSApi/Utility/XT_Windows.cpp	/^DWORD  STDCALL OSGetSysPageSize()$/;"	f
OSGetThreadTime	OBSApi/Utility/XT_Windows.cpp	/^QWORD STDCALL OSGetThreadTime(HANDLE thread)$/;"	f
OSGetTime	OBSApi/Utility/XT_Windows.cpp	/^DWORD STDCALL OSGetTime()$/;"	f
OSGetTimeDoubleMS	OBSApi/Utility/XT_Windows.cpp	/^double STDCALL OSGetTimeDoubleMS()$/;"	f
OSGetTimeMicroseconds	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	/^LONGLONG WINAPI OSGetTimeMicroseconds()$/;"	f
OSGetTimeMicroseconds	OBSApi/Utility/XT_Windows.cpp	/^QWORD STDCALL OSGetTimeMicroseconds()$/;"	f
OSGetTotalCores	OBSApi/Utility/XT_Windows.cpp	/^int    STDCALL OSGetTotalCores()$/;"	f
OSGetVersion	OBSApi/Utility/XT_Windows.cpp	/^int    STDCALL OSGetVersion()$/;"	f
OSIncompatibleModulesLoaded	OBSApi/Utility/XT_Windows.cpp	/^BOOL   STDCALL OSIncompatibleModulesLoaded()$/;"	f
OSIncompatiblePatchesLoaded	OBSApi/Utility/XT_Windows.cpp	/^BOOL   STDCALL OSIncompatiblePatchesLoaded(String &errors)$/;"	f
OSInit	OBSApi/Utility/XT_Windows.cpp	/^void   STDCALL OSInit()$/;"	f
OSInitializeTimer	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	/^void WINAPI OSInitializeTimer()$/;"	f
OSLeaveMutex	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	/^void   WINAPI OSLeaveMutex(HANDLE hMutex)$/;"	f
OSLeaveMutex	OBSApi/Utility/XT_Windows.cpp	/^void   STDCALL OSLeaveMutex(HANDLE hMutex)$/;"	f
OSLoadLibrary	OBSApi/Utility/XT_Windows.cpp	/^HANDLE STDCALL OSLoadLibrary(CTSTR lpFile)$/;"	f
OSMessageBox	OBSApi/Utility/XT_Windows.cpp	/^void __cdecl OSMessageBox(const TCHAR *format, ...)$/;"	f
OSMessageBoxva	OBSApi/Utility/XT_Windows.cpp	/^void __cdecl OSMessageBoxva(const TCHAR *format, va_list argptr)$/;"	f
OSMonitorDirectoryCallback	OBSApi/Utility/XT_Windows.cpp	/^OSDirectoryMonitorData *OSMonitorDirectoryCallback(String path, OSDirectoryMonitorCallback callback)$/;"	f
OSMonitorDirectoryCallbackStop	OBSApi/Utility/XT_Windows.cpp	/^void OSMonitorDirectoryCallbackStop(OSDirectoryMonitorData *data)$/;"	f
OSMonitorDirectoryThread	OBSApi/Utility/XT_Windows.cpp	/^static DWORD WINAPI OSMonitorDirectoryThread(void *arg)$/;"	f	file:
OSMonitorFileDestroy	OBSApi/Utility/XT_Windows.cpp	/^VOID STDCALL OSMonitorFileDestroy (OSFileChangeData *data)$/;"	f
OSMonitorFileStart	OBSApi/Utility/XT_Windows.cpp	/^OSFileChangeData * STDCALL OSMonitorFileStart(String path, bool suppressLogging)$/;"	f
OSMutexLocker	ObsNvenc/inc/nvmain.h	/^    OSMutexLocker(HANDLE &h) : h(h), enabled(true) { OSEnterMutex(h); }$/;"	f	struct:OSMutexLocker
OSMutexLocker	ObsNvenc/inc/nvmain.h	/^    OSMutexLocker(OSMutexLocker &&other) : h(other.h), enabled(other.enabled) { other.enabled = false; }$/;"	f	struct:OSMutexLocker
OSMutexLocker	ObsNvenc/inc/nvmain.h	/^struct OSMutexLocker$/;"	s
OSProcessEvent	OBSApi/Utility/XT_Windows.cpp	/^int   STDCALL OSProcessEvent()$/;"	f
OSRaiseException	OBSApi/Utility/XT_Windows.cpp	/^void OSRaiseException(DWORD code)$/;"	f
OSRenameFile	OBSApi/Utility/XT_Windows.cpp	/^BOOL   STDCALL OSRenameFile(CTSTR oldPath, CTSTR newPath)$/;"	f
OSS	librtmp/rtmp.c	418;"	d	file:
OSS	librtmp/rtmp.c	420;"	d	file:
OSS	librtmp/rtmp.c	422;"	d	file:
OSS	librtmp/rtmp.c	424;"	d	file:
OSS	librtmp/rtmp.c	426;"	d	file:
OSS	librtmp/rtmp.c	428;"	d	file:
OSSetCurrentDirectory	OBSApi/Utility/XT_Windows.cpp	/^BOOL   STDCALL OSSetCurrentDirectory(CTSTR lpDirectory)$/;"	f
OSSetCursorPos	OBSApi/Utility/XT_Windows.cpp	/^void STDCALL OSSetCursorPos(int x, int y)$/;"	f
OSSetMainAppWindow	OBSApi/Utility/XT_Windows.cpp	/^void   STDCALL OSSetMainAppWindow(HANDLE window)$/;"	f
OSShowCursor	OBSApi/Utility/XT_Windows.cpp	/^void STDCALL OSShowCursor(BOOL bShow)$/;"	f
OSSleep	OBSApi/Utility/XT_Windows.cpp	/^void   STDCALL OSSleep(DWORD dwMSeconds)$/;"	f
OSSleep100NS	OBSApi/Utility/XT_Windows.cpp	/^void   STDCALL OSSleep100NS(QWORD qw100NSTime)$/;"	f
OSSleepMicrosecond	OBSApi/Utility/XT_Windows.cpp	/^void   STDCALL OSSleepMicrosecond(QWORD qwMicroseconds)$/;"	f
OSSleepSubMillisecond	OBSApi/Utility/XT_Windows.cpp	/^void   STDCALL OSSleepSubMillisecond(double fMSeconds)$/;"	f
OSTerminateThread	OBSApi/Utility/XT_Windows.cpp	/^BOOL   STDCALL OSTerminateThread(HANDLE hThread, DWORD waitMS)$/;"	f
OSTryEnterMutex	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	/^BOOL   WINAPI OSTryEnterMutex(HANDLE hMutex)$/;"	f
OSTryEnterMutex	OBSApi/Utility/XT_Windows.cpp	/^BOOL   STDCALL OSTryEnterMutex(HANDLE hMutex)$/;"	f
OSVirtualAlloc	OBSApi/Utility/XT_Windows.cpp	/^LPVOID STDCALL OSVirtualAlloc(size_t dwSize)$/;"	f
OSVirtualFree	OBSApi/Utility/XT_Windows.cpp	/^void   STDCALL OSVirtualFree(LPVOID lpData)$/;"	f
OSWaitForThread	OBSApi/Utility/XT_Windows.cpp	/^BOOL   STDCALL OSWaitForThread(HANDLE hThread, LPDWORD ret)$/;"	f
OS_IS_WIN32	libsamplerate/config.h	157;"	d
OTOOL	lame/ACM/ADbg/Makefile	/^OTOOL = $/;"	m
OTOOL	lame/ACM/Makefile	/^OTOOL = $/;"	m
OTOOL	lame/ACM/ddk/Makefile	/^OTOOL = $/;"	m
OTOOL	lame/ACM/tinyxml/Makefile	/^OTOOL = $/;"	m
OTOOL	lame/Dll/Makefile	/^OTOOL = $/;"	m
OTOOL	lame/Makefile	/^OTOOL = $/;"	m
OTOOL	lame/debian/Makefile	/^OTOOL = $/;"	m
OTOOL	lame/doc/Makefile	/^OTOOL = $/;"	m
OTOOL	lame/doc/html/Makefile	/^OTOOL = $/;"	m
OTOOL	lame/doc/man/Makefile	/^OTOOL = $/;"	m
OTOOL	lame/dshow/Makefile	/^OTOOL = $/;"	m
OTOOL	lame/frontend/Makefile	/^OTOOL = $/;"	m
OTOOL	lame/include/Makefile	/^OTOOL = $/;"	m
OTOOL	lame/libmp3lame/Makefile	/^OTOOL = $/;"	m
OTOOL	lame/libmp3lame/i386/Makefile	/^OTOOL = $/;"	m
OTOOL	lame/libmp3lame/vector/Makefile	/^OTOOL = $/;"	m
OTOOL	lame/mac/Makefile	/^OTOOL = $/;"	m
OTOOL	lame/macosx/English.lproj/Makefile	/^OTOOL = $/;"	m
OTOOL	lame/macosx/LAME.xcodeproj/Makefile	/^OTOOL = $/;"	m
OTOOL	lame/macosx/Makefile	/^OTOOL = $/;"	m
OTOOL	lame/misc/Makefile	/^OTOOL = $/;"	m
OTOOL	lame/mpglib/Makefile	/^OTOOL = $/;"	m
OTOOL	lame/vc_solution/Makefile	/^OTOOL = $/;"	m
OTOOL64	lame/ACM/ADbg/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	lame/ACM/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	lame/ACM/ddk/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	lame/ACM/tinyxml/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	lame/Dll/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	lame/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	lame/debian/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	lame/doc/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	lame/doc/html/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	lame/doc/man/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	lame/dshow/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	lame/frontend/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	lame/include/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	lame/libmp3lame/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	lame/libmp3lame/i386/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	lame/libmp3lame/vector/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	lame/mac/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	lame/macosx/English.lproj/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	lame/macosx/LAME.xcodeproj/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	lame/macosx/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	lame/misc/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	lame/mpglib/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	lame/vc_solution/Makefile	/^OTOOL64 = $/;"	m
OUT	QSVHelper/QSVStuff.cpp	233;"	d	file:
OUT	QSVHelper/QSVStuff.cpp	252;"	d	file:
OUT	QSVHelper/QSVStuff.cpp	256;"	d	file:
OUTSIZE_CLIPPED	lame/libmp3lame/mpglib_interface.c	245;"	d	file:
OUTSIZE_UNCLIPPED	lame/libmp3lame/mpglib_interface.c	349;"	d	file:
OUT_BUFFER_GUARD	lame/dshow/Encoder.h	46;"	d
OUT_BUFFER_MAX	lame/dshow/Encoder.h	48;"	d
OUT_BUFFER_SIZE	lame/dshow/Encoder.h	45;"	d
O_BINARY	Source/mongoose.c	1369;"	d	file:
OfferResources	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *OfferResources )( $/;"	m	struct:IDXGIDevice2Vtbl
Offset	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    UINT                Offset;$/;"	m	struct:_D3DRANGE
OffsetVal	Source/MP4FileStream.cpp	/^struct OffsetVal$/;"	s	file:
OldValue	lame/libmp3lame/util.h	/^        int     OldValue[2];$/;"	m
OnActivate	lame/dshow/PropPage.cpp	/^HRESULT CMpegAudEncPropertyPage::OnActivate(void)$/;"	f	class:CMpegAudEncPropertyPage
OnActivate	lame/dshow/PropPage_adv.cpp	/^HRESULT CMpegAudEncPropertyPageAdv::OnActivate(void)$/;"	f	class:CMpegAudEncPropertyPageAdv
OnActivate	lame/dshow/aboutprp.cpp	/^HRESULT CMAEAbout::OnActivate(void)$/;"	f	class:CMAEAbout
OnAddressChange	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserDisplayHandler.cs	/^        protected override void OnAddressChange(CefBrowser browser, CefFrame frame, string url)$/;"	m	class:Browser.BrowserDisplayHandler
OnAfterCreated	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserLifeSpanHandler.cs	/^        protected override void OnAfterCreated(CefBrowser browser)$/;"	m	class:Browser.BrowserLifeSpanHandler
OnApplyChanges	lame/dshow/PropPage.cpp	/^HRESULT CMpegAudEncPropertyPage::OnApplyChanges()$/;"	f	class:CMpegAudEncPropertyPage
OnApplyChanges	lame/dshow/PropPage_adv.cpp	/^HRESULT CMpegAudEncPropertyPageAdv::OnApplyChanges()$/;"	f	class:CMpegAudEncPropertyPageAdv
OnApplyChanges	lame/dshow/aboutprp.cpp	/^HRESULT CMAEAbout::OnApplyChanges(void)$/;"	f	class:CMAEAbout
OnBeforeClose	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserLifeSpanHandler.cs	/^        protected override void OnBeforeClose(CefBrowser browser)$/;"	m	class:Browser.BrowserLifeSpanHandler
OnBeforeClose	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserWrapper.cs	/^        private void OnBeforeClose(CefBrowser browser)$/;"	m	class:Browser.BrowserWrapper	file:
OnBeforeCloseEvent	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserLifeSpanHandler.cs	/^        public OnBeforeCloseEventHandler OnBeforeCloseEvent { private get; set; }$/;"	p	class:Browser.BrowserLifeSpanHandler
OnBeforeCloseEventHandler	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserLifeSpanHandler.cs	/^    public delegate void OnBeforeCloseEventHandler(CefBrowser browser);$/;"	m	namespace:Browser
OnBeforeCommandLineProcessing	CLRBrowserSourcePlugin/Plugin/Shared/BrowserApp.cs	/^        protected override void OnBeforeCommandLineProcessing(string processType, CefCommandLine commandLine)$/;"	m	class:Shared.BrowserApp
OnConnect	lame/dshow/PropPage.cpp	/^HRESULT CMpegAudEncPropertyPage::OnConnect(IUnknown *pUnknown)$/;"	f	class:CMpegAudEncPropertyPage
OnConnect	lame/dshow/PropPage_adv.cpp	/^HRESULT CMpegAudEncPropertyPageAdv::OnConnect(IUnknown *pUnknown)$/;"	f	class:CMpegAudEncPropertyPageAdv
OnConnect	lame/dshow/aboutprp.cpp	/^HRESULT CMAEAbout::OnConnect(IUnknown *pUnknown)$/;"	f	class:CMAEAbout
OnConsoleMessage	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserDisplayHandler.cs	/^        protected override bool OnConsoleMessage(CefBrowser browser, string message, string source, int line)$/;"	m	class:Browser.BrowserDisplayHandler
OnContextInitialized	CLRBrowserSourcePlugin/Plugin/Shared/BrowserApp.cs	/^            protected override void OnContextInitialized()$/;"	m	class:Shared.BrowserApp.BrowserProcessHandler
OnCursorChange	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserRenderHandler.cs	/^        protected override void OnCursorChange(CefBrowser browser, IntPtr cursorHandle)$/;"	m	class:Browser.BrowserRenderHandler
OnDeactivate	lame/dshow/PropPage.cpp	/^HRESULT CMpegAudEncPropertyPage::OnDeactivate(void)$/;"	f	class:CMpegAudEncPropertyPage
OnDeactivate	lame/dshow/PropPage_adv.cpp	/^HRESULT CMpegAudEncPropertyPageAdv::OnDeactivate(void)$/;"	f	class:CMpegAudEncPropertyPageAdv
OnDeactivate	lame/dshow/aboutprp.cpp	/^HRESULT CMAEAbout::OnDeactivate(void)$/;"	f	class:CMAEAbout
OnDesktopVolumeChanged	PSVPlugin/psvplugin.cpp	/^void OnDesktopVolumeChanged(float level, bool muted, bool finalValue)$/;"	f
OnDisconnect	lame/dshow/PropPage.cpp	/^HRESULT CMpegAudEncPropertyPage::OnDisconnect()$/;"	f	class:CMpegAudEncPropertyPage
OnDisconnect	lame/dshow/PropPage_adv.cpp	/^HRESULT CMpegAudEncPropertyPageAdv::OnDisconnect()$/;"	f	class:CMpegAudEncPropertyPageAdv
OnDisconnect	lame/dshow/aboutprp.cpp	/^HRESULT CMAEAbout::OnDisconnect()$/;"	f	class:CMAEAbout
OnDriverDetails	lame/ACM/ACM.cpp	/^inline DWORD ACM::OnDriverDetails(const HDRVR hdrvr, LPACMDRIVERDETAILS a_DriverDetail)$/;"	f	class:ACM
OnFormatDetails	lame/ACM/ACM.cpp	/^inline DWORD ACM::OnFormatDetails(LPACMFORMATDETAILS a_FormatDetails, const LPARAM a_Query)$/;"	f	class:ACM
OnFormatSuggest	lame/ACM/ACM.cpp	/^inline DWORD ACM::OnFormatSuggest(LPACMDRVFORMATSUGGEST a_FormatSuggest)$/;"	f	class:ACM
OnFormatTagDetails	lame/ACM/ACM.cpp	/^inline DWORD ACM::OnFormatTagDetails(LPACMFORMATTAGDETAILS a_FormatTagDetails, const LPARAM a_Query)$/;"	f	class:ACM
OnLoadEnd	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserLoadHandler.cs	/^        protected override void OnLoadEnd(CefBrowser browser, CefFrame frame, int httpStatusCode)$/;"	m	class:Browser.BrowserLoadHandler
OnLoadEnd	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserWrapper.cs	/^        public void OnLoadEnd(CefBrowser browser, CefFrame frame,$/;"	m	class:Browser.BrowserWrapper
OnLoadEndEvent	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserLoadHandler.cs	/^        public OnLoadEndEventHandler OnLoadEndEvent { private get; set; }$/;"	p	class:Browser.BrowserLoadHandler
OnLoadEndEventHandler	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserLoadHandler.cs	/^    public delegate void OnLoadEndEventHandler(CefBrowser browser, CefFrame frame, int httpStatusCode);$/;"	m	namespace:Browser
OnMicVolumeChanged	PSVPlugin/psvplugin.cpp	/^void OnMicVolumeChanged(float level, bool muted, bool finalValue)$/;"	f
OnPaint	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserRenderHandler.cs	/^        protected override void OnPaint(CefBrowser browser, CefPaintElementType type, CefRectangle[] dirtyRects, IntPtr buffer, int width, int height)$/;"	m	class:Browser.BrowserRenderHandler
OnPopupShow	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserRenderHandler.cs	/^        protected override void OnPopupShow(CefBrowser browser, bool show)$/;"	m	class:Browser.BrowserRenderHandler
OnPopupSize	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserRenderHandler.cs	/^        protected override void OnPopupSize(CefBrowser browser, CefRectangle rect)$/;"	m	class:Browser.BrowserRenderHandler
OnProcessMessageReceived	CLRBrowserSourcePlugin/Client/BrowserApp.cs	/^            protected override bool OnProcessMessageReceived(CefBrowser browser, CefProcessId sourceProcess, CefProcessMessage message)$/;"	m	class:Shared.BrowserApp.BrowserRenderProcessHandler
OnProcessMessageReceived	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserClient.cs	/^        protected override bool OnProcessMessageReceived(CefBrowser browser, CefProcessId sourceProcess, CefProcessMessage message)$/;"	m	class:Browser.BrowserClient
OnReceiveMessage	lame/dshow/PropPage.cpp	/^BOOL CMpegAudEncPropertyPage::OnReceiveMessage(HWND hwnd,UINT uMsg,WPARAM wParam,LPARAM lParam)$/;"	f	class:CMpegAudEncPropertyPage
OnReceiveMessage	lame/dshow/PropPage_adv.cpp	/^BOOL CMpegAudEncPropertyPageAdv::OnReceiveMessage(HWND hwnd,UINT uMsg,WPARAM wParam,LPARAM lParam)$/;"	f	class:CMpegAudEncPropertyPageAdv
OnReceiveMessage	lame/dshow/aboutprp.cpp	/^BOOL CMAEAbout::OnReceiveMessage( HWND hwnd$/;"	f	class:CMAEAbout
OnRegisterCustomSchemes	CLRBrowserSourcePlugin/Client/BrowserApp.cs	/^        protected override void OnRegisterCustomSchemes(CefSchemeRegistrar registrar)$/;"	m	class:Shared.BrowserApp
OnRegisterCustomSchemes	CLRBrowserSourcePlugin/Plugin/Shared/BrowserApp.cs	/^        protected override void OnRegisterCustomSchemes(CefSchemeRegistrar registrar)$/;"	m	class:Shared.BrowserApp
OnSceneSwitch	PSVPlugin/psvplugin.cpp	/^void OnSceneSwitch(CTSTR scene)$/;"	f
OnScrollOffsetChanged	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserRenderHandler.cs	/^        protected override void OnScrollOffsetChanged(CefBrowser browser)$/;"	m	class:Browser.BrowserRenderHandler
OnStartStream	CLRHostPlugin/CLRHostInterop/AbstractPlugin.h	/^        virtual void OnStartStream() {};$/;"	f	class:CLROBS::abstract
OnStartStream	CLRHostPlugin/CLRHostPlugin/CLRHost.cpp	/^CLRHost::OnStartStream()$/;"	f	class:CLRHost
OnStartStream	CLRHostPlugin/CLRHostPlugin/CLRHostPlugin.cpp	/^void CLRHostPlugin::OnStartStream()$/;"	f	class:CLRHostPlugin
OnStartStream	CLRHostPlugin/CLRHostPlugin/CLRHostPlugin.cpp	/^void OnStartStream()$/;"	f
OnStartStream	CLRHostPlugin/CLRHostPlugin/CLRPlugin.cpp	/^void CLRPlugin::OnStartStream()$/;"	f	class:CLRPlugin
OnStartStream	NoiseGate/NoiseGate.cpp	/^void OnStartStream()$/;"	f
OnStatusMessage	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserDisplayHandler.cs	/^        protected override void OnStatusMessage(CefBrowser browser, string value)$/;"	m	class:Browser.BrowserDisplayHandler
OnStopStream	CLRHostPlugin/CLRHostInterop/AbstractPlugin.h	/^        virtual void OnStopStream() {};$/;"	f	class:CLROBS::abstract
OnStopStream	CLRHostPlugin/CLRHostPlugin/CLRHost.cpp	/^CLRHost::OnStopStream()$/;"	f	class:CLRHost
OnStopStream	CLRHostPlugin/CLRHostPlugin/CLRHostPlugin.cpp	/^void CLRHostPlugin::OnStopStream()$/;"	f	class:CLRHostPlugin
OnStopStream	CLRHostPlugin/CLRHostPlugin/CLRHostPlugin.cpp	/^void OnStopStream()$/;"	f
OnStopStream	CLRHostPlugin/CLRHostPlugin/CLRPlugin.cpp	/^void CLRPlugin::OnStopStream()$/;"	f	class:CLRPlugin
OnStopStream	NoiseGate/NoiseGate.cpp	/^void OnStopStream()$/;"	f
OnStreamClose	lame/ACM/ACM.cpp	/^inline DWORD ACM::OnStreamClose(LPACMDRVSTREAMINSTANCE a_StreamInstance)$/;"	f	class:ACM
OnStreamConvert	lame/ACM/ACM.cpp	/^inline DWORD ACM::OnStreamConvert(LPACMDRVSTREAMINSTANCE a_StreamInstance, LPACMDRVSTREAMHEADER a_StreamHeader)$/;"	f	class:ACM
OnStreamOpen	lame/ACM/ACM.cpp	/^inline DWORD ACM::OnStreamOpen(LPACMDRVSTREAMINSTANCE a_StreamInstance)$/;"	f	class:ACM
OnStreamPrepareHeader	lame/ACM/ACM.cpp	/^inline DWORD ACM::OnStreamPrepareHeader(LPACMDRVSTREAMINSTANCE a_StreamInstance, LPACMSTREAMHEADER a_StreamHeader)$/;"	f	class:ACM
OnStreamSize	lame/ACM/ACM.cpp	/^inline DWORD ACM::OnStreamSize(LPACMDRVSTREAMINSTANCE a_StreamInstance, LPACMDRVSTREAMSIZE the_StreamSize)$/;"	f	class:ACM
OnStreamUnPrepareHeader	lame/ACM/ACM.cpp	/^inline DWORD ACM::OnStreamUnPrepareHeader(LPACMDRVSTREAMINSTANCE a_StreamInstance, LPACMSTREAMHEADER a_StreamHeader)$/;"	f	class:ACM
OnTitleChange	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserDisplayHandler.cs	/^        protected override void OnTitleChange(CefBrowser browser, string title)$/;"	m	class:Browser.BrowserDisplayHandler
OnTooltip	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserDisplayHandler.cs	/^        protected override bool OnTooltip(CefBrowser browser, string text)$/;"	m	class:Browser.BrowserDisplayHandler
Opacity	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public double Opacity { get; set; }$/;"	p	class:Shared.BrowserSourceSettings
Open	OBSApi/Utility/ConfigFile.cpp	/^BOOL ConfigFile::Open(CTSTR lpConfigFile, BOOL bOpenAlways)$/;"	f	class:ConfigFile
Open	OBSApi/Utility/XConfig.cpp	/^bool  XConfig::Open(CTSTR lpFile)$/;"	f	class:XConfig
Open	OBSApi/Utility/XFile.h	/^    BOOL Open(CTSTR lpFile)$/;"	f	class:XFileInputSerializer
Open	OBSApi/Utility/XFile.h	/^    BOOL Open(CTSTR lpFile, DWORD dwCreationDisposition, DWORD bufferSize=(1024*64))$/;"	f	class:XFileOutputSerializer
Open	OBSApi/Utility/XFile_Windows.cpp	/^BOOL XFile::Open(CTSTR lpFile, DWORD dwAccess, DWORD dwCreationDisposition)$/;"	f	class:XFile
Open	lame/dshow/REG.CPP	/^BOOL    CRegKey::Open(HKEY rootKey, PTSTR pName)$/;"	f	class:Lame::CRegKey
Open	lame/dshow/REG.CPP	/^BOOL    CRegKey::Open(PTSTR an)$/;"	f	class:Lame::CRegKey
Open	libmfx/src/mfx_win_reg_key.cpp	/^bool WinRegKey::Open(HKEY hRootKey, const wchar_t *pSubKey, REGSAM samDesired)$/;"	f	class:MFX::WinRegKey
Open	libmfx/src/mfx_win_reg_key.cpp	/^bool WinRegKey::Open(WinRegKey &rootKey, const wchar_t *pSubKey, REGSAM samDesired)$/;"	f	class:MFX::WinRegKey
OpenBitStream	libfaac/bitstream.c	/^BitStream *OpenBitStream(int size, unsigned char *buffer)$/;"	f
OpenGLCapture.cpp	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	1;"	F
OpenLogFile	OBSApi/Utility/XT.cpp	/^void STDCALL OpenLogFile()$/;"	f
OpenPropertyPages	DShowPlugin/DShowPlugin.cpp	/^static void OpenPropertyPages(HWND hwnd, IUnknown *propObject)$/;"	f	file:
OpenPropertyPagesByName	DShowPlugin/DShowPlugin.cpp	/^static void OpenPropertyPagesByName(HWND hwnd, String devicename, String deviceid, GUID matchGUID)$/;"	f	file:
OpenSource	lame/doc/html/links.html	/^<h3><a name="OpenSource">Free (open source) software which supports or uses $/;"	a
OptimizeSettings	OBSApi/SettingsPane.cpp	/^void SettingsPane::OptimizeSettings()$/;"	f	class:SettingsPane
OptimizeSettings	Source/Settings.cpp	/^void OBS::OptimizeSettings()$/;"	f	class:OBS
OptimizeSettings	Source/SettingsPublish.cpp	/^void SettingsPublish::OptimizeSettings()$/;"	f	class:SettingsPublish
Order	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DORDERTYPE        Order;$/;"	m	struct:_D3DRECTPATCH_INFO
Order	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DORDERTYPE        Order;$/;"	m	struct:_D3DTRIPATCH_INFO
Ortho	OBSApi/GraphicsSystem.h	/^inline void  Ortho(float left, float right, float top, float bottom, float znear, float zfar)$/;"	f
Ortho	Source/D3D10System.cpp	/^void D3D10System::Ortho(float left, float right, float top, float bottom, float znear, float zfar)$/;"	f	class:D3D10System
Out	libmfx/include/msdk/include/mfxstructures.h	/^    mfxFrameInfo    Out;$/;"	m
Out	libmfx/include/msdk/include/mfxstructures.h	/^    } In, Out;$/;"	m
OutPut	lame/ACM/ADbg/ADbg.cpp	/^int ADbg::OutPut(const char * format,...) const$/;"	f	class:ADbg
OutPut	lame/ACM/ADbg/ADbg.cpp	/^int ADbg::OutPut(int forLevel, const char * format,...) const$/;"	f	class:ADbg
OutPut	lame/ACM/ADbg/ADbg.h	/^	inline int OutPut(const char * format,...) const {$/;"	f	class:ADbg
OutPut	lame/ACM/ADbg/ADbg.h	/^	inline int OutPut(int level, const char * format,...) const {$/;"	f	class:ADbg
OutputBits	libfaac/huffman.c	/^int OutputBits(CoderInfo *coderInfo,$/;"	f
OutputByte	OBSApi/Utility/Serializer.h	/^    inline Serializer& OutputByte (BYTE  cVal)       {if(!IsLoading()) Serialize(&cVal,  1); return *this;}$/;"	f	class:Serializer
OutputCapabilities	lame/dshow/Mpegac.cpp	/^output_caps_t OutputCapabilities[] = $/;"	v
OutputCaps	lame/dshow/Mpegac.h	/^    output_caps_t               OutputCaps[MAX_IAMSTREAMCONFIG_CAPS];$/;"	m	class:CMpegAudEnc
OutputChar	OBSApi/Utility/Serializer.h	/^    inline Serializer& OutputChar (char  cVal)       {if(!IsLoading()) Serialize(&cVal,  1); return *this;}$/;"	f	class:Serializer
OutputDouble	OBSApi/Utility/Serializer.h	/^    inline Serializer& OutputDouble(double dVal)     {if(!IsLoading()) Serialize(&dVal,  8); return *this;}$/;"	f	class:Serializer
OutputDuplicator	OBSApi/GraphicsSystem.h	/^class BASE_EXPORT OutputDuplicator$/;"	c
OutputDword	OBSApi/Utility/Serializer.h	/^    inline Serializer& OutputDword(DWORD lVal)       {if(!IsLoading()) Serialize(&lVal,  4); return *this;}$/;"	f	class:Serializer
OutputFloat	OBSApi/Utility/Serializer.h	/^    inline Serializer& OutputFloat(float fVal)       {if(!IsLoading()) Serialize(&fVal,  4); return *this;}$/;"	f	class:Serializer
OutputFormat	libmfx/include/msdk/include/mfxastructures.h	/^            mfxU16       OutputFormat;$/;"	m
OutputInt64	OBSApi/Utility/Serializer.h	/^    inline Serializer& OutputInt64(INT64 qVal)       {if(!IsLoading()) Serialize(&qVal,  8); return *this;}$/;"	f	class:Serializer
OutputLong	OBSApi/Utility/Serializer.h	/^    inline Serializer& OutputLong (long  lVal)       {if(!IsLoading()) Serialize(&lVal,  4); return *this;}$/;"	f	class:Serializer
OutputQword	OBSApi/Utility/Serializer.h	/^    inline Serializer& OutputQword(QWORD qVal)       {if(!IsLoading()) Serialize(&qVal,  8); return *this;}$/;"	f	class:Serializer
OutputShort	OBSApi/Utility/Serializer.h	/^    inline Serializer& OutputShort(short sVal)       {if(!IsLoading()) Serialize(&sVal,  2); return *this;}$/;"	f	class:Serializer
OutputWord	OBSApi/Utility/Serializer.h	/^    inline Serializer& OutputWord (WORD  sVal)       {if(!IsLoading()) Serialize(&sVal,  2); return *this;}$/;"	f	class:Serializer
OutsidePlane	OBSApi/Utility/XMath.cpp	/^BOOL Bounds::OutsidePlane(const Plane &p) const$/;"	f	class:Bounds
P	lame/libmp3lame/version.c	121;"	d	file:
P	lame/libmp3lame/version.c	123;"	d	file:
P	lame/libmp3lame/version.c	125;"	d	file:
P	lame/libmp3lame/version.c	127;"	d	file:
P1024	librtmp/dhgroups.h	33;"	d
P1536	librtmp/dhgroups.h	51;"	d
P2048	librtmp/dhgroups.h	62;"	d
P3072	librtmp/dhgroups.h	76;"	d
P4096	librtmp/dhgroups.h	95;"	d
P6144	librtmp/dhgroups.h	120;"	d
P768	librtmp/dhgroups.h	26;"	d
P8192	librtmp/dhgroups.h	155;"	d
PACKAGE	lame/ACM/ADbg/Makefile	/^PACKAGE = lame$/;"	m
PACKAGE	lame/ACM/Makefile	/^PACKAGE = lame$/;"	m
PACKAGE	lame/ACM/ddk/Makefile	/^PACKAGE = lame$/;"	m
PACKAGE	lame/ACM/tinyxml/Makefile	/^PACKAGE = lame$/;"	m
PACKAGE	lame/Dll/Makefile	/^PACKAGE = lame$/;"	m
PACKAGE	lame/Makefile	/^PACKAGE = lame$/;"	m
PACKAGE	lame/config.h	44;"	d
PACKAGE	lame/configMS.h	44;"	d
PACKAGE	lame/debian/Makefile	/^PACKAGE = lame$/;"	m
PACKAGE	lame/doc/Makefile	/^PACKAGE = lame$/;"	m
PACKAGE	lame/doc/html/Makefile	/^PACKAGE = lame$/;"	m
PACKAGE	lame/doc/man/Makefile	/^PACKAGE = lame$/;"	m
PACKAGE	lame/dshow/Makefile	/^PACKAGE = lame$/;"	m
PACKAGE	lame/frontend/Makefile	/^PACKAGE = lame$/;"	m
PACKAGE	lame/include/Makefile	/^PACKAGE = lame$/;"	m
PACKAGE	lame/libmp3lame/Makefile	/^PACKAGE = lame$/;"	m
PACKAGE	lame/libmp3lame/i386/Makefile	/^PACKAGE = lame$/;"	m
PACKAGE	lame/libmp3lame/vector/Makefile	/^PACKAGE = lame$/;"	m
PACKAGE	lame/mac/Makefile	/^PACKAGE = lame$/;"	m
PACKAGE	lame/mac/Precompile_Common.h	54;"	d
PACKAGE	lame/macosx/English.lproj/Makefile	/^PACKAGE = lame$/;"	m
PACKAGE	lame/macosx/LAME.xcodeproj/Makefile	/^PACKAGE = lame$/;"	m
PACKAGE	lame/macosx/Makefile	/^PACKAGE = lame$/;"	m
PACKAGE	lame/misc/Makefile	/^PACKAGE = lame$/;"	m
PACKAGE	lame/mpglib/Makefile	/^PACKAGE = lame$/;"	m
PACKAGE	lame/vc_solution/Makefile	/^PACKAGE = lame$/;"	m
PACKAGE	libsamplerate/config.h	160;"	d
PACKAGE_BUGREPORT	lame/ACM/ADbg/Makefile	/^PACKAGE_BUGREPORT = lame-dev@lists.sf.net$/;"	m
PACKAGE_BUGREPORT	lame/ACM/Makefile	/^PACKAGE_BUGREPORT = lame-dev@lists.sf.net$/;"	m
PACKAGE_BUGREPORT	lame/ACM/ddk/Makefile	/^PACKAGE_BUGREPORT = lame-dev@lists.sf.net$/;"	m
PACKAGE_BUGREPORT	lame/ACM/tinyxml/Makefile	/^PACKAGE_BUGREPORT = lame-dev@lists.sf.net$/;"	m
PACKAGE_BUGREPORT	lame/Dll/Makefile	/^PACKAGE_BUGREPORT = lame-dev@lists.sf.net$/;"	m
PACKAGE_BUGREPORT	lame/Makefile	/^PACKAGE_BUGREPORT = lame-dev@lists.sf.net$/;"	m
PACKAGE_BUGREPORT	lame/debian/Makefile	/^PACKAGE_BUGREPORT = lame-dev@lists.sf.net$/;"	m
PACKAGE_BUGREPORT	lame/doc/Makefile	/^PACKAGE_BUGREPORT = lame-dev@lists.sf.net$/;"	m
PACKAGE_BUGREPORT	lame/doc/html/Makefile	/^PACKAGE_BUGREPORT = lame-dev@lists.sf.net$/;"	m
PACKAGE_BUGREPORT	lame/doc/man/Makefile	/^PACKAGE_BUGREPORT = lame-dev@lists.sf.net$/;"	m
PACKAGE_BUGREPORT	lame/dshow/Makefile	/^PACKAGE_BUGREPORT = lame-dev@lists.sf.net$/;"	m
PACKAGE_BUGREPORT	lame/frontend/Makefile	/^PACKAGE_BUGREPORT = lame-dev@lists.sf.net$/;"	m
PACKAGE_BUGREPORT	lame/include/Makefile	/^PACKAGE_BUGREPORT = lame-dev@lists.sf.net$/;"	m
PACKAGE_BUGREPORT	lame/libmp3lame/Makefile	/^PACKAGE_BUGREPORT = lame-dev@lists.sf.net$/;"	m
PACKAGE_BUGREPORT	lame/libmp3lame/i386/Makefile	/^PACKAGE_BUGREPORT = lame-dev@lists.sf.net$/;"	m
PACKAGE_BUGREPORT	lame/libmp3lame/vector/Makefile	/^PACKAGE_BUGREPORT = lame-dev@lists.sf.net$/;"	m
PACKAGE_BUGREPORT	lame/mac/Makefile	/^PACKAGE_BUGREPORT = lame-dev@lists.sf.net$/;"	m
PACKAGE_BUGREPORT	lame/macosx/English.lproj/Makefile	/^PACKAGE_BUGREPORT = lame-dev@lists.sf.net$/;"	m
PACKAGE_BUGREPORT	lame/macosx/LAME.xcodeproj/Makefile	/^PACKAGE_BUGREPORT = lame-dev@lists.sf.net$/;"	m
PACKAGE_BUGREPORT	lame/macosx/Makefile	/^PACKAGE_BUGREPORT = lame-dev@lists.sf.net$/;"	m
PACKAGE_BUGREPORT	lame/misc/Makefile	/^PACKAGE_BUGREPORT = lame-dev@lists.sf.net$/;"	m
PACKAGE_BUGREPORT	lame/mpglib/Makefile	/^PACKAGE_BUGREPORT = lame-dev@lists.sf.net$/;"	m
PACKAGE_BUGREPORT	lame/vc_solution/Makefile	/^PACKAGE_BUGREPORT = lame-dev@lists.sf.net$/;"	m
PACKAGE_BUGREPORT	libsamplerate/config.h	163;"	d
PACKAGE_NAME	lame/ACM/ADbg/Makefile	/^PACKAGE_NAME = lame$/;"	m
PACKAGE_NAME	lame/ACM/Makefile	/^PACKAGE_NAME = lame$/;"	m
PACKAGE_NAME	lame/ACM/ddk/Makefile	/^PACKAGE_NAME = lame$/;"	m
PACKAGE_NAME	lame/ACM/tinyxml/Makefile	/^PACKAGE_NAME = lame$/;"	m
PACKAGE_NAME	lame/Dll/Makefile	/^PACKAGE_NAME = lame$/;"	m
PACKAGE_NAME	lame/Makefile	/^PACKAGE_NAME = lame$/;"	m
PACKAGE_NAME	lame/debian/Makefile	/^PACKAGE_NAME = lame$/;"	m
PACKAGE_NAME	lame/doc/Makefile	/^PACKAGE_NAME = lame$/;"	m
PACKAGE_NAME	lame/doc/html/Makefile	/^PACKAGE_NAME = lame$/;"	m
PACKAGE_NAME	lame/doc/man/Makefile	/^PACKAGE_NAME = lame$/;"	m
PACKAGE_NAME	lame/dshow/Makefile	/^PACKAGE_NAME = lame$/;"	m
PACKAGE_NAME	lame/frontend/Makefile	/^PACKAGE_NAME = lame$/;"	m
PACKAGE_NAME	lame/include/Makefile	/^PACKAGE_NAME = lame$/;"	m
PACKAGE_NAME	lame/libmp3lame/Makefile	/^PACKAGE_NAME = lame$/;"	m
PACKAGE_NAME	lame/libmp3lame/i386/Makefile	/^PACKAGE_NAME = lame$/;"	m
PACKAGE_NAME	lame/libmp3lame/vector/Makefile	/^PACKAGE_NAME = lame$/;"	m
PACKAGE_NAME	lame/mac/Makefile	/^PACKAGE_NAME = lame$/;"	m
PACKAGE_NAME	lame/macosx/English.lproj/Makefile	/^PACKAGE_NAME = lame$/;"	m
PACKAGE_NAME	lame/macosx/LAME.xcodeproj/Makefile	/^PACKAGE_NAME = lame$/;"	m
PACKAGE_NAME	lame/macosx/Makefile	/^PACKAGE_NAME = lame$/;"	m
PACKAGE_NAME	lame/misc/Makefile	/^PACKAGE_NAME = lame$/;"	m
PACKAGE_NAME	lame/mpglib/Makefile	/^PACKAGE_NAME = lame$/;"	m
PACKAGE_NAME	lame/vc_solution/Makefile	/^PACKAGE_NAME = lame$/;"	m
PACKAGE_NAME	libsamplerate/config.h	166;"	d
PACKAGE_STRING	lame/ACM/ADbg/Makefile	/^PACKAGE_STRING = lame 3.99.5$/;"	m
PACKAGE_STRING	lame/ACM/Makefile	/^PACKAGE_STRING = lame 3.99.5$/;"	m
PACKAGE_STRING	lame/ACM/ddk/Makefile	/^PACKAGE_STRING = lame 3.99.5$/;"	m
PACKAGE_STRING	lame/ACM/tinyxml/Makefile	/^PACKAGE_STRING = lame 3.99.5$/;"	m
PACKAGE_STRING	lame/Dll/Makefile	/^PACKAGE_STRING = lame 3.99.5$/;"	m
PACKAGE_STRING	lame/Makefile	/^PACKAGE_STRING = lame 3.99.5$/;"	m
PACKAGE_STRING	lame/debian/Makefile	/^PACKAGE_STRING = lame 3.99.5$/;"	m
PACKAGE_STRING	lame/doc/Makefile	/^PACKAGE_STRING = lame 3.99.5$/;"	m
PACKAGE_STRING	lame/doc/html/Makefile	/^PACKAGE_STRING = lame 3.99.5$/;"	m
PACKAGE_STRING	lame/doc/man/Makefile	/^PACKAGE_STRING = lame 3.99.5$/;"	m
PACKAGE_STRING	lame/dshow/Makefile	/^PACKAGE_STRING = lame 3.99.5$/;"	m
PACKAGE_STRING	lame/frontend/Makefile	/^PACKAGE_STRING = lame 3.99.5$/;"	m
PACKAGE_STRING	lame/include/Makefile	/^PACKAGE_STRING = lame 3.99.5$/;"	m
PACKAGE_STRING	lame/libmp3lame/Makefile	/^PACKAGE_STRING = lame 3.99.5$/;"	m
PACKAGE_STRING	lame/libmp3lame/i386/Makefile	/^PACKAGE_STRING = lame 3.99.5$/;"	m
PACKAGE_STRING	lame/libmp3lame/vector/Makefile	/^PACKAGE_STRING = lame 3.99.5$/;"	m
PACKAGE_STRING	lame/mac/Makefile	/^PACKAGE_STRING = lame 3.99.5$/;"	m
PACKAGE_STRING	lame/macosx/English.lproj/Makefile	/^PACKAGE_STRING = lame 3.99.5$/;"	m
PACKAGE_STRING	lame/macosx/LAME.xcodeproj/Makefile	/^PACKAGE_STRING = lame 3.99.5$/;"	m
PACKAGE_STRING	lame/macosx/Makefile	/^PACKAGE_STRING = lame 3.99.5$/;"	m
PACKAGE_STRING	lame/misc/Makefile	/^PACKAGE_STRING = lame 3.99.5$/;"	m
PACKAGE_STRING	lame/mpglib/Makefile	/^PACKAGE_STRING = lame 3.99.5$/;"	m
PACKAGE_STRING	lame/vc_solution/Makefile	/^PACKAGE_STRING = lame 3.99.5$/;"	m
PACKAGE_STRING	libsamplerate/config.h	169;"	d
PACKAGE_TARNAME	lame/ACM/ADbg/Makefile	/^PACKAGE_TARNAME = lame$/;"	m
PACKAGE_TARNAME	lame/ACM/Makefile	/^PACKAGE_TARNAME = lame$/;"	m
PACKAGE_TARNAME	lame/ACM/ddk/Makefile	/^PACKAGE_TARNAME = lame$/;"	m
PACKAGE_TARNAME	lame/ACM/tinyxml/Makefile	/^PACKAGE_TARNAME = lame$/;"	m
PACKAGE_TARNAME	lame/Dll/Makefile	/^PACKAGE_TARNAME = lame$/;"	m
PACKAGE_TARNAME	lame/Makefile	/^PACKAGE_TARNAME = lame$/;"	m
PACKAGE_TARNAME	lame/debian/Makefile	/^PACKAGE_TARNAME = lame$/;"	m
PACKAGE_TARNAME	lame/doc/Makefile	/^PACKAGE_TARNAME = lame$/;"	m
PACKAGE_TARNAME	lame/doc/html/Makefile	/^PACKAGE_TARNAME = lame$/;"	m
PACKAGE_TARNAME	lame/doc/man/Makefile	/^PACKAGE_TARNAME = lame$/;"	m
PACKAGE_TARNAME	lame/dshow/Makefile	/^PACKAGE_TARNAME = lame$/;"	m
PACKAGE_TARNAME	lame/frontend/Makefile	/^PACKAGE_TARNAME = lame$/;"	m
PACKAGE_TARNAME	lame/include/Makefile	/^PACKAGE_TARNAME = lame$/;"	m
PACKAGE_TARNAME	lame/libmp3lame/Makefile	/^PACKAGE_TARNAME = lame$/;"	m
PACKAGE_TARNAME	lame/libmp3lame/i386/Makefile	/^PACKAGE_TARNAME = lame$/;"	m
PACKAGE_TARNAME	lame/libmp3lame/vector/Makefile	/^PACKAGE_TARNAME = lame$/;"	m
PACKAGE_TARNAME	lame/mac/Makefile	/^PACKAGE_TARNAME = lame$/;"	m
PACKAGE_TARNAME	lame/macosx/English.lproj/Makefile	/^PACKAGE_TARNAME = lame$/;"	m
PACKAGE_TARNAME	lame/macosx/LAME.xcodeproj/Makefile	/^PACKAGE_TARNAME = lame$/;"	m
PACKAGE_TARNAME	lame/macosx/Makefile	/^PACKAGE_TARNAME = lame$/;"	m
PACKAGE_TARNAME	lame/misc/Makefile	/^PACKAGE_TARNAME = lame$/;"	m
PACKAGE_TARNAME	lame/mpglib/Makefile	/^PACKAGE_TARNAME = lame$/;"	m
PACKAGE_TARNAME	lame/vc_solution/Makefile	/^PACKAGE_TARNAME = lame$/;"	m
PACKAGE_TARNAME	libsamplerate/config.h	172;"	d
PACKAGE_URL	lame/ACM/ADbg/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	lame/ACM/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	lame/ACM/ddk/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	lame/ACM/tinyxml/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	lame/Dll/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	lame/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	lame/debian/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	lame/doc/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	lame/doc/html/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	lame/doc/man/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	lame/dshow/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	lame/frontend/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	lame/include/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	lame/libmp3lame/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	lame/libmp3lame/i386/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	lame/libmp3lame/vector/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	lame/mac/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	lame/macosx/English.lproj/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	lame/macosx/LAME.xcodeproj/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	lame/macosx/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	lame/misc/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	lame/mpglib/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	lame/vc_solution/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	libsamplerate/config.h	175;"	d
PACKAGE_VERSION	lame/ACM/ADbg/Makefile	/^PACKAGE_VERSION = 3.99.5$/;"	m
PACKAGE_VERSION	lame/ACM/Makefile	/^PACKAGE_VERSION = 3.99.5$/;"	m
PACKAGE_VERSION	lame/ACM/ddk/Makefile	/^PACKAGE_VERSION = 3.99.5$/;"	m
PACKAGE_VERSION	lame/ACM/tinyxml/Makefile	/^PACKAGE_VERSION = 3.99.5$/;"	m
PACKAGE_VERSION	lame/Dll/Makefile	/^PACKAGE_VERSION = 3.99.5$/;"	m
PACKAGE_VERSION	lame/Makefile	/^PACKAGE_VERSION = 3.99.5$/;"	m
PACKAGE_VERSION	lame/debian/Makefile	/^PACKAGE_VERSION = 3.99.5$/;"	m
PACKAGE_VERSION	lame/doc/Makefile	/^PACKAGE_VERSION = 3.99.5$/;"	m
PACKAGE_VERSION	lame/doc/html/Makefile	/^PACKAGE_VERSION = 3.99.5$/;"	m
PACKAGE_VERSION	lame/doc/man/Makefile	/^PACKAGE_VERSION = 3.99.5$/;"	m
PACKAGE_VERSION	lame/dshow/Makefile	/^PACKAGE_VERSION = 3.99.5$/;"	m
PACKAGE_VERSION	lame/frontend/Makefile	/^PACKAGE_VERSION = 3.99.5$/;"	m
PACKAGE_VERSION	lame/include/Makefile	/^PACKAGE_VERSION = 3.99.5$/;"	m
PACKAGE_VERSION	lame/libmp3lame/Makefile	/^PACKAGE_VERSION = 3.99.5$/;"	m
PACKAGE_VERSION	lame/libmp3lame/i386/Makefile	/^PACKAGE_VERSION = 3.99.5$/;"	m
PACKAGE_VERSION	lame/libmp3lame/vector/Makefile	/^PACKAGE_VERSION = 3.99.5$/;"	m
PACKAGE_VERSION	lame/mac/Makefile	/^PACKAGE_VERSION = 3.99.5$/;"	m
PACKAGE_VERSION	lame/macosx/English.lproj/Makefile	/^PACKAGE_VERSION = 3.99.5$/;"	m
PACKAGE_VERSION	lame/macosx/LAME.xcodeproj/Makefile	/^PACKAGE_VERSION = 3.99.5$/;"	m
PACKAGE_VERSION	lame/macosx/Makefile	/^PACKAGE_VERSION = 3.99.5$/;"	m
PACKAGE_VERSION	lame/misc/Makefile	/^PACKAGE_VERSION = 3.99.5$/;"	m
PACKAGE_VERSION	lame/mpglib/Makefile	/^PACKAGE_VERSION = 3.99.5$/;"	m
PACKAGE_VERSION	lame/vc_solution/Makefile	/^PACKAGE_VERSION = 3.99.5$/;"	m
PACKAGE_VERSION	libsamplerate/config.h	178;"	d
PACMDRIVERDETAILS	lame/ACM/ddk/msacmdrv.h	44;"	d
PACMDRIVERDETAILS	lame/ACM/ddk/msacmdrv.h	48;"	d
PACMDRVFORMATSUGGEST	lame/ACM/ddk/msacmdrv.h	/^} ACMDRVFORMATSUGGEST, *PACMDRVFORMATSUGGEST, FAR *LPACMDRVFORMATSUGGEST;$/;"	t
PACMDRVOPENDESC	lame/ACM/ddk/msacmdrv.h	/^} ACMDRVOPENDESC, *PACMDRVOPENDESC, FAR *LPACMDRVOPENDESC;$/;"	t
PACMDRVSTREAMHEADER	lame/ACM/ddk/msacmdrv.h	/^} ACMDRVSTREAMHEADER, *PACMDRVSTREAMHEADER;$/;"	t
PACMDRVSTREAMINSTANCE	lame/ACM/ddk/msacmdrv.h	/^} ACMDRVSTREAMINSTANCE, *PACMDRVSTREAMINSTANCE, FAR *LPACMDRVSTREAMINSTANCE;$/;"	t
PACMDRVSTREAMSIZE	lame/ACM/ddk/msacmdrv.h	/^} ACMDRVSTREAMSIZE, *PACMDRVSTREAMSIZE, FAR *LPACMDRVSTREAMSIZE;$/;"	t
PACMFORMATDETAILS	lame/ACM/ddk/msacmdrv.h	60;"	d
PACMFORMATDETAILS	lame/ACM/ddk/msacmdrv.h	64;"	d
PACMFORMATTAGDETAILS	lame/ACM/ddk/msacmdrv.h	52;"	d
PACMFORMATTAGDETAILS	lame/ACM/ddk/msacmdrv.h	56;"	d
PAD_ADJUST	lame/include/lame.h	/^  PAD_ADJUST,$/;"	e	enum:Padding_type_e
PAD_ALL	lame/include/lame.h	/^  PAD_ALL,$/;"	e	enum:Padding_type_e
PAD_MAX_INDICATOR	lame/include/lame.h	/^  PAD_MAX_INDICATOR   \/* Don't use this! It's used for sanity checks. *\/$/;"	e	enum:Padding_type_e
PAD_NO	lame/include/lame.h	/^  PAD_NO = 0,$/;"	e	enum:Padding_type_e
PAD_V2_FLAG	lame/libmp3lame/id3tag.h	11;"	d
PAIR_LEN	libfaac/bitstream.h	111;"	d
PARAM	OBSApi/Utility/Defs.h	/^typedef long                PARAM;$/;"	t
PARAM	OBSApi/Utility/Defs.h	/^typedef long long           PARAM;$/;"	t
PARSE_H_INCLUDED	lame/frontend/parse.h	2;"	d
PASSWORDS_FILE_NAME	Source/mongoose.c	1385;"	d	file:
PATCH_COMPARE_SIZE	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	115;"	d	file:
PATCH_COMPARE_SIZE	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	153;"	d	file:
PATH	lame/misc/abx.c	904;"	d	file:
PATH	lame/misc/abx.c	944;"	d	file:
PATH_MAX	lame/frontend/main.h	38;"	d
PATH_OF_EXTERNAL_TOOLS_FOR_UNCOMPRESSING	lame/misc/abx.c	54;"	d	file:
PATH_SEPARATOR	lame/ACM/ADbg/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	lame/ACM/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	lame/ACM/ddk/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	lame/ACM/tinyxml/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	lame/Dll/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	lame/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	lame/debian/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	lame/doc/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	lame/doc/html/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	lame/doc/man/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	lame/dshow/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	lame/frontend/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	lame/include/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	lame/libmp3lame/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	lame/libmp3lame/i386/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	lame/libmp3lame/vector/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	lame/mac/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	lame/macosx/English.lproj/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	lame/macosx/LAME.xcodeproj/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	lame/macosx/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	lame/misc/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	lame/mpglib/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	lame/vc_solution/Makefile	/^PATH_SEPARATOR = :$/;"	m
PBSubclassProc	NoiseGate/NoiseGate.cpp	/^LRESULT CALLBACK NoiseGateSettings::PBSubclassProc(HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, UINT_PTR uIdSubclass, DWORD_PTR dwRefData)$/;"	f	class:NoiseGateSettings
PCHECKNVENCHARDWARESUPPORT	Source/Encoder_NVENC.cpp	/^typedef bool (__cdecl *PCHECKNVENCHARDWARESUPPORT)(bool log);$/;"	t	file:
PCMSampleType	lame/libmp3lame/lame.c	/^enum PCMSampleType $/;"	g	file:
PCREATENVENCENCODER	Source/Encoder_NVENC.cpp	/^typedef VideoEncoder* (__cdecl *PCREATENVENCENCODER)(int fps, int width, int height, int quality, CTSTR preset, bool bUse444, ColorDescription &colorDesc, int maxBitRate, int bufferSize, bool bUseCFR);$/;"	t	file:
PCUCTXCREATE	ObsNvenc/inc/cudaDynload.h	/^typedef CUresult(CUDAAPI *PCUCTXCREATE)(CUcontext *pctx, unsigned int flags, CUdevice dev);$/;"	t
PCUCTXDESTROY	ObsNvenc/inc/cudaDynload.h	/^typedef CUresult(CUDAAPI *PCUCTXDESTROY)(CUcontext ctx);$/;"	t
PCUCTXPOPCURRENT	ObsNvenc/inc/cudaDynload.h	/^typedef CUresult(CUDAAPI *PCUCTXPOPCURRENT)(CUcontext *pctx);$/;"	t
PCUDEVICECOMPUTECAPABILITY	ObsNvenc/inc/cudaDynload.h	/^typedef CUresult(CUDAAPI *PCUDEVICECOMPUTECAPABILITY)(int *major, int *minor, CUdevice dev);$/;"	t
PCUDEVICEGET	ObsNvenc/inc/cudaDynload.h	/^typedef CUresult(CUDAAPI *PCUDEVICEGET)(CUdevice *device, int ordinal);$/;"	t
PCUDEVICEGETCOUNT	ObsNvenc/inc/cudaDynload.h	/^typedef CUresult(CUDAAPI *PCUDEVICEGETCOUNT)(int *count);$/;"	t
PCUDEVICEGETNAME	ObsNvenc/inc/cudaDynload.h	/^typedef CUresult(CUDAAPI *PCUDEVICEGETNAME)(char *name, int len, CUdevice dev);$/;"	t
PCUINIT	ObsNvenc/inc/cudaDynload.h	/^typedef CUresult(CUDAAPI *PCUINIT)(unsigned int Flags);$/;"	t
PCVIDEO_CAPTURE_FILTER_SETTINGS	DShowPlugin/IVideoCaptureFilter.h	/^typedef const VIDEO_CAPTURE_FILTER_SETTINGS* PCVIDEO_CAPTURE_FILTER_SETTINGS;$/;"	t
PCVIDEO_CAPTURE_FILTER_SETTINGS_EX	DShowPlugin/IVideoCaptureFilter.h	/^typedef const VIDEO_CAPTURE_FILTER_SETTINGS_EX* PCVIDEO_CAPTURE_FILTER_SETTINGS_EX;$/;"	t
PDIRECT3D8	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^typedef struct IDirect3D8 *LPDIRECT3D8, *PDIRECT3D8;$/;"	t
PDIRECT3DBASETEXTURE8	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^typedef struct IDirect3DBaseTexture8 *LPDIRECT3DBASETEXTURE8, *PDIRECT3DBASETEXTURE8;$/;"	t
PDIRECT3DCUBETEXTURE8	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^typedef struct IDirect3DCubeTexture8 *LPDIRECT3DCUBETEXTURE8, *PDIRECT3DCUBETEXTURE8;$/;"	t
PDIRECT3DDEVICE8	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^typedef struct IDirect3DDevice8 *LPDIRECT3DDEVICE8, *PDIRECT3DDEVICE8;$/;"	t
PDIRECT3DINDEXBUFFER8	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^typedef struct IDirect3DIndexBuffer8 *LPDIRECT3DINDEXBUFFER8, *PDIRECT3DINDEXBUFFER8;$/;"	t
PDIRECT3DRESOURCE8	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^typedef struct IDirect3DResource8 *LPDIRECT3DRESOURCE8, *PDIRECT3DRESOURCE8;$/;"	t
PDIRECT3DSURFACE8	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^typedef struct IDirect3DSurface8 *LPDIRECT3DSURFACE8, *PDIRECT3DSURFACE8;$/;"	t
PDIRECT3DSWAPCHAIN8	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^typedef struct IDirect3DSwapChain8 *LPDIRECT3DSWAPCHAIN8, *PDIRECT3DSWAPCHAIN8;$/;"	t
PDIRECT3DTEXTURE8	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^typedef struct IDirect3DTexture8 *LPDIRECT3DTEXTURE8, *PDIRECT3DTEXTURE8;$/;"	t
PDIRECT3DVERTEXBUFFER8	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^typedef struct IDirect3DVertexBuffer8 *LPDIRECT3DVERTEXBUFFER8, *PDIRECT3DVERTEXBUFFER8;$/;"	t
PDIRECT3DVOLUME8	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^typedef struct IDirect3DVolume8 *LPDIRECT3DVOLUME8, *PDIRECT3DVOLUME8;$/;"	t
PDIRECT3DVOLUMETEXTURE8	GraphicsCapture/GraphicsCaptureHook/d3d8.h	/^typedef struct IDirect3DVolumeTexture8 *LPDIRECT3DVOLUMETEXTURE8, *PDIRECT3DVOLUMETEXTURE8;$/;"	t
PDWORD_PTR	lame/ACM/ddk/msacmdrv.h	/^typedef ULONG_PTR DWORD_PTR, *PDWORD_PTR;$/;"	t
PERSONAL_FORMAT	lame/ACM/ACM.cpp	84;"	d	file:
PFN_VIDEO_CAPTURE_FILTER_NOTIFICATION_CALLBACK	DShowPlugin/IVideoCaptureFilter.h	/^typedef void (CALLBACK* PFN_VIDEO_CAPTURE_FILTER_NOTIFICATION_CALLBACK)(VIDEO_CAPTURE_FILTER_NOTIFICATION nMessage, void* pData, int nSize, void* pContext);$/;"	t
PHBE_STREAM	lame/Dll/BladeMP3EncDLL.h	/^typedef		HBE_STREAM				*PHBE_STREAM;$/;"	t
PI	lame/libmp3lame/util.h	56;"	d
PI	lame/libmp3lame/util.h	58;"	d
PIC_STRUCT_AUTO	x264/x264.h	/^    PIC_STRUCT_AUTO              = 0, \/\/ automatically decide (default)$/;"	e	enum:pic_struct_e
PIC_STRUCT_BOTTOM_TOP	x264/x264.h	/^    PIC_STRUCT_BOTTOM_TOP        = 5, \/\/ bottom field followed by top$/;"	e	enum:pic_struct_e
PIC_STRUCT_BOTTOM_TOP_BOTTOM	x264/x264.h	/^    PIC_STRUCT_BOTTOM_TOP_BOTTOM = 7, \/\/ bottom field, top field, bottom field repeated$/;"	e	enum:pic_struct_e
PIC_STRUCT_DOUBLE	x264/x264.h	/^    PIC_STRUCT_DOUBLE            = 8, \/\/ double frame$/;"	e	enum:pic_struct_e
PIC_STRUCT_PROGRESSIVE	x264/x264.h	/^    PIC_STRUCT_PROGRESSIVE       = 1, \/\/ progressive frame$/;"	e	enum:pic_struct_e
PIC_STRUCT_TOP_BOTTOM	x264/x264.h	/^    PIC_STRUCT_TOP_BOTTOM        = 4, \/\/ top field followed by bottom$/;"	e	enum:pic_struct_e
PIC_STRUCT_TOP_BOTTOM_TOP	x264/x264.h	/^    PIC_STRUCT_TOP_BOTTOM_TOP    = 6, \/\/ top field, bottom field, top field repeated$/;"	e	enum:pic_struct_e
PIC_STRUCT_TRIPLE	x264/x264.h	/^    PIC_STRUCT_TRIPLE            = 9, \/\/ triple frame$/;"	e	enum:pic_struct_e
PINK_REF	lame/libmp3lame/gain_analysis.h	47;"	d
PIN_CATEGORY_ROXIOCAPTURE	DShowPlugin/DShowPlugin.cpp	/^const GUID PIN_CATEGORY_ROXIOCAPTURE = {0x6994AD05, 0x93EF, 0x11D0, {0xA3, 0xCC, 0x00, 0xA0, 0xC9, 0x22, 0x31, 0x96}};$/;"	v
PKG_CONFIG	lame/ACM/ADbg/Makefile	/^PKG_CONFIG = $/;"	m
PKG_CONFIG	lame/ACM/Makefile	/^PKG_CONFIG = $/;"	m
PKG_CONFIG	lame/ACM/ddk/Makefile	/^PKG_CONFIG = $/;"	m
PKG_CONFIG	lame/ACM/tinyxml/Makefile	/^PKG_CONFIG = $/;"	m
PKG_CONFIG	lame/Dll/Makefile	/^PKG_CONFIG = $/;"	m
PKG_CONFIG	lame/Makefile	/^PKG_CONFIG = $/;"	m
PKG_CONFIG	lame/debian/Makefile	/^PKG_CONFIG = $/;"	m
PKG_CONFIG	lame/doc/Makefile	/^PKG_CONFIG = $/;"	m
PKG_CONFIG	lame/doc/html/Makefile	/^PKG_CONFIG = $/;"	m
PKG_CONFIG	lame/doc/man/Makefile	/^PKG_CONFIG = $/;"	m
PKG_CONFIG	lame/dshow/Makefile	/^PKG_CONFIG = $/;"	m
PKG_CONFIG	lame/frontend/Makefile	/^PKG_CONFIG = $/;"	m
PKG_CONFIG	lame/include/Makefile	/^PKG_CONFIG = $/;"	m
PKG_CONFIG	lame/libmp3lame/Makefile	/^PKG_CONFIG = $/;"	m
PKG_CONFIG	lame/libmp3lame/i386/Makefile	/^PKG_CONFIG = $/;"	m
PKG_CONFIG	lame/libmp3lame/vector/Makefile	/^PKG_CONFIG = $/;"	m
PKG_CONFIG	lame/mac/Makefile	/^PKG_CONFIG = $/;"	m
PKG_CONFIG	lame/macosx/English.lproj/Makefile	/^PKG_CONFIG = $/;"	m
PKG_CONFIG	lame/macosx/LAME.xcodeproj/Makefile	/^PKG_CONFIG = $/;"	m
PKG_CONFIG	lame/macosx/Makefile	/^PKG_CONFIG = $/;"	m
PKG_CONFIG	lame/misc/Makefile	/^PKG_CONFIG = $/;"	m
PKG_CONFIG	lame/mpglib/Makefile	/^PKG_CONFIG = $/;"	m
PKG_CONFIG	lame/vc_solution/Makefile	/^PKG_CONFIG = $/;"	m
PKG_CONFIG_LIBDIR	lame/ACM/ADbg/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_LIBDIR	lame/ACM/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_LIBDIR	lame/ACM/ddk/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_LIBDIR	lame/ACM/tinyxml/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_LIBDIR	lame/Dll/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_LIBDIR	lame/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_LIBDIR	lame/debian/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_LIBDIR	lame/doc/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_LIBDIR	lame/doc/html/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_LIBDIR	lame/doc/man/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_LIBDIR	lame/dshow/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_LIBDIR	lame/frontend/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_LIBDIR	lame/include/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_LIBDIR	lame/libmp3lame/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_LIBDIR	lame/libmp3lame/i386/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_LIBDIR	lame/libmp3lame/vector/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_LIBDIR	lame/mac/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_LIBDIR	lame/macosx/English.lproj/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_LIBDIR	lame/macosx/LAME.xcodeproj/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_LIBDIR	lame/macosx/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_LIBDIR	lame/misc/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_LIBDIR	lame/mpglib/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_LIBDIR	lame/vc_solution/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_PATH	lame/ACM/ADbg/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PKG_CONFIG_PATH	lame/ACM/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PKG_CONFIG_PATH	lame/ACM/ddk/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PKG_CONFIG_PATH	lame/ACM/tinyxml/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PKG_CONFIG_PATH	lame/Dll/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PKG_CONFIG_PATH	lame/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PKG_CONFIG_PATH	lame/debian/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PKG_CONFIG_PATH	lame/doc/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PKG_CONFIG_PATH	lame/doc/html/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PKG_CONFIG_PATH	lame/doc/man/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PKG_CONFIG_PATH	lame/dshow/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PKG_CONFIG_PATH	lame/frontend/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PKG_CONFIG_PATH	lame/include/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PKG_CONFIG_PATH	lame/libmp3lame/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PKG_CONFIG_PATH	lame/libmp3lame/i386/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PKG_CONFIG_PATH	lame/libmp3lame/vector/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PKG_CONFIG_PATH	lame/mac/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PKG_CONFIG_PATH	lame/macosx/English.lproj/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PKG_CONFIG_PATH	lame/macosx/LAME.xcodeproj/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PKG_CONFIG_PATH	lame/macosx/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PKG_CONFIG_PATH	lame/misc/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PKG_CONFIG_PATH	lame/mpglib/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PKG_CONFIG_PATH	lame/vc_solution/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PMPSTR	lame/mpglib/mpglib.h	/^} MPSTR, *PMPSTR;$/;"	t
PNVENCCREATEBITSTREAMBUFFER	ObsNvenc/inc/nvEncodeAPI.h	/^typedef NVENCSTATUS (NVENCAPI* PNVENCCREATEBITSTREAMBUFFER)     (void* encoder, NV_ENC_CREATE_BITSTREAM_BUFFER* createBitstreamBufferParams);$/;"	t
PNVENCCREATEINPUTBUFFER	ObsNvenc/inc/nvEncodeAPI.h	/^typedef NVENCSTATUS (NVENCAPI* PNVENCCREATEINPUTBUFFER)         (void* encoder, NV_ENC_CREATE_INPUT_BUFFER* createInputBufferParams);$/;"	t
PNVENCDESTROYBITSTREAMBUFFER	ObsNvenc/inc/nvEncodeAPI.h	/^typedef NVENCSTATUS (NVENCAPI* PNVENCDESTROYBITSTREAMBUFFER)    (void* encoder, NV_ENC_OUTPUT_PTR bitstreamBuffer);$/;"	t
PNVENCDESTROYENCODER	ObsNvenc/inc/nvEncodeAPI.h	/^typedef NVENCSTATUS (NVENCAPI* PNVENCDESTROYENCODER)            (void* encoder);$/;"	t
PNVENCDESTROYINPUTBUFFER	ObsNvenc/inc/nvEncodeAPI.h	/^typedef NVENCSTATUS (NVENCAPI* PNVENCDESTROYINPUTBUFFER)        (void* encoder, NV_ENC_INPUT_PTR inputBuffer);$/;"	t
PNVENCENCODEPICTURE	ObsNvenc/inc/nvEncodeAPI.h	/^typedef NVENCSTATUS (NVENCAPI* PNVENCENCODEPICTURE)             (void* encoder, NV_ENC_PIC_PARAMS* encodePicParams);$/;"	t
PNVENCGETENCODECAPS	ObsNvenc/inc/nvEncodeAPI.h	/^typedef NVENCSTATUS (NVENCAPI* PNVENCGETENCODECAPS)             (void* encoder, GUID encodeGUID, NV_ENC_CAPS_PARAM* capsParam, int* capsVal);$/;"	t
PNVENCGETENCODEGUIDCOUNT	ObsNvenc/inc/nvEncodeAPI.h	/^typedef NVENCSTATUS (NVENCAPI* PNVENCGETENCODEGUIDCOUNT)        (void* encoder, uint32_t* encodeGUIDCount);$/;"	t
PNVENCGETENCODEGUIDS	ObsNvenc/inc/nvEncodeAPI.h	/^typedef NVENCSTATUS (NVENCAPI* PNVENCGETENCODEGUIDS)            (void* encoder, GUID* GUIDs, uint32_t guidArraySize, uint32_t* GUIDCount);$/;"	t
PNVENCGETENCODEPRESETCONFIG	ObsNvenc/inc/nvEncodeAPI.h	/^typedef NVENCSTATUS (NVENCAPI* PNVENCGETENCODEPRESETCONFIG)     (void* encoder, GUID encodeGUID, GUID  presetGUID, NV_ENC_PRESET_CONFIG* presetConfig);$/;"	t
PNVENCGETENCODEPRESETCOUNT	ObsNvenc/inc/nvEncodeAPI.h	/^typedef NVENCSTATUS (NVENCAPI* PNVENCGETENCODEPRESETCOUNT)      (void* encoder, GUID encodeGUID, uint32_t* encodePresetGUIDCount);$/;"	t
PNVENCGETENCODEPRESETGUIDS	ObsNvenc/inc/nvEncodeAPI.h	/^typedef NVENCSTATUS (NVENCAPI* PNVENCGETENCODEPRESETGUIDS)      (void* encoder, GUID encodeGUID, GUID* presetGUIDs, uint32_t guidArraySize, uint32_t* encodePresetGUIDCount);$/;"	t
PNVENCGETENCODEPROFILEGUIDCOUNT	ObsNvenc/inc/nvEncodeAPI.h	/^typedef NVENCSTATUS (NVENCAPI* PNVENCGETENCODEPROFILEGUIDCOUNT) (void* encoder, GUID encodeGUID, uint32_t* encodeProfileGUIDCount);$/;"	t
PNVENCGETENCODEPROFILEGUIDS	ObsNvenc/inc/nvEncodeAPI.h	/^typedef NVENCSTATUS (NVENCAPI* PNVENCGETENCODEPROFILEGUIDS)     (void* encoder, GUID encodeGUID, GUID* profileGUIDs, uint32_t guidArraySize, uint32_t* GUIDCount);$/;"	t
PNVENCGETENCODESTATS	ObsNvenc/inc/nvEncodeAPI.h	/^typedef NVENCSTATUS (NVENCAPI* PNVENCGETENCODESTATS)            (void* encoder, NV_ENC_STAT* encodeStats);$/;"	t
PNVENCGETINPUTFORMATCOUNT	ObsNvenc/inc/nvEncodeAPI.h	/^typedef NVENCSTATUS (NVENCAPI* PNVENCGETINPUTFORMATCOUNT)       (void* encoder, GUID encodeGUID, uint32_t* inputFmtCount);$/;"	t
PNVENCGETINPUTFORMATS	ObsNvenc/inc/nvEncodeAPI.h	/^typedef NVENCSTATUS (NVENCAPI* PNVENCGETINPUTFORMATS)           (void* encoder, GUID encodeGUID, NV_ENC_BUFFER_FORMAT* inputFmts, uint32_t inputFmtArraySize, uint32_t* inputFmtCount);$/;"	t
PNVENCGETSEQUENCEPARAMS	ObsNvenc/inc/nvEncodeAPI.h	/^typedef NVENCSTATUS (NVENCAPI* PNVENCGETSEQUENCEPARAMS)         (void* encoder, NV_ENC_SEQUENCE_PARAM_PAYLOAD* sequenceParamPayload);$/;"	t
PNVENCINITFUNC	Source/Encoder_NVENC.cpp	/^typedef bool (__cdecl *PNVENCINITFUNC)(ConfigFile **appConfig);$/;"	t	file:
PNVENCINITIALIZEENCODER	ObsNvenc/inc/nvEncodeAPI.h	/^typedef NVENCSTATUS (NVENCAPI* PNVENCINITIALIZEENCODER)         (void* encoder, NV_ENC_INITIALIZE_PARAMS* createEncodeParams);$/;"	t
PNVENCINVALIDATEREFFRAMES	ObsNvenc/inc/nvEncodeAPI.h	/^typedef NVENCSTATUS (NVENCAPI* PNVENCINVALIDATEREFFRAMES)       (void* encoder, uint64_t invalidRefFrameTimeStamp);$/;"	t
PNVENCLOCKBITSTREAM	ObsNvenc/inc/nvEncodeAPI.h	/^typedef NVENCSTATUS (NVENCAPI* PNVENCLOCKBITSTREAM)             (void* encoder, NV_ENC_LOCK_BITSTREAM* lockBitstreamBufferParams);$/;"	t
PNVENCLOCKINPUTBUFFER	ObsNvenc/inc/nvEncodeAPI.h	/^typedef NVENCSTATUS (NVENCAPI* PNVENCLOCKINPUTBUFFER)           (void* encoder, NV_ENC_LOCK_INPUT_BUFFER* lockInputBufferParams);$/;"	t
PNVENCMAPINPUTRESOURCE	ObsNvenc/inc/nvEncodeAPI.h	/^typedef NVENCSTATUS (NVENCAPI* PNVENCMAPINPUTRESOURCE)          (void* encoder, NV_ENC_MAP_INPUT_RESOURCE* mapInputResParams);$/;"	t
PNVENCODEAPICREATEINSTANCE	ObsNvenc/inc/nvmain.h	/^typedef NVENCSTATUS(NVENCAPI* PNVENCODEAPICREATEINSTANCE)(NV_ENCODE_API_FUNCTION_LIST *functionList);$/;"	t
PNVENCOPENENCODESESSION	ObsNvenc/inc/nvEncodeAPI.h	/^typedef NVENCSTATUS (NVENCAPI* PNVENCOPENENCODESESSION)         (void* device, uint32_t deviceType, void** encoder);$/;"	t
PNVENCOPENENCODESESSIONEX	ObsNvenc/inc/nvEncodeAPI.h	/^typedef NVENCSTATUS (NVENCAPI* PNVENCOPENENCODESESSIONEX)       (NV_ENC_OPEN_ENCODE_SESSION_EX_PARAMS *openSessionExParams, void** encoder);$/;"	t
PNVENCRECONFIGUREENCODER	ObsNvenc/inc/nvEncodeAPI.h	/^typedef NVENCSTATUS (NVENCAPI* PNVENCRECONFIGUREENCODER)        (void* encoder, NV_ENC_RECONFIGURE_PARAMS* reInitEncodeParams);$/;"	t
PNVENCREGISTERASYNCEVENT	ObsNvenc/inc/nvEncodeAPI.h	/^typedef NVENCSTATUS (NVENCAPI* PNVENCREGISTERASYNCEVENT)        (void* encoder, NV_ENC_EVENT_PARAMS* eventParams);$/;"	t
PNVENCREGISTERRESOURCE	ObsNvenc/inc/nvEncodeAPI.h	/^typedef NVENCSTATUS (NVENCAPI* PNVENCREGISTERRESOURCE)          (void* encoder, NV_ENC_REGISTER_RESOURCE* registerResParams);$/;"	t
PNVENCUNLOCKBITSTREAM	ObsNvenc/inc/nvEncodeAPI.h	/^typedef NVENCSTATUS (NVENCAPI* PNVENCUNLOCKBITSTREAM)           (void* encoder, NV_ENC_OUTPUT_PTR bitstreamBuffer);$/;"	t
PNVENCUNLOCKINPUTBUFFER	ObsNvenc/inc/nvEncodeAPI.h	/^typedef NVENCSTATUS (NVENCAPI* PNVENCUNLOCKINPUTBUFFER)         (void* encoder, NV_ENC_INPUT_PTR inputBuffer);$/;"	t
PNVENCUNMAPINPUTRESOURCE	ObsNvenc/inc/nvEncodeAPI.h	/^typedef NVENCSTATUS (NVENCAPI* PNVENCUNMAPINPUTRESOURCE)        (void* encoder, NV_ENC_INPUT_PTR mappedInputBuffer);$/;"	t
PNVENCUNREGISTERASYNCEVENT	ObsNvenc/inc/nvEncodeAPI.h	/^typedef NVENCSTATUS (NVENCAPI* PNVENCUNREGISTERASYNCEVENT)      (void* encoder, NV_ENC_EVENT_PARAMS* eventParams);$/;"	t
PNVENCUNREGISTERRESOURCE	ObsNvenc/inc/nvEncodeAPI.h	/^typedef NVENCSTATUS (NVENCAPI* PNVENCUNREGISTERRESOURCE)        (void* encoder, NV_ENC_REGISTERED_PTR registeredRes);$/;"	t
POSTDELAY	lame/libmp3lame/encoder.h	72;"	d
POST_INSTALL	lame/ACM/ADbg/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	lame/ACM/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	lame/ACM/ddk/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	lame/ACM/tinyxml/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	lame/Dll/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	lame/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	lame/debian/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	lame/doc/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	lame/doc/html/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	lame/doc/man/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	lame/dshow/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	lame/frontend/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	lame/include/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	lame/libmp3lame/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	lame/libmp3lame/i386/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	lame/libmp3lame/vector/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	lame/mac/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	lame/macosx/English.lproj/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	lame/macosx/LAME.xcodeproj/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	lame/macosx/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	lame/misc/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	lame/mpglib/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	lame/vc_solution/Makefile	/^POST_INSTALL = :$/;"	m
POST_UNINSTALL	lame/ACM/ADbg/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	lame/ACM/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	lame/ACM/ddk/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	lame/ACM/tinyxml/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	lame/Dll/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	lame/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	lame/debian/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	lame/doc/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	lame/doc/html/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	lame/doc/man/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	lame/dshow/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	lame/frontend/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	lame/include/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	lame/libmp3lame/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	lame/libmp3lame/i386/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	lame/libmp3lame/vector/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	lame/mac/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	lame/macosx/English.lproj/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	lame/macosx/LAME.xcodeproj/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	lame/macosx/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	lame/misc/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	lame/mpglib/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	lame/vc_solution/Makefile	/^POST_UNINSTALL = :$/;"	m
POW20	lame/libmp3lame/machine.h	92;"	d
POW20	libfaac/aacquant.h	37;"	d
PPSBufSize	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16          PPSBufSize;$/;"	m
PPSBuffer	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU8           *PPSBuffer;$/;"	m
PPSId	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16          PPSId;$/;"	m
PPS_BUFF	QSVHelper/IPCInfo.h	54;"	d
PRECALC_SIZE	lame/libmp3lame/quantize_pvt.h	30;"	d
PRECALC_SIZE	libfaac/aacquant.h	33;"	d
PRECOMPUTE	lame/libmp3lame/util.c	35;"	d	file:
PRED_A	libfaac/backpred.h	26;"	d
PRED_ALPHA	libfaac/backpred.h	25;"	d
PRED_B	libfaac/backpred.h	27;"	d
PREFIX_ADDRESS_SIZE	minhook/src/HDE32/hde32.h	59;"	d
PREFIX_ADDRESS_SIZE	minhook/src/HDE64/include/hde64.h	60;"	d
PREFIX_LOCK	minhook/src/HDE32/hde32.h	55;"	d
PREFIX_LOCK	minhook/src/HDE64/include/hde64.h	56;"	d
PREFIX_OPERAND_SIZE	minhook/src/HDE32/hde32.h	58;"	d
PREFIX_OPERAND_SIZE	minhook/src/HDE64/include/hde64.h	59;"	d
PREFIX_REPNZ	minhook/src/HDE32/hde32.h	56;"	d
PREFIX_REPNZ	minhook/src/HDE64/include/hde64.h	57;"	d
PREFIX_REPX	minhook/src/HDE32/hde32.h	57;"	d
PREFIX_REPX	minhook/src/HDE64/include/hde64.h	58;"	d
PREFIX_SEGMENT_CS	minhook/src/HDE32/hde32.h	49;"	d
PREFIX_SEGMENT_CS	minhook/src/HDE64/include/hde64.h	50;"	d
PREFIX_SEGMENT_DS	minhook/src/HDE32/hde32.h	51;"	d
PREFIX_SEGMENT_DS	minhook/src/HDE64/include/hde64.h	52;"	d
PREFIX_SEGMENT_ES	minhook/src/HDE32/hde32.h	52;"	d
PREFIX_SEGMENT_ES	minhook/src/HDE64/include/hde64.h	53;"	d
PREFIX_SEGMENT_FS	minhook/src/HDE32/hde32.h	53;"	d
PREFIX_SEGMENT_FS	minhook/src/HDE64/include/hde64.h	54;"	d
PREFIX_SEGMENT_GS	minhook/src/HDE32/hde32.h	54;"	d
PREFIX_SEGMENT_GS	minhook/src/HDE64/include/hde64.h	55;"	d
PREFIX_SEGMENT_SS	minhook/src/HDE32/hde32.h	50;"	d
PREFIX_SEGMENT_SS	minhook/src/HDE64/include/hde64.h	51;"	d
PRESENTEXPROC	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^typedef HRESULT (WINAPI *PRESENTEXPROC)(IDirect3DDevice9*, const RECT*, const RECT*, HWND, const RGNDATA*, DWORD);$/;"	t	file:
PRESENTPROC	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^typedef HRESULT (WINAPI *PRESENTPROC)(IDirect3DDevice9*, const RECT*, const RECT*, HWND, const RGNDATA*);$/;"	t	file:
PRE_66	minhook/src/HDE32/table32.h	22;"	d
PRE_66	minhook/src/HDE64/src/table64.h	22;"	d
PRE_67	minhook/src/HDE32/table32.h	23;"	d
PRE_67	minhook/src/HDE64/src/table64.h	23;"	d
PRE_ALL	minhook/src/HDE32/table32.h	26;"	d
PRE_ALL	minhook/src/HDE64/src/table64.h	26;"	d
PRE_ANY	minhook/src/HDE32/table32.h	18;"	d
PRE_ANY	minhook/src/HDE64/src/table64.h	18;"	d
PRE_F2	minhook/src/HDE32/table32.h	20;"	d
PRE_F2	minhook/src/HDE64/src/table64.h	20;"	d
PRE_F3	minhook/src/HDE32/table32.h	21;"	d
PRE_F3	minhook/src/HDE64/src/table64.h	21;"	d
PRE_INSTALL	lame/ACM/ADbg/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	lame/ACM/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	lame/ACM/ddk/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	lame/ACM/tinyxml/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	lame/Dll/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	lame/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	lame/debian/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	lame/doc/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	lame/doc/html/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	lame/doc/man/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	lame/dshow/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	lame/frontend/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	lame/include/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	lame/libmp3lame/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	lame/libmp3lame/i386/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	lame/libmp3lame/vector/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	lame/mac/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	lame/macosx/English.lproj/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	lame/macosx/LAME.xcodeproj/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	lame/macosx/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	lame/misc/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	lame/mpglib/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	lame/vc_solution/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_LOCK	minhook/src/HDE32/table32.h	24;"	d
PRE_LOCK	minhook/src/HDE64/src/table64.h	24;"	d
PRE_NONE	minhook/src/HDE32/table32.h	19;"	d
PRE_NONE	minhook/src/HDE64/src/table64.h	19;"	d
PRE_SEG	minhook/src/HDE32/table32.h	25;"	d
PRE_SEG	minhook/src/HDE64/src/table64.h	25;"	d
PRE_UNINSTALL	lame/ACM/ADbg/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	lame/ACM/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	lame/ACM/ddk/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	lame/ACM/tinyxml/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	lame/Dll/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	lame/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	lame/debian/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	lame/doc/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	lame/doc/html/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	lame/doc/man/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	lame/dshow/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	lame/frontend/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	lame/include/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	lame/libmp3lame/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	lame/libmp3lame/i386/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	lame/libmp3lame/vector/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	lame/mac/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	lame/macosx/English.lproj/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	lame/macosx/LAME.xcodeproj/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	lame/macosx/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	lame/misc/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	lame/mpglib/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	lame/vc_solution/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRINTF_INT16_DEC_WIDTH	minhook/src/pstdint.h	227;"	d
PRINTF_INT16_DEC_WIDTH	minhook/src/pstdint.h	525;"	d
PRINTF_INT16_HEX_WIDTH	minhook/src/pstdint.h	215;"	d
PRINTF_INT16_HEX_WIDTH	minhook/src/pstdint.h	512;"	d
PRINTF_INT16_MODIFIER	minhook/src/pstdint.h	203;"	d
PRINTF_INT16_MODIFIER	minhook/src/pstdint.h	337;"	d
PRINTF_INT16_MODIFIER	minhook/src/pstdint.h	344;"	d
PRINTF_INT16_MODIFIER	minhook/src/pstdint.h	362;"	d
PRINTF_INT16_MODIFIER	minhook/src/pstdint.h	368;"	d
PRINTF_INT32_DEC_WIDTH	minhook/src/pstdint.h	224;"	d
PRINTF_INT32_DEC_WIDTH	minhook/src/pstdint.h	522;"	d
PRINTF_INT32_HEX_WIDTH	minhook/src/pstdint.h	212;"	d
PRINTF_INT32_HEX_WIDTH	minhook/src/pstdint.h	509;"	d
PRINTF_INT32_MODIFIER	minhook/src/pstdint.h	200;"	d
PRINTF_INT32_MODIFIER	minhook/src/pstdint.h	383;"	d
PRINTF_INT32_MODIFIER	minhook/src/pstdint.h	388;"	d
PRINTF_INT32_MODIFIER	minhook/src/pstdint.h	395;"	d
PRINTF_INT32_MODIFIER	minhook/src/pstdint.h	413;"	d
PRINTF_INT32_MODIFIER	minhook/src/pstdint.h	419;"	d
PRINTF_INT32_MODIFIER	minhook/src/pstdint.h	425;"	d
PRINTF_INT64_DEC_WIDTH	minhook/src/pstdint.h	221;"	d
PRINTF_INT64_DEC_WIDTH	minhook/src/pstdint.h	519;"	d
PRINTF_INT64_HEX_WIDTH	minhook/src/pstdint.h	209;"	d
PRINTF_INT64_HEX_WIDTH	minhook/src/pstdint.h	506;"	d
PRINTF_INT64_MODIFIER	minhook/src/pstdint.h	197;"	d
PRINTF_INT64_MODIFIER	minhook/src/pstdint.h	448;"	d
PRINTF_INT64_MODIFIER	minhook/src/pstdint.h	461;"	d
PRINTF_INT64_MODIFIER	minhook/src/pstdint.h	470;"	d
PRINTF_INT64_MODIFIER	minhook/src/pstdint.h	479;"	d
PRINTF_INT8_DEC_WIDTH	minhook/src/pstdint.h	230;"	d
PRINTF_INT8_DEC_WIDTH	minhook/src/pstdint.h	528;"	d
PRINTF_INT8_HEX_WIDTH	minhook/src/pstdint.h	218;"	d
PRINTF_INT8_HEX_WIDTH	minhook/src/pstdint.h	515;"	d
PRINTF_INTMAX_DEC_WIDTH	minhook/src/pstdint.h	236;"	d
PRINTF_INTMAX_DEC_WIDTH	minhook/src/pstdint.h	552;"	d
PRINTF_INTMAX_DEC_WIDTH	minhook/src/pstdint.h	568;"	d
PRINTF_INTMAX_HEX_WIDTH	minhook/src/pstdint.h	233;"	d
PRINTF_INTMAX_HEX_WIDTH	minhook/src/pstdint.h	549;"	d
PRINTF_INTMAX_HEX_WIDTH	minhook/src/pstdint.h	565;"	d
PRINTF_INTMAX_MODIFIER	minhook/src/pstdint.h	206;"	d
PRINTF_INTMAX_MODIFIER	minhook/src/pstdint.h	546;"	d
PRINTF_INTMAX_MODIFIER	minhook/src/pstdint.h	562;"	d
PRINTF_INTPTR_MODIFIER	minhook/src/pstdint.h	687;"	d
PRINTF_LEAST16_MODIFIER	minhook/src/pstdint.h	587;"	d
PRINTF_LEAST32_MODIFIER	minhook/src/pstdint.h	586;"	d
PRINTF_LEAST64_MODIFIER	minhook/src/pstdint.h	600;"	d
PRIX16	extras/inttypes.h	108;"	d
PRIX16	lame/inttypes.h	108;"	d
PRIX32	extras/inttypes.h	121;"	d
PRIX32	lame/inttypes.h	121;"	d
PRIX64	extras/inttypes.h	134;"	d
PRIX64	lame/inttypes.h	134;"	d
PRIX8	extras/inttypes.h	95;"	d
PRIX8	lame/inttypes.h	95;"	d
PRIXFAST16	extras/inttypes.h	116;"	d
PRIXFAST16	lame/inttypes.h	116;"	d
PRIXFAST32	extras/inttypes.h	129;"	d
PRIXFAST32	lame/inttypes.h	129;"	d
PRIXFAST64	extras/inttypes.h	142;"	d
PRIXFAST64	lame/inttypes.h	142;"	d
PRIXFAST8	extras/inttypes.h	103;"	d
PRIXFAST8	lame/inttypes.h	103;"	d
PRIXLEAST16	extras/inttypes.h	112;"	d
PRIXLEAST16	lame/inttypes.h	112;"	d
PRIXLEAST32	extras/inttypes.h	125;"	d
PRIXLEAST32	lame/inttypes.h	125;"	d
PRIXLEAST64	extras/inttypes.h	138;"	d
PRIXLEAST64	lame/inttypes.h	138;"	d
PRIXLEAST8	extras/inttypes.h	99;"	d
PRIXLEAST8	lame/inttypes.h	99;"	d
PRIXMAX	extras/inttypes.h	147;"	d
PRIXMAX	lame/inttypes.h	147;"	d
PRIXPTR	extras/inttypes.h	152;"	d
PRIXPTR	lame/inttypes.h	152;"	d
PRId16	extras/inttypes.h	64;"	d
PRId16	lame/inttypes.h	64;"	d
PRId32	extras/inttypes.h	71;"	d
PRId32	lame/inttypes.h	71;"	d
PRId64	extras/inttypes.h	78;"	d
PRId64	lame/inttypes.h	78;"	d
PRId8	extras/inttypes.h	57;"	d
PRId8	lame/inttypes.h	57;"	d
PRIdFAST16	extras/inttypes.h	68;"	d
PRIdFAST16	lame/inttypes.h	68;"	d
PRIdFAST32	extras/inttypes.h	75;"	d
PRIdFAST32	lame/inttypes.h	75;"	d
PRIdFAST64	extras/inttypes.h	82;"	d
PRIdFAST64	lame/inttypes.h	82;"	d
PRIdFAST8	extras/inttypes.h	61;"	d
PRIdFAST8	lame/inttypes.h	61;"	d
PRIdLEAST16	extras/inttypes.h	66;"	d
PRIdLEAST16	lame/inttypes.h	66;"	d
PRIdLEAST32	extras/inttypes.h	73;"	d
PRIdLEAST32	lame/inttypes.h	73;"	d
PRIdLEAST64	extras/inttypes.h	80;"	d
PRIdLEAST64	lame/inttypes.h	80;"	d
PRIdLEAST8	extras/inttypes.h	59;"	d
PRIdLEAST8	lame/inttypes.h	59;"	d
PRIdMAX	extras/inttypes.h	85;"	d
PRIdMAX	lame/inttypes.h	85;"	d
PRIdPTR	extras/inttypes.h	88;"	d
PRIdPTR	lame/inttypes.h	88;"	d
PRIi16	extras/inttypes.h	65;"	d
PRIi16	lame/inttypes.h	65;"	d
PRIi32	extras/inttypes.h	72;"	d
PRIi32	lame/inttypes.h	72;"	d
PRIi64	extras/inttypes.h	79;"	d
PRIi64	lame/inttypes.h	79;"	d
PRIi8	extras/inttypes.h	58;"	d
PRIi8	lame/inttypes.h	58;"	d
PRIiFAST16	extras/inttypes.h	69;"	d
PRIiFAST16	lame/inttypes.h	69;"	d
PRIiFAST32	extras/inttypes.h	76;"	d
PRIiFAST32	lame/inttypes.h	76;"	d
PRIiFAST64	extras/inttypes.h	83;"	d
PRIiFAST64	lame/inttypes.h	83;"	d
PRIiFAST8	extras/inttypes.h	62;"	d
PRIiFAST8	lame/inttypes.h	62;"	d
PRIiLEAST16	extras/inttypes.h	67;"	d
PRIiLEAST16	lame/inttypes.h	67;"	d
PRIiLEAST32	extras/inttypes.h	74;"	d
PRIiLEAST32	lame/inttypes.h	74;"	d
PRIiLEAST64	extras/inttypes.h	81;"	d
PRIiLEAST64	lame/inttypes.h	81;"	d
PRIiLEAST8	extras/inttypes.h	60;"	d
PRIiLEAST8	lame/inttypes.h	60;"	d
PRIiMAX	extras/inttypes.h	86;"	d
PRIiMAX	lame/inttypes.h	86;"	d
PRIiPTR	extras/inttypes.h	89;"	d
PRIiPTR	lame/inttypes.h	89;"	d
PRIo16	extras/inttypes.h	105;"	d
PRIo16	lame/inttypes.h	105;"	d
PRIo32	extras/inttypes.h	118;"	d
PRIo32	lame/inttypes.h	118;"	d
PRIo64	extras/inttypes.h	131;"	d
PRIo64	lame/inttypes.h	131;"	d
PRIo8	extras/inttypes.h	92;"	d
PRIo8	lame/inttypes.h	92;"	d
PRIoFAST16	extras/inttypes.h	113;"	d
PRIoFAST16	lame/inttypes.h	113;"	d
PRIoFAST32	extras/inttypes.h	126;"	d
PRIoFAST32	lame/inttypes.h	126;"	d
PRIoFAST64	extras/inttypes.h	139;"	d
PRIoFAST64	lame/inttypes.h	139;"	d
PRIoFAST8	extras/inttypes.h	100;"	d
PRIoFAST8	lame/inttypes.h	100;"	d
PRIoLEAST16	extras/inttypes.h	109;"	d
PRIoLEAST16	lame/inttypes.h	109;"	d
PRIoLEAST32	extras/inttypes.h	122;"	d
PRIoLEAST32	lame/inttypes.h	122;"	d
PRIoLEAST64	extras/inttypes.h	135;"	d
PRIoLEAST64	lame/inttypes.h	135;"	d
PRIoLEAST8	extras/inttypes.h	96;"	d
PRIoLEAST8	lame/inttypes.h	96;"	d
PRIoMAX	extras/inttypes.h	144;"	d
PRIoMAX	lame/inttypes.h	144;"	d
PRIoPTR	extras/inttypes.h	149;"	d
PRIoPTR	lame/inttypes.h	149;"	d
PRIu16	extras/inttypes.h	106;"	d
PRIu16	lame/inttypes.h	106;"	d
PRIu32	extras/inttypes.h	119;"	d
PRIu32	lame/inttypes.h	119;"	d
PRIu64	extras/inttypes.h	132;"	d
PRIu64	lame/inttypes.h	132;"	d
PRIu8	extras/inttypes.h	93;"	d
PRIu8	lame/inttypes.h	93;"	d
PRIuFAST16	extras/inttypes.h	114;"	d
PRIuFAST16	lame/inttypes.h	114;"	d
PRIuFAST32	extras/inttypes.h	127;"	d
PRIuFAST32	lame/inttypes.h	127;"	d
PRIuFAST64	extras/inttypes.h	140;"	d
PRIuFAST64	lame/inttypes.h	140;"	d
PRIuFAST8	extras/inttypes.h	101;"	d
PRIuFAST8	lame/inttypes.h	101;"	d
PRIuLEAST16	extras/inttypes.h	110;"	d
PRIuLEAST16	lame/inttypes.h	110;"	d
PRIuLEAST32	extras/inttypes.h	123;"	d
PRIuLEAST32	lame/inttypes.h	123;"	d
PRIuLEAST64	extras/inttypes.h	136;"	d
PRIuLEAST64	lame/inttypes.h	136;"	d
PRIuLEAST8	extras/inttypes.h	97;"	d
PRIuLEAST8	lame/inttypes.h	97;"	d
PRIuMAX	extras/inttypes.h	145;"	d
PRIuMAX	lame/inttypes.h	145;"	d
PRIuPTR	extras/inttypes.h	150;"	d
PRIuPTR	lame/inttypes.h	150;"	d
PRIx16	extras/inttypes.h	107;"	d
PRIx16	lame/inttypes.h	107;"	d
PRIx32	extras/inttypes.h	120;"	d
PRIx32	lame/inttypes.h	120;"	d
PRIx64	extras/inttypes.h	133;"	d
PRIx64	lame/inttypes.h	133;"	d
PRIx8	extras/inttypes.h	94;"	d
PRIx8	lame/inttypes.h	94;"	d
PRIxFAST16	extras/inttypes.h	115;"	d
PRIxFAST16	lame/inttypes.h	115;"	d
PRIxFAST32	extras/inttypes.h	128;"	d
PRIxFAST32	lame/inttypes.h	128;"	d
PRIxFAST64	extras/inttypes.h	141;"	d
PRIxFAST64	lame/inttypes.h	141;"	d
PRIxFAST8	extras/inttypes.h	102;"	d
PRIxFAST8	lame/inttypes.h	102;"	d
PRIxLEAST16	extras/inttypes.h	111;"	d
PRIxLEAST16	lame/inttypes.h	111;"	d
PRIxLEAST32	extras/inttypes.h	124;"	d
PRIxLEAST32	lame/inttypes.h	124;"	d
PRIxLEAST64	extras/inttypes.h	137;"	d
PRIxLEAST64	lame/inttypes.h	137;"	d
PRIxLEAST8	extras/inttypes.h	98;"	d
PRIxLEAST8	lame/inttypes.h	98;"	d
PRIxMAX	extras/inttypes.h	146;"	d
PRIxMAX	lame/inttypes.h	146;"	d
PRIxPTR	extras/inttypes.h	151;"	d
PRIxPTR	lame/inttypes.h	151;"	d
PRODUCT_COPYRIGHT	QSVHelper/IntelSupport/include/current_date.h	14;"	d
PRODUCT_NAME	QSVHelper/IntelSupport/include/current_date.h	4;"	d
PRODUCT_VERSION	QSVHelper/IntelSupport/include/current_date.h	16;"	d
PRODUCT_VERSION_STRING	QSVHelper/IntelSupport/include/current_date.h	18;"	d
PROGRAMS	lame/frontend/Makefile	/^PROGRAMS = $(bin_PROGRAMS)$/;"	m
PROTOTYPES	lame/config.h	47;"	d
PROTOTYPES	lame/configMS.h	47;"	d
PROTOTYPES	lame/mac/Precompile_Common.h	57;"	d
PROT_READ	Source/mongoose.c	1628;"	d	file:
PROT_READ	Source/mongoose.c	1659;"	d	file:
PRTYC_IDLE	lame/frontend/main.c	59;"	d	file:
PRTYC_REGULAR	lame/frontend/main.c	60;"	d	file:
PRTYD_MAXIMUM	lame/frontend/main.c	62;"	d	file:
PRTYD_MINIMUM	lame/frontend/main.c	61;"	d	file:
PSAPI_VERSION	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.h	29;"	d
PSFB12	lame/libmp3lame/encoder.h	106;"	d
PSFB21	lame/libmp3lame/encoder.h	105;"	d
PSV_VOL_MUTED	PSVPlugin/psvplugin.h	25;"	d
PSYCH_H	libfaac/psych.h	23;"	d
PSY_ALPHA_VERSION	lame/libmp3lame/version.h	47;"	d
PSY_BETA_VERSION	lame/libmp3lame/version.h	48;"	d
PSY_GPSYCHO	lame/include/lame.h	/^    PSY_GPSYCHO = 1,$/;"	e	enum:Psy_model_e
PSY_MAJOR_VERSION	lame/libmp3lame/version.h	45;"	d
PSY_MINOR_VERSION	lame/libmp3lame/version.h	46;"	d
PSY_NSPSYTUNE	lame/include/lame.h	/^    PSY_NSPSYTUNE = 2$/;"	e	enum:Psy_model_e
PTRDIFF_MAX	extras/stdint.h	138;"	d
PTRDIFF_MAX	extras/stdint.h	141;"	d
PTRDIFF_MAX	lame/stdint.h	138;"	d
PTRDIFF_MAX	lame/stdint.h	141;"	d
PTRDIFF_MAX	librtmp/stdint.h	137;"	d
PTRDIFF_MAX	librtmp/stdint.h	140;"	d
PTRDIFF_MAX	minhook/src/pstdint.h	690;"	d
PTRDIFF_MIN	extras/stdint.h	137;"	d
PTRDIFF_MIN	extras/stdint.h	140;"	d
PTRDIFF_MIN	lame/stdint.h	137;"	d
PTRDIFF_MIN	lame/stdint.h	140;"	d
PTRDIFF_MIN	librtmp/stdint.h	136;"	d
PTRDIFF_MIN	librtmp/stdint.h	139;"	d
PTRDIFF_MIN	minhook/src/pstdint.h	693;"	d
PULONG_PTR	lame/ACM/ddk/msacmdrv.h	/^typedef  unsigned long ULONG_PTR, *PULONG_PTR;$/;"	t
PVIDEO_CAPTURE_FILTER_SETTINGS	DShowPlugin/IVideoCaptureFilter.h	/^}VIDEO_CAPTURE_FILTER_SETTINGS, *PVIDEO_CAPTURE_FILTER_SETTINGS;$/;"	t
PVIDEO_CAPTURE_FILTER_SETTINGS_EX	DShowPlugin/IVideoCaptureFilter.h	/^}VIDEO_CAPTURE_FILTER_SETTINGS_EX, *PVIDEO_CAPTURE_FILTER_SETTINGS_EX;$/;"	t
P_STR	Source/Encoder_QSV.cpp	112;"	d	file:
P_STR	Source/Encoder_QSV.cpp	127;"	d	file:
PackPlanar	DShowPlugin/ImageMadness.cpp	/^void PackPlanar(LPBYTE convertBuffer, LPBYTE lpPlanar, UINT renderCX, UINT renderCY, UINT pitch, UINT startY, UINT endY, UINT linePitch, UINT lineShift)$/;"	f
PackPlanarThread	DShowPlugin/DeviceSource.cpp	/^static DWORD STDCALL PackPlanarThread(ConvertData *data)$/;"	f	file:
Packet	Source/Encoder_MP3.cpp	/^    List<BYTE> Packet;$/;"	m	struct:AACDataPacket	file:
Packet	Source/Encoder_QSV.cpp	/^    List<BYTE> Packet;$/;"	m	struct:VideoPacket	file:
Packet	Source/Encoder_x264.cpp	/^    List<BYTE> Packet;$/;"	m	struct:VideoPacket	file:
PacketType	Source/OBS.h	/^enum PacketType$/;"	g
PacketType_Audio	Source/OBS.h	/^    PacketType_Audio$/;"	e	enum:PacketType
PacketType_VideoDisposable	Source/OBS.h	/^    PacketType_VideoDisposable,$/;"	e	enum:PacketType
PacketType_VideoHigh	Source/OBS.h	/^    PacketType_VideoHigh,$/;"	e	enum:PacketType
PacketType_VideoHighest	Source/OBS.h	/^    PacketType_VideoHighest,$/;"	e	enum:PacketType
PacketType_VideoLow	Source/OBS.h	/^    PacketType_VideoLow,$/;"	e	enum:PacketType
Padding_type	lame/include/lame.h	/^} Padding_type;$/;"	t
Padding_type_e	lame/include/lame.h	/^typedef enum Padding_type_e {$/;"	g
PageCache	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public CefState PageCache { get; set; }$/;"	p	class:Shared.BrowserInstanceSettings
PaintEvent	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserRenderHandler.cs	/^        public PaintEventHandler PaintEvent { private get; set; }$/;"	p	class:Browser.BrowserRenderHandler
PaintEventHandler	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserRenderHandler.cs	/^    public delegate void PaintEventHandler(IntPtr sharedHandle);$/;"	m	namespace:Browser
Palette	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	/^    Palette()$/;"	f	class:Palette
Palette	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	/^class Palette$/;"	c	file:
PaletteSetEntries	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	/^HRESULT STDMETHODCALLTYPE PaletteSetEntries(LPDIRECTDRAWPALETTE palette, DWORD dwFlags, DWORD dwStartingEntry, DWORD dwCount, LPPALETTEENTRY lpEntries)$/;"	f
Parameter_Bool	OBSApi/GraphicsSystem.h	/^    Parameter_Bool,$/;"	e	enum:ShaderParameterType
Parameter_Float	OBSApi/GraphicsSystem.h	/^    Parameter_Float,$/;"	e	enum:ShaderParameterType
Parameter_Int	OBSApi/GraphicsSystem.h	/^    Parameter_Int,$/;"	e	enum:ShaderParameterType
Parameter_Matrix	OBSApi/GraphicsSystem.h	/^    Parameter_Matrix,$/;"	e	enum:ShaderParameterType
Parameter_Matrix3x3	OBSApi/GraphicsSystem.h	/^    Parameter_Matrix3x3,$/;"	e	enum:ShaderParameterType
Parameter_String	OBSApi/GraphicsSystem.h	/^    Parameter_String,$/;"	e	enum:ShaderParameterType
Parameter_Texture	OBSApi/GraphicsSystem.h	/^    Parameter_Texture$/;"	e	enum:ShaderParameterType
Parameter_Unknown	OBSApi/GraphicsSystem.h	/^    Parameter_Unknown,$/;"	e	enum:ShaderParameterType
Parameter_Vector	OBSApi/GraphicsSystem.h	/^    Parameter_Vector=Parameter_Vector3,$/;"	e	enum:ShaderParameterType
Parameter_Vector2	OBSApi/GraphicsSystem.h	/^    Parameter_Vector2,$/;"	e	enum:ShaderParameterType
Parameter_Vector3	OBSApi/GraphicsSystem.h	/^    Parameter_Vector3,$/;"	e	enum:ShaderParameterType
Parameter_Vector4	OBSApi/GraphicsSystem.h	/^    Parameter_Vector4,$/;"	e	enum:ShaderParameterType
Parameters	QSVHelper/QSVStuff.cpp	/^Parameters::Parameters()$/;"	f	class:Parameters
Parameters	QSVHelper/QSVStuff.cpp	/^Parameters::Parameters(const Parameters& o) : Parameters()$/;"	f	class:Parameters
Parameters	QSVHelper/QSVStuff.h	/^struct Parameters$/;"	s
Params	Source/D3D10System.h	/^    List<ShaderParam>   Params;$/;"	m	class:D3D10Shader
Params	Source/D3D10System.h	/^    List<ShaderParam>   Params;$/;"	m	struct:ShaderProcessor
ParamsRestore	lame/ACM/AEncodeProperties.cpp	/^void AEncodeProperties::ParamsRestore()$/;"	f	class:AEncodeProperties
ParamsSave	lame/ACM/AEncodeProperties.cpp	/^void AEncodeProperties::ParamsSave()$/;"	f	class:AEncodeProperties
Parent	lame/ACM/tinyxml/tinyxml.h	/^	TiXmlNode* Parent() const					{ return parent; }$/;"	f	class:TiXmlNode
Parse	lame/ACM/tinyxml/tinyxmlparser.cpp	/^const char* TiXmlAttribute::Parse( const char* p )$/;"	f	class:TiXmlAttribute
Parse	lame/ACM/tinyxml/tinyxmlparser.cpp	/^const char* TiXmlComment::Parse( const char* p )$/;"	f	class:TiXmlComment
Parse	lame/ACM/tinyxml/tinyxmlparser.cpp	/^const char* TiXmlDeclaration::Parse( const char* p )$/;"	f	class:TiXmlDeclaration
Parse	lame/ACM/tinyxml/tinyxmlparser.cpp	/^const char* TiXmlDocument::Parse( const char* p )$/;"	f	class:TiXmlDocument
Parse	lame/ACM/tinyxml/tinyxmlparser.cpp	/^const char* TiXmlElement::Parse( const char* p )$/;"	f	class:TiXmlElement
Parse	lame/ACM/tinyxml/tinyxmlparser.cpp	/^const char* TiXmlText::Parse( const char* p )$/;"	f	class:TiXmlText
Parse	lame/ACM/tinyxml/tinyxmlparser.cpp	/^const char* TiXmlUnknown::Parse( const char* p )$/;"	f	class:TiXmlUnknown
ParseFile	libmfx/src/mfx_plugin_hive.cpp	/^bool MFX::MFXPluginsInFS::ParseFile(FILE * f, PluginDescriptionRecord & descriptionRecord) $/;"	f	class:MFX::MFXPluginsInFS
ParseKVPair	libmfx/src/mfx_plugin_hive.cpp	/^bool MFX::MFXPluginsInFS::ParseKVPair( msdk_disp_char * key, msdk_disp_char* value, PluginDescriptionRecord & descriptionRecord)$/;"	f	class:MFX::MFXPluginsInFS
ParseString	OBSApi/Utility/XConfig.cpp	/^bool  XConfig::ParseString(const String& config)$/;"	f	class:XConfig
ParseUpdateArchiveManifest	Source/Updater.cpp	/^bool ParseUpdateArchiveManifest(TCHAR *path, BOOL *updatesAvailable, String &description)$/;"	f
ParseUpdateManifest	Source/Updater.cpp	/^bool ParseUpdateManifest (TCHAR *path, BOOL *updatesAvailable, String &description)$/;"	f
PassBracers	Source/CodeTokenizer.cpp	/^BOOL CodeTokenizer::PassBracers(TSTR lpCodePos)$/;"	f	class:CodeTokenizer
PassParenthesis	Source/CodeTokenizer.cpp	/^BOOL CodeTokenizer::PassParenthesis(TSTR lpCodePos)$/;"	f	class:CodeTokenizer
PassString	Source/CodeTokenizer.cpp	/^BOOL CodeTokenizer::PassString(TSTR lpCodePos)$/;"	f	class:CodeTokenizer
PatchInfo	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^struct PatchInfo {$/;"	s	file:
Patents	lame/doc/html/links.html	/^<h3><a name="Patents">Patent Information:<\/a><\/h3>$/;"	a
Path	CLRBrowserSourcePlugin/Plugin/Shared/BrowserPlugin.cs	/^        public String Path { get; private set; }$/;"	p	class:Shared.BrowserPlugin
PathKeyName	libmfx/src/mfx_plugin_hive.cpp	/^    const wchar_t PathKeyName[] = L"Path";$/;"	v
Pause	DShowPlugin/CaptureFilter.cpp	/^STDMETHODIMP CaptureFilter::Pause()                                        {state = State_Paused;  return S_OK;}$/;"	f	class:CaptureFilter
Payload	libmfx/include/msdk/include/mfxstructures.h	/^    mfxPayload      **Payload;      \/* for field pair, first field uses even payloads and second field uses odd payloads *\/$/;"	m
PcmBuffer	lame/frontend/get_audio.c	/^struct PcmBuffer {$/;"	s	file:
PcmBuffer	lame/frontend/get_audio.c	/^typedef struct PcmBuffer PcmBuffer;$/;"	t	file:
PeakSample	lame/libmp3lame/util.h	/^        sample_t PeakSample;$/;"	m
PeekAtAToken	Source/D3D10ShaderProcessor.cpp	26;"	d	file:
PendingStreams	Source/OBS.h	/^        PendingStreams() : mutex(OSCreateMutex()) {}$/;"	f	struct:OBS::PendingStreams
PendingStreams	Source/OBS.h	/^    struct PendingStreams$/;"	s	class:OBS
PersistSessionCookies	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public bool PersistSessionCookies { get; set; }$/;"	p	class:Shared.BrowserRuntimeSettings
Phi	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    float           Phi;              \/* Outer angle of spotlight cone *\/$/;"	m	struct:_D3DLIGHT8
PicStruct	libmfx/include/msdk/include/mfxcommon.h	/^    mfxU16  PicStruct;$/;"	m
PicStruct	libmfx/include/msdk/include/mfxstructures.h	/^            mfxU16      PicStruct;$/;"	m
PicStruct	libmfx/include/msdk/include/mfxstructures.h	/^            mfxU16  PicStruct;$/;"	m
PicStruct	libmfx/include/msdk/include/mfxstructures.h	/^        mfxU16      PicStruct;$/;"	m	struct:<anonymous>::mfxRefPic
PicStruct	libmfx/include/msdk/include/mfxstructures.h	/^        mfxU16      PicStruct;$/;"	m
PicStruct	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16          PicStruct;$/;"	m
PicStruct	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16  PicStruct;$/;"	m
PicTimingSEI	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16      PicTimingSEI;           \/* tri-state option *\/$/;"	m
PinHasMajorType	DShowPlugin/DShowPlugin.cpp	/^bool PinHasMajorType(IPin *pin, const GUID *majorType)$/;"	f
Pinfo	lame/frontend/gtkanal.c	/^plotting_data Pinfo[NUMPINFO];$/;"	v
PingGM	Source/Main.cpp	/^void PingGM(void)$/;"	f
Pitch	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    INT                 Pitch;$/;"	m	struct:_D3DLOCKED_RECT
Pitch	extras/dxgi1_2.h	/^    UINT Pitch;$/;"	m	struct:DXGI_OUTDUPL_POINTER_SHAPE_INFO
Pitch	libmfx/include/msdk/include/mfxstructures.h	/^        mfxU16  Pitch;$/;"	m
PitchHigh	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16      PitchHigh;$/;"	m
PitchLow	libmfx/include/msdk/include/mfxstructures.h	/^        mfxU16  PitchLow;$/;"	m
PixelAlphaEnable	libmfx/include/msdk/include/mfxstructures.h	/^        mfxU16 PixelAlphaEnable;$/;"	m	struct:mfxVPPCompInputStream
PixelShaderVersion	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	/^    DWORD   PixelShaderVersion;$/;"	m	struct:_D3DCAPS8
Plane	OBSApi/Utility/XMath.h	/^    inline Plane()                                                              {}$/;"	f	struct:Plane
Plane	OBSApi/Utility/XMath.h	/^    inline Plane(const Vect &a, const Vect &b, const Vect &c)                   {CreateFromTri(a, b, c);}$/;"	f	struct:Plane
Plane	OBSApi/Utility/XMath.h	/^    inline Plane(const Vect &a, float b) : Dir(a), Dist(b)                      {}$/;"	f	struct:Plane
Plane	OBSApi/Utility/XMath.h	/^    inline Plane(float a, float b, float c, float d) : Dir(a, b, c), Dist(d)    {}$/;"	f	struct:Plane
Plane	OBSApi/Utility/XMath.h	/^struct BASE_EXPORT Plane$/;"	s
PlaneTest	OBSApi/Utility/XMath.cpp	/^int Bounds::PlaneTest(const Plane &p) const$/;"	f	class:Bounds
PlgVerKeyName	libmfx/src/mfx_plugin_hive.cpp	/^    const wchar_t PlgVerKeyName[] = L"PluginVersion";$/;"	v
Plugin	CLRHostPlugin/CLRHostInterop/Plugin.h	/^    public interface class Plugin$/;"	c	namespace:CLROBS
Plugin.h	CLRHostPlugin/CLRHostInterop/Plugin.h	1;"	F
PluginClose	libmfx/include/msdk/include/mfxplugin.h	/^    mfxStatus (MFX_CDECL *PluginClose) (mfxHDL pthis);$/;"	m	struct:mfxPlugin
PluginDescriptionRecord	libmfx/include/mfx_plugin_hive.h	/^        PluginDescriptionRecord()$/;"	f	class:MFX::PluginDescriptionRecord
PluginDescriptionRecord	libmfx/include/mfx_plugin_hive.h	/^    class PluginDescriptionRecord :  public mfxPluginParam $/;"	c	namespace:MFX
PluginInfo	Source/OBS.h	/^struct PluginInfo$/;"	s
PluginInit	libmfx/include/msdk/include/mfxplugin.h	/^    mfxStatus (MFX_CDECL *PluginInit) (mfxHDL pthis, mfxCoreInterface *core);$/;"	m	struct:mfxPlugin
PluginManager	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserManager.cs	/^        internal BrowserPluginManager PluginManager { get; private set; }$/;"	p	class:Browser.BrowserManager
PluginModule	libmfx/include/mfx_load_plugin.h	/^    class PluginModule$/;"	c	namespace:MFX
PluginModule	libmfx/src/mfx_load_plugin.cpp	/^MFX::PluginModule::PluginModule()$/;"	f	class:MFX::PluginModule
PluginModule	libmfx/src/mfx_load_plugin.cpp	/^MFX::PluginModule::PluginModule(const PluginModule & that) $/;"	f	class:MFX::PluginModule
PluginModule	libmfx/src/mfx_load_plugin.cpp	/^MFX::PluginModule::PluginModule(const msdk_disp_char * path)$/;"	f	class:MFX::PluginModule
PluginSettings	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^            public BrowserPluginSettings PluginSettings { get; set; }$/;"	p	class:Shared.BrowserSettings.SerializedSettings
PluginSettings	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public BrowserPluginSettings PluginSettings$/;"	p	class:Shared.BrowserSettings
PluginStr	DShowPlugin/DShowPlugin.h	43;"	d
PluginStr	PSVPlugin/psvplugin.h	32;"	d
PluginStr	scenesw/SceneSwitcher.h	30;"	d
PluginUID	libmfx/include/msdk/include/mfxplugin.h	/^    mfxPluginUID PluginUID;$/;"	m	struct:mfxPluginParam
PluginVersion	libmfx/include/msdk/include/mfxplugin.h	/^    mfxU16  PluginVersion;$/;"	m	struct:mfxPluginParam
Plugins	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public CefState Plugins { get; set; }$/;"	p	class:Shared.BrowserInstanceSettings
Plugins	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public List<BrowserPlugin> Plugins$/;"	p	class:Shared.BrowserRuntimeSettings
PluginsDialogProc	Source/WindowStuff.cpp	/^INT_PTR CALLBACK OBS::PluginsDialogProc(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam)$/;"	f	class:OBS
PointInside	OBSApi/Utility/XMath.h	/^    inline BOOL PointInside(const Vect &point) const$/;"	f	struct:Bounds
PointInsideTopDown	OBSApi/Utility/XMath.h	/^    inline BOOL PointInsideTopDown(const Vect &point) const$/;"	f	struct:Bounds
PointInsideTri	OBSApi/Utility/XMath.h	/^inline BOOL PointInsideTri(const Vect2 &v1, const Vect2 &v2, const Vect2 &v3, const Vect2 &p)$/;"	f
PointOnFiniteLine	OBSApi/Utility/XMath.cpp	/^BOOL PointOnFiniteLine(const Vect &lineV1, const Vect &lineV2, const Vect &p)$/;"	f
PointerPosition	extras/dxgi1_2.h	/^    DXGI_OUTDUPL_POINTER_POSITION PointerPosition;$/;"	m	struct:DXGI_OUTDUPL_FRAME_INFO
PointerShapeBufferSize	extras/dxgi1_2.h	/^    UINT PointerShapeBufferSize;$/;"	m	struct:DXGI_OUTDUPL_FRAME_INFO
PolarToCart	OBSApi/Utility/XMath.cpp	/^Vect PolarToCart(const Vect &polar)$/;"	f
PolarToCart	OBSApi/Utility/XMath.cpp	/^Vect PolarToCart(float latitude, float longitude, float dist)$/;"	f
PolarToNorm	OBSApi/Utility/XMath.cpp	/^Vect PolarToNorm(const Vect2 &polar)$/;"	f
Pool	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DPOOL             Pool;$/;"	m	struct:_D3DINDEXBUFFER_DESC
Pool	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DPOOL             Pool;$/;"	m	struct:_D3DSURFACE_DESC
Pool	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DPOOL             Pool;$/;"	m	struct:_D3DVERTEXBUFFER_DESC
Pool	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DPOOL             Pool;$/;"	m	struct:_D3DVOLUME_DESC
Pool	OBSApi/Utility/FastAlloc.cpp	/^struct Pool$/;"	s	file:
PoolList	OBSApi/Utility/FastAlloc.cpp	/^Pool *PoolList[256];$/;"	v
PopBox	Source/MP4FileStream.cpp	/^    void PopBox(BufferOutputSerializer &output)$/;"	f	class:MP4FileStream	file:
Position	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DVECTOR       Position;         \/* Position in world space *\/$/;"	m	struct:_D3DLIGHT8
Position	extras/dxgi1_2.h	/^    POINT Position;$/;"	m	struct:DXGI_OUTDUPL_POINTER_POSITION
Posix	lame/doc/html/links.html	/^<p><b>&nbsp;&nbsp;<a name="Posix">Posix (Linux, MacOS X, BSD, Solaris, etc.):$/;"	a
PostConfigureStreamButtons	Source/OBS.cpp	/^void OBS::PostConfigureStreamButtons()$/;"	f	class:OBS
PostStopMessage	Source/OBS.h	/^    inline void PostStopMessage(bool forceStop=false) {if(hwndMain) PostMessage(hwndMain, OBS_REQUESTSTOP, forceStop ? 1 : 0, 0);}$/;"	f	class:OBS
PostTask	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/SimpleDispatcher.cs	/^        public void PostTask(Action action)$/;"	m	class:RemoteBrowser.SimpleDispatcher
Power	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    float           Power;          \/* Sharpness if specular highlight *\/$/;"	m	struct:_D3DMATERIAL8
Precompile_Common.h	lame/mac/Precompile_Common.h	1;"	F
PredCalcPrediction	libfaac/backpred.c	/^void PredCalcPrediction(double *act_spec, double *last_spec, int btype,$/;"	f
PredInit	libfaac/backpred.c	/^void PredInit(faacEncHandle hEncoder)$/;"	f
PreferredRefList	libmfx/include/msdk/include/mfxstructures.h	/^    } PreferredRefList[32], RejectedRefList[16], LongTermRefList[16];$/;"	m
Preprocess	CLRBrowserSourcePlugin/Plugin/BrowserSource.cs	/^        public override void Preprocess()$/;"	m	class:CLRBrowserSourcePlugin.BrowserSource
Preprocess	CLRHostPlugin/CLRHostInterop/AbstractImageSource.cpp	/^void AbstractImageSource::Preprocess() $/;"	f	class:AbstractImageSource
Preprocess	CLRHostPlugin/CLRHostPlugin/CLRImageSource.cpp	/^void CLRImageSource::Preprocess()$/;"	f	class:CLRImageSource
Preprocess	CLRHostPlugin/CLRHostPlugin/ImageSourceBridge.h	/^    virtual void Preprocess() $/;"	f	class:ImageSourceBridge
Preprocess	DShowPlugin/DeviceSource.cpp	/^void DeviceSource::Preprocess()$/;"	f	class:DeviceSource
Preprocess	GraphicsCapture/GraphicsCaptureSource.cpp	/^void GraphicsCaptureSource::Preprocess()$/;"	f	class:GraphicsCaptureSource
Preprocess	OBSApi/Scene.cpp	/^void Scene::Preprocess()$/;"	f	class:Scene
Preprocess	OBSApi/Scene.h	/^    virtual void Preprocess() {}$/;"	f	class:ImageSource
Preprocess	Source/DesktopImageSource.cpp	/^    void Preprocess()$/;"	f	class:DesktopImageSource
Preprocess	Source/TextOutputSource.cpp	/^    void Preprocess()$/;"	f	class:TextOutputSource
PreprocessWindows8MonitorCapture	Source/DesktopImageSource.cpp	/^    void PreprocessWindows8MonitorCapture()$/;"	f	class:DesktopImageSource
Present	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *Present )( $/;"	m	struct:IDXGISwapChain1Vtbl
Present1	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *Present1 )( $/;"	m	struct:IDXGISwapChain1Vtbl
PresentationIntervals	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	/^    DWORD   PresentationIntervals;$/;"	m	struct:_D3DCAPS8
PresetOptions	lame/Dll/BladeMP3EncDLL.c	/^static void PresetOptions( lame_global_flags *gfp, LONG myPreset )$/;"	f	file:
PresortedCodebook_VCB11	libfaac/bitstream.c	/^static const unsigned short PresortedCodebook_VCB11[] = {11, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 9, 7, 5, 3, 1};$/;"	v	file:
PreviewDrawType	Source/OBS.h	/^enum PreviewDrawType {$/;"	g
Preview_Fullscreen	Source/OBS.h	/^    Preview_Fullscreen,$/;"	e	enum:PreviewDrawType
Preview_Projector	Source/OBS.h	/^    Preview_Projector$/;"	e	enum:PreviewDrawType
Preview_Standard	Source/OBS.h	/^    Preview_Standard,$/;"	e	enum:PreviewDrawType
Previous	lame/ACM/tinyxml/tinyxml.cpp	/^TiXmlAttribute* TiXmlAttribute::Previous() const$/;"	f	class:TiXmlAttribute
PreviousSibling	lame/ACM/tinyxml/tinyxml.cpp	/^TiXmlNode* TiXmlNode::PreviousSibling( const std::string& value ) const$/;"	f	class:TiXmlNode
PreviousSibling	lame/ACM/tinyxml/tinyxml.h	/^	TiXmlNode* PreviousSibling() const			{ return prev; }$/;"	f	class:TiXmlNode
PrimitiveMiscCaps	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	/^    DWORD   PrimitiveMiscCaps;$/;"	m	struct:_D3DCAPS8
Print	lame/ACM/tinyxml/tinyxml.cpp	/^void TiXmlAttribute::Print( FILE* cfile, int \/*depth*\/ ) const$/;"	f	class:TiXmlAttribute
Print	lame/ACM/tinyxml/tinyxml.cpp	/^void TiXmlComment::Print( FILE* cfile, int depth ) const$/;"	f	class:TiXmlComment
Print	lame/ACM/tinyxml/tinyxml.cpp	/^void TiXmlDeclaration::Print( FILE* cfile, int depth ) const$/;"	f	class:TiXmlDeclaration
Print	lame/ACM/tinyxml/tinyxml.cpp	/^void TiXmlDocument::Print( FILE* cfile, int depth ) const$/;"	f	class:TiXmlDocument
Print	lame/ACM/tinyxml/tinyxml.cpp	/^void TiXmlElement::Print( FILE* cfile, int depth ) const$/;"	f	class:TiXmlElement
Print	lame/ACM/tinyxml/tinyxml.cpp	/^void TiXmlText::Print( FILE* cfile, int depth ) const$/;"	f	class:TiXmlText
Print	lame/ACM/tinyxml/tinyxml.cpp	/^void TiXmlUnknown::Print( FILE* cfile, int depth ) const$/;"	f	class:TiXmlUnknown
Print	lame/ACM/tinyxml/tinyxml.h	/^	void Print() const								{ Print( stdout, 0 ); }$/;"	f	class:TiXmlDocument
Priority	libmfx/include/msdk/include/mfxstructures.h	/^        mfxI16  Priority;$/;"	m
PriorityId	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16      PriorityId;$/;"	m
ProcMessage	CLRHostPlugin/CLRHostPlugin/SettingsPaneBridge.h	/^    virtual INT_PTR ProcMessage(UINT message, WPARAM wParam, LPARAM lParam)$/;"	f	class:SettingsPaneBridge
ProcMessage	NoiseGate/NoiseGate.cpp	/^INT_PTR NoiseGateSettings::ProcMessage(UINT message, WPARAM wParam, LPARAM lParam)$/;"	f	class:NoiseGateSettings
ProcMessage	Source/SettingsAdvanced.cpp	/^INT_PTR SettingsAdvanced::ProcMessage(UINT message, WPARAM wParam, LPARAM lParam)$/;"	f	class:SettingsAdvanced
ProcMessage	Source/SettingsAudio.cpp	/^INT_PTR SettingsAudio::ProcMessage(UINT message, WPARAM wParam, LPARAM lParam)$/;"	f	class:SettingsAudio
ProcMessage	Source/SettingsEncoding.cpp	/^INT_PTR SettingsEncoding::ProcMessage(UINT message, WPARAM wParam, LPARAM lParam)$/;"	f	class:SettingsEncoding
ProcMessage	Source/SettingsGeneral.cpp	/^INT_PTR SettingsGeneral::ProcMessage(UINT message, WPARAM wParam, LPARAM lParam)$/;"	f	class:SettingsGeneral
ProcMessage	Source/SettingsHotkeys.cpp	/^INT_PTR SettingsHotkeys::ProcMessage(UINT message, WPARAM wParam, LPARAM lParam)$/;"	f	class:SettingsHotkeys
ProcMessage	Source/SettingsPublish.cpp	/^INT_PTR SettingsPublish::ProcMessage(UINT message, WPARAM wParam, LPARAM lParam)$/;"	f	class:SettingsPublish
ProcMessage	Source/SettingsQSV.cpp	/^INT_PTR SettingsQSV::ProcMessage(UINT message, WPARAM wParam, LPARAM lParam)$/;"	f	class:SettingsQSV
ProcMessage	Source/SettingsVideo.cpp	/^INT_PTR SettingsVideo::ProcMessage(UINT message, WPARAM wParam, LPARAM lParam)$/;"	f	class:SettingsVideo
ProcMessage	scenesw/SceneSwitcherSettings.cpp	/^INT_PTR SceneSwitcherSettings::ProcMessage(UINT message, WPARAM wParam, LPARAM lParam)$/;"	f	class:SceneSwitcherSettings
Process	NoiseGate/NoiseGate.cpp	/^AudioSegment *NoiseGateFilter::Process(AudioSegment *segment)$/;"	f	class:NoiseGateFilter
Process	OBSApi/Utility/XT.cpp	/^void XStringLog::Process()$/;"	f	class:XStringLog
ProcessData	Source/D3D10Shader.cpp	/^bool D3D10Shader::ProcessData(ShaderProcessor &processor, CTSTR lpFileName)$/;"	f	class:D3D10Shader
ProcessDelayedPackets	Source/DelayedPublisher.cpp	/^    void ProcessDelayedPackets(DWORD timestamp)$/;"	f	class:DelayedPublisher	file:
ProcessEncodedFrame	QSVHelper/Encoder.h	/^    void ProcessEncodedFrame()$/;"	f	struct:Encoder
ProcessEncodedFrame	Source/Encoder_QSV.cpp	/^    void ProcessEncodedFrame(List<DataPacket> &packets, List<PacketType> &packetTypes, DWORD outputTimestamp, DWORD &out_pts, mfxU32 wait=0)$/;"	f	class:QSVEncoder
ProcessEvents	Source/Main.cpp	/^void WINAPI ProcessEvents()$/;"	f
ProcessFrame	Source/OBSVideoCapture.cpp	/^bool OBS::ProcessFrame(FrameProcessInfo &frameInfo)$/;"	f	class:OBS
ProcessFrameAsync	libmfx/include/msdk/include/mfxplugin++.h	/^    virtual mfxStatus ProcessFrameAsync(const mfxHDL *in, mfxU32 in_num, const mfxHDL *out, mfxU32 out_num, mfxSyncPoint *syncp) {$/;"	f	class:MFXVideoUSER
ProcessOutput	ObsNvenc/src/NVENCEncoder.cpp	/^void NVENCEncoder::ProcessOutput(NVENCEncoderOutputSurface *surf, List<DataPacket> &packets, List<PacketType> &packetTypes, DWORD &out_pts)$/;"	f	class:NVENCEncoder
ProcessPackets	Source/RTMPPublisher.cpp	/^void RTMPPublisher::ProcessPackets()$/;"	f	class:RTMPPublisher
ProcessPanelVisible	Source/OBS.cpp	/^void OBS::ProcessPanelVisible(bool fromResizeWindow)$/;"	f	class:OBS
ProcessRequest	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/AssetSchemeHandler.cs	/^        protected override bool ProcessRequest(CefRequest request, CefCallback callback)$/;"	m	class:RemoteBrowser.AssetSchemeHandler
ProcessScrollMode	Source/TextOutputSource.cpp	/^    float ProcessScrollMode(Gdiplus::Graphics *graphics, Gdiplus::Font *font, Gdiplus::RectF &layoutBox, Gdiplus::StringFormat *format)$/;"	f	class:TextOutputSource	file:
ProcessShader	Source/D3D10ShaderProcessor.cpp	/^BOOL ShaderProcessor::ProcessShader(CTSTR input, CTSTR filename)$/;"	f	class:ShaderProcessor
ProcessString	OBSApi/Utility/XConfig.cpp	/^String XConfig::ProcessString(TSTR &lpTemp)$/;"	f	class:XConfig
ProductVersion	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public string ProductVersion { get; set; }$/;"	p	class:Shared.BrowserRuntimeSettings
ProfileAction	Source/OBS.h	/^enum class ProfileAction {$/;"	c
ProfileNodeInfo	OBSApi/Utility/Profiler.cpp	/^struct BASE_EXPORT ProfileNodeInfo$/;"	s	file:
Profiler.cpp	OBSApi/Utility/Profiler.cpp	1;"	F
Profiler.h	OBSApi/Utility/Profiler.h	1;"	F
ProfilerNode	OBSApi/Utility/Profiler.cpp	/^ProfilerNode::ProfilerNode(CTSTR lpName, bool bSingularize) : lpName(nullptr), parent(nullptr), info(nullptr)$/;"	f	class:ProfilerNode
ProfilerNode	OBSApi/Utility/Profiler.h	/^class BASE_EXPORT ProfilerNode$/;"	c
ProgramBreak	OBSApi/Utility/XT_Windows.h	44;"	d
ProjectorFrameProc	Source/WindowStuff.cpp	/^LRESULT CALLBACK OBS::ProjectorFrameProc(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam)$/;"	f	class:OBS
PropPage.cpp	lame/dshow/PropPage.cpp	1;"	F
PropPage.h	lame/dshow/PropPage.h	1;"	F
PropPage_adv.cpp	lame/dshow/PropPage_adv.cpp	1;"	F
PropPage_adv.h	lame/dshow/PropPage_adv.h	1;"	F
Protected	libmfx/include/msdk/include/mfxastructures.h	/^    mfxU16  Protected;$/;"	m
Protected	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16  Protected;$/;"	m
ProtectedContentMaskedOut	extras/dxgi1_2.h	/^    BOOL ProtectedContentMaskedOut;$/;"	m	struct:DXGI_OUTDUPL_FRAME_INFO
PsyBufferUpdate	libfaac/psych.h	/^void (*PsyBufferUpdate) ( FFT_Tables *fft_tables, GlobalPsyInfo * gpsyInfo, PsyInfo * psyInfo,$/;"	m
PsyBufferUpdate	libfaac/psychkni.c	/^static void PsyBufferUpdate( FFT_Tables *fft_tables, GlobalPsyInfo * gpsyInfo, PsyInfo * psyInfo,$/;"	f	file:
PsyCalculate	libfaac/psych.h	/^void (*PsyCalculate) (ChannelInfo *channelInfo, GlobalPsyInfo *gpsyInfo,$/;"	m
PsyCalculate	libfaac/psychkni.c	/^static void PsyCalculate(ChannelInfo * channelInfo, GlobalPsyInfo * gpsyInfo,$/;"	f	file:
PsyCheckShort	libfaac/psychkni.c	/^static void PsyCheckShort(PsyInfo * psyInfo)$/;"	f	file:
PsyConst_CB2SB_t	lame/libmp3lame/util.h	/^    } PsyConst_CB2SB_t;$/;"	t
PsyConst_t	lame/libmp3lame/util.h	/^    } PsyConst_t;$/;"	t
PsyEnd	libfaac/psych.h	/^void (*PsyEnd) (GlobalPsyInfo *gpsyInfo, PsyInfo *psyInfo,$/;"	m
PsyEnd	libfaac/psychkni.c	/^static void PsyEnd(GlobalPsyInfo * gpsyInfo, PsyInfo * psyInfo, unsigned int numChannels)$/;"	f	file:
PsyInfo	libfaac/psych.h	/^} PsyInfo;$/;"	t
PsyInit	libfaac/psych.h	/^void (*PsyInit) (GlobalPsyInfo *gpsyInfo, PsyInfo *psyInfo,$/;"	m
PsyInit	libfaac/psychkni.c	/^static void PsyInit(GlobalPsyInfo * gpsyInfo, PsyInfo * psyInfo, unsigned int numChannels,$/;"	f	file:
PsyResult_t	lame/libmp3lame/util.h	/^    } PsyResult_t;$/;"	t
PsyStateVar_t	lame/libmp3lame/util.h	/^    } PsyStateVar_t;$/;"	t
Psy_model	lame/include/lame.h	/^} Psy_model;$/;"	t
Psy_model_e	lame/include/lame.h	/^typedef enum Psy_model_e {$/;"	g
PtrTo32	OBSApi/Utility/Inline.h	/^inline unsigned int PtrTo32(void *ptr)$/;"	f
PublishDialogData	Source/Settings.h	/^    struct PublishDialogData$/;"	s	class:SettingsPublish
PublisherAuth	librtmp/rtmp.c	/^PublisherAuth(RTMP *r, AVal *description)$/;"	f	file:
PushBox	Source/MP4FileStream.cpp	/^    void PushBox(BufferOutputSerializer &output, DWORD boxName)$/;"	f	class:MP4FileStream	file:
PushToTalkHotkey	Source/OBSHotkeyHandlers.cpp	/^void STDCALL OBS::PushToTalkHotkey(DWORD hotkey, UPARAM param, bool bDown)$/;"	f	class:OBS
PutBit	libfaac/bitstream.c	/^int PutBit(BitStream *bitStream,$/;"	f
PutBitHcr	libfaac/bitstream.c	/^static int PutBitHcr(BitStream *bitStream,$/;"	f	file:
PutLameVBR	lame/libmp3lame/VbrTag.c	/^PutLameVBR(lame_global_flags const *gfp, size_t nMusicLength, uint8_t * pbtStreamBuffer, uint16_t crc)$/;"	f	file:
PutString	lame/ACM/tinyxml/tinyxml.cpp	/^void TiXmlBase::PutString( const std::string& str, std::ostream* stream )$/;"	f	class:TiXmlBase
PutVbrTag	lame/libmp3lame/VbrTag.c	/^PutVbrTag(lame_global_flags const *gfp, FILE * fpStream)$/;"	f
Q1024	librtmp/dhgroups.h	42;"	d
QP	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16          QP;$/;"	m
QP	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16  QP; \/* per frame QP *\/$/;"	m
QPB	libmfx/include/msdk/include/mfxstructures.h	/^                mfxU16  QPB;$/;"	m
QPI	libmfx/include/msdk/include/mfxstructures.h	/^                mfxU16  QPI;$/;"	m
QPP	libmfx/include/msdk/include/mfxstructures.h	/^                mfxU16  QPP;$/;"	m
QSVEncoder	Source/Encoder_QSV.cpp	/^    QSVEncoder(int fps, int width, int height, int quality, CTSTR preset, bool bUse444, ColorDescription &colorDesc, int maxBitrate, int bufferSize, bool bUseCFR_)$/;"	f	class:QSVEncoder
QSVEncoder	Source/Encoder_QSV.cpp	/^class QSVEncoder : public VideoEncoder$/;"	c	file:
QSVHelper.cpp	QSVHelper/QSVHelper.cpp	1;"	F
QSVStuff.cpp	QSVHelper/QSVStuff.cpp	1;"	F
QSVStuff.h	QSVHelper/QSVStuff.h	1;"	F
QSV_CPU_PLATFORM_HSW	QSVHelper/QSVHelper.cpp	/^        QSV_CPU_PLATFORM_HSW = 1 << 2,$/;"	e	enum:<anonymous>::qsv_cpu_platform	file:
QSV_CPU_PLATFORM_HSW	Source/Encoder_QSV.cpp	/^        QSV_CPU_PLATFORM_HSW$/;"	e	enum:<anonymous>::qsv_cpu_platform	file:
QSV_CPU_PLATFORM_IVB	QSVHelper/QSVHelper.cpp	/^        QSV_CPU_PLATFORM_IVB = 1 << 1,$/;"	e	enum:<anonymous>::qsv_cpu_platform	file:
QSV_CPU_PLATFORM_IVB	Source/Encoder_QSV.cpp	/^        QSV_CPU_PLATFORM_IVB,$/;"	e	enum:<anonymous>::qsv_cpu_platform	file:
QSV_CPU_PLATFORM_SNB	QSVHelper/QSVHelper.cpp	/^        QSV_CPU_PLATFORM_SNB = 1 << 0,$/;"	e	enum:<anonymous>::qsv_cpu_platform	file:
QSV_CPU_PLATFORM_SNB	Source/Encoder_QSV.cpp	/^        QSV_CPU_PLATFORM_SNB,$/;"	e	enum:<anonymous>::qsv_cpu_platform	file:
QSV_CPU_PLATFORM_UNKNOWN	QSVHelper/QSVHelper.cpp	/^        QSV_CPU_PLATFORM_UNKNOWN,$/;"	e	enum:<anonymous>::qsv_cpu_platform	file:
QSV_CPU_PLATFORM_UNKNOWN	Source/Encoder_QSV.cpp	/^        QSV_CPU_PLATFORM_UNKNOWN,$/;"	e	enum:<anonymous>::qsv_cpu_platform	file:
QUAD_LEN	libfaac/bitstream.h	110;"	d
QUANTFAC	lame/libmp3lame/takehiro.c	218;"	d	file:
QUANTFAC	lame/libmp3lame/vbrquantize.c	103;"	d	file:
QUANTFAC	libfaac/aacquant.c	36;"	d	file:
QWORD	OBSApi/Utility/Defs.h	/^typedef unsigned long long  QWORD,ULONG64,UINT64,ULONGLONG;$/;"	t
QWORD_BE	OBSApi/OBSApi.h	60;"	d
Q_MAX	lame/libmp3lame/quantize_pvt.h	47;"	d
Q_MAX2	lame/libmp3lame/quantize_pvt.h	48;"	d
Qm	libmfx/include/msdk/include/mfxjpeg.h	/^    mfxU16    Qm[4][64];$/;"	m
QntStateVar_t	lame/libmp3lame/util.h	/^    } QntStateVar_t;$/;"	t
Quality	libmfx/include/msdk/include/mfxstructures.h	/^            mfxU16  Quality;$/;"	m
QualityId	libmfx/include/msdk/include/mfxstructures.h	/^            mfxU16  QualityId;$/;"	m
QuantizeBand	libfaac/aacquant.c	/^static void QuantizeBand(const double *xp, int *ix, double istep,$/;"	f	file:
QuantizeBand	libfaac/aacquant.c	/^static void QuantizeBand(const double *xp, int *pi, double istep,$/;"	f	file:
QuantizeReflectionCoeffs	libfaac/tns.c	/^static void QuantizeReflectionCoeffs(int fOrder,$/;"	f	file:
Quat	OBSApi/Utility/XMath.cpp	/^Quat::Quat(const Euler &e)$/;"	f	class:Quat
Quat	OBSApi/Utility/XMath.h	/^    explicit inline Quat(__m128 m2) : m(m2)                                     {}$/;"	f	struct:Quat
Quat	OBSApi/Utility/XMath.h	/^    explicit inline Quat(const AxisAngle &aa)                                   {MakeFromAxisAngle(aa);}$/;"	f	struct:Quat
Quat	OBSApi/Utility/XMath.h	/^    explicit inline Quat(const Vect &v)            : m(v.m), w(1.0f)            {}$/;"	f	struct:Quat
Quat	OBSApi/Utility/XMath.h	/^    explicit inline Quat(const Vect &v) : x(v.x), y(v.y), z(v.z), w(1.0f)       {}$/;"	f	struct:Quat
Quat	OBSApi/Utility/XMath.h	/^    inline Quat()                                                               {}$/;"	f	struct:Quat
Quat	OBSApi/Utility/XMath.h	/^    inline Quat(const Vect &v, float d) : x(v.x), y(v.y), z(v.z), w(d)          {}$/;"	f	struct:Quat
Quat	OBSApi/Utility/XMath.h	/^    inline Quat(const Vect &v, float wIn) : m(v.m), w(wIn)                      {}$/;"	f	struct:Quat
Quat	OBSApi/Utility/XMath.h	/^    inline Quat(float a, float b, float c, float d)                             {m = _mm_setr_ps(a, b, c, d);}$/;"	f	struct:Quat
Quat	OBSApi/Utility/XMath.h	/^    inline Quat(float a, float b, float c, float d) : x(a), y(b), z(c), w(d)    {}$/;"	f	struct:Quat
Quat	OBSApi/Utility/XMath.h	/^struct BASE_EXPORT Quat$/;"	s
Query	libmfx/include/mfx_win_reg_key.h	/^    bool Query(const wchar_t *pValueName, wchar_t *pData, mfxU32 &nData) {$/;"	f	class:MFX::WinRegKey
Query	libmfx/include/msdk/include/mfxaudio++.h	/^    virtual mfxStatus Query(mfxAudioParam *in, mfxAudioParam *out) { return MFXAudioDECODE_Query(m_session, in, out); }$/;"	f	class:MFXAudioDECODE
Query	libmfx/include/msdk/include/mfxaudio++.h	/^    virtual mfxStatus Query(mfxAudioParam *in, mfxAudioParam *out) { return MFXAudioENCODE_Query(m_session, in, out); }$/;"	f	class:MFXAudioENCODE
Query	libmfx/include/msdk/include/mfxplugin.h	/^    mfxStatus (MFX_CDECL *Query)(mfxHDL pthis, mfxVideoParam *in, mfxVideoParam *out);$/;"	m	struct:mfxVideoCodecPlugin
Query	libmfx/include/msdk/include/mfxvideo++.h	/^    virtual mfxStatus Query(mfxVideoParam *in, mfxVideoParam *out) { return MFXVideoDECODE_Query(m_session, in, out); }$/;"	f	class:MFXVideoDECODE
Query	libmfx/include/msdk/include/mfxvideo++.h	/^    virtual mfxStatus Query(mfxVideoParam *in, mfxVideoParam *out) { return MFXVideoENCODE_Query(m_session, in, out); }$/;"	f	class:MFXVideoENCODE
Query	libmfx/include/msdk/include/mfxvideo++.h	/^    virtual mfxStatus Query(mfxVideoParam *in, mfxVideoParam *out) { return MFXVideoVPP_Query(m_session, in, out); }$/;"	f	class:MFXVideoVPP
Query	libmfx/src/mfx_win_reg_key.cpp	/^bool WinRegKey::Query(const wchar_t *pValueName, DWORD type, LPBYTE pData, LPDWORD pcbData)$/;"	f	class:MFX::WinRegKey
QueryAccept	DShowPlugin/CaptureFilter.cpp	/^STDMETHODIMP CapturePin::QueryAccept(const AM_MEDIA_TYPE *pmt)$/;"	f	class:CapturePin
QueryAudio	OBSApi/AudioSource.cpp	/^UINT AudioSource::QueryAudio(float curVolume)$/;"	f	class:AudioSource
QueryAudio2	OBSApi/AudioSource.cpp	/^UINT AudioSource::QueryAudio2(float curVolume, bool bCanBurstHack)$/;"	f	class:AudioSource
QueryAudioBuffers	Source/OBSCapture.cpp	/^bool OBS::QueryAudioBuffers(bool bQueriedDesktopDebugParam)$/;"	f	class:OBS
QueryDirection	DShowPlugin/CaptureFilter.cpp	/^STDMETHODIMP CapturePin::QueryDirection(PIN_DIRECTION *pPinDir)    {*pPinDir = PINDIR_INPUT; return NOERROR;}$/;"	f	class:CapturePin
QueryFilterInfo	DShowPlugin/CaptureFilter.cpp	/^STDMETHODIMP CaptureFilter::QueryFilterInfo(FILTER_INFO *pInfo)$/;"	f	class:CaptureFilter
QueryIMPL	libmfx/include/msdk/include/mfxaudio++.h	/^    virtual mfxStatus QueryIMPL(mfxIMPL *impl) { return MFXQueryIMPL(m_session, impl); }$/;"	f	class:MFXAudioSession
QueryIMPL	libmfx/include/msdk/include/mfxvideo++.h	/^    virtual mfxStatus QueryIMPL(mfxIMPL *impl) { return MFXQueryIMPL(m_session, impl); }$/;"	f	class:MFXVideoSession
QueryIOSize	libmfx/include/msdk/include/mfxaudio++.h	/^    virtual mfxStatus QueryIOSize(mfxAudioParam *par, mfxAudioAllocRequest *request) { return MFXAudioDECODE_QueryIOSize(m_session, par, request); }$/;"	f	class:MFXAudioDECODE
QueryIOSize	libmfx/include/msdk/include/mfxaudio++.h	/^    virtual mfxStatus QueryIOSize(mfxAudioParam *par, mfxAudioAllocRequest *request) { return MFXAudioENCODE_QueryIOSize(m_session, par, request); }$/;"	f	class:MFXAudioENCODE
QueryIOSurf	libmfx/include/msdk/include/mfxplugin.h	/^    mfxStatus (MFX_CDECL *QueryIOSurf)(mfxHDL pthis, mfxVideoParam *par, mfxFrameAllocRequest *in, mfxFrameAllocRequest *out); $/;"	m	struct:mfxVideoCodecPlugin
QueryIOSurf	libmfx/include/msdk/include/mfxvideo++.h	/^    virtual mfxStatus QueryIOSurf(mfxVideoParam *par, mfxFrameAllocRequest *request) { return MFXVideoDECODE_QueryIOSurf(m_session, par, request); }$/;"	f	class:MFXVideoDECODE
QueryIOSurf	libmfx/include/msdk/include/mfxvideo++.h	/^    virtual mfxStatus QueryIOSurf(mfxVideoParam *par, mfxFrameAllocRequest *request) { return MFXVideoENCODE_QueryIOSurf(m_session, par, request); }$/;"	f	class:MFXVideoENCODE
QueryIOSurf	libmfx/include/msdk/include/mfxvideo++.h	/^    virtual mfxStatus QueryIOSurf(mfxVideoParam *par, mfxFrameAllocRequest request[2]) { return MFXVideoVPP_QueryIOSurf(m_session, par, request); }$/;"	f	class:MFXVideoVPP
QueryId	DShowPlugin/CaptureFilter.cpp	/^STDMETHODIMP CapturePin::QueryId(LPWSTR *lpId)                     {*lpId = L"Capture Pin"; return S_OK;}$/;"	f	class:CapturePin
QueryInfo	libmfx/src/mfx_win_reg_key.cpp	/^bool WinRegKey::QueryInfo(LPDWORD lpcSubkeys)$/;"	f	class:MFX::WinRegKey
QueryInterface	DShowPlugin/CaptureFilter.cpp	/^    STDMETHODIMP         QueryInterface(REFIID riid, void **ppv)$/;"	f	class:CaptureFlags
QueryInterface	DShowPlugin/CaptureFilter.cpp	/^STDMETHODIMP CaptureEnumMediaTypes::QueryInterface(REFIID riid, void **ppv)$/;"	f	class:CaptureEnumMediaTypes
QueryInterface	DShowPlugin/CaptureFilter.cpp	/^STDMETHODIMP CaptureEnumPins::QueryInterface(REFIID riid, void **ppv)$/;"	f	class:CaptureEnumPins
QueryInterface	DShowPlugin/CaptureFilter.cpp	/^STDMETHODIMP CaptureFilter::QueryInterface(REFIID riid, void **ppv)$/;"	f	class:CaptureFilter
QueryInterface	DShowPlugin/CaptureFilter.cpp	/^STDMETHODIMP CapturePin::QueryInterface(REFIID riid, void **ppv)$/;"	f	class:CapturePin
QueryInterface	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( $/;"	m	struct:IDXGIAdapter2Vtbl
QueryInterface	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( $/;"	m	struct:IDXGIDevice2Vtbl
QueryInterface	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( $/;"	m	struct:IDXGIDisplayControlVtbl
QueryInterface	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( $/;"	m	struct:IDXGIFactory2Vtbl
QueryInterface	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( $/;"	m	struct:IDXGIOutput1Vtbl
QueryInterface	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( $/;"	m	struct:IDXGIOutputDuplicationVtbl
QueryInterface	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( $/;"	m	struct:IDXGIResource1Vtbl
QueryInterface	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( $/;"	m	struct:IDXGISurface2Vtbl
QueryInterface	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( $/;"	m	struct:IDXGISwapChain1Vtbl
QueryInternalConnections	DShowPlugin/CaptureFilter.cpp	/^STDMETHODIMP CapturePin::QueryInternalConnections(IPin **apPin, ULONG *nPin)   {return E_NOTIMPL;}$/;"	f	class:CapturePin
QueryKey	libmfx/include/mfx_win_reg_key.h	/^inline bool QueryKey(WinRegKey & key, const wchar_t *pValueName, T &data ) {$/;"	f	namespace:MFX
QueryKey	libmfx/include/mfx_win_reg_key.h	/^inline bool QueryKey<bool>(WinRegKey & key, const wchar_t *pValueName, bool &data ) {$/;"	f	namespace:MFX
QueryNewAudio	Source/OBSCapture.cpp	/^bool OBS::QueryNewAudio()$/;"	f	class:OBS
QueryPinInfo	DShowPlugin/CaptureFilter.cpp	/^STDMETHODIMP CapturePin::QueryPinInfo(PIN_INFO *pInfo)$/;"	f	class:CapturePin
QueryResourceResidency	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *QueryResourceResidency )( $/;"	m	struct:IDXGIDevice2Vtbl
QueryValueSize	libmfx/src/mfx_win_reg_key.cpp	/^bool WinRegKey::QueryValueSize(const wchar_t *pValueName, DWORD type, LPDWORD pcbData) {$/;"	f	class:MFX::WinRegKey
QueryVendorInfo	DShowPlugin/CaptureFilter.cpp	/^STDMETHODIMP CaptureFilter::QueryVendorInfo(LPWSTR *pVendorInfo)                   {return E_NOTIMPL;}$/;"	f	class:CaptureFilter
QueryVersion	libmfx/include/msdk/include/mfxaudio++.h	/^    virtual mfxStatus QueryVersion(mfxVersion *version) { return MFXQueryVersion(m_session, version); }$/;"	f	class:MFXAudioSession
QueryVersion	libmfx/include/msdk/include/mfxvideo++.h	/^    virtual mfxStatus QueryVersion(mfxVersion *version) { return MFXQueryVersion(m_session, version); }$/;"	f	class:MFXVideoSession
QueueDisableHook	minhook/src/hook.cpp	/^	MH_STATUS QueueDisableHook(void* pTarget)$/;"	f	namespace:MinHook
QueueEnableHook	minhook/src/hook.cpp	/^	MH_STATUS QueueEnableHook(void* pTarget)$/;"	f	namespace:MinHook
QueueEncodeTask	Source/Encoder_QSV.cpp	/^    void QueueEncodeTask(mfxFrameSurface1 *pic, DWORD in_pts)$/;"	f	class:QSVEncoder
QueueTask	QSVHelper/Encoder.h	/^    void QueueTask()$/;"	f	struct:Encoder
QuickClearHotkey	Source/OBS.cpp	55;"	d	file:
QuickLog	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	/^void QuickLog(LPCSTR lpText)$/;"	f
R	libmfx/include/msdk/include/mfxstructures.h	/^        mfxU16   R;$/;"	m
R	libmfx/include/msdk/include/mfxstructures.h	/^        mfxU8   *R;$/;"	m
R0	Source/mongoose.c	2889;"	d	file:
R0	Source/mongoose.c	2897;"	d	file:
R1	Source/mongoose.c	2890;"	d	file:
R1	Source/mongoose.c	2898;"	d	file:
R2	Source/mongoose.c	2891;"	d	file:
R2	Source/mongoose.c	2899;"	d	file:
R3	Source/mongoose.c	2892;"	d	file:
R3	Source/mongoose.c	2900;"	d	file:
R3MIX	lame/include/lame.h	/^    R3MIX = 1000,$/;"	e	enum:preset_mode_e
R4	Source/mongoose.c	2893;"	d	file:
R4	Source/mongoose.c	2901;"	d	file:
RAD	OBSApi/Utility/XMath.h	35;"	d
RAD	OBSApi/Utility/XMath.h	41;"	d
RAIIHelpers.h	OBSApi/Utility/RAIIHelpers.h	1;"	F
RANLIB	lame/ACM/ADbg/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	lame/ACM/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	lame/ACM/ddk/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	lame/ACM/tinyxml/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	lame/Dll/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	lame/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	lame/debian/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	lame/doc/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	lame/doc/html/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	lame/doc/man/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	lame/dshow/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	lame/frontend/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	lame/include/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	lame/libmp3lame/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	lame/libmp3lame/i386/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	lame/libmp3lame/vector/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	lame/mac/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	lame/macosx/English.lproj/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	lame/macosx/LAME.xcodeproj/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	lame/macosx/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	lame/misc/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	lame/mpglib/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	lame/vc_solution/Makefile	/^RANLIB = ranlib$/;"	m
RATE_CONTROL	QSVHelper/SupportStuff.h	70;"	d
RATE_CONTROL	QSVHelper/SupportStuff.h	85;"	d
RATE_CONTROL	Source/Encoder_QSV.cpp	77;"	d	file:
RATE_CONTROL	Source/Encoder_QSV.cpp	93;"	d	file:
RC4_alloc	librtmp/handshake.h	39;"	d
RC4_alloc	librtmp/handshake.h	59;"	d
RC4_alloc	librtmp/handshake.h	77;"	d
RC4_encrypt	librtmp/handshake.h	41;"	d
RC4_encrypt	librtmp/handshake.h	61;"	d
RC4_encrypt	librtmp/handshake.h	79;"	d
RC4_encrypt2	librtmp/handshake.h	42;"	d
RC4_encrypt2	librtmp/handshake.h	62;"	d
RC4_encrypt2	librtmp/handshake.h	80;"	d
RC4_free	librtmp/handshake.h	43;"	d
RC4_free	librtmp/handshake.h	63;"	d
RC4_free	librtmp/handshake.h	81;"	d
RC4_handle	librtmp/handshake.h	/^typedef RC4_KEY *	RC4_handle;$/;"	t
RC4_handle	librtmp/handshake.h	/^typedef arc4_context *	RC4_handle;$/;"	t
RC4_handle	librtmp/handshake.h	/^typedef struct arcfour_ctx*	RC4_handle;$/;"	t
RC4_setkey	librtmp/handshake.h	40;"	d
RC4_setkey	librtmp/handshake.h	60;"	d
RC4_setkey	librtmp/handshake.h	78;"	d
READ_AHEAD	lame/libmp3lame/lame-analysis.h	26;"	d
REAL_IS_FLOAT	lame/mpglib/mpg123.h	63;"	d
REAL_IS_FLOAT	lame/mpglib/mpg123.h	64;"	d
RECURSIVE_CLEAN_TARGETS	lame/ACM/Makefile	/^RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\\$/;"	m
RECURSIVE_CLEAN_TARGETS	lame/Makefile	/^RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\\$/;"	m
RECURSIVE_CLEAN_TARGETS	lame/doc/Makefile	/^RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\\$/;"	m
RECURSIVE_CLEAN_TARGETS	lame/libmp3lame/Makefile	/^RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\\$/;"	m
RECURSIVE_CLEAN_TARGETS	lame/macosx/Makefile	/^RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\\$/;"	m
RECURSIVE_TARGETS	lame/ACM/Makefile	/^RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \\$/;"	m
RECURSIVE_TARGETS	lame/Makefile	/^RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \\$/;"	m
RECURSIVE_TARGETS	lame/doc/Makefile	/^RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \\$/;"	m
RECURSIVE_TARGETS	lame/libmp3lame/Makefile	/^RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \\$/;"	m
RECURSIVE_TARGETS	lame/macosx/Makefile	/^RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \\$/;"	m
REDIR	lame/misc/abx.c	902;"	d	file:
REDIR	lame/misc/abx.c	942;"	d	file:
REG.CPP	lame/dshow/REG.CPP	1;"	F
REG.H	lame/dshow/REG.H	1;"	F
RELEASEPROC	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.h	/^typedef ULONG (WINAPI *RELEASEPROC)(LPVOID);$/;"	t
REPAINT_TIMER_ID	NoiseGate/NoiseGate.h	/^    static const int    REPAINT_TIMER_ID = 1;$/;"	m	class:NoiseGateSettings
REPEATABLE	extras/sal.h	1912;"	d
REPEATABLE	extras/sal.h	1915;"	d
REPORT_BUFF_SIZE	lame/frontend/console.c	41;"	d	file:
RESET_FRAME	libfaac/backpred.h	35;"	d
RESPONSE_LEN	librtmp/rtmp.c	2860;"	d	file:
RESTART_CAPTURE_EVENT	GraphicsCapture/GlobalCaptureStuff.h	26;"	d
RESYNC_COUNT	lame/dshow/Mpegac.h	78;"	d
REVERSE_COLOR	OBSApi/Utility/XT.h	291;"	d
RGBA_to_Color4	OBSApi/Utility/XT.h	301;"	d
RGBA_to_Vect4	OBSApi/Utility/XT.h	295;"	d
RGB_A	OBSApi/Utility/XT.h	276;"	d
RGB_Af	OBSApi/Utility/XT.h	281;"	d
RGB_B	OBSApi/Utility/XT.h	279;"	d
RGB_Bf	OBSApi/Utility/XT.h	284;"	d
RGB_G	OBSApi/Utility/XT.h	278;"	d
RGB_Gf	OBSApi/Utility/XT.h	283;"	d
RGB_R	OBSApi/Utility/XT.h	277;"	d
RGB_Rf	OBSApi/Utility/XT.h	282;"	d
RGB_to_Color	OBSApi/Utility/XT.h	302;"	d
RGB_to_ColorExp	OBSApi/Utility/XT.h	303;"	d
RGB_to_Vect	OBSApi/Utility/XT.h	296;"	d
RGB_to_VectExp	OBSApi/Utility/XT.h	297;"	d
RMS_PERCENTILE	lame/libmp3lame/gain_analysis.h	54;"	d
RMS_WINDOW_TIME_DENOMINATOR	lame/libmp3lame/gain_analysis.h	57;"	d
RMS_WINDOW_TIME_NUMERATOR	lame/libmp3lame/gain_analysis.h	56;"	d
RM_F	lame/ACM/ADbg/Makefile	/^RM_F = rm -f$/;"	m
RM_F	lame/ACM/Makefile	/^RM_F = rm -f$/;"	m
RM_F	lame/ACM/ddk/Makefile	/^RM_F = rm -f$/;"	m
RM_F	lame/ACM/tinyxml/Makefile	/^RM_F = rm -f$/;"	m
RM_F	lame/Dll/Makefile	/^RM_F = rm -f$/;"	m
RM_F	lame/Makefile	/^RM_F = rm -f$/;"	m
RM_F	lame/debian/Makefile	/^RM_F = rm -f$/;"	m
RM_F	lame/doc/Makefile	/^RM_F = rm -f$/;"	m
RM_F	lame/doc/html/Makefile	/^RM_F = rm -f$/;"	m
RM_F	lame/doc/man/Makefile	/^RM_F = rm -f$/;"	m
RM_F	lame/dshow/Makefile	/^RM_F = rm -f$/;"	m
RM_F	lame/frontend/Makefile	/^RM_F = rm -f$/;"	m
RM_F	lame/include/Makefile	/^RM_F = rm -f$/;"	m
RM_F	lame/libmp3lame/Makefile	/^RM_F = rm -f$/;"	m
RM_F	lame/libmp3lame/i386/Makefile	/^RM_F = rm -f$/;"	m
RM_F	lame/libmp3lame/vector/Makefile	/^RM_F = rm -f$/;"	m
RM_F	lame/mac/Makefile	/^RM_F = rm -f$/;"	m
RM_F	lame/macosx/English.lproj/Makefile	/^RM_F = rm -f$/;"	m
RM_F	lame/macosx/LAME.xcodeproj/Makefile	/^RM_F = rm -f$/;"	m
RM_F	lame/macosx/Makefile	/^RM_F = rm -f$/;"	m
RM_F	lame/misc/Makefile	/^RM_F = rm -f$/;"	m
RM_F	lame/mpglib/Makefile	/^RM_F = rm -f$/;"	m
RM_F	lame/vc_solution/Makefile	/^RM_F = rm -f$/;"	m
ROI	libmfx/include/msdk/include/mfxstructures.h	/^    } ROI[256];$/;"	m
ROUNDFAC	lame/libmp3lame/takehiro.c	219;"	d	file:
ROUNDFAC	lame/libmp3lame/vbrquantize.c	/^static DOUBLEX const ROUNDFAC = ROUNDFAC_def;$/;"	v	file:
ROUNDFAC	libfaac/aacquant.c	37;"	d	file:
ROUNDFAC_def	lame/libmp3lame/vbrquantize.c	104;"	d	file:
RTMP	librtmp/rtmp.h	/^    typedef struct RTMP$/;"	s
RTMP	librtmp/rtmp.h	/^    } RTMP;$/;"	t
RTMPChunk	librtmp/rtmp.h	/^    typedef struct RTMPChunk$/;"	s
RTMPChunk	librtmp/rtmp.h	/^    } RTMPChunk;$/;"	t
RTMPPacket	librtmp/rtmp.h	/^    typedef struct RTMPPacket$/;"	s
RTMPPacket	librtmp/rtmp.h	/^    } RTMPPacket;$/;"	t
RTMPPacket_Alloc	librtmp/rtmp.c	/^RTMPPacket_Alloc(RTMPPacket *p, int nSize)$/;"	f
RTMPPacket_Dump	librtmp/rtmp.c	/^RTMPPacket_Dump(RTMPPacket *p)$/;"	f
RTMPPacket_Free	librtmp/rtmp.c	/^RTMPPacket_Free(RTMPPacket *p)$/;"	f
RTMPPacket_IsReady	librtmp/rtmp.h	145;"	d
RTMPPacket_Reset	librtmp/rtmp.c	/^RTMPPacket_Reset(RTMPPacket *p)$/;"	f
RTMPProtocolStrings	librtmp/rtmp.c	/^const char RTMPProtocolStrings[][7] =$/;"	v
RTMPProtocolStringsLower	librtmp/rtmp.c	/^const char RTMPProtocolStringsLower[][7] =$/;"	v
RTMPPublisher	Source/RTMPPublisher.cpp	/^RTMPPublisher::RTMPPublisher()$/;"	f	class:RTMPPublisher
RTMPPublisher	Source/RTMPPublisher.h	/^class RTMPPublisher : public NetworkStream$/;"	c
RTMPPublisher.cpp	Source/RTMPPublisher.cpp	1;"	F
RTMPPublisher.h	Source/RTMPPublisher.h	1;"	F
RTMPSockBuf	librtmp/rtmp.h	/^    typedef struct RTMPSockBuf$/;"	s
RTMPSockBuf	librtmp/rtmp.h	/^    } RTMPSockBuf;$/;"	t
RTMPSockBuf_Close	librtmp/rtmp.c	/^RTMPSockBuf_Close(RTMPSockBuf *sb)$/;"	f
RTMPSockBuf_Fill	librtmp/rtmp.c	/^RTMPSockBuf_Fill(RTMPSockBuf *sb)$/;"	f
RTMPSockBuf_Send	librtmp/rtmp.c	/^RTMPSockBuf_Send(RTMPSockBuf *sb, const char *buf, int len)$/;"	f
RTMPStuff.cpp	Source/RTMPStuff.cpp	1;"	F
RTMPStuff.h	Source/RTMPStuff.h	1;"	F
RTMPTCmd	librtmp/rtmp.c	/^} RTMPTCmd;$/;"	t	file:
RTMPT_CLOSE	librtmp/rtmp.c	/^    RTMPT_OPEN=0, RTMPT_SEND, RTMPT_IDLE, RTMPT_CLOSE$/;"	e	file:
RTMPT_IDLE	librtmp/rtmp.c	/^    RTMPT_OPEN=0, RTMPT_SEND, RTMPT_IDLE, RTMPT_CLOSE$/;"	e	file:
RTMPT_OPEN	librtmp/rtmp.c	/^    RTMPT_OPEN=0, RTMPT_SEND, RTMPT_IDLE, RTMPT_CLOSE$/;"	e	file:
RTMPT_SEND	librtmp/rtmp.c	/^    RTMPT_OPEN=0, RTMPT_SEND, RTMPT_IDLE, RTMPT_CLOSE$/;"	e	file:
RTMPT_cmds	librtmp/rtmp.c	/^static const char *RTMPT_cmds[] =$/;"	v	file:
RTMP_Alloc	librtmp/rtmp.c	/^RTMP_Alloc()$/;"	f
RTMP_BINDINFO	librtmp/rtmp.h	/^    typedef struct RTMP_BINDINFO$/;"	s
RTMP_BINDINFO	librtmp/rtmp.h	/^    } RTMP_BINDINFO;$/;"	t
RTMP_BUFFER_CACHE_SIZE	librtmp/rtmp.h	67;"	d
RTMP_CHANNELS	librtmp/rtmp.h	69;"	d
RTMP_ClientPacket	librtmp/rtmp.c	/^RTMP_ClientPacket(RTMP *r, RTMPPacket *packet)$/;"	f
RTMP_Close	librtmp/rtmp.c	/^RTMP_Close(RTMP *r)$/;"	f
RTMP_Connect	librtmp/rtmp.c	/^RTMP_Connect(RTMP *r, RTMPPacket *cp)$/;"	f
RTMP_Connect0	librtmp/rtmp.c	/^RTMP_Connect0(RTMP *r, struct sockaddr * service)$/;"	f
RTMP_Connect1	librtmp/rtmp.c	/^RTMP_Connect1(RTMP *r, RTMPPacket *cp)$/;"	f
RTMP_ConnectStream	librtmp/rtmp.c	/^RTMP_ConnectStream(RTMP *r, int seekTime)$/;"	f
RTMP_DEFAULT_CHUNKSIZE	librtmp/rtmp.h	64;"	d
RTMP_DefaultFlashVer	librtmp/rtmp.c	/^const AVal RTMP_DefaultFlashVer =$/;"	v
RTMP_DeleteStream	librtmp/rtmp.c	/^RTMP_DeleteStream(RTMP *r)$/;"	f
RTMP_DropRequest	librtmp/rtmp.c	/^RTMP_DropRequest(RTMP *r, int i, int freeit)$/;"	f
RTMP_EnableWrite	librtmp/rtmp.c	/^RTMP_EnableWrite(RTMP *r)$/;"	f
RTMP_FEATURE_ENC	librtmp/rtmp.h	49;"	d
RTMP_FEATURE_HTTP	librtmp/rtmp.h	48;"	d
RTMP_FEATURE_HTTP2	librtmp/rtmp.h	53;"	d
RTMP_FEATURE_MFP	librtmp/rtmp.h	51;"	d
RTMP_FEATURE_SSL	librtmp/rtmp.h	50;"	d
RTMP_FEATURE_WRITE	librtmp/rtmp.h	52;"	d
RTMP_FindFirstMatchingProperty	librtmp/rtmp.c	/^RTMP_FindFirstMatchingProperty(AMFObject *obj, const AVal *name,$/;"	f
RTMP_FindPrefixProperty	librtmp/rtmp.c	/^RTMP_FindPrefixProperty(AMFObject *obj, const AVal *name,$/;"	f
RTMP_Free	librtmp/rtmp.c	/^RTMP_Free(RTMP *r)$/;"	f
RTMP_GetDuration	librtmp/rtmp.c	/^RTMP_GetDuration(RTMP *r)$/;"	f
RTMP_GetNextMediaPacket	librtmp/rtmp.c	/^RTMP_GetNextMediaPacket(RTMP *r, RTMPPacket *packet)$/;"	f
RTMP_GetTime	librtmp/rtmp.c	/^RTMP_GetTime()$/;"	f
RTMP_HashSWF	librtmp/hashswf.c	/^RTMP_HashSWF(const char *url, unsigned int *size, unsigned char *hash,$/;"	f
RTMP_Init	librtmp/rtmp.c	/^RTMP_Init(RTMP *r)$/;"	f
RTMP_IsConnected	librtmp/rtmp.c	/^RTMP_IsConnected(RTMP *r)$/;"	f
RTMP_IsTimedout	librtmp/rtmp.c	/^RTMP_IsTimedout(RTMP *r)$/;"	f
RTMP_LARGE_HEADER_SIZE	librtmp/rtmp.c	64;"	d	file:
RTMP_LF_AUTH	librtmp/rtmp.h	171;"	d
RTMP_LF_BUFX	librtmp/rtmp.h	175;"	d
RTMP_LF_FTCU	librtmp/rtmp.h	176;"	d
RTMP_LF_LIVE	librtmp/rtmp.h	172;"	d
RTMP_LF_PLST	librtmp/rtmp.h	174;"	d
RTMP_LF_SWFV	librtmp/rtmp.h	173;"	d
RTMP_LIB_VERSION	librtmp/rtmp.h	46;"	d
RTMP_LNK	librtmp/rtmp.h	/^    typedef struct RTMP_LNK$/;"	s
RTMP_LNK	librtmp/rtmp.h	/^    } RTMP_LNK;$/;"	t
RTMP_LOGALL	librtmp/log.h	/^        RTMP_LOGDEBUG, RTMP_LOGDEBUG2, RTMP_LOGALL$/;"	e
RTMP_LOGCRIT	librtmp/log.h	/^        RTMP_LOGCRIT=0, RTMP_LOGERROR, RTMP_LOGWARNING, RTMP_LOGINFO,$/;"	e
RTMP_LOGDEBUG	librtmp/log.h	/^        RTMP_LOGDEBUG, RTMP_LOGDEBUG2, RTMP_LOGALL$/;"	e
RTMP_LOGDEBUG2	librtmp/log.h	/^        RTMP_LOGDEBUG, RTMP_LOGDEBUG2, RTMP_LOGALL$/;"	e
RTMP_LOGERROR	librtmp/log.h	/^        RTMP_LOGCRIT=0, RTMP_LOGERROR, RTMP_LOGWARNING, RTMP_LOGINFO,$/;"	e
RTMP_LOGINFO	librtmp/log.h	/^        RTMP_LOGCRIT=0, RTMP_LOGERROR, RTMP_LOGWARNING, RTMP_LOGINFO,$/;"	e
RTMP_LOGWARNING	librtmp/log.h	/^        RTMP_LOGCRIT=0, RTMP_LOGERROR, RTMP_LOGWARNING, RTMP_LOGINFO,$/;"	e
RTMP_LibVersion	librtmp/rtmp.c	/^RTMP_LibVersion()$/;"	f
RTMP_Log	librtmp/log.c	/^void RTMP_Log(int level, const char *format, ...)$/;"	f
RTMP_LogCallback	librtmp/log.h	/^    typedef void (RTMP_LogCallback)(int level, const char *fmt, va_list);$/;"	t
RTMP_LogGetLevel	librtmp/log.c	/^RTMP_LogLevel RTMP_LogGetLevel()$/;"	f
RTMP_LogHex	librtmp/log.c	/^void RTMP_LogHex(int level, const uint8_t *data, unsigned long len)$/;"	f
RTMP_LogHexString	librtmp/log.c	/^void RTMP_LogHexString(int level, const uint8_t *data, unsigned long len)$/;"	f
RTMP_LogLevel	librtmp/log.h	/^    RTMP_LogLevel;$/;"	t
RTMP_LogPrintf	librtmp/log.c	/^void RTMP_LogPrintf(const char *format, ...)$/;"	f
RTMP_LogSetCallback	librtmp/log.c	/^void RTMP_LogSetCallback(RTMP_LogCallback *cbp)$/;"	f
RTMP_LogSetLevel	librtmp/log.c	/^void RTMP_LogSetLevel(RTMP_LogLevel level)$/;"	f
RTMP_LogSetOutput	librtmp/log.c	/^void RTMP_LogSetOutput(FILE *file)$/;"	f
RTMP_LogStatus	librtmp/log.c	/^void RTMP_LogStatus(const char *format, ...)$/;"	f
RTMP_MAX_HEADER_SIZE	librtmp/rtmp.h	101;"	d
RTMP_METHOD	librtmp/rtmp.h	/^    typedef struct RTMP_METHOD$/;"	s
RTMP_METHOD	librtmp/rtmp.h	/^    } RTMP_METHOD;$/;"	t
RTMP_OptUsage	librtmp/rtmp.c	/^static void RTMP_OptUsage()$/;"	f	file:
RTMP_PACKET_SIZE_LARGE	librtmp/rtmp.h	103;"	d
RTMP_PACKET_SIZE_MEDIUM	librtmp/rtmp.h	104;"	d
RTMP_PACKET_SIZE_MINIMUM	librtmp/rtmp.h	106;"	d
RTMP_PACKET_SIZE_SMALL	librtmp/rtmp.h	105;"	d
RTMP_PACKET_TYPE_AUDIO	librtmp/rtmp.h	85;"	d
RTMP_PACKET_TYPE_BYTES_READ_REPORT	librtmp/rtmp.h	80;"	d
RTMP_PACKET_TYPE_CHUNK_SIZE	librtmp/rtmp.h	78;"	d
RTMP_PACKET_TYPE_CLIENT_BW	librtmp/rtmp.h	83;"	d
RTMP_PACKET_TYPE_CONTROL	librtmp/rtmp.h	81;"	d
RTMP_PACKET_TYPE_FLASH_VIDEO	librtmp/rtmp.h	99;"	d
RTMP_PACKET_TYPE_FLEX_MESSAGE	librtmp/rtmp.h	94;"	d
RTMP_PACKET_TYPE_FLEX_SHARED_OBJECT	librtmp/rtmp.h	93;"	d
RTMP_PACKET_TYPE_FLEX_STREAM_SEND	librtmp/rtmp.h	92;"	d
RTMP_PACKET_TYPE_INFO	librtmp/rtmp.h	95;"	d
RTMP_PACKET_TYPE_INVOKE	librtmp/rtmp.h	97;"	d
RTMP_PACKET_TYPE_SERVER_BW	librtmp/rtmp.h	82;"	d
RTMP_PACKET_TYPE_SHARED_OBJECT	librtmp/rtmp.h	96;"	d
RTMP_PACKET_TYPE_VIDEO	librtmp/rtmp.h	86;"	d
RTMP_PROTOCOL_RTMFP	librtmp/rtmp.h	62;"	d
RTMP_PROTOCOL_RTMP	librtmp/rtmp.h	56;"	d
RTMP_PROTOCOL_RTMPE	librtmp/rtmp.h	57;"	d
RTMP_PROTOCOL_RTMPS	librtmp/rtmp.h	59;"	d
RTMP_PROTOCOL_RTMPT	librtmp/rtmp.h	58;"	d
RTMP_PROTOCOL_RTMPTE	librtmp/rtmp.h	60;"	d
RTMP_PROTOCOL_RTMPTS	librtmp/rtmp.h	61;"	d
RTMP_PROTOCOL_UNDEFINED	librtmp/rtmp.h	55;"	d
RTMP_PUB_ALLOC	librtmp/rtmp.h	186;"	d
RTMP_PUB_CLATE	librtmp/rtmp.h	188;"	d
RTMP_PUB_CLEAN	librtmp/rtmp.h	187;"	d
RTMP_PUB_NAME	librtmp/rtmp.h	184;"	d
RTMP_PUB_RESP	librtmp/rtmp.h	185;"	d
RTMP_ParsePlaypath	librtmp/parseurl.c	/^void RTMP_ParsePlaypath(AVal *in, AVal *out)$/;"	f
RTMP_ParseURL	librtmp/parseurl.c	/^int RTMP_ParseURL(const char *url, int *protocol, AVal *host, unsigned int *port,$/;"	f
RTMP_ParseURL2	librtmp/parseurl.c	/^int RTMP_ParseURL2(const char *url, int *protocol, AVal *host, unsigned int *port,$/;"	f
RTMP_Pause	librtmp/rtmp.c	/^int RTMP_Pause(RTMP *r, int DoPause)$/;"	f
RTMP_READ	librtmp/rtmp.h	/^    typedef struct RTMP_READ$/;"	s
RTMP_READ	librtmp/rtmp.h	/^    } RTMP_READ;$/;"	t
RTMP_READ_COMPLETE	librtmp/rtmp.h	222;"	d
RTMP_READ_EOF	librtmp/rtmp.h	224;"	d
RTMP_READ_ERROR	librtmp/rtmp.h	223;"	d
RTMP_READ_GOTFLVK	librtmp/rtmp.h	219;"	d
RTMP_READ_GOTKF	librtmp/rtmp.h	218;"	d
RTMP_READ_HEADER	librtmp/rtmp.h	215;"	d
RTMP_READ_IGNORE	librtmp/rtmp.h	225;"	d
RTMP_READ_NO_IGNORE	librtmp/rtmp.h	217;"	d
RTMP_READ_RESUME	librtmp/rtmp.h	216;"	d
RTMP_READ_SEEKING	librtmp/rtmp.h	220;"	d
RTMP_Read	librtmp/rtmp.c	/^RTMP_Read(RTMP *r, char *buf, int size)$/;"	f
RTMP_ReadPacket	librtmp/rtmp.c	/^RTMP_ReadPacket(RTMP *r, RTMPPacket *packet)$/;"	f
RTMP_ReconnectStream	librtmp/rtmp.c	/^RTMP_ReconnectStream(RTMP *r, int seekTime)$/;"	f
RTMP_SIG_SIZE	librtmp/rtmp.c	63;"	d	file:
RTMP_SWF_HASHLEN	librtmp/rtmp.h	195;"	d
RTMP_SendChunk	librtmp/rtmp.c	/^RTMP_SendChunk(RTMP *r, RTMPChunk *chunk)$/;"	f
RTMP_SendClientBW	librtmp/rtmp.c	/^RTMP_SendClientBW(RTMP *r)$/;"	f
RTMP_SendCreateStream	librtmp/rtmp.c	/^RTMP_SendCreateStream(RTMP *r)$/;"	f
RTMP_SendCtrl	librtmp/rtmp.c	/^RTMP_SendCtrl(RTMP *r, short nType, unsigned int nObject, unsigned int nTime)$/;"	f
RTMP_SendPacket	librtmp/rtmp.c	/^RTMP_SendPacket(RTMP *r, RTMPPacket *packet, int queue)$/;"	f
RTMP_SendPause	librtmp/rtmp.c	/^RTMP_SendPause(RTMP *r, int DoPause, int iTime)$/;"	f
RTMP_SendSeek	librtmp/rtmp.c	/^RTMP_SendSeek(RTMP *r, int iTime)$/;"	f
RTMP_SendServerBW	librtmp/rtmp.c	/^RTMP_SendServerBW(RTMP *r)$/;"	f
RTMP_Serve	librtmp/rtmp.c	/^RTMP_Serve(RTMP *r)$/;"	f
RTMP_SetBufferMS	librtmp/rtmp.c	/^RTMP_SetBufferMS(RTMP *r, int size)$/;"	f
RTMP_SetOpt	librtmp/rtmp.c	/^int RTMP_SetOpt(RTMP *r, const AVal *opt, AVal *arg)$/;"	f
RTMP_SetupStream	librtmp/rtmp.c	/^RTMP_SetupStream(RTMP *r,$/;"	f
RTMP_SetupURL	librtmp/rtmp.c	/^int RTMP_SetupURL(RTMP *r, char *url)$/;"	f
RTMP_SetupURL2	librtmp/rtmp.c	/^int RTMP_SetupURL2(RTMP *r, char *url, char *playpath)$/;"	f
RTMP_Socket	librtmp/rtmp.c	/^RTMP_Socket(RTMP *r)$/;"	f
RTMP_TLS_Accept	librtmp/rtmp.c	/^RTMP_TLS_Accept(RTMP *r, void *ctx)$/;"	f
RTMP_TLS_AllocServerContext	librtmp/rtmp.c	/^RTMP_TLS_AllocServerContext(const char* cert, const char* key)$/;"	f
RTMP_TLS_FreeServerContext	librtmp/rtmp.c	/^RTMP_TLS_FreeServerContext(void *ctx)$/;"	f
RTMP_TLS_Init	librtmp/rtmp.c	/^RTMP_TLS_Init()$/;"	f
RTMP_TLS_ctx	librtmp/rtmp.c	/^TLS_CTX RTMP_TLS_ctx;$/;"	v
RTMP_ToggleStream	librtmp/rtmp.c	/^RTMP_ToggleStream(RTMP *r)$/;"	f
RTMP_UpdateBufferMS	librtmp/rtmp.c	/^RTMP_UpdateBufferMS(RTMP *r)$/;"	f
RTMP_UserInterrupt	librtmp/rtmp.c	/^RTMP_UserInterrupt()$/;"	f
RTMP_Write	librtmp/rtmp.c	/^RTMP_Write(RTMP *r, const char *buf, int size)$/;"	f
RTMP_ctrlC	librtmp/rtmp.c	/^int RTMP_ctrlC;$/;"	v
RTMP_debuglevel	librtmp/log.c	/^RTMP_LogLevel RTMP_debuglevel = RTMP_LOGERROR;$/;"	v
RTPheader	lame/frontend/rtp.c	/^struct rtpheader RTPheader;$/;"	v
RUNEVERY	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.h	52;"	d
RUNEVERYRESET	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.h	53;"	d
RUNONCE	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.h	51;"	d
RUNONCE	OBSApi/OBSApi.h	70;"	d
RUN_AS_USER	Source/mongoose.c	/^  RUN_AS_USER,$/;"	e	file:
R_mc	libfaac/coder.h	/^    double K_mc[LPC+1][BLOCK_LEN_LONG], R_mc[LPC+1][BLOCK_LEN_LONG];$/;"	m
RadioGain	lame/libmp3lame/util.h	/^        int     RadioGain;$/;"	m
RandomFloat	OBSApi/Utility/XMath.cpp	/^float RandomFloat(BOOL bPositiveOnly)$/;"	f
RandomVect	OBSApi/Utility/XMath.cpp	/^Vect RandomVect(BOOL bPositiveOnly)$/;"	f
Range	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    float           Range;            \/* Cutoff range *\/$/;"	m	struct:_D3DLIGHT8
RasterCaps	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	/^    DWORD   RasterCaps;$/;"	m	struct:_D3DCAPS8
RateControlMethod	libmfx/include/msdk/include/mfxstructures.h	/^            mfxU16  RateControlMethod;$/;"	m
RateControlMethodChanged	Source/SettingsQSV.cpp	/^void SettingsQSV::RateControlMethodChanged()$/;"	f	class:SettingsQSV
RateDistortionOpt	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16      RateDistortionOpt;      \/* tri-state option *\/$/;"	m
RawPCMConfig	lame/frontend/main.h	/^typedef struct RawPCMConfig$/;"	s
RawPCMConfig	lame/frontend/main.h	/^} RawPCMConfig;$/;"	t
RayIntersection	OBSApi/Utility/XMath.cpp	/^BOOL Bounds::RayIntersection(const Vect &rayOrig, const Vect &rayDir, float &fT) const$/;"	f	class:Bounds
RayIntersectionTopDown	OBSApi/Utility/XMath.cpp	/^BOOL Bounds::RayIntersectionTopDown(const Vect &rayOrig, const Vect &rayDir, float &fT) const$/;"	f	class:Bounds
RayIntersects	OBSApi/Utility/XMath.h	/^    inline BOOL RayIntersects(const Vect &rayOrig, const Vect &rayDir) const$/;"	f	struct:Bounds
RayIntersectsTopDown	OBSApi/Utility/XMath.h	/^    inline BOOL RayIntersectsTopDown(const Vect &rayOrig, const Vect &rayDir) const$/;"	f	struct:Bounds
ReAllocate	OBSApi/Utility/Alloc.h	76;"	d
ReAllocate	OBSApi/Utility/Alloc.h	82;"	d
Read	OBSApi/Utility/XFile_Windows.cpp	/^DWORD XFile::Read(LPVOID lpBuffer, DWORD dwBytes)$/;"	f	class:XFile
Read	OBSApi/Utility/XT.cpp	/^void XStringLog::Read(String &str)$/;"	f	class:XStringLog
Read	OBSApi/Utility/XT.cpp	/^void XStringLog::Read(String &str, unsigned &start, unsigned length)$/;"	f	class:XStringLog
ReadFileData	OBSApi/Utility/XConfig.cpp	/^bool  XConfig::ReadFileData(XElement *curElement, int level, TSTR &lpTemp)$/;"	f	class:XConfig
ReadFileData2	OBSApi/Utility/XConfig.cpp	/^bool  XConfig::ReadFileData2(XElement *curElement, int level, TSTR &lpTemp, bool isJSON)$/;"	f	class:XConfig
ReadFileToString	OBSApi/Utility/XFile.h	/^    inline void ReadFileToString(String &strIn)$/;"	f	class:XFile
ReadFromStream	lame/dshow/Mpegac.cpp	/^HRESULT CMpegAudEnc::ReadFromStream(IStream *pStream)$/;"	f	class:CMpegAudEnc
ReadLog	OBSApi/Utility/XT.cpp	/^void ReadLog(String &data)$/;"	f
ReadLogPartial	OBSApi/Utility/XT.cpp	/^void ReadLogPartial(String &data, unsigned &start, unsigned maxLength)$/;"	f
ReadN	librtmp/rtmp.c	/^ReadN(RTMP *r, char *buffer, int n)$/;"	f	file:
ReadName	lame/ACM/tinyxml/tinyxmlparser.cpp	/^const char* TiXmlBase::ReadName( const char* p, string* name )$/;"	f	class:TiXmlBase
ReadOnlyPlugins	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public ReadOnlyCollection<BrowserPlugin> ReadOnlyPlugins$/;"	p	class:Shared.BrowserRuntimeSettings
ReadPresetSettings	lame/dshow/Mpegac.cpp	/^void CMpegAudEnc::ReadPresetSettings(MPEG_ENCODER_CONFIG * pmec)$/;"	f	class:CMpegAudEnc
ReadResponse	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/AssetSchemeHandler.cs	/^        protected override bool ReadResponse(Stream response, int bytesToRead, out int bytesRead, CefCallback callback)$/;"	m	class:RemoteBrowser.AssetSchemeHandler
ReadSettings	scenesw/SceneSwitcher.cpp	/^void SceneSwitcher::ReadSettings()$/;"	f	class:SceneSwitcher
ReadText	lame/ACM/tinyxml/tinyxmlparser.cpp	/^const char* TiXmlBase::ReadText(	const char* p, $/;"	f	class:TiXmlBase
ReadValue	lame/ACM/tinyxml/tinyxmlparser.cpp	/^const char* TiXmlElement::ReadValue( const char* p )$/;"	f	class:TiXmlElement
Read_1_Packet	librtmp/rtmp.c	/^Read_1_Packet(RTMP *r, char *buf, unsigned int buflen)$/;"	f	file:
ReaderConfig	lame/frontend/main.h	/^typedef struct ReaderConfig$/;"	s
ReaderConfig	lame/frontend/main.h	/^} ReaderConfig;$/;"	t
Reallocate	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	/^    void Reallocate(DWORD size)$/;"	f	class:Palette
Receive	DShowPlugin/CaptureFilter.cpp	/^STDMETHODIMP CapturePin::Receive(IMediaSample *pSample)$/;"	f	class:CapturePin
Receive	lame/dshow/Mpegac.cpp	/^HRESULT CMpegAudEnc::Receive(IMediaSample * pSample)$/;"	f	class:CMpegAudEnc
ReceiveAudio	DShowPlugin/DeviceAudio.cpp	/^void DeviceAudioSource::ReceiveAudio(LPBYTE lpData, UINT dataLength)$/;"	f	class:DeviceAudioSource
ReceiveCanBlock	DShowPlugin/CaptureFilter.cpp	/^STDMETHODIMP CapturePin::ReceiveCanBlock() {return S_OK;}$/;"	f	class:CapturePin
ReceiveConnection	DShowPlugin/CaptureFilter.cpp	/^STDMETHODIMP CapturePin::ReceiveConnection(IPin *pConnector, const AM_MEDIA_TYPE *pmt)$/;"	f	class:CapturePin
ReceiveMediaSample	DShowPlugin/DeviceSource.cpp	/^void DeviceSource::ReceiveMediaSample(IMediaSample *sample, bool bAudio)$/;"	f	class:DeviceSource
ReceiveMultiple	DShowPlugin/CaptureFilter.cpp	/^STDMETHODIMP CapturePin::ReceiveMultiple(IMediaSample **pSamples, long nSamples, long *nSamplesProcessed)$/;"	f	class:CapturePin
ReclaimResources	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *ReclaimResources )( $/;"	m	struct:IDXGIDevice2Vtbl
Reconnect	lame/dshow/Mpegac.cpp	/^HRESULT CMpegAudEnc::Reconnect()$/;"	f	class:CMpegAudEnc
ReconnectDialogProc	Source/WindowStuff.cpp	/^INT_PTR CALLBACK OBS::ReconnectDialogProc(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam)$/;"	f	class:OBS
ReconnectInfo	Source/WindowStuff.cpp	/^struct ReconnectInfo$/;"	s	file:
RecordAllLoadedModules	Source/CrashDumpHandler.cpp	/^BOOL CALLBACK RecordAllLoadedModules (PCTSTR ModuleName, DWORD64 ModuleBase, ULONG ModuleSize, PVOID UserContext)$/;"	f
RecordFromReplayBufferHotkey	Source/OBSHotkeyHandlers.cpp	/^void STDCALL OBS::RecordFromReplayBufferHotkey(DWORD hotkey, UPARAM param, bool bDown)$/;"	f	class:OBS
RecordingHelper	Source/ReplayBuffer.cpp	/^    RecordingHelper(packet_vec_t packets) : buffered_packets(packets), packets_mutex(OSCreateMutex()),$/;"	f	struct:RecordingHelper
RecordingHelper	Source/ReplayBuffer.cpp	/^struct RecordingHelper : VideoFileStream$/;"	s	file:
RecoveryPointSEI	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16      RecoveryPointSEI;       \/* tri-state option *\/$/;"	m
RectsCoalesced	extras/dxgi1_2.h	/^    BOOL RectsCoalesced;$/;"	m	struct:DXGI_OUTDUPL_FRAME_INFO
RefPicList0	libmfx/include/msdk/include/mfxstructures.h	/^    } RefPicList0[32], RefPicList1[32];$/;"	m
RefPicList1	libmfx/include/msdk/include/mfxstructures.h	/^    } RefPicList0[32], RefPicList1[32];$/;"	m
RefPicListReordering	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16      RefPicListReordering;   \/* tri-state option *\/$/;"	m
RefPicMarkRep	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16      RefPicMarkRep;          \/* tri-state option *\/$/;"	m
RefreshAspect	Source/SettingsVideo.cpp	/^static void RefreshAspect(HWND hwnd, int cx, int cy)$/;"	f	file:
RefreshConfig	NoiseGate/NoiseGate.cpp	/^void NoiseGateSettings::RefreshConfig()$/;"	f	class:NoiseGateSettings
RefreshDevices	Source/SettingsAudio.cpp	/^void SettingsAudio::RefreshDevices(AudioDeviceType desktopDeviceType)$/;"	f	class:SettingsAudio
RefreshDownscales	Source/SettingsVideo.cpp	/^void SettingsVideo::RefreshDownscales(HWND hwnd, int cx, int cy)$/;"	f	class:SettingsVideo
RefreshFilters	Source/SettingsVideo.cpp	/^void SettingsVideo::RefreshFilters(HWND hwndParent, bool bGetConfig)$/;"	f	class:SettingsVideo
RefreshRate	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    UINT            RefreshRate;$/;"	m	struct:_D3DDISPLAYMODE
RefreshRate	extras/dxgi1_2.h	/^    DXGI_RATIONAL RefreshRate;$/;"	m	struct:DXGI_MODE_DESC1
RefreshRate	extras/dxgi1_2.h	/^    DXGI_RATIONAL RefreshRate;$/;"	m	struct:DXGI_SWAP_CHAIN_FULLSCREEN_DESC
RefreshStreamButtons	Source/OBS.cpp	/^void OBS::RefreshStreamButtons(bool disable)$/;"	f	class:OBS
RefreshWindowList	GraphicsCapture/GraphicsCapture.cpp	/^void RefreshWindowList(HWND hwndCombobox, ConfigDialogData &configData)$/;"	f
RefreshWindowList	Source/DesktopImageSource.cpp	/^void RefreshWindowList(HWND hwndCombobox, StringList &classList)$/;"	f
RegKey	libmfx/include/mfx_win_reg_key.h	/^template<> struct RegKey<bool>{enum {type = REG_DWORD};};$/;"	s	namespace:MFX
RegKey	libmfx/include/mfx_win_reg_key.h	/^template<> struct RegKey<char*>{enum {type = REG_SZ};};$/;"	s	namespace:MFX
RegKey	libmfx/include/mfx_win_reg_key.h	/^template<> struct RegKey<mfxPluginUID>{enum {type = REG_BINARY};};$/;"	s	namespace:MFX
RegKey	libmfx/include/mfx_win_reg_key.h	/^template<> struct RegKey<mfxU32>{enum {type = REG_DWORD};};$/;"	s	namespace:MFX
RegKey	libmfx/include/mfx_win_reg_key.h	/^template<> struct RegKey<mfxVersion>{enum {type = REG_DWORD};};$/;"	s	namespace:MFX
RegKey	libmfx/include/mfx_win_reg_key.h	/^template<> struct RegKey<wchar_t*>{enum {type = REG_SZ};};$/;"	s	namespace:MFX
RegKey	libmfx/include/mfx_win_reg_key.h	/^template<class T> struct RegKey{};$/;"	s	namespace:MFX
RegionWindowData	Source/DesktopImageSource.cpp	/^    inline RegionWindowData()$/;"	f	struct:RegionWindowData
RegionWindowData	Source/DesktopImageSource.cpp	/^struct RegionWindowData$/;"	s	file:
RegionWindowProc	Source/DesktopImageSource.cpp	/^LRESULT WINAPI RegionWindowProc(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam)$/;"	f
Register	libmfx/include/msdk/include/mfxplugin++.h	/^    virtual mfxStatus Register(mfxU32 type, const mfxPlugin *par) {$/;"	f	class:MFXVideoUSER
RegisterBrowser	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserManager.cs	/^        public void RegisterBrowser(int browserIdentifier, BrowserWrapper browserWrapper)$/;"	m	class:Browser.BrowserManager
RegisterFBOStuff	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^static void RegisterFBOStuff()$/;"	f	file:
RegisterImageSourceClass	Source/API.cpp	/^    virtual void RegisterImageSourceClass(CTSTR lpClassName, CTSTR lpDisplayName, OBSCREATEPROC createProc, OBSCONFIGPROC configProc)$/;"	f	class:OBSAPIInterface
RegisterImageSourceClass	Source/API.cpp	/^void OBS::RegisterImageSourceClass(CTSTR lpClassName, CTSTR lpDisplayName, OBSCREATEPROC createProc, OBSCONFIGPROC configProc, bool bDeprecated)$/;"	f	class:OBS
RegisterNVCaptureStuff	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^static void RegisterNVCaptureStuff()$/;"	f	file:
RegisterOcclusionStatusEvent	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *RegisterOcclusionStatusEvent )( $/;"	m	struct:IDXGIFactory2Vtbl
RegisterOcclusionStatusWindow	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *RegisterOcclusionStatusWindow )( $/;"	m	struct:IDXGIFactory2Vtbl
RegisterSceneClass	Source/API.cpp	/^    virtual void RegisterSceneClass(CTSTR lpClassName, CTSTR lpDisplayName, OBSCREATEPROC createProc, OBSCONFIGPROC configProc)$/;"	f	class:OBSAPIInterface
RegisterSceneClass	Source/API.cpp	/^void OBS::RegisterSceneClass(CTSTR lpClassName, CTSTR lpDisplayName, OBSCREATEPROC createProc, OBSCONFIGPROC configProc, bool bDeprecated)$/;"	f	class:OBS
RegisterServiceFileHandler	Source/InstallService.cpp	/^void RegisterServiceFileHandler(void)$/;"	f
RegisterStereoStatusEvent	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *RegisterStereoStatusEvent )( $/;"	m	struct:IDXGIFactory2Vtbl
RegisterStereoStatusWindow	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *RegisterStereoStatusWindow )( $/;"	m	struct:IDXGIFactory2Vtbl
Rehook	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.h	/^    inline void Rehook(bool bForce=false)$/;"	f	class:HookData
Reinitialize	Source/MMDeviceAudioSource.cpp	/^bool MMDeviceAudioSource::Reinitialize()$/;"	f	class:MMDeviceAudioSource
RejectedRefList	libmfx/include/msdk/include/mfxstructures.h	/^    } PreferredRefList[32], RejectedRefList[16], LongTermRefList[16];$/;"	m
Release	DShowPlugin/CaptureFilter.cpp	/^    STDMETHODIMP_(ULONG) Release() {if (!--refCount) {delete this; return 0;} return refCount;}$/;"	f	class:CaptureFlags
Release	DShowPlugin/CaptureFilter.cpp	/^STDMETHODIMP_(ULONG) CaptureEnumMediaTypes::Release() {if(!InterlockedDecrement(&refCount)) {delete this; return 0;} return refCount;}$/;"	f	class:CaptureEnumMediaTypes
Release	DShowPlugin/CaptureFilter.cpp	/^STDMETHODIMP_(ULONG) CaptureEnumPins::Release() {if(!InterlockedDecrement(&refCount)) {delete this; return 0;} return refCount;}$/;"	f	class:CaptureEnumPins
Release	DShowPlugin/CaptureFilter.cpp	/^STDMETHODIMP_(ULONG) CaptureFilter::Release() {if(!InterlockedDecrement(&refCount)) {delete this; return 0;} return refCount;}$/;"	f	class:CaptureFilter
Release	DShowPlugin/CaptureFilter.cpp	/^STDMETHODIMP_(ULONG) CapturePin::Release() {if(!InterlockedDecrement(&refCount)) {delete this; return 0;} return refCount;}$/;"	f	class:CapturePin
Release	DShowPlugin/DeviceSource.h	/^    inline void Release()$/;"	f	struct:SampleData
Release	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	/^ULONG STDMETHODCALLTYPE Release(LPDIRECTDRAWSURFACE7 surface)$/;"	f
Release	QSVHelper/IntelSupport/include/d3d11_allocator.h	/^        void Release()$/;"	f	class:D3D11FrameAllocator::TextureSubResource
Release	QSVHelper/IntelSupport/include/d3d11_allocator.h	/^        void Release()$/;"	f	struct:D3D11FrameAllocator::TextureResource
Release	extras/dxgi1_2.h	/^        ULONG ( STDMETHODCALLTYPE *Release )( $/;"	m	struct:IDXGIAdapter2Vtbl
Release	extras/dxgi1_2.h	/^        ULONG ( STDMETHODCALLTYPE *Release )( $/;"	m	struct:IDXGIDevice2Vtbl
Release	extras/dxgi1_2.h	/^        ULONG ( STDMETHODCALLTYPE *Release )( $/;"	m	struct:IDXGIDisplayControlVtbl
Release	extras/dxgi1_2.h	/^        ULONG ( STDMETHODCALLTYPE *Release )( $/;"	m	struct:IDXGIFactory2Vtbl
Release	extras/dxgi1_2.h	/^        ULONG ( STDMETHODCALLTYPE *Release )( $/;"	m	struct:IDXGIOutput1Vtbl
Release	extras/dxgi1_2.h	/^        ULONG ( STDMETHODCALLTYPE *Release )( $/;"	m	struct:IDXGIOutputDuplicationVtbl
Release	extras/dxgi1_2.h	/^        ULONG ( STDMETHODCALLTYPE *Release )( $/;"	m	struct:IDXGIResource1Vtbl
Release	extras/dxgi1_2.h	/^        ULONG ( STDMETHODCALLTYPE *Release )( $/;"	m	struct:IDXGISurface2Vtbl
Release	extras/dxgi1_2.h	/^        ULONG ( STDMETHODCALLTYPE *Release )( $/;"	m	struct:IDXGISwapChain1Vtbl
Release	libmfx/src/mfx_library_iterator.cpp	/^void MFXLibraryIterator::Release(void)$/;"	f	class:MFX::MFXLibraryIterator
Release	libmfx/src/mfx_win_reg_key.cpp	/^void WinRegKey::Release(void)$/;"	f	class:MFX::WinRegKey
ReleaseBuffer	DShowPlugin/DeviceAudio.cpp	/^void DeviceAudioSource::ReleaseBuffer()$/;"	f	class:DeviceAudioSource
ReleaseBuffer	Source/MMDeviceAudioSource.cpp	/^void MMDeviceAudioSource::ReleaseBuffer()$/;"	f	class:MMDeviceAudioSource
ReleaseCurrentHDC	Source/DesktopImageSource.cpp	/^    void ReleaseCurrentHDC(HDC hDC)$/;"	f	class:DesktopImageSource
ReleaseDC	Source/D3D10Texture.cpp	/^void D3D10Texture::ReleaseDC()$/;"	f	class:D3D10Texture
ReleaseDC	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *ReleaseDC )( $/;"	m	struct:IDXGISurface2Vtbl
ReleaseDCheckEnabled	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public bool ReleaseDCheckEnabled { get; set; }$/;"	p	class:Shared.BrowserRuntimeSettings
ReleaseFrame	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *ReleaseFrame )( $/;"	m	struct:IDXGIOutputDuplicationVtbl
ReleaseOwnership	extras/dxgi1_2.h	/^        void ( STDMETHODCALLTYPE *ReleaseOwnership )( $/;"	m	struct:IDXGIOutput1Vtbl
ReleaseResponse	QSVHelper/IntelSupport/src/d3d11_allocator.cpp	/^mfxStatus D3D11FrameAllocator::ReleaseResponse(mfxFrameAllocResponse *response)$/;"	f	class:D3D11FrameAllocator
Reload	CLRBrowserSourcePlugin/Plugin/SettingsPane.xaml.cs	/^        public void Reload()$/;"	m	class:CLRBrowserSourcePlugin.SettingsPane
Reload	CLRBrowserSourcePlugin/Plugin/Shared/BrowserConfig.cs	/^        public void Reload(XElement element)$/;"	m	class:Shared.BrowserConfig
Reload	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public void Reload()$/;"	m	class:Shared.BrowserSettings
ReloadIniSettings	Source/OBS.cpp	/^void OBS::ReloadIniSettings()$/;"	f	class:OBS
ReloadPrimarySurfacePaletteEntries	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	/^    void ReloadPrimarySurfacePaletteEntries()$/;"	f	class:Palette
ReloadSceneCollection	Source/OBS.cpp	/^void OBS::ReloadSceneCollection()$/;"	f	class:OBS
RemoteBrowser	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/AssetSchemeHandler.cs	/^namespace CLRBrowserSourcePlugin.RemoteBrowser$/;"	n
RemoteBrowser	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserPluginManager.cs	/^namespace CLRBrowserSourcePlugin.RemoteBrowser$/;"	n
RemoteBrowser	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserPluginVisitor.cs	/^namespace CLRBrowserSourcePlugin.RemoteBrowser$/;"	n
RemoteBrowser	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/MimeTypeManager.cs	/^namespace CLRBrowserSourcePlugin.RemoteBrowser$/;"	n
RemoteBrowser	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/SimpleDispatcher.cs	/^namespace CLRBrowserSourcePlugin.RemoteBrowser$/;"	n
RemoteBrowser	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/StreamUtils.cs	/^namespace CLRBrowserSourcePlugin.RemoteBrowser$/;"	n
RemoteDebuggingPort	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public int RemoteDebuggingPort { get; set; }$/;"	p	class:Shared.BrowserRuntimeSettings
RemoteFonts	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public CefState RemoteFonts { get; set; }$/;"	p	class:Shared.BrowserInstanceSettings
Remove	OBSApi/Utility/ConfigFile.cpp	/^void  ConfigFile::Remove(CTSTR lpSection, CTSTR lpKey)$/;"	f	class:ConfigFile
Remove	OBSApi/Utility/Template.h	/^    inline void Remove(unsigned int index)$/;"	f	class:CircularList
Remove	OBSApi/Utility/Template.h	/^    inline void Remove(unsigned int index)$/;"	f	class:List
Remove	OBSApi/Utility/Template.h	/^    inline void Remove(unsigned int index)$/;"	f	class:SafeList
Remove	OBSApi/Utility/XString.h	/^    inline void Remove(unsigned int index)$/;"	f	class:StringList
Remove	OBSApi/Utility/XTLocalization.h	/^    inline void Remove(UINT i)$/;"	f	struct:LocaleStringCache
Remove	lame/ACM/tinyxml/tinyxml.cpp	/^void TiXmlAttributeSet::Remove( TiXmlAttribute* removeMe )$/;"	f	class:TiXmlAttributeSet
RemoveAttribute	lame/ACM/tinyxml/tinyxml.cpp	/^void TiXmlElement::RemoveAttribute( const std::string& name )$/;"	f	class:TiXmlElement
RemoveAudioFilter	OBSApi/AudioSource.cpp	/^void AudioSource::RemoveAudioFilter(AudioFilter *filter) {audioFilters.RemoveItem(filter);}$/;"	f	class:AudioSource
RemoveAudioFilter	OBSApi/AudioSource.cpp	/^void AudioSource::RemoveAudioFilter(UINT id) {if(audioFilters.Num() > id) audioFilters.Remove(id);}$/;"	f	class:AudioSource
RemoveAudioSource	Source/API.cpp	/^    virtual void RemoveAudioSource(AudioSource *source) {App->RemoveAudioSource(source);}$/;"	f	class:OBSAPIInterface
RemoveAudioSource	Source/OBS.h	/^    inline void RemoveAudioSource(AudioSource *source)$/;"	f	class:OBS
RemoveChar	OBSApi/Utility/XString.cpp	/^String& String::RemoveChar(UINT pos)$/;"	f	class:String
RemoveChild	lame/ACM/tinyxml/tinyxml.cpp	/^bool TiXmlNode::RemoveChild( TiXmlNode* removeThis )$/;"	f	class:TiXmlNode
RemoveDupes	OBSApi/Utility/Template.h	/^    inline void RemoveDupes()$/;"	f	class:List
RemoveDupes	OBSApi/Utility/XString.h	/^    inline void RemoveDupes()$/;"	f	class:StringList
RemoveDupesI	OBSApi/Utility/XString.h	/^    inline void RemoveDupesI()$/;"	f	class:StringList
RemoveElement	OBSApi/Utility/XConfig.cpp	/^void  XElement::RemoveElement(CTSTR lpName)$/;"	f	class:XElement
RemoveElement	OBSApi/Utility/XConfig.cpp	/^void  XElement::RemoveElement(XElement *element)$/;"	f	class:XElement
RemoveHook	minhook/src/hook.cpp	/^	MH_STATUS RemoveHook(void* pTarget)$/;"	f	namespace:MinHook
RemoveImageSource	OBSApi/Scene.cpp	/^void Scene::RemoveImageSource(CTSTR lpName)$/;"	f	class:Scene
RemoveImageSource	OBSApi/Scene.cpp	/^void Scene::RemoveImageSource(SceneItem *item)$/;"	f	class:Scene
RemoveItem	OBSApi/Utility/Template.h	/^    inline void RemoveItem(const T& obj)$/;"	f	class:CircularList
RemoveItem	OBSApi/Utility/Template.h	/^    inline void RemoveItem(const T& obj)$/;"	f	class:List
RemoveItem	OBSApi/Utility/XConfig.cpp	/^void  XElement::RemoveItem(CTSTR lpName)$/;"	f	class:XElement
RemoveItem	OBSApi/Utility/XString.h	/^    inline void RemoveItem(CTSTR lpStr)$/;"	f	class:StringList
RemoveItem	OBSApi/Utility/XString.h	/^    inline void RemoveItem(const String& str)$/;"	f	class:StringList
RemoveItemI	OBSApi/Utility/XString.h	/^    inline void RemoveItemI(CTSTR lpStr)$/;"	f	class:StringList
RemoveItemI	OBSApi/Utility/XString.h	/^    inline void RemoveItemI(const String& str)$/;"	f	class:StringList
RemoveLookup	OBSApi/Utility/XTLocalization.cpp	/^void LocaleStringLookup::RemoveLookup(CTSTR lookupVal, StringLookupNode *node)$/;"	f	class:LocaleStringLookup
RemoveLookupString	OBSApi/Utility/XTLocalization.h	/^    inline void RemoveLookupString(CTSTR lookupVal) {RemoveLookup(lookupVal);}$/;"	f	class:LocaleStringLookup
RemoveProfile	Source/WindowStuff.cpp	/^void OBS::RemoveProfile()$/;"	f	class:OBS
RemoveRange	OBSApi/Utility/Template.h	/^    inline void RemoveRange(UINT start, UINT end)$/;"	f	class:List
RemoveRange	OBSApi/Utility/XString.cpp	/^void String::RemoveRange(unsigned int from, unsigned int to)$/;"	f	class:String
RemoveSceneCollection	Source/WindowStuff.cpp	/^void OBS::RemoveSceneCollection()$/;"	f	class:OBS
RemoveSceneHotkey	Source/OBS.h	/^    inline void RemoveSceneHotkey(DWORD hotkey)$/;"	f	class:OBS
RemoveSettingsPane	Source/API.cpp	/^    virtual void RemoveSettingsPane(SettingsPane *pane) {App->RemoveSettingsPane(pane);}$/;"	f	class:OBSAPIInterface
RemoveSettingsPane	Source/Settings.cpp	/^void OBS::RemoveSettingsPane(SettingsPane *pane)$/;"	f	class:OBS
RemoveStreamInfo	Source/API.cpp	/^    virtual void RemoveStreamInfo(UINT infoID)                                      {App->RemoveStreamInfo(infoID);}$/;"	f	class:OBSAPIInterface
RemoveStreamInfo	Source/API.cpp	/^void OBS::RemoveStreamInfo(UINT infoID)$/;"	f	class:OBS
Rename	Source/OBS.h	/^    Rename,$/;"	m	class:ProfileAction
Rename	Source/OBS.h	/^    Rename,$/;"	m	class:SceneCollectionAction
RenameCurrentTo	lame/ACM/AEncodeProperties.cpp	/^bool AEncodeProperties::RenameCurrentTo(const std::string & new_config_name)$/;"	f	class:AEncodeProperties
Render	CLRBrowserSourcePlugin/Plugin/BrowserSource.cs	/^        override public void Render(float x, float y, float width, float height)$/;"	m	class:CLRBrowserSourcePlugin.BrowserSource
Render	CLRHostPlugin/CLRCSharpSamplePlugin/SampleImageSource.cs	/^        override public void Render(float x, float y, float width, float height)$/;"	m	class:CSharpSamplePlugin.SampleImageSource
Render	CLRHostPlugin/CLRHostPlugin/CLRImageSource.cpp	/^void CLRImageSource::Render(float x, float y, float width, float height)$/;"	f	class:CLRImageSource
Render	CLRHostPlugin/CLRHostPlugin/ImageSourceBridge.h	/^    virtual void Render(const Vect2 &pos, const Vect2 &size)$/;"	f	class:ImageSourceBridge
Render	DShowPlugin/DeviceSource.cpp	/^void DeviceSource::Render(const Vect2 &pos, const Vect2 &size)$/;"	f	class:DeviceSource
Render	GraphicsCapture/GraphicsCaptureSource.cpp	/^void GraphicsCaptureSource::Render(const Vect2 &pos, const Vect2 &size)$/;"	f	class:GraphicsCaptureSource
Render	OBSApi/Scene.cpp	/^void Scene::Render()$/;"	f	class:Scene
Render	Source/BitmapImageSource.cpp	/^    void Render(const Vect2 &pos, const Vect2 &size)$/;"	f	class:BitmapImageSource
Render	Source/BitmapTransitionSource.cpp	/^    void Render(const Vect2 &pos, const Vect2 &size)$/;"	f	class:BitmapTransitionSource
Render	Source/DesktopImageSource.cpp	/^    void Render(const Vect2 &pos, const Vect2 &size)$/;"	f	class:DesktopImageSource
Render	Source/GlobalSource.cpp	/^    void Render(const Vect2 &pos, const Vect2 &size) {if (globalSource) globalSource->Render(pos, size);}$/;"	f	class:GlobalSource
Render	Source/TextOutputSource.cpp	/^    void Render(const Vect2 &pos, const Vect2 &size)$/;"	f	class:TextOutputSource
RenderFrame	QSVHelper/IntelSupport/src/d3d11_device.cpp	/^mfxStatus CD3D11Device::RenderFrame(mfxFrameSurface1 * pSrf, mfxFrameAllocator * pAlloc)$/;"	f	class:CD3D11Device
RenderFrameProc	Source/WindowStuff.cpp	/^LRESULT CALLBACK OBS::RenderFrameProc(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam)$/;"	f	class:OBS
RenderHandler	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserClient.cs	/^        public BrowserRenderHandler RenderHandler { get; set; }$/;"	p	class:Browser.BrowserClient
RenderProcess	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/RenderProcess.cs	/^        public RenderProcess(int renderProcessId)$/;"	m	class:Browser.RenderProcess
RenderProcess	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/RenderProcess.cs	/^    internal class RenderProcess$/;"	c	namespace:Browser
RenderProcess.cs	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/RenderProcess.cs	1;"	F
RenderSelections	OBSApi/Scene.cpp	/^void Scene::RenderSelections(Shader *solidPixelShader)$/;"	f	class:Scene
RenderTexture	CLRBrowserSourcePlugin/Plugin/BrowserSource.cs	/^        public void RenderTexture(IntPtr textureHandle)$/;"	m	class:CLRBrowserSourcePlugin.BrowserSource
RepaintVolume	NoiseGate/NoiseGate.cpp	/^void NoiseGateSettings::RepaintVolume()$/;"	f	class:NoiseGateSettings
RepeatPPS	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16      RepeatPPS;              \/* tri-state option *\/$/;"	m
RepeatedFrame	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16          RepeatedFrame;$/;"	m
Replace	OBSApi/Utility/ComPtr.hpp	/^	inline void Replace(T *p)$/;"	f	class:ComPtr
Replace	QSVHelper/ComPtr.hpp	/^	inline void Replace(T *p)$/;"	f	class:ComPtr
ReplaceChild	lame/ACM/tinyxml/tinyxml.cpp	/^TiXmlNode* TiXmlNode::ReplaceChild( TiXmlNode* replaceThis, const TiXmlNode& withThis )$/;"	f	class:TiXmlNode
ReplayBuffer	Source/ReplayBuffer.cpp	/^    ReplayBuffer(int seconds) : seconds(seconds), save_times_lock(OSCreateMutex()) {}$/;"	f	struct:ReplayBuffer
ReplayBuffer	Source/ReplayBuffer.cpp	/^struct ReplayBuffer : VideoFileStream$/;"	s	file:
ReplayBuffer.cpp	Source/ReplayBuffer.cpp	1;"	F
ReplayBufferSaved	Source/OBSCapture.cpp	/^void OBS::ReplayBufferSaved()$/;"	f	class:OBS
ReportDesktopVolumeChange	Source/OBSEvents.cpp	/^void OBS::ReportDesktopVolumeChange(float level, bool muted, bool finalValue)$/;"	f	class:OBS
ReportLogUpdate	Source/OBSEvents.cpp	/^void OBS::ReportLogUpdate(CTSTR logDelta, UINT length)$/;"	f	class:OBS
ReportMicVolumeChange	Source/OBSEvents.cpp	/^void OBS::ReportMicVolumeChange(float level, bool muted, bool finalValue)$/;"	f	class:OBS
ReportOBSStatus	Source/OBSEvents.cpp	/^void OBS::ReportOBSStatus(bool running, bool streaming, bool recording, bool previewing, bool reconnecting)$/;"	f	class:OBS
ReportObsError	OBSApi/Utility/XT.cpp	/^void ReportObsError()$/;"	f
ReportReplayBufferSavedTrigger	Source/OBSEvents.cpp	/^void OBS::ReportReplayBufferSavedTrigger(String filename, UINT recordingLengthMS)$/;"	f	class:OBS
ReportSceneCollectionsChanged	Source/OBSEvents.cpp	/^void OBS::ReportSceneCollectionsChanged()$/;"	f	class:OBS
ReportScenesChanged	Source/OBSEvents.cpp	/^void OBS::ReportScenesChanged()$/;"	f	class:OBS
ReportSourceChanged	Source/OBSEvents.cpp	/^void OBS::ReportSourceChanged(CTSTR sourceName, XElement* source)$/;"	f	class:OBS
ReportSourceOrderChanged	Source/OBSEvents.cpp	/^void OBS::ReportSourceOrderChanged()$/;"	f	class:OBS
ReportSourcesAddedOrRemoved	Source/OBSEvents.cpp	/^void OBS::ReportSourcesAddedOrRemoved()$/;"	f	class:OBS
ReportStartRecordingReplayBufferTrigger	Source/OBSEvents.cpp	/^void OBS::ReportStartRecordingReplayBufferTrigger()$/;"	f	class:OBS
ReportStartRecordingTrigger	Source/OBSEvents.cpp	/^void OBS::ReportStartRecordingTrigger()$/;"	f	class:OBS
ReportStartStreamTrigger	Source/OBSEvents.cpp	/^void OBS::ReportStartStreamTrigger()$/;"	f	class:OBS
ReportStartStreamingTrigger	Source/OBSEvents.cpp	/^void OBS::ReportStartStreamingTrigger()$/;"	f	class:OBS
ReportStopRecordingReplayBufferTrigger	Source/OBSEvents.cpp	/^void OBS::ReportStopRecordingReplayBufferTrigger()$/;"	f	class:OBS
ReportStopRecordingTrigger	Source/OBSEvents.cpp	/^void OBS::ReportStopRecordingTrigger()$/;"	f	class:OBS
ReportStopStreamTrigger	Source/OBSEvents.cpp	/^void OBS::ReportStopStreamTrigger()$/;"	f	class:OBS
ReportStopStreamingTrigger	Source/OBSEvents.cpp	/^void OBS::ReportStopStreamingTrigger()$/;"	f	class:OBS
ReportStreamStatus	Source/OBSEvents.cpp	/^void OBS::ReportStreamStatus(bool streaming, bool previewOnly, $/;"	f	class:OBS
ReportSwitchSceneCollections	Source/OBSEvents.cpp	/^void OBS::ReportSwitchSceneCollections(CTSTR collection)$/;"	f	class:OBS
ReportSwitchScenes	Source/OBSEvents.cpp	/^void OBS::ReportSwitchScenes(CTSTR scene)$/;"	f	class:OBS
Report_fp	lame/frontend/console.h	/^    FILE   *Report_fp;       \/* filepointer to stream reports (normally a text file or \/dev\/null) *\/$/;"	m	struct:console_io_struct
RepresentationToString	OBSApi/Utility/XString.cpp	/^String String::RepresentationToString(String &stringToken)$/;"	f	class:String
RequestBuffers	ObsNvenc/src/NVENCEncoder.cpp	/^void NVENCEncoder::RequestBuffers(LPVOID buffers)$/;"	f	class:NVENCEncoder
RequestBuffers	Source/Encoder_QSV.cpp	/^    virtual void RequestBuffers(LPVOID buffers)$/;"	f	class:QSVEncoder
RequestBuffers	Source/OBS.h	/^    virtual void RequestBuffers(LPVOID buffers) {}$/;"	f	class:VideoEncoder
RequestKeyframe	ObsNvenc/src/NVENCEncoder.cpp	/^void NVENCEncoder::RequestKeyframe()$/;"	f	class:NVENCEncoder
RequestKeyframe	Source/DelayedPublisher.cpp	/^    void RequestKeyframe(int waitTime) {}$/;"	f	class:DelayedPublisher
RequestKeyframe	Source/Encoder_QSV.cpp	/^    virtual void RequestKeyframe()$/;"	f	class:QSVEncoder
RequestKeyframe	Source/Encoder_x264.cpp	/^    virtual void RequestKeyframe()$/;"	f	class:X264Encoder
RequestKeyframe	Source/OBS.h	/^    virtual void RequestKeyframe() {}$/;"	f	class:VideoEncoder
RequestKeyframe	Source/OBSCapture.cpp	/^void OBS::RequestKeyframe(int waitTime)$/;"	f	class:OBS
RequestKeyframe	Source/RTMPPublisher.cpp	/^void RTMPPublisher::RequestKeyframe(int waitTime)$/;"	f	class:RTMPPublisher
RequestSPSPPS	QSVHelper/Encoder.h	/^    void RequestSPSPPS()$/;"	f	struct:Encoder
ResSize	DShowPlugin/DeviceSource.cpp	/^struct ResSize$/;"	s	file:
Reserved	libmfx/include/msdk/include/mfxmvc.h	/^    mfxU32 Reserved[16];$/;"	m
Reset	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public void Reset()$/;"	m	class:Shared.BrowserSettings
Reset	DShowPlugin/CaptureFilter.cpp	/^STDMETHODIMP CaptureEnumMediaTypes::Reset()                                                                 {return S_OK;}$/;"	f	class:CaptureEnumMediaTypes
Reset	DShowPlugin/CaptureFilter.cpp	/^STDMETHODIMP CaptureEnumPins::Reset()               {curPin = 0; return S_OK;}$/;"	f	class:CaptureEnumPins
Reset	OBSApi/Utility/XT.cpp	/^void XStringLog::Reset()$/;"	f	class:XStringLog
Reset	QSVHelper/IntelSupport/src/d3d11_device.cpp	/^mfxStatus CD3D11Device::Reset()$/;"	f	class:CD3D11Device
Reset	Source/MMDeviceAudioSource.cpp	/^    void Reset()$/;"	f	class:MMDeviceAudioSource
Reset	lame/dshow/REG.H	/^	void Reset(void)$/;"	f	class:Lame::CRegEnumKey
Reset	libmfx/include/msdk/include/mfxaudio++.h	/^    virtual mfxStatus Reset(mfxAudioParam *par) { return MFXAudioDECODE_Reset(m_session, par); }$/;"	f	class:MFXAudioDECODE
Reset	libmfx/include/msdk/include/mfxaudio++.h	/^    virtual mfxStatus Reset(mfxAudioParam *par) { return MFXAudioENCODE_Reset(m_session, par); }$/;"	f	class:MFXAudioENCODE
Reset	libmfx/include/msdk/include/mfxplugin.h	/^    mfxStatus (MFX_CDECL *Reset)(mfxHDL pthis, mfxVideoParam *par);$/;"	m	struct:mfxVideoCodecPlugin
Reset	libmfx/include/msdk/include/mfxvideo++.h	/^    virtual mfxStatus Reset(mfxVideoParam *par) { return MFXVideoDECODE_Reset(m_session, par); }$/;"	f	class:MFXVideoDECODE
Reset	libmfx/include/msdk/include/mfxvideo++.h	/^    virtual mfxStatus Reset(mfxVideoParam *par) { return MFXVideoENCODE_Reset(m_session, par); }$/;"	f	class:MFXVideoENCODE
Reset	libmfx/include/msdk/include/mfxvideo++.h	/^    virtual mfxStatus Reset(mfxVideoParam *par) { return MFXVideoVPP_Reset(m_session, par); }$/;"	f	class:MFXVideoVPP
ResetApplicationName	Source/WindowStuff.cpp	/^void OBS::ResetApplicationName()$/;"	f	class:OBS
ResetExtentRect	Source/TextOutputSource.cpp	/^    inline void ResetExtentRect() {showExtentTime = 0.0f;}$/;"	f	class:TextOutputSource
ResetItemCrops	Source/WindowStuff.cpp	/^void OBS::ResetItemCrops()$/;"	f	class:OBS
ResetItemSizes	Source/WindowStuff.cpp	/^void OBS::ResetItemSizes()$/;"	f	class:OBS
ResetLogUpdateCallback	OBSApi/Utility/XT.cpp	/^void ResetLogUpdateCallback(LogUpdateCallback proc)$/;"	f
ResetLogUploadMenu	Source/WindowStuff.cpp	/^void OBS::ResetLogUploadMenu()$/;"	f	class:OBS
ResetMic	Source/OBS.h	/^    inline void ResetMic() {if (bRunning && micAudio) ResetWASAPIAudioDevice(micAudio);}$/;"	f	class:OBS
ResetProfileMenu	Source/WindowStuff.cpp	/^void OBS::ResetProfileMenu()$/;"	f	class:OBS
ResetRefList	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16      ResetRefList;           \/* tri-state option *\/$/;"	m
ResetSampleFrequency	lame/libmp3lame/gain_analysis.c	/^ResetSampleFrequency(replaygain_t * rgData, long samplefreq)$/;"	f
ResetSceneCollectionMenu	Source/WindowStuff.cpp	/^void OBS::ResetSceneCollectionMenu()$/;"	f	class:OBS
ResetViewMatrix	Source/D3D10System.cpp	/^void D3D10System::ResetViewMatrix()$/;"	f	class:D3D10System
ResetWASAPIAudioDevice	Source/MMDeviceAudioSource.cpp	/^void ResetWASAPIAudioDevice(AudioSource *source)$/;"	f
ResetXTAllocator	OBSApi/Utility/XT.cpp	/^void STDCALL ResetXTAllocator(CTSTR lpAllocator)$/;"	f
ResizeBuffers	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *ResizeBuffers )( $/;"	m	struct:IDXGISwapChain1Vtbl
ResizeRenderFrame	Source/OBS.cpp	/^void OBS::ResizeRenderFrame(bool bRedrawRenderFrame)$/;"	f	class:OBS
ResizeTarget	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *ResizeTarget )( $/;"	m	struct:IDXGISwapChain1Vtbl
ResizeView	Source/D3D10System.cpp	/^void D3D10System::ResizeView()$/;"	f	class:D3D10System
ResizeWindow	Source/OBS.cpp	/^void OBS::ResizeWindow(bool bRedrawRenderFrame)$/;"	f	class:OBS
ResolutionEditSubclassProc	Source/SettingsVideo.cpp	/^LRESULT WINAPI ResolutionEditSubclassProc(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam)$/;"	f
ResolutionListHasValue	DShowPlugin/DShowPlugin.cpp	/^inline bool ResolutionListHasValue(const List<SIZE> &resolutions, SIZE &size)$/;"	f
ResolveTemporaryAddresses	minhook/src/trampoline.cpp	/^	bool ResolveTemporaryAddresses(CREATE_TREMPOLINE_T& ct)$/;"	f	namespace:MinHook
ResourcesDirPath	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public string ResourcesDirPath { get; set; }$/;"	p	class:Shared.BrowserRuntimeSettings
RestartInterval	libmfx/include/msdk/include/mfxstructures.h	/^            mfxU16  RestartInterval;$/;"	m
RestartNetwork	Source/OBS.cpp	/^void OBS::RestartNetwork()$/;"	f	class:OBS
Restore	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	/^HRESULT STDMETHODCALLTYPE Restore(LPDIRECTDRAWSURFACE7 surface)$/;"	f
RestoreInitialVolumes	PSVPlugin/psvplugin.cpp	/^void RestoreInitialVolumes()$/;"	f
ResvAdjust	lame/libmp3lame/reservoir.c	/^ResvAdjust(lame_internal_flags * gfc, gr_info const *gi)$/;"	f
ResvFrameBegin	lame/libmp3lame/reservoir.c	/^ResvFrameBegin(lame_internal_flags * gfc, int *mean_bits)$/;"	f
ResvFrameEnd	lame/libmp3lame/reservoir.c	/^ResvFrameEnd(lame_internal_flags * gfc, int mean_bits)$/;"	f
ResvMax	lame/libmp3lame/util.h	/^        int     ResvMax;     \/* in bits *\/$/;"	m
ResvMaxBits	lame/libmp3lame/reservoir.c	/^ResvMaxBits(lame_internal_flags * gfc, int mean_bits, int *targ_bits, int *extra_bits, int cbr)$/;"	f
ResvSize	lame/libmp3lame/util.h	/^        int     ResvSize;    \/* in bits *\/$/;"	m
ReturnAddress	OBSApi/Utility/XT_Windows.h	45;"	d
Reverse	OBSApi/Utility/XMath.h	/^    inline Quat& Reverse()                          {x=-x;y=-y;z=-z;w=-w;return *this;}$/;"	f	struct:Quat
ReverseOrder	CLRHostPlugin/CLRHostInterop/XElement.cpp	/^void CLROBS::XElement::ReverseOrder() { element->ReverseOrder(); }$/;"	f	class:CLROBS::XElement
ReverseOrder	OBSApi/Utility/XConfig.h	/^    inline void ReverseOrder()$/;"	f	class:XElement
Revision	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    DWORD           Revision;$/;"	m	struct:_D3DADAPTER_IDENTIFIER8
Revision	extras/dxgi1_2.h	/^    UINT Revision;$/;"	m	struct:DXGI_ADAPTER_DESC2
Right	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    UINT                Right;$/;"	m	struct:_D3DBOX
Right	OBSApi/Utility/XString.cpp	/^String  String::Right(UINT iOffset)$/;"	f	class:String
Right	libmfx/include/msdk/include/mfxstructures.h	/^        mfxU32  Right;$/;"	m
RollbackBuffer	minhook/src/buffer.cpp	/^	void RollbackBuffer()$/;"	f	namespace:MinHook
RollbackIfNotCommitted	minhook/src/hook.cpp	/^		RollbackIfNotCommitted(bool* committed)$/;"	f	struct:MinHook::RollbackIfNotCommitted
RollbackIfNotCommitted	minhook/src/hook.cpp	/^	struct RollbackIfNotCommitted$/;"	s	namespace:MinHook	file:
RootElement	OBSApi/Utility/XConfig.h	/^    XElement *RootElement;$/;"	m	class:XConfig
RootElement	lame/ACM/tinyxml/tinyxml.h	/^	TiXmlElement* RootElement() const		{ return FirstChildElement(); }$/;"	f	class:TiXmlDocument
Rotate	OBSApi/Utility/XMath.h	/^    inline Matrix& Rotate(const AxisAngle &aa)$/;"	f	struct:Matrix
Rotate	OBSApi/Utility/XMath.h	/^    inline Matrix& Rotate(const Euler &e)$/;"	f	struct:Matrix
Rotate	OBSApi/Utility/XMath.h	/^    inline Matrix& Rotate(const Quat &q)$/;"	f	struct:Matrix
Rotation	extras/dxgi1_2.h	/^    DXGI_MODE_ROTATION Rotation;$/;"	m	struct:DXGI_OUTDUPL_DESC
Rotation	libmfx/include/msdk/include/mfxstructures.h	/^            mfxU16  Rotation;$/;"	m
RoundVect2	GraphicsCapture/GraphicsCaptureSource.cpp	/^void RoundVect2(Vect2 &v)$/;"	f
RowPitch	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    INT                 RowPitch;$/;"	m	struct:_D3DLOCKED_BOX
RpgResult_t	lame/libmp3lame/util.h	/^    } RpgResult_t;$/;"	t
RpgStateVar_t	lame/libmp3lame/util.h	/^    } RpgStateVar_t;$/;"	t
RtpHandle	lame/frontend/rtp.h	/^    typedef struct RtpStruct *RtpHandle;$/;"	t
Run	DShowPlugin/CaptureFilter.cpp	/^STDMETHODIMP CaptureFilter::Run(REFERENCE_TIME tStart)                     {state = State_Running; return S_OK;}$/;"	f	class:CaptureFilter
Run	scenesw/SceneSwitcher.cpp	/^DWORD SceneSwitcher::Run()$/;"	f	class:SceneSwitcher
RunFrameVPPAsync	libmfx/include/msdk/include/mfxvideo++.h	/^    virtual mfxStatus RunFrameVPPAsync(mfxFrameSurface1 *in, mfxFrameSurface1 *out, mfxExtVppAuxData *aux, mfxSyncPoint *syncp) { return MFXVideoVPP_RunFrameVPPAsync(m_session, in, out, aux, syncp); }$/;"	f	class:MFXVideoVPP
RunVerification	libmfx/src/mfx_load_plugin.cpp	/^bool MFX::MFXPluginFactory::RunVerification( const mfxPlugin & plg, const PluginDescriptionRecord &dsc, mfxPluginParam &pluginParams)$/;"	f	class:MFX::MFXPluginFactory
RuntimeSettings	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^            public BrowserRuntimeSettings RuntimeSettings { get; set; }$/;"	p	class:Shared.BrowserSettings.SerializedSettings
RuntimeSettings	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public BrowserRuntimeSettings RuntimeSettings$/;"	p	class:Shared.BrowserSettings
SA	extras/sal.h	1911;"	d
SA	extras/sal.h	1914;"	d
SALTED2_LEN	librtmp/rtmp.c	2862;"	d	file:
SAMPLERATE_H	libsamplerate/samplerate.h	31;"	d
SAVC	Source/RTMPStuff.h	36;"	d
SAVC	librtmp/rtmp.c	1852;"	d	file:
SBLIMIT	lame/libmp3lame/encoder.h	93;"	d
SBLIMIT	lame/mpglib/mpg123.h	77;"	d
SBMAX_L	libfaac/coder.h	88;"	d
SBMAX_l	lame/libmp3lame/encoder.h	103;"	d
SBMAX_s	lame/libmp3lame/encoder.h	104;"	d
SBPSY_l	lame/libmp3lame/encoder.h	99;"	d
SBPSY_s	lame/libmp3lame/encoder.h	100;"	d
SCALE_BLOCK	lame/mpglib/mpg123.h	88;"	d
SCNX16	extras/inttypes.h	191;"	d
SCNX16	lame/inttypes.h	191;"	d
SCNX32	extras/inttypes.h	204;"	d
SCNX32	lame/inttypes.h	204;"	d
SCNX64	extras/inttypes.h	217;"	d
SCNX64	lame/inttypes.h	217;"	d
SCNXFAST16	extras/inttypes.h	199;"	d
SCNXFAST16	lame/inttypes.h	199;"	d
SCNXFAST32	extras/inttypes.h	212;"	d
SCNXFAST32	lame/inttypes.h	212;"	d
SCNXFAST64	extras/inttypes.h	225;"	d
SCNXFAST64	lame/inttypes.h	225;"	d
SCNXLEAST16	extras/inttypes.h	195;"	d
SCNXLEAST16	lame/inttypes.h	195;"	d
SCNXLEAST32	extras/inttypes.h	208;"	d
SCNXLEAST32	lame/inttypes.h	208;"	d
SCNXLEAST64	extras/inttypes.h	221;"	d
SCNXLEAST64	lame/inttypes.h	221;"	d
SCNXMAX	extras/inttypes.h	230;"	d
SCNXMAX	lame/inttypes.h	230;"	d
SCNXPTR	extras/inttypes.h	236;"	d
SCNXPTR	extras/inttypes.h	241;"	d
SCNXPTR	lame/inttypes.h	236;"	d
SCNXPTR	lame/inttypes.h	241;"	d
SCNd16	extras/inttypes.h	155;"	d
SCNd16	lame/inttypes.h	155;"	d
SCNd32	extras/inttypes.h	162;"	d
SCNd32	lame/inttypes.h	162;"	d
SCNd64	extras/inttypes.h	169;"	d
SCNd64	lame/inttypes.h	169;"	d
SCNdFAST16	extras/inttypes.h	159;"	d
SCNdFAST16	lame/inttypes.h	159;"	d
SCNdFAST32	extras/inttypes.h	166;"	d
SCNdFAST32	lame/inttypes.h	166;"	d
SCNdFAST64	extras/inttypes.h	173;"	d
SCNdFAST64	lame/inttypes.h	173;"	d
SCNdLEAST16	extras/inttypes.h	157;"	d
SCNdLEAST16	lame/inttypes.h	157;"	d
SCNdLEAST32	extras/inttypes.h	164;"	d
SCNdLEAST32	lame/inttypes.h	164;"	d
SCNdLEAST64	extras/inttypes.h	171;"	d
SCNdLEAST64	lame/inttypes.h	171;"	d
SCNdMAX	extras/inttypes.h	176;"	d
SCNdMAX	lame/inttypes.h	176;"	d
SCNdPTR	extras/inttypes.h	180;"	d
SCNdPTR	extras/inttypes.h	183;"	d
SCNdPTR	lame/inttypes.h	180;"	d
SCNdPTR	lame/inttypes.h	183;"	d
SCNi16	extras/inttypes.h	156;"	d
SCNi16	lame/inttypes.h	156;"	d
SCNi32	extras/inttypes.h	163;"	d
SCNi32	lame/inttypes.h	163;"	d
SCNi64	extras/inttypes.h	170;"	d
SCNi64	lame/inttypes.h	170;"	d
SCNiFAST16	extras/inttypes.h	160;"	d
SCNiFAST16	lame/inttypes.h	160;"	d
SCNiFAST32	extras/inttypes.h	167;"	d
SCNiFAST32	lame/inttypes.h	167;"	d
SCNiFAST64	extras/inttypes.h	174;"	d
SCNiFAST64	lame/inttypes.h	174;"	d
SCNiLEAST16	extras/inttypes.h	158;"	d
SCNiLEAST16	lame/inttypes.h	158;"	d
SCNiLEAST32	extras/inttypes.h	165;"	d
SCNiLEAST32	lame/inttypes.h	165;"	d
SCNiLEAST64	extras/inttypes.h	172;"	d
SCNiLEAST64	lame/inttypes.h	172;"	d
SCNiMAX	extras/inttypes.h	177;"	d
SCNiMAX	lame/inttypes.h	177;"	d
SCNiPTR	extras/inttypes.h	181;"	d
SCNiPTR	extras/inttypes.h	184;"	d
SCNiPTR	lame/inttypes.h	181;"	d
SCNiPTR	lame/inttypes.h	184;"	d
SCNo16	extras/inttypes.h	188;"	d
SCNo16	lame/inttypes.h	188;"	d
SCNo32	extras/inttypes.h	201;"	d
SCNo32	lame/inttypes.h	201;"	d
SCNo64	extras/inttypes.h	214;"	d
SCNo64	lame/inttypes.h	214;"	d
SCNoFAST16	extras/inttypes.h	196;"	d
SCNoFAST16	lame/inttypes.h	196;"	d
SCNoFAST32	extras/inttypes.h	209;"	d
SCNoFAST32	lame/inttypes.h	209;"	d
SCNoFAST64	extras/inttypes.h	222;"	d
SCNoFAST64	lame/inttypes.h	222;"	d
SCNoLEAST16	extras/inttypes.h	192;"	d
SCNoLEAST16	lame/inttypes.h	192;"	d
SCNoLEAST32	extras/inttypes.h	205;"	d
SCNoLEAST32	lame/inttypes.h	205;"	d
SCNoLEAST64	extras/inttypes.h	218;"	d
SCNoLEAST64	lame/inttypes.h	218;"	d
SCNoMAX	extras/inttypes.h	227;"	d
SCNoMAX	lame/inttypes.h	227;"	d
SCNoPTR	extras/inttypes.h	233;"	d
SCNoPTR	extras/inttypes.h	238;"	d
SCNoPTR	lame/inttypes.h	233;"	d
SCNoPTR	lame/inttypes.h	238;"	d
SCNu16	extras/inttypes.h	189;"	d
SCNu16	lame/inttypes.h	189;"	d
SCNu32	extras/inttypes.h	202;"	d
SCNu32	lame/inttypes.h	202;"	d
SCNu64	extras/inttypes.h	215;"	d
SCNu64	lame/inttypes.h	215;"	d
SCNuFAST16	extras/inttypes.h	197;"	d
SCNuFAST16	lame/inttypes.h	197;"	d
SCNuFAST32	extras/inttypes.h	210;"	d
SCNuFAST32	lame/inttypes.h	210;"	d
SCNuFAST64	extras/inttypes.h	223;"	d
SCNuFAST64	lame/inttypes.h	223;"	d
SCNuLEAST16	extras/inttypes.h	193;"	d
SCNuLEAST16	lame/inttypes.h	193;"	d
SCNuLEAST32	extras/inttypes.h	206;"	d
SCNuLEAST32	lame/inttypes.h	206;"	d
SCNuLEAST64	extras/inttypes.h	219;"	d
SCNuLEAST64	lame/inttypes.h	219;"	d
SCNuMAX	extras/inttypes.h	228;"	d
SCNuMAX	lame/inttypes.h	228;"	d
SCNuPTR	extras/inttypes.h	234;"	d
SCNuPTR	extras/inttypes.h	239;"	d
SCNuPTR	lame/inttypes.h	234;"	d
SCNuPTR	lame/inttypes.h	239;"	d
SCNx16	extras/inttypes.h	190;"	d
SCNx16	lame/inttypes.h	190;"	d
SCNx32	extras/inttypes.h	203;"	d
SCNx32	lame/inttypes.h	203;"	d
SCNx64	extras/inttypes.h	216;"	d
SCNx64	lame/inttypes.h	216;"	d
SCNxFAST16	extras/inttypes.h	198;"	d
SCNxFAST16	lame/inttypes.h	198;"	d
SCNxFAST32	extras/inttypes.h	211;"	d
SCNxFAST32	lame/inttypes.h	211;"	d
SCNxFAST64	extras/inttypes.h	224;"	d
SCNxFAST64	lame/inttypes.h	224;"	d
SCNxLEAST16	extras/inttypes.h	194;"	d
SCNxLEAST16	lame/inttypes.h	194;"	d
SCNxLEAST32	extras/inttypes.h	207;"	d
SCNxLEAST32	lame/inttypes.h	207;"	d
SCNxLEAST64	extras/inttypes.h	220;"	d
SCNxLEAST64	lame/inttypes.h	220;"	d
SCNxMAX	extras/inttypes.h	229;"	d
SCNxMAX	lame/inttypes.h	229;"	d
SCNxPTR	extras/inttypes.h	235;"	d
SCNxPTR	extras/inttypes.h	240;"	d
SCNxPTR	lame/inttypes.h	235;"	d
SCNxPTR	lame/inttypes.h	240;"	d
SED	lame/ACM/ADbg/Makefile	/^SED = \/bin\/sed$/;"	m
SED	lame/ACM/Makefile	/^SED = \/bin\/sed$/;"	m
SED	lame/ACM/ddk/Makefile	/^SED = \/bin\/sed$/;"	m
SED	lame/ACM/tinyxml/Makefile	/^SED = \/bin\/sed$/;"	m
SED	lame/Dll/Makefile	/^SED = \/bin\/sed$/;"	m
SED	lame/Makefile	/^SED = \/bin\/sed$/;"	m
SED	lame/debian/Makefile	/^SED = \/bin\/sed$/;"	m
SED	lame/doc/Makefile	/^SED = \/bin\/sed$/;"	m
SED	lame/doc/html/Makefile	/^SED = \/bin\/sed$/;"	m
SED	lame/doc/man/Makefile	/^SED = \/bin\/sed$/;"	m
SED	lame/dshow/Makefile	/^SED = \/bin\/sed$/;"	m
SED	lame/frontend/Makefile	/^SED = \/bin\/sed$/;"	m
SED	lame/include/Makefile	/^SED = \/bin\/sed$/;"	m
SED	lame/libmp3lame/Makefile	/^SED = \/bin\/sed$/;"	m
SED	lame/libmp3lame/i386/Makefile	/^SED = \/bin\/sed$/;"	m
SED	lame/libmp3lame/vector/Makefile	/^SED = \/bin\/sed$/;"	m
SED	lame/mac/Makefile	/^SED = \/bin\/sed$/;"	m
SED	lame/macosx/English.lproj/Makefile	/^SED = \/bin\/sed$/;"	m
SED	lame/macosx/LAME.xcodeproj/Makefile	/^SED = \/bin\/sed$/;"	m
SED	lame/macosx/Makefile	/^SED = \/bin\/sed$/;"	m
SED	lame/misc/Makefile	/^SED = \/bin\/sed$/;"	m
SED	lame/mpglib/Makefile	/^SED = \/bin\/sed$/;"	m
SED	lame/vc_solution/Makefile	/^SED = \/bin\/sed$/;"	m
SEIData	Source/Encoder_QSV.cpp	/^    List<BYTE> HeaderPacket, SEIData;$/;"	m	class:QSVEncoder	file:
SEIData	Source/Encoder_x264.cpp	/^    List<BYTE> HeaderPacket, SEIData;$/;"	m	class:X264Encoder	file:
SEI_USER_DATA_UNREGISTERED	QSVHelper/QSVStuff.h	/^    enum sei_type {SEI_USER_DATA_UNREGISTERED=0x5};$/;"	e	enum:EncodeCtrl::sei_type
SEI_USER_DATA_UNREGISTERED	Source/Encoder_QSV.cpp	781;"	d	file:
SELECT	DShowPlugin/DeviceSource.cpp	187;"	d	file:
SELECT	DShowPlugin/DeviceSource.cpp	200;"	d	file:
SENDER_WINDOWCLASS	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	309;"	d	file:
SERIALIZE_SEEK_CURRENT	OBSApi/Utility/Serializer.h	23;"	d
SERIALIZE_SEEK_END	OBSApi/Utility/Serializer.h	24;"	d
SERIALIZE_SEEK_START	OBSApi/Utility/Serializer.h	22;"	d
SET	librtmp/md5.c	73;"	d	file:
SET	librtmp/md5.c	78;"	d	file:
SET_MAKE	lame/ACM/ADbg/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	lame/ACM/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	lame/ACM/ddk/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	lame/ACM/tinyxml/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	lame/Dll/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	lame/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	lame/debian/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	lame/doc/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	lame/doc/html/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	lame/doc/man/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	lame/dshow/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	lame/frontend/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	lame/include/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	lame/libmp3lame/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	lame/libmp3lame/i386/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	lame/libmp3lame/vector/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	lame/mac/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	lame/macosx/English.lproj/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	lame/macosx/LAME.xcodeproj/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	lame/macosx/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	lame/misc/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	lame/mpglib/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	lame/vc_solution/Makefile	/^SET_MAKE = $/;"	m
SET_OPTION	lame/libmp3lame/presets.c	34;"	d	file:
SET_RCVTIMEO	librtmp/rtmp_sys.h	60;"	d
SET_RCVTIMEO	librtmp/rtmp_sys.h	75;"	d
SET__OPTION	lame/libmp3lame/presets.c	39;"	d	file:
SFBMAX	lame/libmp3lame/l3side.h	26;"	d
SF_OFFSET	libfaac/aacquant.h	35;"	d
SHA1Final	Source/mongoose.c	/^static void SHA1Final(unsigned char digest[20], SHA1_CTX *context) {$/;"	f	file:
SHA1HANDSOFF	Source/mongoose.c	2869;"	d	file:
SHA1Init	Source/mongoose.c	/^static void SHA1Init(SHA1_CTX *context) {$/;"	f	file:
SHA1Transform	Source/mongoose.c	/^static void SHA1Transform(uint32_t state[5], const unsigned char buffer[64]) {$/;"	f	file:
SHA1Update	Source/mongoose.c	/^static void SHA1Update(SHA1_CTX *context, const unsigned char *data,$/;"	f	file:
SHA1_CTX	Source/mongoose.c	/^} SHA1_CTX;$/;"	t	file:
SHA256_DIGEST_LENGTH	librtmp/handshake.h	31;"	d
SHA256_DIGEST_LENGTH	librtmp/handshake.h	49;"	d
SHA256_DIGEST_LENGTH	librtmp/hashswf.c	31;"	d	file:
SHA256_DIGEST_LENGTH	librtmp/hashswf.c	41;"	d	file:
SHADER_PATH	DShowPlugin/DeviceSource.cpp	147;"	d	file:
SHELL	lame/ACM/ADbg/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	lame/ACM/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	lame/ACM/ddk/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	lame/ACM/tinyxml/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	lame/Dll/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	lame/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	lame/debian/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	lame/doc/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	lame/doc/html/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	lame/doc/man/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	lame/dshow/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	lame/frontend/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	lame/include/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	lame/libmp3lame/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	lame/libmp3lame/i386/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	lame/libmp3lame/vector/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	lame/mac/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	lame/macosx/English.lproj/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	lame/macosx/LAME.xcodeproj/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	lame/macosx/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	lame/misc/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	lame/mpglib/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	lame/vc_solution/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELLEXECUTEA	Source/CrashDumpHandler.h	/^typedef HINSTANCE (WINAPI *SHELLEXECUTEA) (HWND hwnd, LPCTSTR lpOperation, LPCTSTR lpFile, LPCTSTR lpParameters, LPCTSTR lpDirectory, INT nShowCmd);$/;"	t
SHIFT_BITS	libsamplerate/src_sinc.c	40;"	d	file:
SHIFT_IN_BITS_VALUE	lame/libmp3lame/VbrTag.c	254;"	d	file:
SHORT	OBSApi/Utility/Defs.h	/^typedef short               SHORT,*LPSHORT;$/;"	t
SHORT	OBSApi/Utility/Defs.h	42;"	d
SHORTCTL_NOLONG	libfaac/include/faaccfg.h	46;"	d
SHORTCTL_NORMAL	libfaac/include/faaccfg.h	44;"	d
SHORTCTL_NOSHORT	libfaac/include/faaccfg.h	45;"	d
SHORT_LONG_WINDOW	libfaac/coder.h	/^    SHORT_LONG_WINDOW$/;"	e	enum:WINDOW_TYPE
SHORT_SQ_OFFSET	libfaac/coder.h	84;"	d
SHORT_TYPE	lame/libmp3lame/encoder.h	120;"	d
SHandShake	librtmp/handshake.h	/^SHandShake(RTMP * r)$/;"	f
SHandShake	librtmp/rtmp.c	/^SHandShake(RTMP *r)$/;"	f	file:
SIG_ATOMIC_MAX	extras/stdint.h	145;"	d
SIG_ATOMIC_MAX	lame/stdint.h	145;"	d
SIG_ATOMIC_MAX	librtmp/stdint.h	144;"	d
SIG_ATOMIC_MAX	minhook/src/pstdint.h	725;"	d
SIG_ATOMIC_MIN	extras/stdint.h	144;"	d
SIG_ATOMIC_MIN	lame/stdint.h	144;"	d
SIG_ATOMIC_MIN	librtmp/stdint.h	143;"	d
SINC_FILTER	libsamplerate/src_sinc.c	/^} SINC_FILTER ;$/;"	t	file:
SINC_MAGIC_MARKER	libsamplerate/src_sinc.c	33;"	d	file:
SINE_WINDOW	libfaac/filtbank.h	41;"	d
SIZEOF_DOUBLE	lame/config.h	5;"	d
SIZEOF_DOUBLE	lame/configMS.h	5;"	d
SIZEOF_DOUBLE	lame/mac/Precompile_Common.h	33;"	d
SIZEOF_DOUBLE	libsamplerate/config.h	181;"	d
SIZEOF_FLOAT	lame/config.h	8;"	d
SIZEOF_FLOAT	lame/configMS.h	8;"	d
SIZEOF_FLOAT	lame/mac/Precompile_Common.h	34;"	d
SIZEOF_FLOAT	libsamplerate/config.h	184;"	d
SIZEOF_INT	lame/config.h	11;"	d
SIZEOF_INT	lame/configMS.h	11;"	d
SIZEOF_INT	lame/mac/Precompile_Common.h	35;"	d
SIZEOF_INT	libsamplerate/config.h	187;"	d
SIZEOF_LONG	lame/config.h	14;"	d
SIZEOF_LONG	lame/configMS.h	14;"	d
SIZEOF_LONG	lame/mac/Precompile_Common.h	36;"	d
SIZEOF_LONG	libsamplerate/config.h	190;"	d
SIZEOF_LONG_DOUBLE	lame/config.h	17;"	d
SIZEOF_LONG_DOUBLE	lame/configMS.h	17;"	d
SIZEOF_LONG_LONG	lame/mac/Precompile_Common.h	37;"	d
SIZEOF_SHORT	lame/config.h	20;"	d
SIZEOF_SHORT	lame/configMS.h	20;"	d
SIZEOF_SHORT	lame/mac/Precompile_Common.h	38;"	d
SIZEOF_UNSIGNED_INT	lame/config.h	23;"	d
SIZEOF_UNSIGNED_INT	lame/configMS.h	23;"	d
SIZEOF_UNSIGNED_INT	lame/mac/Precompile_Common.h	39;"	d
SIZEOF_UNSIGNED_LONG	lame/config.h	26;"	d
SIZEOF_UNSIGNED_LONG	lame/configMS.h	26;"	d
SIZEOF_UNSIGNED_LONG	lame/mac/Precompile_Common.h	40;"	d
SIZEOF_UNSIGNED_LONG_LONG	lame/mac/Precompile_Common.h	41;"	d
SIZEOF_UNSIGNED_SHORT	lame/config.h	29;"	d
SIZEOF_UNSIGNED_SHORT	lame/configMS.h	29;"	d
SIZEOF_UNSIGNED_SHORT	lame/mac/Precompile_Common.h	42;"	d
SIZE_BITRATE_MPEG1	lame/ACM/ACM.cpp	98;"	d	file:
SIZE_BITRATE_MPEG2	lame/ACM/ACM.cpp	99;"	d	file:
SIZE_CHANNEL_MODE	lame/ACM/ACM.cpp	95;"	d	file:
SIZE_FORMAT_STRUCT	lame/ACM/ACM.cpp	85;"	d	file:
SIZE_FREQ_MPEG1	lame/ACM/ACM.cpp	96;"	d	file:
SIZE_FREQ_MPEG2	lame/ACM/ACM.cpp	97;"	d	file:
SIZE_MAX	extras/stdint.h	149;"	d
SIZE_MAX	extras/stdint.h	151;"	d
SIZE_MAX	lame/stdint.h	149;"	d
SIZE_MAX	lame/stdint.h	151;"	d
SIZE_MAX	librtmp/stdint.h	148;"	d
SIZE_MAX	librtmp/stdint.h	150;"	d
SIZE_MAX	minhook/src/pstdint.h	294;"	d
SLASH	lame/frontend/parse.c	1187;"	d	file:
SLASH	lame/frontend/parse.c	1189;"	d	file:
SLASH	lame/frontend/parse.c	1191;"	d	file:
SNDFILE	lame/frontend/get_audio.c	/^typedef void SNDFILE;$/;"	t	file:
SNDFILE_CFLAGS	lame/ACM/ADbg/Makefile	/^SNDFILE_CFLAGS = $/;"	m
SNDFILE_CFLAGS	lame/ACM/Makefile	/^SNDFILE_CFLAGS = $/;"	m
SNDFILE_CFLAGS	lame/ACM/ddk/Makefile	/^SNDFILE_CFLAGS = $/;"	m
SNDFILE_CFLAGS	lame/ACM/tinyxml/Makefile	/^SNDFILE_CFLAGS = $/;"	m
SNDFILE_CFLAGS	lame/Dll/Makefile	/^SNDFILE_CFLAGS = $/;"	m
SNDFILE_CFLAGS	lame/Makefile	/^SNDFILE_CFLAGS = $/;"	m
SNDFILE_CFLAGS	lame/debian/Makefile	/^SNDFILE_CFLAGS = $/;"	m
SNDFILE_CFLAGS	lame/doc/Makefile	/^SNDFILE_CFLAGS = $/;"	m
SNDFILE_CFLAGS	lame/doc/html/Makefile	/^SNDFILE_CFLAGS = $/;"	m
SNDFILE_CFLAGS	lame/doc/man/Makefile	/^SNDFILE_CFLAGS = $/;"	m
SNDFILE_CFLAGS	lame/dshow/Makefile	/^SNDFILE_CFLAGS = $/;"	m
SNDFILE_CFLAGS	lame/frontend/Makefile	/^SNDFILE_CFLAGS = $/;"	m
SNDFILE_CFLAGS	lame/include/Makefile	/^SNDFILE_CFLAGS = $/;"	m
SNDFILE_CFLAGS	lame/libmp3lame/Makefile	/^SNDFILE_CFLAGS = $/;"	m
SNDFILE_CFLAGS	lame/libmp3lame/i386/Makefile	/^SNDFILE_CFLAGS = $/;"	m
SNDFILE_CFLAGS	lame/libmp3lame/vector/Makefile	/^SNDFILE_CFLAGS = $/;"	m
SNDFILE_CFLAGS	lame/mac/Makefile	/^SNDFILE_CFLAGS = $/;"	m
SNDFILE_CFLAGS	lame/macosx/English.lproj/Makefile	/^SNDFILE_CFLAGS = $/;"	m
SNDFILE_CFLAGS	lame/macosx/LAME.xcodeproj/Makefile	/^SNDFILE_CFLAGS = $/;"	m
SNDFILE_CFLAGS	lame/macosx/Makefile	/^SNDFILE_CFLAGS = $/;"	m
SNDFILE_CFLAGS	lame/misc/Makefile	/^SNDFILE_CFLAGS = $/;"	m
SNDFILE_CFLAGS	lame/mpglib/Makefile	/^SNDFILE_CFLAGS = $/;"	m
SNDFILE_CFLAGS	lame/vc_solution/Makefile	/^SNDFILE_CFLAGS = $/;"	m
SNDFILE_LIBS	lame/ACM/ADbg/Makefile	/^SNDFILE_LIBS = $/;"	m
SNDFILE_LIBS	lame/ACM/Makefile	/^SNDFILE_LIBS = $/;"	m
SNDFILE_LIBS	lame/ACM/ddk/Makefile	/^SNDFILE_LIBS = $/;"	m
SNDFILE_LIBS	lame/ACM/tinyxml/Makefile	/^SNDFILE_LIBS = $/;"	m
SNDFILE_LIBS	lame/Dll/Makefile	/^SNDFILE_LIBS = $/;"	m
SNDFILE_LIBS	lame/Makefile	/^SNDFILE_LIBS = $/;"	m
SNDFILE_LIBS	lame/debian/Makefile	/^SNDFILE_LIBS = $/;"	m
SNDFILE_LIBS	lame/doc/Makefile	/^SNDFILE_LIBS = $/;"	m
SNDFILE_LIBS	lame/doc/html/Makefile	/^SNDFILE_LIBS = $/;"	m
SNDFILE_LIBS	lame/doc/man/Makefile	/^SNDFILE_LIBS = $/;"	m
SNDFILE_LIBS	lame/dshow/Makefile	/^SNDFILE_LIBS = $/;"	m
SNDFILE_LIBS	lame/frontend/Makefile	/^SNDFILE_LIBS = $/;"	m
SNDFILE_LIBS	lame/include/Makefile	/^SNDFILE_LIBS = $/;"	m
SNDFILE_LIBS	lame/libmp3lame/Makefile	/^SNDFILE_LIBS = $/;"	m
SNDFILE_LIBS	lame/libmp3lame/i386/Makefile	/^SNDFILE_LIBS = $/;"	m
SNDFILE_LIBS	lame/libmp3lame/vector/Makefile	/^SNDFILE_LIBS = $/;"	m
SNDFILE_LIBS	lame/mac/Makefile	/^SNDFILE_LIBS = $/;"	m
SNDFILE_LIBS	lame/macosx/English.lproj/Makefile	/^SNDFILE_LIBS = $/;"	m
SNDFILE_LIBS	lame/macosx/LAME.xcodeproj/Makefile	/^SNDFILE_LIBS = $/;"	m
SNDFILE_LIBS	lame/macosx/Makefile	/^SNDFILE_LIBS = $/;"	m
SNDFILE_LIBS	lame/misc/Makefile	/^SNDFILE_LIBS = $/;"	m
SNDFILE_LIBS	lame/mpglib/Makefile	/^SNDFILE_LIBS = $/;"	m
SNDFILE_LIBS	lame/vc_solution/Makefile	/^SNDFILE_LIBS = $/;"	m
SOCKET	lame/frontend/rtp.c	/^typedef int SOCKET;$/;"	t	file:
SOURCES	lame/ACM/ADbg/Makefile	/^SOURCES =$/;"	m
SOURCES	lame/ACM/Makefile	/^SOURCES =$/;"	m
SOURCES	lame/ACM/ddk/Makefile	/^SOURCES =$/;"	m
SOURCES	lame/ACM/tinyxml/Makefile	/^SOURCES =$/;"	m
SOURCES	lame/Dll/Makefile	/^SOURCES =$/;"	m
SOURCES	lame/Makefile	/^SOURCES =$/;"	m
SOURCES	lame/debian/Makefile	/^SOURCES =$/;"	m
SOURCES	lame/doc/Makefile	/^SOURCES =$/;"	m
SOURCES	lame/doc/html/Makefile	/^SOURCES =$/;"	m
SOURCES	lame/doc/man/Makefile	/^SOURCES =$/;"	m
SOURCES	lame/dshow/Makefile	/^SOURCES =$/;"	m
SOURCES	lame/frontend/Makefile	/^SOURCES = $(lame_SOURCES) $(mp3rtp_SOURCES) $(mp3x_SOURCES)$/;"	m
SOURCES	lame/include/Makefile	/^SOURCES =$/;"	m
SOURCES	lame/libmp3lame/Makefile	/^SOURCES = $(libmp3lame_la_SOURCES)$/;"	m
SOURCES	lame/libmp3lame/i386/Makefile	/^SOURCES = $(liblameasmroutines_la_SOURCES) \\$/;"	m
SOURCES	lame/libmp3lame/vector/Makefile	/^SOURCES = $(liblamevectorroutines_la_SOURCES) \\$/;"	m
SOURCES	lame/mac/Makefile	/^SOURCES =$/;"	m
SOURCES	lame/macosx/English.lproj/Makefile	/^SOURCES =$/;"	m
SOURCES	lame/macosx/LAME.xcodeproj/Makefile	/^SOURCES =$/;"	m
SOURCES	lame/macosx/Makefile	/^SOURCES =$/;"	m
SOURCES	lame/misc/Makefile	/^SOURCES = $(abx_SOURCES) $(ath_SOURCES) $(scalartest_SOURCES)$/;"	m
SOURCES	lame/mpglib/Makefile	/^SOURCES = $(libmpgdecoder_la_SOURCES)$/;"	m
SOURCES	lame/vc_solution/Makefile	/^SOURCES =$/;"	m
SPACE_V1_FLAG	lame/libmp3lame/id3tag.h	10;"	d
SPEED_CHAR	lame/frontend/timestatus.c	31;"	d	file:
SPEED_CHAR	lame/frontend/timestatus.c	34;"	d	file:
SPEED_MULT	lame/frontend/timestatus.c	32;"	d	file:
SPEED_MULT	lame/frontend/timestatus.c	35;"	d	file:
SPSBufSize	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16          SPSBufSize;$/;"	m
SPSBuffer	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU8           *SPSBuffer;$/;"	m
SPSId	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16          SPSId;$/;"	m
SPSPPS_SIZES	QSVHelper/IPCInfo.h	57;"	d
SPS_BUFF	QSVHelper/IPCInfo.h	51;"	d
SQRT2	lame/libmp3lame/util.h	77;"	d
SQRT2	lame/libmp3lame/util.h	79;"	d
SRATE_RESERVED	lame/dshow/Encoder.cpp	360;"	d	file:
SRC_CB_DATA	libsamplerate/samplerate.h	/^} SRC_CB_DATA ;$/;"	t
SRC_DATA	libsamplerate/samplerate.h	/^} SRC_DATA ;$/;"	t
SRC_DEBUG	libsamplerate/src_linear.c	41;"	d	file:
SRC_ERR_BAD_CALLBACK	libsamplerate/common.h	/^	SRC_ERR_BAD_CALLBACK,$/;"	e
SRC_ERR_BAD_CHANNEL_COUNT	libsamplerate/common.h	/^	SRC_ERR_BAD_CHANNEL_COUNT,$/;"	e
SRC_ERR_BAD_CONVERTER	libsamplerate/common.h	/^	SRC_ERR_BAD_CONVERTER,$/;"	e
SRC_ERR_BAD_DATA	libsamplerate/common.h	/^	SRC_ERR_BAD_DATA,$/;"	e
SRC_ERR_BAD_DATA_PTR	libsamplerate/common.h	/^	SRC_ERR_BAD_DATA_PTR,$/;"	e
SRC_ERR_BAD_MODE	libsamplerate/common.h	/^	SRC_ERR_BAD_MODE,$/;"	e
SRC_ERR_BAD_PRIV_PTR	libsamplerate/common.h	/^	SRC_ERR_BAD_PRIV_PTR,$/;"	e
SRC_ERR_BAD_PROC_PTR	libsamplerate/common.h	/^	SRC_ERR_BAD_PROC_PTR,$/;"	e
SRC_ERR_BAD_SINC_STATE	libsamplerate/common.h	/^	SRC_ERR_BAD_SINC_STATE,$/;"	e
SRC_ERR_BAD_SRC_RATIO	libsamplerate/common.h	/^	SRC_ERR_BAD_SRC_RATIO,$/;"	e
SRC_ERR_BAD_STATE	libsamplerate/common.h	/^	SRC_ERR_BAD_STATE,$/;"	e
SRC_ERR_DATA_OVERLAP	libsamplerate/common.h	/^	SRC_ERR_DATA_OVERLAP,$/;"	e
SRC_ERR_FILTER_LEN	libsamplerate/common.h	/^	SRC_ERR_FILTER_LEN,$/;"	e
SRC_ERR_MALLOC_FAILED	libsamplerate/common.h	/^	SRC_ERR_MALLOC_FAILED,$/;"	e
SRC_ERR_MAX_ERROR	libsamplerate/common.h	/^	SRC_ERR_MAX_ERROR$/;"	e
SRC_ERR_NO_ERROR	libsamplerate/common.h	/^{	SRC_ERR_NO_ERROR = 0,$/;"	e
SRC_ERR_NO_PRIVATE	libsamplerate/common.h	/^	SRC_ERR_NO_PRIVATE,$/;"	e
SRC_ERR_NO_VARIABLE_RATIO	libsamplerate/common.h	/^	SRC_ERR_NO_VARIABLE_RATIO,$/;"	e
SRC_ERR_NULL_CALLBACK	libsamplerate/common.h	/^	SRC_ERR_NULL_CALLBACK,$/;"	e
SRC_ERR_SHIFT_BITS	libsamplerate/common.h	/^	SRC_ERR_SHIFT_BITS,$/;"	e
SRC_ERR_SINC_BAD_BUFFER_LEN	libsamplerate/common.h	/^	SRC_ERR_SINC_BAD_BUFFER_LEN,$/;"	e
SRC_ERR_SINC_PREPARE_DATA_BAD_LEN	libsamplerate/common.h	/^	SRC_ERR_SINC_PREPARE_DATA_BAD_LEN,$/;"	e
SRC_ERR_SIZE_INCOMPATIBILITY	libsamplerate/common.h	/^	SRC_ERR_SIZE_INCOMPATIBILITY,$/;"	e
SRC_FALSE	libsamplerate/common.h	/^{	SRC_FALSE	= 0,$/;"	e
SRC_LINEAR	libsamplerate/samplerate.h	/^	SRC_LINEAR					= 4,$/;"	e
SRC_MAX_RATIO	libsamplerate/common.h	36;"	d
SRC_MAX_RATIO_STR	libsamplerate/common.h	37;"	d
SRC_MIN_RATIO_DIFF	libsamplerate/common.h	39;"	d
SRC_MODE_CALLBACK	libsamplerate/common.h	/^	SRC_MODE_CALLBACK	= 556$/;"	e
SRC_MODE_PROCESS	libsamplerate/common.h	/^	SRC_MODE_PROCESS	= 555,$/;"	e
SRC_PRIVATE	libsamplerate/common.h	/^} SRC_PRIVATE ;$/;"	t
SRC_PRIVATE_tag	libsamplerate/common.h	/^typedef struct SRC_PRIVATE_tag$/;"	s
SRC_SINC_BEST_QUALITY	libsamplerate/samplerate.h	/^	SRC_SINC_BEST_QUALITY		= 0,$/;"	e
SRC_SINC_FASTEST	libsamplerate/samplerate.h	/^	SRC_SINC_FASTEST			= 2,$/;"	e
SRC_SINC_MEDIUM_QUALITY	libsamplerate/samplerate.h	/^	SRC_SINC_MEDIUM_QUALITY		= 1,$/;"	e
SRC_STATE	libsamplerate/samplerate.h	/^typedef struct SRC_STATE_tag SRC_STATE ;$/;"	t
SRC_TRUE	libsamplerate/common.h	/^	SRC_TRUE	= 1,$/;"	e
SRC_ZERO_ORDER_HOLD	libsamplerate/samplerate.h	/^	SRC_ZERO_ORDER_HOLD			= 3,$/;"	e
SR_INFO	libfaac/coder.h	/^} SR_INFO;$/;"	t
SSE	lame/include/lame.h	/^    SSE = 3$/;"	e	enum:asm_optimizations_e
SSE	lame/libmp3lame/util.h	/^            unsigned int SSE:1; \/* Pentium III, Pentium 4    *\/$/;"	m	struct:lame_internal_flags::<anonymous>
SSE2	lame/libmp3lame/util.h	/^            unsigned int SSE2:1; \/* Pentium 4, K8             *\/$/;"	m	struct:lame_internal_flags::<anonymous>
SSI_PATTERN	Source/mongoose.c	/^  SSI_PATTERN,$/;"	e	file:
SSL	Source/mongoose.c	/^typedef void *SSL;$/;"	t	file:
SSLIMIT	lame/mpglib/mpg123.h	78;"	d
SSL_CTX	Source/mongoose.c	/^typedef void *SSL_CTX;$/;"	t	file:
SSL_SET_SESSION	librtmp/rtmp_sys.h	89;"	d
SSL_SET_SESSION	librtmp/rtmp_sys.h	91;"	d
SSR	libfaac/bitstream.h	132;"	d
SSR	libfaac/include/faaccfg.h	34;"	d
SSampleRate	lame/dshow/PropPage.cpp	/^struct SSampleRate {$/;"	s	file:
STACKWALK64	Source/CrashDumpHandler.h	/^typedef BOOL (WINAPI *STACKWALK64) ($/;"	t
STANDARD	lame/include/lame.h	/^    STANDARD = 1001,$/;"	e	enum:preset_mode_e
STANDARD_FAST	lame/include/lame.h	/^    STANDARD_FAST = 1004,$/;"	e	enum:preset_mode_e
START_TYPE	lame/libmp3lame/encoder.h	119;"	d
STATIC_ASSERT_EQUAL_DIMENSION	lame/libmp3lame/psymodel.c	271;"	d	file:
STDCALL	OBSApi/Utility/XT_Windows.h	41;"	d
STDC_HEADERS	lame/config.h	32;"	d
STDC_HEADERS	lame/configMS.h	32;"	d
STDC_HEADERS	lame/mac/Precompile_Common.h	19;"	d
STDC_HEADERS	libsamplerate/config.h	193;"	d
STDINT_H_UINTPTR_T_DEFINED	minhook/src/pstdint.h	665;"	d
STDINT_H_UINTPTR_T_DEFINED	minhook/src/pstdint.h	717;"	d
STDOUT	lame/misc/abx.c	903;"	d	file:
STDOUT	lame/misc/abx.c	943;"	d	file:
STEP	librtmp/md5.c	59;"	d	file:
STEPS_per_dB	lame/libmp3lame/gain_analysis.h	58;"	d
STEREO	lame/include/lame.h	/^  STEREO = 0,$/;"	e	enum:MPEG_mode_e
STOP_REQUEST	QSVHelper/IPCInfo.h	60;"	d
STOP_TYPE	lame/libmp3lame/encoder.h	121;"	d
STR	CLRHostPlugin/CLRHostPlugin/Localization.h	8;"	d
STR	Source/mongoose.c	118;"	d	file:
STR	Source/mongoose.c	1348;"	d	file:
STR	lame/frontend/get_audio.c	93;"	d	file:
STR	lame/frontend/gtkanal.c	59;"	d	file:
STR	lame/libmp3lame/version.h	31;"	d
STR2AVAL	Source/RTMPStuff.h	37;"	d
STRICT	lame/ACM/ACM.cpp	29;"	d	file:
STRICT	lame/ACM/ACMStream.cpp	29;"	d	file:
STRICT	lame/ACM/AEncodeProperties.cpp	29;"	d	file:
STRICT	lame/ACM/DecodeStream.cpp	29;"	d	file:
STRICT	lame/ACM/main.cpp	29;"	d	file:
STRIP	lame/ACM/ADbg/Makefile	/^STRIP = strip$/;"	m
STRIP	lame/ACM/Makefile	/^STRIP = strip$/;"	m
STRIP	lame/ACM/ddk/Makefile	/^STRIP = strip$/;"	m
STRIP	lame/ACM/tinyxml/Makefile	/^STRIP = strip$/;"	m
STRIP	lame/Dll/Makefile	/^STRIP = strip$/;"	m
STRIP	lame/Makefile	/^STRIP = strip$/;"	m
STRIP	lame/debian/Makefile	/^STRIP = strip$/;"	m
STRIP	lame/doc/Makefile	/^STRIP = strip$/;"	m
STRIP	lame/doc/html/Makefile	/^STRIP = strip$/;"	m
STRIP	lame/doc/man/Makefile	/^STRIP = strip$/;"	m
STRIP	lame/dshow/Makefile	/^STRIP = strip$/;"	m
STRIP	lame/frontend/Makefile	/^STRIP = strip$/;"	m
STRIP	lame/include/Makefile	/^STRIP = strip$/;"	m
STRIP	lame/libmp3lame/Makefile	/^STRIP = strip$/;"	m
STRIP	lame/libmp3lame/i386/Makefile	/^STRIP = strip$/;"	m
STRIP	lame/libmp3lame/vector/Makefile	/^STRIP = strip$/;"	m
STRIP	lame/mac/Makefile	/^STRIP = strip$/;"	m
STRIP	lame/macosx/English.lproj/Makefile	/^STRIP = strip$/;"	m
STRIP	lame/macosx/LAME.xcodeproj/Makefile	/^STRIP = strip$/;"	m
STRIP	lame/macosx/Makefile	/^STRIP = strip$/;"	m
STRIP	lame/misc/Makefile	/^STRIP = strip$/;"	m
STRIP	lame/mpglib/Makefile	/^STRIP = strip$/;"	m
STRIP	lame/vc_solution/Makefile	/^STRIP = strip$/;"	m
STRIPPROG	lame/ACM/ADbg/Makefile	/^	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install$/;"	m
STRIPPROG	lame/ACM/Makefile	/^	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install$/;"	m
STRIPPROG	lame/ACM/ddk/Makefile	/^	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install$/;"	m
STRIPPROG	lame/ACM/tinyxml/Makefile	/^	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install$/;"	m
STRIPPROG	lame/Dll/Makefile	/^	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install$/;"	m
STRIPPROG	lame/Makefile	/^	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install$/;"	m
STRIPPROG	lame/debian/Makefile	/^	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install$/;"	m
STRIPPROG	lame/doc/Makefile	/^	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install$/;"	m
STRIPPROG	lame/doc/html/Makefile	/^	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install$/;"	m
STRIPPROG	lame/doc/man/Makefile	/^	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install$/;"	m
STRIPPROG	lame/dshow/Makefile	/^	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install$/;"	m
STRIPPROG	lame/frontend/Makefile	/^	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install$/;"	m
STRIPPROG	lame/include/Makefile	/^	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install$/;"	m
STRIPPROG	lame/libmp3lame/Makefile	/^	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install$/;"	m
STRIPPROG	lame/libmp3lame/i386/Makefile	/^	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install$/;"	m
STRIPPROG	lame/libmp3lame/vector/Makefile	/^	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install$/;"	m
STRIPPROG	lame/mac/Makefile	/^	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install$/;"	m
STRIPPROG	lame/macosx/English.lproj/Makefile	/^	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install$/;"	m
STRIPPROG	lame/macosx/LAME.xcodeproj/Makefile	/^	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install$/;"	m
STRIPPROG	lame/macosx/Makefile	/^	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install$/;"	m
STRIPPROG	lame/misc/Makefile	/^	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install$/;"	m
STRIPPROG	lame/mpglib/Makefile	/^	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install$/;"	m
STRIPPROG	lame/vc_solution/Makefile	/^	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install$/;"	m
STRX	Source/mongoose.c	117;"	d	file:
STRX	Source/mongoose.c	1347;"	d	file:
STR_PREFIX	CLRHostPlugin/CLRHostPlugin/Localization.h	6;"	d
SUBDIRS	lame/ACM/Makefile	/^SUBDIRS = ADbg ddk tinyxml$/;"	m
SUBDIRS	lame/Makefile	/^SUBDIRS = mpglib libmp3lame frontend Dll debian doc include misc dshow ACM \\$/;"	m
SUBDIRS	lame/doc/Makefile	/^SUBDIRS = html man$/;"	m
SUBDIRS	lame/libmp3lame/Makefile	/^SUBDIRS = i386 vector$/;"	m
SUBDIRS	lame/macosx/Makefile	/^SUBDIRS = English.lproj LAME.xcodeproj$/;"	m
SUFFIXES	lame/libmp3lame/i386/Makefile	/^SUFFIXES = .nas .lo$/;"	m
SWAPPRESENTPROC	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^typedef HRESULT (WINAPI *SWAPPRESENTPROC)(IDirect3DSwapChain9*, const RECT*, const RECT*, HWND, const RGNDATA*, DWORD);$/;"	t	file:
SWFHash	librtmp/rtmp.h	/^        uint8_t SWFHash[RTMP_SWF_HASHLEN];$/;"	m	struct:RTMP_LNK
SWFSize	librtmp/rtmp.h	/^        uint32_t SWFSize;$/;"	m	struct:RTMP_LNK
SWFVerificationResponse	librtmp/rtmp.h	/^        char SWFVerificationResponse[RTMP_SWF_HASHLEN+10];$/;"	m	struct:RTMP_LNK
SWHEXPROC	injectHelper/injectHelper.c	/^typedef HHOOK (WINAPI *SWHEXPROC)(int, HOOKPROC, HINSTANCE, DWORD);$/;"	t	file:
SYMCLEANUP	Source/CrashDumpHandler.h	/^typedef BOOL (WINAPI *SYMCLEANUP) (HANDLE hProcess);$/;"	t
SYMFROMADDR	Source/CrashDumpHandler.h	/^typedef BOOL    (WINAPI *SYMFROMADDR) (HANDLE hProcess, DWORD64 Address, PDWORD64 Displacement, PSYMBOL_INFO Symbol);$/;"	t
SYMFUNCTIONTABLEACCESS64	Source/CrashDumpHandler.h	/^typedef PVOID    (WINAPI *SYMFUNCTIONTABLEACCESS64) (HANDLE hProcess, DWORD64 AddrBase);$/;"	t
SYMGETMODULEBASE64	Source/CrashDumpHandler.h	/^typedef DWORD64 (WINAPI *SYMGETMODULEBASE64) (HANDLE hProcess, DWORD64 dwAddr);$/;"	t
SYMGETMODULEINFO64	Source/CrashDumpHandler.h	/^typedef BOOL    (WINAPI *SYMGETMODULEINFO64) (HANDLE hProcess, DWORD64 dwAddr, PIMAGEHLP_MODULE64 ModuleInfo);$/;"	t
SYMINITIALIZE	Source/CrashDumpHandler.h	/^typedef BOOL (WINAPI *SYMINITIALIZE) (HANDLE hProcess, PCTSTR UserSearchPath, BOOL fInvadeProcess);$/;"	t
SYMLOADMODULE64	Source/CrashDumpHandler.h	/^typedef DWORD64 (WINAPI *SYMLOADMODULE64) (HANDLE hProcess, HANDLE hFile, PSTR ImageName, PSTR ModuleName, DWORD64 BaseOfDll, DWORD SizeOfDll);$/;"	t
SYMSETOPTIONS	Source/CrashDumpHandler.h	/^typedef DWORD (WINAPI *SYMSETOPTIONS) (DWORD SymOptions);$/;"	t
SYNTH_1TO1_CLIPCHOICE	lame/mpglib/decode_i386.c	111;"	d	file:
SYNTH_1TO1_MONO_CLIPCHOICE	lame/mpglib/decode_i386.c	78;"	d	file:
S_ISDIR	Source/mongoose.c	1319;"	d	file:
S_ISDIR	Source/mongoose.c	137;"	d	file:
S_ISFIFO	lame/frontend/get_audio.c	432;"	d	file:
S_MUL	libfaac/kiss_fft/_kiss_fft_guts.h	49;"	d
S_MUL	libfaac/kiss_fft/_kiss_fft_guts.h	64;"	d
SafeAdd	OBSApi/Utility/Template.h	/^    inline unsigned int SafeAdd(const T& val)$/;"	f	class:List
SafeAdd	OBSApi/Utility/XString.h	/^    unsigned int SafeAdd(CTSTR lpStr)$/;"	f	class:StringList
SafeAdd	OBSApi/Utility/XString.h	/^    unsigned int SafeAdd(const String& val)$/;"	f	class:StringList
SafeAddI	OBSApi/Utility/XString.h	/^    unsigned int SafeAddI(CTSTR lpStr)$/;"	f	class:StringList
SafeAddI	OBSApi/Utility/XString.h	/^    unsigned int SafeAddI(const String& val)$/;"	f	class:StringList
SafeList	OBSApi/Utility/Template.h	/^template<typename T> class SafeList : public List<T>$/;"	c
SafeRelease	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.h	56;"	d
SafeRelease	OBSApi/OBSApi.h	57;"	d
SafeReleaseLogRef	OBSApi/OBSApi.h	56;"	d
SampleConfiguration.xaml.cs	CLRHostPlugin/CLRCSharpSamplePlugin/SampleConfiguration.xaml.cs	1;"	F
SampleConfigurationDialog	CLRHostPlugin/CLRCSharpSamplePlugin/SampleConfiguration.xaml.cs	/^        public SampleConfigurationDialog(XElement config)$/;"	m	class:CSharpSamplePlugin.SampleConfigurationDialog
SampleConfigurationDialog	CLRHostPlugin/CLRCSharpSamplePlugin/SampleConfiguration.xaml.cs	/^    public partial class SampleConfigurationDialog : Window$/;"	c	namespace:CSharpSamplePlugin
SampleData	DShowPlugin/DeviceSource.h	/^    inline SampleData() {refs = 1;}$/;"	f	struct:SampleData
SampleData	DShowPlugin/DeviceSource.h	/^struct SampleData {$/;"	s
SampleDesc	extras/dxgi1_2.h	/^    DXGI_SAMPLE_DESC SampleDesc;$/;"	m	struct:DXGI_SWAP_CHAIN_DESC1
SampleFrequency	libmfx/include/msdk/include/mfxastructures.h	/^    mfxU32  SampleFrequency;$/;"	m
SampleImageSource	CLRHostPlugin/CLRCSharpSamplePlugin/SampleImageSource.cs	/^        public SampleImageSource(XElement config)$/;"	m	class:CSharpSamplePlugin.SampleImageSource
SampleImageSource	CLRHostPlugin/CLRCSharpSamplePlugin/SampleImageSource.cs	/^    class SampleImageSource : AbstractImageSource\/\/, IDisposable$/;"	c	namespace:CSharpSamplePlugin
SampleImageSource.cs	CLRHostPlugin/CLRCSharpSamplePlugin/SampleImageSource.cs	1;"	F
SampleImageSourceFactory	CLRHostPlugin/CLRCSharpSamplePlugin/SampleImageSourceFactory.cs	/^        public SampleImageSourceFactory()$/;"	m	class:CSharpSamplePlugin.SampleImageSourceFactory
SampleImageSourceFactory	CLRHostPlugin/CLRCSharpSamplePlugin/SampleImageSourceFactory.cs	/^    public class SampleImageSourceFactory : AbstractImageSourceFactory$/;"	c	namespace:CSharpSamplePlugin
SampleImageSourceFactory.cs	CLRHostPlugin/CLRCSharpSamplePlugin/SampleImageSourceFactory.cs	1;"	F
SamplePlugin	CLRHostPlugin/CLRCSharpSamplePlugin/SamplePlugin.cs	/^        public SamplePlugin()$/;"	m	class:CSharpSamplePlugin.SamplePlugin
SamplePlugin	CLRHostPlugin/CLRCSharpSamplePlugin/SamplePlugin.cs	/^    class SamplePlugin : AbstractPlugin$/;"	c	namespace:CSharpSamplePlugin
SamplePlugin.cs	CLRHostPlugin/CLRCSharpSamplePlugin/SamplePlugin.cs	1;"	F
SampleSettingsPane	CLRHostPlugin/CLRCSharpSamplePlugin/SampleSettingsPane.cs	/^    class SampleSettingsPane : AbstractWPFSettingsPane$/;"	c	namespace:CSharpSamplePlugin
SampleSettingsPane.cs	CLRHostPlugin/CLRCSharpSamplePlugin/SampleSettingsPane.cs	1;"	F
SampleSettingsPaneControl	CLRHostPlugin/CLRCSharpSamplePlugin/SampleSettingsPaneControl.xaml.cs	/^        public SampleSettingsPaneControl()$/;"	m	class:CSharpSamplePlugin.SampleSettingsPaneControl
SampleSettingsPaneControl	CLRHostPlugin/CLRCSharpSamplePlugin/SampleSettingsPaneControl.xaml.cs	/^    public partial class SampleSettingsPaneControl : UserControl$/;"	c	namespace:CSharpSamplePlugin
SampleSettingsPaneControl.xaml.cs	CLRHostPlugin/CLRCSharpSamplePlugin/SampleSettingsPaneControl.xaml.cs	1;"	F
SampleThread	DShowPlugin/DeviceSource.cpp	/^DWORD DeviceSource::SampleThread(DeviceSource *source)$/;"	f	class:DeviceSource
SampleToChunk	Source/MP4FileStream.cpp	/^struct SampleToChunk$/;"	s	file:
SamplerInfo	OBSApi/GraphicsSystem.h	/^    inline SamplerInfo()$/;"	f	struct:SamplerInfo
SamplerInfo	OBSApi/GraphicsSystem.h	/^struct SamplerInfo$/;"	s
SamplerState	OBSApi/GraphicsSystem.h	/^class BASE_EXPORT SamplerState$/;"	c
Samplers	Source/D3D10System.h	/^    List<ShaderSampler> Samplers;$/;"	m	class:D3D10Shader
Samplers	Source/D3D10System.h	/^    List<ShaderSampler> Samplers;$/;"	m	struct:ShaderProcessor
SansSerifFontFamily	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public string SansSerifFontFamily { get; set; }$/;"	p	class:Shared.BrowserInstanceSettings
Saturation	libmfx/include/msdk/include/mfxstructures.h	/^    mfxF64   Saturation;$/;"	m
Save	CLRBrowserSourcePlugin/Plugin/Shared/BrowserConfig.cs	/^        public bool Save(XElement element)$/;"	m	class:Shared.BrowserConfig
Save	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public void Save()$/;"	m	class:Shared.BrowserSettings
Save	OBSApi/Utility/XConfig.cpp	/^void  XConfig::Save()$/;"	f	class:XConfig
SaveAs	OBSApi/Utility/ConfigFile.cpp	/^BOOL ConfigFile::SaveAs(CTSTR lpPath)$/;"	f	class:ConfigFile
SaveAudioEncoderPropertiesToRegistry	lame/dshow/Mpegac.cpp	/^STDMETHODIMP CMpegAudEnc::SaveAudioEncoderPropertiesToRegistry()$/;"	f	class:CMpegAudEnc
SaveComplete	Source/ReplayBuffer.cpp	/^    static void SaveComplete(String name, DWORD recordingLengthMS)$/;"	f	struct:ReplayBuffer
SaveFile	lame/ACM/tinyxml/tinyxml.cpp	/^bool TiXmlDocument::SaveFile( const std::string& filename ) const$/;"	f	class:TiXmlDocument
SaveFile	lame/ACM/tinyxml/tinyxml.cpp	/^bool TiXmlDocument::SaveFile() const$/;"	f	class:TiXmlDocument
SaveInitialVolumes	PSVPlugin/psvplugin.cpp	/^void SaveInitialVolumes()$/;"	f
SaveReplayBuffer	Source/ReplayBuffer.cpp	/^    void SaveReplayBuffer(DWORD timestamp)$/;"	f	struct:ReplayBuffer
SaveReplayBuffer	Source/ReplayBuffer.cpp	/^void SaveReplayBuffer(ReplayBuffer *out, DWORD timestamp)$/;"	f
SaveReplayBufferExt	Source/OBSCapture.cpp	/^void OBS::SaveReplayBufferExt()$/;"	f	class:OBS
SaveReplayBufferHotkey	Source/OBSHotkeyHandlers.cpp	/^void STDCALL OBS::SaveReplayBufferHotkey(DWORD hotkey, UPARAM param, bool bDown)$/;"	f	class:OBS
SaveReplayBufferThread	Source/ReplayBuffer.cpp	/^static DWORD STDCALL SaveReplayBufferThread(void *arg)$/;"	f	file:
SaveSettings	NoiseGate/NoiseGate.cpp	/^void NoiseGate::SaveSettings()$/;"	f	class:NoiseGate
SaveSettings	PSVPlugin/psvplugin.cpp	/^void SaveSettings()$/;"	f
SaveThread	Source/ReplayBuffer.cpp	/^    void SaveThread()$/;"	f	struct:RecordingHelper
SaveTo	OBSApi/Utility/XConfig.cpp	/^void  XConfig::SaveTo(CTSTR lpPath)$/;"	f	class:XConfig
SaveValuesToElement	lame/ACM/AEncodeProperties.cpp	/^void AEncodeProperties::SaveValuesToElement(TiXmlElement * the_element) const$/;"	f	class:AEncodeProperties
SaveValuesToStringKey	lame/ACM/AEncodeProperties.cpp	/^void AEncodeProperties::SaveValuesToStringKey(const std::string & config_name)$/;"	f	class:AEncodeProperties
SaveVertexBuffer	OBSApi/GraphicsSystem.cpp	/^VertexBuffer *GraphicsSystem::SaveVertexBuffer()$/;"	f	class:GraphicsSystem
SaveVertexBuffer	OBSApi/GraphicsSystem.h	/^inline VertexBuffer* SaveVertexBuffer()                         {return GS->SaveVertexBuffer();}$/;"	f
SavedBlendState	Source/D3D10System.h	/^struct SavedBlendState$/;"	s
Scale	OBSApi/Utility/XMath.h	/^    inline Bounds& Scale(const Vect &scale)$/;"	f	struct:Bounds
Scale	OBSApi/Utility/XMath.h	/^    inline Matrix& Scale(const Vect &scale)$/;"	f	struct:Matrix
Scale	OBSApi/Utility/XMath.h	/^    inline Matrix& Scale(float scaleX, float scaleY, float scaleZ)$/;"	f	struct:Matrix
Scale	libmfx/include/msdk/include/mfxstructures.h	/^        mfxU16 Scale;$/;"	m
Scaling	extras/dxgi1_2.h	/^    DXGI_MODE_SCALING Scaling;$/;"	m	struct:DXGI_MODE_DESC1
Scaling	extras/dxgi1_2.h	/^    DXGI_MODE_SCALING Scaling;$/;"	m	struct:DXGI_SWAP_CHAIN_FULLSCREEN_DESC
Scaling	extras/dxgi1_2.h	/^    DXGI_SCALING Scaling;$/;"	m	struct:DXGI_SWAP_CHAIN_DESC1
ScanLine	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    UINT            ScanLine;$/;"	m	struct:_D3DRASTER_STATUS
ScanlineOrdering	extras/dxgi1_2.h	/^    DXGI_MODE_SCANLINE_ORDER ScanlineOrdering;$/;"	m	struct:DXGI_MODE_DESC1
ScanlineOrdering	extras/dxgi1_2.h	/^    DXGI_MODE_SCANLINE_ORDER ScanlineOrdering;$/;"	m	struct:DXGI_SWAP_CHAIN_FULLSCREEN_DESC
Scene	OBSApi/Scene.h	/^class BASE_EXPORT Scene$/;"	c
Scene.cpp	OBSApi/Scene.cpp	1;"	F
Scene.h	OBSApi/Scene.h	1;"	F
SceneChangeRate	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16          SceneChangeRate;$/;"	m
SceneCollectionAction	Source/OBS.h	/^enum class SceneCollectionAction {$/;"	c
SceneHotkey	Source/API.cpp	/^void STDCALL SceneHotkey(DWORD hotkey, UPARAM param, bool bDown)$/;"	f
SceneHotkeyDialogProc	Source/WindowStuff.cpp	/^INT_PTR CALLBACK OBS::SceneHotkeyDialogProc(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam)$/;"	f	class:OBS
SceneHotkeyInfo	Source/OBS.h	/^struct SceneHotkeyInfo$/;"	s
SceneItem	OBSApi/Scene.h	/^class BASE_EXPORT SceneItem$/;"	c
SceneSwitcher	scenesw/SceneSwitcher.cpp	/^SceneSwitcher::SceneSwitcher(HINSTANCE hinstMain, OBSHOTKEYPROC ToggleHotkeyProc)$/;"	f	class:SceneSwitcher
SceneSwitcher	scenesw/SceneSwitcher.h	/^class SceneSwitcher$/;"	c
SceneSwitcher.cpp	scenesw/SceneSwitcher.cpp	1;"	F
SceneSwitcher.h	scenesw/SceneSwitcher.h	1;"	F
SceneSwitcherSettings	scenesw/SceneSwitcher.h	/^class SceneSwitcherSettings : public SettingsPane {$/;"	c
SceneSwitcherSettings	scenesw/SceneSwitcherSettings.cpp	/^SceneSwitcherSettings::SceneSwitcherSettings(SceneSwitcher *thePlugin, OBSHOTKEYPROC ToggleHotkeyProc):$/;"	f	class:SceneSwitcherSettings
SceneSwitcherSettings.cpp	scenesw/SceneSwitcherSettings.cpp	1;"	F
ScopeGuard	OBSApi/Utility/RAIIHelpers.h	/^    ScopeGuard(Fun fun) : fun(std::move(fun)), active(true) {}$/;"	f	struct:ScopeGuard
ScopeGuard	OBSApi/Utility/RAIIHelpers.h	/^    ScopeGuard(ScopeGuard &&o) : fun(std::move(o.fun)), active(o.active) { o.dismiss(); }$/;"	f	struct:ScopeGuard
ScopeGuard	OBSApi/Utility/RAIIHelpers.h	/^struct ScopeGuard$/;"	s
ScopedHandle	minhook/src/thread.cpp	/^		ScopedHandle(HANDLE handle)$/;"	f	class:MinHook::<anonymous>::ScopedHandle
ScopedHandle	minhook/src/thread.cpp	/^	class ScopedHandle$/;"	c	namespace:MinHook::<anonymous>	file:
ScopedLock	OBSApi/Utility/RAIIHelpers.h	/^    ScopedLock(HANDLE mutex, bool tryLock = false, bool autounlock = true) : locked(false), unlock(autounlock), h(mutex)$/;"	f	struct:ScopedLock
ScopedLock	OBSApi/Utility/RAIIHelpers.h	/^    ScopedLock(std::unique_ptr<void, MutexDeleter> const &mutex, bool tryLock = false, bool autounlock = true) : ScopedLock(mutex.get(), tryLock, autounlock)$/;"	f	struct:ScopedLock
ScopedLock	OBSApi/Utility/RAIIHelpers.h	/^struct ScopedLock$/;"	s
ScopedLock	minhook/src/thread.cpp	/^	CriticalSection::ScopedLock::ScopedLock(CriticalSection& cs)$/;"	f	class:MinHook::CriticalSection::ScopedLock
ScopedLock	minhook/src/thread.h	/^		class ScopedLock$/;"	c	class:MinHook::CriticalSection
ScopedThreadExclusive	minhook/src/thread.cpp	/^	ScopedThreadExclusive::ScopedThreadExclusive(const std::vector<uintptr_t>& oldIPs, const std::vector<uintptr_t>& newIPs)$/;"	f	class:MinHook::ScopedThreadExclusive
ScopedThreadExclusive	minhook/src/thread.h	/^	class ScopedThreadExclusive$/;"	c	namespace:MinHook
ScrollToFirstVisibleMessage	UpgradeLog.htm	/^/;"	f
SecondFieldOffset	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU32          SecondFieldOffset;$/;"	m
SecondsFlag	libmfx/include/msdk/include/mfxstructures.h	/^      mfxU16    SecondsFlag;$/;"	m
SecondsValue	libmfx/include/msdk/include/mfxstructures.h	/^      mfxU16    SecondsValue;$/;"	m
Sections	OBSApi/Utility/ConfigFile.h	/^    List<ConfigSection> Sections;$/;"	m	class:ConfigFile
Seek	OBSApi/Utility/Template.h	/^    UINT64 Seek(INT64 offset, DWORD seekType=SERIALIZE_SEEK_START)$/;"	f	class:BufferInputSerializer
Seek	OBSApi/Utility/Template.h	/^    UINT64 Seek(INT64 offset, DWORD seekType=SERIALIZE_SEEK_START)$/;"	f	class:BufferOutputSerializer
Seek	OBSApi/Utility/XFile.h	/^    UINT64 Seek(INT64 offset, DWORD seekType=SERIALIZE_SEEK_START)$/;"	f	class:XFileInputSerializer
Seek	OBSApi/Utility/XFile.h	/^    UINT64 Seek(INT64 offset, DWORD seekType=SERIALIZE_SEEK_START)$/;"	f	class:XFileOutputSerializer
Select	OBSApi/Scene.h	/^    inline void Select(bool bSelect)            {bSelected = bSelect;}$/;"	f	class:SceneItem
SelectDLLVersion	libmfx/src/mfx_library_iterator.cpp	/^mfxStatus MFXLibraryIterator::SelectDLLVersion(wchar_t *pPath$/;"	f	class:MFX::MFXLibraryIterator
SelectPresetDialog	Source/SettingsAdvanced.cpp	/^void SettingsAdvanced::SelectPresetDialog(bool useQSV, bool useNVENC)$/;"	f	class:SettingsAdvanced
SelectSavedParams	lame/ACM/AEncodeProperties.cpp	/^void AEncodeProperties::SelectSavedParams(const std::string the_string)$/;"	f	class:AEncodeProperties
SelectSources	Source/OBS.cpp	/^void OBS::SelectSources()$/;"	f	class:OBS
SelectTargetWindow	Source/DesktopImageSource.cpp	/^void SelectTargetWindow(HWND hwnd, bool bRefresh)$/;"	f
SemanticInfo	Source/D3D10ShaderProcessor.cpp	/^struct SemanticInfo$/;"	s	file:
SendBytesReceived	librtmp/rtmp.c	/^SendBytesReceived(RTMP *r)$/;"	f	file:
SendCheckBW	librtmp/rtmp.c	/^SendCheckBW(RTMP *r)$/;"	f	file:
SendCheckBWResult	librtmp/rtmp.c	/^SendCheckBWResult(RTMP *r, double txn)$/;"	f	file:
SendConnectPacket	librtmp/rtmp.c	/^SendConnectPacket(RTMP *r, RTMPPacket *cp)$/;"	f	file:
SendConnectResult	Source/RTMPStuff.cpp	/^int SendConnectResult(RTMP *r, double txn)$/;"	f
SendDeleteStream	librtmp/rtmp.c	/^SendDeleteStream(RTMP *r, double dStreamId)$/;"	f	file:
SendFCPublish	librtmp/rtmp.c	/^SendFCPublish(RTMP *r)$/;"	f	file:
SendFCSubscribe	librtmp/rtmp.c	/^SendFCSubscribe(RTMP *r, AVal *subscribepath)$/;"	f	file:
SendFCUnpublish	librtmp/rtmp.c	/^SendFCUnpublish(RTMP *r)$/;"	f	file:
SendFrame	Source/OBSVideoCapture.cpp	/^void OBS::SendFrame(VideoSegment &curSegment, QWORD firstFrameTime)$/;"	f	class:OBS
SendHttpPostResponse	Source/Server.cpp	/^DWORD SendHttpPostResponse($/;"	f
SendHttpResponse	Source/Server.cpp	/^DWORD SendHttpResponse($/;"	f
SendLoop	Source/RTMPPublisher.cpp	/^void RTMPPublisher::SendLoop()$/;"	f	class:RTMPPublisher
SendPacket	Source/BandwidthAnalysis.cpp	/^    void SendPacket(BYTE *data, UINT size, DWORD timestamp, PacketType type)$/;"	f	class:BandwidthAnalyzer
SendPacket	Source/DelayedPublisher.cpp	/^    void SendPacket(BYTE *data, UINT size, DWORD timestamp, PacketType type)$/;"	f	class:DelayedPublisher
SendPacket	Source/NullOutput.cpp	/^    virtual void SendPacket(BYTE *data, UINT size, DWORD timestamp, PacketType type) {bytesSent += size;framesRendered++;}$/;"	f	class:NullNetwork	file:
SendPacket	Source/RTMPPublisher.cpp	/^void RTMPPublisher::SendPacket(BYTE *data, UINT size, DWORD timestamp, PacketType type)$/;"	f	class:RTMPPublisher
SendPacketForReal	Source/RTMPPublisher.cpp	/^void RTMPPublisher::SendPacketForReal(BYTE *data, UINT size, DWORD timestamp, PacketType type)$/;"	f	class:RTMPPublisher
SendPlay	librtmp/rtmp.c	/^SendPlay(RTMP *r)$/;"	f	file:
SendPlayStart	Source/RTMPStuff.cpp	/^int SendPlayStart(RTMP *r)$/;"	f
SendPlayStop	Source/RTMPStuff.cpp	/^int SendPlayStop(RTMP *r)$/;"	f
SendPlaylist	librtmp/rtmp.c	/^SendPlaylist(RTMP *r)$/;"	f	file:
SendPong	librtmp/rtmp.c	/^SendPong(RTMP *r, double txn)$/;"	f	file:
SendPublish	librtmp/rtmp.c	/^SendPublish(RTMP *r)$/;"	f	file:
SendReleaseStream	librtmp/rtmp.c	/^SendReleaseStream(RTMP *r)$/;"	f	file:
SendResultNumber	Source/RTMPStuff.cpp	/^int SendResultNumber(RTMP *r, double txn, double ID)$/;"	f
SendSecureTokenResponse	librtmp/rtmp.c	/^SendSecureTokenResponse(RTMP *r, AVal *resp)$/;"	f	file:
SendThread	Source/RTMPPublisher.cpp	/^DWORD RTMPPublisher::SendThread(RTMPPublisher *publisher)$/;"	f	class:RTMPPublisher
SendUsherToken	librtmp/rtmp.c	/^SendUsherToken(RTMP *r, AVal *usherToken)$/;"	f	file:
Serialize	OBSApi/GraphicsSystem.h	/^    inline void Serialize(Serializer &s)$/;"	f	struct:VBData
Serialize	OBSApi/Utility/Template.h	/^    void Serialize(LPCVOID lpData, DWORD length)$/;"	f	class:BufferOutputSerializer
Serialize	OBSApi/Utility/Template.h	/^    void Serialize(LPVOID lpData, DWORD length)$/;"	f	class:BufferInputSerializer
Serialize	OBSApi/Utility/XFile.h	/^    void Serialize(LPCVOID lpData, DWORD length)$/;"	f	class:XFileInputSerializer
Serialize	OBSApi/Utility/XFile.h	/^    void Serialize(LPCVOID lpData, DWORD length)$/;"	f	class:XFileOutputSerializer
SerializeArray	OBSApi/Utility/XMath.h	/^    static inline Serializer& SerializeArray(Serializer &s, Vect *array, UINT num)$/;"	f	struct:Vect
SerializeList	OBSApi/Utility/XMath.h	/^    static inline Serializer& SerializeList(Serializer &s, List<Plane> &list)$/;"	f	struct:Plane
SerializeList	OBSApi/Utility/XMath.h	/^    static inline Serializer& SerializeList(Serializer &s, List<Vect> &list)$/;"	f	struct:Vect
SerializedSettings	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public class SerializedSettings$/;"	c	class:Shared.BrowserSettings
Serializer	OBSApi/Utility/Serializer.h	/^    Serializer()                        {}$/;"	f	class:Serializer
Serializer	OBSApi/Utility/Serializer.h	/^class BASE_EXPORT Serializer$/;"	c
Serializer.h	OBSApi/Utility/Serializer.h	1;"	F
SerifFontFamily	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public string SerifFontFamily { get; set; }$/;"	p	class:Shared.BrowserInstanceSettings
SeriousMemoryDebuggingAlloc	OBSApi/Utility/DebugAlloc.cpp	/^SeriousMemoryDebuggingAlloc::SeriousMemoryDebuggingAlloc()$/;"	f	class:SeriousMemoryDebuggingAlloc
SeriousMemoryDebuggingAlloc	OBSApi/Utility/DebugAlloc.h	/^class BASE_EXPORT SeriousMemoryDebuggingAlloc : public DefaultAlloc$/;"	c
Server.cpp	Source/Server.cpp	1;"	F
Server.h	Source/Server.h	1;"	F
Service.cpp	Source/Service.cpp	1;"	F
ServiceIdentifier	Source/OBS.h	/^    ServiceIdentifier(int id, String file) : id(id), file(file) {}$/;"	f	struct:ServiceIdentifier
ServiceIdentifier	Source/OBS.h	/^struct ServiceIdentifier$/;"	s
SessionConfig_t	lame/libmp3lame/util.h	/^    } SessionConfig_t;$/;"	t
Set	OBSApi/Utility/ComPtr.hpp	/^	inline void Set(T *p)              {Kill(); ptr = p;}$/;"	f	class:ComPtr
Set	OBSApi/Utility/Template.h	/^    inline void Set(unsigned int index)$/;"	f	class:BitList
Set	OBSApi/Utility/XMath.h	/^    Plane& Set(float a, float b, float c, float d)$/;"	f	struct:Plane
Set	OBSApi/Utility/XMath.h	/^    inline AxisAngle& Set(float a, float b, float c, float d) {x=a; y=b; z=c; w=d; return *this;}$/;"	f	struct:AxisAngle
Set	OBSApi/Utility/XMath.h	/^    inline Quat& Set(float a, float b, float c, float d) {m = _mm_setr_ps(a, b, c, d); return *this;}$/;"	f	struct:Quat
Set	OBSApi/Utility/XMath.h	/^    inline Quat& Set(float a, float b, float c, float d) {x=a; y=b; z=c; w=d; return *this;}$/;"	f	struct:Quat
Set	OBSApi/Utility/XMath.h	/^    inline Vect& Set(float a, float b)              {m = _mm_setr_ps(a, b, 0.0f, 0.0f); return *this;}$/;"	f	struct:Vect
Set	OBSApi/Utility/XMath.h	/^    inline Vect& Set(float a, float b) {x=a; y=b; z=0.0f; return *this;}$/;"	f	struct:Vect
Set	OBSApi/Utility/XMath.h	/^    inline Vect& Set(float a, float b, float c)     {m = _mm_setr_ps(a, b, c, 0.0f); return *this;}$/;"	f	struct:Vect
Set	OBSApi/Utility/XMath.h	/^    inline Vect& Set(float a, float b, float c) {x=a; y=b; z=c; return *this;}$/;"	f	struct:Vect
Set	OBSApi/Utility/XMath.h	/^    inline Vect2& Set(float a, float b)             {x=a; y=b; return *this;}$/;"	f	struct:Vect2
Set	OBSApi/Utility/XMath.h	/^    inline Vect4& Set(float a, float b) {x=a; y=b; z=0.0f; w=1.0f; return *this;}$/;"	f	struct:Vect4
Set	OBSApi/Utility/XMath.h	/^    inline Vect4& Set(float a, float b, float c) {x=a; y=b; z=c; w=1.0f; return *this;}$/;"	f	struct:Vect4
Set	OBSApi/Utility/XMath.h	/^    inline Vect4& Set(float a, float b, float c, float d) {x=a; y=b; z=c; w=d; return *this;}$/;"	f	struct:Vect4
Set	QSVHelper/ComPtr.hpp	/^	inline void Set(T *p)              {Kill(); ptr = p;}$/;"	f	class:ComPtr
SetAbortApplySettings	OBSApi/SettingsPane.cpp	/^void SettingsPane::SetAbortApplySettings(bool abort)$/;"	f	class:SettingsPane
SetAbortApplySettings	Source/API.cpp	/^    virtual void SetAbortApplySettings(bool abort) { App->SetAbortApplySettings(abort); }$/;"	f	class:OBSAPIInterface	file:
SetAbortApplySettings	Source/Settings.cpp	/^void OBS::SetAbortApplySettings(bool abort)$/;"	f	class:OBS
SetAbrOutputMode	lame/ACM/AEncodeProperties.h	/^	inline void SetAbrOutputMode(const bool bMode) { bAbrOutput = bMode; }$/;"	f	class:AEncodeProperties
SetAll	OBSApi/Utility/Template.h	/^    inline void SetAll()$/;"	f	class:BitList
SetApplicationMute	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/RenderProcess.cs	/^        public static void SetApplicationMute(int pid, bool mute)$/;"	m	class:Browser.VolumeMixer
SetApplicationVolume	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/RenderProcess.cs	/^        public static void SetApplicationVolume(int pid, float level)$/;"	m	class:Browser.VolumeMixer
SetAttribute	lame/ACM/tinyxml/tinyxml.cpp	/^void TiXmlElement::SetAttribute( const std::string& name, const std::string& value )$/;"	f	class:TiXmlElement
SetAttribute	lame/ACM/tinyxml/tinyxml.cpp	/^void TiXmlElement::SetAttribute( const std::string& name, int val )$/;"	f	class:TiXmlElement
SetAttributeBool	lame/ACM/AEncodeProperties.cpp	/^inline void AEncodeProperties::SetAttributeBool(TiXmlElement * the_elt,const std::string & the_string, const bool the_value) const$/;"	f	class:AEncodeProperties
SetAudioInfo	DShowPlugin/DeviceSource.cpp	/^void DeviceSource::SetAudioInfo(AM_MEDIA_TYPE *audioMediaType, GUID &expectedAudioType)$/;"	f	class:DeviceSource
SetAudioOffset	DShowPlugin/DeviceSource.h	/^    inline void SetAudioOffset(int offset) {this->offset = offset; SetTimeOffset(offset);}$/;"	f	class:DeviceAudioSource
SetBackgroundColor	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *SetBackgroundColor )( $/;"	m	struct:IDXGISwapChain1Vtbl
SetBaseSize	OBSApi/Utility/Template.h	/^    inline void SetBaseSize(unsigned int newSize)$/;"	f	class:CircularList
SetBitRate	ObsNvenc/src/NVENCEncoder.cpp	/^bool NVENCEncoder::SetBitRate(DWORD maxBitrate, DWORD bufferSize)$/;"	f	class:NVENCEncoder
SetBitRate	Source/Encoder_QSV.cpp	/^    virtual bool SetBitRate(DWORD maxBitrate, DWORD bufferSize)$/;"	f	class:QSVEncoder
SetBitRate	Source/Encoder_x264.cpp	/^    virtual bool SetBitRate(DWORD maxBitrate, DWORD bufferSize)$/;"	f	class:X264Encoder
SetBitRate	Source/NullOutput.cpp	/^    virtual bool SetBitRate(DWORD maxBitrate, DWORD bufferSize) {return false;}$/;"	f	class:NullVideoEncoder
SetBitRateParams	Source/Encoder_x264.cpp	/^    inline void SetBitRateParams(DWORD maxBitrate, DWORD bufferSize)$/;"	f	class:X264Encoder	file:
SetBool	Source/D3D10Shader.cpp	/^void   D3D10Shader::SetBool(HANDLE hObject, BOOL bValue)$/;"	f	class:D3D10Shader
SetBufferAllocator	libmfx/include/msdk/include/mfxvideo++.h	/^    virtual mfxStatus SetBufferAllocator(mfxBufferAllocator *allocator) { return MFXVideoCORE_SetBufferAllocator(m_session, allocator); }$/;"	f	class:MFXVideoSession
SetCRCMode	lame/ACM/AEncodeProperties.h	/^	inline void SetCRCMode(const bool bMode) { bCRC = bMode; }$/;"	f	class:AEncodeProperties
SetCanOptimizeSettings	OBSApi/SettingsPane.cpp	/^void SettingsPane::SetCanOptimizeSettings(bool canOptimize)$/;"	f	class:SettingsPane
SetCanOptimizeSettings	Source/Settings.cpp	/^void OBS::SetCanOptimizeSettings(bool canOptimize)$/;"	f	class:OBS
SetChangedSettings	CLRHostPlugin/CLRHostInterop/API.cpp	/^void API::SetChangedSettings(bool isChanged)$/;"	f	class:API
SetChangedSettings	OBSApi/SettingsPane.cpp	/^void SettingsPane::SetChangedSettings(bool isModified)$/;"	f	class:SettingsPane
SetChangedSettings	Source/API.cpp	/^    virtual void SetChangedSettings(bool isModified) {App->SetChangedSettings(isModified);}$/;"	f	class:OBSAPIInterface	file:
SetChangedSettings	Source/Settings.cpp	/^void OBS::SetChangedSettings(bool bChanged)$/;"	f	class:OBS
SetCodeStart	Source/CodeTokenizer.h	/^    inline void SetCodeStart(CTSTR lpCodeIn)$/;"	f	struct:CodeTokenizer
SetCodingOptionSPSPPS	QSVHelper/QSVStuff.cpp	/^void Parameters::SetCodingOptionSPSPPS(mfxU8 *sps_buff, mfxU16 sps_size, mfxU8 *pps_buff, mfxU16 pps_size)$/;"	f	class:Parameters
SetColor	OBSApi/GraphicsSystem.h	/^    inline  void   SetColor(HANDLE hObject, DWORD color)$/;"	f	class:Shader
SetColor	OBSApi/GraphicsSystem.h	/^    inline  void   SetColor(HANDLE hObject, const Color4 &value)$/;"	f	class:Shader
SetColor	OBSApi/GraphicsSystem.h	/^    inline  void   SetColor(HANDLE hObject, float fR, float fB, float fG, float fA=1.0f)$/;"	f	class:Shader
SetColor	OBSApi/Scene.h	/^    inline  void SetColor(CTSTR lpName, DWORD color)                                {SetVector4(lpName, RGBA_to_Vect4(color));}$/;"	f	class:ImageSource
SetColor	OBSApi/Scene.h	/^    inline  void SetColor(CTSTR lpName, const Color4 &value)                        {SetVector4(lpName, value);}$/;"	f	class:ImageSource
SetColor	OBSApi/Scene.h	/^    inline  void SetColor(CTSTR lpName, float fR, float fB, float fG, float fA=1.0f){SetVector4(lpName, Color4(fR, fB, fG, fA));}$/;"	f	class:ImageSource
SetColor	OBSApi/Utility/ConfigFile.cpp	/^void ConfigFile::SetColor(CTSTR lpSection, CTSTR lpKey, const Color4 &color)$/;"	f	class:ConfigFile
SetColor	OBSApi/Utility/XConfig.h	/^    inline void SetColor(CTSTR lpName, DWORD color)$/;"	f	class:XElement
SetColor3	OBSApi/GraphicsSystem.h	/^    inline  void   SetColor3(HANDLE hObject, DWORD color)$/;"	f	class:Shader
SetColor3	OBSApi/GraphicsSystem.h	/^    inline  void   SetColor3(HANDLE hObject, const Color3 &value)$/;"	f	class:Shader
SetColor3	OBSApi/GraphicsSystem.h	/^    inline  void   SetColor3(HANDLE hObject, float fR, float fB, float fG)$/;"	f	class:Shader
SetColor3	OBSApi/Scene.h	/^    inline  void SetColor3(CTSTR lpName, DWORD color)                               {SetVector(lpName, RGB_to_Vect(color));}$/;"	f	class:ImageSource
SetColor3	OBSApi/Scene.h	/^    inline  void SetColor3(CTSTR lpName, const Color3 &value)                       {SetVector(lpName, value);}$/;"	f	class:ImageSource
SetColor3	OBSApi/Scene.h	/^    inline  void SetColor3(CTSTR lpName, float fR, float fB, float fG)              {SetVector(lpName, Color3(fR, fB, fG));}$/;"	f	class:ImageSource
SetColor3	OBSApi/Utility/ConfigFile.h	/^    inline void SetColor3(CTSTR lpSection, CTSTR lpKey, const Color3 &color)$/;"	f	class:ConfigFile
SetColorList	OBSApi/Utility/ConfigFile.cpp	/^void ConfigFile::SetColorList(CTSTR lpSection, CTSTR lpKey, List<Color4> &ColorList)$/;"	f	class:ConfigFile
SetColorList	OBSApi/Utility/XConfig.h	/^    inline void SetColorList(CTSTR lpName, List<DWORD> &ColorList)$/;"	f	class:XElement
SetCondenseWhiteSpace	lame/ACM/tinyxml/tinyxml.h	/^	static void SetCondenseWhiteSpace( bool condense )		{ condenseWhiteSpace = condense; }$/;"	f	class:TiXmlBase
SetCopyrightMode	lame/ACM/AEncodeProperties.h	/^	inline void SetCopyrightMode(const bool bMode) { bCopyright = bMode; }$/;"	f	class:AEncodeProperties
SetCropping	Source/D3D10System.cpp	/^void D3D10System::SetCropping(float left, float top, float right, float bottom)$/;"	f	class:D3D10System
SetData	OBSApi/Utility/XConfig.h	/^    inline void  SetData(CTSTR lpData)  {strData = lpData;}$/;"	f	class:XDataItem
SetDefaultOutputType	lame/dshow/Encoder.cpp	/^HRESULT CEncoder::SetDefaultOutputType(LPWAVEFORMATEX lpwfex)$/;"	f	class:CEncoder
SetDefaults	CLRBrowserSourcePlugin/Plugin/BrowserSettingsPane.cs	/^        public override void SetDefaults()$/;"	m	class:CLRBrowserSourcePlugin.BrowserSettingsPane
SetDefaults	CLRHostPlugin/CLRCSharpSamplePlugin/SampleSettingsPane.cs	/^        public override void SetDefaults()$/;"	m	class:CSharpSamplePlugin.SampleSettingsPane
SetDefaults	CLRHostPlugin/CLRHostPlugin/CLRSettingsPane.cpp	/^void CLRSettingsPane::SetDefaults()$/;"	f	class:CLRSettingsPane
SetDefaults	CLRHostPlugin/CLRHostPlugin/SettingsPaneBridge.h	/^    virtual void SetDefaults()$/;"	f	class:SettingsPaneBridge
SetDefaults	NoiseGate/NoiseGate.cpp	/^void NoiseGateSettings::SetDefaults()$/;"	f	class:NoiseGateSettings
SetDefaults	OBSApi/SettingsPane.cpp	/^void SettingsPane::SetDefaults()$/;"	f	class:SettingsPane
SetDefaults	Source/SettingsAdvanced.cpp	/^void SettingsAdvanced::SetDefaults()$/;"	f	class:SettingsAdvanced
SetDesktopCaptureType	Source/DesktopImageSource.cpp	/^void SetDesktopCaptureType(HWND hwnd, UINT type)$/;"	f
SetDesktopVolume	Source/API.cpp	/^    virtual void SetDesktopVolume(float val, bool finalValue)        {App->SetDesktopVolume(val, finalValue);}$/;"	f	class:OBSAPIInterface
SetDesktopVolume	Source/API.cpp	/^void OBS::SetDesktopVolume(float val, bool finalValue)$/;"	f	class:OBS
SetDirty	lame/dshow/PropPage.cpp	/^void CMpegAudEncPropertyPage::SetDirty()$/;"	f	class:CMpegAudEncPropertyPage
SetDirty	lame/dshow/PropPage_adv.cpp	/^void CMpegAudEncPropertyPageAdv::SetDirty()$/;"	f	class:CMpegAudEncPropertyPageAdv
SetDirty	lame/dshow/aboutprp.cpp	/^void CMAEAbout::SetDirty()$/;"	f	class:CMAEAbout
SetDisplayName	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/RenderProcess.cs	/^        int SetDisplayName([MarshalAs(UnmanagedType.LPWStr)]string Value, [MarshalAs(UnmanagedType.LPStruct)] Guid EventContext);$/;"	m	interface:Browser.IAudioSessionControl2
SetDisplaySurface	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *SetDisplaySurface )( $/;"	m	struct:IDXGIOutput1Vtbl
SetDocument	lame/ACM/tinyxml/tinyxml.h	/^	void SetDocument( TiXmlDocument* doc )	{ document = doc; }$/;"	f	class:TiXmlAttribute
SetDoubleValue	lame/ACM/tinyxml/tinyxml.cpp	/^void TiXmlAttribute::SetDoubleValue( double value )$/;"	f	class:TiXmlAttribute
SetDuckingPreference	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/RenderProcess.cs	/^        int SetDuckingPreference(bool optOut);$/;"	m	interface:Browser.IAudioSessionControl2
SetError	lame/ACM/tinyxml/tinyxml.h	/^	void SetError( int err ) {		assert( err > 0 && err < TIXML_ERROR_STRING_COUNT );$/;"	f	class:TiXmlDocument
SetEvictionPriority	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *SetEvictionPriority )( $/;"	m	struct:IDXGIResource1Vtbl
SetFilePath	OBSApi/Utility/ConfigFile.cpp	/^void ConfigFile::SetFilePath(CTSTR lpPath)$/;"	f	class:ConfigFile
SetFileSize	OBSApi/Utility/XFile_Windows.cpp	/^BOOL XFile::SetFileSize(DWORD dwSize)$/;"	f	class:XFile
SetFloat	DShowPlugin/DeviceSource.cpp	/^void DeviceSource::SetFloat(CTSTR lpName, float fValue)$/;"	f	class:DeviceSource
SetFloat	OBSApi/Scene.h	/^    virtual void SetFloat(CTSTR lpName, float fValue) {}$/;"	f	class:ImageSource
SetFloat	OBSApi/Utility/ConfigFile.cpp	/^void ConfigFile::SetFloat(CTSTR lpSection, CTSTR lpKey, float number)$/;"	f	class:ConfigFile
SetFloat	OBSApi/Utility/XConfig.cpp	/^void  XElement::SetFloat(CTSTR lpName, float number)$/;"	f	class:XElement
SetFloat	Source/D3D10Shader.cpp	/^void   D3D10Shader::SetFloat(HANDLE hObject, float fValue)$/;"	f	class:D3D10Shader
SetFloat	Source/GlobalSource.cpp	/^    virtual void SetFloat(CTSTR lpName, float fValue)         {if (globalSource) globalSource->SetFloat  (lpName, fValue);}$/;"	f	class:GlobalSource
SetFloat	Source/TextOutputSource.cpp	/^    void SetFloat(CTSTR lpName, float fValue)$/;"	f	class:TextOutputSource
SetFloatList	OBSApi/Utility/ConfigFile.cpp	/^void ConfigFile::SetFloatList(CTSTR lpSection, CTSTR lpKey, List<float> &FloatList)$/;"	f	class:ConfigFile
SetFloatList	OBSApi/Utility/XConfig.cpp	/^void  XElement::SetFloatList(CTSTR lpName, List<float> &FloatList)$/;"	f	class:XElement
SetForceChannelMode	lame/ACM/AEncodeProperties.h	/^	inline void SetForceChannelMode(const bool bMode) { bForceChannel = bMode; }$/;"	f	class:AEncodeProperties
SetFormat	lame/dshow/Mpegac.cpp	/^HRESULT STDMETHODCALLTYPE CMpegAudEncOutPin::SetFormat(AM_MEDIA_TYPE *pmt)$/;"	f	class:CMpegAudEncOutPin
SetFrameAllocator	libmfx/include/msdk/include/mfxvideo++.h	/^    virtual mfxStatus SetFrameAllocator(mfxFrameAllocator *allocator) { return MFXVideoCORE_SetFrameAllocator(m_session, allocator); }$/;"	f	class:MFXVideoSession
SetFullscreenMode	Source/OBS.cpp	/^void OBS::SetFullscreenMode(bool fullscreen)$/;"	f	class:OBS
SetFullscreenState	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *SetFullscreenState )( $/;"	m	struct:IDXGISwapChain1Vtbl
SetGPUThreadPriority	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *SetGPUThreadPriority )( $/;"	m	struct:IDXGIDevice2Vtbl
SetGammaControl	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *SetGammaControl )( $/;"	m	struct:IDXGIOutput1Vtbl
SetGroupingParam	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/RenderProcess.cs	/^        int SetGroupingParam([MarshalAs(UnmanagedType.LPStruct)] Guid Override, [MarshalAs(UnmanagedType.LPStruct)] Guid EventContext);$/;"	m	interface:Browser.IAudioSessionControl2
SetHandle	QSVHelper/IntelSupport/src/d3d11_device.cpp	/^mfxStatus CD3D11Device::SetHandle(mfxHandleType \/*type*\/, mfxHDL \/*hdl*\/)$/;"	f	class:CD3D11Device
SetHandle	libmfx/include/msdk/include/mfxvideo++.h	/^    virtual mfxStatus SetHandle(mfxHandleType type, mfxHDL hdl) { return MFXVideoCORE_SetHandle(m_session, type, hdl); }$/;"	f	class:MFXVideoSession
SetHex	OBSApi/Utility/ConfigFile.cpp	/^void ConfigFile::SetHex(CTSTR lpSection, CTSTR lpKey, DWORD number)$/;"	f	class:ConfigFile
SetHex	OBSApi/Utility/XConfig.cpp	/^void  XElement::SetHex(CTSTR lpName, DWORD hex)$/;"	f	class:XElement
SetHexList	OBSApi/Utility/XConfig.cpp	/^void  XElement::SetHexList(CTSTR lpName, List<DWORD> &HexList)$/;"	f	class:XElement
SetIconPath	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/RenderProcess.cs	/^        int SetIconPath([MarshalAs(UnmanagedType.LPWStr)] string Value, [MarshalAs(UnmanagedType.LPStruct)] Guid EventContext);$/;"	m	interface:Browser.IAudioSessionControl2
SetIdentity	OBSApi/Utility/XMath.h	/^    inline Matrix& SetIdentity()$/;"	f	struct:Matrix
SetIdentity	OBSApi/Utility/XMath.h	/^    inline Quat& SetIdentity()                      {m = _mm_setr_ps(0.0f, 0.0f, 0.0f, 1.0f); return *this;}$/;"	f	struct:Quat
SetIdentity	OBSApi/Utility/XMath.h	/^    inline Quat& SetIdentity()                      {x=0.0f; y=0.0f; z=0.0f; w=1.0f; return *this;}$/;"	f	struct:Quat
SetImage	CLRHostPlugin/CLRHostInterop/GraphicsSystem.cpp	/^void CLROBS::Texture::SetImage(System::IntPtr data, GSImageFormat imageFormat, unsigned int pitch)$/;"	f	class:CLROBS::Texture
SetImage	Source/D3D10Texture.cpp	/^void D3D10Texture::SetImage(void *lpData, GSImageFormat imageFormat, UINT pitch)$/;"	f	class:D3D10Texture
SetInputType	lame/dshow/Encoder.cpp	/^HRESULT CEncoder::SetInputType(LPWAVEFORMATEX lpwfex, bool bJustCheck)$/;"	f	class:CEncoder
SetInt	DShowPlugin/DeviceSource.cpp	/^void DeviceSource::SetInt(CTSTR lpName, int iVal)$/;"	f	class:DeviceSource
SetInt	GraphicsCapture/GraphicsCaptureSource.cpp	/^void GraphicsCaptureSource::SetInt(CTSTR lpName, int iVal)$/;"	f	class:GraphicsCaptureSource
SetInt	OBSApi/Scene.h	/^    virtual void SetInt(CTSTR lpName, int iValue) {}$/;"	f	class:ImageSource
SetInt	OBSApi/Utility/ConfigFile.cpp	/^void ConfigFile::SetInt(CTSTR lpSection, CTSTR lpKey, int number)$/;"	f	class:ConfigFile
SetInt	OBSApi/Utility/XConfig.cpp	/^void  XElement::SetInt(CTSTR lpName, int number)$/;"	f	class:XElement
SetInt	Source/D3D10Shader.cpp	/^void   D3D10Shader::SetInt(HANDLE hObject, int iValue)$/;"	f	class:D3D10Shader
SetInt	Source/DesktopImageSource.cpp	/^    void SetInt(CTSTR lpName, int iVal)$/;"	f	class:DesktopImageSource
SetInt	Source/GlobalSource.cpp	/^    virtual void SetInt(CTSTR lpName, int iValue)             {if (globalSource) globalSource->SetInt    (lpName, iValue);}$/;"	f	class:GlobalSource
SetInt	Source/TextOutputSource.cpp	/^    void SetInt(CTSTR lpName, int iValue)$/;"	f	class:TextOutputSource
SetIntList	OBSApi/Utility/ConfigFile.cpp	/^void ConfigFile::SetIntList(CTSTR lpSection, CTSTR lpKey, List<int> &IntList)$/;"	f	class:ConfigFile
SetIntList	OBSApi/Utility/XConfig.cpp	/^void  XElement::SetIntList(CTSTR lpName, List<int> &IntList)$/;"	f	class:XElement
SetIntValue	lame/ACM/tinyxml/tinyxml.cpp	/^void TiXmlAttribute::SetIntValue( int value )$/;"	f	class:TiXmlAttribute
SetJccOpcode	minhook/src/trampoline.cpp	/^	inline void SetJccOpcode(const hde_t& hs, JCC_ABS& inst)$/;"	f	namespace:MinHook::<anonymous>
SetJccOpcode	minhook/src/trampoline.cpp	/^	inline void SetJccOpcode(const hde_t& hs, JCC_REL& inst)$/;"	f	namespace:MinHook::<anonymous>
SetKey	OBSApi/Utility/ConfigFile.cpp	/^void  ConfigFile::SetKey(CTSTR lpSection, CTSTR lpKey, CTSTR newvalue)$/;"	f	class:ConfigFile
SetLength	OBSApi/Utility/XString.cpp	/^String& String::SetLength(UINT length)$/;"	f	class:String
SetLookDirection	OBSApi/Utility/XMath.cpp	/^Quat& Quat::SetLookDirection(const Vect &dir)$/;"	f	class:Quat
SetMasterVolume	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/RenderProcess.cs	/^        int SetMasterVolume(float fLevel, ref Guid EventContext);$/;"	m	interface:Browser.ISimpleAudioVolume
SetMatrix	OBSApi/GraphicsSystem.h	/^    inline void SetMatrix(HANDLE hObject, const Matrix &mat)$/;"	f	class:Shader
SetMatrix	OBSApi/Scene.h	/^    virtual void SetMatrix(CTSTR lpName, const Matrix &mat) {}$/;"	f	class:ImageSource
SetMatrix	Source/D3D10Shader.cpp	/^void   D3D10Shader::SetMatrix(HANDLE hObject, float *matrix)$/;"	f	class:D3D10Shader
SetMatrix	Source/GlobalSource.cpp	/^    virtual void SetMatrix(CTSTR lpName, const Matrix &mat)   {if (globalSource) globalSource->SetMatrix (lpName, mat);}$/;"	f	class:GlobalSource
SetMatrixIdentity	OBSApi/GraphicsSystem.h	/^    inline void SetMatrixIdentity(HANDLE hObject)$/;"	f	class:Shader
SetMaximumFrameLatency	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *SetMaximumFrameLatency )( $/;"	m	struct:IDXGIDevice2Vtbl
SetMediaType	lame/dshow/Mpegac.cpp	/^HRESULT CMpegAudEnc::SetMediaType(PIN_DIRECTION direction, const CMediaType * pmt)$/;"	f	class:CMpegAudEnc
SetMediaType	lame/dshow/Mpegac.cpp	/^HRESULT CMpegAudEncOutPin::SetMediaType(const CMediaType *pmt)$/;"	f	class:CMpegAudEncOutPin
SetMemory	libfaac/util.h	46;"	d
SetMemoryBreakID	OBSApi/Utility/DebugAlloc.cpp	/^void SetMemoryBreakID(int id)$/;"	f
SetMicVolume	Source/API.cpp	/^    virtual void SetMicVolume(float val, bool finalValue)            {App->SetMicVolume(val, finalValue);}$/;"	f	class:OBSAPIInterface
SetMicVolume	Source/API.cpp	/^void OBS::SetMicVolume(float val, bool finalValue)$/;"	f	class:OBS
SetMute	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/RenderProcess.cs	/^        int SetMute(bool bMute, ref Guid EventContext);$/;"	m	interface:Browser.ISimpleAudioVolume
SetName	OBSApi/Scene.cpp	/^void SceneItem::SetName(CTSTR lpNewName)$/;"	f	class:SceneItem
SetName	OBSApi/Utility/XConfig.h	/^    inline void  SetName(CTSTR lpName)  {strName = lpName;}$/;"	f	class:XBaseItem
SetName	lame/ACM/tinyxml/tinyxml.h	/^	void SetName( const std::string& _name )	{ name = _name; }		\/\/\/< Set the name of this attribute.$/;"	f	class:TiXmlAttribute
SetNoBiResMode	lame/ACM/AEncodeProperties.h	/^	inline void SetNoBiResMode(const bool bMode) { bNoBitRes = bMode; }$/;"	f	class:AEncodeProperties
SetNotificationAreaIcon	Source/OBS.cpp	/^BOOL OBS::SetNotificationAreaIcon(DWORD dwMessage, int idIcon, const String &tooltip)$/;"	f	class:OBS
SetOriginalMode	lame/ACM/AEncodeProperties.h	/^	inline void SetOriginalMode(const bool bMode) { bOriginal = bMode; }$/;"	f	class:AEncodeProperties
SetOutputType	lame/dshow/Encoder.cpp	/^HRESULT CEncoder::SetOutputType(MPEG_ENCODER_CONFIG &mabsi)$/;"	f	class:CEncoder
SetPES	lame/dshow/Encoder.h	/^    void SetPES(bool bPES)$/;"	f	class:CEncoder
SetPalette	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	/^HRESULT STDMETHODCALLTYPE SetPalette(LPDIRECTDRAWSURFACE7 surface, LPDIRECTDRAWPALETTE lpDDPalette)$/;"	f
SetParallelCallCount	OBSApi/Utility/Profiler.cpp	/^void ProfilerNode::SetParallelCallCount(DWORD num)$/;"	f	class:ProfilerNode
SetPath	Source/BitmapImage.cpp	/^void BitmapImage::SetPath(String path)$/;"	f	class:BitmapImage
SetPos	OBSApi/Scene.h	/^    inline void SetPos(const Vect2 &newPos)     {pos = newPos;}$/;"	f	class:SceneItem
SetPos	OBSApi/Utility/XFile_Windows.cpp	/^UINT64 XFile::SetPos(INT64 iPos, DWORD dwMoveMethod)  \/\/uses the SetFilePointer 4th parameter flags$/;"	f	class:XFile
SetPriority	libmfx/include/msdk/include/mfxaudio++.h	/^    virtual mfxStatus SetPriority( mfxPriority priority) { return MFXSetPriority(m_session, priority);}$/;"	f	class:MFXAudioSession
SetPriority	libmfx/include/msdk/include/mfxvideo++.h	/^    virtual mfxStatus SetPriority( mfxPriority priority) { return MFXSetPriority(m_session, priority);}$/;"	f	class:MFXVideoSession
SetPriorityClassMacro	lame/frontend/main.c	/^SetPriorityClassMacro(DWORD p)$/;"	f
SetPrivateData	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( $/;"	m	struct:IDXGIAdapter2Vtbl
SetPrivateData	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( $/;"	m	struct:IDXGIDevice2Vtbl
SetPrivateData	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( $/;"	m	struct:IDXGIFactory2Vtbl
SetPrivateData	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( $/;"	m	struct:IDXGIOutput1Vtbl
SetPrivateData	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( $/;"	m	struct:IDXGIOutputDuplicationVtbl
SetPrivateData	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( $/;"	m	struct:IDXGIResource1Vtbl
SetPrivateData	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( $/;"	m	struct:IDXGISurface2Vtbl
SetPrivateData	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *SetPrivateData )( $/;"	m	struct:IDXGISwapChain1Vtbl
SetPrivateDataInterface	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( $/;"	m	struct:IDXGIAdapter2Vtbl
SetPrivateDataInterface	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( $/;"	m	struct:IDXGIDevice2Vtbl
SetPrivateDataInterface	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( $/;"	m	struct:IDXGIFactory2Vtbl
SetPrivateDataInterface	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( $/;"	m	struct:IDXGIOutput1Vtbl
SetPrivateDataInterface	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( $/;"	m	struct:IDXGIOutputDuplicationVtbl
SetPrivateDataInterface	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( $/;"	m	struct:IDXGIResource1Vtbl
SetPrivateDataInterface	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( $/;"	m	struct:IDXGISurface2Vtbl
SetPrivateDataInterface	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *SetPrivateDataInterface )( $/;"	m	struct:IDXGISwapChain1Vtbl
SetPrivateMode	lame/ACM/AEncodeProperties.h	/^	inline void SetPrivateMode(const bool bMode) { bPrivate = bMode; }$/;"	f	class:AEncodeProperties
SetRecording	Source/ReplayBuffer.cpp	/^    static void SetRecording(bool recording)$/;"	f	struct:ReplayBuffer
SetRender	OBSApi/Scene.cpp	/^void SceneItem::SetRender(bool render)$/;"	f	class:SceneItem
SetRenderTarget	OBSApi/GraphicsSystem.h	/^inline void  SetRenderTarget(Texture *texture) {GS->SetRenderTarget(texture);}$/;"	f
SetRenderTarget	Source/D3D10System.cpp	/^void D3D10System::SetRenderTarget(Texture *texture)$/;"	f	class:D3D10System
SetRotation	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *SetRotation )( $/;"	m	struct:IDXGISwapChain1Vtbl
SetScene	Source/API.cpp	/^    virtual bool SetScene(CTSTR lpScene, bool bPost)$/;"	f	class:OBSAPIInterface
SetScene	Source/API.cpp	/^bool OBS::SetScene(CTSTR lpScene)$/;"	f	class:OBS
SetSceneCollection	Source/API.cpp	/^    virtual bool SetSceneCollection(CTSTR lpCollection, CTSTR lpScene)$/;"	f	class:OBSAPIInterface
SetSceneCollection	Source/API.cpp	/^bool OBS::SetSceneCollection(CTSTR lpCollection) {$/;"	f	class:OBS
SetScissorRect	OBSApi/GraphicsSystem.h	/^inline void  SetScissorRect(XRect *pRect=NULL)                        {GS->SetScissorRect(pRect);}$/;"	f
SetScissorRect	Source/D3D10System.cpp	/^void D3D10System::SetScissorRect(XRect *pRect)$/;"	f	class:D3D10System
SetSink	libmfx/src/mfx_dispatcher_log.cpp	/^void   DispatchLog::SetSink(int nSink, IMsgHandler * pHandler)$/;"	f	class:DispatchLog
SetSize	OBSApi/Scene.h	/^    inline void SetSize(const Vect2 &newSize)   {size = newSize;}$/;"	f	class:SceneItem
SetSize	OBSApi/Utility/Template.h	/^    inline BOOL SetSize(unsigned int n)$/;"	f	class:List
SetSize	OBSApi/Utility/Template.h	/^    inline void SetSize(int size)$/;"	f	class:BitList
SetSize	OBSApi/Utility/XString.h	/^    inline BOOL SetSize(unsigned int n)$/;"	f	class:StringList
SetSize	OBSApi/Utility/XTLocalization.h	/^    inline void SetSize(UINT newSize)$/;"	f	struct:LocaleStringCache
SetSkipMode	libmfx/include/msdk/include/mfxvideo++.h	/^    virtual mfxStatus SetSkipMode(mfxSkipMode mode) { return MFXVideoDECODE_SetSkipMode(m_session, mode); }$/;"	f	class:MFXVideoDECODE
SetSliderText	DShowPlugin/DShowPlugin.cpp	/^int SetSliderText(HWND hwndParent, int controlSlider, int controlText)$/;"	f
SetSliderText	GraphicsCapture/GraphicsCapture.cpp	/^int SetSliderText(HWND hwndParent, int controlSlider, int controlText)$/;"	f
SetSliderText	Source/WindowStuff.cpp	/^int SetSliderText(HWND hwndParent, int controlSlider, int controlText)$/;"	f
SetSmartOutputMode	lame/ACM/AEncodeProperties.h	/^	inline void SetSmartOutputMode(const bool bMode) { bSmartOutput = bMode; }$/;"	f	class:AEncodeProperties
SetSockError	librtmp/rtmp_sys.h	52;"	d
SetSockError	librtmp/rtmp_sys.h	71;"	d
SetSourceOrder	Source/API.cpp	/^    virtual void SetSourceOrder(StringList &sourceNames)$/;"	f	class:OBSAPIInterface
SetSourceOrder	Source/WindowStuff.cpp	/^void OBS::SetSourceOrder(StringList &sourceNames)$/;"	f	class:OBS
SetSourceRender	Source/API.cpp	/^    virtual void SetSourceRender(CTSTR lpSource, bool render)$/;"	f	class:OBSAPIInterface
SetSourceRender	Source/OBS.cpp	/^void OBS::SetSourceRender(CTSTR sourceName, bool render)$/;"	f	class:OBS
SetStatusBarData	Source/OBS.cpp	/^void OBS::SetStatusBarData()$/;"	f	class:OBS
SetStereoEnabled	extras/dxgi1_2.h	/^        void ( STDMETHODCALLTYPE *SetStereoEnabled )( $/;"	m	struct:IDXGIDisplayControlVtbl
SetStreamInfo	Source/API.cpp	/^    virtual void SetStreamInfo(UINT infoID, CTSTR lpInfo)                           {App->SetStreamInfo(infoID, lpInfo);}$/;"	f	class:OBSAPIInterface
SetStreamInfo	Source/API.cpp	/^void OBS::SetStreamInfo(UINT infoID, CTSTR lpInfo)$/;"	f	class:OBS
SetStreamInfoPriority	Source/API.cpp	/^    virtual void SetStreamInfoPriority(UINT infoID, StreamInfoPriority priority)    {App->SetStreamInfoPriority(infoID, priority);}$/;"	f	class:OBSAPIInterface
SetStreamInfoPriority	Source/API.cpp	/^void OBS::SetStreamInfoPriority(UINT infoID, StreamInfoPriority priority)$/;"	f	class:OBS
SetStreamReport	Source/OBS.h	/^    inline void SetStreamReport(CTSTR lpStreamReport) {streamReport = lpStreamReport;}$/;"	f	class:OBS
SetString	OBSApi/Scene.h	/^    virtual void SetString(CTSTR lpName, CTSTR lpVal) {}$/;"	f	class:ImageSource
SetString	OBSApi/Utility/ConfigFile.cpp	/^void ConfigFile::SetString(CTSTR lpSection, CTSTR lpKey, CTSTR lpString)$/;"	f	class:ConfigFile
SetString	OBSApi/Utility/XConfig.cpp	/^void  XElement::SetString(CTSTR lpName, CTSTR lpString)$/;"	f	class:XElement
SetString	Source/GlobalSource.cpp	/^    virtual void SetString(CTSTR lpName, CTSTR lpVal)         {if (globalSource) globalSource->SetString (lpName, lpVal);}$/;"	f	class:GlobalSource
SetString	Source/TextOutputSource.cpp	/^    void SetString(CTSTR lpName, CTSTR lpVal)$/;"	f	class:TextOutputSource
SetStringFormat	Source/TextOutputSource.cpp	/^    void SetStringFormat(Gdiplus::StringFormat &format)$/;"	f	class:TextOutputSource	file:
SetStringList	OBSApi/Utility/ConfigFile.cpp	/^void ConfigFile::SetStringList(CTSTR lpSection, CTSTR lpKey, StringList &StrList)$/;"	f	class:ConfigFile
SetStringList	OBSApi/Utility/XConfig.cpp	/^void  XElement::SetStringList(CTSTR lpName, List<TSTR> &stringList)$/;"	f	class:XElement
SetStringList	OBSApi/Utility/XConfig.cpp	/^void  XElement::SetStringList(CTSTR lpName, StringList &stringList)$/;"	f	class:XElement
SetSyncSource	DShowPlugin/CaptureFilter.cpp	/^STDMETHODIMP CaptureFilter::SetSyncSource(IReferenceClock *pClock)         {return S_OK;}$/;"	f	class:CaptureFilter
SetTabVisibility	CLRBrowserSourcePlugin/Plugin/ConfigDialog.xaml.cs	/^        private void SetTabVisibility(TabItem tabItem, bool isVisible)$/;"	m	class:CLRBrowserSourcePlugin.ConfigDialog	file:
SetTexture	Source/D3D10Shader.cpp	/^void   D3D10Shader::SetTexture(HANDLE hObject, BaseTexture *texture)$/;"	f	class:D3D10Shader
SetTimeOffset	OBSApi/AudioSource.cpp	/^void AudioSource::SetTimeOffset(int newOffset) {timeOffset = newOffset;}$/;"	f	class:AudioSource
SetTrackbarCaption	NoiseGate/NoiseGate.cpp	/^void NoiseGateSettings::SetTrackbarCaption(int controlId, int db)$/;"	f	class:NoiseGateSettings
SetVBRUseMode	lame/ACM/AEncodeProperties.h	/^	inline void SetVBRUseMode(const BRMode mode) { mBRmode = mode; }$/;"	f	class:AEncodeProperties
SetVTable	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.h	/^inline void SetVTable(LPVOID ptr, UINT funcOffset, FARPROC funcAddress)$/;"	f
SetVal	OBSApi/Utility/Template.h	/^    inline void SetVal(unsigned int index, BOOL bVal)$/;"	f	class:BitList
SetValue	Source/D3D10Shader.cpp	/^void   D3D10Shader::SetValue(HANDLE hObject, const void *val, DWORD dwSize)$/;"	f	class:D3D10Shader
SetValue	lame/ACM/tinyxml/tinyxml.h	/^	void SetValue( const std::string& _value )		{ value = _value; }$/;"	f	class:TiXmlNode
SetValue	lame/ACM/tinyxml/tinyxml.h	/^	void SetValue( const std::string& _value )	{ value = _value; }		\/\/\/< Set the value.$/;"	f	class:TiXmlAttribute
SetVector	OBSApi/GraphicsSystem.h	/^    inline  void   SetVector(HANDLE hObject, float fX, float fY, float fZ)$/;"	f	class:Shader
SetVector	OBSApi/Scene.h	/^    inline  void SetVector(CTSTR lpName, float fX, float fY, float fZ)              {SetVector(lpName, Vect(fX, fY, fZ));}$/;"	f	class:ImageSource
SetVector	OBSApi/Scene.h	/^    virtual void SetVector(CTSTR lpName, const Vect &value) {}$/;"	f	class:ImageSource
SetVector	Source/D3D10Shader.cpp	/^void   D3D10Shader::SetVector(HANDLE hObject, const Vect &value)$/;"	f	class:D3D10Shader
SetVector	Source/GlobalSource.cpp	/^    virtual void SetVector(CTSTR lpName, const Vect &value)   {if (globalSource) globalSource->SetVector (lpName, value);}$/;"	f	class:GlobalSource
SetVector2	OBSApi/Scene.h	/^    virtual void SetVector2(CTSTR lpName, const Vect2 &value) {}$/;"	f	class:ImageSource
SetVector2	Source/D3D10Shader.cpp	/^void   D3D10Shader::SetVector2(HANDLE hObject, const Vect2 &value)$/;"	f	class:D3D10Shader
SetVector2	Source/GlobalSource.cpp	/^    virtual void SetVector2(CTSTR lpName, const Vect2 &value) {if (globalSource) globalSource->SetVector2(lpName, value);}$/;"	f	class:GlobalSource
SetVector4	OBSApi/GraphicsSystem.h	/^    inline  void   SetVector4(HANDLE hObject, float fX, float fY, float fZ, float fW)$/;"	f	class:Shader
SetVector4	OBSApi/Scene.h	/^    inline  void SetVector4(CTSTR lpName, float fX, float fY, float fZ, float fW)   {SetVector4(lpName, Vect4(fX, fY, fZ, fW));}$/;"	f	class:ImageSource
SetVector4	OBSApi/Scene.h	/^    virtual void SetVector4(CTSTR lpName, const Vect4 &value) {}$/;"	f	class:ImageSource
SetVector4	Source/D3D10Shader.cpp	/^void   D3D10Shader::SetVector4(HANDLE hObject, const Vect4 &value)$/;"	f	class:D3D10Shader
SetVector4	Source/GlobalSource.cpp	/^    virtual void SetVector4(CTSTR lpName, const Vect4 &value) {if (globalSource) globalSource->SetVector4(lpName, value);}$/;"	f	class:GlobalSource
SetVideoSignalInfo	QSVHelper/QSVStuff.cpp	/^void Parameters::SetVideoSignalInfo(int full_range, int primaries, int transfer, int matrix)$/;"	f	class:Parameters
SetViewport	OBSApi/GraphicsSystem.h	/^inline void  SetViewport(float x, float y, float width, float height) {GS->SetViewport(x, y, width, height);}$/;"	f
SetViewport	Source/D3D10System.cpp	/^void D3D10System::SetViewport(float x, float y, float width, float height)$/;"	f	class:D3D10System
SetVolume	OBSApi/AudioSource.cpp	/^void AudioSource::SetVolume(float fVal) {sourceVolume = fabsf(fVal);}$/;"	f	class:AudioSource
SetVolumeControlIcons	OBSApi/VolumeControl.cpp	/^void SetVolumeControlIcons(HWND hwnd, HICON hiconPlay, HICON hiconMute)$/;"	f
SetVolumeControlMutedVal	OBSApi/VolumeControl.cpp	/^void SetVolumeControlMutedVal(HWND hwnd, float val)$/;"	f
SetVolumeControlValue	OBSApi/VolumeControl.cpp	/^float SetVolumeControlValue(HWND hwnd, float fVal)$/;"	f
SetVolumeMeterValue	OBSApi/VolumeMeter.cpp	/^float SetVolumeMeterValue(HWND hwnd, float fTopVal, float fTopMax, float fTopPeak, float fBotVal, float fBotMax, float fBotPeak)$/;"	f
SetWarningInfo	Source/SettingsPublish.cpp	/^void SettingsPublish::SetWarningInfo()$/;"	f	class:SettingsPublish
SetWorkingFolder	Source/Main.cpp	/^void SetWorkingFolder(void)$/;"	f
SetXingFrameMode	lame/ACM/AEncodeProperties.h	/^	inline void SetXingFrameMode(const bool bMode) { bXingFrame = bMode; }$/;"	f	class:AEncodeProperties
SetZero	OBSApi/Utility/XMath.h	/^    inline Vect& SetZero() {m = _mm_setzero_ps(); return *this;}$/;"	f	struct:Vect
SetZero	OBSApi/Utility/XMath.h	/^    inline Vect& SetZero() {x = y = z = w = 0.0f; return *this;}$/;"	f	struct:Vect
SetZero	OBSApi/Utility/XMath.h	/^    inline Vect4& SetZero() {m = _mm_setzero_ps(); return *this;}$/;"	f	struct:Vect4
SetZero	OBSApi/Utility/XMath.h	/^    inline Vect4& SetZero() {x = y = z = w = 0.0f; return *this;}$/;"	f	struct:Vect4
Set_Realtime	lame/misc/abx.c	/^void  Set_Realtime ( void )$/;"	f
Settings	DShowPlugin/IVideoCaptureFilter.h	/^	VIDEO_CAPTURE_FILTER_SETTINGS		Settings;$/;"	m	struct:_VIDEO_CAPTURE_FILTER_SETTINGS_EX
Settings.cpp	Source/Settings.cpp	1;"	F
Settings.h	Source/Settings.h	1;"	F
SettingsAdvanced	Source/Settings.h	/^class SettingsAdvanced : public SettingsPane$/;"	c
SettingsAdvanced	Source/SettingsAdvanced.cpp	/^SettingsAdvanced::SettingsAdvanced()$/;"	f	class:SettingsAdvanced
SettingsAdvanced.cpp	Source/SettingsAdvanced.cpp	1;"	F
SettingsAudio	Source/Settings.h	/^class SettingsAudio : public SettingsPane$/;"	c
SettingsAudio	Source/SettingsAudio.cpp	/^SettingsAudio::SettingsAudio()$/;"	f	class:SettingsAudio
SettingsAudio.cpp	Source/SettingsAudio.cpp	1;"	F
SettingsDialogProc	Source/Settings.cpp	/^INT_PTR CALLBACK OBS::SettingsDialogProc(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam)$/;"	f	class:OBS
SettingsEncoding	Source/Settings.h	/^class SettingsEncoding : public SettingsPane$/;"	c
SettingsEncoding	Source/SettingsEncoding.cpp	/^SettingsEncoding::SettingsEncoding()$/;"	f	class:SettingsEncoding
SettingsEncoding.cpp	Source/SettingsEncoding.cpp	1;"	F
SettingsGeneral	Source/Settings.h	/^class SettingsGeneral : public SettingsPane$/;"	c
SettingsGeneral	Source/SettingsGeneral.cpp	/^SettingsGeneral::SettingsGeneral()$/;"	f	class:SettingsGeneral
SettingsGeneral.cpp	Source/SettingsGeneral.cpp	1;"	F
SettingsHotkeys	Source/Settings.h	/^class SettingsHotkeys : public SettingsPane$/;"	c
SettingsHotkeys	Source/SettingsHotkeys.cpp	/^SettingsHotkeys::SettingsHotkeys()$/;"	f	class:SettingsHotkeys
SettingsHotkeys.cpp	Source/SettingsHotkeys.cpp	1;"	F
SettingsPane	CLRBrowserSourcePlugin/Plugin/SettingsPane.xaml.cs	/^        public SettingsPane()$/;"	m	class:CLRBrowserSourcePlugin.SettingsPane
SettingsPane	CLRBrowserSourcePlugin/Plugin/SettingsPane.xaml.cs	/^    public partial class SettingsPane : UserControl$/;"	c	namespace:CLRBrowserSourcePlugin
SettingsPane	CLRHostPlugin/CLRHostInterop/SettingsPane.h	/^    public interface class SettingsPane$/;"	c	namespace:CLROBS
SettingsPane	OBSApi/SettingsPane.cpp	/^SettingsPane::SettingsPane()$/;"	f	class:SettingsPane
SettingsPane	OBSApi/SettingsPane.h	/^class BASE_EXPORT SettingsPane$/;"	c
SettingsPane.cpp	OBSApi/SettingsPane.cpp	1;"	F
SettingsPane.h	CLRHostPlugin/CLRHostInterop/SettingsPane.h	1;"	F
SettingsPane.h	OBSApi/SettingsPane.h	1;"	F
SettingsPane.xaml.cs	CLRBrowserSourcePlugin/Plugin/SettingsPane.xaml.cs	1;"	F
SettingsPaneBridge	CLRHostPlugin/CLRHostPlugin/SettingsPaneBridge.h	/^    SettingsPaneBridge(CLRSettingsPane *clrSettingsPane)$/;"	f	class:SettingsPaneBridge
SettingsPaneBridge	CLRHostPlugin/CLRHostPlugin/SettingsPaneBridge.h	/^class SettingsPaneBridge : public SettingsPane$/;"	c
SettingsPaneBridge.h	CLRHostPlugin/CLRHostPlugin/SettingsPaneBridge.h	1;"	F
SettingsPublish	Source/Settings.h	/^class SettingsPublish : public SettingsPane$/;"	c
SettingsPublish	Source/SettingsPublish.cpp	/^SettingsPublish::SettingsPublish()$/;"	f	class:SettingsPublish
SettingsPublish.cpp	Source/SettingsPublish.cpp	1;"	F
SettingsQSV	Source/Settings.h	/^class SettingsQSV : public SettingsPane$/;"	c
SettingsQSV	Source/SettingsQSV.cpp	/^SettingsQSV::SettingsQSV()$/;"	f	class:SettingsQSV
SettingsQSV.cpp	Source/SettingsQSV.cpp	1;"	F
SettingsVideo	Source/Settings.h	/^class SettingsVideo : public SettingsPane$/;"	c
SettingsVideo	Source/SettingsVideo.cpp	/^SettingsVideo::SettingsVideo()$/;"	f	class:SettingsVideo
SettingsVideo.cpp	Source/SettingsVideo.cpp	1;"	F
SetupCallbacks	libmfx/include/msdk/include/mfxplugin++.h	/^        void SetupCallbacks( T *plugin, mfxVideoCodecPlugin *pCodec) {$/;"	f	class:detail::MFXPluginAdapterBase
SetupCallbacks	libmfx/include/msdk/include/mfxplugin++.h	/^        void SetupCallbacks() {$/;"	f	class:detail::MFXCodecPluginAdapterBase
SetupCallbacks	libmfx/include/msdk/include/mfxplugin++.h	/^        void SetupCallbacks() {$/;"	f	class:detail::MFXPluginAdapterInternal
SetupD3D10	GraphicsCapture/GraphicsCaptureHook/D3D10Capture.cpp	/^void SetupD3D10(IDXGISwapChain *swapChain)$/;"	f
SetupD3D101	GraphicsCapture/GraphicsCaptureHook/D3D10.1Capture.cpp	/^void SetupD3D101(IDXGISwapChain *swapChain)$/;"	f
SetupD3D11	GraphicsCapture/GraphicsCaptureHook/D3D11Capture.cpp	/^void SetupD3D11(IDXGISwapChain *swapChain)$/;"	f
SetupD3D8	GraphicsCapture/GraphicsCaptureHook/D3D8Capture.cpp	/^void SetupD3D8(IDirect3DDevice8* device)$/;"	f
SetupD3D9	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^void SetupD3D9(IDirect3DDevice9 *device)$/;"	f
SetupDDraw	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	/^bool SetupDDraw()$/;"	f
SetupDXGIStuff	GraphicsCapture/GraphicsCaptureHook/DXGICapture.cpp	/^void SetupDXGIStuff(IDXGISwapChain *swap)$/;"	f
SetupHTTPServer	Source/Main.cpp	/^void SetupHTTPServer()$/;"	f
SetupIni	Source/Main.cpp	/^void SetupIni(CTSTR profile)$/;"	f
SetupPalette	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	/^bool SetupPalette(LPDIRECTDRAWPALETTE lpDDPalette)$/;"	f
SetupSceneCollection	Source/Main.cpp	/^void SetupSceneCollection(CTSTR scenecollection)$/;"	f
SetupSendBacklogEvent	Source/RTMPPublisher.cpp	/^void RTMPPublisher::SetupSendBacklogEvent()$/;"	f	class:RTMPPublisher
ShadeCaps	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	/^    DWORD   ShadeCaps;$/;"	m	struct:_D3DCAPS8
Shader	OBSApi/GraphicsSystem.h	/^    inline Shader *Shader()$/;"	f	class:FutureShader
Shader	OBSApi/GraphicsSystem.h	/^class BASE_EXPORT Shader$/;"	c
ShaderParam	Source/D3D10System.h	/^struct ShaderParam$/;"	s
ShaderParameterInfo	OBSApi/GraphicsSystem.h	/^struct ShaderParameterInfo$/;"	s
ShaderParameterType	OBSApi/GraphicsSystem.h	/^enum ShaderParameterType$/;"	g
ShaderProcessor	Source/D3D10System.h	/^    inline ShaderProcessor()  {zero(this, sizeof(ShaderProcessor));}$/;"	f	struct:ShaderProcessor
ShaderProcessor	Source/D3D10System.h	/^struct ShaderProcessor : CodeTokenizer$/;"	s
ShaderSampler	Source/D3D10System.h	/^struct ShaderSampler$/;"	s
ShaderType	OBSApi/GraphicsSystem.h	/^enum ShaderType$/;"	g
ShaderType_Geometry	OBSApi/GraphicsSystem.h	/^    ShaderType_Geometry$/;"	e	enum:ShaderType
ShaderType_Pixel	OBSApi/GraphicsSystem.h	/^    ShaderType_Pixel,$/;"	e	enum:ShaderType
ShaderType_Vertex	OBSApi/GraphicsSystem.h	/^    ShaderType_Vertex,$/;"	e	enum:ShaderType
Shame	lame/doc/html/links.html	/^<!--<h3><a name="Shame">HALL OF SHAME<\/a><\/h3>$/;"	a
Shared	CLRBrowserSourcePlugin/Client/BrowserApp.cs	/^namespace CLRBrowserSourcePlugin.Shared$/;"	n
Shared	CLRBrowserSourcePlugin/Plugin/Shared/BrowserApp.cs	/^namespace CLRBrowserSourcePlugin.Shared$/;"	n
Shared	CLRBrowserSourcePlugin/Plugin/Shared/BrowserConfig.cs	/^namespace CLRBrowserSourcePlugin.Shared$/;"	n
Shared	CLRBrowserSourcePlugin/Plugin/Shared/BrowserPlugin.cs	/^namespace CLRBrowserSourcePlugin.Shared$/;"	n
Shared	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^namespace CLRBrowserSourcePlugin.Shared$/;"	n
SharedSystemMemory	extras/dxgi1_2.h	/^    SIZE_T SharedSystemMemory;$/;"	m	struct:DXGI_ADAPTER_DESC2
SharedTexCapture	GraphicsCapture/SharedTexCapture.h	/^class SharedTexCapture : public GraphicsCaptureMethod$/;"	c
SharedTexCapture.cpp	GraphicsCapture/SharedTexCapture.cpp	1;"	F
SharedTexCapture.h	GraphicsCapture/SharedTexCapture.h	1;"	F
SharedTexData	GraphicsCapture/GlobalCaptureStuff.h	/^struct SharedTexData$/;"	s
SharedTexture	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/SharedTexture.cs	/^    public class SharedTexture$/;"	c	namespace:Browser
SharedTexture.cs	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/SharedTexture.cs	1;"	F
SharedTexture.h	CLRHostPlugin/CLRHostInterop/SharedTexture.h	1;"	F
Shift	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16  Shift;$/;"	m
ShortHuffmancodebits	lame/libmp3lame/bitstream.c	/^ShortHuffmancodebits(lame_internal_flags * gfc, gr_info const *gi)$/;"	f	file:
ShowConfiguration	CLRBrowserSourcePlugin/Plugin/BrowserSourceFactory.cs	/^        public override bool ShowConfiguration(XElement data)$/;"	m	class:CLRBrowserSourcePlugin.BrowserSourceFactory
ShowConfiguration	CLRHostPlugin/CLRCSharpSamplePlugin/SampleImageSourceFactory.cs	/^        public override bool ShowConfiguration(XElement data)$/;"	m	class:CSharpSamplePlugin.SampleImageSourceFactory
ShowConfiguration	CLRHostPlugin/CLRHostPlugin/CLRImageSourceFactory.cpp	/^bool CLRImageSourceFactory::ShowConfiguration(CLRXElement *element)$/;"	f	class:CLRImageSourceFactory
ShowLogUploadResult	Source/WindowStuff.cpp	/^void ShowLogUploadResult(LogUploadResult &result, bool success)$/;"	f
ShowNotificationAreaIcon	Source/OBS.cpp	/^BOOL OBS::ShowNotificationAreaIcon()$/;"	f	class:OBS
Shutdown	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/SimpleDispatcher.cs	/^        public void Shutdown()$/;"	m	class:RemoteBrowser.SimpleDispatcher
SimpleDispatcher	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/SimpleDispatcher.cs	/^        public SimpleDispatcher()$/;"	m	class:RemoteBrowser.SimpleDispatcher
SimpleDispatcher	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/SimpleDispatcher.cs	/^    public class SimpleDispatcher$/;"	c	namespace:RemoteBrowser
SimpleDispatcher.cs	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/SimpleDispatcher.cs	1;"	F
SingleProcess	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public bool SingleProcess { get; private set; }$/;"	p	class:Shared.BrowserRuntimeSettings
SingleSeiNalUnit	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16      SingleSeiNalUnit;       \/* tri-state option *\/$/;"	m
SinkRegistrator	libmfx/src/mfx_dispatcher_log.cpp	/^    SinkRegistrator()$/;"	f	class:SinkRegistrator
SinkRegistrator	libmfx/src/mfx_dispatcher_log.cpp	/^    SinkRegistrator(const wchar_t* sguid = DISPATCHER_LOG_EVENT_GUID)$/;"	f	class:SinkRegistrator
SinkRegistrator	libmfx/src/mfx_dispatcher_log.cpp	/^class SinkRegistrator$/;"	c	file:
SinkRegistrator	libmfx/src/mfx_dispatcher_log.cpp	/^class SinkRegistrator<ETWHandlerFactory>$/;"	c	file:
SinkRegistrator	libmfx/src/mfx_dispatcher_log.cpp	/^class SinkRegistrator<FileSink>$/;"	c	file:
Size	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserWrapper.cs	/^        public bool Size(ref CefRectangle rect)$/;"	m	class:Browser.BrowserWrapper
Size	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    UINT                Size;$/;"	m	struct:_D3DINDEXBUFFER_DESC
Size	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    UINT                Size;$/;"	m	struct:_D3DRANGE
Size	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    UINT                Size;$/;"	m	struct:_D3DSURFACE_DESC
Size	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    UINT                Size;$/;"	m	struct:_D3DVERTEXBUFFER_DESC
Size	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    UINT                Size;$/;"	m	struct:_D3DVOLUME_DESC
SizeEvent	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserRenderHandler.cs	/^        public SizeEventHandler SizeEvent { private get; set; }$/;"	p	class:Browser.BrowserRenderHandler
SizeEventHandler	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserRenderHandler.cs	/^    public delegate bool SizeEventHandler(ref CefRectangle rect);$/;"	m	namespace:Browser
SizeMax	lame/dshow/Mpegac.cpp	/^int CMpegAudEnc::SizeMax()$/;"	f	class:CMpegAudEnc
SizeToMemInfo	OBSApi/Utility/FastAlloc.cpp	/^MemInfo MemInfoList[12],*SizeToMemInfo[0x8001];$/;"	v
Skip	DShowPlugin/CaptureFilter.cpp	/^STDMETHODIMP CaptureEnumMediaTypes::Skip(ULONG cMediaTypes)                                                 {return S_FALSE;}$/;"	f	class:CaptureEnumMediaTypes
Skip	DShowPlugin/CaptureFilter.cpp	/^STDMETHODIMP CaptureEnumPins::Skip(ULONG cPins)     {return (++curPin > 1) ? S_FALSE : S_OK;}$/;"	f	class:CaptureEnumPins
SkipFrame	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16      SkipFrame;$/;"	m
SkipFrame	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16  SkipFrame;$/;"	m
SkipWhiteSpace	lame/ACM/tinyxml/tinyxmlparser.cpp	/^const char* TiXmlBase::SkipWhiteSpace( const char* p )$/;"	f	class:TiXmlBase
SleepTo100NS	Source/OBSVideoCapture.cpp	/^bool STDCALL SleepTo100NS(QWORD qw100NSTime)$/;"	f
SleepToNS	Source/OBSVideoCapture.cpp	/^bool STDCALL SleepToNS(QWORD qwNSTime)$/;"	f
SliceGroupsPresent	libmfx/include/msdk/include/mfxstructures.h	/^            mfxU16  SliceGroupsPresent;$/;"	m
SlicePitch	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    INT                 SlicePitch;$/;"	m	struct:_D3DLOCKED_BOX
SmartRatioMax	lame/ACM/AEncodeProperties.h	/^	double SmartRatioMax;$/;"	m	class:AEncodeProperties
SmpFrqIndex	lame/libmp3lame/util.c	/^SmpFrqIndex(int sample_freq, int *const version)$/;"	f
SocketLoop	Source/RTMPPublisher.cpp	/^void RTMPPublisher::SocketLoop()$/;"	f	class:RTMPPublisher
SocketThread	Source/RTMPPublisher.cpp	/^DWORD RTMPPublisher::SocketThread(RTMPPublisher *publisher)$/;"	f	class:RTMPPublisher
SocksNegotiate	librtmp/rtmp.c	/^SocksNegotiate(RTMP *r)$/;"	f	file:
SocksSetup	librtmp/rtmp.c	/^SocksSetup(RTMP *r, AVal *sockshost)$/;"	f	file:
Soft_hard	lame/doc/html/links.html	/^<h3><a name="Soft_hard">MP3 Related Software and Hardware:<\/a><\/h3>$/;"	a
SortAudio	OBSApi/AudioSource.cpp	/^void AudioSource::SortAudio(QWORD timestamp)$/;"	f	class:AudioSource
SortBookNumbers	libfaac/huffman.c	/^int SortBookNumbers(CoderInfo *coderInfo,$/;"	f
SortForGrouping	libfaac/aacquant.c	/^int SortForGrouping(CoderInfo* coderInfo,$/;"	f
SourceListHasDevice	DShowPlugin/DShowPlugin.cpp	/^bool SourceListHasDevice(CTSTR lpDevice, XElement *sourceList)$/;"	f
SourcePoint	extras/dxgi1_2.h	/^    POINT SourcePoint;$/;"	m	struct:DXGI_OUTDUPL_MOVE_RECT
SourceSettings	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^            public BrowserSourceSettings SourceSettings { get; set; }$/;"	p	class:Shared.BrowserSettings.SerializedSettings
SourceSettings	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public BrowserSourceSettings SourceSettings$/;"	p	class:Shared.BrowserSettings
SpatialComplexity	libmfx/include/msdk/include/mfxstructures.h	/^            mfxU32  SpatialComplexity;$/;"	m
Specular	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DCOLORVALUE   Specular;        \/* Specular color of light *\/$/;"	m	struct:_D3DLIGHT8
Specular	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DCOLORVALUE   Specular;       \/* Specular 'shininess' *\/$/;"	m	struct:_D3DMATERIAL8
SphereIntersects	OBSApi/Utility/XMath.h	/^    inline BOOL SphereIntersects(const Vect &center, float radius) const$/;"	f	struct:Bounds
SphereRayCollision	OBSApi/Utility/XMath.cpp	/^BOOL SphereRayCollision(const Vect &center, float radius, const Vect &rayOrig, const Vect &rayDir, Vect *collision, Plane *collisionPlane)$/;"	f
SquarifyColor	OBSApi/Utility/XMath.h	/^    inline Vect4& SquarifyColor()$/;"	f	struct:Vect4
SrcBlendCaps	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	/^    DWORD   SrcBlendCaps;$/;"	m	struct:_D3DCAPS8
Standalone	lame/ACM/tinyxml/tinyxml.h	/^	const std::string& Standalone() const		{ return standalone; }$/;"	f	class:TiXmlDeclaration
StandardFontFamily	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public string StandardFontFamily { get; set; }$/;"	p	class:Shared.BrowserInstanceSettings
Start	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserManager.cs	/^        public void Start()$/;"	m	class:Browser.BrowserManager
Start	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/SimpleDispatcher.cs	/^        public void Start()$/;"	m	class:RemoteBrowser.SimpleDispatcher
Start	DShowPlugin/DeviceSource.cpp	/^void DeviceSource::Start()$/;"	f	class:DeviceSource
Start	Source/OBSCapture.cpp	/^void OBS::Start(bool recordingOnly, bool replayBufferOnly)$/;"	f	class:OBS
StartBlankSoundPlayback	Source/BlankAudioPlayback.cpp	/^void StartBlankSoundPlayback(CTSTR lpDevice)$/;"	f
StartCapture	OBSApi/AudioSource.cpp	/^void AudioSource::StartCapture() {}$/;"	f	class:AudioSource
StartCapture	Source/DSoundAudioSource.cpp	/^    virtual void StartCapture()$/;"	f	class:DSoundAudioSource
StartCapture	Source/MMDeviceAudioSource.cpp	/^void MMDeviceAudioSource::StartCapture()$/;"	f	class:MMDeviceAudioSource
StartCapturing	Source/OBSCapture.cpp	/^void OBS::StartCapturing()$/;"	f	class:OBS
StartNewSequence	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16      StartNewSequence;$/;"	m
StartRecording	Source/OBSCapture.cpp	/^bool OBS::StartRecording(bool force)$/;"	f	class:OBS
StartRecording	Source/ReplayBuffer.cpp	/^    bool StartRecording()$/;"	f	struct:RecordingHelper
StartRecordingExt	Source/OBSCapture.cpp	/^void OBS::StartRecordingExt()$/;"	f	class:OBS
StartRecordingFromReplayBuffer	Source/ReplayBuffer.cpp	/^void StartRecordingFromReplayBuffer(ReplayBuffer *rb)$/;"	f
StartRecordingHotkey	Source/OBSHotkeyHandlers.cpp	/^void STDCALL OBS::StartRecordingHotkey(DWORD hotkey, UPARAM param, bool bDown)$/;"	f	class:OBS
StartReplayBuffer	Source/OBSCapture.cpp	/^void OBS::StartReplayBuffer()$/;"	f	class:OBS
StartReplayBufferHotkey	Source/OBSHotkeyHandlers.cpp	/^void STDCALL OBS::StartReplayBufferHotkey(DWORD hotkey, UPARAM param, bool bDown)$/;"	f	class:OBS
StartSaveThread	Source/ReplayBuffer.cpp	/^    void StartSaveThread(DWORD save_time, bool last_minute_recording=false)$/;"	f	struct:ReplayBuffer
StartStopPreview	Source/API.cpp	/^    virtual void StartStopPreview()$/;"	f	class:OBSAPIInterface
StartStopStream	Source/API.cpp	/^    virtual void StartStopStream()$/;"	f	class:OBSAPIInterface
StartStreamHotkey	Source/OBSHotkeyHandlers.cpp	/^void STDCALL OBS::StartStreamHotkey(DWORD hotkey, UPARAM param, bool bDown)$/;"	f	class:OBS
StartStreaming	lame/dshow/Mpegac.cpp	/^HRESULT CMpegAudEnc::StartStreaming()$/;"	f	class:CMpegAudEnc
StartThread	scenesw/SceneSwitcher.cpp	/^void SceneSwitcher::StartThread(HWND hDialog)$/;"	f	class:SceneSwitcher
StartVertexBuffer	OBSApi/GraphicsSystem.cpp	/^void GraphicsSystem::StartVertexBuffer()$/;"	f	class:GraphicsSystem
StartVertexBuffer	OBSApi/GraphicsSystem.h	/^inline void  StartVertexBuffer()                                {GS->StartVertexBuffer();}$/;"	f
StartVertexOffset	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    UINT                StartVertexOffset;$/;"	m	struct:_D3DTRIPATCH_INFO
StartVertexOffsetHeight	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    UINT                StartVertexOffsetHeight;$/;"	m	struct:_D3DRECTPATCH_INFO
StartVertexOffsetWidth	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    UINT                StartVertexOffsetWidth;$/;"	m	struct:_D3DRECTPATCH_INFO
StatusBarDrawData	Source/OBS.h	/^struct StatusBarDrawData$/;"	s
StatusVector	libmfx/src/main.cpp	/^typedef MFXVector<mfxStatus>        StatusVector;$/;"	t	file:
StencilCaps	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	/^    DWORD   StencilCaps;$/;"	m	struct:_D3DCAPS8
StepUp	libfaac/tns.c	/^static void StepUp(int fOrder,double* kArray,double* aArray)$/;"	f	file:
Stereo	extras/dxgi1_2.h	/^    BOOL Stereo;$/;"	m	struct:DXGI_MODE_DESC1
Stereo	extras/dxgi1_2.h	/^    BOOL Stereo;$/;"	m	struct:DXGI_SWAP_CHAIN_DESC1
StereoMode	libmfx/include/msdk/include/mfxastructures.h	/^            mfxU16       StereoMode;$/;"	m
Stop	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserManager.cs	/^        public void Stop()$/;"	m	class:Browser.BrowserManager
Stop	DShowPlugin/CaptureFilter.cpp	/^STDMETHODIMP CaptureFilter::Stop()                                         {pin->EndFlush(); state = State_Stopped; return S_OK;}$/;"	f	class:CaptureFilter
Stop	DShowPlugin/DeviceSource.cpp	/^void DeviceSource::Stop()$/;"	f	class:DeviceSource
Stop	OBSApi/Utility/XT.cpp	/^void XStringLog::Stop()$/;"	f	class:XStringLog
Stop	Source/OBSCapture.cpp	/^void OBS::Stop(bool overrideKeepRecording, bool stopReplayBuffer)$/;"	f	class:OBS
StopBlankSoundPlayback	Source/BlankAudioPlayback.cpp	/^void StopBlankSoundPlayback()$/;"	f
StopCapture	OBSApi/AudioSource.cpp	/^void AudioSource::StopCapture() {}$/;"	f	class:AudioSource
StopCapture	Source/DSoundAudioSource.cpp	/^    virtual void StopCapture()$/;"	f	class:DSoundAudioSource
StopCapture	Source/MMDeviceAudioSource.cpp	/^void MMDeviceAudioSource::StopCapture()$/;"	f	class:MMDeviceAudioSource
StopCapturing	Source/OBSCapture.cpp	/^void OBS::StopCapturing()$/;"	f	class:OBS
StopHelper	Source/Encoder_QSV.cpp	/^    void StopHelper(ipc_stop &stop, IPCWaiter &waiter, safe_handle &h)$/;"	f
StopInfo	Source/OBS.h	/^    struct StopInfo$/;"	s	class:OBS
StopRecording	Source/OBSCapture.cpp	/^void OBS::StopRecording(bool immediate)$/;"	f	class:OBS
StopRecordingExt	Source/OBSCapture.cpp	/^void OBS::StopRecordingExt(int immediate)$/;"	f	class:OBS
StopRecordingHotkey	Source/OBSHotkeyHandlers.cpp	/^void STDCALL OBS::StopRecordingHotkey(DWORD hotkey, UPARAM param, bool bDown)$/;"	f	class:OBS
StopReplayBuffer	Source/OBSCapture.cpp	/^void OBS::StopReplayBuffer(bool immediate)$/;"	f	class:OBS
StopReplayBufferHotkey	Source/OBSHotkeyHandlers.cpp	/^void STDCALL OBS::StopReplayBufferHotkey(DWORD hotkey, UPARAM param, bool bDown)$/;"	f	class:OBS
StopStreamHotkey	Source/OBSHotkeyHandlers.cpp	/^void STDCALL OBS::StopStreamHotkey(DWORD hotkey, UPARAM param, bool bDown)$/;"	f	class:OBS
StopStreaming	lame/dshow/Mpegac.cpp	/^HRESULT CMpegAudEnc::StopStreaming()$/;"	f	class:CMpegAudEnc
StopThread	scenesw/SceneSwitcher.cpp	/^void SceneSwitcher::StopThread(HWND hDialog)$/;"	f	class:SceneSwitcher
Str	OBSApi/Utility/XTLocalization.h	106;"	d
StreamIn	lame/ACM/tinyxml/tinyxmlparser.cpp	/^void TiXmlComment::StreamIn( std::istream* in, std::string* tag )$/;"	f	class:TiXmlComment
StreamIn	lame/ACM/tinyxml/tinyxmlparser.cpp	/^void TiXmlDeclaration::StreamIn( std::istream* in, std::string* tag )$/;"	f	class:TiXmlDeclaration
StreamIn	lame/ACM/tinyxml/tinyxmlparser.cpp	/^void TiXmlDocument::StreamIn( std::istream* in, std::string* tag )$/;"	f	class:TiXmlDocument
StreamIn	lame/ACM/tinyxml/tinyxmlparser.cpp	/^void TiXmlElement::StreamIn( std::istream* in, std::string* tag )$/;"	f	class:TiXmlElement
StreamIn	lame/ACM/tinyxml/tinyxmlparser.cpp	/^void TiXmlText::StreamIn( std::istream* in, std::string* tag )$/;"	f	class:TiXmlText
StreamIn	lame/ACM/tinyxml/tinyxmlparser.cpp	/^void TiXmlUnknown::StreamIn( std::istream* in, std::string* tag )$/;"	f	class:TiXmlUnknown
StreamInfo	Source/OBS.h	/^struct StreamInfo$/;"	s
StreamInfoPriority	OBSApi/APIInterface.h	/^enum StreamInfoPriority$/;"	g
StreamInfoPriority_Critical	OBSApi/APIInterface.h	/^    StreamInfoPriority_Critical,$/;"	e	enum:StreamInfoPriority
StreamInfoPriority_High	OBSApi/APIInterface.h	/^    StreamInfoPriority_High,$/;"	e	enum:StreamInfoPriority
StreamInfoPriority_Low	OBSApi/APIInterface.h	/^    StreamInfoPriority_Low,$/;"	e	enum:StreamInfoPriority
StreamInfoPriority_Medium	OBSApi/APIInterface.h	/^    StreamInfoPriority_Medium,$/;"	e	enum:StreamInfoPriority
StreamOut	lame/ACM/tinyxml/tinyxml.cpp	/^void TiXmlAttribute::StreamOut( std::ostream* stream ) const$/;"	f	class:TiXmlAttribute
StreamOut	lame/ACM/tinyxml/tinyxml.cpp	/^void TiXmlComment::StreamOut( std::ostream* stream ) const$/;"	f	class:TiXmlComment
StreamOut	lame/ACM/tinyxml/tinyxml.cpp	/^void TiXmlDeclaration::StreamOut( std::ostream* stream ) const$/;"	f	class:TiXmlDeclaration
StreamOut	lame/ACM/tinyxml/tinyxml.cpp	/^void TiXmlDocument::StreamOut( std::ostream* out ) const$/;"	f	class:TiXmlDocument
StreamOut	lame/ACM/tinyxml/tinyxml.cpp	/^void TiXmlElement::StreamOut( std::ostream* stream ) const$/;"	f	class:TiXmlElement
StreamOut	lame/ACM/tinyxml/tinyxml.cpp	/^void TiXmlText::StreamOut( std::ostream* stream ) const$/;"	f	class:TiXmlText
StreamOut	lame/ACM/tinyxml/tinyxml.cpp	/^void TiXmlUnknown::StreamOut( std::ostream* stream ) const$/;"	f	class:TiXmlUnknown
StreamStarted	NoiseGate/NoiseGate.cpp	/^void NoiseGate::StreamStarted()$/;"	f	class:NoiseGate
StreamStopped	NoiseGate/NoiseGate.cpp	/^void NoiseGate::StreamStopped()$/;"	f	class:NoiseGate
StreamTo	lame/ACM/tinyxml/tinyxmlparser.cpp	/^\/*static*\/ bool TiXmlBase::StreamTo( std::istream* in, int character, std::string* tag )$/;"	f	class:TiXmlBase
StreamUtils	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/StreamUtils.cs	/^    static class StreamUtils$/;"	c	namespace:RemoteBrowser
StreamUtils.cs	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/StreamUtils.cs	1;"	F
StreamWhiteSpace	lame/ACM/tinyxml/tinyxmlparser.cpp	/^\/*static*\/ bool TiXmlBase::StreamWhiteSpace( std::istream* in, std::string* tag )$/;"	f	class:TiXmlBase
Stride	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    UINT                Stride;$/;"	m	struct:_D3DRECTPATCH_INFO
String	OBSApi/Utility/XString.cpp	/^String::String()$/;"	f	class:String
String	OBSApi/Utility/XString.cpp	/^String::String(CWSTR str)$/;"	f	class:String
String	OBSApi/Utility/XString.cpp	/^String::String(LPCSTR str)$/;"	f	class:String
String	OBSApi/Utility/XString.cpp	/^String::String(const String &str)$/;"	f	class:String
String	OBSApi/Utility/XString.h	/^class BASE_EXPORT String$/;"	c
StringCRC16	OBSApi/Utility/XString.cpp	/^WORD StringCRC16(CTSTR lpData)$/;"	f
StringCRC16I	OBSApi/Utility/XString.cpp	/^WORD StringCRC16I(CTSTR lpData)$/;"	f
StringEqual	lame/ACM/tinyxml/tinyxmlparser.cpp	/^bool TiXmlBase::StringEqual( const char* p,$/;"	f	class:TiXmlBase
StringEscapeJson	Source/LogUploader.cpp	/^    void StringEscapeJson(String &str)$/;"	f
StringList	OBSApi/Utility/XString.h	/^class BASE_EXPORT StringList : public List<String>$/;"	c
StringLog	OBSApi/Utility/XT.cpp	/^XStringLog              StringLog;$/;"	v
StringLookupNode	OBSApi/Utility/XTLocalization.cpp	/^struct StringLookupNode$/;"	s	file:
StringToRepresentation	OBSApi/Utility/XString.cpp	/^String String::StringToRepresentation(String &string)$/;"	f	class:String
StringsOfImpl	libmfx/src/mfx_dispatcher_log.cpp	/^static CodeStringTable StringsOfImpl[] = {$/;"	v	file:
StringsOfImplVIA	libmfx/src/mfx_dispatcher_log.cpp	/^static CodeStringTable StringsOfImplVIA[] = {$/;"	v	file:
StringsOfStatus	libmfx/src/mfx_dispatcher_log.cpp	/^static CodeStringTable StringsOfStatus[] =$/;"	v	file:
SubItems	OBSApi/Utility/XConfig.h	/^    List<XBaseItem*> SubItems;$/;"	m	class:XElement
SubSysId	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    DWORD           SubSysId;$/;"	m	struct:_D3DADAPTER_IDENTIFIER8
SubSysId	extras/dxgi1_2.h	/^    UINT SubSysId;$/;"	m	struct:DXGI_ADAPTER_DESC2
Submit	libmfx/include/msdk/include/mfxplugin.h	/^    mfxStatus (MFX_CDECL *Submit)(mfxHDL pthis, const mfxHDL *in, mfxU32 in_num, const mfxHDL *out, mfxU32 out_num, mfxThreadTask *task);$/;"	m	struct:mfxPlugin
SuggestedInputSize	libmfx/include/msdk/include/mfxastructures.h	/^    mfxU32  SuggestedInputSize;$/;"	m
SuggestedOutputSize	libmfx/include/msdk/include/mfxastructures.h	/^    mfxU32  SuggestedOutputSize;$/;"	m
SupportStuff.h	QSVHelper/SupportStuff.h	1;"	F
SuppressWarnings	libmfx/src/mfx_function_table.cpp	/^void SuppressWarnings(...)$/;"	f
Surfaces	libmfx/include/msdk/include/mfxstructures.h	/^        mfxFrameSurface1 **Surfaces;$/;"	m
Swap	OBSApi/Utility/Template.h	/^template<typename T> void Swap(const T &p1, const T &p2)$/;"	f
SwapBuffersHook	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^static BOOL WINAPI SwapBuffersHook(HDC hDC)$/;"	f	file:
SwapEffect	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DSWAPEFFECT       SwapEffect;$/;"	m	struct:_D3DPRESENT_PARAMETERS_
SwapEffect	extras/dxgi1_2.h	/^    DXGI_SWAP_EFFECT SwapEffect;$/;"	m	struct:DXGI_SWAP_CHAIN_DESC1
SwapVals	OBSApi/Utility/XMath.h	/^    inline Vect2& SwapVals() {float newY = x; x = y; y = newY; return *this;}$/;"	f	struct:Vect2
SwapValues	OBSApi/Utility/Template.h	/^    inline void SwapValues(UINT valA, UINT valB)$/;"	f	class:CircularList
SwapValues	OBSApi/Utility/Template.h	/^    inline void SwapValues(UINT valA, UINT valB)$/;"	f	class:List
SyncOperation	libmfx/include/msdk/include/mfxaudio++.h	/^    virtual mfxStatus SyncOperation(mfxSyncPoint syncp, mfxU32 wait) { return MFXAudioCORE_SyncOperation(m_session, syncp, wait); }$/;"	f	class:MFXAudioSession
SyncOperation	libmfx/include/msdk/include/mfxvideo++.h	/^    virtual mfxStatus SyncOperation(mfxSyncPoint syncp, mfxU32 wait) { return MFXVideoCORE_SyncOperation(m_session, syncp, wait); }$/;"	f	class:MFXVideoSession
T	OBSApi/Utility/XMath.h	/^            Vect T; \/\/location (origin)$/;"	m	struct:Matrix
T	lame/doc/html/detailed.html	/^<a name="T"><span class="hilight">-T<\/span><\/a> Force the usage of the LAME tag            $/;"	a
TAKEHIRO_IEEE754_HACK	libfaac/aacquant.c	33;"	d	file:
TARGET_MAC_DLL	lame/mac/Precompile_Common.h	9;"	d
TCHAR	OBSApi/Utility/Defs.h	/^typedef char TCHAR;$/;"	t
TCHAR	OBSApi/Utility/Defs.h	/^typedef wchar_t TCHAR;$/;"	t
TCHAR	OBSApi/Utility/Defs.h	45;"	d
TCHARBITS	OBSApi/Utility/XString.cpp	36;"	d	file:
TCHARBITS	OBSApi/Utility/XString.cpp	39;"	d	file:
TCHARMASK	OBSApi/Utility/XString.cpp	35;"	d	file:
TCHARMASK	OBSApi/Utility/XString.cpp	38;"	d	file:
TEMP_ADDR	minhook/src/trampoline.h	/^	struct TEMP_ADDR$/;"	s	namespace:MinHook
TENC_LATIN1	lame/frontend/parse.c	/^, TENC_LATIN1  \/* text will be converted from local encoding to Latin1, as ID3 needs it *\/$/;"	e	enum:TextEncoding	file:
TENC_RAW	lame/frontend/parse.c	/^{ TENC_RAW     \/* bytes will be stored as-is into ID3 tags, which are Latin1 per definition *\/$/;"	e	enum:TextEncoding	file:
TENC_UTF16	lame/frontend/parse.c	/^, TENC_UTF16   \/* text will be converted from local encoding to Unicode, as ID3v2 wants it *\/$/;"	e	enum:TextEncoding	file:
TESTUMAX	minhook/src/pstdint.h	749;"	d
TEXT	OBSApi/Utility/Defs.h	102;"	d
TEXT	OBSApi/Utility/Defs.h	60;"	d
TEXT	OBSApi/Utility/Defs.h	99;"	d
TEXT	lame/ACM/tinyxml/tinyxml.h	/^		TEXT, $/;"	e	enum:TiXmlNode::NodeType
TEXT2	OBSApi/Utility/Defs.h	59;"	d
TEXT2	OBSApi/Utility/Defs.h	98;"	d
TEXTURE_MEMORY	GraphicsCapture/GlobalCaptureStuff.h	37;"	d
TEXTURE_MUTEX1	GraphicsCapture/GlobalCaptureStuff.h	33;"	d
TEXTURE_MUTEX2	GraphicsCapture/GlobalCaptureStuff.h	34;"	d
TEXT_BECLOSESTREAM	lame/Dll/BladeMP3EncDLL.h	249;"	d
TEXT_BEDEINITSTREAM	lame/Dll/BladeMP3EncDLL.h	248;"	d
TEXT_BEENCODECHUNK	lame/Dll/BladeMP3EncDLL.h	246;"	d
TEXT_BEENCODECHUNKFLOATS16NI	lame/Dll/BladeMP3EncDLL.h	247;"	d
TEXT_BEFLUSHNOGAP	lame/Dll/BladeMP3EncDLL.h	252;"	d
TEXT_BEINITSTREAM	lame/Dll/BladeMP3EncDLL.h	245;"	d
TEXT_BEVERSION	lame/Dll/BladeMP3EncDLL.h	250;"	d
TEXT_BEWRITEINFOTAG	lame/Dll/BladeMP3EncDLL.h	253;"	d
TEXT_BEWRITEVBRHEADER	lame/Dll/BladeMP3EncDLL.h	251;"	d
THAW_WND	Source/WindowStuff.cpp	35;"	d	file:
TIMER_ID	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	314;"	d	file:
TIME_WITH_SYS_TIME	lame/mac/Precompile_Common.h	21;"	d
TINYXML_INCLUDED	lame/ACM/tinyxml/tinyxml.h	26;"	d
TINY_EPSILON	OBSApi/Utility/XMath.h	45;"	d
TIXML_ERROR	lame/ACM/tinyxml/tinyxml.h	/^		TIXML_ERROR,$/;"	e	enum:TiXmlBase::<anonymous>
TIXML_ERROR_DOCUMENT_EMPTY	lame/ACM/tinyxml/tinyxml.h	/^		TIXML_ERROR_DOCUMENT_EMPTY,$/;"	e	enum:TiXmlBase::<anonymous>
TIXML_ERROR_FAILED_TO_READ_ELEMENT_NAME	lame/ACM/tinyxml/tinyxml.h	/^		TIXML_ERROR_FAILED_TO_READ_ELEMENT_NAME,$/;"	e	enum:TiXmlBase::<anonymous>
TIXML_ERROR_OPENING_FILE	lame/ACM/tinyxml/tinyxml.h	/^		TIXML_ERROR_OPENING_FILE,$/;"	e	enum:TiXmlBase::<anonymous>
TIXML_ERROR_OUT_OF_MEMORY	lame/ACM/tinyxml/tinyxml.h	/^		TIXML_ERROR_OUT_OF_MEMORY,$/;"	e	enum:TiXmlBase::<anonymous>
TIXML_ERROR_PARSING_COMMENT	lame/ACM/tinyxml/tinyxml.h	/^		TIXML_ERROR_PARSING_COMMENT,$/;"	e	enum:TiXmlBase::<anonymous>
TIXML_ERROR_PARSING_DECLARATION	lame/ACM/tinyxml/tinyxml.h	/^		TIXML_ERROR_PARSING_DECLARATION,$/;"	e	enum:TiXmlBase::<anonymous>
TIXML_ERROR_PARSING_ELEMENT	lame/ACM/tinyxml/tinyxml.h	/^		TIXML_ERROR_PARSING_ELEMENT,$/;"	e	enum:TiXmlBase::<anonymous>
TIXML_ERROR_PARSING_EMPTY	lame/ACM/tinyxml/tinyxml.h	/^		TIXML_ERROR_PARSING_EMPTY,$/;"	e	enum:TiXmlBase::<anonymous>
TIXML_ERROR_PARSING_UNKNOWN	lame/ACM/tinyxml/tinyxml.h	/^		TIXML_ERROR_PARSING_UNKNOWN,$/;"	e	enum:TiXmlBase::<anonymous>
TIXML_ERROR_READING_ATTRIBUTES	lame/ACM/tinyxml/tinyxml.h	/^		TIXML_ERROR_READING_ATTRIBUTES,$/;"	e	enum:TiXmlBase::<anonymous>
TIXML_ERROR_READING_ELEMENT_VALUE	lame/ACM/tinyxml/tinyxml.h	/^		TIXML_ERROR_READING_ELEMENT_VALUE,$/;"	e	enum:TiXmlBase::<anonymous>
TIXML_ERROR_READING_END_TAG	lame/ACM/tinyxml/tinyxml.h	/^		TIXML_ERROR_READING_END_TAG,$/;"	e	enum:TiXmlBase::<anonymous>
TIXML_ERROR_STRING_COUNT	lame/ACM/tinyxml/tinyxml.h	/^		TIXML_ERROR_STRING_COUNT$/;"	e	enum:TiXmlBase::<anonymous>
TIXML_LOG	lame/ACM/tinyxml/tinyxml.h	51;"	d
TIXML_LOG	lame/ACM/tinyxml/tinyxml.h	53;"	d
TIXML_NO_ERROR	lame/ACM/tinyxml/tinyxml.h	/^		TIXML_NO_ERROR = 0,$/;"	e	enum:TiXmlBase::<anonymous>
TLS_CTX	librtmp/rtmp_sys.h	107;"	d
TLS_CTX	librtmp/rtmp_sys.h	135;"	d
TLS_CTX	librtmp/rtmp_sys.h	152;"	d
TLS_accept	librtmp/rtmp_sys.h	122;"	d
TLS_accept	librtmp/rtmp_sys.h	140;"	d
TLS_accept	librtmp/rtmp_sys.h	157;"	d
TLS_client	librtmp/rtmp_sys.h	108;"	d
TLS_client	librtmp/rtmp_sys.h	136;"	d
TLS_client	librtmp/rtmp_sys.h	153;"	d
TLS_close	librtmp/rtmp_sys.h	126;"	d
TLS_close	librtmp/rtmp_sys.h	144;"	d
TLS_close	librtmp/rtmp_sys.h	161;"	d
TLS_connect	librtmp/rtmp_sys.h	121;"	d
TLS_connect	librtmp/rtmp_sys.h	139;"	d
TLS_connect	librtmp/rtmp_sys.h	156;"	d
TLS_read	librtmp/rtmp_sys.h	123;"	d
TLS_read	librtmp/rtmp_sys.h	141;"	d
TLS_read	librtmp/rtmp_sys.h	158;"	d
TLS_server	librtmp/rtmp_sys.h	113;"	d
TLS_server	librtmp/rtmp_sys.h	137;"	d
TLS_server	librtmp/rtmp_sys.h	154;"	d
TLS_setfd	librtmp/rtmp_sys.h	120;"	d
TLS_setfd	librtmp/rtmp_sys.h	138;"	d
TLS_setfd	librtmp/rtmp_sys.h	155;"	d
TLS_shutdown	librtmp/rtmp_sys.h	125;"	d
TLS_shutdown	librtmp/rtmp_sys.h	143;"	d
TLS_shutdown	librtmp/rtmp_sys.h	160;"	d
TLS_write	librtmp/rtmp_sys.h	124;"	d
TLS_write	librtmp/rtmp_sys.h	142;"	d
TLS_write	librtmp/rtmp_sys.h	159;"	d
TNS_H	libfaac/tns.h	31;"	d
TNS_MAX_ORDER	libfaac/coder.h	65;"	d
TOC_FLAG	lame/libmp3lame/VbrTag.h	45;"	d
TO_QWORD	OBSApi/Utility/XT_Windows.cpp	698;"	d	file:
TO_QWORD	OBSApi/Utility/XT_Windows.cpp	703;"	d	file:
TO_STR	QSVHelper/SupportStuff.h	57;"	d
TO_STR	QSVHelper/SupportStuff.h	68;"	d
TO_STR	Source/Encoder_QSV.cpp	46;"	d	file:
TRACE_HIVE_ERROR	libmfx/src/mfx_plugin_hive.cpp	39;"	d	file:
TRACE_HIVE_INFO	libmfx/src/mfx_plugin_hive.cpp	40;"	d	file:
TRACE_HIVE_WRN	libmfx/src/mfx_plugin_hive.cpp	41;"	d	file:
TRACE_PLUGIN_ERROR	libmfx/src/mfx_load_plugin.cpp	35;"	d	file:
TRACE_PLUGIN_INFO	libmfx/src/mfx_load_plugin.cpp	36;"	d	file:
TRACE_WINREG_ERROR	libmfx/src/mfx_win_reg_key.cpp	36;"	d	file:
TRI_SIZE	lame/libmp3lame/fft.c	51;"	d	file:
TRI_SIZE	lame/libmp3lame/vector/xmm_quantize_sub.c	45;"	d	file:
TRUE	OBSApi/Utility/Defs.h	119;"	d
TRUE	OBSApi/Utility/Defs.h	53;"	d
TRUE	Source/libnsgif.h	20;"	d
TRUE	lame/libmp3lame/util.h	45;"	d
TRUE	lame/mpglib/mpg123.h	60;"	d
TRUE	lame/mpglib/mpg123.h	75;"	d
TRUE	librtmp/amf.h	29;"	d
TSTR	OBSApi/Utility/Defs.h	/^typedef TCHAR               *TSTR;$/;"	t
TSTR	OBSApi/Utility/Defs.h	46;"	d
TTS_BALLOON	lame/ACM/AEncodeProperties.cpp	50;"	d	file:
TTS_CLAMP	scenesw/SceneSwitcher.h	28;"	d
TTS_DEFAULT	scenesw/SceneSwitcher.h	25;"	d
TTS_MAX	scenesw/SceneSwitcher.h	27;"	d
TTS_MIN	scenesw/SceneSwitcher.h	26;"	d
TURN_STEPS	lame/misc/ath.c	60;"	d	file:
TWOPI	libfaac/filtbank.c	44;"	d	file:
TYPECOUNT	lame/ACM/tinyxml/tinyxml.h	/^		TYPECOUNT$/;"	e	enum:TiXmlNode::NodeType
T_ELIF	lame/frontend/parse.c	1422;"	d	file:
T_ELIF2	lame/frontend/parse.c	1424;"	d	file:
T_ELIF_INTERNAL	lame/frontend/parse.c	1423;"	d	file:
T_ELSE	lame/frontend/parse.c	1425;"	d	file:
T_END	lame/frontend/parse.c	1426;"	d	file:
T_IF	lame/frontend/parse.c	1421;"	d	file:
TakeOwnership	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *TakeOwnership )( $/;"	m	struct:IDXGIOutput1Vtbl
TangentList	OBSApi/GraphicsSystem.h	/^    List<Vect>      TangentList;$/;"	m	struct:VBData
TargetKbps	libmfx/include/msdk/include/mfxstructures.h	/^                mfxU16  TargetKbps;$/;"	m
TargetUsage	libmfx/include/msdk/include/mfxstructures.h	/^            mfxU16  TargetUsage;$/;"	m
TargetViewId	libmfx/include/msdk/include/mfxmvc.h	/^    mfxU16 *TargetViewId;$/;"	m
Template	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public String Template { get; set; }$/;"	p	class:Shared.BrowserSourceSettings
Template.h	OBSApi/Utility/Template.h	1;"	F
TemplateEditor	CLRBrowserSourcePlugin/Plugin/SettingsPane.xaml.cs	/^        public TextEditor TemplateEditor { get; private set; }$/;"	p	class:CLRBrowserSourcePlugin.SettingsPane
TemporalComplexity	libmfx/include/msdk/include/mfxstructures.h	/^            mfxU32  TemporalComplexity;$/;"	m
TemporalId	libmfx/include/msdk/include/mfxmvc.h	/^    mfxU16 TemporalId;$/;"	m
TemporalId	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16      TemporalId;$/;"	m
TerminateSockets	Source/RTMPStuff.cpp	/^void TerminateSockets()$/;"	f
TerminateXT	OBSApi/Utility/XT.cpp	/^void STDCALL TerminateXT()$/;"	f
TexCoord	OBSApi/GraphicsSystem.cpp	/^void GraphicsSystem::TexCoord(const UVCoord &uv, int idTexture)$/;"	f	class:GraphicsSystem
TexCoord	OBSApi/GraphicsSystem.cpp	/^void GraphicsSystem::TexCoord(float u, float v, int idTexture)$/;"	f	class:GraphicsSystem
TexCoord	OBSApi/GraphicsSystem.h	/^inline void  TexCoord(const UVCoord &uv, int idTexture=0)       {GS->TexCoord(uv, idTexture);}$/;"	f
TexCoord	OBSApi/GraphicsSystem.h	/^inline void  TexCoord(float u, float v, int idTexture=0)        {GS->TexCoord(u, v, idTexture);}$/;"	f
TexCoordSetList	OBSApi/GraphicsSystem.h	/^    BitList TexCoordSetList;$/;"	m	class:GraphicsSystem
TextEncoding	lame/frontend/parse.c	/^typedef enum TextEncoding$/;"	g	file:
TextEncoding	lame/frontend/parse.c	/^} TextEncoding;$/;"	t	file:
TextOutputSource	Source/TextOutputSource.cpp	/^    inline TextOutputSource(XElement *data)$/;"	f	class:TextOutputSource
TextOutputSource	Source/TextOutputSource.cpp	/^class TextOutputSource : public ImageSource$/;"	c	file:
TextOutputSource.cpp	Source/TextOutputSource.cpp	1;"	F
Texture	CLRBrowserSourcePlugin/Plugin/BrowserSource.cs	/^            public Texture Texture { get; set; }$/;"	p	class:CLRBrowserSourcePlugin.BrowserSource.TextureDesc
Texture	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/SharedTexture.cs	/^        public Texture Texture$/;"	p	class:Browser.SharedTexture
Texture	CLRHostPlugin/CLRHostInterop/GraphicsSystem.cpp	/^CLROBS::Texture::Texture(::Texture *texture)$/;"	f	class:CLROBS::Texture
Texture	CLRHostPlugin/CLRHostInterop/GraphicsSystem.cpp	/^CLROBS::Texture::Texture(System::IntPtr texture)$/;"	f	class:CLROBS::Texture
Texture	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^    public ref class Texture$/;"	c	class:CLROBS::GSSampleFilter::GSAddressMode
Texture	OBSApi/GraphicsSystem.h	/^class BASE_EXPORT Texture : public BaseTexture$/;"	c
TextureAddressCaps	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	/^    DWORD   TextureAddressCaps;         \/\/ D3DPTADDRESSCAPS for IDirect3DTexture8's$/;"	m	struct:_D3DCAPS8
TextureCaps	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	/^    DWORD   TextureCaps;$/;"	m	struct:_D3DCAPS8
TextureDesc	CLRBrowserSourcePlugin/Plugin/BrowserSource.cs	/^        public class TextureDesc$/;"	c	class:CLRBrowserSourcePlugin.BrowserSource
TextureFilterCaps	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	/^    DWORD   TextureFilterCaps;          \/\/ D3DPTFILTERCAPS for IDirect3DTexture8's$/;"	m	struct:_D3DCAPS8
TextureInfo	OBSApi/GraphicsSystem.h	/^struct TextureInfo$/;"	s
TextureOpCaps	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	/^    DWORD   TextureOpCaps;$/;"	m	struct:_D3DCAPS8
TextureResource	QSVHelper/IntelSupport/include/d3d11_allocator.h	/^        TextureResource()$/;"	f	struct:D3D11FrameAllocator::TextureResource
TextureResource	QSVHelper/IntelSupport/include/d3d11_allocator.h	/^    struct TextureResource$/;"	s	class:D3D11FrameAllocator
TextureSubResource	QSVHelper/IntelSupport/include/d3d11_allocator.h	/^        TextureSubResource(TextureResource * pTarget = NULL, mfxMemId id = 0)$/;"	f	class:D3D11FrameAllocator::TextureSubResource
TextureSubResource	QSVHelper/IntelSupport/include/d3d11_allocator.h	/^    class TextureSubResource$/;"	c	class:D3D11FrameAllocator
The BE_CONFIG Structure	lame/Dll/LameDLLInterface.htm	/^<h1><a name="The BE_CONFIG Structure"><font size="5">The$/;"	a
Theta	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    float           Theta;            \/* Inner angle of spotlight cone *\/$/;"	m	struct:_D3DLIGHT8
ThreadCloser	OBSApi/Utility/RAIIHelpers.h	/^struct ThreadCloser$/;"	s
ThreadDeleter	OBSApi/Utility/RAIIHelpers.h	/^struct ThreadDeleter$/;"	s
ThreadPolicy	libmfx/include/msdk/include/mfxplugin.h	/^    mfxThreadPolicy ThreadPolicy;$/;"	m	struct:mfxPluginParam
ThreadProc	scenesw/SceneSwitcher.h	/^	static DWORD WINAPI ThreadProc(LPVOID pParam){return static_cast<SceneSwitcher*>(pParam)->Run();}$/;"	f	class:SceneSwitcher
ThreadTerminator	OBSApi/Utility/RAIIHelpers.h	/^struct ThreadTerminator$/;"	s
ThrowQSVInitError	Source/Encoder_QSV.cpp	/^    static void ThrowQSVInitError(CTSTR message, CTSTR localized_message, Ts... ts)$/;"	f	file:
TiXmlAttribute	lame/ACM/tinyxml/tinyxml.h	/^	TiXmlAttribute( const std::string& _name, const std::string& _value )	: name( _name ), value( _value ), prev( 0 ), next( 0 ) {}$/;"	f	class:TiXmlAttribute
TiXmlAttribute	lame/ACM/tinyxml/tinyxml.h	/^	TiXmlAttribute() : prev( 0 ), next( 0 )	{}$/;"	f	class:TiXmlAttribute
TiXmlAttribute	lame/ACM/tinyxml/tinyxml.h	/^class TiXmlAttribute : public TiXmlBase$/;"	c
TiXmlAttributeSet	lame/ACM/tinyxml/tinyxml.cpp	/^TiXmlAttributeSet::TiXmlAttributeSet()$/;"	f	class:TiXmlAttributeSet
TiXmlAttributeSet	lame/ACM/tinyxml/tinyxml.h	/^class TiXmlAttributeSet$/;"	c
TiXmlBase	lame/ACM/tinyxml/tinyxml.h	/^	TiXmlBase()								{}	$/;"	f	class:TiXmlBase
TiXmlBase	lame/ACM/tinyxml/tinyxml.h	/^class TiXmlBase$/;"	c
TiXmlComment	lame/ACM/tinyxml/tinyxml.h	/^	TiXmlComment() : TiXmlNode( TiXmlNode::COMMENT ) {}$/;"	f	class:TiXmlComment
TiXmlComment	lame/ACM/tinyxml/tinyxml.h	/^class TiXmlComment : public TiXmlNode$/;"	c
TiXmlDeclaration	lame/ACM/tinyxml/tinyxml.cpp	/^TiXmlDeclaration::TiXmlDeclaration( const std::string& _version, $/;"	f	class:TiXmlDeclaration
TiXmlDeclaration	lame/ACM/tinyxml/tinyxml.h	/^	TiXmlDeclaration()   : TiXmlNode( TiXmlNode::DECLARATION ) {}$/;"	f	class:TiXmlDeclaration
TiXmlDeclaration	lame/ACM/tinyxml/tinyxml.h	/^class TiXmlDeclaration : public TiXmlNode$/;"	c
TiXmlDocument	lame/ACM/tinyxml/tinyxml.cpp	/^TiXmlDocument::TiXmlDocument( const std::string& documentName ) : TiXmlNode( TiXmlNode::DOCUMENT )$/;"	f	class:TiXmlDocument
TiXmlDocument	lame/ACM/tinyxml/tinyxml.cpp	/^TiXmlDocument::TiXmlDocument() : TiXmlNode( TiXmlNode::DOCUMENT )$/;"	f	class:TiXmlDocument
TiXmlDocument	lame/ACM/tinyxml/tinyxml.h	/^class TiXmlDocument : public TiXmlNode$/;"	c
TiXmlElement	lame/ACM/tinyxml/tinyxml.cpp	/^TiXmlElement::TiXmlElement( const std::string& _value ) $/;"	f	class:TiXmlElement
TiXmlElement	lame/ACM/tinyxml/tinyxml.h	/^class TiXmlElement : public TiXmlNode$/;"	c
TiXmlNode	lame/ACM/tinyxml/tinyxml.cpp	/^TiXmlNode::TiXmlNode( NodeType _type )$/;"	f	class:TiXmlNode
TiXmlNode	lame/ACM/tinyxml/tinyxml.h	/^class TiXmlNode : public TiXmlBase$/;"	c
TiXmlText	lame/ACM/tinyxml/tinyxml.h	/^	TiXmlText( const std::string& initValue )  : TiXmlNode( TiXmlNode::TEXT ) { SetValue( initValue ); }$/;"	f	class:TiXmlText
TiXmlText	lame/ACM/tinyxml/tinyxml.h	/^class TiXmlText : public TiXmlNode$/;"	c
TiXmlUnknown	lame/ACM/tinyxml/tinyxml.h	/^	TiXmlUnknown() : TiXmlNode( TiXmlNode::UNKNOWN ) {}$/;"	f	class:TiXmlUnknown
TiXmlUnknown	lame/ACM/tinyxml/tinyxml.h	/^class TiXmlUnknown : public TiXmlNode$/;"	c
Tick	CLRHostPlugin/CLRHostInterop/AbstractImageSource.cpp	/^void AbstractImageSource::Tick(float fSeconds) $/;"	f	class:AbstractImageSource
Tick	CLRHostPlugin/CLRHostPlugin/CLRImageSource.cpp	/^void CLRImageSource::Tick(float seconds)$/;"	f	class:CLRImageSource
Tick	CLRHostPlugin/CLRHostPlugin/ImageSourceBridge.h	/^    virtual void Tick(float fSeconds)$/;"	f	class:ImageSourceBridge
Tick	GraphicsCapture/GraphicsCaptureSource.cpp	/^void GraphicsCaptureSource::Tick(float fSeconds)$/;"	f	class:GraphicsCaptureSource
Tick	OBSApi/Scene.cpp	/^void Scene::Tick(float fSeconds)$/;"	f	class:Scene
Tick	OBSApi/Scene.h	/^    virtual void Tick(float fSeconds) {}$/;"	f	class:ImageSource
Tick	Source/BitmapImage.cpp	/^void BitmapImage::Tick(float fSeconds)$/;"	f	class:BitmapImage
Tick	Source/BitmapImageSource.cpp	/^    void Tick(float fSeconds)$/;"	f	class:BitmapImageSource
Tick	Source/BitmapTransitionSource.cpp	/^    void Tick(float fSeconds)$/;"	f	class:BitmapTransitionSource
Tick	Source/DesktopImageSource.cpp	/^    void Tick(float fSeconds)$/;"	f	class:DesktopImageSource
Tick	Source/TextOutputSource.cpp	/^    void Tick(float fSeconds)$/;"	f	class:TextOutputSource
TickList	OBSApi/Utility/XT.cpp	/^SafeList<DWORD>         TickList;$/;"	v
Tidy	libmfx/src/mfx_load_plugin.cpp	/^void MFX::PluginModule::Tidy()$/;"	f	class:MFX::PluginModule
TimeOffset	libmfx/include/msdk/include/mfxstructures.h	/^      mfxU32    TimeOffset;$/;"	m
TimeStamp	libmfx/include/msdk/include/mfxastructures.h	/^    mfxU64  TimeStamp; \/* 1\/90KHz *\/$/;"	m
TimeStamp	libmfx/include/msdk/include/mfxcommon.h	/^    mfxU64  TimeStamp;$/;"	m
TimeStamp	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU64      TimeStamp;$/;"	m
TimeStamp	libmfx/include/msdk/include/mfxstructures.h	/^  } TimeStamp[3];$/;"	m
TimeStampCalc	libmfx/include/msdk/include/mfxstructures.h	/^            mfxU16  TimeStampCalc;$/;"	m
TimedPacket	Source/OBS.h	/^struct TimedPacket$/;"	s
TnsDecodeFilterOnly	libfaac/tns.c	/^void TnsDecodeFilterOnly(TnsInfo* tnsInfo,           \/* TNS info *\/$/;"	f
TnsEncode	libfaac/tns.c	/^void TnsEncode(TnsInfo* tnsInfo,       \/* TNS info *\/$/;"	f
TnsEncodeFilterOnly	libfaac/tns.c	/^void TnsEncodeFilterOnly(TnsInfo* tnsInfo,           \/* TNS info *\/$/;"	f
TnsFilter	libfaac/tns.c	/^static void TnsFilter(int length,double* spec,TnsFilterData* filter)$/;"	f	file:
TnsFilterData	libfaac/coder.h	/^} TnsFilterData;$/;"	t
TnsInfo	libfaac/coder.h	/^} TnsInfo;$/;"	t
TnsInit	libfaac/tns.c	/^void TnsInit(faacEncHandle hEncoder)$/;"	f
TnsInvFilter	libfaac/tns.c	/^static void TnsInvFilter(int length,double* spec,TnsFilterData* filter)$/;"	f	file:
TnsWindowData	libfaac/coder.h	/^} TnsWindowData;$/;"	t
ToComment	lame/ACM/tinyxml/tinyxml.h	/^	TiXmlComment*  ToComment() const		{ return ( this && type == COMMENT  ) ? (TiXmlComment*)  this : 0; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlNode
ToDeclaration	lame/ACM/tinyxml/tinyxml.h	/^	TiXmlDeclaration* ToDeclaration() const	{ return ( this && type == DECLARATION ) ? (TiXmlDeclaration*) this : 0; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlNode
ToDocument	lame/ACM/tinyxml/tinyxml.h	/^	TiXmlDocument* ToDocument()	const		{ return ( this && type == DOCUMENT ) ? (TiXmlDocument*) this : 0; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlNode
ToElement	lame/ACM/tinyxml/tinyxml.h	/^	TiXmlElement*  ToElement() const		{ return ( this && type == ELEMENT  ) ? (TiXmlElement*)  this : 0; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlNode
ToFloat	OBSApi/Utility/XString.h	/^    inline float ToFloat() const$/;"	f	class:String
ToInt	OBSApi/Utility/XString.h	/^    inline int ToInt(int base=10) const$/;"	f	class:String
ToText	lame/ACM/tinyxml/tinyxml.h	/^	TiXmlText*	   ToText()    const		{ return ( this && type == TEXT     ) ? (TiXmlText*)     this : 0; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlNode
ToUnknown	lame/ACM/tinyxml/tinyxml.h	/^	TiXmlUnknown*  ToUnknown() const		{ return ( this && type == UNKNOWN  ) ? (TiXmlUnknown*)  this : 0; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlNode
ToggleCapturing	Source/OBSCapture.cpp	/^void OBS::ToggleCapturing()$/;"	f	class:OBS
ToggleDesktopMute	Source/API.cpp	/^    virtual void ToggleDesktopMute()                                 {App->ToggleDesktopMute();}$/;"	f	class:OBSAPIInterface
ToggleDesktopMute	Source/API.cpp	/^void OBS::ToggleDesktopMute()$/;"	f	class:OBS
ToggleHotkeyProc	scenesw/SceneSwitcher.h	/^    OBSHOTKEYPROC ToggleHotkeyProc;$/;"	m	class:SceneSwitcherSettings
ToggleMessageVisibility	UpgradeLog.htm	/^/;"	f
ToggleMicMute	Source/API.cpp	/^    virtual void ToggleMicMute()                                     {App->ToggleMicMute();}$/;"	f	class:OBSAPIInterface
ToggleMicMute	Source/API.cpp	/^void OBS::ToggleMicMute()$/;"	f	class:OBS
ToggleRecording	Source/OBSCapture.cpp	/^void OBS::ToggleRecording()$/;"	f	class:OBS
ToggleReplayBuffer	Source/OBSCapture.cpp	/^void OBS::ToggleReplayBuffer()$/;"	f	class:OBS
ToggleVolumeControlMute	OBSApi/VolumeControl.cpp	/^float ToggleVolumeControlMute(HWND hwnd)$/;"	f
TokenPrecedence	Source/CodeTokenizer.cpp	/^static const int TokenPrecedence[NUMCLOSINGTOKENS] = {0,  1,  2,  2,  2,$/;"	v	file:
ToolTipItem	lame/ACM/AEncodeProperties.h	/^} ToolTipItem;$/;"	t
Tooltips	lame/ACM/AEncodeProperties.cpp	/^ToolTipItem AEncodeProperties::Tooltips[13]={$/;"	m	class:AEncodeProperties	file:
Tooltips	lame/ACM/AEncodeProperties.h	/^	static ToolTipItem Tooltips[13];$/;"	m	class:AEncodeProperties
Top	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    UINT                Top;$/;"	m	struct:_D3DBOX
Top	libmfx/include/msdk/include/mfxstructures.h	/^        mfxU32  Top;$/;"	m
TotalBytes	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    DWORD   TotalBytes;             \/* total number of bytes of managed objects *\/$/;"	m	struct:_D3DRESOURCESTATS
TotalFrameSize	lame/libmp3lame/util.h	/^        unsigned int TotalFrameSize;$/;"	m
TotalManaged	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    DWORD   TotalManaged;           \/* total number of managed objects *\/$/;"	m	struct:_D3DRESOURCESTATS
TotalMetadataBufferSize	extras/dxgi1_2.h	/^    UINT TotalMetadataBufferSize;$/;"	m	struct:DXGI_OUTDUPL_FRAME_INFO
TraceCrash	OBSApi/Utility/XT.cpp	/^void STDCALL TraceCrash(const TCHAR *trackName)$/;"	f
TraceCrashEnd	OBSApi/Utility/XT.cpp	/^void STDCALL TraceCrashEnd()$/;"	f
TraceFuncList	OBSApi/Utility/XT.cpp	/^StringList              TraceFuncList;$/;"	v
TrackModifyListbox	Source/WindowStuff.cpp	/^void OBS::TrackModifyListbox(HWND hwnd, int ret)$/;"	f	class:OBS
TransferCharacteristics	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16          TransferCharacteristics;$/;"	m
TransferFrom	OBSApi/Utility/Template.h	/^    inline void TransferFrom(BitList &from)$/;"	f	class:BitList
TransferFrom	OBSApi/Utility/Template.h	/^    inline void TransferFrom(List<T>& list)$/;"	f	class:List
TransferFrom	OBSApi/Utility/Template.h	/^    inline void TransferFrom(T *arrayIn, UINT numIn)$/;"	f	class:List
TransferMatrix	libmfx/include/msdk/include/mfxstructures.h	/^        mfxU16  TransferMatrix;$/;"	m
TransferTo	OBSApi/Utility/Template.h	/^    inline void TransferTo(List<T>& list)$/;"	f	class:List
TransferTo	OBSApi/Utility/Template.h	/^    inline void TransferTo(T *&arrayIn, UINT &numIn)$/;"	f	class:List
Transform	OBSApi/Utility/XMath.cpp	/^Bounds& Bounds::Transform(const Matrix &m)$/;"	f	class:Bounds
Transform	OBSApi/Utility/XMath.cpp	/^Plane& Plane::Transform(const Matrix &m)$/;"	f	class:Plane
TransformNoRot	OBSApi/Utility/XMath.cpp	/^Bounds& Bounds::TransformNoRot(const Matrix &m)$/;"	f	class:Bounds
TransformPoint	OBSApi/Utility/XMath.h	/^inline Vect& Vect::TransformPoint(const Matrix &m)$/;"	f	class:Vect
TransformVector	OBSApi/Utility/XMath.h	/^inline Vect& Vect::TransformVector(const Matrix &m)$/;"	f	class:Vect
TransitionsEnabled	Source/API.cpp	/^    virtual bool TransitionsEnabled() const    { return App->performTransition; }$/;"	f	class:OBSAPIInterface
Translate	OBSApi/Utility/XMath.h	/^    inline Matrix& Translate(const Vect &v)$/;"	f	struct:Matrix
Transpose	OBSApi/Utility/XMath.h	/^    inline Matrix& Transpose()$/;"	f	struct:Matrix
Trellis	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16      Trellis;$/;"	m
TriInside	OBSApi/Utility/XMath.h	/^    inline int TriInside(const Vect &p1, const Vect &p2, const Vect &p3, float precision=LARGE_EPSILON) const$/;"	f	struct:Plane
TriangleArea	OBSApi/Utility/XMath.h	/^inline float TriangleArea(const Vect &v0, const Vect &v1, const Vect &v2)$/;"	f
TripleToLong	OBSApi/AudioSource.cpp	/^union TripleToLong$/;"	u	file:
TruncateCoeffs	libfaac/tns.c	/^static int TruncateCoeffs(int fOrder,double threshold,double* kArray)$/;"	f	file:
TryGetBrowser	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserManager.cs	/^        public bool TryGetBrowser(int browserIdentifier, out BrowserWrapper browserWrapper)$/;"	m	class:Browser.BrowserManager
Type	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DLIGHTTYPE    Type;            \/* Type of light source *\/$/;"	m	struct:_D3DLIGHT8
Type	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRESOURCETYPE     Type;$/;"	m	struct:_D3DINDEXBUFFER_DESC
Type	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRESOURCETYPE     Type;$/;"	m	struct:_D3DSURFACE_DESC
Type	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRESOURCETYPE     Type;$/;"	m	struct:_D3DVERTEXBUFFER_DESC
Type	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRESOURCETYPE     Type;$/;"	m	struct:_D3DVOLUME_DESC
Type	extras/dxgi1_2.h	/^    UINT Type;$/;"	m	struct:DXGI_OUTDUPL_POINTER_SHAPE_INFO
Type	lame/ACM/tinyxml/tinyxml.h	/^	virtual int Type() const	{ return type; }$/;"	f	class:TiXmlNode
Type	libmfx/include/msdk/include/mfxplugin.h	/^    mfxU32  Type;$/;"	m	struct:mfxPluginParam
Type	libmfx/include/msdk/include/mfxstructures.h	/^        mfxU16  Type;$/;"	m
Type	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16      Type;       \/* SEI message type in H.264 or user data start_code in MPEG-2 *\/$/;"	m
Type	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16  Type;   \/* decoder or processor render targets *\/$/;"	m
Type definitions	lame/Dll/LameDLLInterface.htm	/^<h1><a name="Type definitions"><font size="5">Type definitions<\/font><\/a><\/h1>$/;"	a
TypeKeyName	libmfx/src/mfx_plugin_hive.cpp	/^    const wchar_t TypeKeyName[] = L"Type";$/;"	v
U	lame/ACM/ADbg/Makefile	/^U = $/;"	m
U	lame/ACM/Makefile	/^U = $/;"	m
U	lame/ACM/ddk/Makefile	/^U = $/;"	m
U	lame/ACM/tinyxml/Makefile	/^U = $/;"	m
U	lame/Dll/Makefile	/^U = $/;"	m
U	lame/Makefile	/^U = $/;"	m
U	lame/debian/Makefile	/^U = $/;"	m
U	lame/doc/Makefile	/^U = $/;"	m
U	lame/doc/html/Makefile	/^U = $/;"	m
U	lame/doc/man/Makefile	/^U = $/;"	m
U	lame/dshow/Makefile	/^U = $/;"	m
U	lame/frontend/Makefile	/^U = $/;"	m
U	lame/include/Makefile	/^U = $/;"	m
U	lame/libmp3lame/Makefile	/^U = $/;"	m
U	lame/libmp3lame/i386/Makefile	/^U = $/;"	m
U	lame/libmp3lame/vector/Makefile	/^U = $/;"	m
U	lame/mac/Makefile	/^U = $/;"	m
U	lame/macosx/English.lproj/Makefile	/^U = $/;"	m
U	lame/macosx/LAME.xcodeproj/Makefile	/^U = $/;"	m
U	lame/macosx/Makefile	/^U = $/;"	m
U	lame/misc/Makefile	/^U = $/;"	m
U	lame/mpglib/Makefile	/^U = $/;"	m
U	lame/vc_solution/Makefile	/^U = $/;"	m
U	libmfx/include/msdk/include/mfxstructures.h	/^        mfxU16   U;$/;"	m
U	libmfx/include/msdk/include/mfxstructures.h	/^        mfxU8   *U;$/;"	m
U16	libmfx/include/msdk/include/mfxstructures.h	/^        mfxU16  *U16;$/;"	m
UCHAR	OBSApi/Utility/Defs.h	/^typedef unsigned char       UCHAR,BYTE,*LPBYTE;$/;"	t
UCHAR	OBSApi/Utility/Defs.h	30;"	d
UHWHEXPROC	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	/^typedef BOOL (WINAPI *UHWHEXPROC)(HHOOK);$/;"	t	file:
UIDS.H	lame/dshow/UIDS.H	1;"	F
UINT	OBSApi/Utility/Defs.h	/^typedef unsigned int        UINT,*LPUINT;$/;"	t
UINT	OBSApi/Utility/Defs.h	22;"	d
UINT16	OBSApi/Utility/Defs.h	/^typedef unsigned short      UINT16;$/;"	t
UINT16_C	extras/stdint.h	193;"	d
UINT16_C	lame/stdint.h	193;"	d
UINT16_C	librtmp/stdint.h	192;"	d
UINT16_C	minhook/src/pstdint.h	261;"	d
UINT16_C	minhook/src/pstdint.h	339;"	d
UINT16_C	minhook/src/pstdint.h	342;"	d
UINT16_MAX	extras/stdint.h	82;"	d
UINT16_MAX	lame/stdint.h	82;"	d
UINT16_MAX	librtmp/stdint.h	81;"	d
UINT16_MAX	minhook/src/pstdint.h	331;"	d
UINT32_C	extras/stdint.h	194;"	d
UINT32_C	lame/stdint.h	194;"	d
UINT32_C	librtmp/stdint.h	193;"	d
UINT32_C	minhook/src/pstdint.h	255;"	d
UINT32_C	minhook/src/pstdint.h	381;"	d
UINT32_C	minhook/src/pstdint.h	390;"	d
UINT32_C	minhook/src/pstdint.h	393;"	d
UINT32_MAX	extras/stdint.h	83;"	d
UINT32_MAX	lame/stdint.h	83;"	d
UINT32_MAX	librtmp/stdint.h	82;"	d
UINT32_MAX	minhook/src/pstdint.h	276;"	d
UINT32_MAX	minhook/src/pstdint.h	376;"	d
UINT64	OBSApi/Utility/Defs.h	/^typedef unsigned long long  QWORD,ULONG64,UINT64,ULONGLONG;$/;"	t
UINT64_C	extras/stdint.h	195;"	d
UINT64_C	lame/stdint.h	195;"	d
UINT64_C	librtmp/stdint.h	194;"	d
UINT64_C	minhook/src/pstdint.h	249;"	d
UINT64_C	minhook/src/pstdint.h	445;"	d
UINT64_C	minhook/src/pstdint.h	458;"	d
UINT64_C	minhook/src/pstdint.h	467;"	d
UINT64_C	minhook/src/pstdint.h	476;"	d
UINT64_MAX	extras/stdint.h	84;"	d
UINT64_MAX	lame/stdint.h	84;"	d
UINT64_MAX	librtmp/stdint.h	83;"	d
UINT64_MAX	minhook/src/pstdint.h	270;"	d
UINT64_MAX	minhook/src/pstdint.h	498;"	d
UINT8	OBSApi/Utility/Defs.h	/^typedef unsigned char       UINT8;$/;"	t
UINT8_C	extras/stdint.h	192;"	d
UINT8_C	lame/stdint.h	192;"	d
UINT8_C	librtmp/stdint.h	191;"	d
UINT8_C	minhook/src/pstdint.h	267;"	d
UINT8_C	minhook/src/pstdint.h	309;"	d
UINT8_MAX	extras/stdint.h	81;"	d
UINT8_MAX	lame/stdint.h	81;"	d
UINT8_MAX	librtmp/stdint.h	80;"	d
UINT8_MAX	minhook/src/pstdint.h	304;"	d
UINTMAX_C	extras/stdint.h	199;"	d
UINTMAX_C	lame/stdint.h	199;"	d
UINTMAX_C	librtmp/stdint.h	198;"	d
UINTMAX_C	minhook/src/pstdint.h	543;"	d
UINTMAX_C	minhook/src/pstdint.h	559;"	d
UINTMAX_MAX	extras/stdint.h	133;"	d
UINTMAX_MAX	lame/stdint.h	133;"	d
UINTMAX_MAX	librtmp/stdint.h	132;"	d
UINTMAX_MAX	minhook/src/pstdint.h	542;"	d
UINTMAX_MAX	minhook/src/pstdint.h	558;"	d
UINTPTR_C	minhook/src/pstdint.h	708;"	d
UINTPTR_MAX	extras/stdint.h	123;"	d
UINTPTR_MAX	extras/stdint.h	127;"	d
UINTPTR_MAX	lame/stdint.h	123;"	d
UINTPTR_MAX	lame/stdint.h	127;"	d
UINTPTR_MAX	librtmp/stdint.h	122;"	d
UINTPTR_MAX	librtmp/stdint.h	126;"	d
UINTPTR_MAX	minhook/src/pstdint.h	696;"	d
UINT_FAST16_MAX	extras/stdint.h	114;"	d
UINT_FAST16_MAX	lame/stdint.h	114;"	d
UINT_FAST16_MAX	librtmp/stdint.h	113;"	d
UINT_FAST16_MAX	minhook/src/pstdint.h	627;"	d
UINT_FAST32_MAX	extras/stdint.h	115;"	d
UINT_FAST32_MAX	lame/stdint.h	115;"	d
UINT_FAST32_MAX	librtmp/stdint.h	114;"	d
UINT_FAST32_MAX	minhook/src/pstdint.h	629;"	d
UINT_FAST64_MAX	extras/stdint.h	116;"	d
UINT_FAST64_MAX	lame/stdint.h	116;"	d
UINT_FAST64_MAX	librtmp/stdint.h	115;"	d
UINT_FAST64_MAX	minhook/src/pstdint.h	637;"	d
UINT_FAST8_MAX	extras/stdint.h	113;"	d
UINT_FAST8_MAX	lame/stdint.h	113;"	d
UINT_FAST8_MAX	librtmp/stdint.h	112;"	d
UINT_FAST8_MAX	minhook/src/pstdint.h	625;"	d
UINT_LEAST16_MAX	extras/stdint.h	98;"	d
UINT_LEAST16_MAX	lame/stdint.h	98;"	d
UINT_LEAST16_MAX	librtmp/stdint.h	97;"	d
UINT_LEAST16_MAX	minhook/src/pstdint.h	590;"	d
UINT_LEAST32_MAX	extras/stdint.h	99;"	d
UINT_LEAST32_MAX	lame/stdint.h	99;"	d
UINT_LEAST32_MAX	librtmp/stdint.h	98;"	d
UINT_LEAST32_MAX	minhook/src/pstdint.h	592;"	d
UINT_LEAST64_MAX	extras/stdint.h	100;"	d
UINT_LEAST64_MAX	lame/stdint.h	100;"	d
UINT_LEAST64_MAX	librtmp/stdint.h	99;"	d
UINT_LEAST64_MAX	minhook/src/pstdint.h	601;"	d
UINT_LEAST8_MAX	extras/stdint.h	97;"	d
UINT_LEAST8_MAX	lame/stdint.h	97;"	d
UINT_LEAST8_MAX	librtmp/stdint.h	96;"	d
UINT_LEAST8_MAX	minhook/src/pstdint.h	588;"	d
UInt64String	OBSApi/Utility/XString.cpp	/^String UInt64String(UINT64 i, int radix)$/;"	f
UIntString	OBSApi/Utility/XString.cpp	/^String UIntString(unsigned int ui, int radix)$/;"	f
ULONG	OBSApi/Utility/Defs.h	/^typedef unsigned long       ULONG,DWORD,*LPDWORD;$/;"	t
ULONG	OBSApi/Utility/Defs.h	24;"	d
ULONG64	OBSApi/Utility/Defs.h	/^typedef unsigned long long  QWORD,ULONG64,UINT64,ULONGLONG;$/;"	t
ULONG64	OBSApi/Utility/Defs.h	51;"	d
ULONGLONG	OBSApi/Utility/Defs.h	/^typedef unsigned long long  QWORD,ULONG64,UINT64,ULONGLONG;$/;"	t
ULONG_LONG_MAX	minhook/src/pstdint.h	488;"	d
ULONG_PTR	lame/ACM/ddk/msacmdrv.h	/^typedef  unsigned long ULONG_PTR, *PULONG_PTR;$/;"	t
UNICODE	Source/Server.h	2;"	d
UNICODE	Source/mongoose.c	43;"	d	file:
UNKNOWN	lame/ACM/tinyxml/tinyxml.h	/^		UNKNOWN, $/;"	e	enum:TiXmlNode::NodeType
UNLOADPLUGINPROC	Source/OBS.cpp	/^typedef void (*UNLOADPLUGINPROC)();$/;"	t	file:
UNREFERENCED_PARAMETER	QSVHelper/IntelSupport/include/sample_defs.h	84;"	d
UNSIGNED_TO_FLOAT	lame/frontend/get_audio.c	99;"	d	file:
UNUSED	libsamplerate/common.h	54;"	d
UNUSED	libsamplerate/common.h	56;"	d
UNUSED	libsamplerate/common.h	58;"	d
UPARAM	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.h	/^typedef unsigned __int64 UPARAM;$/;"	t
UPARAM	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.h	/^typedef unsigned long UPARAM;$/;"	t
UPARAM	OBSApi/Utility/Defs.h	/^typedef unsigned long       UPARAM;$/;"	t
UPARAM	OBSApi/Utility/Defs.h	/^typedef unsigned long long  UPARAM;$/;"	t
UPARAM	injectHelper/injectHelper.c	/^typedef unsigned __int64 UPARAM;$/;"	t	file:
UPARAM	injectHelper/injectHelper.c	/^typedef unsigned long UPARAM;$/;"	t	file:
UPDATER_PATH	Source/Updater.cpp	117;"	d	file:
UPDATE_ARG_SUFFIX	Source/Updater.cpp	464;"	d	file:
UPDATE_ARG_SUFFIX	Source/Updater.cpp	466;"	d	file:
URL_REWRITES	Source/mongoose.c	/^  URL_REWRITES,$/;"	e	file:
USE_64BIT_MP4	Source/MP4FileStream.cpp	58;"	d	file:
USE_AAC	Source/Main.h	37;"	d
USE_DXGI1_2	Source/Main.h	48;"	d
USE_FAST_LOG	lame/config.h	50;"	d
USE_FAST_LOG	lame/configMS.h	50;"	d
USE_NICE	lame/misc/abx.c	47;"	d	file:
USE_REALTIME	lame/misc/abx.c	50;"	d	file:
USE_SSE	OBSApi/Utility/XT.h	46;"	d
USE_TRACE	OBSApi/OBSApi.h	36;"	d
USE_TRACE	OBSApi/Utility/XT_Windows.h	49;"	d
USE_TRACE	OBSApi/Utility/XT_Windows.h	52;"	d
USHORT	OBSApi/Utility/Defs.h	/^typedef unsigned short      USHORT,WORD,*LPWORD;$/;"	t
USHORT	OBSApi/Utility/Defs.h	27;"	d
UTF32	OBSApi/Utility/XString.cpp	29;"	d	file:
UTF8_DONT_SKIP_BOM	OBSApi/Utility/utf8.h	23;"	d
UTF8_IGNORE_ERROR	OBSApi/Utility/utf8.h	22;"	d
UTIL_H	libfaac/util.h	23;"	d
UV	libmfx/include/msdk/include/mfxstructures.h	/^        mfxU8   *UV;            \/* for UV merged formats *\/$/;"	m
UVBuffers	Source/D3D10System.h	/^    List<ID3D10Buffer*> UVBuffers;$/;"	m	class:D3D10VertexBuffer
UVCoord	OBSApi/Utility/XMath.h	/^typedef Vect2 UVCoord;$/;"	t
UVCoordList	OBSApi/GraphicsSystem.h	/^class UVCoordList : public List<UVCoord> {};$/;"	c
UVList	OBSApi/GraphicsSystem.h	/^    List<UVCoordList> UVList;$/;"	m	struct:VBData
UVSizes	Source/D3D10System.h	/^    List<UINT> UVSizes;$/;"	m	class:D3D10VertexBuffer
UVWCoord	OBSApi/Utility/XMath.h	/^typedef Vect Color3, UVWCoord, Vect3;$/;"	t
UV_offset	QSVHelper/IPCStructs.h	/^             UV_offset,$/;"	m	struct:init_response
UiConfig	lame/frontend/main.h	/^typedef struct UiConfig$/;"	s
UiConfig	lame/frontend/main.h	/^} UiConfig;$/;"	t
UnLoadSelectedDLL	libmfx/src/mfx_dispatcher.cpp	/^mfxStatus MFX_DISP_HANDLE::UnLoadSelectedDLL(void)$/;"	f	class:MFX_DISP_HANDLE
UnMapDesktopSurface	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *UnMapDesktopSurface )( $/;"	m	struct:IDXGIOutputDuplicationVtbl
UncaughtExceptionStackSize	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public int UncaughtExceptionStackSize { get; set; }$/;"	p	class:Shared.BrowserRuntimeSettings
Unfreeze	minhook/src/thread.cpp	/^	void ScopedThreadExclusive::Unfreeze(const std::vector<DWORD>& threads)$/;"	f	class:MinHook::ScopedThreadExclusive
Unhook	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.h	/^    inline void Unhook()$/;"	f	class:HookData
UnhookAll	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	/^void UnhookAll()$/;"	f
UninitClient	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserWrapper.cs	/^        private void UninitClient()$/;"	m	class:Browser.BrowserWrapper	file:
Uninitialize	minhook/src/hook.cpp	/^	MH_STATUS Uninitialize()$/;"	f	namespace:MinHook
UninitializeBuffer	minhook/src/buffer.cpp	/^	void UninitializeBuffer()$/;"	f	namespace:MinHook
UniqueResponse	QSVHelper/IntelSupport/include/base_allocator.h	/^        UniqueResponse()$/;"	f	struct:BaseFrameAllocator::UniqueResponse
UniqueResponse	QSVHelper/IntelSupport/include/base_allocator.h	/^        UniqueResponse(const mfxFrameAllocResponse & response, mfxU16 cropw, mfxU16 croph, mfxU16 type)$/;"	f	struct:BaseFrameAllocator::UniqueResponse
UniqueResponse	QSVHelper/IntelSupport/include/base_allocator.h	/^    struct UniqueResponse$/;"	s	class:BaseFrameAllocator
UniversalAccessFromFileUrls	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public CefState UniversalAccessFromFileUrls { get; set; }$/;"	p	class:Shared.BrowserInstanceSettings
UnloadAllData	Source/D3D10System.cpp	/^void D3D10System::UnloadAllData()$/;"	f	class:D3D10System
UnloadDLLModule	libmfx/src/mfx_dxva2_device.cpp	/^void DXDevice::UnloadDLLModule(void)$/;"	f	class:DXDevice
UnloadFilters	DShowPlugin/DeviceSource.cpp	/^void DeviceSource::UnloadFilters()$/;"	f	class:DeviceSource
UnloadPlugin	CLRBrowserSourcePlugin/Plugin/CLRBrowserSourcePlugin.cs	/^        public override void UnloadPlugin()$/;"	m	class:CLRBrowserSourcePlugin.CLRBrowserSourcePlugin
UnloadPlugin	CLRHostPlugin/CLRHostInterop/AbstractPlugin.h	/^        virtual void UnloadPlugin() {};$/;"	f	class:CLROBS::abstract
UnloadPlugin	CLRHostPlugin/CLRHostPlugin/CLRHostPlugin.cpp	/^void UnloadPlugin()$/;"	f
UnloadPlugin	CLRHostPlugin/CLRHostPlugin/CLRPlugin.cpp	/^void CLRPlugin::UnloadPlugin()$/;"	f	class:CLRPlugin
UnloadPlugin	DShowPlugin/DShowPlugin.cpp	/^void UnloadPlugin()$/;"	f
UnloadPlugin	GraphicsCapture/GraphicsCapture.cpp	/^void UnloadPlugin()$/;"	f
UnloadPlugin	NoiseGate/NoiseGate.cpp	/^void UnloadPlugin()$/;"	f
UnloadPlugin	PSVPlugin/psvplugin.cpp	/^void UnloadPlugin()$/;"	f
UnloadPlugin	scenesw/scenesw.cpp	/^void UnloadPlugin()$/;"	f
UnloadPlugins	CLRHostPlugin/CLRHostPlugin/CLRHost.cpp	/^CLRHost::UnloadPlugins()$/;"	f	class:CLRHost
UnloadPlugins	CLRHostPlugin/CLRHostPlugin/CLRHostPlugin.cpp	/^void CLRHostPlugin::UnloadPlugins()$/;"	f	class:CLRHostPlugin
Unlock	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	/^HRESULT STDMETHODCALLTYPE Unlock(LPDIRECTDRAWSURFACE7 surface, LPRECT data)$/;"	f
Unlock	libmfx/include/msdk/include/mfxvideo.h	/^    mfxStatus  (MFX_CDECL  *Unlock)   (mfxHDL pthis, mfxMemId mid, mfxFrameData *ptr);$/;"	m
Unlock	libmfx/include/msdk/include/mfxvideo.h	/^    mfxStatus  (MFX_CDECL *Unlock)   (mfxHDL pthis, mfxMemId mid);$/;"	m
UnlockFrame	QSVHelper/IntelSupport/src/d3d11_allocator.cpp	/^mfxStatus D3D11FrameAllocator::UnlockFrame(mfxMemId mid, mfxFrameData *ptr)$/;"	f	class:D3D11FrameAllocator
UnlockSurface	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	/^inline HRESULT STDMETHODCALLTYPE UnlockSurface(LPDIRECTDRAWSURFACE7 surface, LPRECT data)$/;"	f
UnlockSurfaces	QSVHelper/Encoder.h	/^    void UnlockSurfaces()$/;"	f	struct:Encoder
UnlockTexture	GraphicsCapture/MemoryCapture.cpp	/^void MemoryCapture::UnlockTexture()$/;"	f	class:MemoryCapture
UnlockTexture	GraphicsCapture/SharedTexCapture.cpp	/^void SharedTexCapture::UnlockTexture()$/;"	f	class:SharedTexCapture
UnlockTexture	GraphicsCapture/WindowCapture.cpp	/^void WindowCapture::UnlockTexture()$/;"	f	class:WindowCapture
Unlock_	QSVHelper/IntelSupport/src/base_allocator.cpp	/^mfxStatus MFXBufferAllocator::Unlock_(mfxHDL pthis, mfxMemId mid)$/;"	f	class:MFXBufferAllocator
Unlock_	QSVHelper/IntelSupport/src/base_allocator.cpp	/^mfxStatus MFXFrameAllocator::Unlock_(mfxHDL pthis, mfxMemId mid, mfxFrameData *ptr)$/;"	f	class:MFXFrameAllocator
Unmap	Source/D3D10Texture.cpp	/^void D3D10Texture::Unmap()$/;"	f	class:D3D10Texture
Unmap	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *Unmap )( $/;"	m	struct:IDXGISurface2Vtbl
UnmapOpaqueSurface	libmfx/include/msdk/include/mfxplugin++.h	/^    mfxStatus UnmapOpaqueSurface(mfxU32  num, mfxU32  type, mfxFrameSurface1 **op_surf) {$/;"	f	class:MFXCoreInterface
UnmapOpaqueSurface	libmfx/include/msdk/include/mfxplugin.h	/^    mfxStatus (MFX_CDECL *UnmapOpaqueSurface)(mfxHDL pthis, mfxU32  num, mfxU32  type, mfxFrameSurface1 **op_surf);$/;"	m	struct:mfxCoreInterface
Unregister	libmfx/include/msdk/include/mfxplugin++.h	/^    virtual mfxStatus Unregister(mfxU32 type) {$/;"	f	class:MFXVideoUSER
UnregisterBrowser	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserManager.cs	/^        public void UnregisterBrowser(int browserIdentifier)$/;"	m	class:Browser.BrowserManager
UnregisterOcclusionStatus	extras/dxgi1_2.h	/^        void ( STDMETHODCALLTYPE *UnregisterOcclusionStatus )( $/;"	m	struct:IDXGIFactory2Vtbl
UnregisterStereoStatus	extras/dxgi1_2.h	/^        void ( STDMETHODCALLTYPE *UnregisterStereoStatus )( $/;"	m	struct:IDXGIFactory2Vtbl
Update	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserManager.cs	/^        public void Update()$/;"	m	class:Browser.BrowserManager
Update	OBSApi/Scene.cpp	/^void SceneItem::Update()$/;"	f	class:SceneItem
UpdateAudioMeters	Source/OBS.cpp	/^void OBS::UpdateAudioMeters()$/;"	f	class:OBS
UpdateConfigs	lame/ACM/AEncodeProperties.cpp	/^void AEncodeProperties::UpdateConfigs(const HWND HwndDlg)$/;"	f	class:AEncodeProperties
UpdateCurrentText	Source/TextOutputSource.cpp	/^    void UpdateCurrentText()$/;"	f	class:TextOutputSource	file:
UpdateDashboardButton	Source/OBS.cpp	/^BOOL OBS::UpdateDashboardButton()$/;"	f	class:OBS
UpdateDlgFromSlides	lame/ACM/AEncodeProperties.cpp	/^void AEncodeProperties::UpdateDlgFromSlides(HWND hwndDlg) const$/;"	f	class:AEncodeProperties
UpdateDlgFromValue	lame/ACM/AEncodeProperties.cpp	/^bool AEncodeProperties::UpdateDlgFromValue(HWND HwndDlg)$/;"	f	class:AEncodeProperties
UpdateExt	QSVHelper/QSVStuff.cpp	/^void Parameters::UpdateExt()$/;"	f	class:Parameters
UpdateMemoryUsage	Source/SettingsPublish.cpp	/^static void UpdateMemoryUsage(HWND hwnd)$/;"	f	file:
UpdateMusicCRC	lame/libmp3lame/VbrTag.c	/^UpdateMusicCRC(uint16_t * crc, unsigned char const *buffer, int size)$/;"	f
UpdateNotificationAreaIcon	Source/OBS.cpp	/^BOOL OBS::UpdateNotificationAreaIcon()$/;"	f	class:OBS
UpdateParams	Source/D3D10Shader.cpp	/^void  D3D10Shader::UpdateParams()$/;"	f	class:D3D10Shader
UpdateRenderProcessId	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserWrapper.cs	/^        public void UpdateRenderProcessId(int renderProcessId)$/;"	m	class:Browser.BrowserWrapper
UpdateRenderViewMessage	Source/OBS.cpp	/^void OBS::UpdateRenderViewMessage()$/;"	f	class:OBS
UpdateRequant	libfaac/aacquant.c	/^static void UpdateRequant(CoderInfo *coderInfo, int *xi,$/;"	f	file:
UpdateSettings	CLRBrowserSourcePlugin/Plugin/BrowserSource.cs	/^        override public void UpdateSettings()$/;"	m	class:CLRBrowserSourcePlugin.BrowserSource
UpdateSettings	CLRHostPlugin/CLRCSharpSamplePlugin/SampleImageSource.cs	/^        override public void UpdateSettings()$/;"	m	class:CSharpSamplePlugin.SampleImageSource
UpdateSettings	CLRHostPlugin/CLRHostPlugin/CLRImageSource.cpp	/^void CLRImageSource::UpdateSettings()$/;"	f	class:CLRImageSource
UpdateSettings	CLRHostPlugin/CLRHostPlugin/ImageSourceBridge.h	/^    virtual void UpdateSettings() $/;"	f	class:ImageSourceBridge
UpdateSettings	DShowPlugin/DeviceSource.cpp	/^void DeviceSource::UpdateSettings()$/;"	f	class:DeviceSource
UpdateSettings	GraphicsCapture/GraphicsCaptureSource.cpp	/^void GraphicsCaptureSource::UpdateSettings()$/;"	f	class:GraphicsCaptureSource
UpdateSettings	OBSApi/Scene.h	/^    virtual void UpdateSettings() {}$/;"	f	class:ImageSource
UpdateSettings	OBSApi/Scene.h	/^    virtual void UpdateSettings() {}$/;"	f	class:Scene
UpdateSettings	Source/BitmapImageSource.cpp	/^    void UpdateSettings()$/;"	f	class:BitmapImageSource
UpdateSettings	Source/BitmapTransitionSource.cpp	/^    void UpdateSettings()$/;"	f	class:BitmapTransitionSource
UpdateSettings	Source/DesktopImageSource.cpp	/^    void UpdateSettings()$/;"	f	class:DesktopImageSource
UpdateSettings	Source/GlobalSource.cpp	/^    void UpdateSettings()$/;"	f	class:GlobalSource
UpdateSettings	Source/TextOutputSource.cpp	/^    void UpdateSettings()$/;"	f	class:TextOutputSource
UpdateTexture	Source/TextOutputSource.cpp	/^    void UpdateTexture()$/;"	f	class:TextOutputSource	file:
UpdateValueFromDlg	lame/ACM/AEncodeProperties.cpp	/^bool AEncodeProperties::UpdateValueFromDlg(HWND HwndDlg)$/;"	f	class:AEncodeProperties
Updater.cpp	Source/Updater.cpp	1;"	F
Updater.h	Source/Updater.h	1;"	F
UpgradeLog.htm	UpgradeLog.htm	1;"	F
UploadCurrentLog	Source/LogUploader.cpp	/^bool UploadCurrentLog(LogUploadResult &result)$/;"	f
UploadLog	Source/LogUploader.cpp	/^bool UploadLog(String filename, LogUploadResult &result)$/;"	f
UploadLogGitHub	Source/LogUploader.cpp	/^bool UploadLogGitHub(String filename, String logData, LogUploadResult &result)$/;"	f
Url	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public String Url { get; set; }$/;"	p	class:Shared.BrowserSourceSettings
Usage	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    DWORD               Usage;$/;"	m	struct:_D3DINDEXBUFFER_DESC
Usage	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    DWORD               Usage;$/;"	m	struct:_D3DSURFACE_DESC
Usage	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    DWORD               Usage;$/;"	m	struct:_D3DVERTEXBUFFER_DESC
Usage	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    DWORD               Usage;$/;"	m	struct:_D3DVOLUME_DESC
UseAlternativeWay	libmfx/src/mfx_dxva2_device.cpp	/^void DXVA2Device::UseAlternativeWay(const D3D9Device *pD3D9Device)$/;"	f	class:DXVA2Device
UseMultithreadedOptimizations	Source/API.cpp	/^    virtual bool UseMultithreadedOptimizations() const {return App->bUseMultithreadedOptimizations;}$/;"	f	class:OBSAPIInterface
UsedRefListL0	libmfx/include/msdk/include/mfxstructures.h	/^    } UsedRefListL0[32], UsedRefListL1[32];$/;"	m
UsedRefListL1	libmfx/include/msdk/include/mfxstructures.h	/^    } UsedRefListL0[32], UsedRefListL1[32];$/;"	m
UserAgent	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public string UserAgent { get; set; }$/;"	p	class:Shared.BrowserRuntimeSettings
UsingUnicode	OBSApi/Utility/XString.cpp	/^BOOL UsingUnicode()$/;"	f
UsualStringIDs	lame/libmp3lame/id3tag.c	/^typedef enum UsualStringIDs { ID_TITLE = FRAME_ID('T', 'I', 'T', '2')$/;"	g	file:
UsualStringIDs	lame/libmp3lame/id3tag.c	/^} UsualStringIDs;$/;"	t	file:
Utilities.h	QSVHelper/Utilities.h	1;"	F
V	lame/doc/html/detailed.html	/^<a name="V"><span class="hilight">-V n<\/span><\/a> Enable VBR encoding$/;"	a
V	libmfx/include/msdk/include/mfxstructures.h	/^        mfxU16   V;$/;"	m
V	libmfx/include/msdk/include/mfxstructures.h	/^        mfxU8   *V;$/;"	m
V0	lame/include/lame.h	/^    V0 = 500,$/;"	e	enum:preset_mode_e
V1	lame/include/lame.h	/^    V1 = 490,$/;"	e	enum:preset_mode_e
V16	libmfx/include/msdk/include/mfxstructures.h	/^        mfxU16  *V16;$/;"	m
V1_ONLY_FLAG	lame/libmp3lame/id3tag.h	8;"	d
V2	lame/include/lame.h	/^    V2 = 480,$/;"	e	enum:preset_mode_e
V2_ONLY_FLAG	lame/libmp3lame/id3tag.h	9;"	d
V3	lame/include/lame.h	/^    V3 = 470,$/;"	e	enum:preset_mode_e
V4	lame/include/lame.h	/^    V4 = 460,$/;"	e	enum:preset_mode_e
V5	lame/include/lame.h	/^    V5 = 450,$/;"	e	enum:preset_mode_e
V6	lame/include/lame.h	/^    V6 = 440,$/;"	e	enum:preset_mode_e
V7	lame/include/lame.h	/^    V7 = 430,$/;"	e	enum:preset_mode_e
V8	lame/include/lame.h	/^    V8 = 420,$/;"	e	enum:preset_mode_e
V9	lame/include/lame.h	/^    V9 = 410, \/*Vx to match Lame and VBR_xx to match FhG*\/$/;"	e	enum:preset_mode_e
VAEPROC	GraphicsCapture/GraphicsCaptureSource.cpp	/^typedef LPVOID(WINAPI *VAEPROC)(HANDLE, LPVOID, SIZE_T, DWORD, DWORD);$/;"	t	file:
VAEPROC	injectHelper/injectHelper.c	/^typedef LPVOID(WINAPI *VAEPROC)(HANDLE, LPVOID, SIZE_T, DWORD, DWORD);$/;"	t	file:
VALUE_BITRATE	lame/dshow/Mpegac.h	28;"	d
VALUE_COPYRIGHT	lame/dshow/Mpegac.h	41;"	d
VALUE_CRC	lame/dshow/Mpegac.h	42;"	d
VALUE_DISABLE_SHORT_BLOCK	lame/dshow/Mpegac.h	52;"	d
VALUE_ENFORCE_MIN	lame/dshow/Mpegac.h	48;"	d
VALUE_FORCE_MONO	lame/dshow/Mpegac.h	43;"	d
VALUE_FORCE_MS	lame/dshow/Mpegac.h	37;"	d
VALUE_KEEP_ALL_FREQ	lame/dshow/Mpegac.h	50;"	d
VALUE_LAYER	lame/dshow/Mpegac.h	39;"	d
VALUE_MODE_FIXED	lame/dshow/Mpegac.h	54;"	d
VALUE_ORIGINAL	lame/dshow/Mpegac.h	40;"	d
VALUE_PES	lame/dshow/Mpegac.h	46;"	d
VALUE_QUALITY	lame/dshow/Mpegac.h	32;"	d
VALUE_SAMPLE_OVERLAP	lame/dshow/Mpegac.h	45;"	d
VALUE_SAMPLE_RATE	lame/dshow/Mpegac.h	34;"	d
VALUE_SET_DURATION	lame/dshow/Mpegac.h	44;"	d
VALUE_STEREO_MODE	lame/dshow/Mpegac.h	36;"	d
VALUE_STRICT_ISO	lame/dshow/Mpegac.h	51;"	d
VALUE_VARIABLE	lame/dshow/Mpegac.h	29;"	d
VALUE_VARIABLEMAX	lame/dshow/Mpegac.h	31;"	d
VALUE_VARIABLEMIN	lame/dshow/Mpegac.h	30;"	d
VALUE_VBR_QUALITY	lame/dshow/Mpegac.h	33;"	d
VALUE_VOICE	lame/dshow/Mpegac.h	49;"	d
VALUE_XING_TAG	lame/dshow/Mpegac.h	53;"	d
VAR_mc	libfaac/coder.h	/^    double VAR_mc[LPC+1][BLOCK_LEN_LONG], KOR_mc[LPC+1][BLOCK_LEN_LONG];$/;"	m
VBData	OBSApi/GraphicsSystem.h	/^    inline VBData() {}$/;"	f	struct:VBData
VBData	OBSApi/GraphicsSystem.h	/^struct VBData$/;"	s
VBR	lame/libmp3lame/lame_global_flags.h	/^    vbr_mode VBR;$/;"	m	struct:lame_global_struct
VBRHEADERSIZE	lame/libmp3lame/VbrTag.c	59;"	d	file:
VBRMETHOD	lame/Dll/BladeMP3EncDLL.h	/^} VBRMETHOD;$/;"	t
VBRTAGDATA	lame/libmp3lame/VbrTag.h	/^} VBRTAGDATA;$/;"	t
VBRTag0	lame/libmp3lame/VbrTag.c	/^static const char VBRTag0[] = { "Xing" };$/;"	v	file:
VBRTag1	lame/libmp3lame/VbrTag.c	/^static const char VBRTag1[] = { "Info" };$/;"	v	file:
VBR_10	lame/include/lame.h	/^    VBR_10 = 410,$/;"	e	enum:preset_mode_e
VBR_100	lame/include/lame.h	/^    VBR_100 = 500,$/;"	e	enum:preset_mode_e
VBR_20	lame/include/lame.h	/^    VBR_20 = 420,$/;"	e	enum:preset_mode_e
VBR_30	lame/include/lame.h	/^    VBR_30 = 430,$/;"	e	enum:preset_mode_e
VBR_40	lame/include/lame.h	/^    VBR_40 = 440,$/;"	e	enum:preset_mode_e
VBR_50	lame/include/lame.h	/^    VBR_50 = 450,$/;"	e	enum:preset_mode_e
VBR_60	lame/include/lame.h	/^    VBR_60 = 460,$/;"	e	enum:preset_mode_e
VBR_70	lame/include/lame.h	/^    VBR_70 = 470,$/;"	e	enum:preset_mode_e
VBR_80	lame/include/lame.h	/^    VBR_80 = 480,$/;"	e	enum:preset_mode_e
VBR_90	lame/include/lame.h	/^    VBR_90 = 490,$/;"	e	enum:preset_mode_e
VBR_METHOD_ABR	lame/Dll/BladeMP3EncDLL.h	/^	VBR_METHOD_ABR			=  4$/;"	e
VBR_METHOD_DEFAULT	lame/Dll/BladeMP3EncDLL.h	/^	VBR_METHOD_DEFAULT		=  0,$/;"	e
VBR_METHOD_MTRH	lame/Dll/BladeMP3EncDLL.h	/^	VBR_METHOD_MTRH			=  3,$/;"	e
VBR_METHOD_NEW	lame/Dll/BladeMP3EncDLL.h	/^	VBR_METHOD_NEW			=  2,$/;"	e
VBR_METHOD_NONE	lame/Dll/BladeMP3EncDLL.h	/^	VBR_METHOD_NONE			= -1,$/;"	e
VBR_METHOD_OLD	lame/Dll/BladeMP3EncDLL.h	/^	VBR_METHOD_OLD			=  1,$/;"	e
VBR_SCALE_FLAG	lame/libmp3lame/VbrTag.h	46;"	d
VBR_encode_frame	lame/libmp3lame/vbrquantize.c	/^VBR_encode_frame(lame_internal_flags * gfc, const FLOAT xr34orig[2][2][576],$/;"	f
VBR_encode_granule	lame/libmp3lame/quantize.c	/^VBR_encode_granule(lame_internal_flags * gfc, gr_info * const cod_info, const FLOAT * const l3_xmin, \/* allowed distortion of the scalefactor *\/$/;"	f	file:
VBR_hard_min	lame/libmp3lame/lame_global_flags.h	/^    int     VBR_hard_min;    \/* strictly enforce VBR_min_bitrate$/;"	m	struct:lame_global_struct
VBR_max_bitrate_kbps	lame/libmp3lame/lame_global_flags.h	/^    int     VBR_max_bitrate_kbps;$/;"	m	struct:lame_global_struct
VBR_mean_bitrate_kbps	lame/libmp3lame/lame_global_flags.h	/^    int     VBR_mean_bitrate_kbps;$/;"	m	struct:lame_global_struct
VBR_min_bitrate_kbps	lame/libmp3lame/lame_global_flags.h	/^    int     VBR_min_bitrate_kbps;$/;"	m	struct:lame_global_struct
VBR_new_iteration_loop	lame/libmp3lame/quantize.c	/^VBR_new_iteration_loop(lame_internal_flags * gfc, const FLOAT pe[2][2],$/;"	f
VBR_new_prepare	lame/libmp3lame/quantize.c	/^VBR_new_prepare(lame_internal_flags * gfc,$/;"	f	file:
VBR_old_iteration_loop	lame/libmp3lame/quantize.c	/^VBR_old_iteration_loop(lame_internal_flags * gfc, const FLOAT pe[2][2],$/;"	f
VBR_old_prepare	lame/libmp3lame/quantize.c	/^VBR_old_prepare(lame_internal_flags * gfc,$/;"	f	file:
VBR_q	lame/libmp3lame/lame_global_flags.h	/^    int     VBR_q;           \/* Range [0,...,9] *\/$/;"	m	struct:lame_global_struct
VBR_q_frac	lame/libmp3lame/lame_global_flags.h	/^    float   VBR_q_frac;      \/* Range [0,...,1[ *\/$/;"	m	struct:lame_global_struct
VBR_seek_info_t	lame/libmp3lame/util.h	/^    } VBR_seek_info_t;$/;"	t
VBR_seek_table	lame/libmp3lame/util.h	/^        VBR_seek_info_t VBR_seek_table; \/* used for Xing VBR header *\/$/;"	m	struct:lame_internal_flags
VERSION	lame/ACM/ADbg/Makefile	/^VERSION = 3.99.5$/;"	m
VERSION	lame/ACM/Makefile	/^VERSION = 3.99.5$/;"	m
VERSION	lame/ACM/ddk/Makefile	/^VERSION = 3.99.5$/;"	m
VERSION	lame/ACM/tinyxml/Makefile	/^VERSION = 3.99.5$/;"	m
VERSION	lame/Dll/Makefile	/^VERSION = 3.99.5$/;"	m
VERSION	lame/Makefile	/^VERSION = 3.99.5$/;"	m
VERSION	lame/debian/Makefile	/^VERSION = 3.99.5$/;"	m
VERSION	lame/doc/Makefile	/^VERSION = 3.99.5$/;"	m
VERSION	lame/doc/html/Makefile	/^VERSION = 3.99.5$/;"	m
VERSION	lame/doc/man/Makefile	/^VERSION = 3.99.5$/;"	m
VERSION	lame/dshow/Makefile	/^VERSION = 3.99.5$/;"	m
VERSION	lame/frontend/Makefile	/^VERSION = 3.99.5$/;"	m
VERSION	lame/include/Makefile	/^VERSION = 3.99.5$/;"	m
VERSION	lame/libmp3lame/Makefile	/^VERSION = 3.99.5$/;"	m
VERSION	lame/libmp3lame/i386/Makefile	/^VERSION = 3.99.5$/;"	m
VERSION	lame/libmp3lame/vector/Makefile	/^VERSION = 3.99.5$/;"	m
VERSION	lame/mac/Makefile	/^VERSION = 3.99.5$/;"	m
VERSION	lame/mac/Precompile_Common.h	55;"	d
VERSION	lame/macosx/English.lproj/Makefile	/^VERSION = 3.99.5$/;"	m
VERSION	lame/macosx/LAME.xcodeproj/Makefile	/^VERSION = 3.99.5$/;"	m
VERSION	lame/macosx/Makefile	/^VERSION = 3.99.5$/;"	m
VERSION	lame/misc/Makefile	/^VERSION = 3.99.5$/;"	m
VERSION	lame/mpglib/Makefile	/^VERSION = 3.99.5$/;"	m
VERSION	lame/vc_solution/Makefile	/^VERSION = 3.99.5$/;"	m
VERSION	libsamplerate/config.h	196;"	d
VERSION_ACM_DRIVER	lame/ACM/ACM.cpp	69;"	d	file:
VERSION_ACM_DRIVER	lame/ACM/ACM.cpp	71;"	d	file:
VERSION_ACM_DRIVER	lame/ACM/ACM.cpp	79;"	d	file:
VERSION_ACM_DRIVER	lame/ACM/ddk/msacmdrv.h	73;"	d
VERSION_MSACM	lame/ACM/ACM.cpp	73;"	d	file:
VERSION_MSACM	lame/ACM/ACM.cpp	80;"	d	file:
VERSION_MSACM	lame/ACM/ddk/msacmdrv.h	72;"	d
VFEPROC	GraphicsCapture/GraphicsCaptureSource.cpp	/^typedef BOOL(WINAPI *VFEPROC)(HANDLE, LPVOID, SIZE_T, DWORD);$/;"	t	file:
VFEPROC	injectHelper/injectHelper.c	/^typedef BOOL(WINAPI *VFEPROC)(HANDLE, LPVOID, SIZE_T, DWORD);$/;"	t	file:
VIA_STR	Source/Encoder_QSV.cpp	103;"	d	file:
VIA_STR	Source/Encoder_QSV.cpp	99;"	d	file:
VIDEO_CAPTURE_FILTER_COLOR_RANGE	DShowPlugin/IVideoCaptureFilter.h	/^typedef enum VIDEO_CAPTURE_FILTER_COLOR_RANGE$/;"	g
VIDEO_CAPTURE_FILTER_COLOR_RANGE_FULL	DShowPlugin/IVideoCaptureFilter.h	/^    VIDEO_CAPTURE_FILTER_COLOR_RANGE_FULL                   =   1,          \/\/!< 0-255$/;"	e	enum:VIDEO_CAPTURE_FILTER_COLOR_RANGE
VIDEO_CAPTURE_FILTER_COLOR_RANGE_INVALID	DShowPlugin/IVideoCaptureFilter.h	/^    VIDEO_CAPTURE_FILTER_COLOR_RANGE_INVALID                =   0,          \/\/!< Invalid$/;"	e	enum:VIDEO_CAPTURE_FILTER_COLOR_RANGE
VIDEO_CAPTURE_FILTER_COLOR_RANGE_LIMITED	DShowPlugin/IVideoCaptureFilter.h	/^    VIDEO_CAPTURE_FILTER_COLOR_RANGE_LIMITED                =   2,          \/\/!< 16-235$/;"	e	enum:VIDEO_CAPTURE_FILTER_COLOR_RANGE
VIDEO_CAPTURE_FILTER_COLOR_RANGE_SHOOT	DShowPlugin/IVideoCaptureFilter.h	/^    VIDEO_CAPTURE_FILTER_COLOR_RANGE_SHOOT                  =   3,          \/\/!<$/;"	e	enum:VIDEO_CAPTURE_FILTER_COLOR_RANGE
VIDEO_CAPTURE_FILTER_DEVICE_TYPE	DShowPlugin/IVideoCaptureFilter.h	/^typedef enum VIDEO_CAPTURE_FILTER_DEVICE_TYPE$/;"	g
VIDEO_CAPTURE_FILTER_DEVICE_TYPE_GAME_CAPTURE_HD	DShowPlugin/IVideoCaptureFilter.h	/^    VIDEO_CAPTURE_FILTER_DEVICE_TYPE_GAME_CAPTURE_HD        = 2,            \/\/!< Game Capture HD   (VID: 0x0fd9 PID: 0x0044, 0x004e, 0x0051)$/;"	e	enum:VIDEO_CAPTURE_FILTER_DEVICE_TYPE
VIDEO_CAPTURE_FILTER_DEVICE_TYPE_GAME_CAPTURE_HD60	DShowPlugin/IVideoCaptureFilter.h	/^    VIDEO_CAPTURE_FILTER_DEVICE_TYPE_GAME_CAPTURE_HD60      = 8,            \/\/!< Game Capture HD60 (VID: 0x0fd9 PID: 0x005c)$/;"	e	enum:VIDEO_CAPTURE_FILTER_DEVICE_TYPE
VIDEO_CAPTURE_FILTER_DEVICE_TYPE_INVALID	DShowPlugin/IVideoCaptureFilter.h	/^    VIDEO_CAPTURE_FILTER_DEVICE_TYPE_INVALID                = 0,            \/\/!< Invalid$/;"	e	enum:VIDEO_CAPTURE_FILTER_DEVICE_TYPE
VIDEO_CAPTURE_FILTER_EVENT	DShowPlugin/IVideoCaptureFilter.h	219;"	d
VIDEO_CAPTURE_FILTER_INPUT_DEVICE	DShowPlugin/IVideoCaptureFilter.h	/^typedef enum VIDEO_CAPTURE_FILTER_INPUT_DEVICE$/;"	g
VIDEO_CAPTURE_FILTER_INPUT_DEVICE_INVALID	DShowPlugin/IVideoCaptureFilter.h	/^    VIDEO_CAPTURE_FILTER_INPUT_DEVICE_INVALID               =   0,          \/\/!< Invalid$/;"	e	enum:VIDEO_CAPTURE_FILTER_INPUT_DEVICE
VIDEO_CAPTURE_FILTER_INPUT_DEVICE_IPAD	DShowPlugin/IVideoCaptureFilter.h	/^    VIDEO_CAPTURE_FILTER_INPUT_DEVICE_IPAD                  =   3,          \/\/!< Apple iPad$/;"	e	enum:VIDEO_CAPTURE_FILTER_INPUT_DEVICE
VIDEO_CAPTURE_FILTER_INPUT_DEVICE_IPOD_IPHONE	DShowPlugin/IVideoCaptureFilter.h	/^    VIDEO_CAPTURE_FILTER_INPUT_DEVICE_IPOD_IPHONE           =   4,          \/\/!< Apple iPod or iPhone$/;"	e	enum:VIDEO_CAPTURE_FILTER_INPUT_DEVICE
VIDEO_CAPTURE_FILTER_INPUT_DEVICE_OTHER	DShowPlugin/IVideoCaptureFilter.h	/^    VIDEO_CAPTURE_FILTER_INPUT_DEVICE_OTHER                 =   6,          \/\/!< Other$/;"	e	enum:VIDEO_CAPTURE_FILTER_INPUT_DEVICE
VIDEO_CAPTURE_FILTER_INPUT_DEVICE_PLAYSTATION3	DShowPlugin/IVideoCaptureFilter.h	/^    VIDEO_CAPTURE_FILTER_INPUT_DEVICE_PLAYSTATION3          =   2,          \/\/!< Sony PlayStation 3$/;"	e	enum:VIDEO_CAPTURE_FILTER_INPUT_DEVICE
VIDEO_CAPTURE_FILTER_INPUT_DEVICE_PLAYSTATION4	DShowPlugin/IVideoCaptureFilter.h	/^    VIDEO_CAPTURE_FILTER_INPUT_DEVICE_PLAYSTATION4          =   9,          \/\/!< Sony PlayStation 4$/;"	e	enum:VIDEO_CAPTURE_FILTER_INPUT_DEVICE
VIDEO_CAPTURE_FILTER_INPUT_DEVICE_WII	DShowPlugin/IVideoCaptureFilter.h	/^    VIDEO_CAPTURE_FILTER_INPUT_DEVICE_WII                   =   5,          \/\/!< Nintendo Wii$/;"	e	enum:VIDEO_CAPTURE_FILTER_INPUT_DEVICE
VIDEO_CAPTURE_FILTER_INPUT_DEVICE_WII_U	DShowPlugin/IVideoCaptureFilter.h	/^    VIDEO_CAPTURE_FILTER_INPUT_DEVICE_WII_U                 =   7,          \/\/!< Nintendo Wii U$/;"	e	enum:VIDEO_CAPTURE_FILTER_INPUT_DEVICE
VIDEO_CAPTURE_FILTER_INPUT_DEVICE_XBOX360	DShowPlugin/IVideoCaptureFilter.h	/^    VIDEO_CAPTURE_FILTER_INPUT_DEVICE_XBOX360               =   1,          \/\/!< Microsoft Xbox 360$/;"	e	enum:VIDEO_CAPTURE_FILTER_INPUT_DEVICE
VIDEO_CAPTURE_FILTER_INPUT_DEVICE_XBOX_ONE	DShowPlugin/IVideoCaptureFilter.h	/^    VIDEO_CAPTURE_FILTER_INPUT_DEVICE_XBOX_ONE              =   8,          \/\/!< Microsoft Xbox One$/;"	e	enum:VIDEO_CAPTURE_FILTER_INPUT_DEVICE
VIDEO_CAPTURE_FILTER_INTERFACE_VERSION	DShowPlugin/IVideoCaptureFilter.h	57;"	d
VIDEO_CAPTURE_FILTER_NAME	DShowPlugin/IVideoCaptureFilter.h	48;"	d
VIDEO_CAPTURE_FILTER_NAME_L	DShowPlugin/IVideoCaptureFilter.h	49;"	d
VIDEO_CAPTURE_FILTER_NOTIFICATION	DShowPlugin/IVideoCaptureFilter.h	/^typedef enum VIDEO_CAPTURE_FILTER_NOTIFICATION$/;"	g
VIDEO_CAPTURE_FILTER_NOTIFICATION_CAPTURE_OUTPUT_FORMAT_CHANGED	DShowPlugin/IVideoCaptureFilter.h	/^    VIDEO_CAPTURE_FILTER_NOTIFICATION_CAPTURE_OUTPUT_FORMAT_CHANGED     = 305,      \/\/!< Data: none$/;"	e	enum:VIDEO_CAPTURE_FILTER_NOTIFICATION
VIDEO_CAPTURE_FILTER_NOTIFICATION_DEVICE_DELAY_CHANGED	DShowPlugin/IVideoCaptureFilter.h	/^    VIDEO_CAPTURE_FILTER_NOTIFICATION_DEVICE_DELAY_CHANGED              = 110,      \/\/!< Data: none$/;"	e	enum:VIDEO_CAPTURE_FILTER_NOTIFICATION
VIDEO_CAPTURE_FILTER_SETTINGS	DShowPlugin/IVideoCaptureFilter.h	/^}VIDEO_CAPTURE_FILTER_SETTINGS, *PVIDEO_CAPTURE_FILTER_SETTINGS;$/;"	t
VIDEO_CAPTURE_FILTER_SETTINGS_EX	DShowPlugin/IVideoCaptureFilter.h	/^}VIDEO_CAPTURE_FILTER_SETTINGS_EX, *PVIDEO_CAPTURE_FILTER_SETTINGS_EX;$/;"	t
VIDEO_CAPTURE_FILTER_VIDEO_INPUT	DShowPlugin/IVideoCaptureFilter.h	/^typedef enum VIDEO_CAPTURE_FILTER_VIDEO_INPUT$/;"	g
VIDEO_CAPTURE_FILTER_VIDEO_INPUT_COMPONENT	DShowPlugin/IVideoCaptureFilter.h	/^    VIDEO_CAPTURE_FILTER_VIDEO_INPUT_COMPONENT              =   3,          \/\/!< Component$/;"	e	enum:VIDEO_CAPTURE_FILTER_VIDEO_INPUT
VIDEO_CAPTURE_FILTER_VIDEO_INPUT_COMPOSITE	DShowPlugin/IVideoCaptureFilter.h	/^    VIDEO_CAPTURE_FILTER_VIDEO_INPUT_COMPOSITE              =   1,          \/\/!< Composite$/;"	e	enum:VIDEO_CAPTURE_FILTER_VIDEO_INPUT
VIDEO_CAPTURE_FILTER_VIDEO_INPUT_HDMI	DShowPlugin/IVideoCaptureFilter.h	/^    VIDEO_CAPTURE_FILTER_VIDEO_INPUT_HDMI                   =   4,          \/\/!< HDMI$/;"	e	enum:VIDEO_CAPTURE_FILTER_VIDEO_INPUT
VIDEO_CAPTURE_FILTER_VIDEO_INPUT_INVALID	DShowPlugin/IVideoCaptureFilter.h	/^    VIDEO_CAPTURE_FILTER_VIDEO_INPUT_INVALID                =   0,          \/\/!< Invalid$/;"	e	enum:VIDEO_CAPTURE_FILTER_VIDEO_INPUT
VIDEO_CAPTURE_FILTER_VIDEO_INPUT_SVIDEO	DShowPlugin/IVideoCaptureFilter.h	/^    VIDEO_CAPTURE_FILTER_VIDEO_INPUT_SVIDEO                 =   2,          \/\/!< S-Video$/;"	e	enum:VIDEO_CAPTURE_FILTER_VIDEO_INPUT
VIDEO_CAPTURE_FILTER_VID_ENC_PROFILE	DShowPlugin/IVideoCaptureFilter.h	/^typedef enum VIDEO_CAPTURE_FILTER_VID_ENC_PROFILE$/;"	g
VIDEO_CAPTURE_FILTER_VID_ENC_PROFILE_1080	DShowPlugin/IVideoCaptureFilter.h	/^    VIDEO_CAPTURE_FILTER_VID_ENC_PROFILE_1080               = 0x00000010,   \/\/!< 1920x1080$/;"	e	enum:VIDEO_CAPTURE_FILTER_VID_ENC_PROFILE
VIDEO_CAPTURE_FILTER_VID_ENC_PROFILE_240	DShowPlugin/IVideoCaptureFilter.h	/^    VIDEO_CAPTURE_FILTER_VID_ENC_PROFILE_240                = 0x00000001,   \/\/!< 320x240$/;"	e	enum:VIDEO_CAPTURE_FILTER_VID_ENC_PROFILE
VIDEO_CAPTURE_FILTER_VID_ENC_PROFILE_360	DShowPlugin/IVideoCaptureFilter.h	/^    VIDEO_CAPTURE_FILTER_VID_ENC_PROFILE_360                = 0x00000002,   \/\/!< 480x360$/;"	e	enum:VIDEO_CAPTURE_FILTER_VID_ENC_PROFILE
VIDEO_CAPTURE_FILTER_VID_ENC_PROFILE_480	DShowPlugin/IVideoCaptureFilter.h	/^    VIDEO_CAPTURE_FILTER_VID_ENC_PROFILE_480                = 0x00000004,   \/\/!< 640x480$/;"	e	enum:VIDEO_CAPTURE_FILTER_VID_ENC_PROFILE
VIDEO_CAPTURE_FILTER_VID_ENC_PROFILE_720	DShowPlugin/IVideoCaptureFilter.h	/^    VIDEO_CAPTURE_FILTER_VID_ENC_PROFILE_720                = 0x00000008,   \/\/!< 1280x720$/;"	e	enum:VIDEO_CAPTURE_FILTER_VID_ENC_PROFILE
VIDEO_CAPTURE_FILTER_VID_ENC_PROFILE_INVALID	DShowPlugin/IVideoCaptureFilter.h	/^    VIDEO_CAPTURE_FILTER_VID_ENC_PROFILE_INVALID            = 0x00000000,   \/\/!< Invalid$/;"	e	enum:VIDEO_CAPTURE_FILTER_VID_ENC_PROFILE
VIDEO_PIN_NAME	DShowPlugin/CaptureFilter.cpp	24;"	d	file:
VOID	OBSApi/Utility/Defs.h	/^typedef void                VOID,*LPVOID,*HANDLE;$/;"	t
VOID	OBSApi/Utility/Defs.h	48;"	d
VOLATILE	lame/libmp3lame/vbrquantize.c	69;"	d	file:
VOLATILE	lame/libmp3lame/vbrquantize.c	71;"	d	file:
VOLATILE	lame/libmp3lame/vbrquantize.c	74;"	d	file:
VOLN_ADJUSTING	OBSApi/VolumeControl.h	33;"	d
VOLN_FINALVALUE	OBSApi/VolumeControl.h	34;"	d
VOLN_METERED	OBSApi/VolumeMeter.h	31;"	d
VOLN_MUTELEVEL	OBSApi/VolumeControl.h	37;"	d
VOLN_TOGGLEMUTE	OBSApi/VolumeControl.h	35;"	d
VOLUME_CONTROL_CLASS	OBSApi/VolumeControl.h	22;"	d
VOLUME_METER_CLASS	OBSApi/VolumeMeter.h	23;"	d
VOL_ALPHA	OBSApi/VolumeControl.h	40;"	d
VOL_BETA	OBSApi/VolumeControl.h	41;"	d
VOL_MAX	OBSApi/VolumeMeter.h	29;"	d
VOL_MIN	OBSApi/VolumeMeter.h	28;"	d
VO_SCALE	lame/libmp3lame/psymodel.h	52;"	d
VPPFrameSubmit	libmfx/include/msdk/include/mfxplugin.h	/^    mfxStatus (MFX_CDECL *VPPFrameSubmit)(mfxHDL pthis,  mfxFrameSurface1 *in, mfxFrameSurface1 *out, mfxExtVppAuxData *aux, mfxThreadTask *task);$/;"	m	struct:mfxVideoCodecPlugin
VU	libmfx/include/msdk/include/mfxstructures.h	/^        mfxU8   *VU;            \/* for VU merged formats *\/$/;"	m
V_offset	QSVHelper/IPCStructs.h	/^             V_offset,$/;"	m	struct:init_response
ValidFloatString	OBSApi/Utility/XString.cpp	/^BOOL STDCALL ValidFloatString(CTSTR lpStr)$/;"	f
ValidIntString	OBSApi/Utility/XString.cpp	/^BOOL STDCALL ValidIntString(CTSTR lpStr)$/;"	f
Value	lame/ACM/tinyxml/tinyxml.h	/^	const std::string& Value()	const			{ return value; }$/;"	f	class:TiXmlNode
Value	lame/ACM/tinyxml/tinyxml.h	/^	const std::string& Value() const { return value; }		\/\/\/< Return the value of this attribute.$/;"	f	class:TiXmlAttribute
ValueList	OBSApi/Utility/ConfigFile.h	/^    List<TSTR> ValueList;$/;"	m	struct:ConfigKey
Values	libmfx/include/msdk/include/mfxjpeg.h	/^        mfxU8   Values[12];$/;"	m
Values	libmfx/include/msdk/include/mfxjpeg.h	/^        mfxU8   Values[162];$/;"	m
VbrQuality	lame/ACM/AEncodeProperties.h	/^	int VbrQuality;$/;"	m	class:AEncodeProperties
VbrTag.c	lame/libmp3lame/VbrTag.c	1;"	F
VbrTag.h	lame/libmp3lame/VbrTag.h	1;"	F
Vect	OBSApi/Utility/XMath.h	/^    explicit inline Vect(__m128 val) : m(val)       {}$/;"	f	struct:Vect
Vect	OBSApi/Utility/XMath.h	/^    explicit inline Vect(const Vect2 &v2)           {m = _mm_setr_ps(v2.x, v2.y, 0.0f, 0.0f);}$/;"	f	struct:Vect
Vect	OBSApi/Utility/XMath.h	/^    explicit inline Vect(const Vect2 &v2) : x(v2.x), y(v2.y), z(0.0f), w(0.0f)  {}$/;"	f	struct:Vect
Vect	OBSApi/Utility/XMath.h	/^    explicit inline Vect(float f)                   {m = _mm_load1_ps(&f); w = 0.0f;}$/;"	f	struct:Vect
Vect	OBSApi/Utility/XMath.h	/^    explicit inline Vect(float f) : x(f), y(f), z(f), w(0.0f)                   {}$/;"	f	struct:Vect
Vect	OBSApi/Utility/XMath.h	/^    inline Vect()                                                               {w=0.0f;}$/;"	f	struct:Vect
Vect	OBSApi/Utility/XMath.h	/^    inline Vect()                                   {w = 0.0f;}$/;"	f	struct:Vect
Vect	OBSApi/Utility/XMath.h	/^    inline Vect(const CompactVect &v)                                           {x = v.x; y = v.y; z = v.z; w = 0.0f;}$/;"	f	struct:Vect
Vect	OBSApi/Utility/XMath.h	/^    inline Vect(const CompactVect &v)               {m = _mm_setr_ps(v.x, v.y, v.z, 0.0f);}$/;"	f	struct:Vect
Vect	OBSApi/Utility/XMath.h	/^    inline Vect(const Vect& v)                      {m = v.m;}$/;"	f	struct:Vect
Vect	OBSApi/Utility/XMath.h	/^    inline Vect(float a, float b, float c)          {m = _mm_setr_ps(a, b, c, 0.0f);}$/;"	f	struct:Vect
Vect	OBSApi/Utility/XMath.h	/^    inline Vect(float a, float b, float c) : x(a), y(b), z(c), w(0.0f)          {}$/;"	f	struct:Vect
Vect	OBSApi/Utility/XMath.h	/^    inline Vect(float a, float b, float c, float d) {m = _mm_setr_ps(a, b, c, d);}$/;"	f	struct:Vect
Vect	OBSApi/Utility/XMath.h	/^    inline Vect(float a, float b, float c, float d): x(a), y(b), z(c), w(d)     {} $/;"	f	struct:Vect
Vect	OBSApi/Utility/XMath.h	/^inline Vect::Vect(const Vect4 &v) : x(v.x), y(v.y), z(v.z), w(0.0f) {}$/;"	f	class:Vect
Vect	OBSApi/Utility/XMath.h	/^inline Vect::Vect(const Vect4 &v) {m = v.m; w = 0.0f;}$/;"	f	class:Vect
Vect	OBSApi/Utility/XMath.h	/^struct BASE_EXPORT Vect$/;"	s
Vect2	OBSApi/Utility/XMath.h	/^    explicit inline Vect2(float a) : x(a), y(a)     {}$/;"	f	struct:Vect2
Vect2	OBSApi/Utility/XMath.h	/^    inline Vect2()                                  {}$/;"	f	struct:Vect2
Vect2	OBSApi/Utility/XMath.h	/^    inline Vect2(const Vect2 &v) : x(v.x), y(v.y)   {}$/;"	f	struct:Vect2
Vect2	OBSApi/Utility/XMath.h	/^    inline Vect2(float a, float b) : x(a), y(b)     {}$/;"	f	struct:Vect2
Vect2	OBSApi/Utility/XMath.h	/^inline Vect2::Vect2(const Vect &v)$/;"	f	class:Vect2
Vect2	OBSApi/Utility/XMath.h	/^struct BASE_EXPORT Vect2$/;"	s
Vect3	OBSApi/Utility/XMath.h	/^typedef Vect Color3, UVWCoord, Vect3;$/;"	t
Vect4	OBSApi/Utility/XMath.h	/^    explicit inline Vect4(__m128 m2) : m(m2)                                        {}$/;"	f	struct:Vect4
Vect4	OBSApi/Utility/XMath.h	/^    explicit inline Vect4(const Vect &v)                                            {m = v.m; w = 1.0f;}$/;"	f	struct:Vect4
Vect4	OBSApi/Utility/XMath.h	/^    explicit inline Vect4(const Vect &v)   : x(v.x),  y(v.y),  z(v.z),  w(1.0f) {}$/;"	f	struct:Vect4
Vect4	OBSApi/Utility/XMath.h	/^    explicit inline Vect4(const Vect2 &v2)                                          {m = _mm_setr_ps(v2.x, v2.y, 0.0f, 1.0f);}$/;"	f	struct:Vect4
Vect4	OBSApi/Utility/XMath.h	/^    explicit inline Vect4(const Vect2 &v2) : x(v2.x), y(v2.y), z(0.0f), w(1.0f) {}$/;"	f	struct:Vect4
Vect4	OBSApi/Utility/XMath.h	/^    inline Vect4()                                                                  {}$/;"	f	struct:Vect4
Vect4	OBSApi/Utility/XMath.h	/^    inline Vect4(const Vect &v, float w) : x(v.x),  y(v.y),  z(v.z),  w(w)      {}$/;"	f	struct:Vect4
Vect4	OBSApi/Utility/XMath.h	/^    inline Vect4(const Vect &v, float wIn)                                          {m = v.m; w = wIn;}$/;"	f	struct:Vect4
Vect4	OBSApi/Utility/XMath.h	/^    inline Vect4(float a, float b, float c, float d)                                {m = _mm_setr_ps(a, b, c, d);}$/;"	f	struct:Vect4
Vect4	OBSApi/Utility/XMath.h	/^    inline Vect4(float a, float b, float c, float d) : x(a), y(b), z(c), w(d)   {}$/;"	f	struct:Vect4
Vect4	OBSApi/Utility/XMath.h	/^struct BASE_EXPORT Vect4$/;"	s
Vect4_to_RGBA	OBSApi/Utility/XT.h	293;"	d
Vect_to_RGB	OBSApi/Utility/XT.h	294;"	d
Vector2	CLRHostPlugin/CLRHostInterop/Vector2.h	/^        Vector2(float x, float y)$/;"	f	class:CLROBS::Vector2
Vector2	CLRHostPlugin/CLRHostInterop/Vector2.h	/^    public ref class Vector2$/;"	c	namespace:CLROBS
Vector2.h	CLRHostPlugin/CLRHostInterop/Vector2.h	1;"	F
VectorHandleGuard	libmfx/src/main.cpp	/^    VectorHandleGuard(HandleVector& aVector): m_vector(aVector) {}$/;"	f	struct:VectorHandleGuard
VectorHandleGuard	libmfx/src/main.cpp	/^struct VectorHandleGuard$/;"	s	file:
VectorOffsetLength	OBSApi/Utility/XMath.h	/^    inline float VectorOffsetLength(const Vect &v) const$/;"	f	struct:Bounds
VendorId	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    DWORD           VendorId;$/;"	m	struct:_D3DADAPTER_IDENTIFIER8
VendorId	extras/dxgi1_2.h	/^    UINT VendorId;$/;"	m	struct:DXGI_ADAPTER_DESC2
VerifyCodecCommon	libmfx/src/mfx_load_plugin.cpp	/^bool MFX::MFXPluginFactory::VerifyCodecCommon( const mfxVideoCodecPlugin & videoCodec )$/;"	f	class:MFX::MFXPluginFactory
VerifyDecoder	libmfx/src/mfx_load_plugin.cpp	/^bool MFX::MFXPluginFactory::VerifyDecoder( const mfxVideoCodecPlugin &decoder )$/;"	f	class:MFX::MFXPluginFactory
VerifyDigest	librtmp/handshake.h	/^VerifyDigest(unsigned int digestPos, uint8_t *handshakeMessage, const uint8_t *key,$/;"	f
VerifyEncoder	libmfx/src/mfx_load_plugin.cpp	/^bool MFX::MFXPluginFactory::VerifyEncoder( const mfxVideoCodecPlugin &encoder )$/;"	f	class:MFX::MFXPluginFactory
VerifyVpp	libmfx/src/mfx_load_plugin.cpp	/^bool MFX::MFXPluginFactory::VerifyVpp( const mfxVideoCodecPlugin &vpp ) $/;"	f	class:MFX::MFXPluginFactory
Version	CLRBrowserSourcePlugin/Plugin/Shared/BrowserPlugin.cs	/^        public String Version { get; private set; }$/;"	p	class:Shared.BrowserPlugin
Version	lame/ACM/tinyxml/tinyxml.h	/^	const std::string& Version() const		{ return version; }$/;"	f	class:TiXmlDeclaration
Version	libmfx/include/msdk/include/mfxcommon.h	/^    mfxU32  Version;$/;"	m
Version	libmfx/include/msdk/include/mfxplugin.h	/^    mfxVersion Version;$/;"	m	struct:mfxCoreParam
VersionString	lame/ACM/ACM.cpp	/^char ACM::VersionString[120];$/;"	m	class:ACM	file:
VersionString	lame/ACM/ACM.h	/^	static char VersionString[120];$/;"	m	class:ACM
VertList	OBSApi/GraphicsSystem.h	/^    List<Vect>      VertList;$/;"	m	struct:VBData
Vertex	OBSApi/GraphicsSystem.cpp	/^void GraphicsSystem::Vertex(const Vect &v)$/;"	f	class:GraphicsSystem
Vertex	OBSApi/GraphicsSystem.cpp	/^void GraphicsSystem::Vertex(float x, float y, float z)$/;"	f	class:GraphicsSystem
Vertex	OBSApi/GraphicsSystem.h	/^    void  Vertex(const Vect2 &v2) {Vertex(Vect(v2));}$/;"	f	class:GraphicsSystem
Vertex	OBSApi/GraphicsSystem.h	/^inline void  Vertex(const Vect &v)                              {GS->Vertex(v);}$/;"	f
Vertex	OBSApi/GraphicsSystem.h	/^inline void  Vertex(const Vect2 &v2)                            {GS->Vertex(v2);}$/;"	f
Vertex	OBSApi/GraphicsSystem.h	/^inline void  Vertex(float x, float y, float z=0)                {GS->Vertex(x, y, z);}$/;"	f
VertexBuffer	OBSApi/GraphicsSystem.h	/^class BASE_EXPORT VertexBuffer$/;"	c
VertexProcessingCaps	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	/^    DWORD   VertexProcessingCaps;$/;"	m	struct:_D3DCAPS8
VertexShaderVersion	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	/^    DWORD   VertexShaderVersion;$/;"	m	struct:_D3DCAPS8
Video	libmfx/include/msdk/include/mfxplugin.h	/^    mfxVideoCodecPlugin  *Video;$/;"	m	struct:mfxPlugin
VideoEncoder	Source/OBS.h	/^class VideoEncoder$/;"	c
VideoFileStream	Source/OBS.h	/^class VideoFileStream : public ClosableStream$/;"	c
VideoFormat	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16          VideoFormat;$/;"	m
VideoFullRange	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16          VideoFullRange;$/;"	m
VideoOutputType	DShowPlugin/MediaInfoStuff.h	/^enum VideoOutputType$/;"	g
VideoOutputType_ARGB32	DShowPlugin/MediaInfoStuff.h	/^    VideoOutputType_ARGB32,$/;"	e	enum:VideoOutputType
VideoOutputType_H264	DShowPlugin/MediaInfoStuff.h	/^    VideoOutputType_H264,$/;"	e	enum:VideoOutputType
VideoOutputType_HDYC	DShowPlugin/MediaInfoStuff.h	/^    VideoOutputType_HDYC,$/;"	e	enum:VideoOutputType
VideoOutputType_I420	DShowPlugin/MediaInfoStuff.h	/^    VideoOutputType_I420,$/;"	e	enum:VideoOutputType
VideoOutputType_MJPG	DShowPlugin/MediaInfoStuff.h	/^    VideoOutputType_MJPG$/;"	e	enum:VideoOutputType
VideoOutputType_MPEG2_VIDEO	DShowPlugin/MediaInfoStuff.h	/^    VideoOutputType_MPEG2_VIDEO,$/;"	e	enum:VideoOutputType
VideoOutputType_None	DShowPlugin/MediaInfoStuff.h	/^    VideoOutputType_None,$/;"	e	enum:VideoOutputType
VideoOutputType_RGB24	DShowPlugin/MediaInfoStuff.h	/^    VideoOutputType_RGB24,$/;"	e	enum:VideoOutputType
VideoOutputType_RGB32	DShowPlugin/MediaInfoStuff.h	/^    VideoOutputType_RGB32,$/;"	e	enum:VideoOutputType
VideoOutputType_UYVY	DShowPlugin/MediaInfoStuff.h	/^    VideoOutputType_UYVY,$/;"	e	enum:VideoOutputType
VideoOutputType_Y41P	DShowPlugin/MediaInfoStuff.h	/^    VideoOutputType_Y41P,$/;"	e	enum:VideoOutputType
VideoOutputType_YUY2	DShowPlugin/MediaInfoStuff.h	/^    VideoOutputType_YUY2,$/;"	e	enum:VideoOutputType
VideoOutputType_YV12	DShowPlugin/MediaInfoStuff.h	/^    VideoOutputType_YV12,$/;"	e	enum:VideoOutputType
VideoOutputType_YVU9	DShowPlugin/MediaInfoStuff.h	/^    VideoOutputType_YVU9,$/;"	e	enum:VideoOutputType
VideoOutputType_YVYU	DShowPlugin/MediaInfoStuff.h	/^    VideoOutputType_YVYU,$/;"	e	enum:VideoOutputType
VideoOutputType_dvhd	DShowPlugin/MediaInfoStuff.h	/^    VideoOutputType_dvhd,$/;"	e	enum:VideoOutputType
VideoOutputType_dvsd	DShowPlugin/MediaInfoStuff.h	/^    VideoOutputType_dvsd,$/;"	e	enum:VideoOutputType
VideoOutputType_dvsl	DShowPlugin/MediaInfoStuff.h	/^    VideoOutputType_dvsl,$/;"	e	enum:VideoOutputType
VideoPacket	Source/Encoder_QSV.cpp	/^struct VideoPacket$/;"	s	file:
VideoPacket	Source/Encoder_x264.cpp	/^struct VideoPacket$/;"	s	file:
VideoPacketData	Source/OBS.h	/^struct VideoPacketData$/;"	s
VideoSegment	Source/OBS.h	/^    inline VideoSegment() : timestamp(0), pts(0) {}$/;"	f	struct:VideoSegment
VideoSegment	Source/OBS.h	/^struct VideoSegment$/;"	s
View	libmfx/include/msdk/include/mfxmvc.h	/^    mfxMVCViewDependency *View;$/;"	m
ViewId	libmfx/include/msdk/include/mfxmvc.h	/^    mfxU16 *ViewId;$/;"	m
ViewId	libmfx/include/msdk/include/mfxmvc.h	/^    mfxU16 ViewId;$/;"	m
ViewId	libmfx/include/msdk/include/mfxmvc.h	/^    mfxU16 ViewId[1024];$/;"	m
ViewId	libmfx/include/msdk/include/mfxstructures.h	/^            mfxU16  ViewId;$/;"	m
ViewId	libmfx/include/msdk/include/mfxstructures.h	/^        mfxU16      ViewId;$/;"	m
ViewOutput	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16      ViewOutput;             \/* tri-state option *\/$/;"	m
Visible	extras/dxgi1_2.h	/^    BOOL Visible;$/;"	m	struct:DXGI_OUTDUPL_POINTER_POSITION
Visit	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserPluginVisitor.cs	/^        protected override bool Visit(CefWebPluginInfo pluginInfo, int count, int total)$/;"	m	class:RemoteBrowser.BrowserPluginVisitor
Visit	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserPluginVisitor.cs	/^        public static void Visit(Action<CefWebPluginInfo> action)$/;"	m	class:RemoteBrowser.BrowserPluginVisitor
Volume	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/RenderProcess.cs	/^        public float? Volume$/;"	p	class:Browser.RenderProcess
Volume	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public float Volume { get; set; }$/;"	p	class:Shared.BrowserSourceSettings
VolumeControl.cpp	OBSApi/VolumeControl.cpp	1;"	F
VolumeControl.h	OBSApi/VolumeControl.h	1;"	F
VolumeControlData	OBSApi/VolumeControl.cpp	/^struct VolumeControlData$/;"	s	file:
VolumeControlProc	OBSApi/VolumeControl.cpp	/^LRESULT CALLBACK VolumeControlProc(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam)$/;"	f
VolumeMeter.cpp	OBSApi/VolumeMeter.cpp	1;"	F
VolumeMeter.h	OBSApi/VolumeMeter.h	1;"	F
VolumeMeterData	OBSApi/VolumeMeter.cpp	/^struct VolumeMeterData$/;"	s	file:
VolumeMeterProc	OBSApi/VolumeMeter.cpp	/^LRESULT CALLBACK VolumeMeterProc(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam)$/;"	f
VolumeMixer	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/RenderProcess.cs	/^    public class VolumeMixer$/;"	c	namespace:Browser
VolumeProgressBarValueConverter	CLRBrowserSourcePlugin/Plugin/ConfigDialog.xaml.cs	/^    public class VolumeProgressBarValueConverter : IValueConverter$/;"	c	namespace:CLRBrowserSourcePlugin
VolumeTextureAddressCaps	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	/^    DWORD   VolumeTextureAddressCaps;   \/\/ D3DPTADDRESSCAPS for IDirect3DVolumeTexture8's$/;"	m	struct:_D3DCAPS8
VolumeTextureFilterCaps	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	/^    DWORD   VolumeTextureFilterCaps;    \/\/ D3DPTFILTERCAPS for IDirect3DVolumeTexture8's$/;"	m	struct:_D3DCAPS8
VuiNalHrdParameters	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16      VuiNalHrdParameters;    \/* tri-state option *\/$/;"	m
VuiVclHrdParameters	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16      VuiVclHrdParameters;    \/* tri-state option *\/$/;"	m
WAIT_INFINITE	OBSApi/Utility/XT.h	94;"	d
WARN_UNUSED	libsamplerate/common.h	62;"	d
WARN_UNUSED	libsamplerate/common.h	64;"	d
WAVE_FORMAT_EXTENSIBLE	lame/frontend/get_audio.c	/^static short const WAVE_FORMAT_EXTENSIBLE = 0xFFFE;$/;"	v	file:
WAVE_FORMAT_IEEE_FLOAT	lame/frontend/get_audio.c	/^static short const WAVE_FORMAT_IEEE_FLOAT = 0x0003;$/;"	v	file:
WAVE_FORMAT_PCM	lame/frontend/get_audio.c	/^static short const WAVE_FORMAT_PCM = 0x0001;$/;"	v	file:
WAV_ID_DATA	lame/frontend/get_audio.c	/^static int const WAV_ID_DATA = 0x64617461; \/* "data" *\/$/;"	v	file:
WAV_ID_FMT	lame/frontend/get_audio.c	/^static int const WAV_ID_FMT = 0x666d7420; \/* "fmt " *\/$/;"	v	file:
WAV_ID_RIFF	lame/frontend/get_audio.c	/^static int const WAV_ID_RIFF = 0x52494646; \/* "RIFF" *\/$/;"	v	file:
WAV_ID_WAVE	lame/frontend/get_audio.c	/^static int const WAV_ID_WAVE = 0x57415645; \/* "WAVE" *\/$/;"	v	file:
WCHARBITS	OBSApi/Utility/XString.cpp	27;"	d	file:
WCHARBITS	OBSApi/Utility/XString.cpp	31;"	d	file:
WCHARMASK	OBSApi/Utility/XString.cpp	26;"	d	file:
WCHARMASK	OBSApi/Utility/XString.cpp	30;"	d	file:
WCHAR_MAX	extras/stdint.h	157;"	d
WCHAR_MAX	lame/stdint.h	157;"	d
WCHAR_MAX	librtmp/stdint.h	156;"	d
WCHAR_MAX	minhook/src/pstdint.h	655;"	d
WCHAR_MIN	extras/stdint.h	156;"	d
WCHAR_MIN	lame/stdint.h	156;"	d
WCHAR_MIN	librtmp/stdint.h	155;"	d
WCHAR_MIN	minhook/src/pstdint.h	652;"	d
WEBSOCKET_OPCODE_BINARY	Source/mongoose.h	/^  WEBSOCKET_OPCODE_BINARY = 0x2,$/;"	e
WEBSOCKET_OPCODE_CONNECTION_CLOSE	Source/mongoose.h	/^  WEBSOCKET_OPCODE_CONNECTION_CLOSE = 0x8,$/;"	e
WEBSOCKET_OPCODE_CONTINUATION	Source/mongoose.h	/^  WEBSOCKET_OPCODE_CONTINUATION = 0x0,$/;"	e
WEBSOCKET_OPCODE_PING	Source/mongoose.h	/^  WEBSOCKET_OPCODE_PING = 0x9,$/;"	e
WEBSOCKET_OPCODE_PONG	Source/mongoose.h	/^  WEBSOCKET_OPCODE_PONG = 0xa$/;"	e
WEBSOCKET_OPCODE_TEXT	Source/mongoose.h	/^  WEBSOCKET_OPCODE_TEXT = 0x1,$/;"	e
WGLCREATECONTEXTPROC	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^typedef HGLRC  (WINAPI *WGLCREATECONTEXTPROC)(HDC);$/;"	t	file:
WGLDELETECONTEXTPROC	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^typedef BOOL   (WINAPI *WGLDELETECONTEXTPROC)(HGLRC);$/;"	t	file:
WGLDXCLOSEDEVICENVPROC	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^typedef BOOL   (WINAPI *WGLDXCLOSEDEVICENVPROC)(HANDLE);$/;"	t	file:
WGLDXLOCKOBJECTSNVPROC	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^typedef BOOL   (WINAPI *WGLDXLOCKOBJECTSNVPROC)(HANDLE, GLint, HANDLE *);$/;"	t	file:
WGLDXOBJECTACCESSNVPROC	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^typedef BOOL   (WINAPI *WGLDXOBJECTACCESSNVPROC)(HANDLE, GLenum);$/;"	t	file:
WGLDXOPENDEVICENVPROC	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^typedef HANDLE (WINAPI *WGLDXOPENDEVICENVPROC)(void*);$/;"	t	file:
WGLDXREGISTEROBJECTNVPROC	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^typedef HANDLE (WINAPI *WGLDXREGISTEROBJECTNVPROC)(HANDLE, void *, GLuint, GLenum, GLenum);$/;"	t	file:
WGLDXUNLOCKOBJECTSNVPROC	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^typedef BOOL   (WINAPI *WGLDXUNLOCKOBJECTSNVPROC)(HANDLE, GLint, HANDLE *);$/;"	t	file:
WGLDXUNREGISTEROBJECTNVPROC	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^typedef BOOL   (WINAPI *WGLDXUNREGISTEROBJECTNVPROC)(HANDLE, HANDLE);$/;"	t	file:
WGLGETCURRENTCONTEXTPROC	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^typedef HGLRC  (WINAPI *WGLGETCURRENTCONTEXTPROC)();$/;"	t	file:
WGLGETCURRENTDCPROC	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^typedef HDC    (WINAPI *WGLGETCURRENTDCPROC)();$/;"	t	file:
WGLGETPROCADDRESSPROC	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^typedef PROC   (WINAPI *WGLGETPROCADDRESSPROC)(LPCSTR);$/;"	t	file:
WGLMAKECURRENTPROC	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^typedef BOOL   (WINAPI *WGLMAKECURRENTPROC)(HDC, HGLRC);$/;"	t	file:
WGLSETRESOURCESHAREHANDLENVPROC	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^typedef BOOL   (WINAPI *WGLSETRESOURCESHAREHANDLENVPROC)(void*, HANDLE);$/;"	t	file:
WGLSWAPBUFFERSPROC	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^typedef BOOL   (WINAPI *WGLSWAPBUFFERSPROC)(HDC);$/;"	t	file:
WGLSWAPLAYERBUFFERSPROC	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^typedef BOOL   (WINAPI *WGLSWAPLAYERBUFFERSPROC)(HDC, UINT);$/;"	t	file:
WGL_ACCESS_READ_ONLY_NV	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	198;"	d	file:
WGL_ACCESS_READ_WRITE_NV	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	199;"	d	file:
WGL_ACCESS_WRITE_DISCARD_NV	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	200;"	d	file:
WHQLLevel	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    DWORD           WHQLLevel;$/;"	m	struct:_D3DADAPTER_IDENTIFIER8
WIN32	lame/libmp3lame/i386/nasm.h	/^; for Windows Visual C++        -> define WIN32$/;"	v
WIN32_LEAN_AND_MEAN	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.h	25;"	d
WIN32_LEAN_AND_MEAN	OBSApi/OBSApi.h	27;"	d
WIN32_LEAN_AND_MEAN	OBSApi/Utility/XT_Windows.cpp	25;"	d	file:
WIN32_LEAN_AND_MEAN	Source/Main.h	26;"	d
WIN32_LEAN_AND_MEAN	Source/Server.h	10;"	d
WIN32_LEAN_AND_MEAN	Source/mongoose.c	55;"	d	file:
WIN32_LEAN_AND_MEAN	lame/libmp3lame/machine.h	129;"	d
WINAPI_FAMILY	extras/winapifamily.h	43;"	d
WINAPI_FAMILY_APP	extras/winapifamily.h	34;"	d
WINAPI_FAMILY_DESKTOP_APP	extras/winapifamily.h	35;"	d
WINAPI_FAMILY_ONE_PARTITION	extras/winapifamily.h	50;"	d
WINAPI_FAMILY_PARTITION	extras/winapifamily.h	47;"	d
WINAPI_PARTITION_APP	extras/winapifamily.h	28;"	d
WINAPI_PARTITION_DESKTOP	extras/winapifamily.h	27;"	d
WINDOW_TYPE	libfaac/coder.h	/^enum WINDOW_TYPE {$/;"	g
WINT_MAX	extras/stdint.h	164;"	d
WINT_MAX	lame/stdint.h	164;"	d
WINT_MAX	librtmp/stdint.h	163;"	d
WINT_MIN	extras/stdint.h	163;"	d
WINT_MIN	lame/stdint.h	163;"	d
WINT_MIN	librtmp/stdint.h	162;"	d
WINVER	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.h	22;"	d
WINVER	OBSApi/OBSApi.h	22;"	d
WINVER	OBSApi/Utility/XT_Windows.cpp	22;"	d	file:
WINVER	Source/Main.h	22;"	d
WITH_FRONTEND	lame/ACM/ADbg/Makefile	/^WITH_FRONTEND = lame.exe$/;"	m
WITH_FRONTEND	lame/ACM/Makefile	/^WITH_FRONTEND = lame.exe$/;"	m
WITH_FRONTEND	lame/ACM/ddk/Makefile	/^WITH_FRONTEND = lame.exe$/;"	m
WITH_FRONTEND	lame/ACM/tinyxml/Makefile	/^WITH_FRONTEND = lame.exe$/;"	m
WITH_FRONTEND	lame/Dll/Makefile	/^WITH_FRONTEND = lame.exe$/;"	m
WITH_FRONTEND	lame/Makefile	/^WITH_FRONTEND = lame.exe$/;"	m
WITH_FRONTEND	lame/debian/Makefile	/^WITH_FRONTEND = lame.exe$/;"	m
WITH_FRONTEND	lame/doc/Makefile	/^WITH_FRONTEND = lame.exe$/;"	m
WITH_FRONTEND	lame/doc/html/Makefile	/^WITH_FRONTEND = lame.exe$/;"	m
WITH_FRONTEND	lame/doc/man/Makefile	/^WITH_FRONTEND = lame.exe$/;"	m
WITH_FRONTEND	lame/dshow/Makefile	/^WITH_FRONTEND = lame.exe$/;"	m
WITH_FRONTEND	lame/frontend/Makefile	/^WITH_FRONTEND = lame.exe$/;"	m
WITH_FRONTEND	lame/include/Makefile	/^WITH_FRONTEND = lame.exe$/;"	m
WITH_FRONTEND	lame/libmp3lame/Makefile	/^WITH_FRONTEND = lame.exe$/;"	m
WITH_FRONTEND	lame/libmp3lame/i386/Makefile	/^WITH_FRONTEND = lame.exe$/;"	m
WITH_FRONTEND	lame/libmp3lame/vector/Makefile	/^WITH_FRONTEND = lame.exe$/;"	m
WITH_FRONTEND	lame/mac/Makefile	/^WITH_FRONTEND = lame.exe$/;"	m
WITH_FRONTEND	lame/macosx/English.lproj/Makefile	/^WITH_FRONTEND = lame.exe$/;"	m
WITH_FRONTEND	lame/macosx/LAME.xcodeproj/Makefile	/^WITH_FRONTEND = lame.exe$/;"	m
WITH_FRONTEND	lame/macosx/Makefile	/^WITH_FRONTEND = lame.exe$/;"	m
WITH_FRONTEND	lame/misc/Makefile	/^WITH_FRONTEND = lame.exe$/;"	m
WITH_FRONTEND	lame/mpglib/Makefile	/^WITH_FRONTEND = lame.exe$/;"	m
WITH_FRONTEND	lame/vc_solution/Makefile	/^WITH_FRONTEND = lame.exe$/;"	m
WITH_MP3RTP	lame/ACM/ADbg/Makefile	/^WITH_MP3RTP = $/;"	m
WITH_MP3RTP	lame/ACM/Makefile	/^WITH_MP3RTP = $/;"	m
WITH_MP3RTP	lame/ACM/ddk/Makefile	/^WITH_MP3RTP = $/;"	m
WITH_MP3RTP	lame/ACM/tinyxml/Makefile	/^WITH_MP3RTP = $/;"	m
WITH_MP3RTP	lame/Dll/Makefile	/^WITH_MP3RTP = $/;"	m
WITH_MP3RTP	lame/Makefile	/^WITH_MP3RTP = $/;"	m
WITH_MP3RTP	lame/debian/Makefile	/^WITH_MP3RTP = $/;"	m
WITH_MP3RTP	lame/doc/Makefile	/^WITH_MP3RTP = $/;"	m
WITH_MP3RTP	lame/doc/html/Makefile	/^WITH_MP3RTP = $/;"	m
WITH_MP3RTP	lame/doc/man/Makefile	/^WITH_MP3RTP = $/;"	m
WITH_MP3RTP	lame/dshow/Makefile	/^WITH_MP3RTP = $/;"	m
WITH_MP3RTP	lame/frontend/Makefile	/^WITH_MP3RTP = $/;"	m
WITH_MP3RTP	lame/include/Makefile	/^WITH_MP3RTP = $/;"	m
WITH_MP3RTP	lame/libmp3lame/Makefile	/^WITH_MP3RTP = $/;"	m
WITH_MP3RTP	lame/libmp3lame/i386/Makefile	/^WITH_MP3RTP = $/;"	m
WITH_MP3RTP	lame/libmp3lame/vector/Makefile	/^WITH_MP3RTP = $/;"	m
WITH_MP3RTP	lame/mac/Makefile	/^WITH_MP3RTP = $/;"	m
WITH_MP3RTP	lame/macosx/English.lproj/Makefile	/^WITH_MP3RTP = $/;"	m
WITH_MP3RTP	lame/macosx/LAME.xcodeproj/Makefile	/^WITH_MP3RTP = $/;"	m
WITH_MP3RTP	lame/macosx/Makefile	/^WITH_MP3RTP = $/;"	m
WITH_MP3RTP	lame/misc/Makefile	/^WITH_MP3RTP = $/;"	m
WITH_MP3RTP	lame/mpglib/Makefile	/^WITH_MP3RTP = $/;"	m
WITH_MP3RTP	lame/vc_solution/Makefile	/^WITH_MP3RTP = $/;"	m
WITH_MP3X	lame/ACM/ADbg/Makefile	/^WITH_MP3X = $/;"	m
WITH_MP3X	lame/ACM/Makefile	/^WITH_MP3X = $/;"	m
WITH_MP3X	lame/ACM/ddk/Makefile	/^WITH_MP3X = $/;"	m
WITH_MP3X	lame/ACM/tinyxml/Makefile	/^WITH_MP3X = $/;"	m
WITH_MP3X	lame/Dll/Makefile	/^WITH_MP3X = $/;"	m
WITH_MP3X	lame/Makefile	/^WITH_MP3X = $/;"	m
WITH_MP3X	lame/debian/Makefile	/^WITH_MP3X = $/;"	m
WITH_MP3X	lame/doc/Makefile	/^WITH_MP3X = $/;"	m
WITH_MP3X	lame/doc/html/Makefile	/^WITH_MP3X = $/;"	m
WITH_MP3X	lame/doc/man/Makefile	/^WITH_MP3X = $/;"	m
WITH_MP3X	lame/dshow/Makefile	/^WITH_MP3X = $/;"	m
WITH_MP3X	lame/frontend/Makefile	/^WITH_MP3X = $/;"	m
WITH_MP3X	lame/include/Makefile	/^WITH_MP3X = $/;"	m
WITH_MP3X	lame/libmp3lame/Makefile	/^WITH_MP3X = $/;"	m
WITH_MP3X	lame/libmp3lame/i386/Makefile	/^WITH_MP3X = $/;"	m
WITH_MP3X	lame/libmp3lame/vector/Makefile	/^WITH_MP3X = $/;"	m
WITH_MP3X	lame/mac/Makefile	/^WITH_MP3X = $/;"	m
WITH_MP3X	lame/macosx/English.lproj/Makefile	/^WITH_MP3X = $/;"	m
WITH_MP3X	lame/macosx/LAME.xcodeproj/Makefile	/^WITH_MP3X = $/;"	m
WITH_MP3X	lame/macosx/Makefile	/^WITH_MP3X = $/;"	m
WITH_MP3X	lame/misc/Makefile	/^WITH_MP3X = $/;"	m
WITH_MP3X	lame/mpglib/Makefile	/^WITH_MP3X = $/;"	m
WITH_MP3X	lame/vc_solution/Makefile	/^WITH_MP3X = $/;"	m
WORD	OBSApi/Utility/Defs.h	/^typedef unsigned short      USHORT,WORD,*LPWORD;$/;"	t
WORD	OBSApi/Utility/Defs.h	28;"	d
WORDS_BIGENDIAN	lame/mac/Precompile_Common.h	23;"	d
WORD_BE	OBSApi/OBSApi.h	63;"	d
WPMPROC	GraphicsCapture/GraphicsCaptureSource.cpp	/^typedef BOOL(WINAPI *WPMPROC)(HANDLE, LPVOID, LPCVOID, SIZE_T, SIZE_T*);$/;"	t	file:
WPMPROC	injectHelper/injectHelper.c	/^typedef BOOL(WINAPI *WPMPROC)(HANDLE, LPVOID, LPCVOID, SIZE_T, SIZE_T*);$/;"	t	file:
WRITE_SAMPLE_CLIPPED	lame/mpglib/decode_i386.c	67;"	d	file:
WRITE_SAMPLE_UNCLIPPED	lame/mpglib/decode_i386.c	72;"	d	file:
WSTR	OBSApi/Utility/Defs.h	/^typedef wchar_t             *WSTR;$/;"	t
WS_CHILD	CLRHostPlugin/CLRHostInterop/AbstractImageSourceFactory.cpp	3;"	d	file:
WS_VISIBLE	CLRHostPlugin/CLRHostInterop/AbstractImageSourceFactory.cpp	4;"	d	file:
WaitForVBlank	extras/dxgi1_2.h	/^        HRESULT ( STDMETHODCALLTYPE *WaitForVBlank )( $/;"	m	struct:IDXGIOutput1Vtbl
WebGL	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public CefState WebGL { get; set; }$/;"	p	class:Shared.BrowserInstanceSettings
WebSecurity	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public CefState WebSecurity { get; set; }$/;"	p	class:Shared.BrowserInstanceSettings
Width	CLRBrowserSourcePlugin/Plugin/BrowserSource.cs	/^            public UInt32 Width { get; set; }$/;"	p	class:CLRBrowserSourcePlugin.BrowserSource.TextureDesc
Width	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        public int Width { get; set; }$/;"	p	class:Shared.BrowserSourceSettings
Width	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    DWORD       Width;$/;"	m	struct:_D3DVIEWPORT8
Width	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    UINT                Width;$/;"	m	struct:_D3DRECTPATCH_INFO
Width	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    UINT                Width;$/;"	m	struct:_D3DSURFACE_DESC
Width	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    UINT                Width;$/;"	m	struct:_D3DVOLUME_DESC
Width	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    UINT            Width;$/;"	m	struct:_D3DDISPLAYMODE
Width	Source/D3D10Texture.cpp	/^DWORD D3D10Texture::Width() const$/;"	f	class:D3D10Texture
Width	extras/dxgi1_2.h	/^    UINT Width;$/;"	m	struct:DXGI_MODE_DESC1
Width	extras/dxgi1_2.h	/^    UINT Width;$/;"	m	struct:DXGI_OUTDUPL_POINTER_SHAPE_INFO
Width	extras/dxgi1_2.h	/^    UINT Width;$/;"	m	struct:DXGI_SWAP_CHAIN_DESC1
Width	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16  Width;$/;"	m
WinMain	CLRBrowserSourcePlugin/CLRBrowserSourcePipe/CLRBrowserSourcePipe.cpp	/^int APIENTRY WinMain(HINSTANCE hInstance,$/;"	f
WinMain	QSVHelper/QSVHelper.cpp	/^int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR pCmdLine, int nShowCmd)$/;"	f
WinMain	Source/Main.cpp	/^int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nShowCmd)$/;"	f
WinMain	injectHelper/injectHelper.c	/^int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR pCmdLine, int nShowCmd)$/;"	f
WinRegKey	libmfx/include/mfx_win_reg_key.h	/^class WinRegKey$/;"	c	namespace:MFX
WinRegKey	libmfx/src/mfx_win_reg_key.cpp	/^WinRegKey::WinRegKey(void)$/;"	f	class:MFX::WinRegKey
WindowCapture	GraphicsCapture/WindowCapture.h	/^class WindowCapture : public GraphicsCaptureMethod$/;"	c
WindowCapture.cpp	GraphicsCapture/WindowCapture.cpp	1;"	F
WindowCapture.h	GraphicsCapture/WindowCapture.h	1;"	F
WindowInfo	GraphicsCapture/GraphicsCapture.cpp	/^struct WindowInfo$/;"	s	file:
WindowStuff.cpp	Source/WindowStuff.cpp	1;"	F
WindowStuff.h	Source/WindowStuff.h	1;"	F
Windowed	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    BOOL                Windowed;$/;"	m	struct:_D3DPRESENT_PARAMETERS_
Windowed	extras/dxgi1_2.h	/^    BOOL Windowed;$/;"	m	struct:DXGI_SWAP_CHAIN_FULLSCREEN_DESC
Windows	lame/doc/html/links.html	/^<p><b>&nbsp;&nbsp;<a name="Windows">Windows:<\/a><\/b><\/p>$/;"	a
WindowsStuff.h	QSVHelper/WindowsStuff.h	1;"	F
WorkingSet	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    DWORD   WorkingSet;             \/* number of objects in video memory *\/$/;"	m	struct:_D3DRESOURCESTATS
WorkingSetBytes	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    DWORD   WorkingSetBytes;        \/* number of bytes in video memory *\/$/;"	m	struct:_D3DRESOURCESTATS
Write	OBSApi/Utility/XFile_Windows.cpp	/^DWORD XFile::Write(const void *lpBuffer, DWORD dwBytes)$/;"	f	class:XFile
Write	libmfx/src/mfx_dispatcher_log.cpp	/^    virtual void Write(int level, int opcode, const char * msg, va_list argptr)$/;"	f	class:ETWHandler
Write	libmfx/src/mfx_dispatcher_log.cpp	/^    virtual void Write(int level, int opcode, const char * msg, va_list argptr)$/;"	f	class:EventRegistrator
Write	libmfx/src/mfx_dispatcher_log.cpp	/^void   DispatchLog::Write(int level, int opcode, const char * msg, va_list argptr)$/;"	f	class:DispatchLog
Write	libmfx/src/mfx_dispatcher_log.cpp	/^void DispatchLogBlockHelper::Write(const char * str, ...)$/;"	f	class:DispatchLogBlockHelper
Write	libmfx/src/mfx_dispatcher_log.cpp	/^void DispatcherLogBracketsHelper::Write(const char * str, ...)$/;"	f	class:DispatcherLogBracketsHelper
Write	libmfx/src/mfx_dispatcher_log.cpp	/^void FileSink::Write(int level, int \/*opcode*\/, const char * msg, va_list argptr)$/;"	f	class:FileSink
Write	libmfx/src/mfx_dispatcher_trace.cpp	/^    virtual void Write(int level, int \/*opcode*\/, const char * msg, va_list argptr)$/;"	f	class:sdk_library
WriteAACFillBits	libfaac/bitstream.c	/^static int WriteAACFillBits(BitStream* bitStream,$/;"	f	file:
WriteADTSHeader	libfaac/bitstream.c	/^static int WriteADTSHeader(faacEncHandle hEncoder,$/;"	f	file:
WriteAbsoluteJump	minhook/src/hook.cpp	/^	void WriteAbsoluteJump(void* pFrom, void* const pTo, void* pTable)$/;"	f	namespace:MinHook::<anonymous>
WriteAsUTF8	OBSApi/Utility/XFile_Windows.cpp	/^BOOL XFile::WriteAsUTF8(CTSTR lpBuffer, DWORD dwElements)$/;"	f	class:XFile
WriteBitstream	libfaac/bitstream.c	/^int WriteBitstream(faacEncHandle hEncoder,$/;"	f
WriteByte	libfaac/bitstream.c	/^static int WriteByte(BitStream *bitStream,$/;"	f	file:
WriteCPE	libfaac/bitstream.c	/^static int WriteCPE(CoderInfo *coderInfoL,$/;"	f	file:
WriteFAACStr	libfaac/bitstream.c	/^static int WriteFAACStr(BitStream *bitStream, char *version, int write)$/;"	f	file:
WriteFileData	OBSApi/Utility/XConfig.cpp	/^bool  XConfig::WriteFileData(XFile &file, int indent, XElement *curElement)$/;"	f	class:XConfig
WriteFileItem	OBSApi/Utility/XConfig.cpp	/^bool  XConfig::WriteFileItem(XFile &file, int indent, XBaseItem *baseItem)$/;"	f	class:XConfig
WriteGainControlData	libfaac/bitstream.c	/^static int WriteGainControlData(CoderInfo *coderInfo,$/;"	f	file:
WriteICS	libfaac/bitstream.c	/^static int WriteICS(CoderInfo *coderInfo,$/;"	f	file:
WriteICSInfo	libfaac/bitstream.c	/^static int WriteICSInfo(CoderInfo *coderInfo,$/;"	f	file:
WriteLFE	libfaac/bitstream.c	/^static int WriteLFE(CoderInfo *coderInfo,$/;"	f	file:
WriteLTPPredictorData	libfaac/bitstream.c	/^static int WriteLTPPredictorData(CoderInfo *coderInfo, BitStream *bitStream, int writeFlag)$/;"	f	file:
WriteN	librtmp/rtmp.c	/^WriteN(RTMP *r, const char *buffer, int n)$/;"	f	file:
WritePredictorData	libfaac/bitstream.c	/^static int WritePredictorData(CoderInfo *coderInfo,$/;"	f	file:
WritePulseData	libfaac/bitstream.c	/^static int WritePulseData(CoderInfo *coderInfo,$/;"	f	file:
WriteRelativeJump	minhook/src/hook.cpp	/^	void WriteRelativeJump(void* pFrom, void* const pTo)$/;"	f	namespace:MinHook::<anonymous>
WriteReorderedSpectralData	libfaac/bitstream.c	/^static int WriteReorderedSpectralData(CoderInfo *coderInfo,$/;"	f	file:
WriteSCE	libfaac/bitstream.c	/^static int WriteSCE(CoderInfo *coderInfo,$/;"	f	file:
WriteScalefactors	libfaac/huffman.c	/^int WriteScalefactors(CoderInfo *coderInfo,$/;"	f
WriteSettings	scenesw/SceneSwitcher.cpp	/^void SceneSwitcher::WriteSettings()$/;"	f	class:SceneSwitcher
WriteSpectralData	libfaac/bitstream.c	/^static int WriteSpectralData(CoderInfo *coderInfo,$/;"	f	file:
WriteStr	OBSApi/Utility/XFile_Windows.cpp	/^BOOL XFile::WriteStr(CWSTR lpBuffer)$/;"	f	class:XFile
WriteStr	OBSApi/Utility/XFile_Windows.cpp	/^BOOL XFile::WriteStr(LPCSTR lpBuffer)$/;"	f	class:XFile
WriteTNSData	libfaac/bitstream.c	/^static int WriteTNSData(CoderInfo *coderInfo,$/;"	f	file:
WriteToStream	lame/dshow/Mpegac.cpp	/^HRESULT CMpegAudEnc::WriteToStream(IStream *pStream)$/;"	f	class:CMpegAudEnc
WriteWaveHeader	lame/frontend/get_audio.c	/^WriteWaveHeader(FILE * const fp, int pcmbytes, int freq, int channels, int bits)$/;"	f
WriterConfig	lame/frontend/main.h	/^typedef struct WriterConfig$/;"	s
WriterConfig	lame/frontend/main.h	/^} WriterConfig;$/;"	t
X	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    DWORD       X;$/;"	m	struct:_D3DVIEWPORT8
X	OBSApi/Utility/XMath.h	/^            Vect X; \/\/X axis$/;"	m	struct:Matrix
X264Encoder	Source/Encoder_x264.cpp	/^    X264Encoder(int fps, int width, int height, int quality, CTSTR preset, bool bUse444, ColorDescription &colorDesc, int maxBitrate, int bufferSize, bool bUseCFR)$/;"	f	class:X264Encoder
X264Encoder	Source/Encoder_x264.cpp	/^class X264Encoder : public VideoEncoder$/;"	c	file:
X264_ANALYSE_BSUB16x16	x264/x264.h	166;"	d
X264_ANALYSE_I4x4	x264/x264.h	162;"	d
X264_ANALYSE_I8x8	x264/x264.h	163;"	d
X264_ANALYSE_PSUB16x16	x264/x264.h	164;"	d
X264_ANALYSE_PSUB8x8	x264/x264.h	165;"	d
X264_API	x264/x264.h	52;"	d
X264_API	x264/x264.h	54;"	d
X264_AQ_AUTOVARIANCE	x264/x264.h	185;"	d
X264_AQ_AUTOVARIANCE_BIASED	x264/x264.h	186;"	d
X264_AQ_NONE	x264/x264.h	183;"	d
X264_AQ_VARIANCE	x264/x264.h	184;"	d
X264_BIT_DEPTH	x264/x264_config.h	1;"	d
X264_BUILD	x264/x264.h	44;"	d
X264_B_ADAPT_FAST	x264/x264.h	188;"	d
X264_B_ADAPT_NONE	x264/x264.h	187;"	d
X264_B_ADAPT_TRELLIS	x264/x264.h	189;"	d
X264_B_PYRAMID_NONE	x264/x264.h	193;"	d
X264_B_PYRAMID_NORMAL	x264/x264.h	195;"	d
X264_B_PYRAMID_STRICT	x264/x264.h	194;"	d
X264_CHROMA_FORMAT	x264/x264_config.h	4;"	d
X264_CPU_ALTIVEC	x264/x264.h	153;"	d
X264_CPU_ARMV6	x264/x264.h	156;"	d
X264_CPU_ARMV8	x264/x264.h	159;"	d
X264_CPU_AVX	x264/x264.h	129;"	d
X264_CPU_AVX2	x264/x264.h	133;"	d
X264_CPU_BMI1	x264/x264.h	134;"	d
X264_CPU_BMI2	x264/x264.h	135;"	d
X264_CPU_CACHELINE_32	x264/x264.h	137;"	d
X264_CPU_CACHELINE_64	x264/x264.h	138;"	d
X264_CPU_CMOV	x264/x264.h	118;"	d
X264_CPU_FAST_NEON_MRC	x264/x264.h	158;"	d
X264_CPU_FMA3	x264/x264.h	132;"	d
X264_CPU_FMA4	x264/x264.h	131;"	d
X264_CPU_LZCNT	x264/x264.h	128;"	d
X264_CPU_MMX	x264/x264.h	119;"	d
X264_CPU_MMX2	x264/x264.h	120;"	d
X264_CPU_MMXEXT	x264/x264.h	121;"	d
X264_CPU_NEON	x264/x264.h	157;"	d
X264_CPU_SLOW_ATOM	x264/x264.h	144;"	d
X264_CPU_SLOW_CTZ	x264/x264.h	143;"	d
X264_CPU_SLOW_PALIGNR	x264/x264.h	150;"	d
X264_CPU_SLOW_PSHUFB	x264/x264.h	149;"	d
X264_CPU_SLOW_SHUFFLE	x264/x264.h	141;"	d
X264_CPU_SSE	x264/x264.h	122;"	d
X264_CPU_SSE2	x264/x264.h	123;"	d
X264_CPU_SSE2_IS_FAST	x264/x264.h	140;"	d
X264_CPU_SSE2_IS_SLOW	x264/x264.h	139;"	d
X264_CPU_SSE3	x264/x264.h	124;"	d
X264_CPU_SSE4	x264/x264.h	126;"	d
X264_CPU_SSE42	x264/x264.h	127;"	d
X264_CPU_SSSE3	x264/x264.h	125;"	d
X264_CPU_STACK_MOD4	x264/x264.h	142;"	d
X264_CPU_XOP	x264/x264.h	130;"	d
X264_CQM_CUSTOM	x264/x264.h	178;"	d
X264_CQM_FLAT	x264/x264.h	176;"	d
X264_CQM_JVT	x264/x264.h	177;"	d
X264_CSP_BGR	x264/x264.h	223;"	d
X264_CSP_BGRA	x264/x264.h	224;"	d
X264_CSP_HIGH_DEPTH	x264/x264.h	228;"	d
X264_CSP_I420	x264/x264.h	214;"	d
X264_CSP_I422	x264/x264.h	217;"	d
X264_CSP_I444	x264/x264.h	221;"	d
X264_CSP_MASK	x264/x264.h	212;"	d
X264_CSP_MAX	x264/x264.h	226;"	d
X264_CSP_NONE	x264/x264.h	213;"	d
X264_CSP_NV12	x264/x264.h	216;"	d
X264_CSP_NV16	x264/x264.h	219;"	d
X264_CSP_RGB	x264/x264.h	225;"	d
X264_CSP_V210	x264/x264.h	220;"	d
X264_CSP_VFLIP	x264/x264.h	227;"	d
X264_CSP_YV12	x264/x264.h	215;"	d
X264_CSP_YV16	x264/x264.h	218;"	d
X264_CSP_YV24	x264/x264.h	222;"	d
X264_DIRECT_PRED_AUTO	x264/x264.h	170;"	d
X264_DIRECT_PRED_NONE	x264/x264.h	167;"	d
X264_DIRECT_PRED_SPATIAL	x264/x264.h	168;"	d
X264_DIRECT_PRED_TEMPORAL	x264/x264.h	169;"	d
X264_GPL	x264/x264_config.h	2;"	d
X264_INTERLACED	x264/x264_config.h	3;"	d
X264_KEYINT_MAX_INFINITE	x264/x264.h	197;"	d
X264_KEYINT_MIN_AUTO	x264/x264.h	196;"	d
X264_LOG_DEBUG	x264/x264.h	246;"	d
X264_LOG_ERROR	x264/x264.h	243;"	d
X264_LOG_INFO	x264/x264.h	245;"	d
X264_LOG_NONE	x264/x264.h	242;"	d
X264_LOG_WARNING	x264/x264.h	244;"	d
X264_MBINFO_CONSTANT	x264/x264.h	774;"	d
X264_ME_DIA	x264/x264.h	171;"	d
X264_ME_ESA	x264/x264.h	174;"	d
X264_ME_HEX	x264/x264.h	172;"	d
X264_ME_TESA	x264/x264.h	175;"	d
X264_ME_UMH	x264/x264.h	173;"	d
X264_NAL_HRD_CBR	x264/x264.h	255;"	d
X264_NAL_HRD_NONE	x264/x264.h	253;"	d
X264_NAL_HRD_VBR	x264/x264.h	254;"	d
X264_PARAM_BAD_NAME	x264/x264.h	589;"	d
X264_PARAM_BAD_VALUE	x264/x264.h	590;"	d
X264_POINTVER	x264/x264_config.h	8;"	d
X264_QP_AUTO	x264/x264.h	182;"	d
X264_RC_ABR	x264/x264.h	181;"	d
X264_RC_CQP	x264/x264.h	179;"	d
X264_RC_CRF	x264/x264.h	180;"	d
X264_REV	x264/x264_config.h	5;"	d
X264_REV_DIFF	x264/x264_config.h	6;"	d
X264_SYNC_LOOKAHEAD_AUTO	x264/x264.h	250;"	d
X264_THREADS_AUTO	x264/x264.h	249;"	d
X264_TYPE_AUTO	x264/x264.h	231;"	d
X264_TYPE_B	x264/x264.h	236;"	d
X264_TYPE_BREF	x264/x264.h	235;"	d
X264_TYPE_I	x264/x264.h	233;"	d
X264_TYPE_IDR	x264/x264.h	232;"	d
X264_TYPE_KEYFRAME	x264/x264.h	237;"	d
X264_TYPE_P	x264/x264.h	234;"	d
X264_VERSION	x264/x264_config.h	7;"	d
X264_WEIGHTP_NONE	x264/x264.h	190;"	d
X264_WEIGHTP_SIMPLE	x264/x264.h	191;"	d
X264_WEIGHTP_SMART	x264/x264.h	192;"	d
X264_X264_H	x264/x264.h	29;"	d
XBaseItem	OBSApi/Utility/XConfig.h	/^    inline XBaseItem(int type, CTSTR lpName) : type(type), strName(lpName) {}$/;"	f	class:XBaseItem
XBaseItem	OBSApi/Utility/XConfig.h	/^class BASE_EXPORT XBaseItem$/;"	c
XConfig	OBSApi/Utility/XConfig.h	/^    inline XConfig() : RootElement(NULL) {}$/;"	f	class:XConfig
XConfig	OBSApi/Utility/XConfig.h	/^    inline XConfig(TSTR lpFile) : RootElement(NULL) {Open(lpFile);}$/;"	f	class:XConfig
XConfig	OBSApi/Utility/XConfig.h	/^class BASE_EXPORT XConfig$/;"	c
XConfig.cpp	OBSApi/Utility/XConfig.cpp	1;"	F
XConfig.h	OBSApi/Utility/XConfig.h	1;"	F
XConfig_Data	OBSApi/Utility/XConfig.h	/^    XConfig_Data,$/;"	e
XConfig_Element	OBSApi/Utility/XConfig.h	/^    XConfig_Element$/;"	e
XDataItem	OBSApi/Utility/XConfig.h	/^    inline XDataItem(CTSTR lpName, CTSTR lpData)$/;"	f	class:XDataItem
XDataItem	OBSApi/Utility/XConfig.h	/^class XDataItem : public XBaseItem$/;"	c
XElement	CLRHostPlugin/CLRHostInterop/XElement.h	/^        XElement(long long elementPtr) $/;"	f	class:CLROBS::XElement
XElement	CLRHostPlugin/CLRHostInterop/XElement.h	/^        XElement(void *elementPtr)$/;"	f	class:CLROBS::XElement
XElement	CLRHostPlugin/CLRHostInterop/XElement.h	/^    public ref class XElement$/;"	c	namespace:CLROBS
XElement	OBSApi/Utility/XConfig.h	/^    inline XElement(XConfig *XConfig, XElement *parentElement, CTSTR lpName)$/;"	f	class:XElement
XElement	OBSApi/Utility/XConfig.h	/^class BASE_EXPORT XElement : public XBaseItem$/;"	c
XElement.cpp	CLRHostPlugin/CLRHostInterop/XElement.cpp	1;"	F
XElement.h	CLRHostPlugin/CLRHostInterop/XElement.h	1;"	F
XFILE_BEGIN	OBSApi/Utility/XFile.h	34;"	d
XFILE_CREATEALWAYS	OBSApi/Utility/XFile.h	30;"	d
XFILE_CREATENEW	OBSApi/Utility/XFile.h	29;"	d
XFILE_CURPOS	OBSApi/Utility/XFile.h	35;"	d
XFILE_END	OBSApi/Utility/XFile.h	36;"	d
XFILE_ERROR	OBSApi/Utility/XFile.h	23;"	d
XFILE_OPENALWAYS	OBSApi/Utility/XFile.h	32;"	d
XFILE_OPENEXISTING	OBSApi/Utility/XFile.h	31;"	d
XFILE_READ	OBSApi/Utility/XFile.h	25;"	d
XFILE_SHARED	OBSApi/Utility/XFile.h	27;"	d
XFILE_WRITE	OBSApi/Utility/XFile.h	26;"	d
XFile	OBSApi/Utility/XFile.h	/^class BASE_EXPORT XFile$/;"	c
XFile	OBSApi/Utility/XFile_Windows.cpp	/^XFile::XFile()$/;"	f	class:XFile
XFile	OBSApi/Utility/XFile_Windows.cpp	/^XFile::XFile(CTSTR lpFile, DWORD dwAccess, DWORD dwCreationDisposition)$/;"	f	class:XFile
XFile.h	OBSApi/Utility/XFile.h	1;"	F
XFileInputSerializer	OBSApi/Utility/XFile.h	/^    XFileInputSerializer() {bufferSize = 0; bufferPos = 0;}$/;"	f	class:XFileInputSerializer
XFileInputSerializer	OBSApi/Utility/XFile.h	/^class BASE_EXPORT XFileInputSerializer : public Serializer$/;"	c
XFileOutputSerializer	OBSApi/Utility/XFile.h	/^    XFileOutputSerializer() {bufferPos = 0;}$/;"	f	class:XFileOutputSerializer
XFileOutputSerializer	OBSApi/Utility/XFile.h	/^class XFileOutputSerializer : public Serializer$/;"	c
XFile_Windows.cpp	OBSApi/Utility/XFile_Windows.cpp	1;"	F
XING_BITRATE1	lame/libmp3lame/VbrTag.c	64;"	d	file:
XING_BITRATE2	lame/libmp3lame/VbrTag.c	65;"	d	file:
XING_BITRATE25	lame/libmp3lame/VbrTag.c	66;"	d	file:
XING_HEADER_SIZE	lame/mpglib/interface.c	229;"	d	file:
XINPUT_GAMEPAD_LEFT_TRIGGER	OBSApi/HotkeyControlEx.cpp	23;"	d	file:
XINPUT_GAMEPAD_LEFT_TRIGGER	Source/API.cpp	23;"	d	file:
XINPUT_GAMEPAD_RIGHT_TRIGGER	OBSApi/HotkeyControlEx.cpp	24;"	d	file:
XINPUT_GAMEPAD_RIGHT_TRIGGER	Source/API.cpp	24;"	d	file:
XLARGE_INT	OBSApi/Utility/XMath.h	/^union XLARGE_INT$/;"	u
XLARGE_UINT	OBSApi/Utility/XMath.h	/^union XLARGE_UINT$/;"	u
XMath.cpp	OBSApi/Utility/XMath.cpp	1;"	F
XMath.h	OBSApi/Utility/XMath.h	1;"	F
XRPOW_FTOI	lame/libmp3lame/takehiro.c	217;"	d	file:
XRPOW_FTOI	lame/libmp3lame/vbrquantize.c	105;"	d	file:
XRPOW_FTOI	libfaac/aacquant.c	35;"	d	file:
XRect	OBSApi/Utility/XT.h	/^struct XRect$/;"	s
XSTR	lame/frontend/gtkanal.c	61;"	d	file:
XString.cpp	OBSApi/Utility/XString.cpp	1;"	F
XString.h	OBSApi/Utility/XString.h	1;"	F
XStringLog	OBSApi/Utility/XT.cpp	/^        XStringLog() : stopped(false) { Reset(); }$/;"	f	struct:<anonymous>::XStringLog
XStringLog	OBSApi/Utility/XT.cpp	/^    struct XStringLog$/;"	s	file:
XT.cpp	OBSApi/Utility/XT.cpp	1;"	F
XT.h	OBSApi/Utility/XT.h	1;"	F
XTHREAD	OBSApi/Utility/XT_Windows.h	/^typedef DWORD (STDCALL* XTHREAD)(LPVOID);$/;"	t
XTLocalization.cpp	OBSApi/Utility/XTLocalization.cpp	1;"	F
XTLocalization.h	OBSApi/Utility/XTLocalization.h	1;"	F
XT_Windows.cpp	OBSApi/Utility/XT_Windows.cpp	1;"	F
XT_Windows.h	OBSApi/Utility/XT_Windows.h	1;"	F
Xing_seek_table	lame/libmp3lame/VbrTag.c	/^Xing_seek_table(VBR_seek_info_t const* v, unsigned char *t)$/;"	f	file:
XmlTest	lame/ACM/tinyxml/xmltest.cpp	/^bool XmlTest( const char* testString, T expected, T found, bool noEcho = false )$/;"	f
Y	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    DWORD       Y;            \/* Viewport Top left *\/$/;"	m	struct:_D3DVIEWPORT8
Y	OBSApi/Utility/XMath.h	/^            Vect Y; \/\/Y axis$/;"	m	struct:Matrix
Y	lame/doc/html/detailed.html	/^<a name="Y"><span class="hilight">-Y<\/span><\/a> Ignore noise in sbf21, like CBR mode does$/;"	a
Y	libmfx/include/msdk/include/mfxstructures.h	/^        mfxU16   Y;$/;"	m
Y	libmfx/include/msdk/include/mfxstructures.h	/^        mfxU8   *Y;$/;"	m
Y16	libmfx/include/msdk/include/mfxstructures.h	/^        mfxU16  *Y16;$/;"	m
YULE_FILTER	lame/libmp3lame/gain_analysis.h	52;"	d
YULE_ORDER	lame/libmp3lame/gain_analysis.h	50;"	d
Z	OBSApi/Utility/XMath.h	/^            Vect Z; \/\/Z axis$/;"	m	struct:Matrix
ZCmpCaps	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	/^    DWORD   ZCmpCaps;$/;"	m	struct:_D3DCAPS8
ZERO_ARRAY	GraphicsCapture/GraphicsCaptureHook/D3D8Capture.cpp	41;"	d	file:
ZERO_ARRAY	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	49;"	d	file:
ZERO_ARRAY	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	38;"	d	file:
ZERO_ARRAY	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	149;"	d	file:
ZERO_OR_SPACE	libmfx/include/mfx_dispatcher_log.h	54;"	d
ZOH_DATA	libsamplerate/src_zoh.c	/^} ZOH_DATA ;$/;"	t	file:
ZOH_MAGIC_MARKER	libsamplerate/src_zoh.c	39;"	d	file:
Zero	OBSApi/Utility/XMath.h	/^    static inline Vect Zero()                       {return Vect().SetZero();}$/;"	f	struct:Vect
Zero	OBSApi/Utility/XMath.h	/^    static inline Vect4 Zero()                        {return Vect4().SetZero();}$/;"	f	struct:Vect4
_11	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^            float        _11, _12, _13, _14;$/;"	m	struct:_D3DMATRIX::<anonymous>::<anonymous>
_12	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^            float        _11, _12, _13, _14;$/;"	m	struct:_D3DMATRIX::<anonymous>::<anonymous>
_13	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^            float        _11, _12, _13, _14;$/;"	m	struct:_D3DMATRIX::<anonymous>::<anonymous>
_14	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^            float        _11, _12, _13, _14;$/;"	m	struct:_D3DMATRIX::<anonymous>::<anonymous>
_21	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^            float        _21, _22, _23, _24;$/;"	m	struct:_D3DMATRIX::<anonymous>::<anonymous>
_22	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^            float        _21, _22, _23, _24;$/;"	m	struct:_D3DMATRIX::<anonymous>::<anonymous>
_23	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^            float        _21, _22, _23, _24;$/;"	m	struct:_D3DMATRIX::<anonymous>::<anonymous>
_24	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^            float        _21, _22, _23, _24;$/;"	m	struct:_D3DMATRIX::<anonymous>::<anonymous>
_31	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^            float        _31, _32, _33, _34;$/;"	m	struct:_D3DMATRIX::<anonymous>::<anonymous>
_32	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^            float        _31, _32, _33, _34;$/;"	m	struct:_D3DMATRIX::<anonymous>::<anonymous>
_33	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^            float        _31, _32, _33, _34;$/;"	m	struct:_D3DMATRIX::<anonymous>::<anonymous>
_34	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^            float        _31, _32, _33, _34;$/;"	m	struct:_D3DMATRIX::<anonymous>::<anonymous>
_41	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^            float        _41, _42, _43, _44;$/;"	m	struct:_D3DMATRIX::<anonymous>::<anonymous>
_42	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^            float        _41, _42, _43, _44;$/;"	m	struct:_D3DMATRIX::<anonymous>::<anonymous>
_43	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^            float        _41, _42, _43, _44;$/;"	m	struct:_D3DMATRIX::<anonymous>::<anonymous>
_44	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^            float        _41, _42, _43, _44;$/;"	m	struct:_D3DMATRIX::<anonymous>::<anonymous>
_AAC_BACK_H_INCLUDED	libfaac/backpred.h	23;"	d
_ACMSTREAM_H__INCLUDED_	lame/ACM/ACMStream.h	29;"	d
_ACM_H__INCLUDED_	lame/ACM/ACM.h	29;"	d
_AENCODEPROPERTIES_H__INCLUDED_	lame/ACM/AEncodeProperties.h	29;"	d
_APS_NEXT_COMMAND_VALUE	DShowPlugin/resource.h	72;"	d
_APS_NEXT_COMMAND_VALUE	GraphicsCapture/GraphicsCaptureHook/resource.h	10;"	d
_APS_NEXT_COMMAND_VALUE	GraphicsCapture/resource.h	32;"	d
_APS_NEXT_COMMAND_VALUE	OBSApi/resource.h	11;"	d
_APS_NEXT_COMMAND_VALUE	PSVPlugin/resource.h	14;"	d
_APS_NEXT_COMMAND_VALUE	lame/ACM/resource.h	38;"	d
_APS_NEXT_COMMAND_VALUE	lame/dshow/resource.h	55;"	d
_APS_NEXT_COMMAND_VALUE	minhook/dll_resources/resource.h	10;"	d
_APS_NEXT_COMMAND_VALUE	resource.h	451;"	d
_APS_NEXT_COMMAND_VALUE	scenesw/resource.h	59;"	d
_APS_NEXT_CONTROL_VALUE	DShowPlugin/resource.h	73;"	d
_APS_NEXT_CONTROL_VALUE	GraphicsCapture/GraphicsCaptureHook/resource.h	11;"	d
_APS_NEXT_CONTROL_VALUE	GraphicsCapture/resource.h	33;"	d
_APS_NEXT_CONTROL_VALUE	OBSApi/resource.h	12;"	d
_APS_NEXT_CONTROL_VALUE	PSVPlugin/resource.h	15;"	d
_APS_NEXT_CONTROL_VALUE	lame/ACM/resource.h	39;"	d
_APS_NEXT_CONTROL_VALUE	lame/dshow/resource.h	56;"	d
_APS_NEXT_CONTROL_VALUE	minhook/dll_resources/resource.h	11;"	d
_APS_NEXT_CONTROL_VALUE	resource.h	452;"	d
_APS_NEXT_CONTROL_VALUE	scenesw/resource.h	61;"	d
_APS_NEXT_RESOURCE_VALUE	DShowPlugin/resource.h	71;"	d
_APS_NEXT_RESOURCE_VALUE	GraphicsCapture/GraphicsCaptureHook/resource.h	9;"	d
_APS_NEXT_RESOURCE_VALUE	GraphicsCapture/resource.h	31;"	d
_APS_NEXT_RESOURCE_VALUE	OBSApi/resource.h	10;"	d
_APS_NEXT_RESOURCE_VALUE	PSVPlugin/resource.h	13;"	d
_APS_NEXT_RESOURCE_VALUE	lame/ACM/resource.h	37;"	d
_APS_NEXT_RESOURCE_VALUE	lame/dshow/resource.h	54;"	d
_APS_NEXT_RESOURCE_VALUE	minhook/dll_resources/resource.h	9;"	d
_APS_NEXT_RESOURCE_VALUE	resource.h	450;"	d
_APS_NEXT_RESOURCE_VALUE	scenesw/resource.h	57;"	d
_APS_NEXT_SYMED_VALUE	DShowPlugin/resource.h	74;"	d
_APS_NEXT_SYMED_VALUE	GraphicsCapture/GraphicsCaptureHook/resource.h	12;"	d
_APS_NEXT_SYMED_VALUE	GraphicsCapture/resource.h	34;"	d
_APS_NEXT_SYMED_VALUE	OBSApi/resource.h	13;"	d
_APS_NEXT_SYMED_VALUE	PSVPlugin/resource.h	16;"	d
_APS_NEXT_SYMED_VALUE	lame/ACM/resource.h	40;"	d
_APS_NEXT_SYMED_VALUE	lame/dshow/resource.h	57;"	d
_APS_NEXT_SYMED_VALUE	minhook/dll_resources/resource.h	12;"	d
_APS_NEXT_SYMED_VALUE	resource.h	453;"	d
_APS_NEXT_SYMED_VALUE	scenesw/resource.h	63;"	d
_APS_NO_MFC	lame/dshow/resource.h	53;"	d
_Acquires_exclusive_lock_	extras/concurrencysal.h	279;"	d
_Acquires_exclusive_lock_	extras/concurrencysal.h	95;"	d
_Acquires_exclusive_lock_	extras/no_sal2.h	214;"	d
_Acquires_exclusive_lock_	extras/no_sal2.h	216;"	d
_Acquires_lock_	extras/concurrencysal.h	278;"	d
_Acquires_lock_	extras/concurrencysal.h	94;"	d
_Acquires_lock_	extras/no_sal2.h	146;"	d
_Acquires_lock_	extras/no_sal2.h	148;"	d
_Acquires_nonreentrant_lock_	extras/concurrencysal.h	105;"	d
_Acquires_nonreentrant_lock_	extras/concurrencysal.h	284;"	d
_Acquires_nonreentrant_lock_	extras/no_sal2.h	966;"	d
_Acquires_nonreentrant_lock_	extras/no_sal2.h	968;"	d
_Acquires_shared_lock_	extras/concurrencysal.h	280;"	d
_Acquires_shared_lock_	extras/concurrencysal.h	96;"	d
_Acquires_shared_lock_	extras/no_sal2.h	202;"	d
_Acquires_shared_lock_	extras/no_sal2.h	204;"	d
_Allocate	OBSApi/Utility/DebugAlloc.cpp	/^void * __restrict DebugAlloc::_Allocate(size_t dwSize)$/;"	f	class:DebugAlloc
_Allocate	OBSApi/Utility/DebugAlloc.cpp	/^void* __restrict DefaultAlloc::_Allocate(size_t dwSize)$/;"	f	class:DefaultAlloc
_Allocate	OBSApi/Utility/FastAlloc.cpp	/^void * __restrict FastAlloc::_Allocate(size_t dwSize)$/;"	f	class:FastAlloc
_Always_	extras/no_sal2.h	126;"	d
_Always_	extras/no_sal2.h	128;"	d
_Always_	extras/sal.h	281;"	d
_Always_impl_	extras/sal.h	1517;"	d
_Always_impl_	extras/sal.h	1996;"	d
_Always_impl_	extras/sal.h	2097;"	d
_Analysis_assume_	extras/no_sal2.h	742;"	d
_Analysis_assume_	extras/no_sal2.h	744;"	d
_Analysis_assume_	extras/sal.h	2902;"	d
_Analysis_assume_	extras/sal.h	2904;"	d
_Analysis_assume_lock_acquired_	extras/concurrencysal.h	150;"	d
_Analysis_assume_lock_acquired_	extras/concurrencysal.h	298;"	d
_Analysis_assume_lock_acquired_	extras/no_sal2.h	242;"	d
_Analysis_assume_lock_acquired_	extras/no_sal2.h	244;"	d
_Analysis_assume_lock_held_	extras/concurrencysal.h	153;"	d
_Analysis_assume_lock_held_	extras/concurrencysal.h	300;"	d
_Analysis_assume_lock_held_	extras/no_sal2.h	250;"	d
_Analysis_assume_lock_held_	extras/no_sal2.h	252;"	d
_Analysis_assume_lock_not_held_	extras/concurrencysal.h	154;"	d
_Analysis_assume_lock_not_held_	extras/concurrencysal.h	301;"	d
_Analysis_assume_lock_not_held_	extras/no_sal2.h	254;"	d
_Analysis_assume_lock_not_held_	extras/no_sal2.h	256;"	d
_Analysis_assume_lock_released_	extras/concurrencysal.h	151;"	d
_Analysis_assume_lock_released_	extras/concurrencysal.h	299;"	d
_Analysis_assume_lock_released_	extras/no_sal2.h	246;"	d
_Analysis_assume_lock_released_	extras/no_sal2.h	248;"	d
_Analysis_assume_nullterminated_	extras/sal.h	2914;"	d
_Analysis_assume_nullterminated_	extras/sal.h	2916;"	d
_Analysis_assume_same_lock_	extras/concurrencysal.h	155;"	d
_Analysis_assume_same_lock_	extras/concurrencysal.h	302;"	d
_Analysis_assume_same_lock_	extras/no_sal2.h	258;"	d
_Analysis_assume_same_lock_	extras/no_sal2.h	260;"	d
_Analysis_mode_	extras/no_sal2.h	746;"	d
_Analysis_mode_	extras/no_sal2.h	748;"	d
_Analysis_mode_	extras/sal.h	2940;"	d
_Analysis_mode_	extras/sal.h	2947;"	d
_Analysis_mode_impl_	extras/sal.h	2932;"	d
_Analysis_noreturn_	extras/no_sal2.h	750;"	d
_Analysis_noreturn_	extras/no_sal2.h	752;"	d
_Analysis_noreturn_	extras/sal.h	2908;"	d
_Analysis_suppress_lock_checking_	extras/concurrencysal.h	166;"	d
_Analysis_suppress_lock_checking_	extras/concurrencysal.h	304;"	d
_Analysis_suppress_lock_checking_	extras/no_sal2.h	978;"	d
_Analysis_suppress_lock_checking_	extras/no_sal2.h	980;"	d
_At_	extras/no_sal2.h	26;"	d
_At_	extras/no_sal2.h	28;"	d
_At_	extras/sal.h	255;"	d
_At_buffer_	extras/no_sal2.h	30;"	d
_At_buffer_	extras/no_sal2.h	32;"	d
_At_buffer_	extras/sal.h	261;"	d
_At_buffer_impl_	extras/sal.h	1758;"	d
_At_buffer_impl_	extras/sal.h	1865;"	d
_At_buffer_impl_	extras/sal.h	1977;"	d
_At_buffer_impl_	extras/sal.h	2081;"	d
_At_impl_	extras/sal.h	1757;"	d
_At_impl_	extras/sal.h	1864;"	d
_At_impl_	extras/sal.h	1976;"	d
_At_impl_	extras/sal.h	2077;"	d
_BOM	OBSApi/Utility/utf8.cpp	27;"	d	file:
_Benign_race_begin_	extras/concurrencysal.h	168;"	d
_Benign_race_begin_	extras/concurrencysal.h	306;"	d
_Benign_race_begin_	extras/no_sal2.h	182;"	d
_Benign_race_begin_	extras/no_sal2.h	184;"	d
_Benign_race_end_	extras/concurrencysal.h	169;"	d
_Benign_race_end_	extras/concurrencysal.h	307;"	d
_Benign_race_end_	extras/no_sal2.h	186;"	d
_Benign_race_end_	extras/no_sal2.h	188;"	d
_Bound_impl_	extras/sal.h	1518;"	d
_COM_Outptr_	extras/no_sal2.h	506;"	d
_COM_Outptr_	extras/no_sal2.h	508;"	d
_COM_Outptr_	extras/sal.h	460;"	d
_COM_Outptr_opt_	extras/no_sal2.h	510;"	d
_COM_Outptr_opt_	extras/no_sal2.h	512;"	d
_COM_Outptr_opt_	extras/sal.h	462;"	d
_COM_Outptr_opt_result_maybenull_	extras/no_sal2.h	518;"	d
_COM_Outptr_opt_result_maybenull_	extras/no_sal2.h	520;"	d
_COM_Outptr_opt_result_maybenull_	extras/sal.h	463;"	d
_COM_Outptr_result_maybenull_	extras/no_sal2.h	514;"	d
_COM_Outptr_result_maybenull_	extras/no_sal2.h	516;"	d
_COM_Outptr_result_maybenull_	extras/sal.h	461;"	d
_CRT_SECURE_NO_WARNINGS	Source/mongoose.c	50;"	d	file:
_Called_from_function_class_	extras/sal.h	2963;"	d
_Check_return_	extras/no_sal2.h	66;"	d
_Check_return_	extras/no_sal2.h	68;"	d
_Check_return_	extras/sal.h	568;"	d
_Check_return_impl_	extras/sal.h	1681;"	d
_Check_return_impl_	extras/sal.h	1802;"	d
_Check_return_impl_	extras/sal.h	1991;"	d
_Check_return_impl_	extras/sal.h	2092;"	d
_Close	libmfx/include/msdk/include/mfxplugin++.h	/^        static mfxStatus _Close(mfxHDL pthis) {$/;"	f	class:detail::MFXCodecPluginAdapterBase
_Const_	extras/no_sal2.h	62;"	d
_Const_	extras/no_sal2.h	64;"	d
_Const_	extras/sal.h	310;"	d
_Create_lock_level_	extras/concurrencysal.h	120;"	d
_Create_lock_level_	extras/concurrencysal.h	291;"	d
_Create_lock_level_	extras/no_sal2.h	230;"	d
_Create_lock_level_	extras/no_sal2.h	232;"	d
_Csalcat1_	extras/concurrencysal.h	125;"	d
_Csalcat1_	extras/concurrencysal.h	294;"	d
_Csalcat2_	extras/concurrencysal.h	126;"	d
_Csalcat2_	extras/concurrencysal.h	295;"	d
_D3D8CAPS_H	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	11;"	d
_D3D8TYPES_H_	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	11;"	d
_D3D8_H_	GraphicsCapture/GraphicsCaptureHook/d3d8.h	11;"	d
_D3DADAPTER_IDENTIFIER8	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef struct _D3DADAPTER_IDENTIFIER8$/;"	s
_D3DBACKBUFFER_TYPE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef enum _D3DBACKBUFFER_TYPE$/;"	g
_D3DBASISTYPE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef enum _D3DBASISTYPE$/;"	g
_D3DBLEND	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef enum _D3DBLEND {$/;"	g
_D3DBLENDOP	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef enum _D3DBLENDOP {$/;"	g
_D3DBOX	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef struct _D3DBOX$/;"	s
_D3DCAPS8	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	/^typedef struct _D3DCAPS8$/;"	s
_D3DCLIPSTATUS8	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef struct _D3DCLIPSTATUS8 {$/;"	s
_D3DCMPFUNC	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef enum _D3DCMPFUNC {$/;"	g
_D3DCOLORVALUE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef struct _D3DCOLORVALUE {$/;"	s
_D3DCUBEMAP_FACES	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef enum _D3DCUBEMAP_FACES$/;"	g
_D3DCULL	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef enum _D3DCULL {$/;"	g
_D3DDEBUGMONITORTOKENS	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef enum _D3DDEBUGMONITORTOKENS {$/;"	g
_D3DDEVICE_CREATION_PARAMETERS	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef struct _D3DDEVICE_CREATION_PARAMETERS$/;"	s
_D3DDEVINFO_D3DVERTEXSTATS	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef struct _D3DDEVINFO_D3DVERTEXSTATS$/;"	s
_D3DDEVINFO_RESOURCEMANAGER	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef struct _D3DDEVINFO_RESOURCEMANAGER$/;"	s
_D3DDEVTYPE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef enum _D3DDEVTYPE$/;"	g
_D3DDISPLAYMODE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef struct _D3DDISPLAYMODE$/;"	s
_D3DFILLMODE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef enum _D3DFILLMODE {$/;"	g
_D3DFOGMODE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef enum _D3DFOGMODE {$/;"	g
_D3DFORMAT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef enum _D3DFORMAT$/;"	g
_D3DGAMMARAMP	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef struct _D3DGAMMARAMP$/;"	s
_D3DINDEXBUFFER_DESC	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef struct _D3DINDEXBUFFER_DESC$/;"	s
_D3DLIGHT8	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef struct _D3DLIGHT8 {$/;"	s
_D3DLIGHTTYPE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef enum _D3DLIGHTTYPE {$/;"	g
_D3DLINEPATTERN	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef struct _D3DLINEPATTERN {$/;"	s
_D3DLOCKED_BOX	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef struct _D3DLOCKED_BOX$/;"	s
_D3DLOCKED_RECT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef struct _D3DLOCKED_RECT$/;"	s
_D3DMATERIAL8	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef struct _D3DMATERIAL8 {$/;"	s
_D3DMATERIALCOLORSOURCE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef enum _D3DMATERIALCOLORSOURCE$/;"	g
_D3DMATRIX	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef struct _D3DMATRIX {$/;"	s
_D3DMULTISAMPLE_TYPE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef enum _D3DMULTISAMPLE_TYPE$/;"	g
_D3DORDERTYPE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef enum _D3DORDERTYPE$/;"	g
_D3DPATCHEDGESTYLE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef enum _D3DPATCHEDGESTYLE$/;"	g
_D3DPOOL	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef enum _D3DPOOL {$/;"	g
_D3DPRESENT_PARAMETERS_	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef struct _D3DPRESENT_PARAMETERS_$/;"	s
_D3DPRIMITIVETYPE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef enum _D3DPRIMITIVETYPE {$/;"	g
_D3DRANGE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef struct _D3DRANGE$/;"	s
_D3DRASTER_STATUS	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef struct _D3DRASTER_STATUS$/;"	s
_D3DRECT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef struct _D3DRECT {$/;"	s
_D3DRECTPATCH_INFO	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef struct _D3DRECTPATCH_INFO$/;"	s
_D3DRENDERSTATETYPE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef enum _D3DRENDERSTATETYPE {$/;"	g
_D3DRESOURCESTATS	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef struct _D3DRESOURCESTATS$/;"	s
_D3DRESOURCETYPE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef enum _D3DRESOURCETYPE {$/;"	g
_D3DSHADEMODE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef enum _D3DSHADEMODE {$/;"	g
_D3DSHADER_INSTRUCTION_OPCODE_TYPE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef enum _D3DSHADER_INSTRUCTION_OPCODE_TYPE$/;"	g
_D3DSHADER_PARAM_DSTMOD_TYPE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef enum _D3DSHADER_PARAM_DSTMOD_TYPE$/;"	g
_D3DSHADER_PARAM_REGISTER_TYPE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef enum _D3DSHADER_PARAM_REGISTER_TYPE$/;"	g
_D3DSHADER_PARAM_SRCMOD_TYPE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef enum _D3DSHADER_PARAM_SRCMOD_TYPE$/;"	g
_D3DSTATEBLOCKTYPE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef enum _D3DSTATEBLOCKTYPE$/;"	g
_D3DSTENCILOP	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef enum _D3DSTENCILOP {$/;"	g
_D3DSURFACE_DESC	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef struct _D3DSURFACE_DESC$/;"	s
_D3DSWAPEFFECT	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef enum _D3DSWAPEFFECT$/;"	g
_D3DTEXTUREADDRESS	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef enum _D3DTEXTUREADDRESS {$/;"	g
_D3DTEXTUREFILTERTYPE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef enum _D3DTEXTUREFILTERTYPE$/;"	g
_D3DTEXTUREOP	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef enum _D3DTEXTUREOP$/;"	g
_D3DTEXTURESTAGESTATETYPE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef enum _D3DTEXTURESTAGESTATETYPE$/;"	g
_D3DTEXTURETRANSFORMFLAGS	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef enum _D3DTEXTURETRANSFORMFLAGS {$/;"	g
_D3DTRANSFORMSTATETYPE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef enum _D3DTRANSFORMSTATETYPE {$/;"	g
_D3DTRIPATCH_INFO	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef struct _D3DTRIPATCH_INFO$/;"	s
_D3DVECTOR	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef struct _D3DVECTOR {$/;"	s
_D3DVERTEXBLENDFLAGS	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef enum _D3DVERTEXBLENDFLAGS$/;"	g
_D3DVERTEXBUFFER_DESC	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef struct _D3DVERTEXBUFFER_DESC$/;"	s
_D3DVIEWPORT8	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef struct _D3DVIEWPORT8 {$/;"	s
_D3DVOLUME_DESC	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef struct _D3DVOLUME_DESC$/;"	s
_D3DVSD_TOKENTYPE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef enum _D3DVSD_TOKENTYPE$/;"	g
_D3DVS_ADDRESSMODE_TYPE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef enum _D3DVS_ADDRESSMODE_TYPE$/;"	g
_D3DVS_RASTOUT_OFFSETS	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef enum _D3DVS_RASTOUT_OFFSETS$/;"	g
_D3DZBUFFERTYPE	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^typedef enum _D3DZBUFFERTYPE {$/;"	g
_DBG_H__INCLUDED_	lame/ACM/ADbg/ADbg.h	36;"	d
_DEBUG	DShowPlugin/DeviceSource.cpp	185;"	d	file:
_DEBUG	DShowPlugin/DeviceSource.cpp	202;"	d	file:
_DEBUG_H__INCLUDED_	lame/ACM/adebug.h	29;"	d
_DECODESTREAM_H__INCLUDED_	lame/ACM/DecodeStream.h	29;"	d
_DLGC_WANTALLKEYS	CLRHostPlugin/CLRHostInterop/AbstractWPFSettingsPane.h	12;"	d
_DLGC_WANTCHARS	CLRHostPlugin/CLRHostInterop/AbstractWPFSettingsPane.h	11;"	d
_DS_CONTROL	CLRHostPlugin/CLRHostInterop/AbstractWPFSettingsPane.h	17;"	d
_DXGI_OFFER_RESOURCE_PRIORITY	extras/dxgi1_2.h	/^enum _DXGI_OFFER_RESOURCE_PRIORITY$/;"	g
_DecodeFrameSubmit	libmfx/include/msdk/include/mfxplugin++.h	/^        static mfxStatus _DecodeFrameSubmit(mfxHDL pthis, mfxBitstream *bs, mfxFrameSurface1 *surface_work, mfxFrameSurface1 **surface_out,  mfxThreadTask *task) {$/;"	f	class:detail::MFXPluginAdapterInternal
_DecodeHeader	libmfx/include/msdk/include/mfxplugin++.h	/^        static mfxStatus _DecodeHeader(mfxHDL pthis, mfxBitstream *bs, mfxVideoParam *par) {$/;"	f	class:detail::MFXPluginAdapterInternal
_Deref2_post1_impl_	extras/sal.h	1792;"	d
_Deref2_post1_impl_	extras/sal.h	1897;"	d
_Deref2_post1_impl_	extras/sal.h	2069;"	d
_Deref2_post1_impl_	extras/sal.h	2159;"	d
_Deref2_pre1_impl_	extras/sal.h	1791;"	d
_Deref2_pre1_impl_	extras/sal.h	1896;"	d
_Deref2_pre1_impl_	extras/sal.h	2068;"	d
_Deref2_pre1_impl_	extras/sal.h	2158;"	d
_Deref2_pre_readonly_	extras/sal.h	1223;"	d
_Deref2_ret1_impl_	extras/sal.h	1793;"	d
_Deref2_ret1_impl_	extras/sal.h	1898;"	d
_Deref2_ret1_impl_	extras/sal.h	2070;"	d
_Deref2_ret1_impl_	extras/sal.h	2160;"	d
_Deref_	extras/no_sal2.h	46;"	d
_Deref_	extras/no_sal2.h	48;"	d
_Deref_impl_	extras/sal.h	1585;"	d
_Deref_impl_	extras/sal.h	1610;"	d
_Deref_in_bound_	extras/sal.h	1017;"	d
_Deref_in_bound_impl_	extras/sal.h	1693;"	d
_Deref_in_bound_impl_	extras/sal.h	1814;"	d
_Deref_in_bound_impl_	extras/sal.h	2008;"	d
_Deref_in_bound_impl_	extras/sal.h	2106;"	d
_Deref_in_range_	extras/no_sal2.h	714;"	d
_Deref_in_range_	extras/no_sal2.h	716;"	d
_Deref_in_range_	extras/sal.h	585;"	d
_Deref_in_range_impl_	extras/sal.h	1549;"	d
_Deref_in_range_impl_	extras/sal.h	2016;"	d
_Deref_in_range_impl_	extras/sal.h	2114;"	d
_Deref_inout_bound_	extras/sal.h	1019;"	d
_Deref_inout_range_	extras/no_sal2.h	722;"	d
_Deref_inout_range_	extras/no_sal2.h	724;"	d
_Deref_inout_z_	extras/sal.h	1484;"	d
_Deref_inout_z_bytecap_c_	extras/sal.h	1483;"	d
_Deref_inout_z_cap_c_	extras/sal.h	1481;"	d
_Deref_opt_out_	extras/sal.h	1025;"	d
_Deref_opt_out_opt_	extras/sal.h	1026;"	d
_Deref_opt_out_opt_z_	extras/sal.h	1032;"	d
_Deref_opt_out_z_	extras/sal.h	1031;"	d
_Deref_out_	extras/sal.h	1023;"	d
_Deref_out_bound_	extras/sal.h	1018;"	d
_Deref_out_bound_impl_	extras/sal.h	1694;"	d
_Deref_out_bound_impl_	extras/sal.h	1815;"	d
_Deref_out_bound_impl_	extras/sal.h	2009;"	d
_Deref_out_bound_impl_	extras/sal.h	2107;"	d
_Deref_out_opt_	extras/sal.h	1024;"	d
_Deref_out_opt_z_	extras/sal.h	1030;"	d
_Deref_out_range_	extras/no_sal2.h	718;"	d
_Deref_out_range_	extras/no_sal2.h	720;"	d
_Deref_out_range_	extras/sal.h	586;"	d
_Deref_out_range_impl_	extras/sal.h	1550;"	d
_Deref_out_range_impl_	extras/sal.h	2017;"	d
_Deref_out_range_impl_	extras/sal.h	2115;"	d
_Deref_out_z_	extras/sal.h	1029;"	d
_Deref_out_z_bytecap_c_	extras/sal.h	1482;"	d
_Deref_out_z_cap_c_	extras/sal.h	1480;"	d
_Deref_post1_impl_	extras/sal.h	1783;"	d
_Deref_post1_impl_	extras/sal.h	1888;"	d
_Deref_post1_impl_	extras/sal.h	2060;"	d
_Deref_post1_impl_	extras/sal.h	2150;"	d
_Deref_post2_impl_	extras/sal.h	1784;"	d
_Deref_post2_impl_	extras/sal.h	1889;"	d
_Deref_post2_impl_	extras/sal.h	2061;"	d
_Deref_post2_impl_	extras/sal.h	2151;"	d
_Deref_post3_impl_	extras/sal.h	1785;"	d
_Deref_post3_impl_	extras/sal.h	1890;"	d
_Deref_post3_impl_	extras/sal.h	2062;"	d
_Deref_post3_impl_	extras/sal.h	2152;"	d
_Deref_post_bytecap_	extras/sal.h	1139;"	d
_Deref_post_bytecap_c_	extras/sal.h	1145;"	d
_Deref_post_bytecap_x_	extras/sal.h	1151;"	d
_Deref_post_bytecount_	extras/sal.h	1190;"	d
_Deref_post_bytecount_c_	extras/sal.h	1196;"	d
_Deref_post_bytecount_x_	extras/sal.h	1202;"	d
_Deref_post_cap_	extras/sal.h	1137;"	d
_Deref_post_cap_c_	extras/sal.h	1143;"	d
_Deref_post_cap_x_	extras/sal.h	1149;"	d
_Deref_post_count_	extras/sal.h	1188;"	d
_Deref_post_count_c_	extras/sal.h	1194;"	d
_Deref_post_count_x_	extras/sal.h	1200;"	d
_Deref_post_impl_	extras/sal.h	1554;"	d
_Deref_post_maybenull_	extras/sal.h	1210;"	d
_Deref_post_notnull_	extras/sal.h	1209;"	d
_Deref_post_null_	extras/sal.h	1211;"	d
_Deref_post_opt_bytecap_	extras/sal.h	1140;"	d
_Deref_post_opt_bytecap_c_	extras/sal.h	1146;"	d
_Deref_post_opt_bytecap_x_	extras/sal.h	1152;"	d
_Deref_post_opt_bytecount_	extras/sal.h	1191;"	d
_Deref_post_opt_bytecount_c_	extras/sal.h	1197;"	d
_Deref_post_opt_bytecount_x_	extras/sal.h	1203;"	d
_Deref_post_opt_cap_	extras/sal.h	1138;"	d
_Deref_post_opt_cap_c_	extras/sal.h	1144;"	d
_Deref_post_opt_cap_x_	extras/sal.h	1150;"	d
_Deref_post_opt_count_	extras/sal.h	1189;"	d
_Deref_post_opt_count_c_	extras/sal.h	1195;"	d
_Deref_post_opt_count_x_	extras/sal.h	1201;"	d
_Deref_post_opt_valid_	extras/sal.h	1207;"	d
_Deref_post_opt_valid_bytecap_	extras/sal.h	1174;"	d
_Deref_post_opt_valid_bytecap_c_	extras/sal.h	1179;"	d
_Deref_post_opt_valid_bytecap_x_	extras/sal.h	1184;"	d
_Deref_post_opt_valid_cap_	extras/sal.h	1172;"	d
_Deref_post_opt_valid_cap_c_	extras/sal.h	1177;"	d
_Deref_post_opt_valid_cap_x_	extras/sal.h	1182;"	d
_Deref_post_opt_z_	extras/sal.h	1133;"	d
_Deref_post_opt_z_bytecap_	extras/sal.h	1158;"	d
_Deref_post_opt_z_bytecap_c_	extras/sal.h	1163;"	d
_Deref_post_opt_z_bytecap_x_	extras/sal.h	1168;"	d
_Deref_post_opt_z_cap_	extras/sal.h	1156;"	d
_Deref_post_opt_z_cap_c_	extras/sal.h	1161;"	d
_Deref_post_opt_z_cap_x_	extras/sal.h	1166;"	d
_Deref_post_valid_	extras/sal.h	1206;"	d
_Deref_post_valid_bytecap_	extras/sal.h	1173;"	d
_Deref_post_valid_bytecap_c_	extras/sal.h	1178;"	d
_Deref_post_valid_bytecap_x_	extras/sal.h	1183;"	d
_Deref_post_valid_cap_	extras/sal.h	1171;"	d
_Deref_post_valid_cap_c_	extras/sal.h	1176;"	d
_Deref_post_valid_cap_x_	extras/sal.h	1181;"	d
_Deref_post_z_	extras/sal.h	1132;"	d
_Deref_post_z_bytecap_	extras/sal.h	1157;"	d
_Deref_post_z_bytecap_c_	extras/sal.h	1162;"	d
_Deref_post_z_bytecap_x_	extras/sal.h	1167;"	d
_Deref_post_z_cap_	extras/sal.h	1155;"	d
_Deref_post_z_cap_c_	extras/sal.h	1160;"	d
_Deref_post_z_cap_x_	extras/sal.h	1165;"	d
_Deref_pre1_impl_	extras/sal.h	1778;"	d
_Deref_pre1_impl_	extras/sal.h	1884;"	d
_Deref_pre1_impl_	extras/sal.h	2056;"	d
_Deref_pre1_impl_	extras/sal.h	2146;"	d
_Deref_pre2_impl_	extras/sal.h	1779;"	d
_Deref_pre2_impl_	extras/sal.h	1885;"	d
_Deref_pre2_impl_	extras/sal.h	2057;"	d
_Deref_pre2_impl_	extras/sal.h	2147;"	d
_Deref_pre3_impl_	extras/sal.h	1780;"	d
_Deref_pre3_impl_	extras/sal.h	1886;"	d
_Deref_pre3_impl_	extras/sal.h	2058;"	d
_Deref_pre3_impl_	extras/sal.h	2148;"	d
_Deref_pre_bytecap_	extras/sal.h	1047;"	d
_Deref_pre_bytecap_c_	extras/sal.h	1053;"	d
_Deref_pre_bytecap_x_	extras/sal.h	1059;"	d
_Deref_pre_bytecount_	extras/sal.h	1098;"	d
_Deref_pre_bytecount_c_	extras/sal.h	1104;"	d
_Deref_pre_bytecount_x_	extras/sal.h	1110;"	d
_Deref_pre_cap_	extras/sal.h	1045;"	d
_Deref_pre_cap_c_	extras/sal.h	1051;"	d
_Deref_pre_cap_x_	extras/sal.h	1057;"	d
_Deref_pre_count_	extras/sal.h	1096;"	d
_Deref_pre_count_c_	extras/sal.h	1102;"	d
_Deref_pre_count_x_	extras/sal.h	1108;"	d
_Deref_pre_impl_	extras/sal.h	1553;"	d
_Deref_pre_invalid_	extras/sal.h	1116;"	d
_Deref_pre_maybenull_	extras/sal.h	1119;"	d
_Deref_pre_notnull_	extras/sal.h	1118;"	d
_Deref_pre_null_	extras/sal.h	1120;"	d
_Deref_pre_opt_bytecap_	extras/sal.h	1048;"	d
_Deref_pre_opt_bytecap_c_	extras/sal.h	1054;"	d
_Deref_pre_opt_bytecap_x_	extras/sal.h	1060;"	d
_Deref_pre_opt_bytecount_	extras/sal.h	1099;"	d
_Deref_pre_opt_bytecount_c_	extras/sal.h	1105;"	d
_Deref_pre_opt_bytecount_x_	extras/sal.h	1111;"	d
_Deref_pre_opt_cap_	extras/sal.h	1046;"	d
_Deref_pre_opt_cap_c_	extras/sal.h	1052;"	d
_Deref_pre_opt_cap_x_	extras/sal.h	1058;"	d
_Deref_pre_opt_count_	extras/sal.h	1097;"	d
_Deref_pre_opt_count_c_	extras/sal.h	1103;"	d
_Deref_pre_opt_count_x_	extras/sal.h	1109;"	d
_Deref_pre_opt_valid_	extras/sal.h	1115;"	d
_Deref_pre_opt_valid_bytecap_	extras/sal.h	1082;"	d
_Deref_pre_opt_valid_bytecap_c_	extras/sal.h	1087;"	d
_Deref_pre_opt_valid_bytecap_x_	extras/sal.h	1092;"	d
_Deref_pre_opt_valid_cap_	extras/sal.h	1080;"	d
_Deref_pre_opt_valid_cap_c_	extras/sal.h	1085;"	d
_Deref_pre_opt_valid_cap_x_	extras/sal.h	1090;"	d
_Deref_pre_opt_z_	extras/sal.h	1041;"	d
_Deref_pre_opt_z_bytecap_	extras/sal.h	1066;"	d
_Deref_pre_opt_z_bytecap_c_	extras/sal.h	1071;"	d
_Deref_pre_opt_z_bytecap_x_	extras/sal.h	1076;"	d
_Deref_pre_opt_z_cap_	extras/sal.h	1064;"	d
_Deref_pre_opt_z_cap_c_	extras/sal.h	1069;"	d
_Deref_pre_opt_z_cap_x_	extras/sal.h	1074;"	d
_Deref_pre_readonly_	extras/sal.h	1123;"	d
_Deref_pre_valid_	extras/sal.h	1114;"	d
_Deref_pre_valid_bytecap_	extras/sal.h	1081;"	d
_Deref_pre_valid_bytecap_c_	extras/sal.h	1086;"	d
_Deref_pre_valid_bytecap_x_	extras/sal.h	1091;"	d
_Deref_pre_valid_cap_	extras/sal.h	1079;"	d
_Deref_pre_valid_cap_c_	extras/sal.h	1084;"	d
_Deref_pre_valid_cap_x_	extras/sal.h	1089;"	d
_Deref_pre_writeonly_	extras/sal.h	1124;"	d
_Deref_pre_z_	extras/sal.h	1040;"	d
_Deref_pre_z_bytecap_	extras/sal.h	1065;"	d
_Deref_pre_z_bytecap_c_	extras/sal.h	1070;"	d
_Deref_pre_z_bytecap_x_	extras/sal.h	1075;"	d
_Deref_pre_z_cap_	extras/sal.h	1063;"	d
_Deref_pre_z_cap_c_	extras/sal.h	1068;"	d
_Deref_pre_z_cap_x_	extras/sal.h	1073;"	d
_Deref_prepost_bytecap_	extras/sal.h	1439;"	d
_Deref_prepost_bytecap_x_	extras/sal.h	1444;"	d
_Deref_prepost_bytecount_	extras/sal.h	1464;"	d
_Deref_prepost_bytecount_x_	extras/sal.h	1469;"	d
_Deref_prepost_cap_	extras/sal.h	1437;"	d
_Deref_prepost_cap_x_	extras/sal.h	1442;"	d
_Deref_prepost_count_	extras/sal.h	1462;"	d
_Deref_prepost_count_x_	extras/sal.h	1467;"	d
_Deref_prepost_opt_bytecap_	extras/sal.h	1440;"	d
_Deref_prepost_opt_bytecap_x_	extras/sal.h	1445;"	d
_Deref_prepost_opt_bytecount_	extras/sal.h	1465;"	d
_Deref_prepost_opt_bytecount_x_	extras/sal.h	1470;"	d
_Deref_prepost_opt_cap_	extras/sal.h	1438;"	d
_Deref_prepost_opt_cap_x_	extras/sal.h	1443;"	d
_Deref_prepost_opt_count_	extras/sal.h	1463;"	d
_Deref_prepost_opt_count_x_	extras/sal.h	1468;"	d
_Deref_prepost_opt_valid_	extras/sal.h	1473;"	d
_Deref_prepost_opt_valid_bytecap_	extras/sal.h	1455;"	d
_Deref_prepost_opt_valid_bytecap_x_	extras/sal.h	1460;"	d
_Deref_prepost_opt_valid_cap_	extras/sal.h	1453;"	d
_Deref_prepost_opt_valid_cap_x_	extras/sal.h	1458;"	d
_Deref_prepost_opt_z_	extras/sal.h	1435;"	d
_Deref_prepost_opt_z_bytecap_	extras/sal.h	1450;"	d
_Deref_prepost_opt_z_cap_	extras/sal.h	1448;"	d
_Deref_prepost_valid_	extras/sal.h	1472;"	d
_Deref_prepost_valid_bytecap_	extras/sal.h	1454;"	d
_Deref_prepost_valid_bytecap_x_	extras/sal.h	1459;"	d
_Deref_prepost_valid_cap_	extras/sal.h	1452;"	d
_Deref_prepost_valid_cap_x_	extras/sal.h	1457;"	d
_Deref_prepost_z_	extras/sal.h	1434;"	d
_Deref_prepost_z_bytecap_	extras/sal.h	1449;"	d
_Deref_prepost_z_cap_	extras/sal.h	1447;"	d
_Deref_ret1_impl_	extras/sal.h	1787;"	d
_Deref_ret1_impl_	extras/sal.h	1892;"	d
_Deref_ret1_impl_	extras/sal.h	2064;"	d
_Deref_ret1_impl_	extras/sal.h	2154;"	d
_Deref_ret2_impl_	extras/sal.h	1788;"	d
_Deref_ret2_impl_	extras/sal.h	1893;"	d
_Deref_ret2_impl_	extras/sal.h	2065;"	d
_Deref_ret2_impl_	extras/sal.h	2155;"	d
_Deref_ret3_impl_	extras/sal.h	1789;"	d
_Deref_ret3_impl_	extras/sal.h	1894;"	d
_Deref_ret3_impl_	extras/sal.h	2066;"	d
_Deref_ret3_impl_	extras/sal.h	2156;"	d
_Deref_ret_bound_	extras/sal.h	1020;"	d
_Deref_ret_bound_impl_	extras/sal.h	1695;"	d
_Deref_ret_bound_impl_	extras/sal.h	1816;"	d
_Deref_ret_bound_impl_	extras/sal.h	2010;"	d
_Deref_ret_bound_impl_	extras/sal.h	2108;"	d
_Deref_ret_opt_z_	extras/sal.h	1218;"	d
_Deref_ret_range_	extras/sal.h	587;"	d
_Deref_ret_range_impl_	extras/sal.h	1551;"	d
_Deref_ret_range_impl_	extras/sal.h	2018;"	d
_Deref_ret_range_impl_	extras/sal.h	2116;"	d
_Deref_ret_z_	extras/sal.h	1217;"	d
_EM_INEXACT	lame/libmp3lame/util.c	893;"	d	file:
_EM_INVALID	lame/libmp3lame/util.c	897;"	d	file:
_EM_OVERFLOW	lame/libmp3lame/util.c	895;"	d	file:
_EM_UNDERFLOW	lame/libmp3lame/util.c	894;"	d	file:
_EM_ZERODIVIDE	lame/libmp3lame/util.c	896;"	d	file:
_EncodeFrameSubmit	libmfx/include/msdk/include/mfxplugin++.h	/^        static mfxStatus _EncodeFrameSubmit(mfxHDL pthis, mfxEncodeCtrl *ctrl, mfxFrameSurface1 *surface, mfxBitstream *bs, mfxThreadTask *task) {$/;"	f	class:detail::MFXPluginAdapterInternal
_Enum_is_bitflag_	extras/no_sal2.h	774;"	d
_Enum_is_bitflag_	extras/no_sal2.h	776;"	d
_Enum_is_bitflag_	extras/sal.h	2967;"	d
_Execute	libmfx/include/msdk/include/mfxplugin++.h	/^        static mfxStatus _Execute(mfxHDL pthis, mfxThreadTask task, mfxU32 thread_id, mfxU32 call_count) { $/;"	f	class:detail::MFXPluginAdapterBase
_FAACCFG_H_	libfaac/include/faaccfg.h	23;"	d
_FAAC_H_	libfaac/include/faac.h	23;"	d
_FACD3D	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1242;"	d
_FFT_H_	libfaac/fft.h	23;"	d
_FILE_OFFSET_BITS	Source/mongoose.c	64;"	d	file:
_FLOAT	lame/frontend/amiga_mpega.c	25;"	d	file:
_FPU_GETCW	lame/libmp3lame/util.c	890;"	d	file:
_FPU_GETCW	lame/libmp3lame/util.c	910;"	d	file:
_FPU_SETCW	lame/libmp3lame/util.c	891;"	d	file:
_FPU_SETCW	lame/libmp3lame/util.c	913;"	d	file:
_Field_range_	extras/no_sal2.h	726;"	d
_Field_range_	extras/no_sal2.h	728;"	d
_Field_range_	extras/sal.h	620;"	d
_Field_range_impl_	extras/sal.h	1519;"	d
_Field_range_impl_	extras/sal.h	2020;"	d
_Field_range_impl_	extras/sal.h	2130;"	d
_Field_size_	extras/no_sal2.h	630;"	d
_Field_size_	extras/no_sal2.h	632;"	d
_Field_size_	extras/sal.h	604;"	d
_Field_size_bytes_	extras/no_sal2.h	638;"	d
_Field_size_bytes_	extras/no_sal2.h	640;"	d
_Field_size_bytes_	extras/sal.h	611;"	d
_Field_size_bytes_full_	extras/no_sal2.h	670;"	d
_Field_size_bytes_full_	extras/no_sal2.h	672;"	d
_Field_size_bytes_full_	extras/sal.h	615;"	d
_Field_size_bytes_full_opt_	extras/no_sal2.h	674;"	d
_Field_size_bytes_full_opt_	extras/no_sal2.h	676;"	d
_Field_size_bytes_full_opt_	extras/sal.h	616;"	d
_Field_size_bytes_opt_	extras/no_sal2.h	642;"	d
_Field_size_bytes_opt_	extras/no_sal2.h	644;"	d
_Field_size_bytes_opt_	extras/sal.h	612;"	d
_Field_size_bytes_part_	extras/no_sal2.h	654;"	d
_Field_size_bytes_part_	extras/no_sal2.h	656;"	d
_Field_size_bytes_part_	extras/sal.h	613;"	d
_Field_size_bytes_part_opt_	extras/no_sal2.h	658;"	d
_Field_size_bytes_part_opt_	extras/no_sal2.h	660;"	d
_Field_size_bytes_part_opt_	extras/sal.h	614;"	d
_Field_size_full_	extras/no_sal2.h	662;"	d
_Field_size_full_	extras/no_sal2.h	664;"	d
_Field_size_full_	extras/sal.h	608;"	d
_Field_size_full_opt_	extras/no_sal2.h	666;"	d
_Field_size_full_opt_	extras/no_sal2.h	668;"	d
_Field_size_full_opt_	extras/sal.h	609;"	d
_Field_size_opt_	extras/no_sal2.h	634;"	d
_Field_size_opt_	extras/no_sal2.h	636;"	d
_Field_size_opt_	extras/sal.h	605;"	d
_Field_size_part_	extras/no_sal2.h	646;"	d
_Field_size_part_	extras/no_sal2.h	648;"	d
_Field_size_part_	extras/sal.h	606;"	d
_Field_size_part_opt_	extras/no_sal2.h	650;"	d
_Field_size_part_opt_	extras/no_sal2.h	652;"	d
_Field_size_part_opt_	extras/sal.h	607;"	d
_Field_z_	extras/sal.h	618;"	d
_Format_string_impl_	extras/sal.h	576;"	d
_Free	OBSApi/Utility/DebugAlloc.cpp	/^void DebugAlloc::_Free(LPVOID lpData)$/;"	f	class:DebugAlloc
_Free	OBSApi/Utility/DebugAlloc.cpp	/^void DefaultAlloc::_Free(LPVOID lpData)$/;"	f	class:DefaultAlloc
_Free	OBSApi/Utility/FastAlloc.cpp	/^void FastAlloc::_Free(LPVOID lpMemory)$/;"	f	class:FastAlloc
_FreeResources	libmfx/include/msdk/include/mfxplugin++.h	/^        static mfxStatus _FreeResources(mfxHDL pthis, mfxThreadTask task, mfxStatus sts) { $/;"	f	class:detail::MFXPluginAdapterBase
_Function_class_	extras/no_sal2.h	762;"	d
_Function_class_	extras/no_sal2.h	764;"	d
_Function_class_	extras/sal.h	2965;"	d
_Function_ignore_lock_checking_	extras/concurrencysal.h	160;"	d
_Function_ignore_lock_checking_	extras/concurrencysal.h	303;"	d
_Function_ignore_lock_checking_	extras/no_sal2.h	974;"	d
_Function_ignore_lock_checking_	extras/no_sal2.h	976;"	d
_GetPayload	libmfx/include/msdk/include/mfxplugin++.h	/^        static mfxStatus _GetPayload(mfxHDL pthis, mfxU64 *ts, mfxPayload *payload) {$/;"	f	class:detail::MFXPluginAdapterInternal
_GetPluginParam	libmfx/include/msdk/include/mfxplugin++.h	/^        static mfxStatus _GetPluginParam(mfxHDL pthis, mfxPluginParam *par) { $/;"	f	class:detail::MFXPluginAdapterBase
_GetVideoParam	libmfx/include/msdk/include/mfxplugin++.h	/^        static mfxStatus _GetVideoParam(mfxHDL pthis, mfxVideoParam *par) {$/;"	f	class:detail::MFXCodecPluginAdapterBase
_GrouP_	extras/sal.h	267;"	d
_GrouP_impl_	extras/sal.h	1762;"	d
_GrouP_impl_	extras/sal.h	1867;"	d
_GrouP_impl_	extras/sal.h	1980;"	d
_GrouP_impl_	extras/sal.h	2080;"	d
_Group_	extras/no_sal2.h	34;"	d
_Group_	extras/no_sal2.h	36;"	d
_Group_	extras/sal.h	266;"	d
_Group_impl_	extras/sal.h	1761;"	d
_Group_impl_	extras/sal.h	1866;"	d
_Group_impl_	extras/sal.h	1979;"	d
_Group_impl_	extras/sal.h	2079;"	d
_Guarded_by_	extras/concurrencysal.h	270;"	d
_Guarded_by_	extras/concurrencysal.h	70;"	d
_Guarded_by_	extras/no_sal2.h	166;"	d
_Guarded_by_	extras/no_sal2.h	168;"	d
_HDE32_H_	minhook/src/HDE32/hde32.h	11;"	d
_HDE64_H_	minhook/src/HDE64/include/hde64.h	11;"	d
_Has_lock_kind_	extras/concurrencysal.h	177;"	d
_Has_lock_kind_	extras/concurrencysal.h	312;"	d
_Has_lock_kind_	extras/no_sal2.h	226;"	d
_Has_lock_kind_	extras/no_sal2.h	228;"	d
_Has_lock_level_	extras/concurrencysal.h	122;"	d
_Has_lock_level_	extras/concurrencysal.h	292;"	d
_Has_lock_level_	extras/no_sal2.h	234;"	d
_Has_lock_level_	extras/no_sal2.h	236;"	d
_INC_WINAPIFAMILY	extras/winapifamily.h	16;"	d
_INTEGRAL_MAX_BITS	Source/mongoose.c	48;"	d	file:
_IRQL_always_function_max_	extras/no_sal2.h	826;"	d
_IRQL_always_function_max_	extras/no_sal2.h	828;"	d
_IRQL_always_function_min_	extras/no_sal2.h	822;"	d
_IRQL_always_function_min_	extras/no_sal2.h	824;"	d
_IRQL_is_cancel_	extras/no_sal2.h	838;"	d
_IRQL_is_cancel_	extras/no_sal2.h	840;"	d
_IRQL_raises_	extras/no_sal2.h	790;"	d
_IRQL_raises_	extras/no_sal2.h	792;"	d
_IRQL_requires_	extras/no_sal2.h	794;"	d
_IRQL_requires_	extras/no_sal2.h	796;"	d
_IRQL_requires_max_	extras/no_sal2.h	798;"	d
_IRQL_requires_max_	extras/no_sal2.h	800;"	d
_IRQL_requires_min_	extras/no_sal2.h	802;"	d
_IRQL_requires_min_	extras/no_sal2.h	804;"	d
_IRQL_requires_same_	extras/no_sal2.h	830;"	d
_IRQL_requires_same_	extras/no_sal2.h	832;"	d
_IRQL_restores_	extras/no_sal2.h	814;"	d
_IRQL_restores_	extras/no_sal2.h	816;"	d
_IRQL_restores_global_	extras/no_sal2.h	818;"	d
_IRQL_restores_global_	extras/no_sal2.h	820;"	d
_IRQL_saves_	extras/no_sal2.h	806;"	d
_IRQL_saves_	extras/no_sal2.h	808;"	d
_IRQL_saves_global_	extras/no_sal2.h	810;"	d
_IRQL_saves_global_	extras/no_sal2.h	812;"	d
_IRQL_uses_cancel_	extras/no_sal2.h	834;"	d
_IRQL_uses_cancel_	extras/no_sal2.h	836;"	d
_ISOC99_SOURCE	libsamplerate/float_cast.h	69;"	d
_ISOC9X_SOURCE	libsamplerate/float_cast.h	68;"	d
_In_	extras/no_sal2.h	262;"	d
_In_	extras/no_sal2.h	264;"	d
_In_	extras/sal.h	319;"	d
_In_bound_	extras/sal.h	1014;"	d
_In_bound_impl_	extras/sal.h	1690;"	d
_In_bound_impl_	extras/sal.h	1811;"	d
_In_bound_impl_	extras/sal.h	2005;"	d
_In_bound_impl_	extras/sal.h	2103;"	d
_In_bytecount_	extras/sal.h	823;"	d
_In_bytecount_c_	extras/sal.h	829;"	d
_In_bytecount_x_	extras/sal.h	856;"	d
_In_count_	extras/sal.h	821;"	d
_In_count_c_	extras/sal.h	827;"	d
_In_count_x_	extras/sal.h	854;"	d
_In_defensive_	extras/no_sal2.h	934;"	d
_In_defensive_	extras/no_sal2.h	936;"	d
_In_defensive_	extras/sal.h	297;"	d
_In_function_class_	extras/sal.h	2962;"	d
_In_opt_	extras/no_sal2.h	370;"	d
_In_opt_	extras/no_sal2.h	372;"	d
_In_opt_	extras/sal.h	320;"	d
_In_opt_bytecount_	extras/sal.h	824;"	d
_In_opt_bytecount_c_	extras/sal.h	830;"	d
_In_opt_bytecount_x_	extras/sal.h	857;"	d
_In_opt_count_	extras/sal.h	822;"	d
_In_opt_count_c_	extras/sal.h	828;"	d
_In_opt_count_x_	extras/sal.h	855;"	d
_In_opt_ptrdiff_count_	extras/sal.h	850;"	d
_In_opt_z_	extras/no_sal2.h	382;"	d
_In_opt_z_	extras/no_sal2.h	384;"	d
_In_opt_z_	extras/sal.h	325;"	d
_In_opt_z_bytecount_	extras/sal.h	839;"	d
_In_opt_z_bytecount_c_	extras/sal.h	845;"	d
_In_opt_z_count_	extras/sal.h	837;"	d
_In_opt_z_count_c_	extras/sal.h	843;"	d
_In_ptrdiff_count_	extras/sal.h	849;"	d
_In_range_	extras/no_sal2.h	702;"	d
_In_range_	extras/no_sal2.h	704;"	d
_In_range_	extras/sal.h	582;"	d
_In_range_impl_	extras/sal.h	1546;"	d
_In_range_impl_	extras/sal.h	2013;"	d
_In_range_impl_	extras/sal.h	2111;"	d
_In_reads_	extras/no_sal2.h	282;"	d
_In_reads_	extras/no_sal2.h	284;"	d
_In_reads_	extras/sal.h	330;"	d
_In_reads_bytes_	extras/no_sal2.h	286;"	d
_In_reads_bytes_	extras/no_sal2.h	288;"	d
_In_reads_bytes_	extras/sal.h	332;"	d
_In_reads_bytes_opt_	extras/no_sal2.h	398;"	d
_In_reads_bytes_opt_	extras/no_sal2.h	400;"	d
_In_reads_bytes_opt_	extras/sal.h	333;"	d
_In_reads_opt_	extras/no_sal2.h	390;"	d
_In_reads_opt_	extras/no_sal2.h	392;"	d
_In_reads_opt_	extras/sal.h	331;"	d
_In_reads_opt_z_	extras/no_sal2.h	394;"	d
_In_reads_opt_z_	extras/no_sal2.h	396;"	d
_In_reads_opt_z_	extras/sal.h	335;"	d
_In_reads_or_z_	extras/no_sal2.h	294;"	d
_In_reads_or_z_	extras/no_sal2.h	296;"	d
_In_reads_or_z_	extras/sal.h	336;"	d
_In_reads_or_z_opt_	extras/sal.h	337;"	d
_In_reads_to_ptr_	extras/no_sal2.h	354;"	d
_In_reads_to_ptr_	extras/no_sal2.h	356;"	d
_In_reads_to_ptr_	extras/sal.h	342;"	d
_In_reads_to_ptr_opt_	extras/no_sal2.h	458;"	d
_In_reads_to_ptr_opt_	extras/no_sal2.h	460;"	d
_In_reads_to_ptr_opt_	extras/sal.h	343;"	d
_In_reads_to_ptr_opt_z_	extras/no_sal2.h	462;"	d
_In_reads_to_ptr_opt_z_	extras/no_sal2.h	464;"	d
_In_reads_to_ptr_opt_z_	extras/sal.h	345;"	d
_In_reads_to_ptr_z_	extras/no_sal2.h	358;"	d
_In_reads_to_ptr_z_	extras/no_sal2.h	360;"	d
_In_reads_to_ptr_z_	extras/sal.h	344;"	d
_In_reads_z_	extras/no_sal2.h	290;"	d
_In_reads_z_	extras/no_sal2.h	292;"	d
_In_reads_z_	extras/sal.h	334;"	d
_In_z_	extras/no_sal2.h	274;"	d
_In_z_	extras/no_sal2.h	276;"	d
_In_z_	extras/sal.h	324;"	d
_In_z_bytecount_	extras/sal.h	838;"	d
_In_z_bytecount_c_	extras/sal.h	844;"	d
_In_z_count_	extras/sal.h	836;"	d
_In_z_count_c_	extras/sal.h	842;"	d
_Init	libmfx/include/msdk/include/mfxplugin++.h	/^        static mfxStatus _Init(mfxHDL pthis, mfxVideoParam *par){$/;"	f	class:detail::MFXCodecPluginAdapterBase
_Inout_	extras/no_sal2.h	270;"	d
_Inout_	extras/no_sal2.h	272;"	d
_Inout_	extras/sal.h	389;"	d
_Inout_bytecap_	extras/sal.h	978;"	d
_Inout_bytecap_c_	extras/sal.h	983;"	d
_Inout_bytecap_x_	extras/sal.h	988;"	d
_Inout_bytecount_	extras/sal.h	947;"	d
_Inout_bytecount_c_	extras/sal.h	952;"	d
_Inout_bytecount_x_	extras/sal.h	972;"	d
_Inout_cap_	extras/sal.h	976;"	d
_Inout_cap_c_	extras/sal.h	981;"	d
_Inout_cap_x_	extras/sal.h	986;"	d
_Inout_count_	extras/sal.h	945;"	d
_Inout_count_c_	extras/sal.h	950;"	d
_Inout_count_x_	extras/sal.h	970;"	d
_Inout_defensive_	extras/no_sal2.h	942;"	d
_Inout_defensive_	extras/no_sal2.h	944;"	d
_Inout_defensive_	extras/sal.h	299;"	d
_Inout_opt_	extras/no_sal2.h	378;"	d
_Inout_opt_	extras/no_sal2.h	380;"	d
_Inout_opt_	extras/sal.h	390;"	d
_Inout_opt_bytecap_	extras/sal.h	979;"	d
_Inout_opt_bytecap_c_	extras/sal.h	984;"	d
_Inout_opt_bytecap_x_	extras/sal.h	989;"	d
_Inout_opt_bytecount_	extras/sal.h	948;"	d
_Inout_opt_bytecount_c_	extras/sal.h	953;"	d
_Inout_opt_bytecount_x_	extras/sal.h	973;"	d
_Inout_opt_cap_	extras/sal.h	977;"	d
_Inout_opt_cap_c_	extras/sal.h	982;"	d
_Inout_opt_cap_x_	extras/sal.h	987;"	d
_Inout_opt_count_	extras/sal.h	946;"	d
_Inout_opt_count_c_	extras/sal.h	951;"	d
_Inout_opt_count_x_	extras/sal.h	971;"	d
_Inout_opt_ptrdiff_count_	extras/sal.h	968;"	d
_Inout_opt_z_	extras/no_sal2.h	386;"	d
_Inout_opt_z_	extras/no_sal2.h	388;"	d
_Inout_opt_z_	extras/sal.h	395;"	d
_Inout_opt_z_bytecap_	extras/sal.h	996;"	d
_Inout_opt_z_bytecap_c_	extras/sal.h	1001;"	d
_Inout_opt_z_bytecap_x_	extras/sal.h	1006;"	d
_Inout_opt_z_bytecount_	extras/sal.h	960;"	d
_Inout_opt_z_bytecount_c_	extras/sal.h	965;"	d
_Inout_opt_z_cap_	extras/sal.h	994;"	d
_Inout_opt_z_cap_c_	extras/sal.h	999;"	d
_Inout_opt_z_cap_x_	extras/sal.h	1004;"	d
_Inout_opt_z_count_	extras/sal.h	958;"	d
_Inout_opt_z_count_c_	extras/sal.h	963;"	d
_Inout_ptrdiff_count_	extras/sal.h	967;"	d
_Inout_updates_	extras/no_sal2.h	310;"	d
_Inout_updates_	extras/no_sal2.h	312;"	d
_Inout_updates_	extras/sal.h	398;"	d
_Inout_updates_all_	extras/no_sal2.h	346;"	d
_Inout_updates_all_	extras/no_sal2.h	348;"	d
_Inout_updates_all_	extras/sal.h	406;"	d
_Inout_updates_all_opt_	extras/no_sal2.h	450;"	d
_Inout_updates_all_opt_	extras/no_sal2.h	452;"	d
_Inout_updates_all_opt_	extras/sal.h	407;"	d
_Inout_updates_bytes_	extras/no_sal2.h	314;"	d
_Inout_updates_bytes_	extras/no_sal2.h	316;"	d
_Inout_updates_bytes_	extras/sal.h	410;"	d
_Inout_updates_bytes_all_	extras/no_sal2.h	350;"	d
_Inout_updates_bytes_all_	extras/no_sal2.h	352;"	d
_Inout_updates_bytes_all_	extras/sal.h	416;"	d
_Inout_updates_bytes_all_opt_	extras/no_sal2.h	454;"	d
_Inout_updates_bytes_all_opt_	extras/no_sal2.h	456;"	d
_Inout_updates_bytes_all_opt_	extras/sal.h	417;"	d
_Inout_updates_bytes_opt_	extras/no_sal2.h	418;"	d
_Inout_updates_bytes_opt_	extras/no_sal2.h	420;"	d
_Inout_updates_bytes_opt_	extras/sal.h	411;"	d
_Inout_updates_bytes_to_	extras/no_sal2.h	342;"	d
_Inout_updates_bytes_to_	extras/no_sal2.h	344;"	d
_Inout_updates_bytes_to_	extras/sal.h	413;"	d
_Inout_updates_bytes_to_opt_	extras/no_sal2.h	446;"	d
_Inout_updates_bytes_to_opt_	extras/no_sal2.h	448;"	d
_Inout_updates_bytes_to_opt_	extras/sal.h	414;"	d
_Inout_updates_opt_	extras/no_sal2.h	414;"	d
_Inout_updates_opt_	extras/no_sal2.h	416;"	d
_Inout_updates_opt_	extras/sal.h	399;"	d
_Inout_updates_opt_z_	extras/no_sal2.h	422;"	d
_Inout_updates_opt_z_	extras/no_sal2.h	424;"	d
_Inout_updates_opt_z_	extras/sal.h	401;"	d
_Inout_updates_to_	extras/no_sal2.h	338;"	d
_Inout_updates_to_	extras/no_sal2.h	340;"	d
_Inout_updates_to_	extras/sal.h	403;"	d
_Inout_updates_to_opt_	extras/no_sal2.h	442;"	d
_Inout_updates_to_opt_	extras/no_sal2.h	444;"	d
_Inout_updates_to_opt_	extras/sal.h	404;"	d
_Inout_updates_z_	extras/no_sal2.h	318;"	d
_Inout_updates_z_	extras/no_sal2.h	320;"	d
_Inout_updates_z_	extras/sal.h	400;"	d
_Inout_z_	extras/no_sal2.h	278;"	d
_Inout_z_	extras/no_sal2.h	280;"	d
_Inout_z_	extras/sal.h	394;"	d
_Inout_z_bytecap_	extras/sal.h	995;"	d
_Inout_z_bytecap_c_	extras/sal.h	1000;"	d
_Inout_z_bytecap_x_	extras/sal.h	1005;"	d
_Inout_z_bytecount_	extras/sal.h	959;"	d
_Inout_z_bytecount_c_	extras/sal.h	964;"	d
_Inout_z_cap_	extras/sal.h	993;"	d
_Inout_z_cap_c_	extras/sal.h	998;"	d
_Inout_z_cap_x_	extras/sal.h	1003;"	d
_Inout_z_count_	extras/sal.h	957;"	d
_Inout_z_count_c_	extras/sal.h	962;"	d
_Interlocked_	extras/concurrencysal.h	272;"	d
_Interlocked_	extras/concurrencysal.h	72;"	d
_Interlocked_	extras/no_sal2.h	174;"	d
_Interlocked_	extras/no_sal2.h	176;"	d
_Interlocked_operand_	extras/concurrencysal.h	267;"	d
_Interlocked_operand_	extras/concurrencysal.h	78;"	d
_Interlocked_operand_	extras/no_sal2.h	786;"	d
_Interlocked_operand_	extras/no_sal2.h	788;"	d
_Internal_create_CSAL_identifier_	extras/concurrencysal.h	59;"	d
_Internal_lock_level_order_	extras/concurrencysal.h	124;"	d
_Internal_lock_level_order_	extras/concurrencysal.h	293;"	d
_Internal_set_lock_count_	extras/concurrencysal.h	289;"	d
_Internal_set_lock_count_to_one_	extras/concurrencysal.h	144;"	d
_Internal_set_lock_count_to_zero_	extras/concurrencysal.h	143;"	d
_Kernel_IoGetDmaAdapter_	extras/no_sal2.h	874;"	d
_Kernel_IoGetDmaAdapter_	extras/no_sal2.h	876;"	d
_Kernel_acquires_resource_	extras/no_sal2.h	854;"	d
_Kernel_acquires_resource_	extras/no_sal2.h	856;"	d
_Kernel_clear_do_init_	extras/no_sal2.h	870;"	d
_Kernel_clear_do_init_	extras/no_sal2.h	872;"	d
_Kernel_float_restored_	extras/no_sal2.h	846;"	d
_Kernel_float_restored_	extras/no_sal2.h	848;"	d
_Kernel_float_saved_	extras/no_sal2.h	842;"	d
_Kernel_float_saved_	extras/no_sal2.h	844;"	d
_Kernel_float_used_	extras/no_sal2.h	850;"	d
_Kernel_float_used_	extras/no_sal2.h	852;"	d
_Kernel_releases_resource_	extras/no_sal2.h	858;"	d
_Kernel_releases_resource_	extras/no_sal2.h	860;"	d
_Kernel_requires_resource_held_	extras/no_sal2.h	862;"	d
_Kernel_requires_resource_held_	extras/no_sal2.h	864;"	d
_Kernel_requires_resource_not_held_	extras/no_sal2.h	866;"	d
_Kernel_requires_resource_not_held_	extras/no_sal2.h	868;"	d
_LARGEFILE_SOURCE	Source/mongoose.c	62;"	d	file:
_LIBNSGIF_H_	Source/libnsgif.h	15;"	d
_Literal_	extras/no_sal2.h	766;"	d
_Literal_	extras/no_sal2.h	768;"	d
_Literal_	extras/sal.h	564;"	d
_Literal_impl_	extras/sal.h	1520;"	d
_Literal_impl_	extras/sal.h	1984;"	d
_Literal_impl_	extras/sal.h	2084;"	d
_Lock_level_order_	extras/concurrencysal.h	128;"	d
_Lock_level_order_	extras/concurrencysal.h	296;"	d
_Lock_level_order_	extras/no_sal2.h	238;"	d
_Lock_level_order_	extras/no_sal2.h	240;"	d
_MBCS	Source/mongoose.c	46;"	d	file:
_MD5_H	librtmp/md5.h	29;"	d
_MDCT_SCALE	libfaac/ltp.c	46;"	d	file:
_MIDSIDE_H	libfaac/midside.h	23;"	d
_MMAP_DECLARED	Source/mongoose.c	80;"	d	file:
_MPGLIB_H_	lame/mpglib/mpglib.h	22;"	d
_MSACMDRV_H_	lame/ACM/ddk/msacmdrv.h	28;"	d
_MSC_INTTYPES_H_	extras/inttypes.h	37;"	d
_MSC_INTTYPES_H_	lame/inttypes.h	37;"	d
_Maybe_raises_SEH_exception_	extras/no_sal2.h	758;"	d
_Maybe_raises_SEH_exception_	extras/no_sal2.h	760;"	d
_Maybe_raises_SEH_exception_	extras/sal.h	2970;"	d
_Maybe_raises_SEH_exception_impl_	extras/sal.h	2003;"	d
_Maybenull_	extras/no_sal2.h	58;"	d
_Maybenull_	extras/no_sal2.h	60;"	d
_Maybenull_	extras/sal.h	670;"	d
_Maybenull_impl_	extras/sal.h	1521;"	d
_Maybenull_impl_	extras/sal.h	2028;"	d
_Maybenull_impl_	extras/sal.h	2124;"	d
_Maybevalid_	extras/sal.h	639;"	d
_Maybevalid_impl_	extras/sal.h	1522;"	d
_Maybevalid_impl_	extras/sal.h	2032;"	d
_Maybevalid_impl_	extras/sal.h	2128;"	d
_Must_inspect_impl_	extras/sal.h	1523;"	d
_Must_inspect_impl_	extras/sal.h	1992;"	d
_Must_inspect_impl_	extras/sal.h	2093;"	d
_Must_inspect_result_	extras/no_sal2.h	70;"	d
_Must_inspect_result_	extras/no_sal2.h	72;"	d
_Must_inspect_result_	extras/sal.h	569;"	d
_NO_SAL_2_H_	extras/no_sal2.h	19;"	d
_NVENCSTATUS	ObsNvenc/inc/nvEncodeAPI.h	/^typedef enum _NVENCSTATUS$/;"	g
_NVENC_EXTERNAL_ME_HINT	ObsNvenc/inc/nvEncodeAPI.h	/^typedef struct _NVENC_EXTERNAL_ME_HINT$/;"	s
_NVENC_EXTERNAL_ME_HINT_COUNTS_PER_BLOCKTYPE	ObsNvenc/inc/nvEncodeAPI.h	/^typedef struct _NVENC_EXTERNAL_ME_HINT_COUNTS_PER_BLOCKTYPE$/;"	s
_NVENC_RECT	ObsNvenc/inc/nvEncodeAPI.h	/^typedef struct _NVENC_RECT$/;"	s
_NV_ENCODEAPI_H_	ObsNvenc/inc/nvEncodeAPI.h	69;"	d
_NV_ENCODE_API_FUNCTION_LIST	ObsNvenc/inc/nvEncodeAPI.h	/^typedef struct _NV_ENCODE_API_FUNCTION_LIST$/;"	s
_NV_ENC_BUFFER_FORMAT	ObsNvenc/inc/nvEncodeAPI.h	/^typedef enum _NV_ENC_BUFFER_FORMAT$/;"	g
_NV_ENC_CAPS	ObsNvenc/inc/nvEncodeAPI.h	/^typedef enum _NV_ENC_CAPS$/;"	g
_NV_ENC_CAPS_PARAM	ObsNvenc/inc/nvEncodeAPI.h	/^typedef struct _NV_ENC_CAPS_PARAM$/;"	s
_NV_ENC_CODEC_CONFIG	ObsNvenc/inc/nvEncodeAPI.h	/^typedef union _NV_ENC_CODEC_CONFIG$/;"	u
_NV_ENC_CODEC_PIC_PARAMS	ObsNvenc/inc/nvEncodeAPI.h	/^typedef union _NV_ENC_CODEC_PIC_PARAMS$/;"	u
_NV_ENC_CONFIG	ObsNvenc/inc/nvEncodeAPI.h	/^typedef struct _NV_ENC_CONFIG$/;"	s
_NV_ENC_CONFIG_H264	ObsNvenc/inc/nvEncodeAPI.h	/^typedef struct _NV_ENC_CONFIG_H264$/;"	s
_NV_ENC_CONFIG_H264_VUI_PARAMETERS	ObsNvenc/inc/nvEncodeAPI.h	/^typedef struct _NV_ENC_CONFIG_H264_VUI_PARAMETERS$/;"	s
_NV_ENC_CREATE_BITSTREAM_BUFFER	ObsNvenc/inc/nvEncodeAPI.h	/^typedef struct _NV_ENC_CREATE_BITSTREAM_BUFFER$/;"	s
_NV_ENC_CREATE_INPUT_BUFFER	ObsNvenc/inc/nvEncodeAPI.h	/^typedef struct _NV_ENC_CREATE_INPUT_BUFFER$/;"	s
_NV_ENC_DEVICE_TYPE	ObsNvenc/inc/nvEncodeAPI.h	/^typedef enum _NV_ENC_DEVICE_TYPE$/;"	g
_NV_ENC_EVENT_PARAMS	ObsNvenc/inc/nvEncodeAPI.h	/^typedef struct _NV_ENC_EVENT_PARAMS$/;"	s
_NV_ENC_H264_ADAPTIVE_TRANSFORM_MODE	ObsNvenc/inc/nvEncodeAPI.h	/^typedef enum _NV_ENC_H264_ADAPTIVE_TRANSFORM_MODE$/;"	g
_NV_ENC_H264_BDIRECT_MODE	ObsNvenc/inc/nvEncodeAPI.h	/^typedef enum _NV_ENC_H264_BDIRECT_MODE$/;"	g
_NV_ENC_H264_ENTROPY_CODING_MODE	ObsNvenc/inc/nvEncodeAPI.h	/^typedef enum _NV_ENC_H264_ENTROPY_CODING_MODE$/;"	g
_NV_ENC_H264_FMO_MODE	ObsNvenc/inc/nvEncodeAPI.h	/^typedef enum _NV_ENC_H264_FMO_MODE$/;"	g
_NV_ENC_H264_SEI_PAYLOAD	ObsNvenc/inc/nvEncodeAPI.h	/^typedef struct _NV_ENC_H264_SEI_PAYLOAD$/;"	s
_NV_ENC_INITIALIZE_PARAMS	ObsNvenc/inc/nvEncodeAPI.h	/^typedef struct _NV_ENC_INITIALIZE_PARAMS$/;"	s
_NV_ENC_INPUT_RESOURCE_TYPE	ObsNvenc/inc/nvEncodeAPI.h	/^typedef enum _NV_ENC_INPUT_RESOURCE_TYPE$/;"	g
_NV_ENC_LEVEL	ObsNvenc/inc/nvEncodeAPI.h	/^typedef enum _NV_ENC_LEVEL$/;"	g
_NV_ENC_LOCK_BITSTREAM	ObsNvenc/inc/nvEncodeAPI.h	/^typedef struct _NV_ENC_LOCK_BITSTREAM$/;"	s
_NV_ENC_LOCK_INPUT_BUFFER	ObsNvenc/inc/nvEncodeAPI.h	/^typedef struct _NV_ENC_LOCK_INPUT_BUFFER$/;"	s
_NV_ENC_MAP_INPUT_RESOURCE	ObsNvenc/inc/nvEncodeAPI.h	/^typedef struct _NV_ENC_MAP_INPUT_RESOURCE$/;"	s
_NV_ENC_MEMORY_HEAP	ObsNvenc/inc/nvEncodeAPI.h	/^typedef enum _NV_ENC_MEMORY_HEAP$/;"	g
_NV_ENC_MV_PRECISION	ObsNvenc/inc/nvEncodeAPI.h	/^typedef enum _NV_ENC_MV_PRECISION$/;"	g
_NV_ENC_OPEN_ENCODE_SESSIONEX_PARAMS	ObsNvenc/inc/nvEncodeAPI.h	/^typedef struct _NV_ENC_OPEN_ENCODE_SESSIONEX_PARAMS$/;"	s
_NV_ENC_PARAMS_FRAME_FIELD_MODE	ObsNvenc/inc/nvEncodeAPI.h	/^typedef enum _NV_ENC_PARAMS_FRAME_FIELD_MODE$/;"	g
_NV_ENC_PARAMS_RC_MODE	ObsNvenc/inc/nvEncodeAPI.h	/^typedef enum _NV_ENC_PARAMS_RC_MODE$/;"	g
_NV_ENC_PIC_FLAGS	ObsNvenc/inc/nvEncodeAPI.h	/^typedef enum _NV_ENC_PIC_FLAGS$/;"	g
_NV_ENC_PIC_PARAMS	ObsNvenc/inc/nvEncodeAPI.h	/^typedef struct _NV_ENC_PIC_PARAMS$/;"	s
_NV_ENC_PIC_PARAMS_H264	ObsNvenc/inc/nvEncodeAPI.h	/^typedef struct _NV_ENC_PIC_PARAMS_H264$/;"	s
_NV_ENC_PIC_STRUCT	ObsNvenc/inc/nvEncodeAPI.h	/^typedef enum _NV_ENC_PIC_STRUCT$/;"	g
_NV_ENC_PIC_TYPE	ObsNvenc/inc/nvEncodeAPI.h	/^typedef enum _NV_ENC_PIC_TYPE$/;"	g
_NV_ENC_PRESET_CONFIG	ObsNvenc/inc/nvEncodeAPI.h	/^typedef struct _NV_ENC_PRESET_CONFIG$/;"	s
_NV_ENC_QP	ObsNvenc/inc/nvEncodeAPI.h	/^typedef struct _NV_ENC_QP$/;"	s
_NV_ENC_RC_PARAMS	ObsNvenc/inc/nvEncodeAPI.h	/^ typedef struct _NV_ENC_RC_PARAMS$/;"	s
_NV_ENC_RECONFIGURE_PARAMS	ObsNvenc/inc/nvEncodeAPI.h	/^typedef struct _NV_ENC_RECONFIGURE_PARAMS$/;"	s
_NV_ENC_REGISTER_RESOURCE	ObsNvenc/inc/nvEncodeAPI.h	/^typedef struct _NV_ENC_REGISTER_RESOURCE$/;"	s
_NV_ENC_SEQUENCE_PARAM_PAYLOAD	ObsNvenc/inc/nvEncodeAPI.h	/^typedef struct _NV_ENC_SEQUENCE_PARAM_PAYLOAD$/;"	s
_NV_ENC_SLICE_TYPE	ObsNvenc/inc/nvEncodeAPI.h	/^typedef enum _NV_ENC_SLICE_TYPE$/;"	g
_NV_ENC_STAT	ObsNvenc/inc/nvEncodeAPI.h	/^typedef struct _NV_ENC_STAT$/;"	s
_NV_ENC_STEREO_PACKING_MODE	ObsNvenc/inc/nvEncodeAPI.h	/^typedef enum _NV_ENC_STEREO_PACKING_MODE$/;"	g
_NXT	OBSApi/Utility/utf8.cpp	20;"	d	file:
_No_competing_thread_	extras/concurrencysal.h	135;"	d
_No_competing_thread_	extras/concurrencysal.h	297;"	d
_No_competing_thread_	extras/no_sal2.h	190;"	d
_No_competing_thread_	extras/no_sal2.h	192;"	d
_No_competing_thread_begin_	extras/concurrencysal.h	171;"	d
_No_competing_thread_begin_	extras/concurrencysal.h	309;"	d
_No_competing_thread_begin_	extras/no_sal2.h	194;"	d
_No_competing_thread_begin_	extras/no_sal2.h	196;"	d
_No_competing_thread_end_	extras/concurrencysal.h	172;"	d
_No_competing_thread_end_	extras/concurrencysal.h	310;"	d
_No_competing_thread_end_	extras/no_sal2.h	198;"	d
_No_competing_thread_end_	extras/no_sal2.h	200;"	d
_Notliteral_	extras/no_sal2.h	770;"	d
_Notliteral_	extras/no_sal2.h	772;"	d
_Notliteral_	extras/sal.h	565;"	d
_Notliteral_impl_	extras/sal.h	1524;"	d
_Notliteral_impl_	extras/sal.h	1985;"	d
_Notliteral_impl_	extras/sal.h	2085;"	d
_Notnull_	extras/no_sal2.h	54;"	d
_Notnull_	extras/no_sal2.h	56;"	d
_Notnull_	extras/sal.h	669;"	d
_Notnull_impl_	extras/sal.h	1525;"	d
_Notnull_impl_	extras/sal.h	2027;"	d
_Notnull_impl_	extras/sal.h	2123;"	d
_Notref_	extras/sal.h	291;"	d
_Notref_impl_	extras/sal.h	1586;"	d
_Notref_impl_	extras/sal.h	1611;"	d
_Notref_impl_	extras/sal.h	2086;"	d
_Notvalid_	extras/no_sal2.h	110;"	d
_Notvalid_	extras/no_sal2.h	112;"	d
_Notvalid_	extras/sal.h	638;"	d
_Notvalid_impl_	extras/sal.h	1526;"	d
_Notvalid_impl_	extras/sal.h	2031;"	d
_Notvalid_impl_	extras/sal.h	2127;"	d
_NullNull_terminated_	extras/no_sal2.h	102;"	d
_NullNull_terminated_	extras/no_sal2.h	104;"	d
_NullNull_terminated_	extras/sal.h	652;"	d
_NullNull_terminated_impl_	extras/sal.h	1527;"	d
_NullNull_terminated_impl_	extras/sal.h	2040;"	d
_NullNull_terminated_impl_	extras/sal.h	2168;"	d
_Null_	extras/no_sal2.h	50;"	d
_Null_	extras/no_sal2.h	52;"	d
_Null_	extras/sal.h	668;"	d
_Null_impl_	extras/sal.h	1528;"	d
_Null_impl_	extras/sal.h	2026;"	d
_Null_impl_	extras/sal.h	2122;"	d
_Null_terminated_	extras/no_sal2.h	100;"	d
_Null_terminated_	extras/no_sal2.h	98;"	d
_Null_terminated_	extras/sal.h	651;"	d
_Null_terminated_impl_	extras/sal.h	1529;"	d
_Null_terminated_impl_	extras/sal.h	2039;"	d
_Null_terminated_impl_	extras/sal.h	2167;"	d
_On_failure_	extras/no_sal2.h	122;"	d
_On_failure_	extras/no_sal2.h	124;"	d
_On_failure_	extras/sal.h	277;"	d
_On_failure_impl_	extras/sal.h	1684;"	d
_On_failure_impl_	extras/sal.h	1805;"	d
_On_failure_impl_	extras/sal.h	1995;"	d
_On_failure_impl_	extras/sal.h	2096;"	d
_OutPut	lame/ACM/ADbg/ADbg.cpp	/^inline int ADbg::_OutPut(const char * format,va_list params) const$/;"	f	class:ADbg
_Out_	extras/no_sal2.h	266;"	d
_Out_	extras/no_sal2.h	268;"	d
_Out_	extras/sal.h	356;"	d
_Out_bound_	extras/sal.h	1015;"	d
_Out_bound_impl_	extras/sal.h	1691;"	d
_Out_bound_impl_	extras/sal.h	1812;"	d
_Out_bound_impl_	extras/sal.h	2006;"	d
_Out_bound_impl_	extras/sal.h	2104;"	d
_Out_bytecap_	extras/sal.h	865;"	d
_Out_bytecap_c_	extras/sal.h	871;"	d
_Out_bytecap_post_bytecount_	extras/sal.h	915;"	d
_Out_bytecap_x_	extras/sal.h	888;"	d
_Out_bytecapcount_	extras/sal.h	928;"	d
_Out_bytecapcount_x_	extras/sal.h	933;"	d
_Out_cap_	extras/sal.h	863;"	d
_Out_cap_c_	extras/sal.h	869;"	d
_Out_cap_m_	extras/sal.h	875;"	d
_Out_cap_post_count_	extras/sal.h	913;"	d
_Out_cap_x_	extras/sal.h	886;"	d
_Out_capcount_	extras/sal.h	926;"	d
_Out_capcount_x_	extras/sal.h	931;"	d
_Out_defensive_	extras/no_sal2.h	938;"	d
_Out_defensive_	extras/no_sal2.h	940;"	d
_Out_defensive_	extras/sal.h	298;"	d
_Out_impl_	extras/sal.h	1530;"	d
_Out_opt_	extras/no_sal2.h	374;"	d
_Out_opt_	extras/no_sal2.h	376;"	d
_Out_opt_	extras/sal.h	357;"	d
_Out_opt_bytecap_	extras/sal.h	866;"	d
_Out_opt_bytecap_c_	extras/sal.h	872;"	d
_Out_opt_bytecap_post_bytecount_	extras/sal.h	916;"	d
_Out_opt_bytecap_x_	extras/sal.h	889;"	d
_Out_opt_bytecapcount_	extras/sal.h	929;"	d
_Out_opt_bytecapcount_x_	extras/sal.h	934;"	d
_Out_opt_cap_	extras/sal.h	864;"	d
_Out_opt_cap_c_	extras/sal.h	870;"	d
_Out_opt_cap_m_	extras/sal.h	876;"	d
_Out_opt_cap_post_count_	extras/sal.h	914;"	d
_Out_opt_cap_x_	extras/sal.h	887;"	d
_Out_opt_capcount_	extras/sal.h	927;"	d
_Out_opt_capcount_x_	extras/sal.h	932;"	d
_Out_opt_impl_	extras/sal.h	1531;"	d
_Out_opt_ptrdiff_cap_	extras/sal.h	883;"	d
_Out_opt_z_bytecap_	extras/sal.h	897;"	d
_Out_opt_z_bytecap_c_	extras/sal.h	903;"	d
_Out_opt_z_bytecap_post_bytecount_	extras/sal.h	923;"	d
_Out_opt_z_bytecap_x_	extras/sal.h	909;"	d
_Out_opt_z_bytecapcount_	extras/sal.h	940;"	d
_Out_opt_z_cap_	extras/sal.h	895;"	d
_Out_opt_z_cap_c_	extras/sal.h	901;"	d
_Out_opt_z_cap_m_	extras/sal.h	878;"	d
_Out_opt_z_cap_post_count_	extras/sal.h	921;"	d
_Out_opt_z_cap_x_	extras/sal.h	907;"	d
_Out_opt_z_capcount_	extras/sal.h	938;"	d
_Out_ptrdiff_cap_	extras/sal.h	882;"	d
_Out_range_	extras/no_sal2.h	706;"	d
_Out_range_	extras/no_sal2.h	708;"	d
_Out_range_	extras/sal.h	583;"	d
_Out_range_impl_	extras/sal.h	1547;"	d
_Out_range_impl_	extras/sal.h	2014;"	d
_Out_range_impl_	extras/sal.h	2112;"	d
_Out_writes_	extras/no_sal2.h	298;"	d
_Out_writes_	extras/no_sal2.h	300;"	d
_Out_writes_	extras/sal.h	359;"	d
_Out_writes_all_	extras/no_sal2.h	330;"	d
_Out_writes_all_	extras/no_sal2.h	332;"	d
_Out_writes_all_	extras/sal.h	368;"	d
_Out_writes_all_opt_	extras/no_sal2.h	434;"	d
_Out_writes_all_opt_	extras/no_sal2.h	436;"	d
_Out_writes_all_opt_	extras/sal.h	369;"	d
_Out_writes_bytes_	extras/no_sal2.h	302;"	d
_Out_writes_bytes_	extras/no_sal2.h	304;"	d
_Out_writes_bytes_	extras/sal.h	361;"	d
_Out_writes_bytes_all_	extras/no_sal2.h	334;"	d
_Out_writes_bytes_all_	extras/no_sal2.h	336;"	d
_Out_writes_bytes_all_	extras/sal.h	373;"	d
_Out_writes_bytes_all_opt_	extras/no_sal2.h	438;"	d
_Out_writes_bytes_all_opt_	extras/no_sal2.h	440;"	d
_Out_writes_bytes_all_opt_	extras/sal.h	374;"	d
_Out_writes_bytes_opt_	extras/no_sal2.h	406;"	d
_Out_writes_bytes_opt_	extras/no_sal2.h	408;"	d
_Out_writes_bytes_opt_	extras/sal.h	362;"	d
_Out_writes_bytes_to_	extras/no_sal2.h	326;"	d
_Out_writes_bytes_to_	extras/no_sal2.h	328;"	d
_Out_writes_bytes_to_	extras/sal.h	371;"	d
_Out_writes_bytes_to_opt_	extras/no_sal2.h	430;"	d
_Out_writes_bytes_to_opt_	extras/no_sal2.h	432;"	d
_Out_writes_bytes_to_opt_	extras/sal.h	372;"	d
_Out_writes_opt_	extras/no_sal2.h	402;"	d
_Out_writes_opt_	extras/no_sal2.h	404;"	d
_Out_writes_opt_	extras/sal.h	360;"	d
_Out_writes_opt_z_	extras/no_sal2.h	410;"	d
_Out_writes_opt_z_	extras/no_sal2.h	412;"	d
_Out_writes_opt_z_	extras/sal.h	364;"	d
_Out_writes_to_	extras/no_sal2.h	322;"	d
_Out_writes_to_	extras/no_sal2.h	324;"	d
_Out_writes_to_	extras/sal.h	366;"	d
_Out_writes_to_opt_	extras/no_sal2.h	426;"	d
_Out_writes_to_opt_	extras/no_sal2.h	428;"	d
_Out_writes_to_opt_	extras/sal.h	367;"	d
_Out_writes_to_ptr_	extras/no_sal2.h	362;"	d
_Out_writes_to_ptr_	extras/no_sal2.h	364;"	d
_Out_writes_to_ptr_	extras/sal.h	376;"	d
_Out_writes_to_ptr_opt_	extras/no_sal2.h	466;"	d
_Out_writes_to_ptr_opt_	extras/no_sal2.h	468;"	d
_Out_writes_to_ptr_opt_	extras/sal.h	377;"	d
_Out_writes_to_ptr_opt_z_	extras/no_sal2.h	470;"	d
_Out_writes_to_ptr_opt_z_	extras/no_sal2.h	472;"	d
_Out_writes_to_ptr_opt_z_	extras/sal.h	379;"	d
_Out_writes_to_ptr_z_	extras/no_sal2.h	366;"	d
_Out_writes_to_ptr_z_	extras/no_sal2.h	368;"	d
_Out_writes_to_ptr_z_	extras/sal.h	378;"	d
_Out_writes_z_	extras/no_sal2.h	306;"	d
_Out_writes_z_	extras/no_sal2.h	308;"	d
_Out_writes_z_	extras/sal.h	363;"	d
_Out_z_bytecap_	extras/sal.h	896;"	d
_Out_z_bytecap_c_	extras/sal.h	902;"	d
_Out_z_bytecap_post_bytecount_	extras/sal.h	922;"	d
_Out_z_bytecap_x_	extras/sal.h	908;"	d
_Out_z_bytecapcount_	extras/sal.h	939;"	d
_Out_z_cap_	extras/sal.h	894;"	d
_Out_z_cap_c_	extras/sal.h	900;"	d
_Out_z_cap_m_	extras/sal.h	877;"	d
_Out_z_cap_post_count_	extras/sal.h	920;"	d
_Out_z_cap_x_	extras/sal.h	906;"	d
_Out_z_capcount_	extras/sal.h	937;"	d
_Outptr_	extras/no_sal2.h	474;"	d
_Outptr_	extras/no_sal2.h	476;"	d
_Outptr_	extras/sal.h	438;"	d
_Outptr_opt_	extras/no_sal2.h	478;"	d
_Outptr_opt_	extras/no_sal2.h	480;"	d
_Outptr_opt_	extras/sal.h	440;"	d
_Outptr_opt_result_buffer_	extras/no_sal2.h	530;"	d
_Outptr_opt_result_buffer_	extras/no_sal2.h	532;"	d
_Outptr_opt_result_buffer_	extras/sal.h	468;"	d
_Outptr_opt_result_buffer_all_	extras/sal.h	473;"	d
_Outptr_opt_result_buffer_all_maybenull_	extras/sal.h	481;"	d
_Outptr_opt_result_buffer_maybenull_	extras/sal.h	476;"	d
_Outptr_opt_result_buffer_to_	extras/no_sal2.h	546;"	d
_Outptr_opt_result_buffer_to_	extras/no_sal2.h	548;"	d
_Outptr_opt_result_buffer_to_	extras/sal.h	470;"	d
_Outptr_opt_result_buffer_to_maybenull_	extras/sal.h	478;"	d
_Outptr_opt_result_bytebuffer_	extras/no_sal2.h	534;"	d
_Outptr_opt_result_bytebuffer_	extras/no_sal2.h	536;"	d
_Outptr_opt_result_bytebuffer_	extras/sal.h	484;"	d
_Outptr_opt_result_bytebuffer_all_	extras/sal.h	489;"	d
_Outptr_opt_result_bytebuffer_all_maybenull_	extras/sal.h	497;"	d
_Outptr_opt_result_bytebuffer_maybenull_	extras/sal.h	492;"	d
_Outptr_opt_result_bytebuffer_to_	extras/no_sal2.h	550;"	d
_Outptr_opt_result_bytebuffer_to_	extras/no_sal2.h	552;"	d
_Outptr_opt_result_bytebuffer_to_	extras/sal.h	486;"	d
_Outptr_opt_result_bytebuffer_to_maybenull_	extras/sal.h	494;"	d
_Outptr_opt_result_maybenull_	extras/no_sal2.h	486;"	d
_Outptr_opt_result_maybenull_	extras/no_sal2.h	488;"	d
_Outptr_opt_result_maybenull_	extras/sal.h	441;"	d
_Outptr_opt_result_maybenull_z_	extras/no_sal2.h	502;"	d
_Outptr_opt_result_maybenull_z_	extras/no_sal2.h	504;"	d
_Outptr_opt_result_maybenull_z_	extras/sal.h	448;"	d
_Outptr_opt_result_nullonfailure_	extras/no_sal2.h	950;"	d
_Outptr_opt_result_nullonfailure_	extras/no_sal2.h	952;"	d
_Outptr_opt_result_nullonfailure_	extras/sal.h	453;"	d
_Outptr_opt_result_z_	extras/no_sal2.h	494;"	d
_Outptr_opt_result_z_	extras/no_sal2.h	496;"	d
_Outptr_opt_result_z_	extras/sal.h	446;"	d
_Outptr_result_buffer_	extras/no_sal2.h	522;"	d
_Outptr_result_buffer_	extras/no_sal2.h	524;"	d
_Outptr_result_buffer_	extras/sal.h	467;"	d
_Outptr_result_buffer_all_	extras/sal.h	472;"	d
_Outptr_result_buffer_all_maybenull_	extras/sal.h	480;"	d
_Outptr_result_buffer_maybenull_	extras/sal.h	475;"	d
_Outptr_result_buffer_to_	extras/no_sal2.h	538;"	d
_Outptr_result_buffer_to_	extras/no_sal2.h	540;"	d
_Outptr_result_buffer_to_	extras/sal.h	469;"	d
_Outptr_result_buffer_to_maybenull_	extras/sal.h	477;"	d
_Outptr_result_bytebuffer_	extras/no_sal2.h	526;"	d
_Outptr_result_bytebuffer_	extras/no_sal2.h	528;"	d
_Outptr_result_bytebuffer_	extras/sal.h	483;"	d
_Outptr_result_bytebuffer_all_	extras/sal.h	488;"	d
_Outptr_result_bytebuffer_all_maybenull_	extras/sal.h	496;"	d
_Outptr_result_bytebuffer_maybenull_	extras/sal.h	491;"	d
_Outptr_result_bytebuffer_to_	extras/no_sal2.h	542;"	d
_Outptr_result_bytebuffer_to_	extras/no_sal2.h	544;"	d
_Outptr_result_bytebuffer_to_	extras/sal.h	485;"	d
_Outptr_result_bytebuffer_to_maybenull_	extras/sal.h	493;"	d
_Outptr_result_maybenull_	extras/no_sal2.h	482;"	d
_Outptr_result_maybenull_	extras/no_sal2.h	484;"	d
_Outptr_result_maybenull_	extras/sal.h	439;"	d
_Outptr_result_maybenull_z_	extras/no_sal2.h	498;"	d
_Outptr_result_maybenull_z_	extras/no_sal2.h	500;"	d
_Outptr_result_maybenull_z_	extras/sal.h	447;"	d
_Outptr_result_nullonfailure_	extras/no_sal2.h	946;"	d
_Outptr_result_nullonfailure_	extras/no_sal2.h	948;"	d
_Outptr_result_nullonfailure_	extras/sal.h	452;"	d
_Outptr_result_z_	extras/no_sal2.h	490;"	d
_Outptr_result_z_	extras/no_sal2.h	492;"	d
_Outptr_result_z_	extras/sal.h	445;"	d
_Outref_	extras/no_sal2.h	878;"	d
_Outref_	extras/no_sal2.h	880;"	d
_Outref_	extras/sal.h	501;"	d
_Outref_result_buffer_	extras/no_sal2.h	886;"	d
_Outref_result_buffer_	extras/no_sal2.h	888;"	d
_Outref_result_buffer_	extras/sal.h	504;"	d
_Outref_result_buffer_all_	extras/no_sal2.h	902;"	d
_Outref_result_buffer_all_	extras/no_sal2.h	904;"	d
_Outref_result_buffer_all_	extras/sal.h	508;"	d
_Outref_result_buffer_all_maybenull_	extras/no_sal2.h	926;"	d
_Outref_result_buffer_all_maybenull_	extras/no_sal2.h	928;"	d
_Outref_result_buffer_all_maybenull_	extras/sal.h	515;"	d
_Outref_result_buffer_maybenull_	extras/no_sal2.h	910;"	d
_Outref_result_buffer_maybenull_	extras/no_sal2.h	912;"	d
_Outref_result_buffer_maybenull_	extras/sal.h	511;"	d
_Outref_result_buffer_to_	extras/no_sal2.h	894;"	d
_Outref_result_buffer_to_	extras/no_sal2.h	896;"	d
_Outref_result_buffer_to_	extras/sal.h	506;"	d
_Outref_result_buffer_to_maybenull_	extras/no_sal2.h	918;"	d
_Outref_result_buffer_to_maybenull_	extras/no_sal2.h	920;"	d
_Outref_result_buffer_to_maybenull_	extras/sal.h	513;"	d
_Outref_result_bytebuffer_	extras/no_sal2.h	890;"	d
_Outref_result_bytebuffer_	extras/no_sal2.h	892;"	d
_Outref_result_bytebuffer_	extras/sal.h	505;"	d
_Outref_result_bytebuffer_all_	extras/no_sal2.h	906;"	d
_Outref_result_bytebuffer_all_	extras/no_sal2.h	908;"	d
_Outref_result_bytebuffer_all_	extras/sal.h	509;"	d
_Outref_result_bytebuffer_all_maybenull_	extras/no_sal2.h	930;"	d
_Outref_result_bytebuffer_all_maybenull_	extras/no_sal2.h	932;"	d
_Outref_result_bytebuffer_all_maybenull_	extras/sal.h	516;"	d
_Outref_result_bytebuffer_maybenull_	extras/no_sal2.h	914;"	d
_Outref_result_bytebuffer_maybenull_	extras/no_sal2.h	916;"	d
_Outref_result_bytebuffer_maybenull_	extras/sal.h	512;"	d
_Outref_result_bytebuffer_to_	extras/no_sal2.h	898;"	d
_Outref_result_bytebuffer_to_	extras/no_sal2.h	900;"	d
_Outref_result_bytebuffer_to_	extras/sal.h	507;"	d
_Outref_result_bytebuffer_to_maybenull_	extras/no_sal2.h	922;"	d
_Outref_result_bytebuffer_to_maybenull_	extras/no_sal2.h	924;"	d
_Outref_result_bytebuffer_to_maybenull_	extras/sal.h	514;"	d
_Outref_result_maybenull_	extras/no_sal2.h	882;"	d
_Outref_result_maybenull_	extras/no_sal2.h	884;"	d
_Outref_result_maybenull_	extras/sal.h	502;"	d
_Outref_result_nullonfailure_	extras/no_sal2.h	954;"	d
_Outref_result_nullonfailure_	extras/no_sal2.h	956;"	d
_Outref_result_nullonfailure_	extras/sal.h	520;"	d
_PSTDINT_H_INCLUDED	minhook/src/pstdint.h	195;"	d
_PSTDINT_H_INCLUDED	minhook/src/pstdint.h	291;"	d
_PluginClose	libmfx/include/msdk/include/mfxplugin++.h	/^        static mfxStatus _PluginClose(mfxHDL pthis) { $/;"	f	class:detail::MFXPluginAdapterBase
_PluginInit	libmfx/include/msdk/include/mfxplugin++.h	/^        static mfxStatus _PluginInit(mfxHDL pthis, mfxCoreInterface *core) {$/;"	f	class:detail::MFXPluginAdapterBase
_Points_to_data_	extras/no_sal2.h	782;"	d
_Points_to_data_	extras/no_sal2.h	784;"	d
_Points_to_data_	extras/sal.h	563;"	d
_Points_to_data_impl_	extras/sal.h	1532;"	d
_Points_to_data_impl_	extras/sal.h	1983;"	d
_Points_to_data_impl_	extras/sal.h	2083;"	d
_Post1_impl_	extras/sal.h	1770;"	d
_Post1_impl_	extras/sal.h	1876;"	d
_Post1_impl_	extras/sal.h	2048;"	d
_Post1_impl_	extras/sal.h	2138;"	d
_Post2_impl_	extras/sal.h	1771;"	d
_Post2_impl_	extras/sal.h	1877;"	d
_Post2_impl_	extras/sal.h	2049;"	d
_Post2_impl_	extras/sal.h	2139;"	d
_Post3_impl_	extras/sal.h	1772;"	d
_Post3_impl_	extras/sal.h	1878;"	d
_Post3_impl_	extras/sal.h	2050;"	d
_Post3_impl_	extras/sal.h	2140;"	d
_Post_	extras/no_sal2.h	42;"	d
_Post_	extras/no_sal2.h	44;"	d
_Post_	extras/sal.h	631;"	d
_Post_bytecap_	extras/sal.h	1387;"	d
_Post_bytecount_	extras/sal.h	1391;"	d
_Post_bytecount_c_	extras/sal.h	1393;"	d
_Post_bytecount_x_	extras/sal.h	1395;"	d
_Post_cap_	extras/sal.h	1386;"	d
_Post_count_	extras/sal.h	1390;"	d
_Post_count_c_	extras/sal.h	1392;"	d
_Post_count_x_	extras/sal.h	1394;"	d
_Post_defensive_	extras/no_sal2.h	138;"	d
_Post_defensive_	extras/no_sal2.h	140;"	d
_Post_defensive_	extras/sal.h	295;"	d
_Post_equal_to_	extras/no_sal2.h	734;"	d
_Post_equal_to_	extras/no_sal2.h	736;"	d
_Post_equal_to_	extras/sal.h	589;"	d
_Post_impl_	extras/sal.h	1584;"	d
_Post_impl_	extras/sal.h	1609;"	d
_Post_impl_	extras/sal.h	2047;"	d
_Post_impl_	extras/sal.h	2137;"	d
_Post_invalid_	extras/no_sal2.h	1001;"	d
_Post_invalid_	extras/no_sal2.h	1002;"	d
_Post_invalid_	extras/sal.h	706;"	d
_Post_maybenull_	extras/sal.h	717;"	d
_Post_maybez_	extras/sal.h	1383;"	d
_Post_notnull_	extras/sal.h	712;"	d
_Post_null_	extras/sal.h	715;"	d
_Post_ptr_invalid_	extras/no_sal2.h	1003;"	d
_Post_ptr_invalid_	extras/no_sal2.h	1004;"	d
_Post_ptr_invalid_	extras/sal.h	709;"	d
_Post_readable_byte_size_	extras/no_sal2.h	1017;"	d
_Post_readable_byte_size_	extras/no_sal2.h	1018;"	d
_Post_readable_byte_size_	extras/sal.h	662;"	d
_Post_readable_size_	extras/no_sal2.h	1013;"	d
_Post_readable_size_	extras/no_sal2.h	1014;"	d
_Post_readable_size_	extras/sal.h	660;"	d
_Post_same_lock_	extras/concurrencysal.h	115;"	d
_Post_same_lock_	extras/concurrencysal.h	287;"	d
_Post_same_lock_	extras/no_sal2.h	178;"	d
_Post_same_lock_	extras/no_sal2.h	180;"	d
_Post_satisfies_	extras/no_sal2.h	78;"	d
_Post_satisfies_	extras/no_sal2.h	80;"	d
_Post_satisfies_	extras/sal.h	599;"	d
_Post_satisfies_impl_	extras/sal.h	1533;"	d
_Post_satisfies_impl_	extras/sal.h	2023;"	d
_Post_satisfies_impl_	extras/sal.h	2120;"	d
_Post_valid_	extras/no_sal2.h	1000;"	d
_Post_valid_	extras/no_sal2.h	999;"	d
_Post_valid_	extras/sal.h	705;"	d
_Post_valid_impl_	extras/sal.h	1534;"	d
_Post_valid_impl_	extras/sal.h	1988;"	d
_Post_valid_impl_	extras/sal.h	2089;"	d
_Post_writable_byte_size_	extras/no_sal2.h	1019;"	d
_Post_writable_byte_size_	extras/no_sal2.h	1020;"	d
_Post_writable_byte_size_	extras/sal.h	663;"	d
_Post_writable_size_	extras/no_sal2.h	1015;"	d
_Post_writable_size_	extras/no_sal2.h	1016;"	d
_Post_writable_size_	extras/sal.h	661;"	d
_Post_z_	extras/no_sal2.h	985;"	d
_Post_z_	extras/no_sal2.h	986;"	d
_Post_z_	extras/sal.h	702;"	d
_Post_z_bytecount_	extras/sal.h	1399;"	d
_Post_z_bytecount_c_	extras/sal.h	1401;"	d
_Post_z_bytecount_x_	extras/sal.h	1403;"	d
_Post_z_count_	extras/sal.h	1398;"	d
_Post_z_count_c_	extras/sal.h	1400;"	d
_Post_z_count_x_	extras/sal.h	1402;"	d
_Pre1_impl_	extras/sal.h	1766;"	d
_Pre1_impl_	extras/sal.h	1872;"	d
_Pre1_impl_	extras/sal.h	2043;"	d
_Pre1_impl_	extras/sal.h	2133;"	d
_Pre2_impl_	extras/sal.h	1767;"	d
_Pre2_impl_	extras/sal.h	1873;"	d
_Pre2_impl_	extras/sal.h	2044;"	d
_Pre2_impl_	extras/sal.h	2134;"	d
_Pre3_impl_	extras/sal.h	1768;"	d
_Pre3_impl_	extras/sal.h	1874;"	d
_Pre3_impl_	extras/sal.h	2045;"	d
_Pre3_impl_	extras/sal.h	2135;"	d
_Pre_	extras/no_sal2.h	38;"	d
_Pre_	extras/no_sal2.h	40;"	d
_Pre_	extras/sal.h	630;"	d
_Pre_bytecap_	extras/sal.h	1295;"	d
_Pre_bytecap_c_	extras/sal.h	1301;"	d
_Pre_bytecap_x_	extras/sal.h	1318;"	d
_Pre_bytecount_	extras/sal.h	1361;"	d
_Pre_bytecount_c_	extras/sal.h	1367;"	d
_Pre_bytecount_x_	extras/sal.h	1373;"	d
_Pre_cap_	extras/sal.h	1293;"	d
_Pre_cap_c_	extras/sal.h	1299;"	d
_Pre_cap_c_one_	extras/sal.h	1303;"	d
_Pre_cap_for_	extras/sal.h	1312;"	d
_Pre_cap_m_	extras/sal.h	1307;"	d
_Pre_cap_x_	extras/sal.h	1316;"	d
_Pre_count_	extras/sal.h	1359;"	d
_Pre_count_c_	extras/sal.h	1365;"	d
_Pre_count_x_	extras/sal.h	1371;"	d
_Pre_defensive_	extras/no_sal2.h	134;"	d
_Pre_defensive_	extras/no_sal2.h	136;"	d
_Pre_defensive_	extras/sal.h	294;"	d
_Pre_equal_to_	extras/no_sal2.h	730;"	d
_Pre_equal_to_	extras/no_sal2.h	732;"	d
_Pre_equal_to_	extras/sal.h	588;"	d
_Pre_impl_	extras/sal.h	1583;"	d
_Pre_impl_	extras/sal.h	1608;"	d
_Pre_impl_	extras/sal.h	2042;"	d
_Pre_impl_	extras/sal.h	2132;"	d
_Pre_invalid_	extras/sal.h	685;"	d
_Pre_maybenull_	extras/no_sal2.h	991;"	d
_Pre_maybenull_	extras/no_sal2.h	992;"	d
_Pre_maybenull_	extras/sal.h	692;"	d
_Pre_notnull_	extras/no_sal2.h	993;"	d
_Pre_notnull_	extras/no_sal2.h	994;"	d
_Pre_notnull_	extras/sal.h	691;"	d
_Pre_null_	extras/no_sal2.h	989;"	d
_Pre_null_	extras/no_sal2.h	990;"	d
_Pre_null_	extras/sal.h	693;"	d
_Pre_opt_bytecap_	extras/sal.h	1296;"	d
_Pre_opt_bytecap_c_	extras/sal.h	1302;"	d
_Pre_opt_bytecap_x_	extras/sal.h	1319;"	d
_Pre_opt_bytecount_	extras/sal.h	1362;"	d
_Pre_opt_bytecount_c_	extras/sal.h	1368;"	d
_Pre_opt_bytecount_x_	extras/sal.h	1374;"	d
_Pre_opt_cap_	extras/sal.h	1294;"	d
_Pre_opt_cap_c_	extras/sal.h	1300;"	d
_Pre_opt_cap_c_one_	extras/sal.h	1304;"	d
_Pre_opt_cap_for_	extras/sal.h	1313;"	d
_Pre_opt_cap_m_	extras/sal.h	1308;"	d
_Pre_opt_cap_x_	extras/sal.h	1317;"	d
_Pre_opt_count_	extras/sal.h	1360;"	d
_Pre_opt_count_c_	extras/sal.h	1366;"	d
_Pre_opt_count_x_	extras/sal.h	1372;"	d
_Pre_opt_ptrdiff_cap_	extras/sal.h	1323;"	d
_Pre_opt_ptrdiff_count_	extras/sal.h	1378;"	d
_Pre_opt_valid_	extras/no_sal2.h	997;"	d
_Pre_opt_valid_	extras/no_sal2.h	998;"	d
_Pre_opt_valid_	extras/sal.h	683;"	d
_Pre_opt_valid_bytecap_	extras/sal.h	1345;"	d
_Pre_opt_valid_bytecap_c_	extras/sal.h	1350;"	d
_Pre_opt_valid_bytecap_x_	extras/sal.h	1355;"	d
_Pre_opt_valid_cap_	extras/sal.h	1343;"	d
_Pre_opt_valid_cap_c_	extras/sal.h	1348;"	d
_Pre_opt_valid_cap_x_	extras/sal.h	1353;"	d
_Pre_opt_z_	extras/sal.h	1285;"	d
_Pre_opt_z_bytecap_	extras/sal.h	1329;"	d
_Pre_opt_z_bytecap_c_	extras/sal.h	1334;"	d
_Pre_opt_z_bytecap_x_	extras/sal.h	1339;"	d
_Pre_opt_z_cap_	extras/sal.h	1327;"	d
_Pre_opt_z_cap_c_	extras/sal.h	1332;"	d
_Pre_opt_z_cap_x_	extras/sal.h	1337;"	d
_Pre_ptrdiff_cap_	extras/sal.h	1322;"	d
_Pre_ptrdiff_count_	extras/sal.h	1377;"	d
_Pre_readable_byte_size_	extras/no_sal2.h	1009;"	d
_Pre_readable_byte_size_	extras/no_sal2.h	1010;"	d
_Pre_readable_byte_size_	extras/sal.h	657;"	d
_Pre_readable_size_	extras/no_sal2.h	1005;"	d
_Pre_readable_size_	extras/no_sal2.h	1006;"	d
_Pre_readable_size_	extras/sal.h	655;"	d
_Pre_readonly_	extras/sal.h	1288;"	d
_Pre_satisfies_	extras/no_sal2.h	74;"	d
_Pre_satisfies_	extras/no_sal2.h	76;"	d
_Pre_satisfies_	extras/sal.h	598;"	d
_Pre_satisfies_impl_	extras/sal.h	1535;"	d
_Pre_satisfies_impl_	extras/sal.h	2022;"	d
_Pre_satisfies_impl_	extras/sal.h	2119;"	d
_Pre_unknown_	extras/no_sal2.h	142;"	d
_Pre_unknown_	extras/no_sal2.h	144;"	d
_Pre_unknown_	extras/sal.h	688;"	d
_Pre_valid_	extras/no_sal2.h	995;"	d
_Pre_valid_	extras/no_sal2.h	996;"	d
_Pre_valid_	extras/sal.h	682;"	d
_Pre_valid_bytecap_	extras/sal.h	1344;"	d
_Pre_valid_bytecap_c_	extras/sal.h	1349;"	d
_Pre_valid_bytecap_x_	extras/sal.h	1354;"	d
_Pre_valid_cap_	extras/sal.h	1342;"	d
_Pre_valid_cap_c_	extras/sal.h	1347;"	d
_Pre_valid_cap_x_	extras/sal.h	1352;"	d
_Pre_valid_impl_	extras/sal.h	1536;"	d
_Pre_valid_impl_	extras/sal.h	1987;"	d
_Pre_valid_impl_	extras/sal.h	2088;"	d
_Pre_writable_byte_size_	extras/no_sal2.h	1011;"	d
_Pre_writable_byte_size_	extras/no_sal2.h	1012;"	d
_Pre_writable_byte_size_	extras/sal.h	658;"	d
_Pre_writable_size_	extras/no_sal2.h	1007;"	d
_Pre_writable_size_	extras/no_sal2.h	1008;"	d
_Pre_writable_size_	extras/sal.h	656;"	d
_Pre_writeonly_	extras/sal.h	1289;"	d
_Pre_z_	extras/no_sal2.h	983;"	d
_Pre_z_	extras/no_sal2.h	984;"	d
_Pre_z_	extras/sal.h	679;"	d
_Pre_z_bytecap_	extras/sal.h	1328;"	d
_Pre_z_bytecap_c_	extras/sal.h	1333;"	d
_Pre_z_bytecap_x_	extras/sal.h	1338;"	d
_Pre_z_cap_	extras/sal.h	1326;"	d
_Pre_z_cap_c_	extras/sal.h	1331;"	d
_Pre_z_cap_x_	extras/sal.h	1336;"	d
_Prepost_bytecount_	extras/sal.h	1414;"	d
_Prepost_bytecount_c_	extras/sal.h	1418;"	d
_Prepost_bytecount_x_	extras/sal.h	1422;"	d
_Prepost_count_	extras/sal.h	1412;"	d
_Prepost_count_c_	extras/sal.h	1416;"	d
_Prepost_count_x_	extras/sal.h	1420;"	d
_Prepost_opt_bytecount_	extras/sal.h	1415;"	d
_Prepost_opt_bytecount_c_	extras/sal.h	1419;"	d
_Prepost_opt_bytecount_x_	extras/sal.h	1423;"	d
_Prepost_opt_count_	extras/sal.h	1413;"	d
_Prepost_opt_count_c_	extras/sal.h	1417;"	d
_Prepost_opt_count_x_	extras/sal.h	1421;"	d
_Prepost_opt_valid_	extras/sal.h	1426;"	d
_Prepost_opt_z_	extras/sal.h	1410;"	d
_Prepost_valid_	extras/sal.h	1425;"	d
_Prepost_z_	extras/no_sal2.h	987;"	d
_Prepost_z_	extras/no_sal2.h	988;"	d
_Prepost_z_	extras/sal.h	719;"	d
_Printf_format_string_	extras/no_sal2.h	678;"	d
_Printf_format_string_	extras/no_sal2.h	680;"	d
_Printf_format_string_	extras/sal.h	572;"	d
_Printf_format_string_impl_	extras/sal.h	1686;"	d
_Printf_format_string_impl_	extras/sal.h	1807;"	d
_Printf_format_string_impl_	extras/sal.h	1998;"	d
_Printf_format_string_impl_	extras/sal.h	2099;"	d
_Printf_format_string_params_	extras/no_sal2.h	690;"	d
_Printf_format_string_params_	extras/no_sal2.h	692;"	d
_Printf_format_string_params_	extras/sal.h	577;"	d
_Query	libmfx/include/msdk/include/mfxplugin++.h	/^        static mfxStatus _Query(mfxHDL pthis, mfxVideoParam *in, mfxVideoParam *out) {$/;"	f	class:detail::MFXCodecPluginAdapterBase
_QueryIOSurf	libmfx/include/msdk/include/mfxplugin++.h	/^        static mfxStatus _QueryIOSurf(mfxHDL pthis, mfxVideoParam *par, mfxFrameAllocRequest *in,  mfxFrameAllocRequest *out){$/;"	f	class:detail::MFXCodecPluginAdapterBase
_RELEASEDEBUG	lame/Dll/BladeMP3EncDLL.c	37;"	d	file:
_Raises_SEH_exception_	extras/no_sal2.h	754;"	d
_Raises_SEH_exception_	extras/no_sal2.h	756;"	d
_Raises_SEH_exception_	extras/sal.h	2971;"	d
_Raises_SEH_exception_impl_	extras/sal.h	2002;"	d
_Range_impl_	extras/sal.h	1537;"	d
_Range_impl_	extras/sal.h	2012;"	d
_Range_impl_	extras/sal.h	2110;"	d
_ReAllocate	OBSApi/Utility/DebugAlloc.cpp	/^void * DebugAlloc::_ReAllocate(LPVOID lpData, size_t dwSize)$/;"	f	class:DebugAlloc
_ReAllocate	OBSApi/Utility/DebugAlloc.cpp	/^void* DefaultAlloc::_ReAllocate(LPVOID lpData, size_t dwSize)$/;"	f	class:DefaultAlloc
_ReAllocate	OBSApi/Utility/FastAlloc.cpp	/^void * FastAlloc::_ReAllocate(LPVOID lpMemory, size_t dwSize)$/;"	f	class:FastAlloc
_Readable_bytes_	extras/no_sal2.h	94;"	d
_Readable_bytes_	extras/no_sal2.h	96;"	d
_Readable_bytes_	extras/sal.h	646;"	d
_Readable_bytes_impl_	extras/sal.h	1538;"	d
_Readable_bytes_impl_	extras/sal.h	2034;"	d
_Readable_bytes_impl_	extras/sal.h	2162;"	d
_Readable_elements_	extras/no_sal2.h	90;"	d
_Readable_elements_	extras/no_sal2.h	92;"	d
_Readable_elements_	extras/sal.h	647;"	d
_Readable_elements_impl_	extras/sal.h	1539;"	d
_Readable_elements_impl_	extras/sal.h	2035;"	d
_Readable_elements_impl_	extras/sal.h	2163;"	d
_Releases_exclusive_lock_	extras/concurrencysal.h	282;"	d
_Releases_exclusive_lock_	extras/concurrencysal.h	99;"	d
_Releases_exclusive_lock_	extras/no_sal2.h	218;"	d
_Releases_exclusive_lock_	extras/no_sal2.h	220;"	d
_Releases_lock_	extras/concurrencysal.h	281;"	d
_Releases_lock_	extras/concurrencysal.h	98;"	d
_Releases_lock_	extras/no_sal2.h	150;"	d
_Releases_lock_	extras/no_sal2.h	152;"	d
_Releases_nonreentrant_lock_	extras/concurrencysal.h	110;"	d
_Releases_nonreentrant_lock_	extras/concurrencysal.h	285;"	d
_Releases_nonreentrant_lock_	extras/no_sal2.h	970;"	d
_Releases_nonreentrant_lock_	extras/no_sal2.h	972;"	d
_Releases_shared_lock_	extras/concurrencysal.h	100;"	d
_Releases_shared_lock_	extras/concurrencysal.h	283;"	d
_Releases_shared_lock_	extras/no_sal2.h	206;"	d
_Releases_shared_lock_	extras/no_sal2.h	208;"	d
_Requires_exclusive_lock_held_	extras/concurrencysal.h	274;"	d
_Requires_exclusive_lock_held_	extras/concurrencysal.h	85;"	d
_Requires_exclusive_lock_held_	extras/no_sal2.h	222;"	d
_Requires_exclusive_lock_held_	extras/no_sal2.h	224;"	d
_Requires_lock_held_	extras/concurrencysal.h	273;"	d
_Requires_lock_held_	extras/concurrencysal.h	84;"	d
_Requires_lock_held_	extras/no_sal2.h	154;"	d
_Requires_lock_held_	extras/no_sal2.h	156;"	d
_Requires_lock_not_held_	extras/concurrencysal.h	276;"	d
_Requires_lock_not_held_	extras/concurrencysal.h	88;"	d
_Requires_lock_not_held_	extras/no_sal2.h	158;"	d
_Requires_lock_not_held_	extras/no_sal2.h	160;"	d
_Requires_no_locks_held_	extras/concurrencysal.h	277;"	d
_Requires_no_locks_held_	extras/concurrencysal.h	89;"	d
_Requires_no_locks_held_	extras/no_sal2.h	162;"	d
_Requires_no_locks_held_	extras/no_sal2.h	164;"	d
_Requires_shared_lock_held_	extras/concurrencysal.h	275;"	d
_Requires_shared_lock_held_	extras/concurrencysal.h	86;"	d
_Requires_shared_lock_held_	extras/no_sal2.h	210;"	d
_Requires_shared_lock_held_	extras/no_sal2.h	212;"	d
_Reserved_	extras/no_sal2.h	981;"	d
_Reserved_	extras/no_sal2.h	982;"	d
_Reserved_	extras/sal.h	306;"	d
_Reset	libmfx/include/msdk/include/mfxplugin++.h	/^        static mfxStatus _Reset(mfxHDL pthis, mfxVideoParam *par){$/;"	f	class:detail::MFXCodecPluginAdapterBase
_Result_nullonfailure_	extras/no_sal2.h	958;"	d
_Result_nullonfailure_	extras/no_sal2.h	960;"	d
_Result_nullonfailure_	extras/sal.h	523;"	d
_Result_zeroonfailure_	extras/no_sal2.h	962;"	d
_Result_zeroonfailure_	extras/no_sal2.h	964;"	d
_Result_zeroonfailure_	extras/sal.h	524;"	d
_Ret1_impl_	extras/sal.h	1774;"	d
_Ret1_impl_	extras/sal.h	1880;"	d
_Ret1_impl_	extras/sal.h	2052;"	d
_Ret1_impl_	extras/sal.h	2142;"	d
_Ret2_impl_	extras/sal.h	1775;"	d
_Ret2_impl_	extras/sal.h	1881;"	d
_Ret2_impl_	extras/sal.h	2053;"	d
_Ret2_impl_	extras/sal.h	2143;"	d
_Ret3_impl_	extras/sal.h	1776;"	d
_Ret3_impl_	extras/sal.h	1882;"	d
_Ret3_impl_	extras/sal.h	2054;"	d
_Ret3_impl_	extras/sal.h	2144;"	d
_Ret_	extras/no_sal2.h	554;"	d
_Ret_	extras/no_sal2.h	556;"	d
_Ret_	extras/sal.h	1010;"	d
_Ret_bound_	extras/sal.h	1016;"	d
_Ret_bound_impl_	extras/sal.h	1692;"	d
_Ret_bound_impl_	extras/sal.h	1813;"	d
_Ret_bound_impl_	extras/sal.h	2007;"	d
_Ret_bound_impl_	extras/sal.h	2105;"	d
_Ret_bytecap_	extras/sal.h	1237;"	d
_Ret_bytecap_c_	extras/sal.h	1243;"	d
_Ret_bytecap_x_	extras/sal.h	1249;"	d
_Ret_bytecount_	extras/sal.h	1262;"	d
_Ret_bytecount_c_	extras/sal.h	1268;"	d
_Ret_bytecount_x_	extras/sal.h	1274;"	d
_Ret_cap_	extras/sal.h	1235;"	d
_Ret_cap_c_	extras/sal.h	1241;"	d
_Ret_cap_x_	extras/sal.h	1247;"	d
_Ret_count_	extras/sal.h	1260;"	d
_Ret_count_c_	extras/sal.h	1266;"	d
_Ret_count_x_	extras/sal.h	1272;"	d
_Ret_maybenull_	extras/no_sal2.h	622;"	d
_Ret_maybenull_	extras/no_sal2.h	624;"	d
_Ret_maybenull_	extras/sal.h	540;"	d
_Ret_maybenull_z_	extras/no_sal2.h	626;"	d
_Ret_maybenull_z_	extras/no_sal2.h	628;"	d
_Ret_maybenull_z_	extras/sal.h	536;"	d
_Ret_notnull_	extras/no_sal2.h	618;"	d
_Ret_notnull_	extras/no_sal2.h	620;"	d
_Ret_notnull_	extras/sal.h	539;"	d
_Ret_null_	extras/no_sal2.h	614;"	d
_Ret_null_	extras/no_sal2.h	616;"	d
_Ret_null_	extras/sal.h	541;"	d
_Ret_opt_	extras/sal.h	1011;"	d
_Ret_opt_bytecap_	extras/sal.h	1238;"	d
_Ret_opt_bytecap_c_	extras/sal.h	1244;"	d
_Ret_opt_bytecap_x_	extras/sal.h	1250;"	d
_Ret_opt_bytecount_	extras/sal.h	1263;"	d
_Ret_opt_bytecount_c_	extras/sal.h	1269;"	d
_Ret_opt_bytecount_x_	extras/sal.h	1275;"	d
_Ret_opt_cap_	extras/sal.h	1236;"	d
_Ret_opt_cap_c_	extras/sal.h	1242;"	d
_Ret_opt_cap_x_	extras/sal.h	1248;"	d
_Ret_opt_count_	extras/sal.h	1261;"	d
_Ret_opt_count_c_	extras/sal.h	1267;"	d
_Ret_opt_count_x_	extras/sal.h	1273;"	d
_Ret_opt_valid_	extras/sal.h	1230;"	d
_Ret_opt_z_	extras/sal.h	1231;"	d
_Ret_opt_z_bytecap_	extras/sal.h	1256;"	d
_Ret_opt_z_bytecount_	extras/sal.h	1281;"	d
_Ret_opt_z_cap_	extras/sal.h	1254;"	d
_Ret_opt_z_count_	extras/sal.h	1279;"	d
_Ret_range_	extras/no_sal2.h	710;"	d
_Ret_range_	extras/no_sal2.h	712;"	d
_Ret_range_	extras/sal.h	584;"	d
_Ret_range_impl_	extras/sal.h	1548;"	d
_Ret_range_impl_	extras/sal.h	2015;"	d
_Ret_range_impl_	extras/sal.h	2113;"	d
_Ret_valid_	extras/no_sal2.h	558;"	d
_Ret_valid_	extras/no_sal2.h	560;"	d
_Ret_valid_	extras/sal.h	545;"	d
_Ret_valid_impl_	extras/sal.h	1540;"	d
_Ret_valid_impl_	extras/sal.h	1989;"	d
_Ret_valid_impl_	extras/sal.h	2090;"	d
_Ret_writes_	extras/no_sal2.h	566;"	d
_Ret_writes_	extras/no_sal2.h	568;"	d
_Ret_writes_	extras/sal.h	548;"	d
_Ret_writes_bytes_	extras/no_sal2.h	570;"	d
_Ret_writes_bytes_	extras/no_sal2.h	572;"	d
_Ret_writes_bytes_	extras/sal.h	550;"	d
_Ret_writes_bytes_maybenull_	extras/no_sal2.h	598;"	d
_Ret_writes_bytes_maybenull_	extras/no_sal2.h	600;"	d
_Ret_writes_bytes_maybenull_	extras/sal.h	553;"	d
_Ret_writes_bytes_to_	extras/no_sal2.h	582;"	d
_Ret_writes_bytes_to_	extras/no_sal2.h	584;"	d
_Ret_writes_bytes_to_	extras/sal.h	557;"	d
_Ret_writes_bytes_to_maybenull_	extras/no_sal2.h	606;"	d
_Ret_writes_bytes_to_maybenull_	extras/no_sal2.h	608;"	d
_Ret_writes_bytes_to_maybenull_	extras/sal.h	559;"	d
_Ret_writes_maybenull_	extras/no_sal2.h	594;"	d
_Ret_writes_maybenull_	extras/no_sal2.h	596;"	d
_Ret_writes_maybenull_	extras/sal.h	551;"	d
_Ret_writes_maybenull_z_	extras/no_sal2.h	610;"	d
_Ret_writes_maybenull_z_	extras/no_sal2.h	612;"	d
_Ret_writes_maybenull_z_	extras/sal.h	552;"	d
_Ret_writes_to_	extras/no_sal2.h	578;"	d
_Ret_writes_to_	extras/no_sal2.h	580;"	d
_Ret_writes_to_	extras/sal.h	556;"	d
_Ret_writes_to_maybenull_	extras/no_sal2.h	602;"	d
_Ret_writes_to_maybenull_	extras/no_sal2.h	604;"	d
_Ret_writes_to_maybenull_	extras/sal.h	558;"	d
_Ret_writes_to_ptr_	extras/no_sal2.h	586;"	d
_Ret_writes_to_ptr_	extras/no_sal2.h	588;"	d
_Ret_writes_to_ptr_z_	extras/no_sal2.h	590;"	d
_Ret_writes_to_ptr_z_	extras/no_sal2.h	592;"	d
_Ret_writes_z_	extras/no_sal2.h	574;"	d
_Ret_writes_z_	extras/no_sal2.h	576;"	d
_Ret_writes_z_	extras/sal.h	549;"	d
_Ret_z_	extras/no_sal2.h	562;"	d
_Ret_z_	extras/no_sal2.h	564;"	d
_Ret_z_	extras/sal.h	535;"	d
_Ret_z_bytecap_	extras/sal.h	1255;"	d
_Ret_z_bytecount_	extras/sal.h	1280;"	d
_Ret_z_cap_	extras/sal.h	1253;"	d
_Ret_z_count_	extras/sal.h	1278;"	d
_Return_type_success_	extras/no_sal2.h	118;"	d
_Return_type_success_	extras/no_sal2.h	120;"	d
_Return_type_success_	extras/sal.h	274;"	d
_SAL1_1_Source_	extras/sal.h	235;"	d
_SAL1_1_Source_	extras/sal.h	240;"	d
_SAL1_2_Source_	extras/sal.h	236;"	d
_SAL1_2_Source_	extras/sal.h	241;"	d
_SAL1_Source_	extras/sal.h	234;"	d
_SAL1_Source_	extras/sal.h	239;"	d
_SAL2_Source_	extras/sal.h	237;"	d
_SAL2_Source_	extras/sal.h	242;"	d
_SAL_VERSION	extras/sal.h	169;"	d
_SAL_default	extras/sal.h	/^enum __SAL_YesNo {_SAL_notpresent, _SAL_no, _SAL_maybe, _SAL_yes, _SAL_default};$/;"	e	enum:__SAL_YesNo
_SAL_maybe	extras/sal.h	/^enum __SAL_YesNo {_SAL_notpresent, _SAL_no, _SAL_maybe, _SAL_yes, _SAL_default};$/;"	e	enum:__SAL_YesNo
_SAL_no	extras/sal.h	/^enum __SAL_YesNo {_SAL_notpresent, _SAL_no, _SAL_maybe, _SAL_yes, _SAL_default};$/;"	e	enum:__SAL_YesNo
_SAL_nop_impl_	extras/sal.h	1566;"	d
_SAL_nop_impl_	extras/sal.h	1974;"	d
_SAL_nop_impl_	extras/sal.h	2075;"	d
_SAL_notpresent	extras/sal.h	/^enum __SAL_YesNo {_SAL_notpresent, _SAL_no, _SAL_maybe, _SAL_yes, _SAL_default};$/;"	e	enum:__SAL_YesNo
_SAL_yes	extras/sal.h	/^enum __SAL_YesNo {_SAL_notpresent, _SAL_no, _SAL_maybe, _SAL_yes, _SAL_default};$/;"	e	enum:__SAL_YesNo
_SA_SPECSTRIZE	extras/sal.h	1565;"	d
_SA_SPECSTRIZE	extras/sal.h	2419;"	d
_SA_annotes0	extras/sal.h	1578;"	d
_SA_annotes0	extras/sal.h	1603;"	d
_SA_annotes0	extras/sal.h	1628;"	d
_SA_annotes1	extras/sal.h	1579;"	d
_SA_annotes1	extras/sal.h	1604;"	d
_SA_annotes1	extras/sal.h	1629;"	d
_SA_annotes2	extras/sal.h	1580;"	d
_SA_annotes2	extras/sal.h	1605;"	d
_SA_annotes2	extras/sal.h	1630;"	d
_SA_annotes3	extras/sal.h	1581;"	d
_SA_annotes3	extras/sal.h	1606;"	d
_SA_annotes3	extras/sal.h	1631;"	d
_SEQ2	OBSApi/Utility/utf8.cpp	21;"	d	file:
_SEQ3	OBSApi/Utility/utf8.cpp	22;"	d	file:
_SEQ4	OBSApi/Utility/utf8.cpp	23;"	d	file:
_SEQ5	OBSApi/Utility/utf8.cpp	24;"	d	file:
_SEQ6	OBSApi/Utility/utf8.cpp	25;"	d	file:
_STDINT_H	ObsNvenc/src/NVENCEncoder.cpp	29;"	d	file:
_STDINT_H	ObsNvenc/src/NVENCEncoder.cpp	31;"	d	file:
_STDINT_H	extras/stdint.h	21;"	d
_STDINT_H	lame/stdint.h	21;"	d
_STDINT_H	librtmp/stdint.h	21;"	d
_Satisfies_impl_	extras/sal.h	1541;"	d
_Satisfies_impl_	extras/sal.h	2024;"	d
_Satisfies_impl_	extras/sal.h	2118;"	d
_Scanf_format_string_	extras/no_sal2.h	682;"	d
_Scanf_format_string_	extras/no_sal2.h	684;"	d
_Scanf_format_string_	extras/sal.h	573;"	d
_Scanf_format_string_impl_	extras/sal.h	1687;"	d
_Scanf_format_string_impl_	extras/sal.h	1808;"	d
_Scanf_format_string_impl_	extras/sal.h	1999;"	d
_Scanf_format_string_impl_	extras/sal.h	2100;"	d
_Scanf_format_string_params_	extras/no_sal2.h	694;"	d
_Scanf_format_string_params_	extras/no_sal2.h	696;"	d
_Scanf_format_string_params_	extras/sal.h	578;"	d
_Scanf_s_format_string_	extras/no_sal2.h	686;"	d
_Scanf_s_format_string_	extras/no_sal2.h	688;"	d
_Scanf_s_format_string_	extras/sal.h	574;"	d
_Scanf_s_format_string_impl_	extras/sal.h	1688;"	d
_Scanf_s_format_string_impl_	extras/sal.h	1809;"	d
_Scanf_s_format_string_impl_	extras/sal.h	2000;"	d
_Scanf_s_format_string_impl_	extras/sal.h	2101;"	d
_Scanf_s_format_string_params_	extras/no_sal2.h	698;"	d
_Scanf_s_format_string_params_	extras/no_sal2.h	700;"	d
_Scanf_s_format_string_params_	extras/sal.h	579;"	d
_Strict_type_match_	extras/no_sal2.h	778;"	d
_Strict_type_match_	extras/no_sal2.h	780;"	d
_Strict_type_match_	extras/sal.h	2968;"	d
_Struct_size_bytes_	extras/no_sal2.h	738;"	d
_Struct_size_bytes_	extras/no_sal2.h	740;"	d
_Struct_size_bytes_	extras/sal.h	602;"	d
_Submit	libmfx/include/msdk/include/mfxplugin++.h	/^        static mfxStatus _Submit(mfxHDL pthis, const mfxHDL *in, mfxU32 in_num, const mfxHDL *out, mfxU32 out_num, mfxThreadTask *task) { $/;"	f	class:detail::MFXPluginAdapterInternal
_Success_	extras/no_sal2.h	114;"	d
_Success_	extras/no_sal2.h	116;"	d
_Success_	extras/sal.h	270;"	d
_Success_impl_	extras/sal.h	1683;"	d
_Success_impl_	extras/sal.h	1804;"	d
_Success_impl_	extras/sal.h	1994;"	d
_Success_impl_	extras/sal.h	2095;"	d
_UNICODE	Source/mongoose.c	44;"	d	file:
_USE_ATTRIBUTES_FOR_SAL	extras/sal.h	180;"	d
_USE_ATTRIBUTES_FOR_SAL	extras/sal.h	181;"	d
_USE_ATTRIBUTES_FOR_SAL	extras/sal.h	184;"	d
_USE_ATTRIBUTES_FOR_SAL	extras/sal.h	186;"	d
_USE_ATTRIBUTES_FOR_SAL	extras/sal.h	194;"	d
_USE_ATTRIBUTES_FOR_SAL	extras/sal.h	195;"	d
_USE_ATTRIBUTES_FOR_SAL	extras/sal.h	211;"	d
_USE_ATTRIBUTES_FOR_SAL	extras/sal.h	222;"	d
_USE_ATTRIBUTES_FOR_SAL	extras/sal.h	223;"	d
_USE_DECLSPECS_FOR_SAL	extras/sal.h	176;"	d
_USE_DECLSPECS_FOR_SAL	extras/sal.h	197;"	d
_USE_DECLSPECS_FOR_SAL	extras/sal.h	198;"	d
_USE_DECLSPECS_FOR_SAL	extras/sal.h	208;"	d
_USE_DECLSPECS_FOR_SAL	extras/sal.h	218;"	d
_USE_DECLSPECS_FOR_SAL	extras/sal.h	219;"	d
_Unchanged_	extras/sal.h	593;"	d
_Use_decl_anno_impl_	extras/sal.h	1764;"	d
_Use_decl_anno_impl_	extras/sal.h	1870;"	d
_Use_decl_anno_impl_	extras/sal.h	1981;"	d
_Use_decl_anno_impl_	extras/sal.h	2082;"	d
_Use_decl_annotations_	extras/no_sal2.h	130;"	d
_Use_decl_annotations_	extras/no_sal2.h	132;"	d
_Use_decl_annotations_	extras/sal.h	286;"	d
_VERSION_H_	libfaac/version.h	2;"	d
_VIDEO_CAPTURE_FILTER_SETTINGS	DShowPlugin/IVideoCaptureFilter.h	/^typedef struct _VIDEO_CAPTURE_FILTER_SETTINGS$/;"	s
_VIDEO_CAPTURE_FILTER_SETTINGS_EX	DShowPlugin/IVideoCaptureFilter.h	/^typedef struct _VIDEO_CAPTURE_FILTER_SETTINGS_EX$/;"	s
_VPPFrameSubmit	libmfx/include/msdk/include/mfxplugin++.h	/^        static mfxStatus _VPPFrameSubmit(mfxHDL pthis, mfxFrameSurface1 *surface_in, mfxFrameSurface1 *surface_out, mfxExtVppAuxData *aux, mfxThreadTask *task) {$/;"	f	class:detail::MFXPluginAdapterInternal
_Valid_	extras/no_sal2.h	106;"	d
_Valid_	extras/no_sal2.h	108;"	d
_Valid_	extras/sal.h	637;"	d
_Valid_impl_	extras/sal.h	1542;"	d
_Valid_impl_	extras/sal.h	2030;"	d
_Valid_impl_	extras/sal.h	2126;"	d
_WIN32_WINDOWS	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.h	23;"	d
_WIN32_WINDOWS	OBSApi/OBSApi.h	23;"	d
_WIN32_WINDOWS	OBSApi/Utility/XFile_Windows.cpp	23;"	d	file:
_WIN32_WINDOWS	OBSApi/Utility/XT_Windows.cpp	23;"	d	file:
_WIN32_WINDOWS	OBSApi/Utility/utf8-windows.cpp	1;"	d	file:
_WIN32_WINDOWS	Source/Main.h	23;"	d
_WIN32_WINNT	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.h	24;"	d
_WIN32_WINNT	OBSApi/OBSApi.h	24;"	d
_WIN32_WINNT	OBSApi/Utility/XFile_Windows.cpp	24;"	d	file:
_WIN32_WINNT	OBSApi/Utility/XT_Windows.cpp	24;"	d	file:
_WIN32_WINNT	OBSApi/Utility/utf8-windows.cpp	2;"	d	file:
_WIN32_WINNT	Source/Main.h	24;"	d
_WIN32_WINNT	Source/Server.h	6;"	d
_WINSOCK_DEPRECATED_NO_WARNINGS	Source/mongoose.c	53;"	d	file:
_WM_GETDLGCODE	CLRHostPlugin/CLRHostInterop/AbstractWPFSettingsPane.h	10;"	d
_WS_CHILD	CLRHostPlugin/CLRHostInterop/AbstractWPFSettingsPane.h	18;"	d
_WS_EX_CONTROLPARENT	CLRHostPlugin/CLRHostInterop/AbstractWPFSettingsPane.h	14;"	d
_WS_SYSMENU	CLRHostPlugin/CLRHostInterop/AbstractWPFSettingsPane.h	16;"	d
_When_	extras/no_sal2.h	22;"	d
_When_	extras/no_sal2.h	24;"	d
_When_	extras/sal.h	265;"	d
_When_impl_	extras/sal.h	1759;"	d
_When_impl_	extras/sal.h	1868;"	d
_When_impl_	extras/sal.h	1978;"	d
_When_impl_	extras/sal.h	2078;"	d
_Writable_bytes_	extras/no_sal2.h	86;"	d
_Writable_bytes_	extras/no_sal2.h	88;"	d
_Writable_bytes_	extras/sal.h	648;"	d
_Writable_bytes_impl_	extras/sal.h	1543;"	d
_Writable_bytes_impl_	extras/sal.h	2036;"	d
_Writable_bytes_impl_	extras/sal.h	2164;"	d
_Writable_elements_	extras/no_sal2.h	82;"	d
_Writable_elements_	extras/no_sal2.h	84;"	d
_Writable_elements_	extras/sal.h	649;"	d
_Writable_elements_impl_	extras/sal.h	1544;"	d
_Writable_elements_impl_	extras/sal.h	2037;"	d
_Writable_elements_impl_	extras/sal.h	2165;"	d
_Write_guarded_by_	extras/concurrencysal.h	271;"	d
_Write_guarded_by_	extras/concurrencysal.h	71;"	d
_Write_guarded_by_	extras/no_sal2.h	170;"	d
_Write_guarded_by_	extras/no_sal2.h	172;"	d
_XOPEN_SOURCE	Source/mongoose.c	57;"	d	file:
__AMF_H__	librtmp/amf.h	2;"	d
__ANNOTATION	extras/sal.h	1592;"	d
__ANNOTATION	extras/sal.h	1616;"	d
__ANNOTATION	extras/sal.h	1633;"	d
__ATTR_SAL	extras/sal.h	166;"	d
__A_	extras/sal.h	/^struct __A_$/;"	s
__A_	extras/sal.h	/^typedef struct __A_ __A_;$/;"	t
__AuToQuOtE	extras/sal.h	1559;"	d
__BASE_ALLOCATOR_H__	QSVHelper/IntelSupport/include/base_allocator.h	12;"	d
__BIG_ENDIAN	librtmp/bytes.h	32;"	d
__BIG_ENDIAN	librtmp/bytes.h	47;"	d
__BIG_ENDIAN	librtmp/bytes.h	62;"	d
__BYTES_H__	librtmp/bytes.h	27;"	d
__BYTE_ORDER	librtmp/bytes.h	33;"	d
__BYTE_ORDER	librtmp/bytes.h	43;"	d
__BYTE_ORDER	librtmp/bytes.h	67;"	d
__D3D11_ALLOCATOR_H__	QSVHelper/IntelSupport/include/d3d11_allocator.h	12;"	d
__FLOAT_WORD_ORDER	librtmp/bytes.h	34;"	d
__FLOAT_WORD_ORDER	librtmp/bytes.h	73;"	d
__F_	extras/sal.h	/^struct __F_$/;"	s
__F_	extras/sal.h	/^typedef struct __F_ __F_;$/;"	t
__GENSYM	extras/sal.h	2928;"	d
__IAUDIOPROPERTIES__	lame/dshow/iaudioprops.h	26;"	d
__IDXGIAdapter2_FWD_DEFINED__	extras/dxgi1_2.h	93;"	d
__IDXGIAdapter2_INTERFACE_DEFINED__	extras/dxgi1_2.h	2000;"	d
__IDXGIDevice2_FWD_DEFINED__	extras/dxgi1_2.h	72;"	d
__IDXGIDevice2_INTERFACE_DEFINED__	extras/dxgi1_2.h	928;"	d
__IDXGIDisplayControl_FWD_DEFINED__	extras/dxgi1_2.h	44;"	d
__IDXGIDisplayControl_INTERFACE_DEFINED__	extras/dxgi1_2.h	126;"	d
__IDXGIFactory2_FWD_DEFINED__	extras/dxgi1_2.h	86;"	d
__IDXGIFactory2_INTERFACE_DEFINED__	extras/dxgi1_2.h	1575;"	d
__IDXGIOutput1_FWD_DEFINED__	extras/dxgi1_2.h	100;"	d
__IDXGIOutput1_INTERFACE_DEFINED__	extras/dxgi1_2.h	2163;"	d
__IDXGIOutputDuplication_FWD_DEFINED__	extras/dxgi1_2.h	51;"	d
__IDXGIOutputDuplication_INTERFACE_DEFINED__	extras/dxgi1_2.h	270;"	d
__IDXGIResource1_FWD_DEFINED__	extras/dxgi1_2.h	65;"	d
__IDXGIResource1_INTERFACE_DEFINED__	extras/dxgi1_2.h	717;"	d
__IDXGISurface2_FWD_DEFINED__	extras/dxgi1_2.h	58;"	d
__IDXGISurface2_INTERFACE_DEFINED__	extras/dxgi1_2.h	530;"	d
__IDXGISwapChain1_FWD_DEFINED__	extras/dxgi1_2.h	79;"	d
__IDXGISwapChain1_INTERFACE_DEFINED__	extras/dxgi1_2.h	1224;"	d
__INT64	libmfx/include/msdk/include/mfxdefs.h	40;"	d
__INT64	libmfx/include/msdk/include/mfxdefs.h	43;"	d
__In_impl_	extras/sal.h	1597;"	d
__In_impl_	extras/sal.h	1622;"	d
__LITTLE_ENDIAN	librtmp/bytes.h	31;"	d
__LITTLE_ENDIAN	librtmp/bytes.h	51;"	d
__LITTLE_ENDIAN	librtmp/bytes.h	58;"	d
__LOC__	lame/frontend/get_audio.c	94;"	d	file:
__MFXASTRUCTURES_H__	libmfx/include/msdk/include/mfxastructures.h	31;"	d
__MFXAUDIOPLUSPLUS_H	libmfx/include/msdk/include/mfxaudio++.h	33;"	d
__MFXAUDIO_H__	libmfx/include/msdk/include/mfxaudio.h	32;"	d
__MFXCOMMON_H__	libmfx/include/msdk/include/mfxcommon.h	31;"	d
__MFXDEFS_H__	libmfx/include/msdk/include/mfxdefs.h	31;"	d
__MFXMVC_H__	libmfx/include/msdk/include/mfxmvc.h	31;"	d
__MFXPLUGINPLUSPLUS_H	libmfx/include/msdk/include/mfxplugin++.h	33;"	d
__MFXPLUGIN_H__	libmfx/include/msdk/include/mfxplugin.h	31;"	d
__MFXSESSION_H__	libmfx/include/msdk/include/mfxsession.h	31;"	d
__MFXSTRUCTURES_H__	libmfx/include/msdk/include/mfxstructures.h	31;"	d
__MFXVIDEOPLUSPLUS_H	libmfx/include/msdk/include/mfxvideo++.h	33;"	d
__MFXVIDEO_H__	libmfx/include/msdk/include/mfxvideo.h	31;"	d
__MFX_CRITICAL_SECTION_H	libmfx/include/mfx_critical_section.h	32;"	d
__MFX_DISPATCHER_H	libmfx/include/mfx_dispatcher.h	32;"	d
__MFX_DISPATCHER_LOG_H	libmfx/include/mfx_dispatcher_log.h	32;"	d
__MFX_DXVA2_DEVICE_H	libmfx/include/mfx_dxva2_device.h	32;"	d
__MFX_JPEG_H__	libmfx/include/msdk/include/mfxjpeg.h	31;"	d
__MFX_LIBRARY_ITERATOR_H	libmfx/include/mfx_library_iterator.h	32;"	d
__MFX_LOAD_DLL_H	libmfx/include/mfx_load_dll.h	32;"	d
__MFX_WIN_REG_KEY_H	libmfx/include/mfx_win_reg_key.h	32;"	d
__MKID	extras/sal.h	2927;"	d
__M_	extras/sal.h	/^struct __M_$/;"	s
__M_	extras/sal.h	/^typedef struct __M_ __M_;$/;"	t
__OUTPUT_FORMAT__	lame/libmp3lame/i386/nasm.h	/^%ifidn __OUTPUT_FORMAT__,elf$/;"	v
__PRIMOP	extras/sal.h	1593;"	d
__PRIMOP	extras/sal.h	1618;"	d
__PRIMOP	extras/sal.h	1634;"	d
__P_impl	extras/sal.h	/^struct __P_impl$/;"	s
__P_impl	extras/sal.h	/^typedef struct __P_impl __P_impl;$/;"	t
__QUALIFIER	extras/sal.h	1594;"	d
__QUALIFIER	extras/sal.h	1620;"	d
__QUALIFIER	extras/sal.h	1635;"	d
__REG__	lame/dshow/REG.H	24;"	d
__REQUIRED_RPCNDR_H_VERSION__	extras/dxgi1_2.h	14;"	d
__REQUIRED_RPCSAL_H_VERSION__	extras/dxgi1_2.h	19;"	d
__RTMP_HTTP_H__	librtmp/http.h	2;"	d
__RTMP_H__	librtmp/rtmp.h	2;"	d
__RTMP_LOG_H__	librtmp/log.h	25;"	d
__RTMP_SYS_H__	librtmp/rtmp_sys.h	2;"	d
__R_impl	extras/sal.h	/^struct __R_impl$/;"	s
__R_impl	extras/sal.h	/^typedef struct __R_impl __R_impl;$/;"	t
__SAL_YesNo	extras/sal.h	/^enum __SAL_YesNo {_SAL_notpresent, _SAL_no, _SAL_maybe, _SAL_yes, _SAL_default};$/;"	g
__SAMPLE_DEFS_H__	QSVHelper/IntelSupport/include/sample_defs.h	14;"	d
__SET_GET_H__	lame/libmp3lame/set_get.h	22;"	d
__STDC_FORMAT_MACROS	Source/mongoose.c	59;"	d	file:
__STDC_LIMIT_MACROS	Source/mongoose.c	60;"	d	file:
__STR	lame/frontend/get_audio.c	92;"	d	file:
__STR	lame/libmp3lame/version.h	30;"	d
__STRING_DEFS_H__	QSVHelper/IntelSupport/include/vm/strings_defs.h	14;"	d
__TIME_DEFS_H__	QSVHelper/IntelSupport/include/vm/time_defs.h	12;"	d
__UINT64	libmfx/include/msdk/include/mfxdefs.h	41;"	d
__UINT64	libmfx/include/msdk/include/mfxdefs.h	44;"	d
__USE_ISOC99	libsamplerate/float_cast.h	72;"	d
__USE_ISOC9X	libsamplerate/float_cast.h	71;"	d
__USE_SYSBASE	lame/frontend/amiga_mpega.c	16;"	d	file:
___BLADEDLL_H_INCLUDED___	lame/Dll/BladeMP3EncDLL.h	24;"	d
___MKID	extras/sal.h	2926;"	d
__acquires_exclusive_lock	extras/concurrencysal.h	206;"	d
__acquires_exclusive_lock	extras/concurrencysal.h	326;"	d
__acquires_lock	extras/concurrencysal.h	205;"	d
__acquires_lock	extras/concurrencysal.h	325;"	d
__acquires_shared_lock	extras/concurrencysal.h	207;"	d
__acquires_shared_lock	extras/concurrencysal.h	327;"	d
__allaccess_impl	extras/sal.h	1716;"	d
__allaccess_impl	extras/sal.h	1838;"	d
__allaccess_impl_notref	extras/sal.h	1720;"	d
__allaccess_impl_notref	extras/sal.h	1842;"	d
__analysis_assume	extras/sal.h	2894;"	d
__analysis_assume	extras/sal.h	2896;"	d
__analysis_assume_lock_acquired	extras/concurrencysal.h	250;"	d
__analysis_assume_lock_acquired	extras/concurrencysal.h	340;"	d
__analysis_assume_lock_released	extras/concurrencysal.h	251;"	d
__analysis_assume_lock_released	extras/concurrencysal.h	341;"	d
__analysis_suppress_lock_checking	extras/concurrencysal.h	256;"	d
__analysis_suppress_lock_checking	extras/concurrencysal.h	343;"	d
__bcount	extras/sal.h	2672;"	d
__bcount_opt	extras/sal.h	2715;"	d
__blocksOn	extras/sal.h	2881;"	d
__byte_readableTo	extras/sal.h	2490;"	d
__byte_readableTo	extras/sal.h	2632;"	d
__byte_writableTo	extras/sal.h	2514;"	d
__byte_writableTo	extras/sal.h	2635;"	d
__bytecap_c_impl	extras/sal.h	1745;"	d
__bytecap_c_impl	extras/sal.h	1851;"	d
__bytecap_impl	extras/sal.h	1727;"	d
__bytecap_impl	extras/sal.h	1734;"	d
__bytecap_impl	extras/sal.h	1850;"	d
__bytecap_x_impl	extras/sal.h	1746;"	d
__bytecap_x_impl	extras/sal.h	1852;"	d
__bytecount_c_impl	extras/sal.h	1753;"	d
__bytecount_c_impl	extras/sal.h	1861;"	d
__bytecount_impl	extras/sal.h	1728;"	d
__bytecount_impl	extras/sal.h	1735;"	d
__bytecount_impl	extras/sal.h	1860;"	d
__bytecount_x_impl	extras/sal.h	1754;"	d
__bytecount_x_impl	extras/sal.h	1862;"	d
__callback	extras/sal.h	2879;"	d
__cap_c_impl	extras/sal.h	1740;"	d
__cap_c_impl	extras/sal.h	1845;"	d
__cap_c_one_notref_impl	extras/sal.h	1741;"	d
__cap_c_one_notref_impl	extras/sal.h	1846;"	d
__cap_for_impl	extras/sal.h	1742;"	d
__cap_for_impl	extras/sal.h	1847;"	d
__cap_impl	extras/sal.h	1726;"	d
__cap_impl	extras/sal.h	1733;"	d
__cap_impl	extras/sal.h	1844;"	d
__cap_x_impl	extras/sal.h	1743;"	d
__cap_x_impl	extras/sal.h	1848;"	d
__cdecl	Source/mongoose.c	152;"	d	file:
__checkReturn	extras/sal.h	2876;"	d
__control_entrypoint	extras/sal.h	2882;"	d
__count_c_impl	extras/sal.h	1750;"	d
__count_c_impl	extras/sal.h	1857;"	d
__count_impl	extras/sal.h	1729;"	d
__count_impl	extras/sal.h	1736;"	d
__count_impl	extras/sal.h	1856;"	d
__count_x_impl	extras/sal.h	1751;"	d
__count_x_impl	extras/sal.h	1858;"	d
__curProfilerNode	OBSApi/Utility/Profiler.cpp	/^static __declspec(thread) ProfilerNode *__curProfilerNode = NULL;$/;"	v
__d_	extras/sal.h	/^   int __d_;$/;"	m	struct:__A_
__d_	extras/sal.h	/^   int __d_;$/;"	m	struct:__F_
__d_	extras/sal.h	/^   int __d_;$/;"	m	struct:__M_
__d_	extras/sal.h	/^   int __d_;$/;"	m	struct:__P_impl
__d_	extras/sal.h	/^   int __d_;$/;"	m	struct:__R_impl
__data_entrypoint	extras/sal.h	2883;"	d
__declare_lock_level	extras/concurrencysal.h	228;"	d
__declare_lock_level	extras/concurrencysal.h	333;"	d
__declspec	lame/Dll/BladeMP3EncDLL.c	/^__declspec(dllexport) BE_ERR	beCloseStream(HBE_STREAM hbeStream)$/;"	f
__declspec	lame/Dll/BladeMP3EncDLL.c	/^__declspec(dllexport) BE_ERR	beDeinitStream(HBE_STREAM hbeStream, PBYTE pOutput, PDWORD pdwOutput)$/;"	f
__declspec	lame/Dll/BladeMP3EncDLL.c	/^__declspec(dllexport) BE_ERR	beEncodeChunk(HBE_STREAM hbeStream, DWORD nSamples, $/;"	f
__declspec	lame/Dll/BladeMP3EncDLL.c	/^__declspec(dllexport) BE_ERR	beEncodeChunkFloatS16NI(HBE_STREAM hbeStream, DWORD nSamples, $/;"	f
__declspec	lame/Dll/BladeMP3EncDLL.c	/^__declspec(dllexport) BE_ERR	beFlushNoGap(HBE_STREAM hbeStream, PBYTE pOutput, PDWORD pdwOutput)$/;"	f
__declspec	lame/Dll/BladeMP3EncDLL.c	/^__declspec(dllexport) BE_ERR	beInitStream(PBE_CONFIG pbeConfig, PDWORD dwSamples, PDWORD dwBufferSize, PHBE_STREAM phbeStream)$/;"	f
__declspec	lame/Dll/BladeMP3EncDLL.c	/^__declspec(dllexport) BE_ERR beWriteInfoTag( HBE_STREAM hbeStream,$/;"	f
__declspec	lame/Dll/BladeMP3EncDLL.c	/^__declspec(dllexport) BE_ERR beWriteVBRHeader(LPCSTR lpszFileName)$/;"	f
__declspec	lame/Dll/BladeMP3EncDLL.c	/^__declspec(dllexport) VOID		beVersion(PBE_VERSION pbeVersion)$/;"	f
__deferTypecheck	extras/sal.h	1563;"	d
__deref	extras/sal.h	2524;"	d
__deref	extras/sal.h	2636;"	d
__deref_bcount	extras/sal.h	2755;"	d
__deref_bcount_opt	extras/sal.h	2783;"	d
__deref_ecount	extras/sal.h	2754;"	d
__deref_ecount_opt	extras/sal.h	2782;"	d
__deref_inout	extras/sal.h	2769;"	d
__deref_inout_bcount	extras/sal.h	2772;"	d
__deref_inout_bcount_full	extras/sal.h	2776;"	d
__deref_inout_bcount_full_opt	extras/sal.h	2803;"	d
__deref_inout_bcount_nz	extras/sal.h	2781;"	d
__deref_inout_bcount_nz_opt	extras/sal.h	2809;"	d
__deref_inout_bcount_opt	extras/sal.h	2799;"	d
__deref_inout_bcount_part	extras/sal.h	2774;"	d
__deref_inout_bcount_part_opt	extras/sal.h	2801;"	d
__deref_inout_bcount_z	extras/sal.h	2778;"	d
__deref_inout_bcount_z_opt	extras/sal.h	2806;"	d
__deref_inout_ecount	extras/sal.h	2771;"	d
__deref_inout_ecount_full	extras/sal.h	2775;"	d
__deref_inout_ecount_full_opt	extras/sal.h	2802;"	d
__deref_inout_ecount_nz	extras/sal.h	2780;"	d
__deref_inout_ecount_nz_opt	extras/sal.h	2808;"	d
__deref_inout_ecount_opt	extras/sal.h	2798;"	d
__deref_inout_ecount_part	extras/sal.h	2773;"	d
__deref_inout_ecount_part_opt	extras/sal.h	2800;"	d
__deref_inout_ecount_z	extras/sal.h	2777;"	d
__deref_inout_ecount_z_opt	extras/sal.h	2805;"	d
__deref_inout_nz	extras/sal.h	2779;"	d
__deref_inout_nz_opt	extras/sal.h	2807;"	d
__deref_inout_opt	extras/sal.h	2797;"	d
__deref_inout_z	extras/sal.h	2770;"	d
__deref_inout_z_opt	extras/sal.h	2804;"	d
__deref_opt_bcount	extras/sal.h	2811;"	d
__deref_opt_bcount_opt	extras/sal.h	2834;"	d
__deref_opt_ecount	extras/sal.h	2810;"	d
__deref_opt_ecount_opt	extras/sal.h	2833;"	d
__deref_opt_inout	extras/sal.h	2820;"	d
__deref_opt_inout_bcount	extras/sal.h	2822;"	d
__deref_opt_inout_bcount_full	extras/sal.h	2826;"	d
__deref_opt_inout_bcount_full_opt	extras/sal.h	2854;"	d
__deref_opt_inout_bcount_nz	extras/sal.h	2832;"	d
__deref_opt_inout_bcount_nz_opt	extras/sal.h	2860;"	d
__deref_opt_inout_bcount_opt	extras/sal.h	2850;"	d
__deref_opt_inout_bcount_part	extras/sal.h	2824;"	d
__deref_opt_inout_bcount_part_opt	extras/sal.h	2852;"	d
__deref_opt_inout_bcount_z	extras/sal.h	2829;"	d
__deref_opt_inout_bcount_z_opt	extras/sal.h	2857;"	d
__deref_opt_inout_ecount	extras/sal.h	2821;"	d
__deref_opt_inout_ecount_full	extras/sal.h	2825;"	d
__deref_opt_inout_ecount_full_opt	extras/sal.h	2853;"	d
__deref_opt_inout_ecount_nz	extras/sal.h	2831;"	d
__deref_opt_inout_ecount_nz_opt	extras/sal.h	2859;"	d
__deref_opt_inout_ecount_opt	extras/sal.h	2849;"	d
__deref_opt_inout_ecount_part	extras/sal.h	2823;"	d
__deref_opt_inout_ecount_part_opt	extras/sal.h	2851;"	d
__deref_opt_inout_ecount_z	extras/sal.h	2828;"	d
__deref_opt_inout_ecount_z_opt	extras/sal.h	2856;"	d
__deref_opt_inout_nz	extras/sal.h	2830;"	d
__deref_opt_inout_nz_opt	extras/sal.h	2858;"	d
__deref_opt_inout_opt	extras/sal.h	2848;"	d
__deref_opt_inout_z	extras/sal.h	2827;"	d
__deref_opt_inout_z_opt	extras/sal.h	2855;"	d
__deref_opt_out	extras/sal.h	2812;"	d
__deref_opt_out_bcount	extras/sal.h	2815;"	d
__deref_opt_out_bcount_full	extras/sal.h	2819;"	d
__deref_opt_out_bcount_full_opt	extras/sal.h	2841;"	d
__deref_opt_out_bcount_nz_opt	extras/sal.h	2847;"	d
__deref_opt_out_bcount_opt	extras/sal.h	2837;"	d
__deref_opt_out_bcount_part	extras/sal.h	2817;"	d
__deref_opt_out_bcount_part_opt	extras/sal.h	2839;"	d
__deref_opt_out_bcount_z_opt	extras/sal.h	2844;"	d
__deref_opt_out_ecount	extras/sal.h	2814;"	d
__deref_opt_out_ecount_full	extras/sal.h	2818;"	d
__deref_opt_out_ecount_full_opt	extras/sal.h	2840;"	d
__deref_opt_out_ecount_nz_opt	extras/sal.h	2846;"	d
__deref_opt_out_ecount_opt	extras/sal.h	2836;"	d
__deref_opt_out_ecount_part	extras/sal.h	2816;"	d
__deref_opt_out_ecount_part_opt	extras/sal.h	2838;"	d
__deref_opt_out_ecount_z_opt	extras/sal.h	2843;"	d
__deref_opt_out_nz_opt	extras/sal.h	2845;"	d
__deref_opt_out_opt	extras/sal.h	2835;"	d
__deref_opt_out_z	extras/sal.h	2813;"	d
__deref_opt_out_z_opt	extras/sal.h	2842;"	d
__deref_out	extras/sal.h	2756;"	d
__deref_out_bcount	extras/sal.h	2758;"	d
__deref_out_bcount_full	extras/sal.h	2762;"	d
__deref_out_bcount_full_opt	extras/sal.h	2790;"	d
__deref_out_bcount_nz	extras/sal.h	2768;"	d
__deref_out_bcount_nz_opt	extras/sal.h	2796;"	d
__deref_out_bcount_opt	extras/sal.h	2786;"	d
__deref_out_bcount_part	extras/sal.h	2760;"	d
__deref_out_bcount_part_opt	extras/sal.h	2788;"	d
__deref_out_bcount_z	extras/sal.h	2765;"	d
__deref_out_bcount_z_opt	extras/sal.h	2793;"	d
__deref_out_ecount	extras/sal.h	2757;"	d
__deref_out_ecount_full	extras/sal.h	2761;"	d
__deref_out_ecount_full_opt	extras/sal.h	2789;"	d
__deref_out_ecount_nz	extras/sal.h	2767;"	d
__deref_out_ecount_nz_opt	extras/sal.h	2795;"	d
__deref_out_ecount_opt	extras/sal.h	2785;"	d
__deref_out_ecount_part	extras/sal.h	2759;"	d
__deref_out_ecount_part_opt	extras/sal.h	2787;"	d
__deref_out_ecount_z	extras/sal.h	2764;"	d
__deref_out_ecount_z_opt	extras/sal.h	2792;"	d
__deref_out_nz	extras/sal.h	2766;"	d
__deref_out_nz_opt	extras/sal.h	2794;"	d
__deref_out_opt	extras/sal.h	2784;"	d
__deref_out_z	extras/sal.h	2763;"	d
__deref_out_z_opt	extras/sal.h	2791;"	d
__dxgi1_2_h__	extras/dxgi1_2.h	35;"	d
__ecount	extras/sal.h	2671;"	d
__ecount_opt	extras/sal.h	2714;"	d
__elem_readableTo	extras/sal.h	2483;"	d
__elem_readableTo	extras/sal.h	2631;"	d
__elem_writableTo	extras/sal.h	2507;"	d
__elem_writableTo	extras/sal.h	2634;"	d
__exceptthat	extras/sal.h	2573;"	d
__exceptthat	extras/sal.h	2641;"	d
__fallthrough	extras/sal.h	2889;"	d
__format_string	extras/sal.h	2880;"	d
__func__	Source/mongoose.c	119;"	d	file:
__func__	Source/mongoose.c	1349;"	d	file:
__function_ignore_lock_checking	extras/concurrencysal.h	253;"	d
__function_ignore_lock_checking	extras/concurrencysal.h	342;"	d
__guarded_by	extras/concurrencysal.h	188;"	d
__guarded_by	extras/concurrencysal.h	317;"	d
__has_lock_level	extras/concurrencysal.h	229;"	d
__has_lock_level	extras/concurrencysal.h	334;"	d
__has_lock_property	extras/concurrencysal.h	223;"	d
__has_lock_property	extras/concurrencysal.h	332;"	d
__in	extras/sal.h	2673;"	d
__in_bcount	extras/sal.h	2675;"	d
__in_bcount_nz	extras/sal.h	2681;"	d
__in_bcount_nz_opt	extras/sal.h	2724;"	d
__in_bcount_opt	extras/sal.h	2718;"	d
__in_bcount_z	extras/sal.h	2678;"	d
__in_bcount_z_opt	extras/sal.h	2721;"	d
__in_ecount	extras/sal.h	2674;"	d
__in_ecount_nz	extras/sal.h	2680;"	d
__in_ecount_nz_opt	extras/sal.h	2723;"	d
__in_ecount_opt	extras/sal.h	2717;"	d
__in_ecount_z	extras/sal.h	2677;"	d
__in_ecount_z_opt	extras/sal.h	2720;"	d
__in_nz	extras/sal.h	2679;"	d
__in_nz_opt	extras/sal.h	2722;"	d
__in_opt	extras/sal.h	2716;"	d
__in_z	extras/sal.h	2676;"	d
__in_z_opt	extras/sal.h	2719;"	d
__inexpressible_readableTo	extras/sal.h	2616;"	d
__inexpressible_readableTo	extras/sal.h	2656;"	d
__inexpressible_writableTo	extras/sal.h	2617;"	d
__inexpressible_writableTo	extras/sal.h	2657;"	d
__inner_blocksOn	extras/sal.h	2606;"	d
__inner_blocksOn	extras/sal.h	2644;"	d
__inner_callback	extras/sal.h	2605;"	d
__inner_callback	extras/sal.h	2643;"	d
__inner_control_entrypoint	extras/sal.h	2596;"	d
__inner_control_entrypoint	extras/sal.h	2648;"	d
__inner_data_entrypoint	extras/sal.h	2602;"	d
__inner_data_entrypoint	extras/sal.h	2649;"	d
__inner_exceptthat	extras/sal.h	1797;"	d
__inner_exceptthat	extras/sal.h	1901;"	d
__inner_exceptthat	extras/sal.h	2172;"	d
__inner_fallthrough	extras/sal.h	2608;"	d
__inner_fallthrough	extras/sal.h	2646;"	d
__inner_fallthrough_dec	extras/sal.h	2607;"	d
__inner_fallthrough_dec	extras/sal.h	2645;"	d
__inner_override	extras/sal.h	2604;"	d
__inner_override	extras/sal.h	2642;"	d
__inner_typefix	extras/sal.h	1796;"	d
__inner_typefix	extras/sal.h	1900;"	d
__inner_typefix	extras/sal.h	2171;"	d
__inout	extras/sal.h	2701;"	d
__inout_bcount	extras/sal.h	2703;"	d
__inout_bcount_full	extras/sal.h	2707;"	d
__inout_bcount_full_opt	extras/sal.h	2746;"	d
__inout_bcount_nz	extras/sal.h	2713;"	d
__inout_bcount_nz_opt	extras/sal.h	2753;"	d
__inout_bcount_opt	extras/sal.h	2742;"	d
__inout_bcount_part	extras/sal.h	2705;"	d
__inout_bcount_part_opt	extras/sal.h	2744;"	d
__inout_bcount_z	extras/sal.h	2710;"	d
__inout_bcount_z_opt	extras/sal.h	2750;"	d
__inout_ecount	extras/sal.h	2702;"	d
__inout_ecount_full	extras/sal.h	2706;"	d
__inout_ecount_full_opt	extras/sal.h	2745;"	d
__inout_ecount_nz	extras/sal.h	2712;"	d
__inout_ecount_nz_opt	extras/sal.h	2752;"	d
__inout_ecount_opt	extras/sal.h	2741;"	d
__inout_ecount_part	extras/sal.h	2704;"	d
__inout_ecount_part_opt	extras/sal.h	2743;"	d
__inout_ecount_z	extras/sal.h	2709;"	d
__inout_ecount_z_opt	extras/sal.h	2748;"	d
__inout_ecount_z_opt	extras/sal.h	2749;"	d
__inout_nz	extras/sal.h	2711;"	d
__inout_nz_opt	extras/sal.h	2751;"	d
__inout_opt	extras/sal.h	2740;"	d
__inout_z	extras/sal.h	2708;"	d
__inout_z_opt	extras/sal.h	2747;"	d
__int8_t_defined	lame/config.h	70;"	d
__int8_t_defined	lame/configMS.h	70;"	d
__interlocked	extras/concurrencysal.h	190;"	d
__interlocked	extras/concurrencysal.h	319;"	d
__internal_lock_level_order	extras/concurrencysal.h	231;"	d
__internal_lock_level_order	extras/concurrencysal.h	335;"	d
__k	lame/misc/ath.c	/^static keyboard_t* __k;$/;"	v	file:
__lock_level_order	extras/concurrencysal.h	235;"	d
__lock_level_order	extras/concurrencysal.h	338;"	d
__maybenull	extras/sal.h	2432;"	d
__maybenull	extras/sal.h	2623;"	d
__maybenull_impl	extras/sal.h	1702;"	d
__maybenull_impl	extras/sal.h	1821;"	d
__maybenull_impl_notref	extras/sal.h	1706;"	d
__maybenull_impl_notref	extras/sal.h	1828;"	d
__maybereadonly	extras/sal.h	2449;"	d
__maybereadonly	extras/sal.h	2626;"	d
__maybevalid	extras/sal.h	2463;"	d
__maybevalid	extras/sal.h	2629;"	d
__maybevalid_impl	extras/sal.h	1698;"	d
__maybevalid_impl	extras/sal.h	1825;"	d
__maybezterm_impl	extras/sal.h	1710;"	d
__maybezterm_impl	extras/sal.h	1832;"	d
__maybzterm_impl	extras/sal.h	1711;"	d
__maybzterm_impl	extras/sal.h	1833;"	d
__mult_impl	extras/sal.h	1748;"	d
__mult_impl	extras/sal.h	1854;"	d
__name_from_line	libmfx/include/mfx_dispatcher_log.h	143;"	d
__need_wchar_t	extras/stdint.h	23;"	d
__need_wchar_t	lame/stdint.h	23;"	d
__need_wchar_t	librtmp/stdint.h	23;"	d
__need_wint_t	extras/stdint.h	22;"	d
__need_wint_t	lame/stdint.h	22;"	d
__need_wint_t	librtmp/stdint.h	22;"	d
__no_competing_thread	extras/concurrencysal.h	242;"	d
__no_competing_thread	extras/concurrencysal.h	339;"	d
__nop_impl	extras/sal.h	1567;"	d
__nothrow	extras/sal.h	2385;"	d
__nothrow	extras/sal.h	2390;"	d
__notnull	extras/sal.h	2431;"	d
__notnull	extras/sal.h	2622;"	d
__notnull_impl	extras/sal.h	1703;"	d
__notnull_impl	extras/sal.h	1820;"	d
__notnull_impl_notref	extras/sal.h	1707;"	d
__notnull_impl_notref	extras/sal.h	1829;"	d
__notreadonly	extras/sal.h	2448;"	d
__notreadonly	extras/sal.h	2625;"	d
__notvalid	extras/sal.h	2462;"	d
__notvalid	extras/sal.h	2628;"	d
__notvalid_impl	extras/sal.h	1699;"	d
__notvalid_impl	extras/sal.h	1824;"	d
__notzterm_impl	extras/sal.h	1712;"	d
__notzterm_impl	extras/sal.h	1834;"	d
__null	extras/sal.h	2430;"	d
__null	extras/sal.h	2621;"	d
__null_impl	extras/sal.h	1701;"	d
__null_impl	extras/sal.h	1819;"	d
__null_impl_notref	extras/sal.h	1705;"	d
__null_impl_notref	extras/sal.h	1827;"	d
__nullnullterminated	extras/sal.h	2874;"	d
__nullterminated	extras/sal.h	2873;"	d
__on_failure	extras/sal.h	2885;"	d
__out	extras/sal.h	2682;"	d
__out_bcount	extras/sal.h	2684;"	d
__out_bcount_full	extras/sal.h	2688;"	d
__out_bcount_full_opt	extras/sal.h	2731;"	d
__out_bcount_full_z	extras/sal.h	2696;"	d
__out_bcount_full_z_opt	extras/sal.h	2737;"	d
__out_bcount_nz	extras/sal.h	2700;"	d
__out_bcount_nz_opt	extras/sal.h	2739;"	d
__out_bcount_opt	extras/sal.h	2727;"	d
__out_bcount_part	extras/sal.h	2686;"	d
__out_bcount_part_opt	extras/sal.h	2729;"	d
__out_bcount_part_z	extras/sal.h	2694;"	d
__out_bcount_part_z_opt	extras/sal.h	2735;"	d
__out_bcount_z	extras/sal.h	2692;"	d
__out_bcount_z_opt	extras/sal.h	2733;"	d
__out_ecount	extras/sal.h	2683;"	d
__out_ecount_full	extras/sal.h	2687;"	d
__out_ecount_full_opt	extras/sal.h	2730;"	d
__out_ecount_full_z	extras/sal.h	2695;"	d
__out_ecount_full_z_opt	extras/sal.h	2736;"	d
__out_ecount_nz	extras/sal.h	2699;"	d
__out_ecount_nz_opt	extras/sal.h	2738;"	d
__out_ecount_opt	extras/sal.h	2726;"	d
__out_ecount_part	extras/sal.h	2685;"	d
__out_ecount_part_opt	extras/sal.h	2728;"	d
__out_ecount_part_z	extras/sal.h	2693;"	d
__out_ecount_part_z_opt	extras/sal.h	2734;"	d
__out_ecount_z	extras/sal.h	2691;"	d
__out_ecount_z_opt	extras/sal.h	2732;"	d
__out_nz	extras/sal.h	2697;"	d
__out_nz_opt	extras/sal.h	2698;"	d
__out_opt	extras/sal.h	2725;"	d
__out_z	extras/sal.h	2689;"	d
__out_z_opt	extras/sal.h	2690;"	d
__override	extras/sal.h	2878;"	d
__post	extras/sal.h	2538;"	d
__post	extras/sal.h	2638;"	d
__post_deref_except_maybenull	extras/sal.h	2613;"	d
__post_deref_except_maybenull	extras/sal.h	2653;"	d
__post_except_maybenull	extras/sal.h	2610;"	d
__post_except_maybenull	extras/sal.h	2651;"	d
__postcond	extras/sal.h	2554;"	d
__postcond	extras/sal.h	2640;"	d
__pre	extras/sal.h	2531;"	d
__pre	extras/sal.h	2637;"	d
__pre_deref_except_maybenull	extras/sal.h	2614;"	d
__pre_deref_except_maybenull	extras/sal.h	2654;"	d
__pre_except_maybenull	extras/sal.h	2611;"	d
__pre_except_maybenull	extras/sal.h	2652;"	d
__precond	extras/sal.h	2546;"	d
__precond	extras/sal.h	2639;"	d
__readableTo	extras/sal.h	2474;"	d
__readableTo	extras/sal.h	2630;"	d
__readaccess_impl	extras/sal.h	1714;"	d
__readaccess_impl	extras/sal.h	1836;"	d
__readaccess_impl_notref	extras/sal.h	1718;"	d
__readaccess_impl_notref	extras/sal.h	1840;"	d
__readonly	extras/sal.h	2447;"	d
__readonly	extras/sal.h	2624;"	d
__refparam	extras/sal.h	2581;"	d
__refparam	extras/sal.h	2647;"	d
__releases_exclusive_lock	extras/concurrencysal.h	210;"	d
__releases_exclusive_lock	extras/concurrencysal.h	329;"	d
__releases_lock	extras/concurrencysal.h	209;"	d
__releases_lock	extras/concurrencysal.h	328;"	d
__releases_shared_lock	extras/concurrencysal.h	211;"	d
__releases_shared_lock	extras/concurrencysal.h	330;"	d
__requires_exclusive_lock_held	extras/concurrencysal.h	196;"	d
__requires_exclusive_lock_held	extras/concurrencysal.h	321;"	d
__requires_lock_held	extras/concurrencysal.h	195;"	d
__requires_lock_held	extras/concurrencysal.h	320;"	d
__requires_lock_not_held	extras/concurrencysal.h	199;"	d
__requires_lock_not_held	extras/concurrencysal.h	323;"	d
__requires_no_locks_held	extras/concurrencysal.h	200;"	d
__requires_no_locks_held	extras/concurrencysal.h	324;"	d
__requires_shared_lock_held	extras/concurrencysal.h	197;"	d
__requires_shared_lock_held	extras/concurrencysal.h	322;"	d
__reserved	extras/sal.h	2875;"	d
__specstrings	extras/sal.h	2381;"	d
__success	extras/sal.h	2872;"	d
__tos__	lame/libmp3lame/i386/nasm.h	/^; for TownsOS                   ->        __tos__$/;"	v
__typefix	extras/sal.h	2877;"	d
__useHeader	extras/sal.h	2884;"	d
__utf8_forbitten	OBSApi/Utility/utf8.cpp	/^__utf8_forbitten(unsigned char octet)$/;"	f	file:
__valid	extras/sal.h	2461;"	d
__valid	extras/sal.h	2627;"	d
__valid_impl	extras/sal.h	1697;"	d
__valid_impl	extras/sal.h	1823;"	d
__wchar_forbitten	OBSApi/Utility/utf8.cpp	/^__wchar_forbitten(wchar_t sym)$/;"	f	file:
__writableTo	extras/sal.h	2500;"	d
__writableTo	extras/sal.h	2633;"	d
__write_guarded_by	extras/concurrencysal.h	189;"	d
__write_guarded_by	extras/concurrencysal.h	318;"	d
__writeaccess_impl	extras/sal.h	1715;"	d
__writeaccess_impl	extras/sal.h	1837;"	d
__writeaccess_impl_notref	extras/sal.h	1719;"	d
__writeaccess_impl_notref	extras/sal.h	1841;"	d
__zterm_impl	extras/sal.h	1709;"	d
__zterm_impl	extras/sal.h	1831;"	d
_checkCudaErrors	ObsNvenc/src/nvEncodeAPI.cpp	/^bool _checkCudaErrors(CUresult err, const char *func)$/;"	f
_checkbw	librtmp/rtmp.c	/^SAVC(_checkbw);$/;"	v
_crctable	libfaac/bitstream.c	/^static const unsigned char _crctable[256] =$/;"	v	file:
_debug_Allocate	OBSApi/Utility/Alloc.h	/^    inline void* __restrict _debug_Allocate(size_t size, TCHAR *lpFile, unsigned int dwLine)                    {dwAllocCurLine = dwLine;lpAllocCurFile = lpFile;return MainAllocator->_Allocate(size);}$/;"	f
_debug_ReAllocate	OBSApi/Utility/Alloc.h	/^    inline void* _debug_ReAllocate(void* lpData, size_t size, TCHAR *lpFile, unsigned int dwLine)    {dwAllocCurLine = dwLine;lpAllocCurFile = lpFile;return MainAllocator->_ReAllocate(lpData, size);}$/;"	f
_error	librtmp/rtmp.c	/^SAVC(_error);$/;"	v
_float	lame/libmp3lame/vector/xmm_quantize_sub.c	/^    float   _float[4];$/;"	m	file:
_i_32	lame/libmp3lame/vector/xmm_quantize_sub.c	/^    int32_t _i_32[4]; \/* unions are initialized by its first member *\/$/;"	m	file:
_interlockedbittestandreset	libmfx/src/mfx_critical_section.cpp	39;"	d	file:
_interlockedbittestandreset64	libmfx/src/mfx_critical_section.cpp	41;"	d	file:
_interlockedbittestandset	libmfx/src/mfx_critical_section.cpp	38;"	d	file:
_interlockedbittestandset64	libmfx/src/mfx_critical_section.cpp	40;"	d	file:
_kiss_fft_guts.h	libfaac/kiss_fft/_kiss_fft_guts.h	1;"	F
_m128	lame/libmp3lame/vector/xmm_quantize_sub.c	/^    __m128  _m128;$/;"	m	file:
_name_from_line	libmfx/include/mfx_dispatcher_log.h	144;"	d
_onbwcheck	librtmp/rtmp.c	/^SAVC(_onbwcheck);$/;"	v
_onbwdone	librtmp/rtmp.c	/^SAVC(_onbwdone);$/;"	v
_result	Source/RTMPStuff.h	/^SAVC(_result);$/;"	v
_result	librtmp/rtmp.c	/^SAVC(_result);$/;"	v
_storage_type	libmfx/include/mfx_dispatcher_log.h	/^    typedef std::map<std::wstring, IMsgHandler*> _storage_type;$/;"	t	class:ETWHandlerFactory
_unused	lame/libmp3lame/util.h	/^            unsigned int _unused:28;$/;"	m	struct:lame_internal_flags::<anonymous>
_unused	lame/libmp3lame/util.h	/^        uint16_t _unused;$/;"	m	struct:lame_internal_flags
a	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    float a;$/;"	m	struct:_D3DCOLORVALUE
a	lame/doc/html/detailed.html	/^<a name="a"><span class="hilight">-a<\/span><\/a> Downmix$/;"	a
a	librtmp/md5.h	/^	MD5_u32plus a, b, c, d;$/;"	m
a1	lame/misc/scalartest.c	/^float a1 [256];$/;"	v
a2	lame/misc/scalartest.c	/^float a2 [256];$/;"	v
aCoeffs	libfaac/coder.h	/^    double aCoeffs[TNS_MAX_ORDER+1];     \/* AR Coefficients *\/$/;"	m
aa_ca	lame/mpglib/layer3.c	/^static real aa_ca[8], aa_cs[8];$/;"	v	file:
aa_cs	lame/mpglib/layer3.c	/^static real aa_ca[8], aa_cs[8];$/;"	v	file:
aa_sensitivity_p	lame/libmp3lame/util.h	/^        FLOAT   aa_sensitivity_p; \/* factor for tuning the (sample power)$/;"	m
aac	lame/Dll/BladeMP3EncDLL.h	/^		} aac;$/;"	m
aacBuffer	Source/Encoder_AAC.cpp	/^    List<BYTE>  aacBuffer;$/;"	m	class:AACEncoder	file:
aacObjectType	libfaac/include/faaccfg.h	/^    unsigned int aacObjectType;$/;"	m	struct:faacEncConfiguration
aacquant.c	libfaac/aacquant.c	1;"	F
aacquant.h	libfaac/aacquant.h	1;"	F
aacquantCfg	libfaac/frame.h	/^    AACQuantCfg aacquantCfg;$/;"	m
about.html	lame/doc/html/about.html	1;"	F
aboutprp.cpp	lame/dshow/aboutprp.cpp	1;"	F
aboutprp.h	lame/dshow/aboutprp.h	1;"	F
abr	lame/doc/html/detailed.html	/^<a name="abr"><span class="hilight">--abr n<\/span><\/a> Average bitrate encoding (aka Safe VBR)$/;"	a
abr.html	lame/doc/html/abr.html	1;"	F
abs_builddir	lame/ACM/ADbg/Makefile	/^abs_builddir = \/d\/projects\/opensplit\/lame\/ACM\/ADbg$/;"	m
abs_builddir	lame/ACM/Makefile	/^abs_builddir = \/d\/projects\/opensplit\/lame\/ACM$/;"	m
abs_builddir	lame/ACM/ddk/Makefile	/^abs_builddir = \/d\/projects\/opensplit\/lame\/ACM\/ddk$/;"	m
abs_builddir	lame/ACM/tinyxml/Makefile	/^abs_builddir = \/d\/projects\/opensplit\/lame\/ACM\/tinyxml$/;"	m
abs_builddir	lame/Dll/Makefile	/^abs_builddir = \/d\/projects\/opensplit\/lame\/Dll$/;"	m
abs_builddir	lame/Makefile	/^abs_builddir = \/d\/projects\/opensplit\/lame$/;"	m
abs_builddir	lame/debian/Makefile	/^abs_builddir = \/d\/projects\/opensplit\/lame\/debian$/;"	m
abs_builddir	lame/doc/Makefile	/^abs_builddir = \/d\/projects\/opensplit\/lame\/doc$/;"	m
abs_builddir	lame/doc/html/Makefile	/^abs_builddir = \/d\/projects\/opensplit\/lame\/doc\/html$/;"	m
abs_builddir	lame/doc/man/Makefile	/^abs_builddir = \/d\/projects\/opensplit\/lame\/doc\/man$/;"	m
abs_builddir	lame/dshow/Makefile	/^abs_builddir = \/d\/projects\/opensplit\/lame\/dshow$/;"	m
abs_builddir	lame/frontend/Makefile	/^abs_builddir = \/d\/projects\/opensplit\/lame\/frontend$/;"	m
abs_builddir	lame/include/Makefile	/^abs_builddir = \/d\/projects\/opensplit\/lame\/include$/;"	m
abs_builddir	lame/libmp3lame/Makefile	/^abs_builddir = \/d\/projects\/opensplit\/lame\/libmp3lame$/;"	m
abs_builddir	lame/libmp3lame/i386/Makefile	/^abs_builddir = \/d\/projects\/opensplit\/lame\/libmp3lame\/i386$/;"	m
abs_builddir	lame/libmp3lame/vector/Makefile	/^abs_builddir = \/d\/projects\/opensplit\/lame\/libmp3lame\/vector$/;"	m
abs_builddir	lame/mac/Makefile	/^abs_builddir = \/d\/projects\/opensplit\/lame\/mac$/;"	m
abs_builddir	lame/macosx/English.lproj/Makefile	/^abs_builddir = \/d\/projects\/opensplit\/lame\/macosx\/English.lproj$/;"	m
abs_builddir	lame/macosx/LAME.xcodeproj/Makefile	/^abs_builddir = \/d\/projects\/opensplit\/lame\/macosx\/LAME.xcodeproj$/;"	m
abs_builddir	lame/macosx/Makefile	/^abs_builddir = \/d\/projects\/opensplit\/lame\/macosx$/;"	m
abs_builddir	lame/misc/Makefile	/^abs_builddir = \/d\/projects\/opensplit\/lame\/misc$/;"	m
abs_builddir	lame/mpglib/Makefile	/^abs_builddir = \/d\/projects\/opensplit\/lame\/mpglib$/;"	m
abs_builddir	lame/vc_solution/Makefile	/^abs_builddir = \/d\/projects\/opensplit\/lame\/vc_solution$/;"	m
abs_path	Source/mongoose.c	/^static void abs_path(const char *utf8_path, char *abs_path, size_t len) {$/;"	f	file:
abs_srcdir	lame/ACM/ADbg/Makefile	/^abs_srcdir = \/d\/projects\/opensplit\/lame\/ACM\/ADbg$/;"	m
abs_srcdir	lame/ACM/Makefile	/^abs_srcdir = \/d\/projects\/opensplit\/lame\/ACM$/;"	m
abs_srcdir	lame/ACM/ddk/Makefile	/^abs_srcdir = \/d\/projects\/opensplit\/lame\/ACM\/ddk$/;"	m
abs_srcdir	lame/ACM/tinyxml/Makefile	/^abs_srcdir = \/d\/projects\/opensplit\/lame\/ACM\/tinyxml$/;"	m
abs_srcdir	lame/Dll/Makefile	/^abs_srcdir = \/d\/projects\/opensplit\/lame\/Dll$/;"	m
abs_srcdir	lame/Makefile	/^abs_srcdir = \/d\/projects\/opensplit\/lame$/;"	m
abs_srcdir	lame/debian/Makefile	/^abs_srcdir = \/d\/projects\/opensplit\/lame\/debian$/;"	m
abs_srcdir	lame/doc/Makefile	/^abs_srcdir = \/d\/projects\/opensplit\/lame\/doc$/;"	m
abs_srcdir	lame/doc/html/Makefile	/^abs_srcdir = \/d\/projects\/opensplit\/lame\/doc\/html$/;"	m
abs_srcdir	lame/doc/man/Makefile	/^abs_srcdir = \/d\/projects\/opensplit\/lame\/doc\/man$/;"	m
abs_srcdir	lame/dshow/Makefile	/^abs_srcdir = \/d\/projects\/opensplit\/lame\/dshow$/;"	m
abs_srcdir	lame/frontend/Makefile	/^abs_srcdir = \/d\/projects\/opensplit\/lame\/frontend$/;"	m
abs_srcdir	lame/include/Makefile	/^abs_srcdir = \/d\/projects\/opensplit\/lame\/include$/;"	m
abs_srcdir	lame/libmp3lame/Makefile	/^abs_srcdir = \/d\/projects\/opensplit\/lame\/libmp3lame$/;"	m
abs_srcdir	lame/libmp3lame/i386/Makefile	/^abs_srcdir = \/d\/projects\/opensplit\/lame\/libmp3lame\/i386$/;"	m
abs_srcdir	lame/libmp3lame/vector/Makefile	/^abs_srcdir = \/d\/projects\/opensplit\/lame\/libmp3lame\/vector$/;"	m
abs_srcdir	lame/mac/Makefile	/^abs_srcdir = \/d\/projects\/opensplit\/lame\/mac$/;"	m
abs_srcdir	lame/macosx/English.lproj/Makefile	/^abs_srcdir = \/d\/projects\/opensplit\/lame\/macosx\/English.lproj$/;"	m
abs_srcdir	lame/macosx/LAME.xcodeproj/Makefile	/^abs_srcdir = \/d\/projects\/opensplit\/lame\/macosx\/LAME.xcodeproj$/;"	m
abs_srcdir	lame/macosx/Makefile	/^abs_srcdir = \/d\/projects\/opensplit\/lame\/macosx$/;"	m
abs_srcdir	lame/misc/Makefile	/^abs_srcdir = \/d\/projects\/opensplit\/lame\/misc$/;"	m
abs_srcdir	lame/mpglib/Makefile	/^abs_srcdir = \/d\/projects\/opensplit\/lame\/mpglib$/;"	m
abs_srcdir	lame/vc_solution/Makefile	/^abs_srcdir = \/d\/projects\/opensplit\/lame\/vc_solution$/;"	m
abs_top_builddir	lame/ACM/ADbg/Makefile	/^abs_top_builddir = \/d\/projects\/opensplit\/lame$/;"	m
abs_top_builddir	lame/ACM/Makefile	/^abs_top_builddir = \/d\/projects\/opensplit\/lame$/;"	m
abs_top_builddir	lame/ACM/ddk/Makefile	/^abs_top_builddir = \/d\/projects\/opensplit\/lame$/;"	m
abs_top_builddir	lame/ACM/tinyxml/Makefile	/^abs_top_builddir = \/d\/projects\/opensplit\/lame$/;"	m
abs_top_builddir	lame/Dll/Makefile	/^abs_top_builddir = \/d\/projects\/opensplit\/lame$/;"	m
abs_top_builddir	lame/Makefile	/^abs_top_builddir = \/d\/projects\/opensplit\/lame$/;"	m
abs_top_builddir	lame/debian/Makefile	/^abs_top_builddir = \/d\/projects\/opensplit\/lame$/;"	m
abs_top_builddir	lame/doc/Makefile	/^abs_top_builddir = \/d\/projects\/opensplit\/lame$/;"	m
abs_top_builddir	lame/doc/html/Makefile	/^abs_top_builddir = \/d\/projects\/opensplit\/lame$/;"	m
abs_top_builddir	lame/doc/man/Makefile	/^abs_top_builddir = \/d\/projects\/opensplit\/lame$/;"	m
abs_top_builddir	lame/dshow/Makefile	/^abs_top_builddir = \/d\/projects\/opensplit\/lame$/;"	m
abs_top_builddir	lame/frontend/Makefile	/^abs_top_builddir = \/d\/projects\/opensplit\/lame$/;"	m
abs_top_builddir	lame/include/Makefile	/^abs_top_builddir = \/d\/projects\/opensplit\/lame$/;"	m
abs_top_builddir	lame/libmp3lame/Makefile	/^abs_top_builddir = \/d\/projects\/opensplit\/lame$/;"	m
abs_top_builddir	lame/libmp3lame/i386/Makefile	/^abs_top_builddir = \/d\/projects\/opensplit\/lame$/;"	m
abs_top_builddir	lame/libmp3lame/vector/Makefile	/^abs_top_builddir = \/d\/projects\/opensplit\/lame$/;"	m
abs_top_builddir	lame/mac/Makefile	/^abs_top_builddir = \/d\/projects\/opensplit\/lame$/;"	m
abs_top_builddir	lame/macosx/English.lproj/Makefile	/^abs_top_builddir = \/d\/projects\/opensplit\/lame$/;"	m
abs_top_builddir	lame/macosx/LAME.xcodeproj/Makefile	/^abs_top_builddir = \/d\/projects\/opensplit\/lame$/;"	m
abs_top_builddir	lame/macosx/Makefile	/^abs_top_builddir = \/d\/projects\/opensplit\/lame$/;"	m
abs_top_builddir	lame/misc/Makefile	/^abs_top_builddir = \/d\/projects\/opensplit\/lame$/;"	m
abs_top_builddir	lame/mpglib/Makefile	/^abs_top_builddir = \/d\/projects\/opensplit\/lame$/;"	m
abs_top_builddir	lame/vc_solution/Makefile	/^abs_top_builddir = \/d\/projects\/opensplit\/lame$/;"	m
abs_top_srcdir	lame/ACM/ADbg/Makefile	/^abs_top_srcdir = \/d\/projects\/opensplit\/lame$/;"	m
abs_top_srcdir	lame/ACM/Makefile	/^abs_top_srcdir = \/d\/projects\/opensplit\/lame$/;"	m
abs_top_srcdir	lame/ACM/ddk/Makefile	/^abs_top_srcdir = \/d\/projects\/opensplit\/lame$/;"	m
abs_top_srcdir	lame/ACM/tinyxml/Makefile	/^abs_top_srcdir = \/d\/projects\/opensplit\/lame$/;"	m
abs_top_srcdir	lame/Dll/Makefile	/^abs_top_srcdir = \/d\/projects\/opensplit\/lame$/;"	m
abs_top_srcdir	lame/Makefile	/^abs_top_srcdir = \/d\/projects\/opensplit\/lame$/;"	m
abs_top_srcdir	lame/debian/Makefile	/^abs_top_srcdir = \/d\/projects\/opensplit\/lame$/;"	m
abs_top_srcdir	lame/doc/Makefile	/^abs_top_srcdir = \/d\/projects\/opensplit\/lame$/;"	m
abs_top_srcdir	lame/doc/html/Makefile	/^abs_top_srcdir = \/d\/projects\/opensplit\/lame$/;"	m
abs_top_srcdir	lame/doc/man/Makefile	/^abs_top_srcdir = \/d\/projects\/opensplit\/lame$/;"	m
abs_top_srcdir	lame/dshow/Makefile	/^abs_top_srcdir = \/d\/projects\/opensplit\/lame$/;"	m
abs_top_srcdir	lame/frontend/Makefile	/^abs_top_srcdir = \/d\/projects\/opensplit\/lame$/;"	m
abs_top_srcdir	lame/include/Makefile	/^abs_top_srcdir = \/d\/projects\/opensplit\/lame$/;"	m
abs_top_srcdir	lame/libmp3lame/Makefile	/^abs_top_srcdir = \/d\/projects\/opensplit\/lame$/;"	m
abs_top_srcdir	lame/libmp3lame/i386/Makefile	/^abs_top_srcdir = \/d\/projects\/opensplit\/lame$/;"	m
abs_top_srcdir	lame/libmp3lame/vector/Makefile	/^abs_top_srcdir = \/d\/projects\/opensplit\/lame$/;"	m
abs_top_srcdir	lame/mac/Makefile	/^abs_top_srcdir = \/d\/projects\/opensplit\/lame$/;"	m
abs_top_srcdir	lame/macosx/English.lproj/Makefile	/^abs_top_srcdir = \/d\/projects\/opensplit\/lame$/;"	m
abs_top_srcdir	lame/macosx/LAME.xcodeproj/Makefile	/^abs_top_srcdir = \/d\/projects\/opensplit\/lame$/;"	m
abs_top_srcdir	lame/macosx/Makefile	/^abs_top_srcdir = \/d\/projects\/opensplit\/lame$/;"	m
abs_top_srcdir	lame/misc/Makefile	/^abs_top_srcdir = \/d\/projects\/opensplit\/lame$/;"	m
abs_top_srcdir	lame/mpglib/Makefile	/^abs_top_srcdir = \/d\/projects\/opensplit\/lame$/;"	m
abs_top_srcdir	lame/vc_solution/Makefile	/^abs_top_srcdir = \/d\/projects\/opensplit\/lame$/;"	m
abstract	CLRHostPlugin/CLRHostInterop/AbstractImageSource.h	/^        virtual void Render(float x, float y, float width, float height) abstract;$/;"	m	class:CLROBS::abstract
abstract	CLRHostPlugin/CLRHostInterop/AbstractImageSource.h	/^    public ref class AbstractImageSource abstract : public ImageSource$/;"	c	namespace:CLROBS
abstract	CLRHostPlugin/CLRHostInterop/AbstractImageSourceFactory.h	/^        virtual ImageSource^ Create(XElement^ data) abstract;$/;"	m	class:CLROBS::abstract
abstract	CLRHostPlugin/CLRHostInterop/AbstractImageSourceFactory.h	/^        virtual bool ShowConfiguration(XElement^ data) abstract;$/;"	m	class:CLROBS::abstract
abstract	CLRHostPlugin/CLRHostInterop/AbstractImageSourceFactory.h	/^    public ref class AbstractImageSourceFactory abstract : public ImageSourceFactory$/;"	c	namespace:CLROBS
abstract	CLRHostPlugin/CLRHostInterop/AbstractPlugin.h	/^    public ref class AbstractPlugin abstract : public Plugin$/;"	c	namespace:CLROBS
abstract	CLRHostPlugin/CLRHostInterop/AbstractWPFSettingsPane.h	/^        virtual UIElement^ CreateUIElement() abstract;$/;"	m	class:CLROBS::abstract
abstract	CLRHostPlugin/CLRHostInterop/AbstractWPFSettingsPane.h	/^    public ref class AbstractWPFSettingsPane abstract: public SettingsPane {$/;"	c	namespace:CLROBS
abx.c	lame/misc/abx.c	1;"	F
abx_DEPENDENCIES	lame/misc/Makefile	/^abx_DEPENDENCIES =$/;"	m
abx_LDADD	lame/misc/Makefile	/^abx_LDADD = $(LDADD)$/;"	m
abx_OBJECTS	lame/misc/Makefile	/^abx_OBJECTS = $(am_abx_OBJECTS)$/;"	m
abx_SOURCES	lame/misc/Makefile	/^abx_SOURCES = abx.c$/;"	m
ac_ct_CC	lame/ACM/ADbg/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	lame/ACM/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	lame/ACM/ddk/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	lame/ACM/tinyxml/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	lame/Dll/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	lame/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	lame/debian/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	lame/doc/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	lame/doc/html/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	lame/doc/man/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	lame/dshow/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	lame/frontend/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	lame/include/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	lame/libmp3lame/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	lame/libmp3lame/i386/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	lame/libmp3lame/vector/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	lame/mac/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	lame/macosx/English.lproj/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	lame/macosx/LAME.xcodeproj/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	lame/macosx/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	lame/misc/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	lame/mpglib/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	lame/vc_solution/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_DUMPBIN	lame/ACM/ADbg/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	lame/ACM/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	lame/ACM/ddk/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	lame/ACM/tinyxml/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	lame/Dll/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	lame/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	lame/debian/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	lame/doc/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	lame/doc/html/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	lame/doc/man/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	lame/dshow/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	lame/frontend/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	lame/include/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	lame/libmp3lame/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	lame/libmp3lame/i386/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	lame/libmp3lame/vector/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	lame/mac/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	lame/macosx/English.lproj/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	lame/macosx/LAME.xcodeproj/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	lame/macosx/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	lame/misc/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	lame/mpglib/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	lame/vc_solution/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_fn_c_check_func	lame/configure	/^ac_fn_c_check_func ()$/;"	f
ac_fn_c_check_header_compile	lame/configure	/^ac_fn_c_check_header_compile ()$/;"	f
ac_fn_c_check_header_mongrel	lame/configure	/^ac_fn_c_check_header_mongrel ()$/;"	f
ac_fn_c_check_type	lame/configure	/^ac_fn_c_check_type ()$/;"	f
ac_fn_c_compute_int	lame/configure	/^ac_fn_c_compute_int ()$/;"	f
ac_fn_c_try_compile	lame/configure	/^ac_fn_c_try_compile ()$/;"	f
ac_fn_c_try_cpp	lame/configure	/^ac_fn_c_try_cpp ()$/;"	f
ac_fn_c_try_link	lame/configure	/^ac_fn_c_try_link ()$/;"	f
ac_fn_c_try_run	lame/configure	/^ac_fn_c_try_run ()$/;"	f
accept_conn	Source/mongoose.c	/^static struct ns_connection *accept_conn(struct ns_connection *ls) {$/;"	f	file:
acm_Calloc	lame/ACM/main.cpp	/^	void *acm_Calloc( size_t num, size_t size )$/;"	f
acm_Free	lame/ACM/main.cpp	/^	void acm_Free( void * mem)$/;"	f
acm_Malloc	lame/ACM/main.cpp	/^	void *acm_Malloc( size_t size )$/;"	f
action	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserPluginVisitor.cs	/^        private Action<CefWebPluginInfo> action;$/;"	f	class:RemoteBrowser.BrowserPluginVisitor	file:
active	OBSApi/Utility/RAIIHelpers.h	/^    bool active;$/;"	m	struct:ScopeGuard
active_connections	Source/mongoose.c	/^  struct ns_connection *active_connections;$/;"	m	struct:ns_mgr	file:
actual	QSVHelper/Encoder.h	/^    mfxIMPL requested, actual;$/;"	m	struct:Encoder
actualApiVersion	libmfx/include/mfx_dispatcher.h	/^    mfxVersion actualApiVersion;$/;"	m	struct:MFX_DISP_HANDLE
actual_impl	QSVHelper/IPCStructs.h	/^            actual_impl;$/;"	m	struct:init_response
adapterID	libmfx/src/main.cpp	/^        mfxU32 adapterID;$/;"	m	file:
adaptiveTransformMode	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_H264_ADAPTIVE_TRANSFORM_MODE adaptiveTransformMode;      \/**< [in]: Specifies the AdaptiveTransform Mode. Check support for AdaptiveTransform mode using ::NV_ENC_CAPS_SUPPORT_ADAPTIVE_TRANSFORM caps. *\/$/;"	m	struct:_NV_ENC_CONFIG_H264
add	Source/Encoder_QSV.cpp	/^        void add(uint64_t ts)$/;"	f	struct:<anonymous>::DTSGenerator
add-id3v2	lame/doc/html/detailed.html	/^<a name="add-id3v2"><span class="hilight">--add-id3v2<\/span><\/a> Force addition of version 2 tag$/;"	a
addPcmBuffer	lame/frontend/get_audio.c	/^addPcmBuffer(PcmBuffer * b, void *a0, void *a1, int read)$/;"	f	file:
addSamples	lame/frontend/timestatus.c	/^addSamples(DecoderProgress dp, int iread)$/;"	f	file:
addVbr	lame/libmp3lame/VbrTag.c	/^addVbr(VBR_seek_info_t * v, int bitrate)$/;"	f	file:
add_addr_info	librtmp/rtmp.c	/^add_addr_info(struct sockaddr_storage *service, AVal *host, int port)$/;"	f	file:
add_dummy_byte	lame/libmp3lame/bitstream.c	/^add_dummy_byte(lame_internal_flags * gfc, unsigned char val, unsigned int n)$/;"	f
addbuf	lame/mpglib/interface.c	/^addbuf(PMPSTR mp, unsigned char *buf, int size)$/;"	f	file:
addenv	Source/mongoose.c	/^static char *addenv(struct cgi_env_block *block, const char *fmt, ...) {$/;"	f	file:
addenv2	Source/mongoose.c	/^static void addenv2(struct cgi_env_block *blk, const char *name) {$/;"	f	file:
addr	librtmp/rtmp.h	/^        struct sockaddr_storage addr;$/;"	m	struct:RTMP_BINDINFO
addrLen	librtmp/rtmp.h	/^        int addrLen;$/;"	m	struct:RTMP_BINDINFO
address	minhook/src/trampoline.h	/^		uintptr_t	address;$/;"	m	struct:MinHook::TEMP_ADDR
addressU	OBSApi/GraphicsSystem.h	/^    GSAddressMode addressU;$/;"	m	struct:SamplerInfo
addressV	OBSApi/GraphicsSystem.h	/^    GSAddressMode addressV;$/;"	m	struct:SamplerInfo
addressW	OBSApi/GraphicsSystem.h	/^    GSAddressMode addressW;$/;"	m	struct:SamplerInfo
adebug.h	lame/ACM/adebug.h	1;"	F
adj43	lame/libmp3lame/quantize_pvt.c	/^FLOAT   adj43[PRECALC_SIZE];$/;"	v
adj43	libfaac/aacquant.h	/^    double *adj43;$/;"	m
adj43asm	lame/libmp3lame/quantize_pvt.c	/^FLOAT   adj43asm[PRECALC_SIZE];$/;"	v
adjust_ATH	lame/libmp3lame/encoder.c	/^adjust_ATH(lame_internal_flags const *const gfc)$/;"	f	file:
adjust_alto_db	lame/libmp3lame/util.h	/^        float   adjust_alto_db;$/;"	m
adjust_bass_db	lame/libmp3lame/util.h	/^        float   adjust_bass_db;$/;"	m
adjust_factor	lame/libmp3lame/util.h	/^        FLOAT   adjust_factor; \/* lowering based on peak volume, 1 = no lowering *\/$/;"	m
adjust_limit	lame/libmp3lame/util.h	/^        FLOAT   adjust_limit; \/* limit for dynamic ATH adjust *\/$/;"	m
adjust_sfb21_db	lame/libmp3lame/util.h	/^        float   adjust_sfb21_db;$/;"	m
adjust_treble_db	lame/libmp3lame/util.h	/^        float   adjust_treble_db;$/;"	m
adminWindows	GraphicsCapture/GraphicsCapture.cpp	/^    StringList adminWindows;$/;"	m	struct:ConfigDialogData	file:
advancedPropertiesCheckBox_Checked	CLRBrowserSourcePlugin/Plugin/ConfigDialog.xaml.cs	/^        private void advancedPropertiesCheckBox_Checked(object sender, RoutedEventArgs e)$/;"	m	class:CLRBrowserSourcePlugin.ConfigDialog	file:
aiff_check2	lame/frontend/get_audio.c	/^aiff_check2(IFF_AIFF * const pcm_aiff_data)$/;"	f	file:
al_table2	lame/mpglib/layer2.h	/^struct al_table2 {$/;"	s
album	lame/libmp3lame/id3tag.h	/^    char   *album;$/;"	m	struct:id3tag_spec
albumart	lame/libmp3lame/id3tag.h	/^    unsigned char *albumart;$/;"	m	struct:id3tag_spec
albumart_mimetype	lame/libmp3lame/id3tag.h	/^    int     albumart_mimetype;$/;"	m	struct:id3tag_spec
albumart_size	lame/libmp3lame/id3tag.h	/^    unsigned int albumart_size;$/;"	m	struct:id3tag_spec
algo_s	lame/libmp3lame/vbrquantize.c	/^struct algo_s {$/;"	s	file:
algo_t	lame/libmp3lame/vbrquantize.c	/^typedef struct algo_s algo_t;$/;"	t	file:
align	OBSApi/Utility/FastAlloc.cpp	61;"	d	file:
align	Source/TextOutputSource.cpp	/^    int         align;$/;"	m	class:TextOutputSource	file:
align	lame/libmp3lame/i386/nasm.h	/^	%define segment_code segment .text align=16 use32$/;"	v
align	lame/libmp3lame/i386/nasm.h	/^	section .note.GNU-stack progbits noalloc noexec nowrite align=1$/;"	v
align16	QSVHelper/QSVStuff.h	/^inline T align16(T t)$/;"	f
alignStr	libmfx/src/mfx_plugin_hive.cpp	79;"	d	file:
aligned	lame/libmp3lame/util.h	/^        void   *aligned;     \/* pointer to ie. 128 bit aligned memory *\/$/;"	m
aligned_pointer_t	lame/libmp3lame/util.h	/^    } aligned_pointer_t;$/;"	t
alignment	lame/libmp3lame/i386/nasm.h	/^; %1   does not align if it LE bytes to next alignment $/;"	v
alive	ObsNvenc/inc/NVENCEncoder.h	/^    bool alive;$/;"	m	class:NVENCEncoder
all_scalefactors_not_negative	lame/libmp3lame/takehiro.c	/^all_scalefactors_not_negative(int const *scalefac, int n)$/;"	f	file:
all_sfb	libfaac/coder.h	/^    int all_sfb;$/;"	m
alloc	lame/libmp3lame/vbrquantize.c	/^    alloc_sf_f alloc;$/;"	m	struct:algo_s	file:
alloc	lame/mpglib/mpg123.h	/^    struct al_table2 const *alloc;$/;"	m	struct:frame
alloc_0	lame/mpglib/l2tables.h	/^const struct al_table2 alloc_0[] = {$/;"	v
alloc_1	lame/mpglib/l2tables.h	/^const struct al_table2 alloc_1[] = {$/;"	v
alloc_2	lame/mpglib/l2tables.h	/^const struct al_table2 alloc_2[] = {$/;"	v
alloc_3	lame/mpglib/l2tables.h	/^const struct al_table2 alloc_3[] = {$/;"	v
alloc_4	lame/mpglib/l2tables.h	/^const struct al_table2 alloc_4[] = {$/;"	v
alloc_res	QSVHelper/Encoder.h	/^    mfxFrameAllocResponse alloc_res;$/;"	m	struct:Encoder
alloc_sf_f	lame/libmp3lame/vbrquantize.c	/^typedef void (*alloc_sf_f) (const algo_t *, const int *, const int *, int);$/;"	t	file:
allocation	lame/mpglib/layer1.c	/^    unsigned char allocation[SBLIMIT][2]; $/;"	m	struct:sideinfo_layer_I_struct	file:
allocation	lame/mpglib/layer2.c	/^    unsigned char allocation[SBLIMIT][2]; $/;"	m	struct:sideinfo_layer_II_struct	file:
allocationCounter	OBSApi/Utility/DebugAlloc.cpp	/^DWORD allocationCounter = 0;$/;"	v
allocationID	OBSApi/Utility/DebugAlloc.cpp	/^    DWORD allocationID;$/;"	m	struct:Allocation	file:
allowMidside	libfaac/include/faaccfg.h	/^    unsigned int allowMidside;$/;"	m	struct:faacEncConfiguration
alpha	lame/include/lame.h	/^    int alpha;               \/* 0 if not an alpha version                  *\/$/;"	m
alphaIgnoreShader	Source/BitmapImageSource.cpp	/^    Shader   *colorKeyShader, *alphaIgnoreShader;$/;"	m	class:BitmapImageSource	file:
alphaIgnoreShader	Source/DesktopImageSource.cpp	/^    Shader   *colorKeyShader, *alphaIgnoreShader;$/;"	m	class:DesktopImageSource	file:
altDoSwitch	scenesw/SceneSwitcher.h	/^	int altDoSwitch;$/;"	m	class:SceneSwitcher
altSceneName	scenesw/SceneSwitcher.h	/^	String altSceneName;$/;"	m	class:SceneSwitcher
am__CONFIG_DISTCLEAN_FILES	lame/Makefile	/^am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \\$/;"	m
am__DEPENDENCIES_1	lame/frontend/Makefile	/^am__DEPENDENCIES_1 = $(top_builddir)\/libmp3lame\/libmp3lame.la$/;"	m
am__DEPENDENCIES_1	lame/libmp3lame/Makefile	/^am__DEPENDENCIES_1 = $(top_builddir)\/mpglib\/libmpgdecoder.la$/;"	m
am__DEPENDENCIES_2	lame/libmp3lame/Makefile	/^am__DEPENDENCIES_2 =$/;"	m
am__aclocal_m4_deps	lame/ACM/ADbg/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/acinclude.m4 \\$/;"	m
am__aclocal_m4_deps	lame/ACM/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/acinclude.m4 \\$/;"	m
am__aclocal_m4_deps	lame/ACM/ddk/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/acinclude.m4 \\$/;"	m
am__aclocal_m4_deps	lame/ACM/tinyxml/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/acinclude.m4 \\$/;"	m
am__aclocal_m4_deps	lame/Dll/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/acinclude.m4 \\$/;"	m
am__aclocal_m4_deps	lame/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/acinclude.m4 \\$/;"	m
am__aclocal_m4_deps	lame/debian/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/acinclude.m4 \\$/;"	m
am__aclocal_m4_deps	lame/doc/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/acinclude.m4 \\$/;"	m
am__aclocal_m4_deps	lame/doc/html/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/acinclude.m4 \\$/;"	m
am__aclocal_m4_deps	lame/doc/man/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/acinclude.m4 \\$/;"	m
am__aclocal_m4_deps	lame/dshow/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/acinclude.m4 \\$/;"	m
am__aclocal_m4_deps	lame/frontend/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/acinclude.m4 \\$/;"	m
am__aclocal_m4_deps	lame/include/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/acinclude.m4 \\$/;"	m
am__aclocal_m4_deps	lame/libmp3lame/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/acinclude.m4 \\$/;"	m
am__aclocal_m4_deps	lame/libmp3lame/i386/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/acinclude.m4 \\$/;"	m
am__aclocal_m4_deps	lame/libmp3lame/vector/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/acinclude.m4 \\$/;"	m
am__aclocal_m4_deps	lame/mac/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/acinclude.m4 \\$/;"	m
am__aclocal_m4_deps	lame/macosx/English.lproj/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/acinclude.m4 \\$/;"	m
am__aclocal_m4_deps	lame/macosx/LAME.xcodeproj/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/acinclude.m4 \\$/;"	m
am__aclocal_m4_deps	lame/macosx/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/acinclude.m4 \\$/;"	m
am__aclocal_m4_deps	lame/misc/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/acinclude.m4 \\$/;"	m
am__aclocal_m4_deps	lame/mpglib/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/acinclude.m4 \\$/;"	m
am__aclocal_m4_deps	lame/vc_solution/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/acinclude.m4 \\$/;"	m
am__base_list	lame/doc/html/Makefile	/^am__base_list = \\$/;"	m
am__base_list	lame/doc/man/Makefile	/^am__base_list = \\$/;"	m
am__base_list	lame/include/Makefile	/^am__base_list = \\$/;"	m
am__base_list	lame/libmp3lame/Makefile	/^am__base_list = \\$/;"	m
am__cd	lame/ACM/ADbg/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	lame/ACM/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	lame/ACM/ddk/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	lame/ACM/tinyxml/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	lame/Dll/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	lame/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	lame/debian/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	lame/doc/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	lame/doc/html/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	lame/doc/man/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	lame/dshow/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	lame/frontend/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	lame/include/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	lame/libmp3lame/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	lame/libmp3lame/i386/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	lame/libmp3lame/vector/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	lame/mac/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	lame/macosx/English.lproj/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	lame/macosx/LAME.xcodeproj/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	lame/macosx/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	lame/misc/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	lame/mpglib/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	lame/vc_solution/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__configure_deps	lame/ACM/ADbg/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	lame/ACM/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	lame/ACM/ddk/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	lame/ACM/tinyxml/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	lame/Dll/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	lame/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	lame/debian/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	lame/doc/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	lame/doc/html/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	lame/doc/man/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	lame/dshow/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	lame/frontend/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	lame/include/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	lame/libmp3lame/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	lame/libmp3lame/i386/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	lame/libmp3lame/vector/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	lame/mac/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	lame/macosx/English.lproj/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	lame/macosx/LAME.xcodeproj/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	lame/macosx/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	lame/misc/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	lame/mpglib/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	lame/vc_solution/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__cwd	lame/Makefile	/^	  && am__cwd=`pwd` \\$/;"	m
am__depfiles_maybe	lame/frontend/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__depfiles_maybe	lame/libmp3lame/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__depfiles_maybe	lame/libmp3lame/vector/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__depfiles_maybe	lame/misc/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__depfiles_maybe	lame/mpglib/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__include	lame/ACM/ADbg/Makefile	/^am__include = include$/;"	m
am__include	lame/ACM/Makefile	/^am__include = include$/;"	m
am__include	lame/ACM/ddk/Makefile	/^am__include = include$/;"	m
am__include	lame/ACM/tinyxml/Makefile	/^am__include = include$/;"	m
am__include	lame/Dll/Makefile	/^am__include = include$/;"	m
am__include	lame/Makefile	/^am__include = include$/;"	m
am__include	lame/debian/Makefile	/^am__include = include$/;"	m
am__include	lame/doc/Makefile	/^am__include = include$/;"	m
am__include	lame/doc/html/Makefile	/^am__include = include$/;"	m
am__include	lame/doc/man/Makefile	/^am__include = include$/;"	m
am__include	lame/dshow/Makefile	/^am__include = include$/;"	m
am__include	lame/frontend/Makefile	/^am__include = include$/;"	m
am__include	lame/include/Makefile	/^am__include = include$/;"	m
am__include	lame/libmp3lame/Makefile	/^am__include = include$/;"	m
am__include	lame/libmp3lame/i386/Makefile	/^am__include = include$/;"	m
am__include	lame/libmp3lame/vector/Makefile	/^am__include = include$/;"	m
am__include	lame/mac/Makefile	/^am__include = include$/;"	m
am__include	lame/macosx/English.lproj/Makefile	/^am__include = include$/;"	m
am__include	lame/macosx/LAME.xcodeproj/Makefile	/^am__include = include$/;"	m
am__include	lame/macosx/Makefile	/^am__include = include$/;"	m
am__include	lame/misc/Makefile	/^am__include = include$/;"	m
am__include	lame/mpglib/Makefile	/^am__include = include$/;"	m
am__include	lame/vc_solution/Makefile	/^am__include = include$/;"	m
am__install_max	lame/doc/html/Makefile	/^am__install_max = 40$/;"	m
am__install_max	lame/doc/man/Makefile	/^am__install_max = 40$/;"	m
am__install_max	lame/include/Makefile	/^am__install_max = 40$/;"	m
am__install_max	lame/libmp3lame/Makefile	/^am__install_max = 40$/;"	m
am__installdirs	lame/doc/html/Makefile	/^am__installdirs = "$(DESTDIR)$(pkghtmldir)"$/;"	m
am__installdirs	lame/doc/man/Makefile	/^am__installdirs = "$(DESTDIR)$(man1dir)"$/;"	m
am__installdirs	lame/frontend/Makefile	/^am__installdirs = "$(DESTDIR)$(bindir)"$/;"	m
am__installdirs	lame/include/Makefile	/^am__installdirs = "$(DESTDIR)$(pkgincludedir)"$/;"	m
am__installdirs	lame/libmp3lame/Makefile	/^am__installdirs = "$(DESTDIR)$(libdir)"$/;"	m
am__leading_dot	lame/ACM/ADbg/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	lame/ACM/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	lame/ACM/ddk/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	lame/ACM/tinyxml/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	lame/Dll/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	lame/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	lame/debian/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	lame/doc/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	lame/doc/html/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	lame/doc/man/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	lame/dshow/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	lame/frontend/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	lame/include/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	lame/libmp3lame/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	lame/libmp3lame/i386/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	lame/libmp3lame/vector/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	lame/mac/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	lame/macosx/English.lproj/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	lame/macosx/LAME.xcodeproj/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	lame/macosx/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	lame/misc/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	lame/mpglib/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	lame/vc_solution/Makefile	/^am__leading_dot = .$/;"	m
am__liblameasmroutines_la_SOURCES_DIST	lame/libmp3lame/i386/Makefile	/^am__liblameasmroutines_la_SOURCES_DIST = choose_table.nas cpu_feat.nas \\$/;"	m
am__liblamevectorroutines_la_SOURCES_DIST	lame/libmp3lame/vector/Makefile	/^am__liblamevectorroutines_la_SOURCES_DIST = xmm_quantize_sub.c$/;"	m
am__mv	lame/frontend/Makefile	/^am__mv = mv -f$/;"	m
am__mv	lame/libmp3lame/Makefile	/^am__mv = mv -f$/;"	m
am__mv	lame/libmp3lame/vector/Makefile	/^am__mv = mv -f$/;"	m
am__mv	lame/misc/Makefile	/^am__mv = mv -f$/;"	m
am__mv	lame/mpglib/Makefile	/^am__mv = mv -f$/;"	m
am__nobase_list	lame/doc/html/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_list	lame/doc/man/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_list	lame/include/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_list	lame/libmp3lame/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_strip	lame/doc/html/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip	lame/doc/man/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip	lame/include/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip	lame/libmp3lame/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip_setup	lame/doc/html/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__nobase_strip_setup	lame/doc/man/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__nobase_strip_setup	lame/include/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__nobase_strip_setup	lame/libmp3lame/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__objects_1	lame/frontend/Makefile	/^am__objects_1 = main$U.$(OBJEXT) brhist$U.$(OBJEXT) \\$/;"	m
am__objects_1	lame/libmp3lame/i386/Makefile	/^am__objects_1 = choose_table.lo cpu_feat.lo fft3dn.lo fftsse.lo$/;"	m
am__objects_1	lame/libmp3lame/vector/Makefile	/^am__objects_1 = xmm_quantize_sub$U.lo$/;"	m
am__quote	lame/ACM/ADbg/Makefile	/^am__quote = $/;"	m
am__quote	lame/ACM/Makefile	/^am__quote = $/;"	m
am__quote	lame/ACM/ddk/Makefile	/^am__quote = $/;"	m
am__quote	lame/ACM/tinyxml/Makefile	/^am__quote = $/;"	m
am__quote	lame/Dll/Makefile	/^am__quote = $/;"	m
am__quote	lame/Makefile	/^am__quote = $/;"	m
am__quote	lame/debian/Makefile	/^am__quote = $/;"	m
am__quote	lame/doc/Makefile	/^am__quote = $/;"	m
am__quote	lame/doc/html/Makefile	/^am__quote = $/;"	m
am__quote	lame/doc/man/Makefile	/^am__quote = $/;"	m
am__quote	lame/dshow/Makefile	/^am__quote = $/;"	m
am__quote	lame/frontend/Makefile	/^am__quote = $/;"	m
am__quote	lame/include/Makefile	/^am__quote = $/;"	m
am__quote	lame/libmp3lame/Makefile	/^am__quote = $/;"	m
am__quote	lame/libmp3lame/i386/Makefile	/^am__quote = $/;"	m
am__quote	lame/libmp3lame/vector/Makefile	/^am__quote = $/;"	m
am__quote	lame/mac/Makefile	/^am__quote = $/;"	m
am__quote	lame/macosx/English.lproj/Makefile	/^am__quote = $/;"	m
am__quote	lame/macosx/LAME.xcodeproj/Makefile	/^am__quote = $/;"	m
am__quote	lame/macosx/Makefile	/^am__quote = $/;"	m
am__quote	lame/misc/Makefile	/^am__quote = $/;"	m
am__quote	lame/mpglib/Makefile	/^am__quote = $/;"	m
am__quote	lame/vc_solution/Makefile	/^am__quote = $/;"	m
am__relativize	lame/ACM/Makefile	/^am__relativize = \\$/;"	m
am__relativize	lame/Makefile	/^am__relativize = \\$/;"	m
am__relativize	lame/doc/Makefile	/^am__relativize = \\$/;"	m
am__relativize	lame/libmp3lame/Makefile	/^am__relativize = \\$/;"	m
am__relativize	lame/macosx/Makefile	/^am__relativize = \\$/;"	m
am__remove_distdir	lame/ACM/Makefile	/^		am__remove_distdir=: \\$/;"	m
am__remove_distdir	lame/ACM/Makefile	/^	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \\$/;"	m
am__remove_distdir	lame/Makefile	/^		am__remove_distdir=: \\$/;"	m
am__remove_distdir	lame/Makefile	/^	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \\$/;"	m
am__remove_distdir	lame/Makefile	/^am__remove_distdir = \\$/;"	m
am__remove_distdir	lame/doc/Makefile	/^		am__remove_distdir=: \\$/;"	m
am__remove_distdir	lame/doc/Makefile	/^	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \\$/;"	m
am__remove_distdir	lame/libmp3lame/Makefile	/^		am__remove_distdir=: \\$/;"	m
am__remove_distdir	lame/libmp3lame/Makefile	/^	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \\$/;"	m
am__remove_distdir	lame/macosx/Makefile	/^		am__remove_distdir=: \\$/;"	m
am__remove_distdir	lame/macosx/Makefile	/^	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \\$/;"	m
am__skip_length_check	lame/ACM/Makefile	/^		am__skip_length_check=: \\$/;"	m
am__skip_length_check	lame/ACM/Makefile	/^	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \\$/;"	m
am__skip_length_check	lame/Makefile	/^		am__skip_length_check=: \\$/;"	m
am__skip_length_check	lame/Makefile	/^	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \\$/;"	m
am__skip_length_check	lame/doc/Makefile	/^		am__skip_length_check=: \\$/;"	m
am__skip_length_check	lame/doc/Makefile	/^	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \\$/;"	m
am__skip_length_check	lame/libmp3lame/Makefile	/^		am__skip_length_check=: \\$/;"	m
am__skip_length_check	lame/libmp3lame/Makefile	/^	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \\$/;"	m
am__skip_length_check	lame/macosx/Makefile	/^		am__skip_length_check=: \\$/;"	m
am__skip_length_check	lame/macosx/Makefile	/^	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \\$/;"	m
am__skip_mode_fix	lame/ACM/Makefile	/^		am__skip_mode_fix=: \\$/;"	m
am__skip_mode_fix	lame/ACM/Makefile	/^	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \\$/;"	m
am__skip_mode_fix	lame/Makefile	/^		am__skip_mode_fix=: \\$/;"	m
am__skip_mode_fix	lame/Makefile	/^	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \\$/;"	m
am__skip_mode_fix	lame/doc/Makefile	/^		am__skip_mode_fix=: \\$/;"	m
am__skip_mode_fix	lame/doc/Makefile	/^	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \\$/;"	m
am__skip_mode_fix	lame/libmp3lame/Makefile	/^		am__skip_mode_fix=: \\$/;"	m
am__skip_mode_fix	lame/libmp3lame/Makefile	/^	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \\$/;"	m
am__skip_mode_fix	lame/macosx/Makefile	/^		am__skip_mode_fix=: \\$/;"	m
am__skip_mode_fix	lame/macosx/Makefile	/^	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \\$/;"	m
am__strip_dir	lame/doc/html/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__strip_dir	lame/doc/man/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__strip_dir	lame/include/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__strip_dir	lame/libmp3lame/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__tar	lame/ACM/ADbg/Makefile	/^am__tar = ${AMTAR} chof - "$$tardir"$/;"	m
am__tar	lame/ACM/Makefile	/^am__tar = ${AMTAR} chof - "$$tardir"$/;"	m
am__tar	lame/ACM/ddk/Makefile	/^am__tar = ${AMTAR} chof - "$$tardir"$/;"	m
am__tar	lame/ACM/tinyxml/Makefile	/^am__tar = ${AMTAR} chof - "$$tardir"$/;"	m
am__tar	lame/Dll/Makefile	/^am__tar = ${AMTAR} chof - "$$tardir"$/;"	m
am__tar	lame/Makefile	/^am__tar = ${AMTAR} chof - "$$tardir"$/;"	m
am__tar	lame/debian/Makefile	/^am__tar = ${AMTAR} chof - "$$tardir"$/;"	m
am__tar	lame/doc/Makefile	/^am__tar = ${AMTAR} chof - "$$tardir"$/;"	m
am__tar	lame/doc/html/Makefile	/^am__tar = ${AMTAR} chof - "$$tardir"$/;"	m
am__tar	lame/doc/man/Makefile	/^am__tar = ${AMTAR} chof - "$$tardir"$/;"	m
am__tar	lame/dshow/Makefile	/^am__tar = ${AMTAR} chof - "$$tardir"$/;"	m
am__tar	lame/frontend/Makefile	/^am__tar = ${AMTAR} chof - "$$tardir"$/;"	m
am__tar	lame/include/Makefile	/^am__tar = ${AMTAR} chof - "$$tardir"$/;"	m
am__tar	lame/libmp3lame/Makefile	/^am__tar = ${AMTAR} chof - "$$tardir"$/;"	m
am__tar	lame/libmp3lame/i386/Makefile	/^am__tar = ${AMTAR} chof - "$$tardir"$/;"	m
am__tar	lame/libmp3lame/vector/Makefile	/^am__tar = ${AMTAR} chof - "$$tardir"$/;"	m
am__tar	lame/mac/Makefile	/^am__tar = ${AMTAR} chof - "$$tardir"$/;"	m
am__tar	lame/macosx/English.lproj/Makefile	/^am__tar = ${AMTAR} chof - "$$tardir"$/;"	m
am__tar	lame/macosx/LAME.xcodeproj/Makefile	/^am__tar = ${AMTAR} chof - "$$tardir"$/;"	m
am__tar	lame/macosx/Makefile	/^am__tar = ${AMTAR} chof - "$$tardir"$/;"	m
am__tar	lame/misc/Makefile	/^am__tar = ${AMTAR} chof - "$$tardir"$/;"	m
am__tar	lame/mpglib/Makefile	/^am__tar = ${AMTAR} chof - "$$tardir"$/;"	m
am__tar	lame/vc_solution/Makefile	/^am__tar = ${AMTAR} chof - "$$tardir"$/;"	m
am__untar	lame/ACM/ADbg/Makefile	/^am__untar = ${AMTAR} xf -$/;"	m
am__untar	lame/ACM/Makefile	/^am__untar = ${AMTAR} xf -$/;"	m
am__untar	lame/ACM/ddk/Makefile	/^am__untar = ${AMTAR} xf -$/;"	m
am__untar	lame/ACM/tinyxml/Makefile	/^am__untar = ${AMTAR} xf -$/;"	m
am__untar	lame/Dll/Makefile	/^am__untar = ${AMTAR} xf -$/;"	m
am__untar	lame/Makefile	/^am__untar = ${AMTAR} xf -$/;"	m
am__untar	lame/debian/Makefile	/^am__untar = ${AMTAR} xf -$/;"	m
am__untar	lame/doc/Makefile	/^am__untar = ${AMTAR} xf -$/;"	m
am__untar	lame/doc/html/Makefile	/^am__untar = ${AMTAR} xf -$/;"	m
am__untar	lame/doc/man/Makefile	/^am__untar = ${AMTAR} xf -$/;"	m
am__untar	lame/dshow/Makefile	/^am__untar = ${AMTAR} xf -$/;"	m
am__untar	lame/frontend/Makefile	/^am__untar = ${AMTAR} xf -$/;"	m
am__untar	lame/include/Makefile	/^am__untar = ${AMTAR} xf -$/;"	m
am__untar	lame/libmp3lame/Makefile	/^am__untar = ${AMTAR} xf -$/;"	m
am__untar	lame/libmp3lame/i386/Makefile	/^am__untar = ${AMTAR} xf -$/;"	m
am__untar	lame/libmp3lame/vector/Makefile	/^am__untar = ${AMTAR} xf -$/;"	m
am__untar	lame/mac/Makefile	/^am__untar = ${AMTAR} xf -$/;"	m
am__untar	lame/macosx/English.lproj/Makefile	/^am__untar = ${AMTAR} xf -$/;"	m
am__untar	lame/macosx/LAME.xcodeproj/Makefile	/^am__untar = ${AMTAR} xf -$/;"	m
am__untar	lame/macosx/Makefile	/^am__untar = ${AMTAR} xf -$/;"	m
am__untar	lame/misc/Makefile	/^am__untar = ${AMTAR} xf -$/;"	m
am__untar	lame/mpglib/Makefile	/^am__untar = ${AMTAR} xf -$/;"	m
am__untar	lame/vc_solution/Makefile	/^am__untar = ${AMTAR} xf -$/;"	m
am__vpath_adj	lame/doc/html/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj	lame/doc/man/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj	lame/include/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj	lame/libmp3lame/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj_setup	lame/doc/html/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__vpath_adj_setup	lame/doc/man/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__vpath_adj_setup	lame/include/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__vpath_adj_setup	lame/libmp3lame/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am_abx_OBJECTS	lame/misc/Makefile	/^am_abx_OBJECTS = abx$U.$(OBJEXT)$/;"	m
am_ath_OBJECTS	lame/misc/Makefile	/^am_ath_OBJECTS = ath$U.$(OBJEXT)$/;"	m
am_lame_OBJECTS	lame/frontend/Makefile	/^am_lame_OBJECTS = lame_main$U.$(OBJEXT) $(am__objects_1)$/;"	m
am_liblamevectorroutines_la_OBJECTS	lame/libmp3lame/vector/Makefile	/^am_liblamevectorroutines_la_OBJECTS = $(am__objects_1)$/;"	m
am_liblamevectorroutines_la_rpath	lame/libmp3lame/vector/Makefile	/^am_liblamevectorroutines_la_rpath =$/;"	m
am_libmp3lame_la_OBJECTS	lame/libmp3lame/Makefile	/^am_libmp3lame_la_OBJECTS = VbrTag$U.lo bitstream$U.lo encoder$U.lo \\$/;"	m
am_libmpgdecoder_la_OBJECTS	lame/mpglib/Makefile	/^am_libmpgdecoder_la_OBJECTS = common$U.lo dct64_i386$U.lo \\$/;"	m
am_mp3rtp_OBJECTS	lame/frontend/Makefile	/^am_mp3rtp_OBJECTS = mp3rtp$U.$(OBJEXT) rtp$U.$(OBJEXT) \\$/;"	m
am_mp3x_OBJECTS	lame/frontend/Makefile	/^am_mp3x_OBJECTS = mp3x$U.$(OBJEXT) gtkanal$U.$(OBJEXT) \\$/;"	m
am_scalartest_OBJECTS	lame/misc/Makefile	/^am_scalartest_OBJECTS = scalartest$U.$(OBJEXT)$/;"	m
amd3dnow	lame/libmp3lame/lame_global_flags.h	/^        int     amd3dnow;$/;"	m	struct:lame_global_struct::<anonymous>
amf.c	librtmp/amf.c	1;"	F
amf.h	librtmp/amf.h	1;"	F
amiga_mpega.c	lame/frontend/amiga_mpega.c	1;"	F
amp_filter	lame/libmp3lame/util.h	/^        FLOAT   amp_filter[32];$/;"	m
amp_scalefac_bands	lame/libmp3lame/quantize.c	/^amp_scalefac_bands(lame_internal_flags * gfc,$/;"	f	file:
amplitude	lame/misc/ath.c	/^    long double    amplitude;$/;"	m	file:
amplitude	lame/misc/ath.c	/^long double amplitude ( const amplitude_t* const a )$/;"	f
amplitude_t	lame/misc/ath.c	/^} amplitude_t;$/;"	t	file:
analogAudioGain	DShowPlugin/IVideoCaptureFilter.h	/^    int                                  analogAudioGain;                   \/\/!< Analog audio gain  (-60 - 12 dB)$/;"	m	struct:_VIDEO_CAPTURE_FILTER_SETTINGS
analyse	x264/x264.h	/^    } analyse;$/;"	m	struct:x264_param_t
analysis	lame/libmp3lame/lame_global_flags.h	/^    int     analysis;        \/* collect data for a MP3 frame analyzer?      *\/$/;"	m	struct:lame_global_struct
analysis	lame/libmp3lame/util.h	/^        int     analysis;$/;"	m
analyze	lame/frontend/gtkanal.c	/^analyze(void)$/;"	f	file:
analyzeResult	lame/libmp3lame/gain_analysis.c	/^analyzeResult(uint32_t const *Array, size_t len)$/;"	f	file:
analyze_dmono	lame/misc/mlame_corr.c	/^void analyze_dmono   ( const mono* p, size_t len, korr_t* k )$/;"	f
analyze_dstereo	lame/misc/mlame_corr.c	/^void analyze_dstereo ( const stereo* p, size_t len, korr_t* k )$/;"	f
analyze_mono	lame/misc/mlame_corr.c	/^void analyze_mono   ( const mono* p, size_t len, korr_t* k )$/;"	f
analyze_stereo	lame/misc/abx.c	/^void  analyze_stereo ( const stereo_t* p1, const stereo_t* p2, size_t len, korr_t* const k )$/;"	f
analyze_stereo	lame/misc/mlame_corr.c	/^void analyze_stereo ( const stereo* p, size_t len, korr_t* k )$/;"	f
analyzerURL	Source/LogUploader.h	/^    String url, analyzerURL;$/;"	m	struct:LogUploadResult
ancillary_flag	lame/libmp3lame/util.h	/^        int     ancillary_flag;$/;"	m
angerThreshold	Source/MMDeviceAudioSource.cpp	/^    UINT32 angerThreshold;$/;"	m	class:MMDeviceAudioSource	file:
animationFrameCache	Source/BitmapImage.h	/^    BYTE **animationFrameCache;$/;"	m	class:BitmapImage
animationFrameData	Source/BitmapImage.h	/^    BYTE *animationFrameData;$/;"	m	class:BitmapImage
animationTimes	Source/BitmapImage.h	/^    List<float> animationTimes;$/;"	m	class:BitmapImage
apiVersion	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t            apiVersion;                       \/**< [in]: API version. Should be set to NVENCAPI_VERSION. *\/$/;"	m	struct:_NV_ENC_OPEN_ENCODE_SESSIONEX_PARAMS
apiVersion	libmfx/include/mfx_dispatcher.h	/^    const mfxVersion apiVersion;$/;"	m	struct:MFX_DISP_HANDLE
apiVersion	libmfx/include/mfx_dispatcher.h	/^    mfxVersion apiVersion;$/;"	m	struct:FUNCTION_DESCRIPTION
apiVersionName	libmfx/src/mfx_library_iterator.cpp	/^wchar_t apiVersionName[] = L"APIVersion";$/;"	v
app	Source/RTMPStuff.h	/^SAVC(app);$/;"	v
app	librtmp/rtmp.c	/^SAVC(app);$/;"	v
app	librtmp/rtmp.h	/^        AVal app;$/;"	m	struct:RTMP_LNK
appDomain	CLRHostPlugin/CLRHostPlugin/CLRHost.h	/^    mscorlib::_AppDomain *appDomain;$/;"	m	class:CLRHost
appendNode	lame/libmp3lame/id3tag.c	/^appendNode(id3tag_spec * tag, FrameDataNode * node)$/;"	f	file:
append_mutex	OBSApi/Utility/XT.cpp	/^        std::unique_ptr<void, MutexDeleter> append_mutex, process_mutex, read_mutex;$/;"	m	struct:<anonymous>::XStringLog	file:
applied	lame/dshow/Mpegac.h	/^    BOOL            applied;$/;"	m
applySettingsMethod	CLRHostPlugin/CLRHostPlugin/CLRSettingsPane.h	/^    mscorlib::_MethodInfo *applySettingsMethod;$/;"	m	class:CLRSettingsPane
applyTemplateCheckBox_Checked	CLRBrowserSourcePlugin/Plugin/ConfigDialog.xaml.cs	/^        private void applyTemplateCheckBox_Checked(object sender, RoutedEventArgs e)$/;"	m	class:CLRBrowserSourcePlugin.ConfigDialog	file:
apply_abr_preset	lame/libmp3lame/presets.c	/^apply_abr_preset(lame_global_flags * gfp, int preset, int enforce)$/;"	f	file:
apply_preset	lame/libmp3lame/presets.c	/^apply_preset(lame_global_flags * gfp, int preset, int enforce)$/;"	f
apply_termcap_settings	lame/frontend/console.c	/^apply_termcap_settings(Console_IO_t * const mfp)$/;"	f	file:
apply_vbr_preset	lame/libmp3lame/presets.c	/^apply_vbr_preset(lame_global_flags * gfp, int a, int enforce)$/;"	f	file:
approxbits	lame/frontend/gtkanal.c	/^    int     approxbits;      \/* (approx) bits per frame *\/$/;"	m	struct:gtkinfostruct	file:
arguments	CLRBrowserSourcePlugin/Plugin/Shared/BrowserApp.cs	/^        private String[] arguments;$/;"	f	class:Shared.BrowserApp	file:
array	OBSApi/Utility/Template.h	/^    T *array;$/;"	m	class:List
arrayCount	Source/D3D10System.h	/^    int arrayCount;$/;"	m	struct:ShaderParam
artist	lame/libmp3lame/id3tag.h	/^    char   *artist;$/;"	m	struct:id3tag_spec
as	QSVHelper/WindowsStuff.h	/^    T &as() { return *reinterpret_cast<T*>(memory); }$/;"	f	struct:NamedSharedMemory
as_fn_append	lame/config.status	/^  as_fn_append ()$/;"	f
as_fn_append	lame/configure	/^  as_fn_append ()$/;"	f
as_fn_arith	lame/config.status	/^  as_fn_arith ()$/;"	f
as_fn_arith	lame/configure	/^  as_fn_arith ()$/;"	f
as_fn_error	lame/config.status	/^as_fn_error ()$/;"	f
as_fn_error	lame/configure	/^as_fn_error ()$/;"	f
as_fn_exit	lame/config.status	/^as_fn_exit ()$/;"	f
as_fn_exit	lame/configure	/^as_fn_exit ()$/;"	f
as_fn_failure	lame/configure	/^as_fn_failure () { as_fn_return 1; }$/;"	f
as_fn_mkdir_p	lame/config.status	/^as_fn_mkdir_p ()$/;"	f
as_fn_mkdir_p	lame/configure	/^as_fn_mkdir_p ()$/;"	f
as_fn_ret_failure	lame/configure	/^as_fn_ret_failure () { return 1; }$/;"	f
as_fn_ret_success	lame/configure	/^as_fn_ret_success () { return 0; }$/;"	f
as_fn_set_status	lame/config.status	/^as_fn_set_status ()$/;"	f
as_fn_set_status	lame/configure	/^as_fn_set_status ()$/;"	f
as_fn_success	lame/configure	/^as_fn_success () { as_fn_return 0; }$/;"	f
as_fn_unset	lame/config.status	/^as_fn_unset ()$/;"	f
as_fn_unset	lame/configure	/^as_fn_unset ()$/;"	f
asm_optimizations	lame/include/lame.h	/^} asm_optimizations;$/;"	t
asm_optimizations	lame/libmp3lame/lame_global_flags.h	/^    } asm_optimizations;$/;"	m	struct:lame_global_struct
asm_optimizations_e	lame/include/lame.h	/^typedef enum asm_optimizations_e {$/;"	g
aspect_ratio	Source/libnsgif.h	/^    unsigned int aspect_ratio;            \/**< image aspect ratio (ignored) *\/$/;"	m	struct:gif_animation
assert	OBSApi/Utility/XT.h	236;"	d
assert	OBSApi/Utility/XT.h	238;"	d
assertmsg	OBSApi/Utility/XT.h	244;"	d
assertmsg	OBSApi/Utility/XT.h	246;"	d
ath.c	lame/misc/ath.c	1;"	F
athAdjust	lame/libmp3lame/quantize_pvt.c	/^athAdjust(FLOAT a, FLOAT x, FLOAT athFloor, float ATHfixpoint)$/;"	f
ath_DEPENDENCIES	lame/misc/Makefile	/^ath_DEPENDENCIES =$/;"	m
ath_LDADD	lame/misc/Makefile	/^ath_LDADD = $(LDADD)$/;"	m
ath_OBJECTS	lame/misc/Makefile	/^ath_OBJECTS = $(am_ath_OBJECTS)$/;"	m
ath_SOURCES	lame/misc/Makefile	/^ath_SOURCES = ath.c$/;"	m
ath_curve	lame/libmp3lame/presets.c	/^    FLOAT   ath_curve;$/;"	m	file:
ath_fixpoint	lame/libmp3lame/presets.c	/^    FLOAT   ath_fixpoint;$/;"	m	file:
ath_lower	lame/libmp3lame/presets.c	/^    FLOAT   ath_lower;$/;"	m	file:
ath_sensitivity	lame/libmp3lame/presets.c	/^    FLOAT   ath_sensitivity;$/;"	m	file:
athaa_sensitivity	lame/libmp3lame/lame_global_flags.h	/^    float   athaa_sensitivity; \/* dB, tune active region of auto-level *\/$/;"	m	struct:lame_global_struct
athaa_type	lame/libmp3lame/lame_global_flags.h	/^    int     athaa_type;      \/* select ATH auto-adjust scheme        *\/$/;"	m	struct:lame_global_struct
attackTime	NoiseGate/NoiseGate.h	/^    float   attackTime;$/;"	m	class:NoiseGate
attack_threshold	lame/libmp3lame/util.h	/^        FLOAT   attack_threshold; \/* short block tuning *\/$/;"	m
attack_threshold	lame/libmp3lame/util.h	/^        FLOAT   attack_threshold[4];$/;"	m
attackthre	lame/libmp3lame/lame_global_flags.h	/^    float   attackthre;      \/* attack threshold for L\/R\/M channel *\/$/;"	m	struct:lame_global_struct
attackthre_s	lame/libmp3lame/lame_global_flags.h	/^    float   attackthre_s;    \/* attack threshold for S channel *\/$/;"	m	struct:lame_global_struct
attenuation	NoiseGate/NoiseGate.h	/^    float   attenuation; \/\/ Current gate multiplier$/;"	m	class:NoiseGateFilter
attn4dotX	OBSApi/AudioSource.cpp	/^const float attn4dotX = 1.0f \/ (1.0f + surroundMix4);$/;"	v
attn5dot1	OBSApi/AudioSource.cpp	/^const float attn5dot1 = 1.0f \/ (1.0f + centerMix + surroundMix);$/;"	v
attributeSet	lame/ACM/tinyxml/tinyxml.h	/^	TiXmlAttributeSet attributeSet;$/;"	m	class:TiXmlElement
audio	librtmp/rtmp.c	/^SAVC(audio);$/;"	v
audioBlockSize	Source/Encoder_MP3.cpp	/^const int audioBlockSize = 4; \/\/output is 2 16bit channels$/;"	v
audioChannels	Source/OBS.h	/^    UINT audioChannels;$/;"	m	class:OBS
audioChunks	Source/MP4FileStream.cpp	/^    List<UINT64> videoChunks, audioChunks;$/;"	m	class:MP4FileStream	file:
audioCodecs	Source/RTMPStuff.h	/^SAVC(audioCodecs);$/;"	v
audioCodecs	librtmp/rtmp.c	/^SAVC(audioCodecs);$/;"	v
audioData	OBSApi/AudioSource.h	/^    List<float> audioData;$/;"	m	struct:AudioSegment
audioData	Source/OBS.h	/^    List<BYTE> audioData;$/;"	m	struct:FrameAudio
audioDecodeTimes	Source/MP4FileStream.cpp	/^    List<OffsetVal> videoDecodeTimes, audioDecodeTimes;$/;"	m	class:MP4FileStream	file:
audioDeviceFilter	DShowPlugin/DeviceSource.h	/^    IBaseFilter             *audioDeviceFilter;$/;"	m	class:DeviceSource
audioEncoder	Source/OBS.h	/^    AudioEncoder *audioEncoder;$/;"	m	class:OBS
audioFilter	DShowPlugin/DeviceSource.h	/^    IBaseFilter             *audioFilter; \/\/ Audio renderer filter$/;"	m	class:DeviceSource
audioFilters	OBSApi/AudioSource.h	/^    List<AudioFilter*> audioFilters;$/;"	m	class:AudioSource
audioFormat	DShowPlugin/DeviceSource.h	/^    WAVEFORMATEX            audioFormat;$/;"	m	class:DeviceSource
audioFrameSize	Source/MP4FileStream.cpp	/^    UINT64 audioFrameSize;$/;"	m	class:MP4FileStream	file:
audioFrames	Source/MP4FileStream.cpp	/^    List<MP4AudioFrameInfo> audioFrames;$/;"	m	class:MP4FileStream	file:
audioHeaders	Source/FLVFileStream.cpp	/^    decltype(GetBufferedAudioHeadersPacket()) audioHeaders = GetBufferedAudioHeadersPacket();$/;"	m	class:FLVFileStream	file:
audioHeaders	Source/MP4FileStream.cpp	/^    decltype(GetBufferedAudioHeadersPacket()) audioHeaders = GetBufferedAudioHeadersPacket();$/;"	m	class:MP4FileStream	file:
audioHeaders	Source/RTMPPublisher.h	/^    DataPacket audioHeaders, videoHeaders;$/;"	m	class:RTMPPublisher
audioIDList	DShowPlugin/DShowPlugin.cpp	/^    StringList audioIDList;$/;"	m	struct:ConfigDialogData	file:
audioNameList	DShowPlugin/DShowPlugin.cpp	/^    StringList audioNameList;$/;"	m	struct:ConfigDialogData	file:
audioOut	DShowPlugin/DeviceSource.h	/^    DeviceAudioSource       *audioOut;$/;"	m	class:DeviceSource
audioSampleToChunk	Source/MP4FileStream.cpp	/^    List<SampleToChunk> videoSampleToChunk, audioSampleToChunk;$/;"	m	class:MP4FileStream	file:
audioSegments	OBSApi/AudioSource.h	/^    List<AudioSegment*> audioSegments;$/;"	m	class:AudioSource
audioTimeOffset	Source/RTMPPublisher.h	/^    DWORD audioTimeOffset;$/;"	m	class:RTMPPublisher
audioWarningId	Source/OBS.h	/^    UINT audioWarningId;$/;"	m	class:OBS
audiochannels	Source/RTMPStuff.h	/^SAVC(audiochannels);$/;"	v
audiocodecid	Source/RTMPStuff.h	/^SAVC(audiocodecid);$/;"	v
audiodata_precedesframes	lame/mpglib/interface.c	/^audiodata_precedesframes(PMPSTR mp)$/;"	f
audiodatarate	Source/RTMPStuff.h	/^SAVC(audiodatarate);$/;"	v
audiosamplerate	Source/RTMPStuff.h	/^SAVC(audiosamplerate);$/;"	v
audiosamplesize	Source/RTMPStuff.h	/^SAVC(audiosamplesize);$/;"	v
auenc	lame/misc/auenc	1;"	F
auth	librtmp/rtmp.h	/^        AVal auth;$/;"	m	struct:RTMP_LNK
auxAudioSources	Source/OBS.h	/^    List<AudioSource*> auxAudioSources;$/;"	m	class:OBS
av_NetConnection_Connect_Closed	librtmp/rtmp.c	/^static const AVal av_NetConnection_Connect_Closed =$/;"	v	file:
av_NetConnection_Connect_InvalidApp	librtmp/rtmp.c	/^static const AVal av_NetConnection_Connect_InvalidApp =$/;"	v	file:
av_NetConnection_Connect_Rejected	librtmp/rtmp.c	/^static const AVal av_NetConnection_Connect_Rejected =$/;"	v	file:
av_NetStream_Authenticate_UsherToken	Source/RTMPStuff.h	/^static const AVal av_NetStream_Authenticate_UsherToken = AVC("NetStream.Authenticate.UsherToken");$/;"	v
av_NetStream_Authenticate_UsherToken	librtmp/rtmp.c	/^static const AVal av_NetStream_Authenticate_UsherToken = AVC("NetStream.Authenticate.UsherToken");$/;"	v	file:
av_NetStream_Failed	librtmp/rtmp.c	/^static const AVal av_NetStream_Failed = AVC("NetStream.Failed");$/;"	v	file:
av_NetStream_Pause_Notify	librtmp/rtmp.c	/^static const AVal av_NetStream_Pause_Notify = AVC("NetStream.Pause.Notify");$/;"	v	file:
av_NetStream_Play_Complete	librtmp/rtmp.c	/^static const AVal av_NetStream_Play_Complete = AVC("NetStream.Play.Complete");$/;"	v	file:
av_NetStream_Play_Failed	librtmp/rtmp.c	/^static const AVal av_NetStream_Play_Failed = AVC("NetStream.Play.Failed");$/;"	v	file:
av_NetStream_Play_PublishNotify	librtmp/rtmp.c	/^static const AVal av_NetStream_Play_PublishNotify =$/;"	v	file:
av_NetStream_Play_Start	Source/RTMPStuff.h	/^static const AVal av_NetStream_Play_Start = AVC("NetStream.Play.Start");$/;"	v
av_NetStream_Play_Start	librtmp/rtmp.c	/^static const AVal av_NetStream_Play_Start = AVC("NetStream.Play.Start");$/;"	v	file:
av_NetStream_Play_Stop	Source/RTMPStuff.h	/^static const AVal av_NetStream_Play_Stop = AVC("NetStream.Play.Stop");$/;"	v
av_NetStream_Play_Stop	librtmp/rtmp.c	/^static const AVal av_NetStream_Play_Stop = AVC("NetStream.Play.Stop");$/;"	v	file:
av_NetStream_Play_StreamNotFound	librtmp/rtmp.c	/^static const AVal av_NetStream_Play_StreamNotFound =$/;"	v	file:
av_NetStream_Play_UnpublishNotify	librtmp/rtmp.c	/^static const AVal av_NetStream_Play_UnpublishNotify =$/;"	v	file:
av_NetStream_Publish_Denied	librtmp/rtmp.c	/^static const AVal av_NetStream_Publish_Denied = AVC("NetStream.Publish.Denied");$/;"	v	file:
av_NetStream_Publish_Rejected	librtmp/rtmp.c	/^static const AVal av_NetStream_Publish_Rejected = AVC("NetStream.Publish.Rejected");$/;"	v	file:
av_NetStream_Publish_Start	librtmp/rtmp.c	/^static const AVal av_NetStream_Publish_Start = AVC("NetStream.Publish.Start");$/;"	v	file:
av_NetStream_Seek_Notify	librtmp/rtmp.c	/^static const AVal av_NetStream_Seek_Notify = AVC("NetStream.Seek.Notify");$/;"	v	file:
av_OBSVersion	Source/RTMPStuff.h	/^static const AVal av_OBSVersion = AVC(OBS_VERSION_STRING_ANSI);$/;"	v
av_Started_playing	Source/RTMPStuff.h	/^static const AVal av_Started_playing = AVC("Started playing");$/;"	v
av_Stopped_playing	Source/RTMPStuff.h	/^static const AVal av_Stopped_playing = AVC("Stopped playing");$/;"	v
av_authmod_adobe	librtmp/rtmp.c	/^static const AVal av_authmod_adobe = AVC("authmod=adobe");$/;"	v	file:
av_authmod_llnw	librtmp/rtmp.c	/^static const AVal av_authmod_llnw  = AVC("authmod=llnw");$/;"	v	file:
av_dquote	Source/RTMPStuff.h	/^static const AVal av_dquote = AVC("\\"");$/;"	v
av_escdquote	Source/RTMPStuff.h	/^static const AVal av_escdquote = AVC("\\\\\\"");$/;"	v
av_len	librtmp/amf.h	/^        int av_len;$/;"	m	struct:AVal
av_mp3	Source/RTMPStuff.h	/^static const AVal av_mp3 = AVC("mp3 ");$/;"	v
av_setDataFrame	Source/RTMPStuff.h	/^static const AVal av_setDataFrame = AVC("@setDataFrame");$/;"	v
av_setDataFrame	librtmp/rtmp.c	/^static const AVal av_setDataFrame = AVC("@setDataFrame");$/;"	v	file:
av_val	librtmp/amf.h	/^        char *av_val;$/;"	m	struct:AVal
avc1	Source/RTMPStuff.h	/^SAVC(avc1);$/;"	v
avebits	lame/frontend/gtkanal.c	/^    double  avebits;         \/* running average bits per frame *\/$/;"	m	struct:gtkinfostruct	file:
averageBitRate	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                        averageBitRate;                              \/**< [in]: Specifies the average bitrate(in bits\/sec) used for encoding. *\/$/;"	m	struct:_NV_ENC_RC_PARAMS
avgCpuTime	OBSApi/Utility/Profiler.cpp	/^    DWORD avgCpuTime;$/;"	m	struct:ProfileNodeInfo	file:
avgPercentage	OBSApi/Utility/Profiler.cpp	/^    double avgPercentage;$/;"	m	struct:ProfileNodeInfo	file:
avgTimeElapsed	OBSApi/Utility/Profiler.cpp	/^    DWORD avgTimeElapsed;$/;"	m	struct:ProfileNodeInfo	file:
avg_bitrate	lame/libmp3lame/util.h	/^        int     avg_bitrate;$/;"	m
avgenrg	libfaac/coder.h	/^    double avgenrg;$/;"	m
b	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    float b;$/;"	m	struct:_D3DCOLORVALUE
b	lame/doc/html/detailed.html	/^<a name="b"><span class="hilight">-b n<\/span><\/a> Bitrate$/;"	a
b	lame/frontend/rtp.c	/^    struct rtpbits b;$/;"	m	struct:rtpheader	file:
b	lame/libmp3lame/id3tag.h	/^            unsigned char *b; \/* ptr to raw bytes                 *\/$/;"	m	union:FrameDataNode::<anonymous>::<anonymous>
b	librtmp/md5.h	/^	MD5_u32plus a, b, c, d;$/;"	m
b64bitJump	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.h	/^    bool b64bitJump;$/;"	m	class:HookData
b64enc	librtmp/rtmp.c	/^b64enc(const unsigned char *input, int length, char *output, int maxsize)$/;"	f	file:
bAbrOutput	lame/ACM/AEncodeProperties.h	/^	bool bAbrOutput;$/;"	m	class:AEncodeProperties
bAlloc	QSVHelper/IntelSupport/include/d3d11_allocator.h	/^        bool             bAlloc;$/;"	m	struct:D3D11FrameAllocator::TextureResource
bAlphaBlend	GraphicsCapture/GraphicsCaptureSource.h	/^    bool bCapturing, bErrorAcquiring, bFlip, bStretch, bAlphaBlend, bIgnoreAspect, bCaptureMouse;$/;"	m	class:GraphicsCaptureSource
bAlwaysOnTop	Source/OBS.h	/^    bool    bAlwaysOnTop;$/;"	m	class:OBS
bApplySettingsAborted	Source/OBS.h	/^    bool                bSettingsChanged, bApplySettingsAborted;$/;"	m	class:OBS
bAttemptedBounce	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.h	/^    bool bAttemptedBounce;$/;"	m	class:HookData
bAudio	DShowPlugin/DeviceSource.h	/^    bool bAudio;$/;"	m	struct:SampleData
bAutoReconnect	Source/OBS.h	/^    bool    bAutoReconnect;$/;"	m	class:OBS
bBaseLoaded	OBSApi/Utility/XT.cpp	/^BOOL                    bBaseLoaded     = FALSE;$/;"	v
bBlendingEnabled	Source/D3D10System.h	/^    BOOL                    bBlendingEnabled;$/;"	m	class:D3D10System
bBold	Source/TextOutputSource.cpp	/^    bool        bBold, bItalic, bUnderline, bVertical;$/;"	m	class:TextOutputSource	file:
bBufferFull	Source/RTMPPublisher.h	/^    bool bBufferFull;$/;"	m	class:RTMPPublisher
bCRC	lame/ACM/AEncodeProperties.h	/^	bool bCRC;$/;"	m	class:AEncodeProperties
bCRC	lame/Dll/BladeMP3EncDLL.h	/^			BOOL			bCRC;				\/\/ Insert CRC (TRUE\/FALSE)$/;"	m
bCRC	lame/Dll/BladeMP3EncDLL.h	/^			BOOL	bCRC;$/;"	m
bCRCProtect	lame/dshow/Encoder.h	/^    DWORD   bCRCProtect;                    \/\/Is CRC protection activated?$/;"	m
bCancelEnd	Source/DelayedPublisher.cpp	/^    bool bStreamEnding, bCancelEnd, bDelayConnected;$/;"	m	class:DelayedPublisher	file:
bCancelMP4Build	Source/MP4FileStream.cpp	/^    bool bCancelMP4Build;$/;"	m	class:MP4FileStream	file:
bCaptureLayered	Source/DesktopImageSource.cpp	/^    BOOL     bClientCapture, bCaptureMouse, bCaptureLayered;$/;"	m	class:DesktopImageSource	file:
bCaptureMouse	GraphicsCapture/GraphicsCaptureSource.h	/^    bool bCapturing, bErrorAcquiring, bFlip, bStretch, bAlphaBlend, bIgnoreAspect, bCaptureMouse;$/;"	m	class:GraphicsCaptureSource
bCaptureMouse	Source/DesktopImageSource.cpp	/^    BOOL     bClientCapture, bCaptureMouse, bCaptureLayered;$/;"	m	class:DesktopImageSource	file:
bCaptureThreadStop	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	/^bool bCaptureThreadStop = false;$/;"	v
bCapturing	DShowPlugin/DeviceSource.h	/^    bool            bCapturing, bFiltersLoaded;$/;"	m	class:DeviceSource
bCapturing	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	/^bool bCapturing = true;$/;"	v
bCapturing	GraphicsCapture/GraphicsCaptureSource.h	/^    bool bCapturing, bErrorAcquiring, bFlip, bStretch, bAlphaBlend, bIgnoreAspect, bCaptureMouse;$/;"	m	class:GraphicsCaptureSource
bCapturing	Source/DSoundAudioSource.cpp	/^    bool bCapturing;$/;"	m	class:DSoundAudioSource	file:
bChanged	Source/D3D10System.h	/^    BOOL bChanged;$/;"	m	struct:ShaderParam
bChangingSources	Source/OBS.h	/^    bool    bChangingSources;$/;"	m	class:OBS
bClientCapture	Source/DesktopImageSource.cpp	/^    BOOL     bClientCapture, bCaptureMouse, bCaptureLayered;$/;"	m	class:DesktopImageSource	file:
bColorSet	OBSApi/GraphicsSystem.h	/^    BOOL bColorSet;$/;"	m	class:GraphicsSystem
bCompatibilityMode	Source/DesktopImageSource.cpp	/^    bool     bCompatibilityMode;$/;"	m	class:DesktopImageSource	file:
bConnected	Source/RTMPPublisher.h	/^    bool bConnecting, bConnected;$/;"	m	class:RTMPPublisher
bConnecting	Source/RTMPPublisher.h	/^    bool bConnecting, bConnected;$/;"	m	class:RTMPPublisher
bCopyright	lame/ACM/AEncodeProperties.h	/^	bool bCopyright;$/;"	m	class:AEncodeProperties
bCopyright	lame/Dll/BladeMP3EncDLL.h	/^			BOOL			bCopyright;			\/\/ Set Copyright Bit (TRUE\/FALSE)$/;"	m
bCopyright	lame/Dll/BladeMP3EncDLL.h	/^			BOOL	bCopyright;$/;"	m
bCopyright	lame/dshow/Encoder.h	/^    DWORD   bCopyright;                     \/\/Is the stream protected by copyright?$/;"	m
bCreating	DShowPlugin/DShowPlugin.cpp	/^    bool bCreating;$/;"	m	struct:ConfigDialogData	file:
bCursorVis	Source/D3D10System.h	/^    BOOL bCursorVis;$/;"	m	class:D3D10OutputDuplicator
bD3D8Hooked	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	/^bool bD3D8Hooked = false;$/;"	v
bD3D9Ex	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^BOOL                    bD3D9Ex = FALSE;$/;"	v
bD3D9Hooked	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	/^bool bD3D9Hooked = false;$/;"	v
bDXGIHooked	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	/^bool bDXGIHooked = false;$/;"	v
bDebugBreak	OBSApi/Utility/XT.cpp	/^BOOL                    bDebugBreak     = TRUE;$/;"	v
bDelayConnected	Source/DelayedPublisher.cpp	/^    bool bStreamEnding, bCancelEnd, bDelayConnected;$/;"	m	class:DelayedPublisher	file:
bDeprecated	Source/OBS.h	/^    bool bDeprecated;$/;"	m	struct:ClassInfo
bDeviceHasAudio	DShowPlugin/DShowPlugin.cpp	/^    bool bDeviceHasAudio;$/;"	m	struct:ConfigDialogData	file:
bDeviceHasAudio	DShowPlugin/DeviceSource.h	/^    bool            bFlipVertical, bFlipHorizontal, bDeviceHasAudio, bUsePointFiltering, bUseAudioRender;$/;"	m	class:DeviceSource
bDirectDrawHooked	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	/^bool bDirectDrawHooked = false;$/;"	v
bDirectory	OBSApi/Utility/XT.h	/^    BOOL bDirectory;$/;"	m	struct:OSFindData
bDisableCompatibilityMode	Source/D3D10System.h	/^    bool bDisableCompatibilityMode;$/;"	m	class:D3D10System
bDisableFading	Source/BitmapTransitionSource.cpp	/^    bool  bDisableFading;$/;"	m	class:BitmapTransitionSource	file:
bDisableSceneSwitching	Source/OBS.h	/^    bool    bDisableSceneSwitching;$/;"	m	class:OBS
bDisabled	OBSApi/ColorControl.cpp	/^    BOOL  bDisabled;        \/\/whether the control is disabled or not$/;"	m	struct:CCStruct	file:
bDisabled	OBSApi/VolumeControl.cpp	/^    bool  bDisabled, bHasCapture;$/;"	m	struct:VolumeControlData	file:
bDisplayConnectedOnly	Source/Settings.h	/^    bool bDisplayConnectedOnly, useInputDevices;$/;"	m	class:SettingsAudio
bDoUpdate	Source/TextOutputSource.cpp	/^    bool        bDoUpdate;$/;"	m	class:TextOutputSource	file:
bDownSent	Source/API.cpp	/^    bool bModifiersDown, bHotkeyDown, bDownSent;$/;"	m	struct:HotkeyInfo	file:
bDragResize	Source/OBS.h	/^    bool    bDragResize;$/;"	m	class:OBS
bDrawIcon	OBSApi/VolumeControl.cpp	/^    bool bDrawIcon;$/;"	m	struct:VolumeControlData	file:
bDynamic	Source/D3D10System.h	/^    BOOL bDynamic;$/;"	m	class:D3D10VertexBuffer
bDynamic	Source/D3D10System.h	/^    bool bDynamic;$/;"	m	class:D3D10Texture
bEditMode	Source/OBS.h	/^    bool    bEditMode;$/;"	m	class:OBS
bEnableProjectorCursor	Source/OBS.h	/^    bool    bEnableProjectorCursor;$/;"	m	class:OBS
bEnableTracking	OBSApi/Utility/DebugAlloc.cpp	/^BOOL bEnableTracking = FALSE;$/;"	v
bEnableVBR	lame/Dll/BladeMP3EncDLL.h	/^			BOOL			bEnableVBR;			\/\/ USE VBR ENCODING (TRUE\/FALSE)$/;"	m
bErrorAcquiring	GraphicsCapture/GraphicsCaptureSource.h	/^    bool bCapturing, bErrorAcquiring, bFlip, bStretch, bAlphaBlend, bIgnoreAspect, bCaptureMouse;$/;"	m	class:GraphicsCaptureSource
bFBOAvailable	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^bool bFBOAvailable = false;$/;"	v
bFadeInOnly	Source/BitmapTransitionSource.cpp	/^    bool  bFadeInOnly;$/;"	m	class:BitmapTransitionSource	file:
bFastInitialKeyframe	Source/RTMPPublisher.h	/^    bool bFastInitialKeyframe;$/;"	m	class:RTMPPublisher
bFiltersLoaded	DShowPlugin/DeviceSource.h	/^    bool            bCapturing, bFiltersLoaded;$/;"	m	class:DeviceSource
bFirstAudioPacket	Source/OBS.h	/^    bool bRecievedFirstAudioFrame, bSentHeaders, bFirstAudioPacket;$/;"	m	class:OBS
bFirstConnect	Source/OBS.h	/^    bool bFirstConnect;$/;"	m	class:OBS
bFirstFrame	DShowPlugin/DeviceSource.h	/^    bool            bFirstFrame;$/;"	m	class:DeviceSource
bFirstFrame	Source/Encoder_AAC.cpp	/^    bool bFirstFrame;$/;"	m	class:AACEncoder	file:
bFirstFrame	Source/Encoder_MP3.cpp	/^    bool bFirstFrame;$/;"	m	class:MP3Encoder	file:
bFirstFrameProcessed	Source/Encoder_QSV.cpp	/^         bFirstFrameProcessed;$/;"	m	class:QSVEncoder	file:
bFirstFrameProcessed	Source/Encoder_x264.cpp	/^    bool bFirstFrameProcessed;$/;"	m	class:X264Encoder	file:
bFirstFrameReceived	Source/MMDeviceAudioSource.cpp	/^    bool bFirstFrameReceived;$/;"	m	class:MMDeviceAudioSource	file:
bFirstKeyframe	Source/RTMPPublisher.h	/^    bool bFirstKeyframe;$/;"	m	class:RTMPPublisher
bFirstPacket	Source/Encoder_AAC.cpp	/^    bool bFirstPacket;$/;"	m	class:AACEncoder	file:
bFirstPacket	Source/Encoder_MP3.cpp	/^    bool bFirstPacket;$/;"	m	class:MP3Encoder	file:
bFlip	GraphicsCapture/GlobalCaptureStuff.h	/^    BOOL    bFlip;$/;"	m	struct:CaptureInfo
bFlip	GraphicsCapture/GraphicsCaptureSource.h	/^    bool bCapturing, bErrorAcquiring, bFlip, bStretch, bAlphaBlend, bIgnoreAspect, bCaptureMouse;$/;"	m	class:GraphicsCaptureSource
bFlipHorizontal	DShowPlugin/DeviceSource.h	/^    bool            bFlipVertical, bFlipHorizontal, bDeviceHasAudio, bUsePointFiltering, bUseAudioRender;$/;"	m	class:DeviceSource
bFlipVertical	DShowPlugin/DeviceSource.h	/^    bool            bFlipVertical, bFlipHorizontal, bDeviceHasAudio, bUsePointFiltering, bUseAudioRender;$/;"	m	class:DeviceSource
bFloat	OBSApi/AudioSource.h	/^    bool  bFloat;$/;"	m	class:AudioSource
bForceChannel	lame/ACM/AEncodeProperties.h	/^	bool bForceChannel;$/;"	m	class:AEncodeProperties
bForceMicMono	Source/OBS.h	/^    bool    bForceMicMono;$/;"	m	class:OBS
bForceMono	lame/dshow/Encoder.h	/^    DWORD   bForceMono;$/;"	m
bForceRenderViewErase	Source/OBS.h	/^    bool    bForceRenderViewErase;$/;"	m	class:OBS
bFoundHookableModule	GraphicsCapture/GraphicsCapture.cpp	/^    BOOL bFoundHookableModule;$/;"	m	struct:WindowInfo	file:
bFullscreenMode	Source/OBS.h	/^    bool    bFullscreenMode;$/;"	m	class:OBS
bGDICompatible	Source/D3D10System.h	/^    bool bGDICompatible;$/;"	m	class:D3D10Texture
bGLHooked	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	/^bool bGLHooked = false;$/;"	v
bGlobalSource	DShowPlugin/DShowPlugin.cpp	/^    bool bGlobalSource;$/;"	m	struct:ConfigDialogData	file:
bGotSurfaceDesc	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	/^bool bGotSurfaceDesc = false;$/;"	v
bHasCapture	OBSApi/VolumeControl.cpp	/^    bool  bDisabled, bHasCapture;$/;"	m	struct:VolumeControlData	file:
bHasColors	Source/D3D10System.h	/^    bool bHasColors;$/;"	m	class:D3D10VertexShader
bHasColors	Source/D3D10System.h	/^    bool bHasColors;$/;"	m	struct:ShaderProcessor
bHasFocus	OBSApi/HotkeyControlEx.cpp	/^    bool  bHasFocus;$/;"	m	struct:HotkeyControlExData	file:
bHasNVENC	Source/Settings.h	/^    bool bHasQSV, bHasNVENC;$/;"	m	class:SettingsAdvanced
bHasNormals	Source/D3D10System.h	/^    bool bHasNormals;$/;"	m	class:D3D10VertexShader
bHasNormals	Source/D3D10System.h	/^    bool bHasNormals;$/;"	m	struct:ShaderProcessor
bHasQSV	Source/Settings.h	/^    bool bHasQSV, bHasNVENC;$/;"	m	class:SettingsAdvanced
bHasTangents	Source/D3D10System.h	/^    bool bHasTangents;$/;"	m	class:D3D10VertexShader
bHasTangents	Source/D3D10System.h	/^    bool bHasTangents;$/;"	m	struct:ShaderProcessor
bHasTextures	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^BOOL                    bHasTextures = FALSE;$/;"	v
bHasWritten	OBSApi/Utility/XFile.h	/^    BOOL bHasWritten;$/;"	m	class:XFile
bHaveCustomImpl	Source/Encoder_QSV.cpp	/^    bool bHaveCustomImpl;$/;"	m	class:QSVEncoder	file:
bHidden	OBSApi/Utility/XT.h	/^    BOOL bHidden;$/;"	m	struct:OSFindData
bHidingCursor	OBSApi/Utility/XT_Windows.cpp	/^BOOL        bHidingCursor = 0;$/;"	v
bHooked	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.h	/^    bool bHooked;$/;"	m	class:HookData
bHotkeyDown	Source/API.cpp	/^    bool bModifiersDown, bHotkeyDown, bDownSent;$/;"	m	struct:HotkeyInfo	file:
bIgnoreAspect	GraphicsCapture/GraphicsCaptureSource.h	/^    bool bCapturing, bErrorAcquiring, bFlip, bStretch, bAlphaBlend, bIgnoreAspect, bCaptureMouse;$/;"	m	class:GraphicsCaptureSource
bInInit	Source/DesktopImageSource.cpp	/^    bool     bInInit;$/;"	m	class:DesktopImageSource	file:
bInitialized	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	/^    BOOL bInitialized;$/;"	m	class:Palette	file:
bInitialized	GraphicsCapture/MemoryCapture.h	/^    bool bInitialized;$/;"	m	class:MemoryCapture
bInitialized	GraphicsCapture/SharedTexCapture.h	/^    bool bInitialized;$/;"	m	class:SharedTexCapture
bInnerWindowRegion	Source/DesktopImageSource.cpp	/^    bool bInnerWindowRegion;$/;"	m	struct:RegionWindowData	file:
bIsAnimatedGif	Source/BitmapImage.h	/^    bool bIsAnimatedGif;$/;"	m	class:BitmapImage
bIsMic	Source/MMDeviceAudioSource.cpp	/^    bool bIsMic;$/;"	m	class:MMDeviceAudioSource	file:
bIsMultisampled	GraphicsCapture/GraphicsCaptureHook/D3D10Capture.cpp	/^BOOL                    bIsMultisampled;$/;"	v
bIsPortable	Source/Main.cpp	/^bool        bIsPortable     = false;$/;"	v
bItalic	Source/TextOutputSource.cpp	/^    bool        bBold, bItalic, bUnderline, bVertical;$/;"	m	class:TextOutputSource	file:
bItemWasSelected	Source/OBS.h	/^    bool    bItemWasSelected;$/;"	m	class:OBS
bKeepRecording	Source/OBS.h	/^    bool    bRunning, bRecording, bRecordingReplayBuffer, bRecordingOnly, bStartingUp, bStreaming, bStreamFlushed = true, bKeepRecording;$/;"	m	class:OBS
bKillThread	DShowPlugin/DeviceSource.h	/^    bool   bKillThread;$/;"	m	struct:ConvertData
bKillThread	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^bool                    bKillThread = false;$/;"	v
bKillThread	Source/OBSVideoCapture.cpp	/^    bool bKillThread;$/;"	m	struct:Convert444Data	file:
bKillThread	scenesw/SceneSwitcher.h	/^	bool bKillThread;$/;"	m	class:SceneSwitcher
bLockingSurface	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	/^bool bLockingSurface = false;$/;"	v
bLogStarted	OBSApi/Utility/XT.cpp	/^BOOL bLogStarted = FALSE;$/;"	v
bLoggedSystemStats	Source/OBSCapture.cpp	/^BOOL bLoggedSystemStats = FALSE;$/;"	v
bMP3	Source/MP4FileStream.cpp	/^    bool            bMP3;$/;"	m	class:MP4FileStream	file:
bMadeCaptureRegionClass	Source/DesktopImageSource.cpp	/^bool bMadeCaptureRegionClass = false;$/;"	v
bMissingSources	OBSApi/Scene.h	/^    bool bMissingSources;$/;"	m	class:Scene
bModifiersDown	Source/API.cpp	/^    bool bModifiersDown, bHotkeyDown, bDownSent;$/;"	m	struct:HotkeyInfo	file:
bMonitoringFileChanges	Source/TextOutputSource.cpp	/^    bool        bMonitoringFileChanges;$/;"	m	class:TextOutputSource	file:
bMouseCaptured	GraphicsCapture/GraphicsCaptureSource.h	/^    bool bMouseCaptured, bMouseDown;$/;"	m	class:GraphicsCaptureSource
bMouseCaptured	Source/DesktopImageSource.cpp	/^    bool     bMouseCaptured;$/;"	m	class:DesktopImageSource	file:
bMouseDown	GraphicsCapture/GraphicsCaptureSource.h	/^    bool bMouseCaptured, bMouseDown;$/;"	m	class:GraphicsCaptureSource
bMouseDown	Source/OBS.h	/^    bool    bMouseDown;$/;"	m	class:OBS
bMouseMoved	Source/OBS.h	/^    bool    bMouseMoved;$/;"	m	class:OBS
bMovingWindow	Source/DesktopImageSource.cpp	/^    bool bMovingWindow;$/;"	m	struct:RegionWindowData	file:
bNV12	Source/OBSVideoCapture.cpp	/^    bool bNV12;$/;"	m	struct:Convert444Data	file:
bNVCaptureAvailable	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^bool bNVCaptureAvailable = false;$/;"	v
bNetworkStrain	Source/RTMPPublisher.h	/^    bool numStartFrames, bNetworkStrain;$/;"	m	class:RTMPPublisher
bNewFrame	DShowPlugin/DeviceSource.h	/^        bool                        curField, bNewFrame;$/;"	m	struct:DeviceSource::<anonymous>
bNoBitRes	lame/ACM/AEncodeProperties.h	/^	bool bNoBitRes;$/;"	m	class:AEncodeProperties
bNoRes	lame/Dll/BladeMP3EncDLL.h	/^			BOOL			bNoRes;				\/\/ Disable Bit resorvoir (TRUE\/FALSE)$/;"	m
bNormalSet	OBSApi/GraphicsSystem.h	/^    BOOL bNormalSet;$/;"	m	class:GraphicsSystem
bNotificationAreaIcon	Source/OBS.h	/^    bool bNotificationAreaIcon;$/;"	m	class:OBS
bOpen	OBSApi/Utility/ConfigFile.h	/^    BOOL  bOpen;$/;"	m	class:ConfigFile
bOriginal	lame/ACM/AEncodeProperties.h	/^	bool bOriginal;$/;"	m	class:AEncodeProperties
bOriginal	lame/Dll/BladeMP3EncDLL.h	/^			BOOL			bOriginal;			\/\/ Set Original Bit (TRUE\/FALSE)$/;"	m
bOriginal	lame/Dll/BladeMP3EncDLL.h	/^			BOOL	bOriginal;$/;"	m
bOriginal	lame/dshow/Encoder.h	/^    DWORD   bOriginal;                      \/\/Is the stream an original?$/;"	m
bOutputAudioToDesktop	DShowPlugin/DeviceSource.h	/^    bool            bOutputAudioToDesktop;$/;"	m	class:DeviceSource
bPSVEnabled	PSVPlugin/psvplugin.cpp	/^bool bPSVEnabled = FALSE;$/;"	v
bPadCBR	Source/Encoder_x264.cpp	/^    bool bUseCBR, bUseCFR, bPadCBR;$/;"	m	class:X264Encoder	file:
bPanelVisible	Source/OBS.h	/^    bool    bPanelVisible;$/;"	m	class:OBS
bPanelVisibleFullscreen	Source/OBS.h	/^    bool    bPanelVisibleFullscreen;$/;"	m	class:OBS
bPanelVisibleProcessed	Source/OBS.h	/^    bool    bPanelVisibleProcessed;$/;"	m	class:OBS
bPanelVisibleWindowed	Source/OBS.h	/^    bool    bPanelVisibleWindowed;$/;"	m	class:OBS
bPleaseDisableProjector	Source/OBS.h	/^    bool    bPleaseDisableProjector;$/;"	m	class:OBS
bPleaseEnableProjector	Source/OBS.h	/^    bool    bPleaseEnableProjector;   \/\/I'm just too lazy$/;"	m	class:OBS
bPrivate	lame/ACM/AEncodeProperties.h	/^	bool bPrivate;$/;"	m	class:AEncodeProperties
bPrivate	lame/Dll/BladeMP3EncDLL.h	/^			BOOL			bPrivate;			\/\/ Set Private Bit (TRUE\/FALSE)$/;"	m
bPrivate	lame/Dll/BladeMP3EncDLL.h	/^			BOOL	bPrivate;		$/;"	m
bProfilingEnabled	OBSApi/Utility/Profiler.cpp	/^BOOL bProfilingEnabled = FALSE;$/;"	v
bProjector	Source/OBS.h	/^    bool    bProjector;$/;"	m	class:OBS
bPushToTalkOn	Source/OBS.h	/^    bool bUsingPushToTalk, bPushToTalkOn;$/;"	m	class:OBS
bRMouseDown	Source/OBS.h	/^    bool    bRMouseDown;$/;"	m	class:OBS
bRandomize	Source/BitmapTransitionSource.cpp	/^    bool  bRandomize;$/;"	m	class:BitmapTransitionSource	file:
bReacquiring	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^bool bReacquiring = false;$/;"	v
bReadyToDraw	DShowPlugin/DeviceSource.h	/^    bool            bReadyToDraw;$/;"	m	class:DeviceSource
bRecievedFirstAudioFrame	Source/OBS.h	/^    bool bRecievedFirstAudioFrame, bSentHeaders, bFirstAudioPacket;$/;"	m	class:OBS
bReconnecting	Source/OBS.h	/^    bool    bReconnecting;$/;"	m	class:OBS
bRecordFromReplayBufferHotkeyDown	Source/OBS.h	/^    bool bRecordFromReplayBufferHotkeyDown;$/;"	m	class:OBS
bRecording	Source/OBS.h	/^    bool    bRunning, bRecording, bRecordingReplayBuffer, bRecordingOnly, bStartingUp, bStreaming, bStreamFlushed = true, bKeepRecording;$/;"	m	class:OBS
bRecordingOnly	Source/OBS.h	/^    bool    bRunning, bRecording, bRecordingReplayBuffer, bRecordingOnly, bStartingUp, bStreaming, bStreamFlushed = true, bKeepRecording;$/;"	m	class:OBS
bRecordingReplayBuffer	Source/OBS.h	/^    bool    bRunning, bRecording, bRecordingReplayBuffer, bRecordingOnly, bStartingUp, bStreaming, bStreamFlushed = true, bKeepRecording;$/;"	m	class:OBS
bRender	OBSApi/Scene.h	/^    bool bRender;$/;"	m	class:SceneItem
bRenderViewEnabled	Source/OBS.h	/^    bool    bRenderViewEnabled;$/;"	m	class:OBS
bRequestKeyframe	Source/Encoder_QSV.cpp	/^    bool bRequestKeyframe,$/;"	m	class:QSVEncoder	file:
bRequestKeyframe	Source/Encoder_x264.cpp	/^    bool bRequestKeyframe;$/;"	m	class:X264Encoder	file:
bRequestKeyframe	Source/OBS.h	/^    bool bRequestKeyframe;$/;"	m	class:OBS
bRequestVolume	DShowPlugin/DeviceSource.h	/^    bool bRequestVolume;$/;"	m	class:DeviceSource
bRequiresAdmin	GraphicsCapture/GraphicsCapture.cpp	/^    BOOL bRequiresAdmin;$/;"	m	struct:WindowInfo	file:
bResample	OBSApi/AudioSource.h	/^    bool bResample;$/;"	m	class:AudioSource
bResample	lame/ACM/AEncodeProperties.h	/^	bool bResample;$/;"	m	class:AEncodeProperties
bResizeRenderView	Source/OBS.h	/^    bool    bResizeRenderView;$/;"	m	class:OBS
bRetrying	Source/OBS.h	/^    bool    bRetrying;$/;"	m	class:OBS
bRunning	Source/OBS.h	/^    bool    bRunning, bRecording, bRecordingReplayBuffer, bRecordingOnly, bStartingUp, bStreaming, bStreamFlushed = true, bKeepRecording;$/;"	m	class:OBS
bSampleOverlap	lame/dshow/Encoder.h	/^    DWORD   bSampleOverlap;$/;"	m
bSaveReplayBufferHotkeyDown	Source/OBS.h	/^    bool bSaveReplayBufferHotkeyDown;$/;"	m	class:OBS
bSceneStarted	OBSApi/Scene.h	/^    bool bSceneStarted;$/;"	m	class:Scene
bScrollMode	Source/TextOutputSource.cpp	/^    bool        bScrollMode;$/;"	m	class:TextOutputSource	file:
bSelected	OBSApi/Scene.h	/^    bool bSelected;$/;"	m	class:SceneItem
bSentFirstAudio	Source/RTMPPublisher.h	/^    bool bSentFirstKeyframe, bSentFirstAudio;$/;"	m	class:RTMPPublisher
bSentFirstKeyframe	Source/RTMPPublisher.h	/^    bool bSentFirstKeyframe, bSentFirstAudio;$/;"	m	class:RTMPPublisher
bSentFirstPacket	Source/FLVFileStream.cpp	/^    bool bSentFirstPacket, bSentSEI;$/;"	m	class:FLVFileStream	file:
bSentHeaders	Source/OBS.h	/^    bool bRecievedFirstAudioFrame, bSentHeaders, bFirstAudioPacket;$/;"	m	class:OBS
bSentSEI	Source/FLVFileStream.cpp	/^    bool bSentFirstPacket, bSentSEI;$/;"	m	class:FLVFileStream	file:
bSentSEI	Source/MP4FileStream.cpp	/^    bool bSentSEI;$/;"	m	class:MP4FileStream	file:
bSetDuration	lame/dshow/Encoder.h	/^    DWORD   bSetDuration;$/;"	m
bSettingsChanged	Source/OBS.h	/^    bool                bSettingsChanged, bApplySettingsAborted;$/;"	m	class:OBS
bShowFPS	Source/OBS.h	/^    bool    bShowFPS;$/;"	m	class:OBS
bShutdownEncodeThread	Source/OBS.h	/^    volatile bool bShutdownVideoThread, bShutdownEncodeThread;$/;"	m	class:OBS
bShutdownVideoThread	Source/OBS.h	/^    volatile bool bShutdownVideoThread, bShutdownEncodeThread;$/;"	m	class:OBS
bShuttingDown	Source/OBS.h	/^    bool bShuttingDown;$/;"	m	class:OBS
bSingular	OBSApi/Utility/Profiler.cpp	/^    bool bSingular;$/;"	m	struct:ProfileNodeInfo	file:
bSingularNode	OBSApi/Utility/Profiler.h	/^    bool bSingularNode;$/;"	m	class:ProfilerNode
bSizeChanging	Source/OBS.h	/^    bool    bSizeChanging;$/;"	m	class:OBS
bSmartOutput	lame/ACM/AEncodeProperties.h	/^	bool bSmartOutput;$/;"	m	class:AEncodeProperties
bStartRecordingHotkeyDown	Source/OBS.h	/^    bool bStartRecordingHotkeyDown, bStopRecordingHotkeyDown;$/;"	m	class:OBS
bStartReplayBufferHotkeyDown	Source/OBS.h	/^    bool bStartReplayBufferHotkeyDown, bStopReplayBufferHotkeyDown;$/;"	m	class:OBS
bStartStreamHotkeyDown	Source/OBS.h	/^    bool bStartStreamHotkeyDown, bStopStreamHotkeyDown;$/;"	m	class:OBS
bStartingUp	Source/OBS.h	/^    bool    bRunning, bRecording, bRecordingReplayBuffer, bRecordingOnly, bStartingUp, bStreaming, bStreamFlushed = true, bKeepRecording;$/;"	m	class:OBS
bStopRecordingHotkeyDown	Source/OBS.h	/^    bool bStartRecordingHotkeyDown, bStopRecordingHotkeyDown;$/;"	m	class:OBS
bStopReplayBufferHotkeyDown	Source/OBS.h	/^    bool bStartReplayBufferHotkeyDown, bStopReplayBufferHotkeyDown;$/;"	m	class:OBS
bStopRequested	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	/^bool bStopRequested = false;$/;"	v
bStopStreamHotkeyDown	Source/OBS.h	/^    bool bStartStreamHotkeyDown, bStopStreamHotkeyDown;$/;"	m	class:OBS
bStopping	Source/RTMPPublisher.h	/^    bool bStopping;$/;"	m	class:RTMPPublisher
bStreamEnding	Source/DelayedPublisher.cpp	/^    bool bStreamEnding, bCancelEnd, bDelayConnected;$/;"	m	class:DelayedPublisher	file:
bStreamFlushed	Source/OBS.h	/^    bool    bRunning, bRecording, bRecordingReplayBuffer, bRecordingOnly, bStartingUp, bStreaming, bStreamFlushed = true, bKeepRecording;$/;"	m	class:OBS
bStreamOnStart	Source/Main.cpp	/^bool        bStreamOnStart  = false;$/;"	v
bStreamOpened	Source/MP4FileStream.cpp	/^    bool            bStreamOpened;$/;"	m	class:MP4FileStream	file:
bStreamStarted	Source/RTMPPublisher.h	/^    bool bStreamStarted;$/;"	m	class:RTMPPublisher
bStreaming	Source/OBS.h	/^    bool    bRunning, bRecording, bRecordingReplayBuffer, bRecordingOnly, bStartingUp, bStreaming, bStreamFlushed = true, bKeepRecording;$/;"	m	class:OBS
bStretch	GraphicsCapture/GraphicsCaptureSource.h	/^    bool bCapturing, bErrorAcquiring, bFlip, bStretch, bAlphaBlend, bIgnoreAspect, bCaptureMouse;$/;"	m	class:GraphicsCaptureSource
bStrictIso	lame/Dll/BladeMP3EncDLL.h	/^			BOOL			bStrictIso;			\/\/ Use strict ISO encoding rules (TRUE\/FALSE)$/;"	m
bTargetAcquired	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	/^bool bTargetAcquired = false;$/;"	v
bTestStream	Source/OBS.h	/^    bool    bTestStream;$/;"	m	class:OBS
bThrashing	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    BOOL    bThrashing;             \/* indicates if thrashing *\/$/;"	m	struct:_D3DRESOURCESTATS
bTransitioning	Source/BitmapTransitionSource.cpp	/^    bool  bTransitioning;$/;"	m	class:BitmapTransitionSource	file:
bTransitioning	Source/OBS.h	/^    bool    bTransitioning;$/;"	m	class:OBS
bUnderline	Source/TextOutputSource.cpp	/^    bool        bBold, bItalic, bUnderline, bVertical;$/;"	m	class:TextOutputSource	file:
bUpdateTexture	Source/TextOutputSource.cpp	/^    bool        bUpdateTexture;$/;"	m	class:TextOutputSource	file:
bUse444	ObsNvenc/inc/NVENCEncoder.h	/^    bool bUse444;$/;"	m	class:NVENCEncoder
bUseAudioRender	DShowPlugin/DeviceSource.h	/^    bool            bFlipVertical, bFlipHorizontal, bDeviceHasAudio, bUsePointFiltering, bUseAudioRender;$/;"	m	class:DeviceSource
bUseBuffering	DShowPlugin/DeviceSource.h	/^    bool            bUseBuffering;$/;"	m	class:DeviceSource
bUseCBR	ObsNvenc/inc/NVENCEncoder.h	/^    bool bUseCBR;$/;"	m	class:NVENCEncoder
bUseCBR	Source/Encoder_QSV.cpp	/^    bool bUseCBR, bUseCFR;$/;"	m	class:QSVEncoder	file:
bUseCBR	Source/Encoder_x264.cpp	/^    bool bUseCBR, bUseCFR, bPadCBR;$/;"	m	class:X264Encoder	file:
bUseCFR	ObsNvenc/inc/NVENCEncoder.h	/^    bool bUseCFR;$/;"	m	class:NVENCEncoder
bUseCFR	Source/Encoder_QSV.cpp	/^    bool bUseCBR, bUseCFR;$/;"	m	class:QSVEncoder	file:
bUseCFR	Source/Encoder_x264.cpp	/^    bool bUseCBR, bUseCFR, bPadCBR;$/;"	m	class:X264Encoder	file:
bUseCFR	Source/OBS.h	/^    bool bUseCFR;$/;"	m	class:OBS
bUseChromaKey	DShowPlugin/DeviceSource.h	/^    bool            bUseChromaKey;$/;"	m	class:DeviceSource
bUseColorKey	Source/BitmapImageSource.cpp	/^    bool     bUseColorKey;$/;"	m	class:BitmapImageSource	file:
bUseColorKey	Source/DesktopImageSource.cpp	/^    bool     bUseColorKey, bUsePointFiltering;$/;"	m	class:DesktopImageSource	file:
bUseCustomResolution	DShowPlugin/DeviceSource.h	/^    BOOL            bUseCustomResolution;$/;"	m	class:DeviceSource
bUseDWMCapture	GraphicsCapture/GraphicsCaptureSource.h	/^    bool bUseDWMCapture;$/;"	m	class:GraphicsCaptureSource
bUseExtents	Source/TextOutputSource.cpp	/^    bool        bUseExtents;$/;"	m	class:TextOutputSource	file:
bUseHotkey	GraphicsCapture/GraphicsCaptureSource.h	/^    bool bUseHotkey;$/;"	m	class:GraphicsCaptureSource
bUseMultithreadedOptimizations	Source/OBS.h	/^    bool    bUseMultithreadedOptimizations;$/;"	m	class:OBS
bUseOutline	Source/TextOutputSource.cpp	/^    bool        bUseOutline;$/;"	m	class:TextOutputSource	file:
bUsePointFiltering	DShowPlugin/DeviceSource.h	/^    bool            bFlipVertical, bFlipHorizontal, bDeviceHasAudio, bUsePointFiltering, bUseAudioRender;$/;"	m	class:DeviceSource
bUsePointFiltering	Source/DesktopImageSource.cpp	/^    bool     bUseColorKey, bUsePointFiltering;$/;"	m	class:DesktopImageSource	file:
bUsePointFiltering	Source/TextOutputSource.cpp	/^    bool        bUsePointFiltering;$/;"	m	class:TextOutputSource	file:
bUseQPC	Source/MMDeviceAudioSource.cpp	/^    bool bUseQPC;$/;"	m	class:MMDeviceAudioSource	file:
bUseSharedTextures	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^BOOL                    bUseSharedTextures = FALSE;$/;"	v
bUseSingleTexture	QSVHelper/IntelSupport/include/d3d11_allocator.h	/^    bool bUseSingleTexture;$/;"	m	struct:D3D11AllocatorParams
bUseThreadedConversion	DShowPlugin/DeviceSource.h	/^    bool            bUseThreadedConversion;$/;"	m	class:DeviceSource
bUseVideoTime	Source/MMDeviceAudioSource.cpp	/^    bool bUseVideoTime;$/;"	m	class:MMDeviceAudioSource	file:
bUsing444	Source/OBS.h	/^    bool    bUsing444;$/;"	m	class:OBS
bUsingFourCC	DShowPlugin/MediaInfoStuff.h	/^    bool bUsingFourCC;$/;"	m	struct:MediaOutputInfo
bUsingPushToTalk	Source/OBS.h	/^    bool bUsingPushToTalk, bPushToTalkOn;$/;"	m	class:OBS
bValid	DShowPlugin/DShowPlugin.cpp	/^    bool bValid;$/;"	m	struct:ColorSelectionData	file:
bValid	Source/BitmapImageSource.cpp	/^    bool bValid;$/;"	m	struct:ColorSelectionData	file:
bValid	Source/DesktopImageSource.cpp	/^    bool bValid;$/;"	m	struct:ColorSelectionData	file:
bVertical	Source/TextOutputSource.cpp	/^    bool        bBold, bItalic, bUnderline, bVertical;$/;"	m	class:TextOutputSource	file:
bWindows8	OBSApi/Utility/XT_Windows.cpp	/^BOOL        bWindows8 = 0;$/;"	v
bWindows8MonitorCapture	Source/DesktopImageSource.cpp	/^    bool     bWindows8MonitorCapture;$/;"	m	class:DesktopImageSource	file:
bWrap	Source/TextOutputSource.cpp	/^    bool        bWrap;$/;"	m	class:TextOutputSource	file:
bWriteToFile	Source/OBS.h	/^    bool bWriteToFile;$/;"	m	class:OBS
bWriteVBRHeader	lame/Dll/BladeMP3EncDLL.h	/^			BOOL			bWriteVBRHeader;	\/\/ WRITE XING VBR HEADER (TRUE\/FALSE)$/;"	m
bXingFrame	lame/ACM/AEncodeProperties.h	/^	bool bXingFrame;$/;"	m	class:AEncodeProperties
b_annexb	x264/x264.h	/^    int b_annexb;               \/* if set, place start codes (4 bytes) before NAL units,$/;"	m	struct:x264_param_t
b_aud	x264/x264.h	/^    int b_aud;                  \/* generate access unit delimiters *\/$/;"	m	struct:x264_param_t
b_bluray_compat	x264/x264.h	/^    int         b_bluray_compat;$/;"	m	struct:x264_param_t
b_cabac	x264/x264.h	/^    int         b_cabac;$/;"	m	struct:x264_param_t
b_chroma_me	x264/x264.h	/^        int          b_chroma_me; \/* chroma ME for subpel and mode decision in P-frames *\/$/;"	m	struct:x264_param_t::<anonymous>
b_constrained_intra	x264/x264.h	/^    int         b_constrained_intra;$/;"	m	struct:x264_param_t
b_cpu_independent	x264/x264.h	/^    int         b_cpu_independent; \/* force canonical behavior rather than cpu-dependent optimal algorithms *\/$/;"	m	struct:x264_param_t
b_current	libsamplerate/src_sinc.c	/^	int		b_current, b_end, b_real_end, b_len ;$/;"	m	file:
b_dct_decimate	x264/x264.h	/^        int          b_dct_decimate; \/* transform coefficient thresholding on P-frames *\/$/;"	m	struct:x264_param_t::<anonymous>
b_deblocking_filter	x264/x264.h	/^    int         b_deblocking_filter;$/;"	m	struct:x264_param_t
b_deterministic	x264/x264.h	/^    int         b_deterministic; \/* whether to allow non-deterministic optimizations when threaded *\/$/;"	m	struct:x264_param_t
b_end	libsamplerate/src_sinc.c	/^	int		b_current, b_end, b_real_end, b_len ;$/;"	m	file:
b_fake_interlaced	x264/x264.h	/^    int b_fake_interlaced;$/;"	m	struct:x264_param_t
b_fast_pskip	x264/x264.h	/^        int          b_fast_pskip; \/* early SKIP detection on P-frames *\/$/;"	m	struct:x264_param_t::<anonymous>
b_filler	x264/x264.h	/^        int         b_filler;$/;"	m	struct:x264_param_t::<anonymous>
b_force_qp	x264/x264.h	/^    int b_force_qp; \/* whether to use qp vs bitrate factor *\/$/;"	m
b_full_recon	x264/x264.h	/^    int         b_full_recon;   \/* fully reconstruct frames, even when not necessary for encoding.  Implied by psz_dump_yuv *\/$/;"	m	struct:x264_param_t
b_fullrange	x264/x264.h	/^        int         b_fullrange;$/;"	m	struct:x264_param_t::<anonymous>
b_interlaced	x264/x264.h	/^    int         b_interlaced;$/;"	m	struct:x264_param_t
b_intra_refresh	x264/x264.h	/^    int         b_intra_refresh;    \/* Whether or not to use periodic intra refresh instead of IDR frames. *\/$/;"	m	struct:x264_param_t
b_keyframe	x264/x264.h	/^    int     b_keyframe;$/;"	m
b_len	libsamplerate/src_sinc.c	/^	int		b_current, b_end, b_real_end, b_len ;$/;"	m	file:
b_long_startcode	x264/x264.h	/^    int b_long_startcode;$/;"	m
b_mb_info	x264/x264.h	/^        int          b_mb_info;            \/* Use input mb_info data in x264_picture_t *\/$/;"	m	struct:x264_param_t::<anonymous>
b_mb_info_update	x264/x264.h	/^        int          b_mb_info_update; \/* Update the values in mb_info according to the results of encoding. *\/$/;"	m	struct:x264_param_t::<anonymous>
b_mb_tree	x264/x264.h	/^        int         b_mb_tree;      \/* Macroblock-tree ratecontrol. *\/$/;"	m	struct:x264_param_t::<anonymous>
b_mixed_references	x264/x264.h	/^        int          b_mixed_references; \/* allow each mb partition to have its own reference number *\/$/;"	m	struct:x264_param_t::<anonymous>
b_open_gop	x264/x264.h	/^    int         b_open_gop;$/;"	m	struct:x264_param_t
b_opencl	x264/x264.h	/^    int b_opencl;            \/* use OpenCL when available *\/$/;"	m	struct:x264_param_t
b_pic_struct	x264/x264.h	/^    int b_pic_struct;$/;"	m	struct:x264_param_t
b_psnr	x264/x264.h	/^        int          b_psnr;    \/* compute and print PSNR stats *\/$/;"	m	struct:x264_param_t::<anonymous>
b_psy	x264/x264.h	/^        int          b_psy; \/* Toggle all psy optimizations *\/$/;"	m	struct:x264_param_t::<anonymous>
b_pulldown	x264/x264.h	/^    int b_pulldown;             \/* use explicity set timebase for CFR *\/$/;"	m	struct:x264_param_t
b_real_end	libsamplerate/src_sinc.c	/^	int		b_current, b_end, b_real_end, b_len ;$/;"	m	file:
b_repeat_headers	x264/x264.h	/^    int b_repeat_headers;       \/* put SPS\/PPS before each keyframe *\/$/;"	m	struct:x264_param_t
b_sliced_threads	x264/x264.h	/^    int         b_sliced_threads;  \/* Whether to use slice-based threading. *\/$/;"	m	struct:x264_param_t
b_ssim	x264/x264.h	/^        int          b_ssim;    \/* compute and print SSIM stats *\/$/;"	m	struct:x264_param_t::<anonymous>
b_stat_read	x264/x264.h	/^        int         b_stat_read;    \/* Read stat from psz_stat_in and use it *\/$/;"	m	struct:x264_param_t::<anonymous>
b_stat_write	x264/x264.h	/^        int         b_stat_write;   \/* Enable stat writing in psz_stat_out *\/$/;"	m	struct:x264_param_t::<anonymous>
b_stitchable	x264/x264.h	/^    int b_stitchable;$/;"	m	struct:x264_param_t
b_tff	x264/x264.h	/^    int b_tff;$/;"	m	struct:x264_param_t
b_transform_8x8	x264/x264.h	/^        int          b_transform_8x8;$/;"	m	struct:x264_param_t::<anonymous>
b_vfr_input	x264/x264.h	/^    int b_vfr_input;            \/* VFR input.  If 1, use timebase and timestamps for ratecontrol purposes.$/;"	m	struct:x264_param_t
b_weighted_bipred	x264/x264.h	/^        int          b_weighted_bipred; \/* implicit weighting for B-frames *\/$/;"	m	struct:x264_param_t::<anonymous>
backgroundColor	Source/TextOutputSource.cpp	/^    DWORD       backgroundColor;$/;"	m	class:TextOutputSource	file:
backgroundOpacity	Source/TextOutputSource.cpp	/^    UINT        backgroundOpacity;$/;"	m	class:TextOutputSource	file:
background_index	Source/libnsgif.h	/^    unsigned int background_index;            \/**< index in the colour table for the background colour *\/$/;"	m	struct:gif_animation
backpred.c	libfaac/backpred.c	1;"	F
backpred.h	libfaac/backpred.h	1;"	F
bag	lame/libmp3lame/util.h	/^        int    *bag;         \/* pointer to our bag *\/$/;"	m
balance_noise	lame/libmp3lame/quantize.c	/^balance_noise(lame_internal_flags * gfc,$/;"	f	file:
bandInfo	lame/mpglib/layer3.c	/^static const struct bandInfoStruct bandInfo[9] = { $/;"	v	file:
bandInfoStruct	lame/mpglib/layer3.c	/^struct bandInfoStruct {$/;"	s	file:
bandS	libfaac/psychkni.c	/^  int bandS;$/;"	m	file:
bandWidth	libfaac/include/faaccfg.h	/^    unsigned int bandWidth;$/;"	m	struct:faacEncConfiguration
bar_asterisk	lame/frontend/brhist.c	/^    char    bar_asterisk[512 + 1]; \/* buffer filled up with a lot of '*' to print a bar     *\/$/;"	m	struct:brhist_struct	file:
bar_coded	lame/frontend/brhist.c	/^    char    bar_coded[512 + 1]; \/* buffer filled up with a lot of ' ' to print a bar     *\/$/;"	m	struct:brhist_struct	file:
bar_percent	lame/frontend/brhist.c	/^    char    bar_percent[512 + 1]; \/* buffer filled up with a lot of '%' to print a bar     *\/$/;"	m	struct:brhist_struct	file:
bar_space	lame/frontend/brhist.c	/^    char    bar_space[512 + 1]; \/* buffer filled up with a lot of ' ' to print a bar     *\/$/;"	m	struct:brhist_struct	file:
base64_encode	Source/mongoose.c	/^static void base64_encode(const unsigned char *src, int src_len, char *dst) {$/;"	f	file:
base64_encode_block	librtmp/cencode.c	/^int base64_encode_block(const char* plaintext_in, int length_in, char* code_out, base64_encodestate* state_in)$/;"	f
base64_encode_blockend	librtmp/cencode.c	/^int base64_encode_blockend(char* code_out, base64_encodestate* state_in)$/;"	f
base64_encode_value	librtmp/cencode.c	/^char base64_encode_value(char value_in)$/;"	f
base64_encodestate	librtmp/cencode.h	/^} base64_encodestate;$/;"	t
base64_encodestep	librtmp/cencode.h	/^} base64_encodestep;$/;"	t
base64_init_encodestate	librtmp/cencode.c	/^void base64_init_encodestate(base64_encodestate* state_in)$/;"	f
baseAspect	Source/BitmapTransitionSource.cpp	/^    double   baseAspect;$/;"	m	class:BitmapTransitionSource	file:
baseCRF	Source/Encoder_QSV.cpp	/^    const float baseCRF = 22.0f;$/;"	v
baseCRF	Source/Encoder_x264.cpp	/^const float baseCRF = 22.0f;$/;"	v
baseCX	Source/OBS.h	/^    UINT    baseCX,   baseCY;$/;"	m	class:OBS
baseCY	Source/OBS.h	/^    UINT    baseCX,   baseCY;$/;"	m	class:OBS
baseSize	Source/TextOutputSource.cpp	/^    Vect2       baseSize;$/;"	m	class:TextOutputSource	file:
base_allocator.cpp	QSVHelper/IntelSupport/src/base_allocator.cpp	1;"	F
base_allocator.h	QSVHelper/IntelSupport/include/base_allocator.h	1;"	F
bdirectMode	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_H264_BDIRECT_MODE            bdirectMode;                \/**< [in]: Specifies the BDirect mode. Check support for BDirect mode using ::NV_ENC_CAPS_SUPPORT_BDIRECT_MODE caps.*\/$/;"	m	struct:_NV_ENC_CONFIG_H264
be16_le	lame/misc/abx.c	/^inline unsigned short be16_le(unsigned short n)$/;"	f
beCloseStream	lame/Dll/Example.cpp	/^BECLOSESTREAM		beCloseStream=NULL;$/;"	v
beCloseStream	lame/Dll/MP3export.pas	/^Function beCloseStream(hbeStream: THBE_STREAM): BE_Err; cdecl; external 'Lame_enc.dll';$/;"	f
beCloseStream()	lame/Dll/LameDLLInterface.htm	/^<h1><a name="beCloseStream()"><font size="5">beCloseStream()<\/font><\/a>$/;"	a
beDeinitStream	lame/Dll/Example.cpp	/^BEDEINITSTREAM		beDeinitStream=NULL;$/;"	v
beDeinitStream	lame/Dll/MP3export.pas	/^Function beDeinitStream(hbeStream: THBE_STREAM; var pOutput; var pdwOutput: LongWord): BE_Err; cdecl; external 'Lame_enc.dll';$/;"	f
beDeinitStream()	lame/Dll/LameDLLInterface.htm	/^<h1><a name="beDeinitStream()"><font size="5">beDeinitStream()<\/font>$/;"	a
beEncodeChunk	lame/Dll/Example.cpp	/^BEENCODECHUNK		beEncodeChunk=NULL;$/;"	v
beEncodeChunk	lame/Dll/MP3export.pas	/^Function beEncodeChunk(hbeStream: THBE_STREAM; nSamples: LongWord; var pSample;var pOutput; var pdwOutput: LongWord): BE_Err; cdecl; external 'Lame_enc.dll';$/;"	f
beEncodeChunk	lame/Dll/MP3export.pas	/^\/\/Function beEncodeChunk(hbeStream: THBE_STREAM; nSamples: LongWord; pSample: PSmallInt;pOutput: PByte; var pdwOutput: LongWord): BE_Err; cdecl; external 'Lame_enc.dll';$/;"	f
beEncodeChunk()	lame/Dll/LameDLLInterface.htm	/^<h1><a name="beEncodeChunk()"><font size="5">beEncodeChunk()<\/font>$/;"	a
beInitStream	lame/Dll/Example.cpp	/^BEINITSTREAM		beInitStream=NULL;$/;"	v
beInitStream	lame/Dll/MP3export.pas	/^Function beInitStream(var pbeConfig: TBE_CONFIG; var dwSample: LongWord; var dwBufferSize: LongWord; var phbeStream: THBE_STREAM ): BE_Err; cdecl; external 'Lame_enc.dll';$/;"	f
beInitStream()	lame/Dll/LameDLLInterface.htm	/^<h1><a name="beInitStream()"><font size="5">beInitStream()<\/font><\/a>$/;"	a
beVersion	lame/Dll/Example.cpp	/^BEVERSION			beVersion=NULL;$/;"	v
beVersion	lame/Dll/MP3export.pas	/^Procedure beVersion(var pbeVersion: TBE_VERSION); cdecl; external 'Lame_enc.dll';$/;"	p
beVersion()	lame/Dll/LameDLLInterface.htm	/^<h1><a name="beVersion()"><font size="5">beVersion()<\/font> <\/a><\/h1>$/;"	a
beWriteInfoTag	lame/Dll/Example.cpp	/^BEWRITEINFOTAG		beWriteInfoTag=NULL;$/;"	v
beWriteVBRHeader	lame/Dll/Example.cpp	/^BEWRITEVBRHEADER	beWriteVBRHeader=NULL;$/;"	v
beWriteVBRHeader()	lame/Dll/LameDLLInterface.htm	/^<h1><a name="beWriteVBRHeader()"><font size="5">beWriteVBRHeader()<\/font>$/;"	a
begin	libmfx/include/mfx_vector.h	/^        iterator begin() const $/;"	f	class:MFX::MFXVector
beginSceneMethod	CLRHostPlugin/CLRHostPlugin/CLRImageSource.h	/^    mscorlib::_MethodInfo *beginSceneMethod;$/;"	m	class:CLRImageSource
best_huffman_divide	lame/libmp3lame/takehiro.c	/^best_huffman_divide(const lame_internal_flags * const gfc, gr_info * const gi)$/;"	f
best_scalefac_store	lame/libmp3lame/takehiro.c	/^best_scalefac_store(const lame_internal_flags * gfc,$/;"	f
beta	lame/include/lame.h	/^    int beta;                \/* 0 if not a beta version                    *\/$/;"	m
beyond	lame/libmp3lame/machine.h	163;"	d
bf_enc	librtmp/handshake.h	/^static void bf_enc(uint32_t *x, bf_key *key)$/;"	f
bf_key	librtmp/handshake.h	/^typedef struct bf_key$/;"	s
bf_key	librtmp/handshake.h	/^} bf_key;$/;"	t
bf_pinit	librtmp/handshake.h	/^static const uint32_t bf_pinit[] =$/;"	v
bf_setkey	librtmp/handshake.h	/^static void bf_setkey(const unsigned char *kp, int keybytes, bf_key *key)$/;"	f
bf_sinit	librtmp/handshake.h	/^static const uint32_t bf_sinit[][256] =$/;"	v
bframeDropThreshold	Source/RTMPPublisher.h	/^    DWORD dropThreshold, bframeDropThreshold;$/;"	m	class:RTMPPublisher
bframe_delay	QSVHelper/IPCStructs.h	/^    uint16_t bframe_delay;$/;"	m	struct:init_response
bframe_delay	Source/Encoder_QSV.cpp	/^        unsigned bframe_delay;$/;"	m	struct:<anonymous>::DTSGenerator	file:
bframes	QSVHelper/IPCStructs.h	/^    int32_t fps, keyint, bframes, width, height, max_bitrate, buffer_size;$/;"	m	struct:init_request
bframes_pyramid	Source/Encoder_QSV.cpp	/^        bool bframes_pyramid;$/;"	m	struct:<anonymous>::DTSGenerator	file:
big-endian	lame/doc/html/detailed.html	/^<a name="big-endian"><span class="hilight">--big-endian<\/span><\/a> Set the byte order to big-endian.$/;"	a
big_values	lame/libmp3lame/l3side.h	/^    int     big_values;$/;"	m
big_values	lame/libmp3lame/lame-analysis.h	/^    int     big_values[2][2];$/;"	m	struct:plotting_data
big_values	lame/mpglib/mpg123.h	/^    unsigned big_values;$/;"	m	struct:gr_info_s
bin2str	Source/mongoose.c	/^static void bin2str(char *to, const unsigned char *p, size_t len) {$/;"	f	file:
bin_PROGRAMS	lame/frontend/Makefile	/^bin_PROGRAMS = lame.exe  $/;"	m
bin_search_StepSize	lame/libmp3lame/quantize.c	/^bin_search_StepSize(lame_internal_flags * const gfc, gr_info * const cod_info,$/;"	f	file:
bindir	lame/ACM/ADbg/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	lame/ACM/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	lame/ACM/ddk/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	lame/ACM/tinyxml/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	lame/Dll/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	lame/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	lame/debian/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	lame/doc/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	lame/doc/html/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	lame/doc/man/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	lame/dshow/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	lame/frontend/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	lame/include/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	lame/libmp3lame/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	lame/libmp3lame/i386/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	lame/libmp3lame/vector/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	lame/mac/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	lame/macosx/English.lproj/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	lame/macosx/LAME.xcodeproj/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	lame/macosx/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	lame/misc/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	lame/mpglib/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	lame/vc_solution/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
binsearchDirection_t	lame/libmp3lame/quantize.c	/^} binsearchDirection_t;$/;"	t	file:
bipred8x8	x264/x264.h	/^    int bipred8x8;   \/* limit bipred to >=8x8 *\/$/;"	m
bit2byte	libfaac/bitstream.h	138;"	d
bitDiff	libfaac/frame.h	/^    int bitDiff;$/;"	m
bitRate	libfaac/include/faaccfg.h	/^    unsigned long bitRate;$/;"	m	struct:faacEncConfiguration
bitSize	OBSApi/Utility/Template.h	/^    UINT bitSize;$/;"	m	class:BitList
bitStreamSize	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t            bitStreamSize;                   \/**< [out]: Size of generated bitstream in bytes. *\/$/;"	m	struct:_NV_ENC_STAT
bit_stream_struc	lame/libmp3lame/util.h	/^    typedef struct bit_stream_struc {$/;"	s
bitcount	lame/libmp3lame/vbrquantize.c	/^bitcount(const algo_t * that)$/;"	f	file:
bitindex	lame/mpglib/mpglib.h	/^    int     bitindex;$/;"	m	struct:mpstr_tag
bitmapImage	Source/BitmapImageSource.cpp	/^    BitmapImage bitmapImage;$/;"	m	class:BitmapImageSource	file:
bitmapImages	Source/BitmapTransitionSource.cpp	/^    List<BitmapImage*> bitmapImages;$/;"	m	class:BitmapTransitionSource	file:
bitmap_callbacks	Source/BitmapImage.h	/^    gif_bitmap_callback_vt bitmap_callbacks;$/;"	m	class:BitmapImage
bitmap_callbacks	Source/libnsgif.h	/^    gif_bitmap_callback_vt bitmap_callbacks;    \/**< callbacks for bitmap functions *\/$/;"	m	struct:gif_animation
bitmap_create	Source/libnsgif.h	/^    gif_bitmap_cb_create bitmap_create;        \/**< Create a bitmap. *\/$/;"	m	struct:gif_bitmap_callback_vt
bitmap_destroy	Source/libnsgif.h	/^    gif_bitmap_cb_destroy bitmap_destroy;        \/**< Free a bitmap. *\/$/;"	m	struct:gif_bitmap_callback_vt
bitmap_get_buffer	Source/libnsgif.h	/^    gif_bitmap_cb_get_buffer bitmap_get_buffer;    \/**< Return a pointer to the pixel data in a bitmap. *\/$/;"	m	struct:gif_bitmap_callback_vt
bitmap_modified	Source/libnsgif.h	/^    gif_bitmap_cb_modified bitmap_modified;    \/**< The bitmap image has changed, so flush any persistant cache. *\/$/;"	m	struct:gif_bitmap_callback_vt
bitmap_set_opaque	Source/libnsgif.h	/^    gif_bitmap_cb_set_opaque bitmap_set_opaque;    \/**< Sets whether a bitmap should be plotted opaque. *\/$/;"	m	struct:gif_bitmap_callback_vt
bitmap_test_opaque	Source/libnsgif.h	/^    gif_bitmap_cb_test_opaque bitmap_test_opaque;    \/**< Tests whether a bitmap has an opaque alpha channel. *\/$/;"	m	struct:gif_bitmap_callback_vt
bitpressure_strategy	lame/libmp3lame/quantize.c	/^bitpressure_strategy(lame_internal_flags const *gfc,$/;"	f	file:
bitrate	lame/ACM/ACM.h	/^		unsigned int bitrate;$/;"	m	class:bitrate_item
bitrate	lame/include/lame.h	/^  int bitrate;         \/* bitrate                                        *\/$/;"	m
bitrate	lame/libmp3lame/lame-analysis.h	/^    int     framesize, stereo, js, ms_stereo, i_stereo, emph, bitrate, sampfreq, maindata;$/;"	m	struct:plotting_data
bitrate	x264/x264.h	/^    int bitrate;     \/* max bitrate (kbit\/sec) *\/$/;"	m
bitrate_blocktype_hist	lame/libmp3lame/util.h	/^        int     bitrate_blocktype_hist[16][4 + 1 + 1]; \/*norm\/start\/short\/stop\/mixed(short)\/sum *\/$/;"	m
bitrate_channelmode_hist	lame/libmp3lame/util.h	/^        int     bitrate_channelmode_hist[16][4 + 1];$/;"	m
bitrate_index	lame/libmp3lame/util.h	/^        int     bitrate_index;$/;"	m
bitrate_index	lame/mpglib/mpg123.h	/^    int     bitrate_index;$/;"	m	struct:frame
bitrate_item	lame/ACM/ACM.h	/^class bitrate_item {$/;"	c
bitrate_table	lame/ACM/ACM.h	/^	std::vector<bitrate_item> bitrate_table;$/;"	m	class:ACM
bitrate_table	lame/libmp3lame/tables.c	/^const int bitrate_table[3][16] = {$/;"	v
bits	Source/mongoose.c	/^  uint32_t bits[2];$/;"	m	struct:MD5Context	file:
bits	lame/libmp3lame/quantize_pvt.h	/^    int     bits;$/;"	m	struct:calc_noise_result_t
bits	lame/misc/ath.c	/^    int            bits;$/;"	m	file:
bits	lame/mpglib/layer2.h	/^    short   bits;$/;"	m	struct:al_table2
bits_offset	QSVHelper/IntelSupport/include/d3d11_allocator.h	/^    static const uintptr_t bits_offset = std::numeric_limits<uintptr_t>::digits - 1;$/;"	m	class:MFXReadWriteMid
bitstream	QSVHelper/Encoder.h	/^    ipc_bitstream_buff bitstream;$/;"	m	struct:Encoder
bitstream.c	lame/libmp3lame/bitstream.c	1;"	F
bitstream.c	libfaac/bitstream.c	1;"	F
bitstream.h	lame/libmp3lame/bitstream.h	1;"	F
bitstream.h	libfaac/bitstream.h	1;"	F
bitstreamBuffer	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_OUTPUT_PTR     bitstreamBuffer;             \/**< [out]: Pointer to the output bitstream buffer *\/$/;"	m	struct:_NV_ENC_CREATE_BITSTREAM_BUFFER
bitstreamBufferPtr	ObsNvenc/inc/nvEncodeAPI.h	/^    void*                   bitstreamBufferPtr;          \/**< [out]: Pointer to the generated output bitstream. Client should allocate sufficiently large buffer to hold the encoded output. Client is responsible for managing this memory. *\/$/;"	m	struct:_NV_ENC_LOCK_BITSTREAM
bitstreamBufferPtr	ObsNvenc/inc/nvEncodeAPI.h	/^    void*                 bitstreamBufferPtr;          \/**< [out]: Reserved and should not be used *\/$/;"	m	struct:_NV_ENC_CREATE_BITSTREAM_BUFFER
bitstreamRestrictionFlag	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t    bitstreamRestrictionFlag;             \/**< [in]: if set to 1, it speficies the bitstream restriction parameters are present in the bitstream.*\/$/;"	m	struct:_NV_ENC_CONFIG_H264_VUI_PARAMETERS
bitstreamSizeInBytes	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                bitstreamSizeInBytes;        \/**< [out]: Actual number of bytes generated and copied to the memory pointed by bitstreamBufferPtr. *\/$/;"	m	struct:_NV_ENC_LOCK_BITSTREAM
bitstream_info	QSVHelper/IPCStructs.h	/^struct bitstream_info$/;"	s
bitstream_num	QSVHelper/IPCStructs.h	/^    uint16_t bitstream_num,$/;"	m	struct:init_response
bitstream_size	QSVHelper/IPCStructs.h	/^    uint32_t bitstream_size,$/;"	m	struct:init_response
bitwidth	lame/doc/html/detailed.html	/^<a name="bitwidth"><span class="hilight">--bitwidth<\/span><\/a> Sets the bitwidth value$/;"	a
bkColor	OBSApi/Scene.h	/^    DWORD bkColor;$/;"	m	class:Scene
blackfilt	lame/libmp3lame/util.h	/^        sample_t *blackfilt[2 * BPC + 1];$/;"	m
blackman	lame/libmp3lame/util.c	/^blackman(FLOAT x, FLOAT fcn, int l)$/;"	f	file:
blendConvert	Source/D3D10System.cpp	/^const D3D10_BLEND blendConvert[] = {D3D10_BLEND_ZERO, D3D10_BLEND_ONE, D3D10_BLEND_SRC_COLOR, D3D10_BLEND_INV_SRC_COLOR, D3D10_BLEND_SRC_ALPHA, D3D10_BLEND_INV_SRC_ALPHA, D3D10_BLEND_DEST_COLOR, D3D10_BLEND_INV_DEST_COLOR, D3D10_BLEND_DEST_ALPHA, D3D10_BLEND_INV_DEST_ALPHA, D3D10_BLEND_BLEND_FACTOR, D3D10_BLEND_INV_BLEND_FACTOR};$/;"	v
blendState	Source/D3D10System.h	/^    ID3D10BlendState *blendState;$/;"	m	struct:SavedBlendState
blends	Source/D3D10System.h	/^    List<SavedBlendState>   blends;$/;"	m	class:D3D10System
blk	Source/mongoose.c	2888;"	d	file:
blk	Source/mongoose.c	2895;"	d	file:
blk0	Source/mongoose.c	/^static uint32_t blk0(union char64long16 *block, int i) {$/;"	f	file:
blkAlgn	lame/frontend/get_audio.c	/^    blockAlign blkAlgn;$/;"	m	struct:IFF_AIFF_struct	file:
block	librtmp/md5.h	/^	MD5_u32plus block[16];$/;"	m
blockAlign	lame/frontend/get_audio.c	/^} blockAlign;$/;"	t	file:
blockAlign_struct	lame/frontend/get_audio.c	/^typedef struct blockAlign_struct {$/;"	s	file:
blockSize	Source/DSoundAudioSource.cpp	/^    UINT blockSize;$/;"	m	class:DSoundAudioSource	file:
blockSize	lame/frontend/get_audio.c	/^    unsigned long blockSize;$/;"	m	struct:blockAlign_struct	file:
block_sf	lame/libmp3lame/vbrquantize.c	/^block_sf(algo_t * that, const FLOAT l3_xmin[SFBMAX], int vbrsf[SFBMAX], int vbrsfmin[SFBMAX])$/;"	f	file:
block_type	lame/libmp3lame/l3side.h	/^    int     block_type;$/;"	m
block_type	lame/mpglib/mpg123.h	/^    unsigned block_type;$/;"	m	struct:gr_info_s
block_type	libfaac/coder.h	/^    int block_type;$/;"	m
block_type	libfaac/psych.h	/^	int block_type;$/;"	m
blocksUsed	OBSApi/Utility/FastAlloc.cpp	/^    DWORD       blocksUsed;$/;"	m	struct:Pool	file:
blocktype	lame/libmp3lame/lame-analysis.h	/^    int     blocktype[2][2];$/;"	m	struct:plotting_data
blocktype_old	lame/libmp3lame/util.h	/^        int     blocktype_old[2];$/;"	m
blue	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    WORD                blue [256];$/;"	m	struct:_D3DGAMMARAMP
bm	lame/libmp3lame/util.h	/^        int     bm[Max(SBMAX_l,SBMAX_s)];$/;"	m
bo	lame/libmp3lame/util.h	/^        int     bo[Max(SBMAX_l,SBMAX_s)];$/;"	m
bo_weight	lame/libmp3lame/util.h	/^        FLOAT   bo_weight[Max(SBMAX_l,SBMAX_s)]; \/* band weight long scalefactor bands, at transition *\/$/;"	m
body	librtmp/md5.c	/^static void *body(MD5_CTX *ctx, void *data, unsigned long size)$/;"	f	file:
book_vector	libfaac/coder.h	/^    int book_vector[MAX_SCFAC_BANDS];$/;"	m
borderColor	OBSApi/GraphicsSystem.h	/^    Color4 borderColor;$/;"	m	struct:SamplerInfo
borderXSize	Source/OBS.h	/^    int     borderXSize, borderYSize;$/;"	m	class:OBS
borderYSize	Source/OBS.h	/^    int     borderXSize, borderYSize;$/;"	m	class:OBS
both	lame/misc/ath.c	/^    both     = 2,$/;"	e	file:
bottom	ObsNvenc/inc/nvEncodeAPI.h	/^  uint32_t bottom;                                      \/**< [in]: Y coordinate of the bottom right corner of the rectangular area to be specified. *\/$/;"	m	struct:_NVENC_RECT
bounceAddress	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.h	/^    LPVOID bounceAddress;$/;"	m	class:HookData
boxOffsets	Source/MP4FileStream.cpp	/^    List<UINT>      boxOffsets;$/;"	m	class:MP4FileStream	file:
boxVertexBuffer	Source/D3D10System.h	/^    VertexBuffer            *spriteVertexBuffer, *boxVertexBuffer;$/;"	m	class:D3D10System
brate	lame/libmp3lame/lame_global_flags.h	/^    int     brate;           \/* bitrate                                    *\/$/;"	m	struct:lame_global_struct
break_cleanup	lame/frontend/amiga_mpega.c	/^break_cleanup(void)$/;"	f	file:
brhist	lame/frontend/brhist.c	/^} brhist;$/;"	v	file:
brhist	lame/frontend/main.h	/^    int   brhist;$/;"	m	struct:UiConfig
brhist.c	lame/frontend/brhist.c	1;"	F
brhist.h	lame/frontend/brhist.h	1;"	F
brhist_disp	lame/frontend/brhist.c	/^brhist_disp(const lame_global_flags * gf)$/;"	f
brhist_disp_line	lame/frontend/brhist.c	/^brhist_disp_line(int i, int br_hist_TOT, int br_hist_LR, int full, int frames)$/;"	f	file:
brhist_init	lame/frontend/brhist.c	/^brhist_init(const lame_global_flags * gf, const int bitrate_kbps_min, const int bitrate_kbps_max)$/;"	f
brhist_init_package	lame/frontend/timestatus.c	/^brhist_init_package(lame_global_flags const* gf)$/;"	f	file:
brhist_jump_back	lame/frontend/brhist.c	/^brhist_jump_back(void)$/;"	f
brhist_struct	lame/frontend/brhist.c	/^static struct brhist_struct {$/;"	s	file:
brightness	DShowPlugin/IVideoCaptureFilter.h	/^    int                                  brightness;                        \/\/!< Brightness (0-10000)$/;"	m	struct:_VIDEO_CAPTURE_FILTER_SETTINGS
browseButton_Click	CLRBrowserSourcePlugin/Plugin/ConfigDialog.xaml.cs	/^        private void browseButton_Click(object sender, RoutedEventArgs e)$/;"	m	class:CLRBrowserSourcePlugin.ConfigDialog	file:
browseButton_Click	CLRHostPlugin/CLRCSharpSamplePlugin/SampleConfiguration.xaml.cs	/^        private void browseButton_Click(object sender, RoutedEventArgs e)$/;"	m	class:CSharpSamplePlugin.SampleConfigurationDialog	file:
browseButton_Click_1	CLRBrowserSourcePlugin/Plugin/ConfigDialog.xaml.cs	/^        private void browseButton_Click_1(object sender, RoutedEventArgs e)$/;"	m	class:CLRBrowserSourcePlugin.ConfigDialog	file:
browser	CLRBrowserSourcePlugin/Plugin/BrowserSource.cs	/^        private BrowserWrapper browser;$/;"	f	class:CLRBrowserSourcePlugin.BrowserSource	file:
browser	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserWrapper.cs	/^        private CefBrowser browser;$/;"	f	class:Browser.BrowserWrapper	file:
browserClient	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserWrapper.cs	/^        private BrowserClient browserClient;$/;"	f	class:Browser.BrowserWrapper	file:
browserConfig	CLRBrowserSourcePlugin/Plugin/BrowserSource.cs	/^        private BrowserConfig browserConfig;$/;"	f	class:CLRBrowserSourcePlugin.BrowserSource	file:
browserLock	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserWrapper.cs	/^        private object browserLock = new object();$/;"	f	class:Browser.BrowserWrapper	file:
browserMap	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserManager.cs	/^        private Dictionary<int, BrowserWrapper> browserMap;$/;"	f	class:Browser.BrowserManager	file:
browserMapLock	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserManager.cs	/^        private Object browserMapLock = new Object();$/;"	f	class:Browser.BrowserManager	file:
browserProcessHandler	CLRBrowserSourcePlugin/Plugin/Shared/BrowserApp.cs	/^        private BrowserProcessHandler browserProcessHandler;$/;"	f	class:Shared.BrowserApp	file:
bs	QSVHelper/SupportStuff.h	/^    mfxBitstream bs;$/;"	m	struct:encode_task
bs	Source/Encoder_QSV.cpp	/^        mfxBitstream bs;$/;"	m	struct:QSVEncoder::encode_task	file:
bs	lame/libmp3lame/util.h	/^        Bit_stream_struc bs;$/;"	m	struct:lame_internal_flags
bs_buff	Source/Encoder_QSV.cpp	/^    ipc_bitstream_buff bs_buff;$/;"	m	class:QSVEncoder	file:
bs_info	QSVHelper/Encoder.h	/^    ipc_bitstream_info bs_info;$/;"	m	struct:Encoder
bs_info	Source/Encoder_QSV.cpp	/^    ipc_bitstream_info bs_info;$/;"	m	class:QSVEncoder	file:
bsize	lame/mpglib/mpglib.h	/^    int     bsize;$/;"	m	struct:mpstr_tag
bsnum	lame/mpglib/mpglib.h	/^    int     bsnum;$/;"	m	struct:mpstr_tag
bsspace	lame/mpglib/mpglib.h	/^    unsigned char bsspace[2][MAXFRAMESIZE + 1024]; \/* bit stream space used ???? *\/ \/* MAXFRAMESIZE *\/$/;"	m	struct:mpstr_tag
btReserved	lame/Dll/BladeMP3EncDLL.h	/^			BYTE			btReserved[255-4*sizeof(DWORD) - sizeof( WORD )];$/;"	m
btReserved	lame/Dll/BladeMP3EncDLL.h	/^	BYTE	btReserved[125];$/;"	m
buf	Source/libnsgif.h	/^    unsigned char buf[4];$/;"	m	struct:gif_animation
buf	Source/mongoose.c	/^  char *buf;$/;"	m	struct:iobuf	file:
buf	Source/mongoose.c	/^  char buf[CGI_ENVIRONMENT_SIZE];       \/\/ Environment buffer$/;"	m	struct:cgi_env_block	file:
buf	Source/mongoose.c	/^  uint32_t buf[4];$/;"	m	struct:MD5Context	file:
buf	lame/libmp3lame/util.h	/^            char    buf[MAX_HEADER_LEN];$/;"	m
buf	lame/libmp3lame/util.h	/^        unsigned char *buf;  \/* bit stream buffer *\/$/;"	m	struct:bit_stream_struc
buf	lame/mpglib/mpglib.h	/^    struct buf *buf;$/;"	m	struct:framebuf
buf	lame/mpglib/mpglib.h	/^struct buf {$/;"	s
buf	librtmp/rtmp.h	/^        char *buf;$/;"	m	struct:RTMP_READ
buf_bit_idx	lame/libmp3lame/util.h	/^        int     buf_bit_idx; \/* pointer to top bit of top byte in buffer *\/$/;"	m	struct:bit_stream_struc
buf_byte_idx	lame/libmp3lame/util.h	/^        int     buf_byte_idx; \/* pointer to top byte in buffer *\/$/;"	m	struct:bit_stream_struc
buf_size	lame/libmp3lame/util.h	/^        int     buf_size;    \/* size of buffer (in number of bytes) *\/$/;"	m	struct:bit_stream_struc
buffer	OBSApi/Utility/Template.h	/^    const LPBYTE buffer;$/;"	m	class:BufferInputSerializer
buffer	Source/DataPacketHelpers.h	/^    std::vector<BYTE> buffer;$/;"	m	struct:BufferedDataPacket
buffer	Source/mongoose.c	/^    unsigned char buffer[64];$/;"	m	file:
buffer	libfaac/coder.h	/^    double *buffer;$/;"	m
buffer	librtmp/md5.h	/^	unsigned char buffer[64];$/;"	m
buffer	libsamplerate/src_sinc.c	/^	float	buffer [] ;$/;"	m	file:
buffer.cpp	minhook/src/buffer.cpp	1;"	F
buffer.h	minhook/src/buffer.h	1;"	F
bufferDataPtr	ObsNvenc/inc/nvEncodeAPI.h	/^    void*                     bufferDataPtr;             \/**< [out]: Pointed to the locked input buffer data. Client can only access input buffer using the \\p bufferDataPtr. *\/$/;"	m	struct:_NV_ENC_LOCK_INPUT_BUFFER
bufferFmt	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_BUFFER_FORMAT                        bufferFmt;                      \/**< [in]: Specifies the input buffer format. *\/$/;"	m	struct:_NV_ENC_PIC_PARAMS
bufferFmt	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_BUFFER_FORMAT      bufferFmt;               \/**< [in]: Input buffer format *\/$/;"	m	struct:_NV_ENC_CREATE_INPUT_BUFFER
bufferFormat	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_BUFFER_FORMAT        bufferFormat;                   \/**< [in]: Buffer format of resource to be registered. *\/$/;"	m	struct:_NV_ENC_REGISTER_RESOURCE
bufferPos	OBSApi/Utility/XFile.h	/^    DWORD bufferPos, bufferSize;$/;"	m	class:XFileInputSerializer
bufferPos	OBSApi/Utility/XFile.h	/^    DWORD bufferPos;$/;"	m	class:XFileOutputSerializer
bufferSize	OBSApi/Utility/Template.h	/^    DWORD bufferSize;$/;"	m	class:BufferInputSerializer
bufferSize	OBSApi/Utility/XFile.h	/^    DWORD bufferPos, bufferSize;$/;"	m	class:XFileInputSerializer
bufferSize	OBSApi/Utility/XFile.h	/^    DWORD bufferSize;$/;"	m	class:XFileOutputSerializer
bufferSize	ObsNvenc/inc/NVENCEncoder.h	/^    int bufferSize;$/;"	m	class:NVENCEncoder
bufferSize	Source/DSoundAudioSource.cpp	/^    UINT bufferSize;$/;"	m	class:DSoundAudioSource	file:
bufferTime	DShowPlugin/DeviceSource.h	/^    UINT            bufferTime;				\/\/ 100-nsec units (same as REFERENCE_TIME)$/;"	m	class:DeviceSource
buffer_constraint	lame/include/lame.h	/^} buffer_constraint;$/;"	t
buffer_constraint	lame/libmp3lame/util.h	/^        int     buffer_constraint;  \/* enforce ISO spec as much as possible   *\/$/;"	m
buffer_constraint_e	lame/include/lame.h	/^typedef enum buffer_constraint_e {$/;"	g
buffer_position	Source/libnsgif.h	/^    unsigned int buffer_position;            \/**< current index into GIF data *\/$/;"	m	struct:gif_animation
buffer_size	QSVHelper/IPCStructs.h	/^    int32_t fps, keyint, bframes, width, height, max_bitrate, buffer_size;$/;"	m	struct:init_request
buffer_size	Source/libnsgif.h	/^    unsigned int buffer_size;            \/**< total number of bytes of GIF data available *\/$/;"	m	struct:gif_animation
bufferedAudioTimes	Source/OBS.h	/^    CircularList<QWORD> bufferedAudioTimes;$/;"	m	class:OBS
bufferedPackets	Source/RTMPPublisher.h	/^    List<TimedPacket> bufferedPackets;$/;"	m	class:RTMPPublisher
bufferedTimes	Source/OBS.h	/^    CircularList<UINT> bufferedTimes;$/;"	m	class:OBS
bufferedTimestamps	Source/Encoder_AAC.cpp	/^    List<QWORD> bufferedTimestamps;$/;"	m	class:AACEncoder	file:
bufferedTimestamps	Source/Encoder_MP3.cpp	/^    List<QWORD> bufferedTimestamps;$/;"	m	class:MP3Encoder	file:
bufferedVideo	Source/OBS.h	/^    List<VideoSegment> bufferedVideo;$/;"	m	class:OBS
buffered_packets	Source/ReplayBuffer.cpp	/^    packet_vec_t buffered_packets;$/;"	m	struct:RecordingHelper	file:
bufferingTime	Source/OBS.h	/^    int bufferingTime;$/;"	m	class:OBS
buflen	librtmp/rtmp.h	/^        unsigned int buflen;$/;"	m	struct:RTMP_READ
bufpos	librtmp/rtmp.h	/^        char *bufpos;$/;"	m	struct:RTMP_READ
build	lame/ACM/ADbg/Makefile	/^build = x86_64-pc-mingw32$/;"	m
build	lame/ACM/Makefile	/^build = x86_64-pc-mingw32$/;"	m
build	lame/ACM/ddk/Makefile	/^build = x86_64-pc-mingw32$/;"	m
build	lame/ACM/tinyxml/Makefile	/^build = x86_64-pc-mingw32$/;"	m
build	lame/Dll/Makefile	/^build = x86_64-pc-mingw32$/;"	m
build	lame/Makefile	/^build = x86_64-pc-mingw32$/;"	m
build	lame/debian/Makefile	/^build = x86_64-pc-mingw32$/;"	m
build	lame/doc/Makefile	/^build = x86_64-pc-mingw32$/;"	m
build	lame/doc/html/Makefile	/^build = x86_64-pc-mingw32$/;"	m
build	lame/doc/man/Makefile	/^build = x86_64-pc-mingw32$/;"	m
build	lame/dshow/Makefile	/^build = x86_64-pc-mingw32$/;"	m
build	lame/frontend/Makefile	/^build = x86_64-pc-mingw32$/;"	m
build	lame/include/Makefile	/^build = x86_64-pc-mingw32$/;"	m
build	lame/libmp3lame/Makefile	/^build = x86_64-pc-mingw32$/;"	m
build	lame/libmp3lame/i386/Makefile	/^build = x86_64-pc-mingw32$/;"	m
build	lame/libmp3lame/vector/Makefile	/^build = x86_64-pc-mingw32$/;"	m
build	lame/mac/Makefile	/^build = x86_64-pc-mingw32$/;"	m
build	lame/macosx/English.lproj/Makefile	/^build = x86_64-pc-mingw32$/;"	m
build	lame/macosx/LAME.xcodeproj/Makefile	/^build = x86_64-pc-mingw32$/;"	m
build	lame/macosx/Makefile	/^build = x86_64-pc-mingw32$/;"	m
build	lame/misc/Makefile	/^build = x86_64-pc-mingw32$/;"	m
build	lame/mpglib/Makefile	/^build = x86_64-pc-mingw32$/;"	m
build	lame/vc_solution/Makefile	/^build = x86_64-pc-mingw32$/;"	m
build_alias	lame/ACM/ADbg/Makefile	/^build_alias = x86_64-pc-mingw32$/;"	m
build_alias	lame/ACM/Makefile	/^build_alias = x86_64-pc-mingw32$/;"	m
build_alias	lame/ACM/ddk/Makefile	/^build_alias = x86_64-pc-mingw32$/;"	m
build_alias	lame/ACM/tinyxml/Makefile	/^build_alias = x86_64-pc-mingw32$/;"	m
build_alias	lame/Dll/Makefile	/^build_alias = x86_64-pc-mingw32$/;"	m
build_alias	lame/Makefile	/^build_alias = x86_64-pc-mingw32$/;"	m
build_alias	lame/debian/Makefile	/^build_alias = x86_64-pc-mingw32$/;"	m
build_alias	lame/doc/Makefile	/^build_alias = x86_64-pc-mingw32$/;"	m
build_alias	lame/doc/html/Makefile	/^build_alias = x86_64-pc-mingw32$/;"	m
build_alias	lame/doc/man/Makefile	/^build_alias = x86_64-pc-mingw32$/;"	m
build_alias	lame/dshow/Makefile	/^build_alias = x86_64-pc-mingw32$/;"	m
build_alias	lame/frontend/Makefile	/^build_alias = x86_64-pc-mingw32$/;"	m
build_alias	lame/include/Makefile	/^build_alias = x86_64-pc-mingw32$/;"	m
build_alias	lame/libmp3lame/Makefile	/^build_alias = x86_64-pc-mingw32$/;"	m
build_alias	lame/libmp3lame/i386/Makefile	/^build_alias = x86_64-pc-mingw32$/;"	m
build_alias	lame/libmp3lame/vector/Makefile	/^build_alias = x86_64-pc-mingw32$/;"	m
build_alias	lame/mac/Makefile	/^build_alias = x86_64-pc-mingw32$/;"	m
build_alias	lame/macosx/English.lproj/Makefile	/^build_alias = x86_64-pc-mingw32$/;"	m
build_alias	lame/macosx/LAME.xcodeproj/Makefile	/^build_alias = x86_64-pc-mingw32$/;"	m
build_alias	lame/macosx/Makefile	/^build_alias = x86_64-pc-mingw32$/;"	m
build_alias	lame/misc/Makefile	/^build_alias = x86_64-pc-mingw32$/;"	m
build_alias	lame/mpglib/Makefile	/^build_alias = x86_64-pc-mingw32$/;"	m
build_alias	lame/vc_solution/Makefile	/^build_alias = x86_64-pc-mingw32$/;"	m
build_cpu	lame/ACM/ADbg/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	lame/ACM/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	lame/ACM/ddk/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	lame/ACM/tinyxml/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	lame/Dll/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	lame/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	lame/debian/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	lame/doc/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	lame/doc/html/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	lame/doc/man/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	lame/dshow/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	lame/frontend/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	lame/include/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	lame/libmp3lame/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	lame/libmp3lame/i386/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	lame/libmp3lame/vector/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	lame/mac/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	lame/macosx/English.lproj/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	lame/macosx/LAME.xcodeproj/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	lame/macosx/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	lame/misc/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	lame/mpglib/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	lame/vc_solution/Makefile	/^build_cpu = x86_64$/;"	m
build_os	lame/ACM/ADbg/Makefile	/^build_os = mingw32$/;"	m
build_os	lame/ACM/Makefile	/^build_os = mingw32$/;"	m
build_os	lame/ACM/ddk/Makefile	/^build_os = mingw32$/;"	m
build_os	lame/ACM/tinyxml/Makefile	/^build_os = mingw32$/;"	m
build_os	lame/Dll/Makefile	/^build_os = mingw32$/;"	m
build_os	lame/Makefile	/^build_os = mingw32$/;"	m
build_os	lame/debian/Makefile	/^build_os = mingw32$/;"	m
build_os	lame/doc/Makefile	/^build_os = mingw32$/;"	m
build_os	lame/doc/html/Makefile	/^build_os = mingw32$/;"	m
build_os	lame/doc/man/Makefile	/^build_os = mingw32$/;"	m
build_os	lame/dshow/Makefile	/^build_os = mingw32$/;"	m
build_os	lame/frontend/Makefile	/^build_os = mingw32$/;"	m
build_os	lame/include/Makefile	/^build_os = mingw32$/;"	m
build_os	lame/libmp3lame/Makefile	/^build_os = mingw32$/;"	m
build_os	lame/libmp3lame/i386/Makefile	/^build_os = mingw32$/;"	m
build_os	lame/libmp3lame/vector/Makefile	/^build_os = mingw32$/;"	m
build_os	lame/mac/Makefile	/^build_os = mingw32$/;"	m
build_os	lame/macosx/English.lproj/Makefile	/^build_os = mingw32$/;"	m
build_os	lame/macosx/LAME.xcodeproj/Makefile	/^build_os = mingw32$/;"	m
build_os	lame/macosx/Makefile	/^build_os = mingw32$/;"	m
build_os	lame/misc/Makefile	/^build_os = mingw32$/;"	m
build_os	lame/mpglib/Makefile	/^build_os = mingw32$/;"	m
build_os	lame/vc_solution/Makefile	/^build_os = mingw32$/;"	m
build_triplet	lame/ACM/ADbg/Makefile	/^build_triplet = x86_64-pc-mingw32$/;"	m
build_triplet	lame/ACM/Makefile	/^build_triplet = x86_64-pc-mingw32$/;"	m
build_triplet	lame/ACM/ddk/Makefile	/^build_triplet = x86_64-pc-mingw32$/;"	m
build_triplet	lame/ACM/tinyxml/Makefile	/^build_triplet = x86_64-pc-mingw32$/;"	m
build_triplet	lame/Dll/Makefile	/^build_triplet = x86_64-pc-mingw32$/;"	m
build_triplet	lame/Makefile	/^build_triplet = x86_64-pc-mingw32$/;"	m
build_triplet	lame/debian/Makefile	/^build_triplet = x86_64-pc-mingw32$/;"	m
build_triplet	lame/doc/Makefile	/^build_triplet = x86_64-pc-mingw32$/;"	m
build_triplet	lame/doc/html/Makefile	/^build_triplet = x86_64-pc-mingw32$/;"	m
build_triplet	lame/doc/man/Makefile	/^build_triplet = x86_64-pc-mingw32$/;"	m
build_triplet	lame/dshow/Makefile	/^build_triplet = x86_64-pc-mingw32$/;"	m
build_triplet	lame/frontend/Makefile	/^build_triplet = x86_64-pc-mingw32$/;"	m
build_triplet	lame/include/Makefile	/^build_triplet = x86_64-pc-mingw32$/;"	m
build_triplet	lame/libmp3lame/Makefile	/^build_triplet = x86_64-pc-mingw32$/;"	m
build_triplet	lame/libmp3lame/i386/Makefile	/^build_triplet = x86_64-pc-mingw32$/;"	m
build_triplet	lame/libmp3lame/vector/Makefile	/^build_triplet = x86_64-pc-mingw32$/;"	m
build_triplet	lame/mac/Makefile	/^build_triplet = x86_64-pc-mingw32$/;"	m
build_triplet	lame/macosx/English.lproj/Makefile	/^build_triplet = x86_64-pc-mingw32$/;"	m
build_triplet	lame/macosx/LAME.xcodeproj/Makefile	/^build_triplet = x86_64-pc-mingw32$/;"	m
build_triplet	lame/macosx/Makefile	/^build_triplet = x86_64-pc-mingw32$/;"	m
build_triplet	lame/misc/Makefile	/^build_triplet = x86_64-pc-mingw32$/;"	m
build_triplet	lame/mpglib/Makefile	/^build_triplet = x86_64-pc-mingw32$/;"	m
build_triplet	lame/vc_solution/Makefile	/^build_triplet = x86_64-pc-mingw32$/;"	m
build_vendor	lame/ACM/ADbg/Makefile	/^build_vendor = pc$/;"	m
build_vendor	lame/ACM/Makefile	/^build_vendor = pc$/;"	m
build_vendor	lame/ACM/ddk/Makefile	/^build_vendor = pc$/;"	m
build_vendor	lame/ACM/tinyxml/Makefile	/^build_vendor = pc$/;"	m
build_vendor	lame/Dll/Makefile	/^build_vendor = pc$/;"	m
build_vendor	lame/Makefile	/^build_vendor = pc$/;"	m
build_vendor	lame/debian/Makefile	/^build_vendor = pc$/;"	m
build_vendor	lame/doc/Makefile	/^build_vendor = pc$/;"	m
build_vendor	lame/doc/html/Makefile	/^build_vendor = pc$/;"	m
build_vendor	lame/doc/man/Makefile	/^build_vendor = pc$/;"	m
build_vendor	lame/dshow/Makefile	/^build_vendor = pc$/;"	m
build_vendor	lame/frontend/Makefile	/^build_vendor = pc$/;"	m
build_vendor	lame/include/Makefile	/^build_vendor = pc$/;"	m
build_vendor	lame/libmp3lame/Makefile	/^build_vendor = pc$/;"	m
build_vendor	lame/libmp3lame/i386/Makefile	/^build_vendor = pc$/;"	m
build_vendor	lame/libmp3lame/vector/Makefile	/^build_vendor = pc$/;"	m
build_vendor	lame/mac/Makefile	/^build_vendor = pc$/;"	m
build_vendor	lame/macosx/English.lproj/Makefile	/^build_vendor = pc$/;"	m
build_vendor	lame/macosx/LAME.xcodeproj/Makefile	/^build_vendor = pc$/;"	m
build_vendor	lame/macosx/Makefile	/^build_vendor = pc$/;"	m
build_vendor	lame/misc/Makefile	/^build_vendor = pc$/;"	m
build_vendor	lame/mpglib/Makefile	/^build_vendor = pc$/;"	m
build_vendor	lame/vc_solution/Makefile	/^build_vendor = pc$/;"	m
builddir	lame/ACM/ADbg/Makefile	/^builddir = .$/;"	m
builddir	lame/ACM/Makefile	/^builddir = .$/;"	m
builddir	lame/ACM/ddk/Makefile	/^builddir = .$/;"	m
builddir	lame/ACM/tinyxml/Makefile	/^builddir = .$/;"	m
builddir	lame/Dll/Makefile	/^builddir = .$/;"	m
builddir	lame/Makefile	/^builddir = .$/;"	m
builddir	lame/debian/Makefile	/^builddir = .$/;"	m
builddir	lame/doc/Makefile	/^builddir = .$/;"	m
builddir	lame/doc/html/Makefile	/^builddir = .$/;"	m
builddir	lame/doc/man/Makefile	/^builddir = .$/;"	m
builddir	lame/dshow/Makefile	/^builddir = .$/;"	m
builddir	lame/frontend/Makefile	/^builddir = .$/;"	m
builddir	lame/include/Makefile	/^builddir = .$/;"	m
builddir	lame/libmp3lame/Makefile	/^builddir = .$/;"	m
builddir	lame/libmp3lame/i386/Makefile	/^builddir = .$/;"	m
builddir	lame/libmp3lame/vector/Makefile	/^builddir = .$/;"	m
builddir	lame/mac/Makefile	/^builddir = .$/;"	m
builddir	lame/macosx/English.lproj/Makefile	/^builddir = .$/;"	m
builddir	lame/macosx/LAME.xcodeproj/Makefile	/^builddir = .$/;"	m
builddir	lame/macosx/Makefile	/^builddir = .$/;"	m
builddir	lame/misc/Makefile	/^builddir = .$/;"	m
builddir	lame/mpglib/Makefile	/^builddir = .$/;"	m
builddir	lame/vc_solution/Makefile	/^builddir = .$/;"	m
busy	ObsNvenc/inc/NVENCEncoder.h	/^    bool busy;$/;"	m	struct:NVENCEncoderOutputSurface
bv_scf	lame/libmp3lame/util.h	/^        char    bv_scf[576];$/;"	m
bwbase	libfaac/frame.c	/^static const int bwbase = 16000;$/;"	v	file:
bwfac	libfaac/frame.c	/^static const double bwfac = 0.45;$/;"	v	file:
bwmult	libfaac/frame.c	/^static const int bwmult = 120;$/;"	v	file:
bwpInfo	libfaac/coder.h	/^    BwpInfo bwpInfo;$/;"	m
byAlphaLevel	lame/Dll/BladeMP3EncDLL.h	/^	BYTE	byAlphaLevel;$/;"	m
byBetaLevel	lame/Dll/BladeMP3EncDLL.h	/^	BYTE	byBetaLevel;$/;"	m
byDLLMajorVersion	lame/Dll/BladeMP3EncDLL.h	/^	BYTE	byDLLMajorVersion;$/;"	m
byDLLMinorVersion	lame/Dll/BladeMP3EncDLL.h	/^	BYTE	byDLLMinorVersion;$/;"	m
byDay	lame/Dll/BladeMP3EncDLL.h	/^	BYTE	byDay;$/;"	m
byEncodingMethod	lame/Dll/BladeMP3EncDLL.h	/^			BYTE	byEncodingMethod;$/;"	m
byMMXEnabled	lame/Dll/BladeMP3EncDLL.h	/^	BYTE	byMMXEnabled;$/;"	m
byMajorVersion	lame/Dll/BladeMP3EncDLL.h	/^	BYTE	byMajorVersion;$/;"	m
byMinorVersion	lame/Dll/BladeMP3EncDLL.h	/^	BYTE	byMinorVersion;$/;"	m
byMode	lame/Dll/BladeMP3EncDLL.h	/^			BYTE	byMode;			\/\/ BE_MP3_MODE_STEREO, BE_MP3_MODE_DUALCHANNEL, BE_MP3_MODE_MONO$/;"	m
byMode	lame/Dll/BladeMP3EncDLL.h	/^			BYTE	byMode;$/;"	m
byMonth	lame/Dll/BladeMP3EncDLL.h	/^	BYTE	byMonth;$/;"	m
byteReverse	Source/mongoose.c	/^static void byteReverse(unsigned char *buf, unsigned longs) {$/;"	f	file:
bytes	lame/libmp3lame/VbrTag.h	/^    int     bytes;           \/* total bit stream bytes from Vbr header data *\/$/;"	m
bytes.h	librtmp/bytes.h	1;"	F
bytesPerSec	Source/OBS.h	/^    DWORD bytesPerSec;$/;"	m	class:OBS
bytesPerSec	Source/OBS.h	/^    UINT bytesPerSec;$/;"	m	struct:StatusBarDrawData
bytesSent	Source/NullOutput.cpp	/^    QWORD bytesSent;$/;"	m	class:NullNetwork	file:
bytesSent	Source/RTMPPublisher.h	/^    QWORD bytesSent;$/;"	m	class:RTMPPublisher
bytesTotal	OBSApi/Utility/FastAlloc.cpp	/^    size_t      bytesTotal;$/;"	m	struct:Pool	file:
c	Source/mongoose.c	/^union char64long16 { unsigned char c[64]; uint32_t l[16]; };$/;"	m	union:char64long16	file:
c	lame/doc/html/detailed.html	/^<a name="c"><span class="hilight">-c<\/span><\/a> copyright flag   $/;"	a
c	librtmp/md5.h	/^	MD5_u32plus a, b, c, d;$/;"	m
cPlatform	libmfx/src/mfx_dispatcher_trace.cpp	/^char cPlatform[] = "x64";$/;"	v
c_chunk	librtmp/rtmp.h	/^        char *c_chunk;$/;"	m	struct:RTMPChunk
c_chunkSize	librtmp/rtmp.h	/^        int c_chunkSize;$/;"	m	struct:RTMPChunk
c_header	librtmp/rtmp.h	/^        char c_header[RTMP_MAX_HEADER_SIZE];$/;"	m	struct:RTMPChunk
c_headerSize	librtmp/rtmp.h	/^        int c_headerSize;$/;"	m	struct:RTMPChunk
c_main	lame/frontend/main.c	/^c_main(int argc, char *argv[])$/;"	f	file:
ca	lame/libmp3lame/newmdct.c	403;"	d	file:
cache	OBSApi/Utility/XTLocalization.h	/^    LocaleStringCache cache;$/;"	m	class:LocaleStringLookup
calcEndPadding	lame/frontend/timestatus.c	/^unsigned long calcEndPadding(unsigned long samples, int pcm_samples_per_frame)$/;"	f	file:
calcFrameLength	lame/libmp3lame/bitstream.c	/^calcFrameLength(SessionConfig_t const *const cfg, int kbps, int pad)$/;"	f	file:
calcNeeded	lame/libmp3lame/lame.c	/^calcNeeded(SessionConfig_t const * cfg)$/;"	f	file:
calcNumBlocks	lame/frontend/timestatus.c	/^unsigned long calcNumBlocks(unsigned long samples, int pcm_samples_per_frame)$/;"	f	file:
calc_CRC	libfaac/bitstream.c	/^static void calc_CRC(BitStream *bitStream, int len)$/;"	f	file:
calc_energy	lame/libmp3lame/psymodel.c	/^calc_energy(PsyConst_CB2SB_t const *l, FLOAT const *fftenergy, FLOAT * eb, FLOAT * max, FLOAT * avg)$/;"	f	file:
calc_mask_index_l	lame/libmp3lame/psymodel.c	/^calc_mask_index_l(lame_internal_flags const *gfc, FLOAT const *max,$/;"	f	file:
calc_noise	lame/libmp3lame/quantize_pvt.c	/^calc_noise(gr_info const *const cod_info,$/;"	f
calc_noise_cache	lame/libmp3lame/vbrquantize.c	/^struct calc_noise_cache {$/;"	s	file:
calc_noise_cache_t	lame/libmp3lame/vbrquantize.c	/^typedef struct calc_noise_cache calc_noise_cache_t;$/;"	t	file:
calc_noise_core_c	lame/libmp3lame/quantize_pvt.c	/^calc_noise_core_c(const gr_info * const cod_info, int *startline, int l, FLOAT step)$/;"	f	file:
calc_noise_data	lame/libmp3lame/quantize_pvt.h	/^} calc_noise_data;$/;"	t
calc_noise_data_t	lame/libmp3lame/quantize_pvt.h	/^typedef struct calc_noise_data_t {$/;"	s
calc_noise_result	lame/libmp3lame/quantize_pvt.h	/^} calc_noise_result;$/;"	t
calc_noise_result_t	lame/libmp3lame/quantize_pvt.h	/^typedef struct calc_noise_result_t {$/;"	s
calc_output_hex	libsamplerate/src_sinc.c	/^calc_output_hex (SINC_FILTER *filter, increment_t increment, increment_t start_filter_index, double scale, float * output)$/;"	f	file:
calc_output_multi	libsamplerate/src_sinc.c	/^calc_output_multi (SINC_FILTER *filter, increment_t increment, increment_t start_filter_index, int channels, double scale, float * output)$/;"	f	file:
calc_output_quad	libsamplerate/src_sinc.c	/^calc_output_quad (SINC_FILTER *filter, increment_t increment, increment_t start_filter_index, double scale, float * output)$/;"	f	file:
calc_output_single	libsamplerate/src_sinc.c	/^calc_output_single (SINC_FILTER *filter, increment_t increment, increment_t start_filter_index)$/;"	f	file:
calc_output_stereo	libsamplerate/src_sinc.c	/^calc_output_stereo (SINC_FILTER *filter, increment_t increment, increment_t start_filter_index, double scale, float * output)$/;"	f	file:
calc_scalefac	lame/libmp3lame/vbrquantize.c	/^calc_scalefac(FLOAT l3_xmin, int bw)$/;"	f	file:
calc_sfb_noise_x34	lame/libmp3lame/vbrquantize.c	/^calc_sfb_noise_x34(const FLOAT * xr, const FLOAT * xr34, unsigned int bw, uint8_t sf)$/;"	f	file:
calc_target_bits	lame/libmp3lame/quantize.c	/^calc_target_bits(lame_internal_flags * gfc,$/;"	f	file:
calc_true_index	lame/misc/abx.c	/^size_t  calc_true_index ( size_t index, size_t start, size_t stop )$/;"	f
calc_xmin	lame/libmp3lame/quantize_pvt.c	/^calc_xmin(lame_internal_flags const *gfc,$/;"	f
calculateProfileData	OBSApi/Utility/Profiler.cpp	/^    void calculateProfileData(int rootCallCount)$/;"	f	struct:ProfileNodeInfo
calculate_index	lame/frontend/brhist.c	/^calculate_index(const int *const array, const int len, const int value)$/;"	f	file:
callAudioTable	libmfx/include/mfx_dispatcher.h	/^    mfxFunctionPointer callAudioTable[eAudioFuncTotal];$/;"	m	struct:MFX_DISP_HANDLE
callTable	libmfx/include/mfx_dispatcher.h	/^    mfxFunctionPointer callTable[eVideoFuncTotal];$/;"	m	struct:MFX_DISP_HANDLE
call_http_client_handler	Source/mongoose.c	/^static void call_http_client_handler(struct connection *conn) {$/;"	f	file:
call_request_handler	Source/mongoose.c	/^static int call_request_handler(struct connection *conn) {$/;"	f	file:
call_request_handler_if_data_is_buffered	Source/mongoose.c	/^static void call_request_handler_if_data_is_buffered(struct connection *conn) {$/;"	f	file:
call_user	Source/mongoose.c	/^static int call_user(struct connection *conn, enum mg_event ev) {$/;"	f	file:
callback	Source/mongoose.c	/^  ns_callback_t callback;     \/\/ Event handler function$/;"	m	struct:ns_connection	file:
callback	Source/mongoose.c	/^  ns_callback_t callback;$/;"	m	struct:ctl_msg	file:
callback_func	libsamplerate/common.h	/^	src_callback_t	callback_func ;$/;"	m	struct:SRC_PRIVATE_tag
callback_param	Source/mongoose.h	/^  void *callback_param;$/;"	m	struct:mg_connection
calloc	lame/config.h	92;"	d
calloc	lame/configMS.h	92;"	d
canRecord	Source/OBS.h	/^    bool    canRecord;$/;"	m	class:OBS
cancelButton_Click	CLRBrowserSourcePlugin/Plugin/ConfigDialog.xaml.cs	/^        private void cancelButton_Click(object sender, RoutedEventArgs e)$/;"	m	class:CLRBrowserSourcePlugin.ConfigDialog	file:
cancelButton_Click	CLRHostPlugin/CLRCSharpSamplePlugin/SampleConfiguration.xaml.cs	/^        private void cancelButton_Click(object sender, RoutedEventArgs e)$/;"	m	class:CSharpSamplePlugin.SampleConfigurationDialog	file:
cancelSettingsMethod	CLRHostPlugin/CLRHostPlugin/CLRSettingsPane.h	/^    mscorlib::_MethodInfo *cancelSettingsMethod;$/;"	m	class:CLRSettingsPane
capabilities	Source/RTMPStuff.h	/^SAVC(capabilities);$/;"	v
capabilities	librtmp/rtmp.c	/^SAVC(capabilities);$/;"	v
capsToQuery	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_CAPS  capsToQuery;                          \/**< [in]: Specifies the encode capability to be queried. Client should pass a member for ::NV_ENC_CAPS enum. *\/$/;"	m	struct:_NV_ENC_CAPS_PARAM
capture	DShowPlugin/DeviceSource.h	/^    ICaptureGraphBuilder2   *capture;$/;"	m	class:DeviceSource
capture	GraphicsCapture/GraphicsCaptureSource.h	/^    GraphicsCaptureMethod *capture;$/;"	m	class:GraphicsCaptureSource
capture	Source/DSoundAudioSource.cpp	/^    IDirectSoundCapture8        *capture;$/;"	m	class:DSoundAudioSource	file:
captureBits	Source/DesktopImageSource.cpp	/^    BYTE     *captureBits;$/;"	m	class:DesktopImageSource	file:
captureBuffer	Source/DSoundAudioSource.cpp	/^    IDirectSoundCaptureBuffer8  *captureBuffer;$/;"	m	class:DSoundAudioSource	file:
captureCheckInterval	GraphicsCapture/GraphicsCaptureSource.h	/^    float captureCheckInterval;$/;"	m	class:GraphicsCaptureSource
captureFPS	Source/OBS.h	/^    DWORD captureFPS;$/;"	m	class:OBS
captureFilter	DShowPlugin/DeviceSource.h	/^    CaptureFilter           *captureFilter;$/;"	m	class:DeviceSource
capturePos	Source/DSoundAudioSource.cpp	/^    UINT capturePos;$/;"	m	class:DSoundAudioSource	file:
captureProc	GraphicsCapture/GraphicsCaptureHook/DXGICapture.cpp	/^DOCAPTUREPROC captureProc = NULL;$/;"	v
captureRect	Source/DesktopImageSource.cpp	/^    RECT     captureRect;$/;"	m	class:DesktopImageSource	file:
captureRect	Source/DesktopImageSource.cpp	/^    RECT captureRect;$/;"	m	struct:RegionWindowData	file:
captureType	GraphicsCapture/GlobalCaptureStuff.h	/^    UINT    captureType;$/;"	m	struct:CaptureInfo
captureType	Source/DesktopImageSource.cpp	/^    UINT     captureType;$/;"	m	class:DesktopImageSource	file:
captureWaitCount	GraphicsCapture/GraphicsCaptureSource.h	/^    UINT captureWaitCount;$/;"	m	class:GraphicsCaptureSource
category	CLRHostPlugin/CLRHostInterop/AbstractWPFSettingsPane.h	/^        System::String ^category;$/;"	m	class:CLROBS::abstract
category	CLRHostPlugin/CLRHostPlugin/CLRSettingsPane.h	/^    std::wstring category;$/;"	m	class:CLRSettingsPane
cb	OBSApi/Utility/XT_Windows.cpp	/^    OSDirectoryMonitorCallback cb;$/;"	m	struct:OSDirectoryMonitorData	file:
cb	libfaac/bitstream.c	/^    unsigned short cb; \/* codebook *\/$/;"	m	file:
cb	librtmp/log.c	/^static RTMP_LogCallback rtmp_log_default, *cb = rtmp_log_default;$/;"	v	file:
cbDstLength	lame/ACM/ddk/msacmdrv.h	/^    DWORD                   cbDstLength;$/;"	m	struct:tACMDRVSTREAMHEADER
cbDstLength	lame/ACM/ddk/msacmdrv.h	/^    DWORD               cbDstLength;$/;"	m	struct:tACMDRVSTREAMSIZE
cbDstLengthUsed	lame/ACM/ddk/msacmdrv.h	/^    DWORD                   cbDstLengthUsed;$/;"	m	struct:tACMDRVSTREAMHEADER
cbPreparedDstLength	lame/ACM/ddk/msacmdrv.h	/^    DWORD                   cbPreparedDstLength;$/;"	m	struct:tACMDRVSTREAMHEADER
cbPreparedSrcLength	lame/ACM/ddk/msacmdrv.h	/^    DWORD                   cbPreparedSrcLength;$/;"	m	struct:tACMDRVSTREAMHEADER
cbSrcLength	lame/ACM/ddk/msacmdrv.h	/^    DWORD                   cbSrcLength;$/;"	m	struct:tACMDRVSTREAMHEADER
cbSrcLength	lame/ACM/ddk/msacmdrv.h	/^    DWORD               cbSrcLength;$/;"	m	struct:tACMDRVSTREAMSIZE
cbSrcLengthUsed	lame/ACM/ddk/msacmdrv.h	/^    DWORD                   cbSrcLengthUsed;$/;"	m	struct:tACMDRVSTREAMHEADER
cbStruct	lame/ACM/ddk/msacmdrv.h	/^    DWORD                   cbStruct;$/;"	m	struct:tACMDRVSTREAMHEADER
cbStruct	lame/ACM/ddk/msacmdrv.h	/^    DWORD               cbStruct;           \/\/ sizeof(ACMDRVFORMATSUGGEST)$/;"	m	struct:tACMDRVFORMATSUGGEST
cbStruct	lame/ACM/ddk/msacmdrv.h	/^    DWORD               cbStruct;$/;"	m	struct:tACMDRVSTREAMINSTANCE
cbStruct	lame/ACM/ddk/msacmdrv.h	/^    DWORD               cbStruct;$/;"	m	struct:tACMDRVSTREAMSIZE
cbStruct	lame/ACM/ddk/msacmdrv.h	/^    DWORD           cbStruct;       \/\/ sizeof(ACMDRVOPENDESC)$/;"	m	struct:tACMDRVOPENDESC
cb_l	lame/libmp3lame/util.h	/^        FLOAT   cb_l[CBANDS]; \/* ATH for long block convolution bands *\/$/;"	m
cb_s	lame/libmp3lame/util.h	/^        FLOAT   cb_s[CBANDS]; \/* ATH for short block convolution bands *\/$/;"	m
cb_width_long	libfaac/coder.h	/^  int cb_width_long[NSFB_LONG];$/;"	m
cb_width_short	libfaac/coder.h	/^  int cb_width_short[NSFB_SHORT];$/;"	m
cbr	lame/doc/html/detailed.html	/^<a name="cbr"><span class="hilight">--cbr<\/span><\/a> Enforce constant bitrate encoding$/;"	a
cbr.html	lame/doc/html/cbr.html	1;"	F
cbwfxDst	lame/ACM/ddk/msacmdrv.h	/^    DWORD               cbwfxDst;           \/\/ Dest Size$/;"	m	struct:tACMDRVFORMATSUGGEST
cbwfxSrc	lame/ACM/ddk/msacmdrv.h	/^    DWORD               cbwfxSrc;           \/\/ Source Size$/;"	m	struct:tACMDRVFORMATSUGGEST
cc	lame/frontend/rtp.c	/^    int     cc:4;            \/* number of CSRC identifiers: 0 *\/$/;"	m	struct:rtpbits	file:
cd_dynamic	librtmp/amf.h	/^        char cd_dynamic;$/;"	m	struct:AMF3ClassDef
cd_externalizable	librtmp/amf.h	/^        char cd_externalizable;$/;"	m	struct:AMF3ClassDef
cd_name	librtmp/amf.h	/^        AVal cd_name;$/;"	m	struct:AMF3ClassDef
cd_num	librtmp/amf.h	/^        int cd_num;$/;"	m	struct:AMF3ClassDef
cd_props	librtmp/amf.h	/^        AVal *cd_props;$/;"	m	struct:AMF3ClassDef
cd_psy	lame/libmp3lame/util.h	/^        PsyConst_t *cd_psy;$/;"	m	struct:lame_internal_flags
cencode.c	librtmp/cencode.c	1;"	F
cencode.h	librtmp/cencode.h	1;"	F
centerMix	OBSApi/AudioSource.cpp	/^const float centerMix   = dbMinus6;$/;"	v
cert	librtmp/rtmp_sys.h	/^    x509_cert cert;$/;"	m	struct:tls_server_ctx
cfg	lame/libmp3lame/util.h	/^        SessionConfig_t cfg;$/;"	m	struct:lame_internal_flags
cfg	libfaac/fft.h	/^    void*   cfg[MAX_FFT][2];$/;"	m
cgi_env_block	Source/mongoose.c	/^struct cgi_env_block {$/;"	s	file:
cgi_status	Source/mongoose.c	/^static const char cgi_status[] = "HTTP\/1.1 200 OK\\r\\n";$/;"	v	file:
ch	lame/frontend/get_audio.c	/^    void   *ch[2];           \/* buffer for each channel *\/$/;"	m	struct:PcmBuffer	file:
ch	lame/mpglib/mpg123.h	/^    } ch[2];$/;"	m	struct:III_sideinfo
ch01	lame/libmp3lame/fft.c	170;"	d	file:
chChMode	lame/dshow/PropPage_adv.cpp	/^const char *chChMode[4] = {$/;"	v
ch_is_left	libfaac/channels.h	/^    int ch_is_left;$/;"	m
change	lame/misc/ath.c	/^    change     = 6$/;"	e	file:
changeBuffer	OBSApi/Utility/XT_Windows.cpp	/^    BYTE changeBuffer[2048];$/;"	m	struct:OSFileChangeData	file:
changeMonitor	Source/BitmapImage.h	/^    OSFileChangeData *changeMonitor;$/;"	m	class:BitmapImage
change_direction	lame/misc/ath.c	/^int change_direction ( amplitude_t* const a, direction_t new_direction )$/;"	f
change_handle	OBSApi/Utility/XT_Windows.cpp	/^    unique_ptr<void, HandleCloser> directory, change_handle, thread, stop_event;$/;"	m	struct:OSDirectoryMonitorData	file:
channelInfo	libfaac/frame.h	/^    ChannelInfo channelInfo[MAX_CHANNELS];$/;"	m
channel_map	libfaac/include/faaccfg.h	/^	int channel_map[64];	$/;"	m	struct:faacEncConfiguration
channel_mode	lame/ACM/ACM.cpp	/^static const char channel_mode[][13] = {"mono","stereo"};$/;"	v	file:
channel_option	lame/frontend/gtkanal.c	/^channel_option(GtkWidget * widget, gpointer data)$/;"	f	file:
channels	lame/ACM/ACM.h	/^		unsigned int channels;$/;"	m	class:bitrate_item
channels	lame/misc/ath.c	/^    int            channels;$/;"	m	file:
channels	libsamplerate/common.h	/^	int		channels ;$/;"	m	struct:SRC_PRIVATE_tag
channels	libsamplerate/src_linear.c	/^	int		channels ;$/;"	m	file:
channels	libsamplerate/src_sinc.c	/^	int		channels ;$/;"	m	file:
channels	libsamplerate/src_zoh.c	/^	int		channels ;$/;"	m	file:
channels.c	libfaac/channels.c	1;"	F
channels.h	libfaac/channels.h	1;"	F
channels_in	lame/libmp3lame/util.h	/^        int     channels_in; \/* number of channels in the input data stream (PCM or decoded PCM) *\/$/;"	m
channels_out	lame/libmp3lame/util.h	/^        int     channels_out; \/* number of channels in the output data stream (not used for decoding) *\/$/;"	m
char64long16	Source/mongoose.c	/^union char64long16 { unsigned char c[64]; uint32_t l[16]; };$/;"	u	file:
charsPermfxU8	libmfx/src/mfx_plugin_hive.cpp	/^    const mfxU32 charsPermfxU8 = 2;$/;"	v
check	lame/libmp3lame/i386/nasm.h	/^			%error STACKLEVEL mismatch check 'local', 'alloc', 'pushd', 'popd'$/;"	v
checkCudaErrors	ObsNvenc/inc/nvmain.h	41;"	d
checkNvEnc	ObsNvenc/src/nvEncodeAPI.cpp	/^bool checkNvEnc()$/;"	f
checkPresetSupport	ObsNvenc/src/NVENCEncoder.cpp	/^bool NVENCEncoder::checkPresetSupport(const GUID &preset)$/;"	f	class:NVENCEncoder
checkScalefactor	lame/libmp3lame/vbrquantize.c	/^checkScalefactor(const gr_info * cod_info, const int vbrsfmin[SFBMAX])$/;"	f	file:
check_acl	Source/mongoose.c	/^static int check_acl(const char *acl, uint32_t remote_ip) {$/;"	f	file:
check_aid	lame/frontend/get_audio.c	/^check_aid(const unsigned char *header)$/;"	f	file:
check_password	Source/mongoose.c	/^static int check_password(const char *method, const char *ha1, const char *uri,$/;"	f	file:
check_tables	libfaac/fft.c	/^static void check_tables( FFT_Tables *fft_tables, int logm)$/;"	f	file:
check_vbr_header	lame/mpglib/interface.c	/^check_vbr_header(PMPSTR mp, int bytes)$/;"	f	file:
chflag	lame/frontend/gtkanal.c	/^    int     chflag;          \/* toggle between L & R channels *\/$/;"	m	struct:gtkinfostruct	file:
chgrdata	lame/libmp3lame/encoder.c	/^typedef FLOAT chgrdata[2][2];$/;"	t	file:
childPercentage	OBSApi/Utility/Profiler.cpp	/^    double childPercentage;$/;"	m	struct:ProfileNodeInfo	file:
choose_table	lame/libmp3lame/util.h	/^        int     (*choose_table) (const int *ix, const int *const end, int *const s);$/;"	m	struct:lame_internal_flags
choose_table_nonMMX	lame/libmp3lame/takehiro.c	/^choose_table_nonMMX(const int *ix, const int *const end, int *const _s)$/;"	f	file:
chr	lame/ACM/tinyxml/tinyxml.h	/^		int			    chr;$/;"	m	struct:TiXmlBase::Entity
chromaFormatIDC	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                            chromaFormatIDC;            \/**< [in]: Specifies the chroma format. Should be set to 1 for yuv420 input, 3 for yuv444 input.$/;"	m	struct:_NV_ENC_CONFIG_H264
chromaSampleLocationBot	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t    chromaSampleLocationBot;              \/**< [in]: Specifies the chroma sample location for bottom field(as defined in Annex E of the ITU-T Specification) *\/$/;"	m	struct:_NV_ENC_CONFIG_H264_VUI_PARAMETERS
chromaSampleLocationFlag	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t    chromaSampleLocationFlag;             \/**< [in]: if set to 1 , it specifies that thechromaSampleLocationTop and chromaSampleLocationBot are present.*\/$/;"	m	struct:_NV_ENC_CONFIG_H264_VUI_PARAMETERS
chromaSampleLocationTop	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t    chromaSampleLocationTop;              \/**< [in]: Specifies the chroma sample location for top field(as defined in Annex E of the ITU-T Specification) *\/$/;"	m	struct:_NV_ENC_CONFIG_H264_VUI_PARAMETERS
cl	Source/mongoose.c	/^  int64_t cl;             \/\/ Reply content length, for Range support$/;"	m	struct:connection	file:
clamp	QSVHelper/Utilities.h	/^static inline T clamp(T t, U u, V v)$/;"	f
className	CLRHostPlugin/CLRHostInterop/AbstractImageSourceFactory.h	/^        String^ className;$/;"	m	class:CLROBS::abstract
class_id	lame/libmp3lame/lame_global_flags.h	/^    unsigned int class_id;$/;"	m	struct:lame_global_struct
class_id	lame/libmp3lame/util.h	/^        unsigned long class_id;$/;"	m	struct:lame_internal_flags
classname	GraphicsCapture/GraphicsCaptureSource.cpp	/^    String classname;$/;"	m	struct:FindWindowData	file:
clear	libmfx/include/mfx_vector.h	/^        void clear() $/;"	f	class:MFX::MFXVector
clearProc	GraphicsCapture/GraphicsCaptureHook/DXGICapture.cpp	/^DOCLEARPROC   clearProc = NULL;$/;"	v
clear_code	Source/libnsgif.h	/^    int clear_code, end_code;$/;"	m	struct:gif_animation
clear_image	Source/libnsgif.h	/^    BOOL clear_image;$/;"	m	struct:gif_animation
clear_mask	QSVHelper/IntelSupport/include/d3d11_allocator.h	/^    static const uintptr_t clear_mask = ~((uintptr_t)1 << bits_offset);$/;"	m	class:MFXReadWriteMid
clientHeight	Source/OBS.h	/^    int     clientWidth, clientHeight;$/;"	m	class:OBS
clientKeyPtr	ObsNvenc/inc/nvEncodeAPI.h	/^    GUID*               clientKeyPtr;                     \/**< [in]: Pointer to a GUID key issued to the client. *\/$/;"	m	struct:_NV_ENC_OPEN_ENCODE_SESSIONEX_PARAMS
clientWidth	Source/OBS.h	/^    int     clientWidth, clientHeight;$/;"	m	class:OBS
clientid	Source/RTMPStuff.h	/^SAVC(clientid);$/;"	v
clipdetect	lame/doc/html/detailed.html	/^<a name="clipdetect"><span class="hilight">--clipdetect<\/span><\/a> Clipping detection$/;"	a
clk_tck	librtmp/rtmp.c	/^static int clk_tck;$/;"	v	file:
clockFreq	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	/^LARGE_INTEGER clockFreq, startTime;$/;"	v
clockFreq	OBSApi/Utility/XT_Windows.cpp	/^LARGE_INTEGER clockFreq, startTime;$/;"	v
close	Source/mongoose.c	1336;"	d	file:
close	lame/ACM/ACMStream.cpp	/^bool ACMStream::close(LPBYTE pOutputBuffer, DWORD *pOutputSize)$/;"	f	class:ACMStream
close	lame/ACM/DecodeStream.cpp	/^bool DecodeStream::close(LPBYTE pOutputBuffer, DWORD *pOutputSize)$/;"	f	class:DecodeStream
close	librtmp/rtmp.c	/^SAVC(close);$/;"	v
closeFinishedEvent	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserWrapper.cs	/^        private ManualResetEventSlim closeFinishedEvent;$/;"	f	class:Browser.BrowserWrapper	file:
closeThreshold	NoiseGate/NoiseGate.h	/^    float   closeThreshold;$/;"	m	class:NoiseGate
close_amplifier	lame/misc/ath.c	/^int  close_amplifier ( amplitude_t* const a )$/;"	f
close_generator	lame/misc/ath.c	/^int  close_generator ( generator_t* const g )$/;"	f
close_infile	lame/frontend/get_audio.c	/^close_infile(void)$/;"	f
close_input_file	lame/frontend/get_audio.c	/^close_input_file(FILE * musicin)$/;"	f	file:
close_keyboard	lame/misc/ath.c	/^int  close_keyboard   ( keyboard_t* const k )$/;"	f
close_local_endpoint	Source/mongoose.c	/^static void close_local_endpoint(struct connection *conn) {$/;"	f	file:
close_soundcard	lame/misc/ath.c	/^int  close_soundcard   ( soundcard_t* const k )$/;"	f
closedir	Source/mongoose.c	/^static int closedir(DIR *dir) {$/;"	f	file:
closesocket	Source/mongoose.c	150;"	d	file:
closesocket	librtmp/rtmp_sys.h	72;"	d
closesocket	librtmp/rtmp_sys.h	73;"	d
clrApi	CLRHostPlugin/CLRHostPlugin/CLRHost.h	/^    CLRHostApi *clrApi;$/;"	m	class:CLRHost
clrApi	CLRHostPlugin/CLRHostPlugin/CLRHostPlugin.h	/^    CLRHostApi *clrApi;$/;"	m	class:CLRHostPlugin
clrHost	CLRHostPlugin/CLRHostPlugin/CLRHostPlugin.h	/^    CLRHost *clrHost;$/;"	m	class:CLRHostPlugin
clrHostApi	CLRHostPlugin/CLRHostInterop/API.h	/^        CLRHostApi *clrHostApi;$/;"	m	class:CLROBS::API
clrImageSource	CLRHostPlugin/CLRHostPlugin/ImageSourceBridge.h	/^    CLRImageSource *clrImageSource;$/;"	m	class:ImageSourceBridge
clrMetaHost	CLRHostPlugin/CLRHostPlugin/CLRHost.h	/^    ICLRMetaHost *clrMetaHost;$/;"	m	class:CLRHost
clrPlugins	CLRHostPlugin/CLRHostPlugin/CLRHost.h	/^    std::vector<CLRPlugin *> clrPlugins;$/;"	m	class:CLRHost
clrPlugins	CLRHostPlugin/CLRHostPlugin/CLRHostPlugin.h	/^    std::vector<CLRPlugin *> clrPlugins;$/;"	m	class:CLRHostPlugin
clrRuntimeInfo	CLRHostPlugin/CLRHostPlugin/CLRHost.h	/^    ICLRRuntimeInfo *clrRuntimeInfo;$/;"	m	class:CLRHost
clrRuntimeVersion	CLRHostPlugin/CLRHostPlugin/CLRHost.h	/^    TCHAR *clrRuntimeVersion;$/;"	m	class:CLRHost
clrSettingsPane	CLRHostPlugin/CLRHostPlugin/SettingsPaneBridge.h	/^    CLRSettingsPane *clrSettingsPane;$/;"	m	class:SettingsPaneBridge
co	QSVHelper/QSVStuff.h	/^    mfxExtCodingOption co;$/;"	m	struct:Parameters
co2	QSVHelper/QSVStuff.h	/^    mfxExtCodingOption2 co2;$/;"	m	struct:Parameters
cod_info	lame/libmp3lame/vbrquantize.c	/^    gr_info *cod_info;$/;"	m	struct:algo_s	file:
code	Source/RTMPStuff.h	/^SAVC(code);$/;"	v
code	libmfx/src/mfx_dispatcher_log.cpp	/^    int code;$/;"	m	struct:CodeStringTable	file:
code	librtmp/rtmp.c	/^SAVC(code);$/;"	v
code_size	Source/libnsgif.h	/^    int code_size, set_code_size;$/;"	m	struct:gif_animation
codebook	libfaac/ltp.c	/^static double codebook[CODESIZE] =$/;"	v	file:
codecPicParams	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_CODEC_PIC_PARAMS                     codecPicParams;                 \/**< [in]: Specifies the codec specific per-picture encoding parameters. *\/$/;"	m	struct:_NV_ENC_PIC_PARAMS
coder.h	libfaac/coder.h	1;"	F
coderInfo	libfaac/frame.h	/^    CoderInfo coderInfo[MAX_CHANNELS];$/;"	m
coefCompress	libfaac/coder.h	/^    int coefCompress;                    \/* Are coeffs compressed? *\/$/;"	m
coefResolution	libfaac/coder.h	/^    int coefResolution;                         \/* Coefficient resolution *\/$/;"	m
coeff_half_len	libsamplerate/src_sinc.c	/^	int		coeff_half_len, index_inc ;$/;"	m	file:
coeff_t	libsamplerate/src_sinc.c	/^typedef float	coeff_t ;$/;"	t	file:
coeffs	libsamplerate/fastest_coeffs.h	/^	coeff_t coeffs [2464] ;$/;"	m	struct:fastest_coeffs_s
coeffs	libsamplerate/high_qual_coeffs.h	/^	coeff_t coeffs [340239] ;$/;"	m	struct:slow_high_qual_coeffs_s
coeffs	libsamplerate/mid_qual_coeffs.h	/^	coeff_t coeffs [22438] ;$/;"	m	struct:slow_mid_qual_coeffs_s
coeffs	libsamplerate/src_sinc.c	/^	coeff_t const	*coeffs ;$/;"	m	file:
color	Source/BitmapImageSource.cpp	/^    DWORD color;$/;"	m	class:BitmapImageSource	file:
color	Source/TextOutputSource.cpp	/^    DWORD       color;$/;"	m	class:TextOutputSource	file:
colorBuffer	Source/D3D10System.h	/^    ID3D10Buffer *colorBuffer;$/;"	m	class:D3D10VertexBuffer
colorConvertShader	DShowPlugin/DeviceSource.h	/^    Shader          *colorConvertShader;$/;"	m	class:DeviceSource
colorDesc	ObsNvenc/inc/NVENCEncoder.h	/^    ColorDescription colorDesc;$/;"	m	class:NVENCEncoder
colorDesc	Source/OBS.h	/^    ColorDescription colorDesc;$/;"	m	class:OBS
colorKeyShader	Source/BitmapImageSource.cpp	/^    Shader   *colorKeyShader, *alphaIgnoreShader;$/;"	m	class:BitmapImageSource	file:
colorKeyShader	Source/DesktopImageSource.cpp	/^    Shader   *colorKeyShader, *alphaIgnoreShader;$/;"	m	class:DesktopImageSource	file:
colorSize	Source/D3D10System.h	/^    UINT colorSize;$/;"	m	class:D3D10VertexBuffer
colorSpace	DShowPlugin/DeviceSource.h	/^    int             colorSpace;$/;"	m	class:DeviceSource
colorType	DShowPlugin/DeviceSource.h	/^    DeviceColorType colorType;$/;"	m	class:DeviceSource
colourDescriptionPresentFlag	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t    colourDescriptionPresentFlag;         \/**< [in]: If set to 1, it specifies that the colourPrimaries, transferCharacteristics and colourMatrix are present. *\/$/;"	m	struct:_NV_ENC_CONFIG_H264_VUI_PARAMETERS
colourMatrix	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t    colourMatrix;                         \/**< [in]: Specifies the matrix coefficients used in deriving the luma and chroma from the RGB primaries (as defined in Annex E of the ITU-T Specification). *\/$/;"	m	struct:_NV_ENC_CONFIG_H264_VUI_PARAMETERS
colourPlaneId	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t colourPlaneId;                              \/**< [in]: Specifies the colour plane ID associated with the current input. *\/$/;"	m	struct:_NV_ENC_PIC_PARAMS_H264
colourPrimaries	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t    colourPrimaries;                      \/**< [in]: Specifies color primaries for converting to RGB(as defined in Annex E of the ITU-T Specification) *\/$/;"	m	struct:_NV_ENC_CONFIG_H264_VUI_PARAMETERS
colour_table_size	Source/libnsgif.h	/^    unsigned int colour_table_size;        \/**< size of colour table (in entries) *\/$/;"	m	struct:gif_animation
command	lame/misc/abx.c	/^    const char* const  command;$/;"	m	file:
comment	lame/libmp3lame/id3tag.h	/^    char   *comment;$/;"	m	struct:id3tag_spec
committed_	minhook/src/hook.cpp	/^		bool* committed_;$/;"	m	struct:MinHook::RollbackIfNotCommitted	file:
common.c	lame/mpglib/common.c	1;"	F
common.h	lame/mpglib/common.h	1;"	F
common.h	libsamplerate/common.h	1;"	F
common_sources	lame/frontend/Makefile	/^common_sources = \\$/;"	m
common_window	libfaac/channels.h	/^    int common_window;$/;"	m
comp	lame/doc/html/detailed.html	/^<a name="comp"><span class="hilight">--comp x<\/span><\/a> Indicate a compression ratio instead of a bitrate $/;"	a
compare_dir_entries	Source/mongoose.c	/^static int __cdecl compare_dir_entries(const void *p1, const void *p2) {$/;"	f	file:
compiletime_assert	lame/libmp3lame/machine.h	164;"	d
compl	lame/misc/abx.c	/^typedef f_t     compl [2];$/;"	t	file:
completionEvent	ObsNvenc/inc/nvEncodeAPI.h	/^    void*                                       completionEvent;                \/**< [in]: Specifies an event to be signalled on completion of encoding of this Frame [only if operating in Asynchronous mode]. Each output buffer should be associated with a distinct event pointer. *\/$/;"	m	struct:_NV_ENC_PIC_PARAMS
completionEvent	ObsNvenc/inc/nvEncodeAPI.h	/^    void*               completionEvent;                  \/**< [in]: Handle to event to be registered\/unregistered with the NvEncodeAPI interface. *\/$/;"	m	struct:_NV_ENC_EVENT_PARAMS
compositionOffset	Source/MP4FileStream.cpp	/^    INT     compositionOffset;$/;"	m	struct:MP4VideoFrameInfo	file:
compositionOffsets	Source/MP4FileStream.cpp	/^    List<OffsetVal> compositionOffsets;$/;"	m	class:MP4FileStream	file:
compression_ratio	lame/libmp3lame/lame_global_flags.h	/^    float   compression_ratio; \/* sizeof(wav file)\/sizeof(mp3 file)          *\/$/;"	m	struct:lame_global_struct
compression_ratio	lame/libmp3lame/util.h	/^        float   compression_ratio; \/* sizeof(wav file)\/sizeof(mp3 file)          *\/$/;"	m
compute_ath	lame/libmp3lame/quantize_pvt.c	/^compute_ath(lame_internal_flags const* gfc)$/;"	f	file:
compute_bark_values	lame/libmp3lame/psymodel.c	/^compute_bark_values(PsyConst_CB2SB_t const *gd, FLOAT sfreq, int fft_size,$/;"	f	file:
compute_flushbits	lame/libmp3lame/bitstream.c	/^compute_flushbits(const lame_internal_flags * gfc, int *total_bytes_output)$/;"	f
concatSep	lame/libmp3lame/lame.c	/^concatSep(char* dest, char const* sep, char const* str)$/;"	f	file:
concurrencysal.h	extras/concurrencysal.h	1;"	F
condenseWhiteSpace	lame/ACM/tinyxml/tinyxml.cpp	/^bool TiXmlBase::condenseWhiteSpace = true;$/;"	m	class:TiXmlBase	file:
condenseWhiteSpace	lame/ACM/tinyxml/tinyxml.h	/^	static bool condenseWhiteSpace;$/;"	m	class:TiXmlBase
config	CLRBrowserSourcePlugin/Plugin/ConfigDialog.xaml.cs	/^        private BrowserConfig config;$/;"	f	class:CLRBrowserSourcePlugin.ConfigDialog	file:
config	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/AssetSchemeHandler.cs	/^        private BrowserConfig config;$/;"	f	class:RemoteBrowser.AssetSchemeHandler	file:
config	CLRHostPlugin/CLRCSharpSamplePlugin/SampleConfiguration.xaml.cs	/^        private XElement config;$/;"	f	class:CSharpSamplePlugin.SampleConfigurationDialog	file:
config	CLRHostPlugin/CLRCSharpSamplePlugin/SampleImageSource.cs	/^        private XElement config;$/;"	f	class:CSharpSamplePlugin.SampleImageSource	file:
config	NoiseGate/NoiseGate.h	/^    ConfigFile          config;$/;"	m	class:NoiseGate
config	PSVPlugin/psvplugin.cpp	/^ConfigFile  config;$/;"	v
config	libfaac/frame.h	/^    faacEncConfiguration config;$/;"	m
config	scenesw/SceneSwitcher.h	/^	ConfigFile config;$/;"	m	class:SceneSwitcher
config.guess	lame/config.guess	1;"	F
config.h	lame/config.h	1;"	F
config.h	libsamplerate/config.h	1;"	F
config.rpath	lame/config.rpath	1;"	F
config.status	lame/config.status	1;"	F
config.sub	lame/config.sub	1;"	F
configElement	CLRBrowserSourcePlugin/Plugin/BrowserSource.cs	/^        private XElement configElement;$/;"	f	class:CLRBrowserSourcePlugin.BrowserSource	file:
configMS.h	lame/configMS.h	1;"	F
configProc	Source/OBS.h	/^    OBSCONFIGPROC configProc;$/;"	m	struct:ClassInfo
config_options	Source/mongoose.c	/^  char *config_options[NUM_OPTIONS];$/;"	m	struct:mg_server	file:
configure	lame/configure	1;"	F
configure_event	lame/frontend/gpkplotting.c	/^configure_event(GtkWidget * widget, GdkEventConfigure * event, gpointer data)$/;"	f	file:
conn	Source/mongoose.c	/^  struct connection *conn;$/;"	m	struct:dir_entry	file:
conn	Source/mongoose.c	/^  struct mg_connection *conn;$/;"	m	struct:cgi_env_block	file:
connect	Source/RTMPStuff.h	/^SAVC(connect);$/;"	v
connect	librtmp/rtmp.c	/^SAVC(connect);$/;"	v
connectedAudioSampleOffset	Source/MP4FileStream.cpp	/^    UINT64 connectedAudioSampleOffset, connectedVideoSampleOffset;$/;"	m	class:MP4FileStream	file:
connectedMediaType	DShowPlugin/CaptureFilter.h	/^    AM_MEDIA_TYPE connectedMediaType;$/;"	m	class:CapturePin
connectedPin	DShowPlugin/CaptureFilter.h	/^    IPin *connectedPin;$/;"	m	class:CapturePin
connectedVideoSampleOffset	Source/MP4FileStream.cpp	/^    UINT64 connectedAudioSampleOffset, connectedVideoSampleOffset;$/;"	m	class:MP4FileStream	file:
connection	Source/mongoose.c	/^struct connection {$/;"	s	file:
connection_param	Source/mongoose.h	/^  void *connection_param;     \/\/ Placeholder for connection-specific data$/;"	m	struct:mg_connection
console.c	lame/frontend/console.c	1;"	F
console.h	lame/frontend/console.h	1;"	F
console8BitToUtf8	lame/frontend/main.c	/^char* console8BitToUtf8(const char* str)$/;"	f
console_flush	lame/frontend/console.c	/^console_flush()$/;"	f
console_io_struct	lame/frontend/console.h	/^typedef struct console_io_struct {$/;"	s
console_printf	lame/frontend/console.c	/^console_printf(const char *format, ...)$/;"	f
console_up	lame/frontend/console.c	/^console_up(int n_lines)$/;"	f
constQP	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_QP                       constQP;                                     \/**< [in]: Specifies the initial QP to be used for encoding, these values would be used for all frames if in Constant QP mode. *\/$/;"	m	struct:_NV_ENC_RC_PARAMS
const_process	libsamplerate/common.h	/^	int		(*const_process) (struct SRC_PRIVATE_tag *psrc, SRC_DATA *data) ;$/;"	m	struct:SRC_PRIVATE_tag
constantBuffer	Source/D3D10System.h	/^    ID3D10Buffer *constantBuffer;$/;"	m	class:D3D10Shader
constantSize	Source/D3D10System.h	/^    UINT constantSize;$/;"	m	class:D3D10Shader
constrainedFrame	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t constrainedFrame           :1;              \/**< [in]: Set to 1 if client wants to encode this frame with each slice completely independent of other slices in the frame. $/;"	m	struct:_NV_ENC_PIC_PARAMS_H264
construct_etag	Source/mongoose.c	/^static void construct_etag(char *buf, size_t buf_len, const file_stat_t *st) {$/;"	f	file:
contact.html	lame/doc/html/contact.html	1;"	F
content	Source/mongoose.h	/^  char *content;              \/\/ POST (or websocket message) data, or NULL$/;"	m	struct:mg_connection
content_len	Source/mongoose.h	/^  size_t content_len;         \/\/ Data length$/;"	m	struct:mg_connection
contextInitializedEvent	CLRBrowserSourcePlugin/Plugin/Shared/BrowserApp.cs	/^            private ManualResetEventSlim contextInitializedEvent;$/;"	f	class:Shared.BrowserApp.BrowserProcessHandler	file:
contexts	OBSApi/GraphicsSystem.h	/^        std::map<std::wstring, FutureShaderContext> contexts;$/;"	m	struct:GraphicsSystem::FutureShaderContainer
contrast	DShowPlugin/IVideoCaptureFilter.h	/^    int                                  contrast;                          \/\/!< Contrast   (0-10000)$/;"	m	struct:_VIDEO_CAPTURE_FILTER_SETTINGS
contributors.html	lame/doc/html/contributors.html	1;"	F
control	DShowPlugin/DeviceSource.h	/^    IMediaControl           *control;$/;"	m	class:DeviceSource
controlHeight	Source/OBS.cpp	/^const int controlHeight = 22;$/;"	v
controlPadding	Source/OBS.cpp	/^const int controlPadding = 3;$/;"	v
controlWidth	Source/OBS.cpp	/^const int controlWidth = miscAreaWidth\/2;$/;"	v
convertAddressMode	Source/D3D10Texture.cpp	/^const D3D10_TEXTURE_ADDRESS_MODE convertAddressMode[] = {D3D10_TEXTURE_ADDRESS_CLAMP, D3D10_TEXTURE_ADDRESS_WRAP, D3D10_TEXTURE_ADDRESS_MIRROR, D3D10_TEXTURE_ADDRESS_BORDER, D3D10_TEXTURE_ADDRESS_MIRROR_ONCE};$/;"	v
convertBuffer	OBSApi/AudioSource.h	/^    List<float> convertBuffer;$/;"	m	class:AudioSource
convertBuffer	Source/MMDeviceAudioSource.cpp	/^    List<float> convertBuffer;$/;"	m	class:MMDeviceAudioSource	file:
convertData	DShowPlugin/DeviceSource.h	/^    ConvertData     *convertData;$/;"	m	class:DeviceSource
convertFilter	Source/D3D10Texture.cpp	/^const D3D10_FILTER convertFilter[] = {D3D10_FILTER_MIN_MAG_MIP_LINEAR, D3D10_FILTER_MIN_MAG_MIP_POINT, D3D10_FILTER_ANISOTROPIC, D3D10_FILTER_MIN_MAG_POINT_MIP_LINEAR, D3D10_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT, D3D10_FILTER_MIN_POINT_MAG_MIP_LINEAR, D3D10_FILTER_MIN_LINEAR_MAG_MIP_POINT, D3D10_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR, D3D10_FILTER_MIN_MAG_LINEAR_MIP_POINT};$/;"	v
convertFormat	Source/D3D10Texture.cpp	/^const DXGI_FORMAT convertFormat[] = {DXGI_FORMAT_UNKNOWN, DXGI_FORMAT_A8_UNORM, DXGI_FORMAT_R8_UNORM, DXGI_FORMAT_R8G8B8A8_UNORM, DXGI_FORMAT_R8G8B8A8_UNORM, DXGI_FORMAT_B8G8R8X8_UNORM, DXGI_FORMAT_B8G8R8A8_UNORM, DXGI_FORMAT_R16G16B16A16_FLOAT, DXGI_FORMAT_R32G32B32A32_FLOAT, DXGI_FORMAT_B5G5R5A1_UNORM, DXGI_FORMAT_B5G6R5_UNORM, DXGI_FORMAT_R10G10B10A2_UNORM, DXGI_FORMAT_BC1_UNORM, DXGI_FORMAT_BC3_UNORM, DXGI_FORMAT_BC5_UNORM};$/;"	v
convertPixelFormat	GraphicsCapture/GraphicsCaptureHook/D3D8Capture.cpp	/^void convertPixelFormat(LPBYTE in, DWORD inPitch, D3DFORMAT inFormat, DWORD outWidth, DWORD outHeight, LPBYTE out)$/;"	f
convert_partition2scalefac	lame/libmp3lame/psymodel.c	/^convert_partition2scalefac(PsyConst_CB2SB_t const *const gd, FLOAT const *eb, FLOAT const *thr,$/;"	f	file:
convert_partition2scalefac_l	lame/libmp3lame/psymodel.c	/^convert_partition2scalefac_l(lame_internal_flags * gfc, FLOAT const *eb, FLOAT const *thr, int chn)$/;"	f	file:
convert_partition2scalefac_l_to_s	lame/libmp3lame/psymodel.c	/^convert_partition2scalefac_l_to_s(lame_internal_flags * gfc, FLOAT const *eb, FLOAT const *thr,$/;"	f	file:
convert_partition2scalefac_s	lame/libmp3lame/psymodel.c	/^convert_partition2scalefac_s(lame_internal_flags * gfc, FLOAT const *eb, FLOAT const *thr, int chn,$/;"	f	file:
convert_uri_to_file_name	Source/mongoose.c	/^static int convert_uri_to_file_name(struct connection *conn, char *buf,$/;"	f	file:
converter_fn_t	lame/misc/ath.c	/^typedef long double (*converter_fn_t) ( long double );$/;"	t	file:
copyD3D101TextureGame	GraphicsCapture/GraphicsCaptureHook/D3D10.1Capture.cpp	/^ID3D10Texture2D         *copyD3D101TextureGame;$/;"	v
copyD3D10TextureGame	GraphicsCapture/GraphicsCaptureHook/D3D10Capture.cpp	/^ID3D10Resource          *copyD3D10TextureGame = NULL;$/;"	v
copyD3D9TextureGame	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^IDirect3DSurface9       *copyD3D9TextureGame = NULL;$/;"	v
copyD3D9Textures	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^IDirect3DSurface9       *copyD3D9Textures[NUM_BUFFERS] = ZERO_ARRAY;$/;"	v
copyData	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^MemoryCopyData          *copyData = NULL;$/;"	v
copyData	GraphicsCapture/MemoryCapture.h	/^    MemoryCopyData *copyData;$/;"	m	class:MemoryCapture
copyTex	Source/D3D10System.h	/^    Texture *copyTex;$/;"	m	class:D3D10OutputDuplicator
copyTexture	GraphicsCapture/SharedTexCapture.h	/^    Texture *sharedTexture, *copyTexture;$/;"	m	class:SharedTexCapture
copyTextureGame	GraphicsCapture/GraphicsCaptureHook/D3D11Capture.cpp	/^ID3D11Resource          *copyTextureGame = NULL;$/;"	v
copyTextureIntermediary	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^ID3D10Resource          *copyTextureIntermediary = NULL;$/;"	v
copyTextures	Source/OBS.h	/^    ID3D10Texture2D *copyTextures[NUM_RENDER_BUFFERS];$/;"	m	class:OBS
copyV1ToV2	lame/libmp3lame/id3tag.c	/^copyV1ToV2(lame_t gfp, int frame_id, char const *s)$/;"	f	file:
copyWait	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^DWORD                   copyWait = 0;$/;"	v
copy_buffer	lame/libmp3lame/bitstream.c	/^copy_buffer(lame_internal_flags * gfc, unsigned char *buffer, int size, int mp3data)$/;"	f
copy_mp	lame/mpglib/interface.c	/^copy_mp(PMPSTR mp, int size, unsigned char *ptr)$/;"	f	file:
copyright	lame/libmp3lame/lame_global_flags.h	/^    int     copyright;       \/* mark as copyright. default=0           *\/$/;"	m	struct:lame_global_struct
copyright	lame/libmp3lame/util.h	/^        int     copyright;   \/* mark as copyright. default=0           *\/$/;"	m
copyright	lame/mpglib/mpg123.h	/^    int     copyright;$/;"	m	struct:frame
copyright	libfaac/include/faaccfg.h	/^    char *copyright;$/;"	m	struct:faacEncConfiguration
corRuntimeHost	CLRHostPlugin/CLRHostPlugin/CLRHost.h	/^    ICorRuntimeHost* corRuntimeHost;$/;"	m	class:CLRHost
coreCount	OBSApi/Utility/XT_Windows.cpp	/^int coreCount = 1, logicalCores = 1;$/;"	v
cos16	lame/mpglib/tabinit.c	/^static real cos64[16], cos32[8], cos16[4], cos8[2], cos4[1];$/;"	v	file:
cos32	lame/mpglib/tabinit.c	/^static real cos64[16], cos32[8], cos16[4], cos8[2], cos4[1];$/;"	v	file:
cos4	lame/mpglib/tabinit.c	/^static real cos64[16], cos32[8], cos16[4], cos8[2], cos4[1];$/;"	v	file:
cos64	lame/mpglib/tabinit.c	/^static real cos64[16], cos32[8], cos16[4], cos8[2], cos4[1];$/;"	v	file:
cos8	lame/mpglib/tabinit.c	/^static real cos64[16], cos32[8], cos16[4], cos8[2], cos4[1];$/;"	v	file:
cospspps	QSVHelper/QSVStuff.h	/^    mfxExtCodingOptionSPSPPS cospspps;$/;"	m	struct:Parameters
costab	lame/libmp3lame/fft.c	/^static const FLOAT costab[TRI_SIZE * 2] = {$/;"	v	file:
costab	lame/libmp3lame/vector/xmm_quantize_sub.c	/^static const FLOAT costab[TRI_SIZE * 2] = {$/;"	v	file:
costbl	libfaac/fft.h	/^    fftfloat **costbl;$/;"	m
count	Source/MP4FileStream.cpp	/^    UINT count;$/;"	m	struct:OffsetVal	file:
count	Source/mongoose.c	/^    uint32_t count[2];$/;"	m	file:
count1	lame/libmp3lame/l3side.h	/^    int     count1;$/;"	m
count1bits	lame/libmp3lame/l3side.h	/^    int     count1bits;$/;"	m
count1table_select	lame/libmp3lame/l3side.h	/^    int     count1table_select;$/;"	m
count1table_select	lame/mpglib/mpg123.h	/^    unsigned count1table_select;$/;"	m	struct:gr_info_s
count_bit_ESC	lame/libmp3lame/takehiro.c	/^count_bit_ESC(const int *ix, const int *const end, int t1, const int t2, unsigned int *const s)$/;"	f	file:
count_bit_noESC	lame/libmp3lame/takehiro.c	/^count_bit_noESC(const int *ix, const int *end, int mx, unsigned int *s)$/;"	f	file:
count_bit_noESC_from2	lame/libmp3lame/takehiro.c	/^count_bit_noESC_from2(const int *ix, const int *end, int max, unsigned int *s)$/;"	f	file:
count_bit_noESC_from3	lame/libmp3lame/takehiro.c	/^count_bit_noESC_from3(const int *ix, const int *end, int max, unsigned int * s)$/;"	f	file:
count_bit_null	lame/libmp3lame/takehiro.c	/^static int count_bit_null(const int* ix, const int* end, int max, unsigned int* s)$/;"	f	file:
count_bits	lame/libmp3lame/takehiro.c	/^count_bits(lame_internal_flags const *const gfc,$/;"	f
count_fnc	lame/libmp3lame/takehiro.c	/^typedef int (*count_fnc)(const int* ix, const int* end, int max, unsigned int* s);$/;"	t	file:
count_fncs	lame/libmp3lame/takehiro.c	/^static count_fnc count_fncs[] = $/;"	v	file:
count_samples_carefully	lame/frontend/get_audio.c	/^    int     count_samples_carefully;$/;"	m	struct:get_audio_global_data_struct	file:
counter	lame/misc/ath.c	/^    unsigned long  counter; $/;"	m	file:
cp_actual	lame/frontend/main.c	/^enum { cp_utf8, cp_console, cp_actual };$/;"	e	file:
cp_console	lame/frontend/main.c	/^enum { cp_utf8, cp_console, cp_actual };$/;"	e	file:
cp_utf8	lame/frontend/main.c	/^enum { cp_utf8, cp_console, cp_actual };$/;"	e	file:
cpb	x264/x264.h	/^    int cpb;         \/* max vbv buffer (kbit) *\/$/;"	m
cpb_final_arrival_time	x264/x264.h	/^    double cpb_final_arrival_time;$/;"	m
cpb_initial_arrival_time	x264/x264.h	/^    double cpb_initial_arrival_time;$/;"	m
cpb_removal_time	x264/x264.h	/^    double cpb_removal_time;$/;"	m
cpe	libfaac/channels.h	/^    int cpe;$/;"	m
cpu	x264/x264.h	/^    unsigned int cpu;$/;"	m	struct:x264_param_t
cpuInfo	Source/OBS.h	/^    int     cpuInfo[4];$/;"	m	class:OBS
cpuStartTime	OBSApi/Utility/Profiler.h	/^          cpuStartTime;$/;"	m	class:ProfilerNode
cpuTimeElapsed	OBSApi/Utility/Profiler.cpp	/^          cpuTimeElapsed,$/;"	m	struct:ProfileNodeInfo	file:
cq	Source/Encoder_QSV.cpp	/^        bool cq;$/;"	m	file:
cqm_4ic	x264/x264.h	/^    uint8_t     cqm_4ic[16];$/;"	m	struct:x264_param_t
cqm_4iy	x264/x264.h	/^    uint8_t     cqm_4iy[16];        \/* used only if i_cqm_preset == X264_CQM_CUSTOM *\/$/;"	m	struct:x264_param_t
cqm_4pc	x264/x264.h	/^    uint8_t     cqm_4pc[16];$/;"	m	struct:x264_param_t
cqm_4py	x264/x264.h	/^    uint8_t     cqm_4py[16];$/;"	m	struct:x264_param_t
cqm_8ic	x264/x264.h	/^    uint8_t     cqm_8ic[64];$/;"	m	struct:x264_param_t
cqm_8iy	x264/x264.h	/^    uint8_t     cqm_8iy[64];$/;"	m	struct:x264_param_t
cqm_8pc	x264/x264.h	/^    uint8_t     cqm_8pc[64];$/;"	m	struct:x264_param_t
cqm_8py	x264/x264.h	/^    uint8_t     cqm_8py[64];$/;"	m	struct:x264_param_t
crc	lame/libmp3lame/lame-analysis.h	/^    int     crc, padding;$/;"	m	struct:plotting_data
crc16_lookup	lame/libmp3lame/VbrTag.c	/^static const unsigned int crc16_lookup[256] = {$/;"	v	file:
createMethod	CLRHostPlugin/CLRHostPlugin/CLRImageSourceFactory.h	/^    mscorlib::_MethodInfo *createMethod;$/;"	m	class:CLRImageSourceFactory
createPaneMethod	CLRHostPlugin/CLRHostPlugin/CLRSettingsPane.h	/^    mscorlib::_MethodInfo *createPaneMethod;$/;"	m	class:CLRSettingsPane
createProc	Source/OBS.h	/^    OBSCREATEPROC createProc;$/;"	m	struct:ClassInfo
createStream	Source/RTMPStuff.h	/^SAVC(createStream);$/;"	v
createStream	librtmp/rtmp.c	/^SAVC(createStream);$/;"	v
cred	librtmp/rtmp_sys.h	/^    gnutls_certificate_credentials_t cred;$/;"	m	struct:tls_ctx
crop	OBSApi/Scene.h	/^    Vect4 crop;$/;"	m	class:SceneItem
crop_rect	x264/x264.h	/^    } crop_rect;$/;"	m	struct:x264_param_t
cross_analyze	lame/misc/abx.c	/^double  cross_analyze ( const stereo_t* p1, const stereo_t *p2, size_t len )$/;"	f
cs	lame/libmp3lame/newmdct.c	404;"	d	file:
cs_	minhook/src/thread.h	/^			CriticalSection& cs_;$/;"	m	class:MinHook::CriticalSection::ScopedLock
cs_	minhook/src/thread.h	/^		CRITICAL_SECTION cs_;$/;"	m	class:MinHook::CriticalSection
cssEditor	CLRBrowserSourcePlugin/Plugin/ConfigDialog.xaml.cs	/^        private TextEditor cssEditor;$/;"	f	class:CLRBrowserSourcePlugin.ConfigDialog	file:
ctl	Source/mongoose.c	/^  sock_t ctl[2];                    \/\/ Socketpair for mg_wakeup()$/;"	m	struct:ns_mgr	file:
ctl_msg	Source/mongoose.c	/^struct ctl_msg {$/;"	s	file:
ctrl	QSVHelper/QSVStuff.h	/^    mfxEncodeCtrl ctrl;$/;"	m	struct:EncodeCtrl
ctrl	QSVHelper/SupportStuff.h	/^    mfxEncodeCtrl *ctrl;$/;"	m	struct:encode_task
cts	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/SimpleDispatcher.cs	/^        private CancellationTokenSource cts;$/;"	f	class:RemoteBrowser.SimpleDispatcher	file:
ctx	librtmp/dh.h	/^    dhm_context ctx;$/;"	m	struct:MDH
ctx	librtmp/hashswf.c	/^    HMAC_CTX ctx;$/;"	m	struct:info	file:
cuContext	ObsNvenc/inc/NVENCEncoder.h	/^    CUcontext cuContext;$/;"	m	class:NVENCEncoder
cuCtxCreate	ObsNvenc/src/cudaDynload.cpp	/^PCUCTXCREATE cuCtxCreate = NULL;$/;"	v
cuCtxDestroy	ObsNvenc/src/cudaDynload.cpp	/^PCUCTXDESTROY cuCtxDestroy = NULL;$/;"	v
cuCtxPopCurrent	ObsNvenc/src/cudaDynload.cpp	/^PCUCTXPOPCURRENT cuCtxPopCurrent = NULL;$/;"	v
cuDeviceComputeCapability	ObsNvenc/src/cudaDynload.cpp	/^PCUDEVICECOMPUTECAPABILITY cuDeviceComputeCapability = NULL;$/;"	v
cuDeviceGet	ObsNvenc/src/cudaDynload.cpp	/^PCUDEVICEGET cuDeviceGet = NULL;$/;"	v
cuDeviceGetCount	ObsNvenc/src/cudaDynload.cpp	/^PCUDEVICEGETCOUNT cuDeviceGetCount = NULL;$/;"	v
cuDeviceGetName	ObsNvenc/src/cudaDynload.cpp	/^PCUDEVICEGETNAME cuDeviceGetName = NULL;$/;"	v
cuInit	ObsNvenc/src/cudaDynload.cpp	/^PCUINIT cuInit = NULL;$/;"	v
cubic	lame/misc/ath.c	/^    cubic     = 3,$/;"	e	file:
cubic_f	lame/misc/ath.c	/^static long double cubic_f         ( long double x ) { return x > 0.L  ?  pow (x,1\/3.)  :  0.0L; }$/;"	f	file:
cudaDynload.cpp	ObsNvenc/src/cudaDynload.cpp	1;"	F
cudaDynload.h	ObsNvenc/inc/cudaDynload.h	1;"	F
cudaError_enum	ObsNvenc/inc/cudaDynload.h	/^typedef enum cudaError_enum {$/;"	g
cudaLib	ObsNvenc/src/cudaDynload.cpp	/^static HMODULE cudaLib = NULL;$/;"	v	file:
curAudioChunkOffset	Source/MP4FileStream.cpp	/^    UINT64 curVideoChunkOffset, curAudioChunkOffset;$/;"	m	class:MP4FileStream	file:
curBitRate	Source/Encoder_AAC.cpp	/^    UINT curBitRate;$/;"	m	class:AACEncoder	file:
curBitRate	Source/Encoder_MP3.cpp	/^    UINT curBitRate;$/;"	m	class:MP3Encoder	file:
curBlankPlaybackThingy	Source/BlankAudioPlayback.cpp	/^static BlankAudioPlayback *curBlankPlaybackThingy = NULL;$/;"	v	file:
curBlendFactor	Source/D3D10System.h	/^    float                   curBlendFactor[4];$/;"	m	class:D3D10System
curBlendState	Source/D3D10System.h	/^    ID3D10BlendState        *curBlendState;$/;"	m	class:D3D10System
curBotMax	OBSApi/VolumeMeter.cpp	/^    float curBotVolume, curBotMax, curBotPeak;$/;"	m	struct:VolumeMeterData	file:
curBotPeak	OBSApi/VolumeMeter.cpp	/^    float curBotVolume, curBotMax, curBotPeak;$/;"	m	struct:VolumeMeterData	file:
curBotVolume	OBSApi/VolumeMeter.cpp	/^    float curBotVolume, curBotMax, curBotPeak;$/;"	m	struct:VolumeMeterData	file:
curBytes	Source/BandwidthAnalysis.cpp	/^    DWORD curBytes;$/;"	m	class:BandwidthAnalyzer	file:
curCPUTexture	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^DWORD                   curCPUTexture = 0;$/;"	v
curCapture	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^DWORD                   curCapture = 0;$/;"	v
curCaptureTexture	Source/DesktopImageSource.cpp	/^    int      curCaptureTexture;$/;"	m	class:DesktopImageSource	file:
curColor	OBSApi/ColorControl.cpp	/^    DWORD curColor;         \/\/current color stored$/;"	m	struct:CCStruct	file:
curCropping	Source/D3D10System.h	/^    float                   curCropping[4];$/;"	m	class:D3D10System
curDataBufferLen	Source/RTMPPublisher.h	/^    int curDataBufferLen;$/;"	m	class:RTMPPublisher
curDesktopVol	Source/OBS.h	/^    float   desktopVol, micVol, curMicVol, curDesktopVol;$/;"	m	class:OBS
curEncodeTimestamp	Source/Encoder_AAC.cpp	/^    QWORD curEncodeTimestamp;$/;"	m	class:AACEncoder	file:
curEncodeTimestamp	Source/Encoder_MP3.cpp	/^    QWORD curEncodeTimestamp;$/;"	m	class:MP3Encoder	file:
curFadeValue	Source/BitmapTransitionSource.cpp	/^    float curFadeValue;$/;"	m	class:BitmapTransitionSource	file:
curField	DShowPlugin/DeviceSource.h	/^        bool                        curField, bNewFrame;$/;"	m	struct:DeviceSource::<anonymous>
curFrame	Source/BitmapImage.h	/^    UINT curFrame, curLoop, lastDecodedFrame;$/;"	m	class:BitmapImage
curFramePic	Source/OBS.h	/^    EncoderPicture * volatile curFramePic;$/;"	m	class:OBS
curFramesDropped	Source/OBS.h	/^    DWORD curFramesDropped;$/;"	m	class:OBS
curHotkeyIDVal	Source/API.cpp	/^    DWORD curHotkeyIDVal;$/;"	m	class:OBSAPIInterface	file:
curLength	OBSApi/Utility/XString.h	/^    unsigned int curLength;$/;"	m	class:String
curLoop	Source/BitmapImage.h	/^    UINT curFrame, curLoop, lastDecodedFrame;$/;"	m	class:BitmapImage
curMatrix	OBSApi/GraphicsSystem.h	/^    int curMatrix;$/;"	m	class:GraphicsSystem
curMicVol	Source/OBS.h	/^    float   desktopVol, micVol, curMicVol, curDesktopVol;$/;"	m	class:OBS
curPin	DShowPlugin/CaptureFilter.h	/^    UINT curPin;$/;"	m	class:CaptureEnumPins
curPixelShader	Source/D3D10System.h	/^    D3D10PixelShader        *curPixelShader;$/;"	m	class:D3D10System
curPreset	Source/Encoder_x264.cpp	/^    String curPreset, curTune, curProfile;$/;"	m	class:X264Encoder	file:
curProfile	Source/Encoder_x264.cpp	/^    String curPreset, curTune, curProfile;$/;"	m	class:X264Encoder	file:
curProjMatrix	Source/D3D10System.h	/^    float                   curProjMatrix[16];$/;"	m	class:D3D10System
curRenderTarget	Source/D3D10System.h	/^    D3D10Texture            *curRenderTarget;$/;"	m	class:D3D10System
curSamplers	Source/D3D10System.h	/^    D3D10SamplerState       *curSamplers[8];$/;"	m	class:D3D10System
curSettingsSelection	Source/OBS.h	/^    int                 curSettingsSelection;$/;"	m	class:OBS
curStrain	Source/OBS.h	/^    double curStrain;$/;"	m	class:OBS
curTexture	GraphicsCapture/MemoryCapture.h	/^    DWORD curTexture;$/;"	m	class:MemoryCapture
curTexture	Source/BitmapTransitionSource.cpp	/^    UINT  curTexture;$/;"	m	class:BitmapTransitionSource	file:
curTextureID	GraphicsCapture/SharedTexCapture.h	/^    UINT curTextureID;$/;"	m	class:SharedTexCapture
curTextures	Source/D3D10System.h	/^    D3D10Texture            *curTextures[8];$/;"	m	class:D3D10System
curTime	Source/BitmapImage.h	/^    float curTime;$/;"	m	class:BitmapImage
curTopMax	OBSApi/VolumeMeter.cpp	/^    float curTopVolume, curTopMax, curTopPeak;$/;"	m	struct:VolumeMeterData	file:
curTopPeak	OBSApi/VolumeMeter.cpp	/^    float curTopVolume, curTopMax, curTopPeak;$/;"	m	struct:VolumeMeterData	file:
curTopVolume	OBSApi/VolumeMeter.cpp	/^    float curTopVolume, curTopMax, curTopPeak;$/;"	m	struct:VolumeMeterData	file:
curTopology	Source/D3D10System.h	/^    D3D10_PRIMITIVE_TOPOLOGY curTopology;$/;"	m	class:D3D10System
curTransitionTime	Source/BitmapTransitionSource.cpp	/^    float curTransitionTime;$/;"	m	class:BitmapTransitionSource	file:
curTune	Source/Encoder_x264.cpp	/^    String curPreset, curTune, curProfile;$/;"	m	class:X264Encoder	file:
curValue	Source/D3D10System.h	/^    List<BYTE> curValue;$/;"	m	struct:ShaderParam
curVertexBuffer	Source/D3D10System.h	/^    D3D10VertexBuffer       *curVertexBuffer;$/;"	m	class:D3D10System
curVertexShader	Source/D3D10System.h	/^    D3D10VertexShader       *curVertexShader;$/;"	m	class:D3D10System
curVideoChunkOffset	Source/MP4FileStream.cpp	/^    UINT64 curVideoChunkOffset, curAudioChunkOffset;$/;"	m	class:MP4FileStream	file:
curVideoTime	Source/MMDeviceAudioSource.cpp	/^    QWORD curVideoTime;$/;"	m	class:MMDeviceAudioSource	file:
curViewMatrix	Source/D3D10System.h	/^    float                   curViewMatrix[16];$/;"	m	class:D3D10System
curViewProjMatrix	Source/D3D10System.h	/^    float                   curViewProjMatrix[16];$/;"	m	class:D3D10System
curVolume	OBSApi/VolumeControl.cpp	/^    float curVolume;$/;"	m	struct:VolumeControlData	file:
cur_cw	libfaac/coder.h	/^    int cur_cw;$/;"	m
cur_pts_time	Source/Encoder_x264.cpp	/^    int cur_pts_time;$/;"	m	class:X264Encoder	file:
curbit	Source/libnsgif.h	/^    int curbit, lastbit, last_byte;$/;"	m	struct:gif_animation
currCharCodeSize	lame/frontend/parse.c	/^currCharCodeSize(void)$/;"	f	file:
currentBit	libfaac/bitstream.h	/^  long currentBit;      \/* current bit position in bit stream *\/$/;"	m
currentBufferSize	Source/RTMPPublisher.h	/^    UINT currentBufferSize;\/\/, outputRateWindowTime;$/;"	m	class:RTMPPublisher
currentSettingsPane	Source/OBS.h	/^    SettingsPane *      currentSettingsPane;$/;"	m	class:OBS
currentTextureIndex	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserRenderHandler.cs	/^        private int currentTextureIndex;$/;"	f	class:Browser.BrowserRenderHandler	file:
current_date.h	QSVHelper/IntelSupport/include/current_date.h	1;"	F
current_error	Source/libnsgif.h	/^    gif_result current_error;            \/**< current error type, or 0 for none*\/$/;"	m	struct:gif_animation
current_output_format_t	lame/dshow/Mpegac.h	/^} current_output_format_t;$/;"	t
current_setting	lame/misc/ath.c	/^    struct termios  current_setting;$/;"	m	file:
cursorPos	GraphicsCapture/GraphicsCaptureSource.h	/^    POINT cursorPos;$/;"	m	class:GraphicsCaptureSource
cursorPos	Source/D3D10System.h	/^    POINT cursorPos;$/;"	m	class:D3D10OutputDuplicator
cursorPos	Source/DesktopImageSource.cpp	/^    POINT    cursorPos;$/;"	m	class:DesktopImageSource	file:
cursorTex	Source/D3D10System.h	/^    Texture *cursorTex;$/;"	m	class:D3D10OutputDuplicator
cursorTexture	GraphicsCapture/GraphicsCaptureSource.h	/^    Texture *cursorTexture;$/;"	m	class:GraphicsCaptureSource
cursorTexture	Source/DesktopImageSource.cpp	/^    Texture  *cursorTexture;$/;"	m	class:DesktopImageSource	file:
custColors	OBSApi/ColorControl.cpp	/^    DWORD custColors[16];   \/\/custom colors in the colors dialog box$/;"	m	struct:CCStruct	file:
customColors	OBSApi/ColorControl.cpp	/^static DWORD customColors[16] = {0xFFFFFF, 0xFFFFFF, 0xFFFFFF, 0xFFFFFF,$/;"	v	file:
custom_impl	QSVHelper/IPCStructs.h	/^    mfxIMPL custom_impl, custom_intf;$/;"	m	struct:init_request
custom_intf	QSVHelper/IPCStructs.h	/^    mfxIMPL custom_impl, custom_intf;$/;"	m	struct:init_request
custom_parameters	QSVHelper/IPCStructs.h	/^    mfxInfoMFX custom_parameters;$/;"	m	struct:init_request
custom_version	QSVHelper/IPCStructs.h	/^    mfxVersion custom_version;$/;"	m	struct:init_request
cutDistribution	lame/libmp3lame/vbrquantize.c	/^cutDistribution(const int sfwork[SFBMAX], int sf_out[SFBMAX], int cut)$/;"	f	file:
cw_info_t	libfaac/bitstream.c	/^} cw_info_t;$/;"	t	file:
cw_len	libfaac/bitstream.c	/^    unsigned short cw_len; \/* codeword lenght *\/$/;"	m	file:
cw_nr	libfaac/bitstream.c	/^    unsigned int   cw_nr; \/* codeword number in the window *\/$/;"	m	file:
cw_offset	libfaac/bitstream.c	/^    unsigned int   cw_offset; \/* offset in actual codeword data vector *\/$/;"	m	file:
cx	DShowPlugin/DeviceSource.cpp	/^    UINT cx;$/;"	m	struct:ResSize	file:
cx	DShowPlugin/DeviceSource.h	/^    int cx, cy;$/;"	m	struct:SampleData
cx	GraphicsCapture/GlobalCaptureStuff.h	/^    UINT    cx, cy;$/;"	m	struct:CaptureInfo
cx	GraphicsCapture/GraphicsCapture.cpp	/^    UINT cx, cy;$/;"	m	struct:ConfigDialogData	file:
cx	GraphicsCapture/GraphicsCaptureSource.h	/^    UINT cx, cy;$/;"	m	class:GraphicsCaptureSource
cx	GraphicsCapture/WindowCapture.h	/^    UINT cx, cy;$/;"	m	class:WindowCapture
cx	OBSApi/ColorControl.cpp	/^    long  cx,cy;            \/\/size of control$/;"	m	struct:CCStruct	file:
cx	OBSApi/HotkeyControlEx.cpp	/^    long  cx,cy;$/;"	m	struct:HotkeyControlExData	file:
cx	OBSApi/Utility/XT.h	/^    int cx;$/;"	m	struct:XRect
cx	OBSApi/VolumeControl.cpp	/^    long  cx,cy;$/;"	m	struct:VolumeControlData	file:
cx	OBSApi/VolumeMeter.cpp	/^    long  cx,cy;$/;"	m	struct:VolumeMeterData	file:
cx	Source/BitmapTransitionSource.cpp	/^    UINT cx, cy;$/;"	m	struct:ConfigBitmapInfo	file:
cx	Source/TextOutputSource.cpp	/^    float cx, cy;$/;"	m	struct:ConfigTextSourceInfo	file:
cx	lame/libmp3lame/newmdct.c	402;"	d	file:
cy	DShowPlugin/DeviceSource.cpp	/^    UINT cy;$/;"	m	struct:ResSize	file:
cy	DShowPlugin/DeviceSource.h	/^    int cx, cy;$/;"	m	struct:SampleData
cy	GraphicsCapture/GlobalCaptureStuff.h	/^    UINT    cx, cy;$/;"	m	struct:CaptureInfo
cy	GraphicsCapture/GraphicsCapture.cpp	/^    UINT cx, cy;$/;"	m	struct:ConfigDialogData	file:
cy	GraphicsCapture/GraphicsCaptureSource.h	/^    UINT cx, cy;$/;"	m	class:GraphicsCaptureSource
cy	GraphicsCapture/WindowCapture.h	/^    UINT cx, cy;$/;"	m	class:WindowCapture
cy	OBSApi/ColorControl.cpp	/^    long  cx,cy;            \/\/size of control$/;"	m	struct:CCStruct	file:
cy	OBSApi/HotkeyControlEx.cpp	/^    long  cx,cy;$/;"	m	struct:HotkeyControlExData	file:
cy	OBSApi/Utility/XT.h	/^    int cy;$/;"	m	struct:XRect
cy	OBSApi/VolumeControl.cpp	/^    long  cx,cy;$/;"	m	struct:VolumeControlData	file:
cy	OBSApi/VolumeMeter.cpp	/^    long  cx,cy;$/;"	m	struct:VolumeMeterData	file:
cy	Source/BitmapTransitionSource.cpp	/^    UINT cx, cy;$/;"	m	struct:ConfigBitmapInfo	file:
cy	Source/TextOutputSource.cpp	/^    float cx, cy;$/;"	m	struct:ConfigTextSourceInfo	file:
d	lame/frontend/Makefile	/^	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \\$/;"	m
d	lame/mpglib/layer2.h	/^    short   d;$/;"	m	struct:al_table2
d	librtmp/md5.h	/^	MD5_u32plus a, b, c, d;$/;"	m
d3d	Source/D3D10System.h	/^    ID3D10Device1           *d3d;$/;"	m	class:D3D10System
d3d101CaptureInfo	GraphicsCapture/GraphicsCaptureHook/D3D10.1Capture.cpp	/^CaptureInfo             d3d101CaptureInfo;$/;"	v
d3d10CaptureInfo	GraphicsCapture/GraphicsCaptureHook/D3D10Capture.cpp	/^CaptureInfo             d3d10CaptureInfo;$/;"	v
d3d11	QSVHelper/Encoder.h	/^    CD3D11Device d3d11;$/;"	m	struct:Encoder
d3d11CaptureInfo	GraphicsCapture/GraphicsCaptureHook/D3D11Capture.cpp	/^CaptureInfo             d3d11CaptureInfo;$/;"	v
d3d11_alloc	QSVHelper/Encoder.h	/^    D3D11FrameAllocator d3d11_alloc;$/;"	m	struct:Encoder
d3d11_allocator.cpp	QSVHelper/IntelSupport/src/d3d11_allocator.cpp	1;"	F
d3d11_allocator.h	QSVHelper/IntelSupport/include/d3d11_allocator.h	1;"	F
d3d11_device.cpp	QSVHelper/IntelSupport/src/d3d11_device.cpp	1;"	F
d3d11_device.h	QSVHelper/IntelSupport/include/d3d11_device.h	1;"	F
d3d8.h	GraphicsCapture/GraphicsCaptureHook/d3d8.h	1;"	F
d3d8CaptureInfo	GraphicsCapture/GraphicsCaptureHook/D3D8Capture.cpp	/^CaptureInfo d3d8CaptureInfo;$/;"	v
d3d8EndMutex	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	/^CRITICAL_SECTION d3d8EndMutex;$/;"	v
d3d8EndScene	GraphicsCapture/GraphicsCaptureHook/D3D8Capture.cpp	/^HookData d3d8EndScene;$/;"	v
d3d8Present	GraphicsCapture/GraphicsCaptureHook/D3D8Capture.cpp	/^HookData d3d8Present;$/;"	v
d3d8Release	GraphicsCapture/GraphicsCaptureHook/D3D8Capture.cpp	/^HookData d3d8Release;$/;"	v
d3d8Reset	GraphicsCapture/GraphicsCaptureHook/D3D8Capture.cpp	/^HookData d3d8Reset;$/;"	v
d3d8caps.h	GraphicsCapture/GraphicsCaptureHook/d3d8caps.h	1;"	F
d3d8types.h	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	1;"	F
d3d9CaptureInfo	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^CaptureInfo             d3d9CaptureInfo;$/;"	v
d3d9EndMutex	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	/^CRITICAL_SECTION d3d9EndMutex;$/;"	v
d3d9EndScene	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^HookData                d3d9EndScene;$/;"	v
d3d9Format	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^DWORD                   d3d9Format = 0;$/;"	v
d3d9Present	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^HookData                d3d9Present;$/;"	v
d3d9PresentEx	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^HookData                d3d9PresentEx;$/;"	v
d3d9Reset	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^HookData                d3d9Reset;$/;"	v
d3d9ResetEx	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^HookData                d3d9ResetEx;$/;"	v
d3d9SwapPresent	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^HookData                d3d9SwapPresent;$/;"	v
d3d9ex	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^static IDirect3D9Ex       *d3d9ex        = NULL;$/;"	v	file:
d3d9exDevice	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^static IDirect3DDevice9Ex *d3d9exDevice  = NULL;$/;"	v	file:
d3d9exTexture	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^static IDirect3DTexture9  *d3d9exTexture = NULL;$/;"	v	file:
dNetworkStrain	Source/RTMPPublisher.h	/^    double dNetworkStrain;$/;"	m	class:RTMPPublisher
d_name	Source/mongoose.c	/^  char d_name[MAX_PATH_SIZE];$/;"	m	struct:dirent	file:
darHeight	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                                   darHeight;                       \/**< [in]: Specifies the display aspect ratio height. *\/$/;"	m	struct:_NV_ENC_INITIALIZE_PARAMS
darWidth	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                                   darWidth;                        \/**< [in]: Specifies the display aspect ratio Width. *\/$/;"	m	struct:_NV_ENC_INITIALIZE_PARAMS
data	DShowPlugin/DShowPlugin.cpp	/^    XElement *data;$/;"	m	struct:ConfigDialogData	file:
data	DShowPlugin/DeviceSource.h	/^    XElement        *data;$/;"	m	class:DeviceSource
data	GraphicsCapture/GraphicsCapture.cpp	/^    XElement *data;$/;"	m	struct:ConfigDialogData	file:
data	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.h	/^    BYTE data[14];$/;"	m	class:HookData
data	GraphicsCapture/GraphicsCaptureSource.h	/^    XElement *data;$/;"	m	class:GraphicsCaptureSource
data	Source/BitmapImageSource.cpp	/^    XElement *data;$/;"	m	class:BitmapImageSource	file:
data	Source/BitmapImageSource.cpp	/^    XElement *data;$/;"	m	struct:ConfigBitmapInfo	file:
data	Source/BitmapImageSource.cpp	/^    XElement *data;$/;"	m	struct:ConfigDesktopSourceInfo	file:
data	Source/BitmapTransitionSource.cpp	/^    XElement *data;$/;"	m	class:BitmapTransitionSource	file:
data	Source/BitmapTransitionSource.cpp	/^    XElement *data;$/;"	m	struct:ConfigBitmapInfo	file:
data	Source/D3D10System.h	/^    VBData *data;$/;"	m	class:D3D10VertexBuffer
data	Source/DesktopImageSource.cpp	/^    XElement *data;$/;"	m	class:DesktopImageSource	file:
data	Source/DesktopImageSource.cpp	/^    XElement *data;$/;"	m	struct:ConfigDesktopSourceInfo	file:
data	Source/GlobalSource.cpp	/^    XElement *data;$/;"	m	class:GlobalSource	file:
data	Source/OBS.h	/^    List<BYTE> data;$/;"	m	struct:TimedPacket
data	Source/OBS.h	/^    List<BYTE> data;$/;"	m	struct:VideoPacketData
data	Source/RTMPPublisher.h	/^    List<BYTE> data;$/;"	m	struct:NetworkPacket
data	Source/Settings.h	/^    } data;$/;"	m	class:SettingsPublish
data	Source/TextOutputSource.cpp	/^    XElement    *data;$/;"	m	class:TextOutputSource	file:
data	Source/TextOutputSource.cpp	/^    XElement *data;$/;"	m	struct:ConfigTextSourceInfo	file:
data	libfaac/bitstream.h	/^  unsigned char *data;      \/* data bits *\/$/;"	m
data	libfaac/coder.h	/^    int *data;$/;"	m
data	libfaac/psych.h	/^        void *data;$/;"	m
data	librtmp/http.h	/^    void *data;$/;"	m	struct:HTTP_ctx
dataBuffer	Source/RTMPPublisher.h	/^    BYTE *dataBuffer;$/;"	m	class:RTMPPublisher
dataBufferSize	Source/RTMPPublisher.h	/^    int dataBufferSize;$/;"	m	class:RTMPPublisher
dataElement	CLRBrowserSourcePlugin/Plugin/ConfigDialog.xaml.cs	/^        private XElement dataElement;$/;"	f	class:CLRBrowserSourcePlugin.ConfigDialog	file:
dataEqual	ObsNvenc/inc/nvmain.h	/^inline bool dataEqual(const T& a, const T& b)$/;"	f
dataLength	DShowPlugin/DeviceSource.h	/^    long dataLength;$/;"	m	struct:SampleData
dataMutex	GraphicsCapture/GraphicsCaptureHook/D3D8Capture.cpp	/^HANDLE dataMutex[NUM_BUFFERS] = ZERO_ARRAY;$/;"	v
dataMutexes	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^HANDLE                  dataMutexes[NUM_BUFFERS] = ZERO_ARRAY;$/;"	v
dataType	librtmp/rtmp.h	/^        uint8_t dataType;$/;"	m	struct:RTMP_READ
data_buffers	QSVHelper/QSVStuff.h	/^    std::vector<std::vector<mfxU8>> data_buffers;$/;"	m	struct:EncodeCtrl
data_in	libsamplerate/samplerate.h	/^	float	*data_in ;$/;"	m
data_in	libsamplerate/samplerate.h	/^{	float	*data_in, *data_out ;$/;"	m
data_length	QSVHelper/IPCStructs.h	/^    mfxU32 data_offset, data_length;$/;"	m	struct:bitstream_info
data_offset	QSVHelper/IPCStructs.h	/^    mfxU32 data_offset, data_length;$/;"	m	struct:bitstream_info
data_out	libsamplerate/samplerate.h	/^{	float	*data_in, *data_out ;$/;"	m
data_parsed	lame/mpglib/mpglib.h	/^    int     data_parsed;$/;"	m	struct:mpstr_tag
datadir	lame/ACM/ADbg/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	lame/ACM/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	lame/ACM/ddk/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	lame/ACM/tinyxml/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	lame/Dll/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	lame/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	lame/debian/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	lame/doc/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	lame/doc/html/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	lame/doc/man/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	lame/dshow/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	lame/frontend/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	lame/include/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	lame/libmp3lame/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	lame/libmp3lame/i386/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	lame/libmp3lame/vector/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	lame/mac/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	lame/macosx/English.lproj/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	lame/macosx/LAME.xcodeproj/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	lame/macosx/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	lame/misc/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	lame/mpglib/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	lame/vc_solution/Makefile	/^datadir = ${datarootdir}$/;"	m
datarootdir	lame/ACM/ADbg/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	lame/ACM/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	lame/ACM/ddk/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	lame/ACM/tinyxml/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	lame/Dll/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	lame/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	lame/debian/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	lame/doc/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	lame/doc/html/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	lame/doc/man/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	lame/dshow/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	lame/frontend/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	lame/include/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	lame/libmp3lame/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	lame/libmp3lame/i386/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	lame/libmp3lame/vector/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	lame/mac/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	lame/macosx/English.lproj/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	lame/macosx/LAME.xcodeproj/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	lame/macosx/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	lame/misc/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	lame/mpglib/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	lame/vc_solution/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
date	librtmp/http.h	/^    char *date;$/;"	m	struct:HTTP_ctx
days	librtmp/hashswf.c	/^static const char *days[] =$/;"	v	file:
dbMinus3	OBSApi/AudioSource.cpp	/^const float dbMinus3    = 0.7071067811865476f;$/;"	v
dbMinus6	OBSApi/AudioSource.cpp	/^const float dbMinus6    = 0.5f;$/;"	v
dbMinus9	OBSApi/AudioSource.cpp	/^const float dbMinus9    = 0.3535533905932738f;$/;"	v
dbToRms	NoiseGate/NoiseGate.cpp	/^inline float dbToRms(float db)$/;"	f
dc_destdir	lame/Makefile	/^	  && dc_destdir="$${TMPDIR-\/tmp}\/am-dc-$$$$\/" \\$/;"	m
dc_install_base	lame/Makefile	/^	dc_install_base=`$(am__cd) $(distdir)\/_inst && pwd | sed -e 's,^[^:\\\\\/]:[\\\\\/],\/,'` \\$/;"	m
dct12	lame/mpglib/layer3.c	/^static void dct12(real *in,real *rawout1,real *rawout2,real *wi,real *ts)$/;"	f	file:
dct36	lame/mpglib/layer3.c	/^static void dct36(real *inbuf,real *o1,real *o2,real *wintab,real *tsbuf)$/;"	f	file:
dct64	lame/mpglib/dct64_i386.c	/^dct64(real * a, real * b, real * c)$/;"	f
dct64_1	lame/mpglib/dct64_i386.c	/^dct64_1(real * out0, real * out1, real * b1, real * b2, real * samples)$/;"	f	file:
dct64_i386.c	lame/mpglib/dct64_i386.c	1;"	F
dct64_i386.h	lame/mpglib/dct64_i386.h	1;"	F
ddCaptures	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	/^LPDIRECTDRAWSURFACE7    ddCaptures[NUM_BUFFERS] = ZERO_ARRAY;$/;"	v
ddUnlockFctMutex	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	/^HANDLE                  ddUnlockFctMutex = 0;$/;"	v
ddf	lame/misc/scalartest.c	/^typedef double ( *ddf ) ( double );$/;"	t	file:
ddrawCaptureInfo	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	/^CaptureInfo ddrawCaptureInfo;$/;"	v
ddrawMutex	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	/^CRITICAL_SECTION ddrawMutex;$/;"	v
ddrawPaletteSetEntries	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	/^HookData ddrawPaletteSetEntries;$/;"	v
ddrawSurfaceBlt	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	/^HookData ddrawSurfaceBlt;$/;"	v
ddrawSurfaceBltFast	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	/^HookData ddrawSurfaceBltFast;$/;"	v
ddrawSurfaceCreate	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	/^HookData ddrawSurfaceCreate;$/;"	v
ddrawSurfaceFlip	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	/^HookData ddrawSurfaceFlip;$/;"	v
ddrawSurfaceLock	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	/^HookData ddrawSurfaceLock;$/;"	v
ddrawSurfaceRelease	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	/^HookData ddrawSurfaceRelease;$/;"	v
ddrawSurfaceRestore	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	/^HookData ddrawSurfaceRestore;$/;"	v
ddrawSurfaceSetPalette	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	/^HookData ddrawSurfaceSetPalette;$/;"	v
ddrawSurfaceUnlock	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	/^HookData ddrawSurfaceUnlock;$/;"	v
debug	lame/ACM/main.cpp	/^ADbg * debug = NULL;$/;"	v
debugf	lame/libmp3lame/lame_global_flags.h	/^        void    (*debugf) (const char *format, va_list ap);$/;"	m	struct:lame_global_struct::<anonymous>
decay	lame/libmp3lame/util.h	/^        FLOAT   decay;       \/* determined to lower x dB each second *\/$/;"	m
decay	lame/libmp3lame/util.h	/^        FLOAT   decay;$/;"	m
decltype	Source/Encoder_QSV.cpp	/^    auto timestampFromMS(T t) -> decltype(t*MFX_TIME_FACTOR)$/;"	f
decode	lame/doc/html/detailed.html	/^<a name="decode"><span class="hilight">--decode<\/span><\/a> MP3 decode capability$/;"	a
decode-mp3delay	lame/doc/html/detailed.html	/^<a name="decode-mp3delay"><span class="hilight">--decode-mp3delay x<\/span><\/a> Indicate a different encoder delay$/;"	a
decode1_headersB_clipchoice	lame/libmp3lame/mpglib_interface.c	/^decode1_headersB_clipchoice(PMPSTR pmp, unsigned char *buffer, int len,$/;"	f	file:
decodeMP3	lame/mpglib/interface.c	/^decodeMP3(PMPSTR mp, unsigned char *in, int isize, char *out, int osize, int *done)$/;"	f
decodeMP3_clipchoice	lame/mpglib/interface.c	/^decodeMP3_clipchoice(PMPSTR mp, unsigned char *in, int isize, char *out, int *done,$/;"	f	file:
decodeMP3_unclipped	lame/mpglib/interface.c	/^decodeMP3_unclipped(PMPSTR mp, unsigned char *in, int isize, char *out, int osize, int *done)$/;"	f
decode_header	lame/mpglib/common.c	/^decode_header(PMPSTR mp, struct frame *fr, unsigned long newhead)$/;"	f
decode_i386.c	lame/mpglib/decode_i386.c	1;"	F
decode_i386.h	lame/mpglib/decode_i386.h	1;"	F
decode_layer1_frame	lame/mpglib/layer1.c	/^decode_layer1_frame(PMPSTR mp, unsigned char *pcm_sample, int *pcm_point)$/;"	f
decode_layer1_sideinfo	lame/mpglib/layer1.c	/^decode_layer1_sideinfo(PMPSTR mp)$/;"	f
decode_layer2_frame	lame/mpglib/layer2.c	/^decode_layer2_frame(PMPSTR mp, unsigned char *pcm_sample, int *pcm_point)$/;"	f
decode_layer2_sideinfo	lame/mpglib/layer2.c	/^decode_layer2_sideinfo(PMPSTR mp)$/;"	f
decode_layer3_frame	lame/mpglib/layer3.c	/^decode_layer3_frame(PMPSTR mp, unsigned char *pcm_sample, int *pcm_point,$/;"	f
decode_layer3_sideinfo	lame/mpglib/layer3.c	/^decode_layer3_sideinfo(PMPSTR mp)$/;"	f
decode_on_the_fly	lame/libmp3lame/lame_global_flags.h	/^    int     decode_on_the_fly; \/* decode on the fly? default=0                *\/$/;"	m	struct:lame_global_struct
decode_on_the_fly	lame/libmp3lame/util.h	/^        int     decode_on_the_fly; \/* decode on the fly? default=0                *\/$/;"	m
decode_only	lame/libmp3lame/lame_global_flags.h	/^    int     decode_only;     \/* use lame\/mpglib to convert mp3 to wav       *\/$/;"	m	struct:lame_global_struct
decode_reset	lame/mpglib/interface.c	/^decode_reset(PMPSTR mp)$/;"	f
decode_time_stamp	QSVHelper/IPCStructs.h	/^    mfxI64 decode_time_stamp;$/;"	m	struct:bitstream_info
decoded_frame	Source/libnsgif.h	/^    int decoded_frame;                \/**< current frame decoded to bitmap *\/$/;"	m	struct:gif_animation
decoder	lame/misc/abx.c	/^const decoder_t  decoder [] = {$/;"	v
decoder_ldadd	lame/libmp3lame/Makefile	/^decoder_ldadd = $(top_builddir)\/mpglib\/libmpgdecoder.la$/;"	m
decoder_progress	lame/frontend/timestatus.c	/^decoder_progress(DecoderProgress dp, const mp3data_struct * mp3data, int iread)$/;"	f
decoder_progress_finish	lame/frontend/timestatus.c	/^decoder_progress_finish(DecoderProgress dp)$/;"	f
decoder_progress_init	lame/frontend/timestatus.c	/^decoder_progress_init(unsigned long n, int framesize)$/;"	f
decoder_t	lame/misc/abx.c	/^} decoder_t;$/;"	t	file:
decwin	lame/mpglib/tabinit.c	/^real    decwin[512 + 32];$/;"	v
defaultAudioDLLName	libmfx/src/mfx_load_dll.cpp	/^wchar_t * const defaultAudioDLLName[2] = {L"libmfxaudiosw32.dll",$/;"	v
defaultAudioDLLName	libmfx/src/mfx_load_dll.cpp	/^wchar_t * const defaultAudioDLLName[2] = {L"libmfxaudiosw64.dll",$/;"	v
defaultBlendFactor	Source/OBS.cpp	/^const float defaultBlendFactor[4] = {1.0f, 1.0f, 1.0f, 1.0f};$/;"	v
defaultClientHeight	Source/OBS.h	/^static const int defaultClientHeight = 553;$/;"	v
defaultClientWidth	Source/OBS.h	/^static const int defaultClientWidth  = 640;$/;"	v
defaultDLLName	libmfx/src/mfx_load_dll.cpp	/^wchar_t * const defaultDLLName[2] = {L"libmfxhw32.dll",$/;"	v
defaultDLLName	libmfx/src/mfx_load_dll.cpp	/^wchar_t * const defaultDLLName[2] = {L"libmfxhw64.dll",$/;"	v
defaultPluginDLLName	libmfx/src/mfx_load_dll.cpp	/^wchar_t  * const defaultPluginDLLName[2] = {L"mfxplugin32_hw.dll",$/;"	v
defaultPluginDLLName	libmfx/src/mfx_load_dll.cpp	/^wchar_t  * const defaultPluginDLLName[2] = {L"mfxplugin64_hw.dll",$/;"	v
defaultPluginNameLen	libmfx/src/mfx_plugin_hive.cpp	/^    const mfxU32 defaultPluginNameLen = 25;$/;"	v
defaultValue	Source/D3D10System.h	/^    List<BYTE> defaultValue;$/;"	m	struct:ShaderParam
deinitNvEnc	ObsNvenc/src/nvEncodeAPI.cpp	/^void deinitNvEnc()$/;"	f
deinit_console	lame/frontend/console.c	/^deinit_console(Console_IO_t * const mfp)$/;"	f	file:
deinterlacer	DShowPlugin/DeviceSource.h	/^    } deinterlacer;$/;"	m	class:DeviceSource
deinterlacerConfigs	DShowPlugin/DeviceSource.cpp	/^DeinterlacerConfig deinterlacerConfigs[DEINTERLACING_TYPE_LAST] = {$/;"	v
deinterlacerLocalizations	DShowPlugin/DShowPlugin.cpp	/^CTSTR deinterlacerLocalizations[DEINTERLACING_TYPE_LAST] = {$/;"	v
delay	libfaac/coder.h	/^    int delay[MAX_SHORT_WINDOWS];$/;"	m
delayOffset	Source/Encoder_QSV.cpp	/^    INT64 delayOffset;$/;"	m	class:QSVEncoder	file:
delayOffset	Source/Encoder_x264.cpp	/^    INT64 delayOffset;$/;"	m	class:X264Encoder	file:
delayTime	Source/DelayedPublisher.cpp	/^    DWORD delayTime;$/;"	m	class:DelayedPublisher	file:
delayedPackets	Source/DelayedPublisher.cpp	/^    List<NetworkPacket> delayedPackets;$/;"	m	class:DelayedPublisher	file:
deleteStream	Source/RTMPStuff.h	/^SAVC(deleteStream);$/;"	v
deleteStream	librtmp/rtmp.c	/^SAVC(deleteStream);$/;"	v
delete_event	lame/frontend/gtkanal.c	/^delete_event(GtkWidget * widget, GdkEvent * event, gpointer data)$/;"	f	file:
deliver_websocket_frame	Source/mongoose.c	/^static size_t deliver_websocket_frame(struct connection *conn) {$/;"	f	file:
delta	lame/dshow/Mpegac.h	/^    REFERENCE_TIME  delta;$/;"	m
delta_amplitude	lame/misc/ath.c	/^    long double    delta_amplitude;$/;"	m	file:
depcomp	lame/depcomp	1;"	F
depcomp	lame/frontend/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/depcomp$/;"	m
depcomp	lame/frontend/depcomp	1;"	F
depcomp	lame/libmp3lame/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/depcomp$/;"	m
depcomp	lame/libmp3lame/depcomp	1;"	F
depcomp	lame/libmp3lame/vector/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/depcomp$/;"	m
depcomp	lame/misc/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/depcomp$/;"	m
depcomp	lame/misc/depcomp	1;"	F
depcomp	lame/mpglib/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/depcomp$/;"	m
depcomp	lame/mpglib/depcomp	1;"	F
depmode	lame/ACM/ADbg/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
depmode	lame/ACM/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
depmode	lame/ACM/ddk/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
depmode	lame/ACM/tinyxml/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
depmode	lame/Dll/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
depmode	lame/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
depmode	lame/debian/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
depmode	lame/doc/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
depmode	lame/doc/html/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
depmode	lame/doc/man/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
depmode	lame/dshow/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
depmode	lame/frontend/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
depmode	lame/include/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
depmode	lame/libmp3lame/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
depmode	lame/libmp3lame/i386/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
depmode	lame/libmp3lame/vector/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
depmode	lame/mac/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
depmode	lame/macosx/English.lproj/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
depmode	lame/macosx/LAME.xcodeproj/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
depmode	lame/macosx/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
depmode	lame/misc/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
depmode	lame/mpglib/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
depmode	lame/vc_solution/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
depthState	Source/D3D10System.h	/^    ID3D10DepthStencilState *depthState;$/;"	m	class:D3D10System
description	Source/RTMPStuff.h	/^SAVC(description);$/;"	v
description	librtmp/rtmp.c	/^SAVC(description);$/;"	v
desired_block_type	libfaac/coder.h	/^    int desired_block_type;$/;"	m
desktopAudio	Source/OBS.h	/^    AudioSource  *desktopAudio;$/;"	m	class:OBS
desktopBoost	Source/OBS.h	/^    float   desktopBoost, micBoost;$/;"	m	class:OBS
desktopMag	Source/OBS.h	/^    float   desktopMag, micMag;$/;"	m	class:OBS
desktopMax	Source/OBS.h	/^    float   desktopMax, micMax;$/;"	m	class:OBS
desktopPeak	Source/OBS.h	/^    float   desktopPeak, micPeak;$/;"	m	class:OBS
desktopVol	Source/OBS.h	/^    float   desktopVol, micVol, curMicVol, curDesktopVol;$/;"	m	class:OBS
desktopVolumeChangeCallback	Source/OBS.h	/^    OBS_VOLUME_CHANGED_CALLBACK desktopVolumeChangeCallback;$/;"	m	struct:PluginInfo
destFactor	Source/D3D10System.h	/^    GSBlendType srcFactor, destFactor;$/;"	m	struct:SavedBlendState
destroy	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	/^    void destroy()$/;"	f	class:Palette	file:
destroyPaneMethod	CLRHostPlugin/CLRHostPlugin/CLRSettingsPane.h	/^    mscorlib::_MethodInfo *destroyPaneMethod;$/;"	m	class:CLRSettingsPane
detail	libmfx/include/msdk/include/mfxplugin++.h	/^namespace detail $/;"	n
detailed.html	lame/doc/html/detailed.html	1;"	F
details	Source/RTMPStuff.h	/^SAVC(details);$/;"	v
device	DShowPlugin/DeviceSource.h	/^    DeviceSource *device;$/;"	m	class:DeviceAudioSource
device	ObsNvenc/inc/nvEncodeAPI.h	/^    void*               device;                           \/**< [in]: Pointer to client device. *\/$/;"	m	struct:_NV_ENC_OPEN_ENCODE_SESSIONEX_PARAMS
device	lame/misc/ath.c	/^    const char*    device;$/;"	m	file:
deviceFilter	DShowPlugin/DeviceSource.h	/^    IBaseFilter             *deviceFilter;$/;"	m	class:DeviceSource
deviceIDKeyName	libmfx/src/mfx_library_iterator.cpp	/^wchar_t deviceIDKeyName[] = L"DeviceID";$/;"	v
deviceIDList	DShowPlugin/DShowPlugin.cpp	/^    StringList deviceIDList;$/;"	m	struct:ConfigDialogData	file:
deviceId	Source/MMDeviceAudioSource.cpp	/^    String deviceId;$/;"	m	class:MMDeviceAudioSource	file:
deviceLost	Source/MMDeviceAudioSource.cpp	/^    bool deviceLost;$/;"	m	class:MMDeviceAudioSource	file:
deviceName	DShowPlugin/IVideoCaptureFilter.h	/^    TCHAR                                deviceName[256];                   \/\/!< Device name (get only)$/;"	m	struct:_VIDEO_CAPTURE_FILTER_SETTINGS
deviceNameList	DShowPlugin/DShowPlugin.cpp	/^    StringList deviceNameList;$/;"	m	struct:ConfigDialogData	file:
deviceOutputID	Source/DesktopImageSource.cpp	/^    UINT     deviceOutputID;$/;"	m	class:DesktopImageSource	file:
deviceType	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_DEVICE_TYPE  deviceType;                       \/**< [in]: Specified the device Type *\/$/;"	m	struct:_NV_ENC_OPEN_ENCODE_SESSIONEX_PARAMS
device_id	libmfx/include/mfx_library_iterator.h	/^    mfxU32 device_id;$/;"	m	struct:mfx_disp_adapters
devices	Source/OBS.h	/^    List<AudioDeviceInfo> devices;$/;"	m	struct:AudioDeviceList
devices	Source/OBS.h	/^    List<DeviceOutputData> devices;$/;"	m	struct:DeviceOutputs
dewin	lame/mpglib/tabinit.c	/^static const double dewin[512] = {$/;"	v	file:
dh	librtmp/rtmp.h	/^        void *dh;			\/* for encryption *\/$/;"	m	struct:RTMP_LNK
dh.h	librtmp/dh.h	1;"	F
dhgroups.h	librtmp/dhgroups.h	1;"	F
dhm_G	librtmp/rtmp_sys.h	/^    const char *dhm_P, *dhm_G;$/;"	m	struct:tls_server_ctx
dhm_P	librtmp/rtmp_sys.h	/^    const char *dhm_P, *dhm_G;$/;"	m	struct:tls_server_ctx
dhoff	librtmp/handshake.h	/^static getoff *dhoff[] = {GetDHOffset1, GetDHOffset2};$/;"	v
dialogID	Source/DesktopImageSource.cpp	/^    int dialogID;$/;"	m	struct:ConfigDesktopSourceInfo	file:
die	lame/misc/mugeco.sh	/^die() {	    # usage:  die [ <exitcode> [ <errormessage> ] ]$/;"	f
difference	lame/frontend/gtkanal.c	/^    int     difference;      \/* plot original - decoded instead of orig vs. decoded *\/$/;"	m	struct:gtkinfostruct	file:
digitalAudioGain	DShowPlugin/IVideoCaptureFilter.h	/^    int                                  digitalAudioGain;                  \/\/!< Digital audio gain (-60 - 12 dB)$/;"	m	struct:_VIDEO_CAPTURE_FILTER_SETTINGS
digits	lame/frontend/brhist.c	/^digits(unsigned number)$/;"	f	file:
digoff	librtmp/handshake.h	/^static getoff *digoff[] = {GetDigestOffset1, GetDigestOffset2};$/;"	v
dim	lame/libmp3lame/id3tag.h	/^        size_t  dim;$/;"	m	struct:FrameDataNode::<anonymous>
dimension_of	lame/frontend/parse.c	61;"	d	file:
dimension_of	lame/frontend/parse.c	62;"	d	file:
dimension_of	lame/libmp3lame/machine.h	162;"	d
dir	ObsNvenc/inc/nvEncodeAPI.h	/^    int32_t    dir         : 1;                         \/**< [in]: Specifies the direction of motion estimation . 0=L0 1=L1.*\/$/;"	m	struct:_NVENC_EXTERNAL_ME_HINT
dir	lame/ACM/ADbg/Makefile	/^	    dir=`echo "\/$$file" | sed -e 's,\/[^\/]*$$,,'`; \\$/;"	m
dir	lame/ACM/Makefile	/^	    dir=`echo "\/$$file" | sed -e 's,\/[^\/]*$$,,'`; \\$/;"	m
dir	lame/ACM/ddk/Makefile	/^	    dir=`echo "\/$$file" | sed -e 's,\/[^\/]*$$,,'`; \\$/;"	m
dir	lame/ACM/tinyxml/Makefile	/^	    dir=`echo "\/$$file" | sed -e 's,\/[^\/]*$$,,'`; \\$/;"	m
dir	lame/Dll/Makefile	/^	    dir=`echo "\/$$file" | sed -e 's,\/[^\/]*$$,,'`; \\$/;"	m
dir	lame/Makefile	/^	    dir=`echo "\/$$file" | sed -e 's,\/[^\/]*$$,,'`; \\$/;"	m
dir	lame/debian/Makefile	/^	    dir=`echo "\/$$file" | sed -e 's,\/[^\/]*$$,,'`; \\$/;"	m
dir	lame/doc/Makefile	/^	    dir=`echo "\/$$file" | sed -e 's,\/[^\/]*$$,,'`; \\$/;"	m
dir	lame/doc/html/Makefile	/^	    dir=`echo "\/$$file" | sed -e 's,\/[^\/]*$$,,'`; \\$/;"	m
dir	lame/doc/man/Makefile	/^	    dir=`echo "\/$$file" | sed -e 's,\/[^\/]*$$,,'`; \\$/;"	m
dir	lame/dshow/Makefile	/^	    dir=`echo "\/$$file" | sed -e 's,\/[^\/]*$$,,'`; \\$/;"	m
dir	lame/frontend/Makefile	/^	    dir=`echo "\/$$file" | sed -e 's,\/[^\/]*$$,,'`; \\$/;"	m
dir	lame/include/Makefile	/^	    dir=`echo "\/$$file" | sed -e 's,\/[^\/]*$$,,'`; \\$/;"	m
dir	lame/libmp3lame/Makefile	/^	    dir=`echo "\/$$file" | sed -e 's,\/[^\/]*$$,,'`; \\$/;"	m
dir	lame/libmp3lame/Makefile	/^	  dir="`echo $$p | sed -e 's|\/[^\/]*$$||'`"; \\$/;"	m
dir	lame/libmp3lame/Makefile	/^	  test "$$dir" != "$$p" || dir=.; \\$/;"	m
dir	lame/libmp3lame/i386/Makefile	/^	    dir=`echo "\/$$file" | sed -e 's,\/[^\/]*$$,,'`; \\$/;"	m
dir	lame/libmp3lame/i386/Makefile	/^	  dir="`echo $$p | sed -e 's|\/[^\/]*$$||'`"; \\$/;"	m
dir	lame/libmp3lame/i386/Makefile	/^	  test "$$dir" != "$$p" || dir=.; \\$/;"	m
dir	lame/libmp3lame/vector/Makefile	/^	    dir=`echo "\/$$file" | sed -e 's,\/[^\/]*$$,,'`; \\$/;"	m
dir	lame/libmp3lame/vector/Makefile	/^	  dir="`echo $$p | sed -e 's|\/[^\/]*$$||'`"; \\$/;"	m
dir	lame/libmp3lame/vector/Makefile	/^	  test "$$dir" != "$$p" || dir=.; \\$/;"	m
dir	lame/mac/Makefile	/^	    dir=`echo "\/$$file" | sed -e 's,\/[^\/]*$$,,'`; \\$/;"	m
dir	lame/macosx/English.lproj/Makefile	/^	    dir=`echo "\/$$file" | sed -e 's,\/[^\/]*$$,,'`; \\$/;"	m
dir	lame/macosx/LAME.xcodeproj/Makefile	/^	    dir=`echo "\/$$file" | sed -e 's,\/[^\/]*$$,,'`; \\$/;"	m
dir	lame/macosx/Makefile	/^	    dir=`echo "\/$$file" | sed -e 's,\/[^\/]*$$,,'`; \\$/;"	m
dir	lame/misc/Makefile	/^	    dir=`echo "\/$$file" | sed -e 's,\/[^\/]*$$,,'`; \\$/;"	m
dir	lame/mpglib/Makefile	/^	    dir=`echo "\/$$file" | sed -e 's,\/[^\/]*$$,,'`; \\$/;"	m
dir	lame/mpglib/Makefile	/^	  dir="`echo $$p | sed -e 's|\/[^\/]*$$||'`"; \\$/;"	m
dir	lame/mpglib/Makefile	/^	  test "$$dir" != "$$p" || dir=.; \\$/;"	m
dir	lame/vc_solution/Makefile	/^	    dir=`echo "\/$$file" | sed -e 's,\/[^\/]*$$,,'`; \\$/;"	m
dir0	lame/ACM/Makefile	/^        dir0="$$dir0"\/"$$first"; \\$/;"	m
dir0	lame/ACM/Makefile	/^        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \\$/;"	m
dir0	lame/ACM/Makefile	/^  dir0=`pwd`; \\$/;"	m
dir0	lame/Makefile	/^        dir0="$$dir0"\/"$$first"; \\$/;"	m
dir0	lame/Makefile	/^        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \\$/;"	m
dir0	lame/Makefile	/^  dir0=`pwd`; \\$/;"	m
dir0	lame/doc/Makefile	/^        dir0="$$dir0"\/"$$first"; \\$/;"	m
dir0	lame/doc/Makefile	/^        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \\$/;"	m
dir0	lame/doc/Makefile	/^  dir0=`pwd`; \\$/;"	m
dir0	lame/libmp3lame/Makefile	/^        dir0="$$dir0"\/"$$first"; \\$/;"	m
dir0	lame/libmp3lame/Makefile	/^        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \\$/;"	m
dir0	lame/libmp3lame/Makefile	/^  dir0=`pwd`; \\$/;"	m
dir0	lame/macosx/Makefile	/^        dir0="$$dir0"\/"$$first"; \\$/;"	m
dir0	lame/macosx/Makefile	/^        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \\$/;"	m
dir0	lame/macosx/Makefile	/^  dir0=`pwd`; \\$/;"	m
dir1	lame/ACM/Makefile	/^	    dir1=$$subdir; dir2="$(distdir)\/$$subdir"; \\$/;"	m
dir1	lame/ACM/Makefile	/^	    dir1=$$subdir; dir2="$(top_distdir)"; \\$/;"	m
dir1	lame/ACM/Makefile	/^    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \\$/;"	m
dir1	lame/Makefile	/^	    dir1=$$subdir; dir2="$(distdir)\/$$subdir"; \\$/;"	m
dir1	lame/Makefile	/^	    dir1=$$subdir; dir2="$(top_distdir)"; \\$/;"	m
dir1	lame/Makefile	/^    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \\$/;"	m
dir1	lame/doc/Makefile	/^	    dir1=$$subdir; dir2="$(distdir)\/$$subdir"; \\$/;"	m
dir1	lame/doc/Makefile	/^	    dir1=$$subdir; dir2="$(top_distdir)"; \\$/;"	m
dir1	lame/doc/Makefile	/^    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \\$/;"	m
dir1	lame/libmp3lame/Makefile	/^	    dir1=$$subdir; dir2="$(distdir)\/$$subdir"; \\$/;"	m
dir1	lame/libmp3lame/Makefile	/^	    dir1=$$subdir; dir2="$(top_distdir)"; \\$/;"	m
dir1	lame/libmp3lame/Makefile	/^    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \\$/;"	m
dir1	lame/macosx/Makefile	/^	    dir1=$$subdir; dir2="$(distdir)\/$$subdir"; \\$/;"	m
dir1	lame/macosx/Makefile	/^	    dir1=$$subdir; dir2="$(top_distdir)"; \\$/;"	m
dir1	lame/macosx/Makefile	/^    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \\$/;"	m
dir2	lame/ACM/Makefile	/^	    dir1=$$subdir; dir2="$(distdir)\/$$subdir"; \\$/;"	m
dir2	lame/ACM/Makefile	/^	    dir1=$$subdir; dir2="$(top_distdir)"; \\$/;"	m
dir2	lame/ACM/Makefile	/^          dir2="..\/$$dir2"; \\$/;"	m
dir2	lame/ACM/Makefile	/^          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \\$/;"	m
dir2	lame/ACM/Makefile	/^        dir2=`echo "$$dir0" | sed -e "$$sed_last"`\/"$$dir2"; \\$/;"	m
dir2	lame/Makefile	/^	    dir1=$$subdir; dir2="$(distdir)\/$$subdir"; \\$/;"	m
dir2	lame/Makefile	/^	    dir1=$$subdir; dir2="$(top_distdir)"; \\$/;"	m
dir2	lame/Makefile	/^          dir2="..\/$$dir2"; \\$/;"	m
dir2	lame/Makefile	/^          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \\$/;"	m
dir2	lame/Makefile	/^        dir2=`echo "$$dir0" | sed -e "$$sed_last"`\/"$$dir2"; \\$/;"	m
dir2	lame/doc/Makefile	/^	    dir1=$$subdir; dir2="$(distdir)\/$$subdir"; \\$/;"	m
dir2	lame/doc/Makefile	/^	    dir1=$$subdir; dir2="$(top_distdir)"; \\$/;"	m
dir2	lame/doc/Makefile	/^          dir2="..\/$$dir2"; \\$/;"	m
dir2	lame/doc/Makefile	/^          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \\$/;"	m
dir2	lame/doc/Makefile	/^        dir2=`echo "$$dir0" | sed -e "$$sed_last"`\/"$$dir2"; \\$/;"	m
dir2	lame/libmp3lame/Makefile	/^	    dir1=$$subdir; dir2="$(distdir)\/$$subdir"; \\$/;"	m
dir2	lame/libmp3lame/Makefile	/^	    dir1=$$subdir; dir2="$(top_distdir)"; \\$/;"	m
dir2	lame/libmp3lame/Makefile	/^          dir2="..\/$$dir2"; \\$/;"	m
dir2	lame/libmp3lame/Makefile	/^          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \\$/;"	m
dir2	lame/libmp3lame/Makefile	/^        dir2=`echo "$$dir0" | sed -e "$$sed_last"`\/"$$dir2"; \\$/;"	m
dir2	lame/macosx/Makefile	/^	    dir1=$$subdir; dir2="$(distdir)\/$$subdir"; \\$/;"	m
dir2	lame/macosx/Makefile	/^	    dir1=$$subdir; dir2="$(top_distdir)"; \\$/;"	m
dir2	lame/macosx/Makefile	/^          dir2="..\/$$dir2"; \\$/;"	m
dir2	lame/macosx/Makefile	/^          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \\$/;"	m
dir2	lame/macosx/Makefile	/^        dir2=`echo "$$dir0" | sed -e "$$sed_last"`\/"$$dir2"; \\$/;"	m
dir_entry	Source/mongoose.c	/^struct dir_entry {$/;"	s	file:
direct	Source/libnsgif.h	/^    unsigned char *direct;$/;"	m	struct:gif_animation
direct8x8	x264/x264.h	/^    int direct8x8;   \/* limit b_direct to >=8x8 *\/$/;"	m
direction	lame/misc/ath.c	/^    direction_t    direction;            \/\/ down, up, still_up, still_down, turn_down, turn_up$/;"	m	file:
direction	libfaac/coder.h	/^    int direction;                       \/* Filtering direction *\/$/;"	m
direction_change	lame/misc/ath.c	/^    long           direction_change;$/;"	m	file:
direction_t	lame/misc/ath.c	/^} direction_t;$/;"	t	file:
directory	OBSApi/Utility/XT_Windows.cpp	/^    unique_ptr<void, HandleCloser> directory, change_handle, thread, stop_event;$/;"	m	struct:OSDirectoryMonitorData	file:
directoryChange	OBSApi/Utility/XT_Windows.cpp	/^    OVERLAPPED directoryChange;$/;"	m	struct:OSFileChangeData	file:
directory_path	OBSApi/Utility/XT_Windows.cpp	/^    String directory_path;$/;"	m	struct:OSDirectoryMonitorData	file:
dirent	Source/mongoose.c	/^struct dirent {$/;"	s	file:
dirtyEventHandler	CLRBrowserSourcePlugin/Plugin/SettingsPane.xaml.cs	/^        private EventHandler dirtyEventHandler;$/;"	f	class:CLRBrowserSourcePlugin.SettingsPane	file:
dirtyPropHandler	CLRBrowserSourcePlugin/Plugin/SettingsPane.xaml.cs	/^        private System.Windows.Forms.PropertyValueChangedEventHandler dirtyPropHandler;$/;"	f	class:CLRBrowserSourcePlugin.SettingsPane	file:
dirtyRoutedHandler	CLRBrowserSourcePlugin/Plugin/SettingsPane.xaml.cs	/^        private RoutedEventHandler dirtyRoutedHandler;$/;"	f	class:CLRBrowserSourcePlugin.SettingsPane	file:
disableDeblockingFilterIDC	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t disableDeblockingFilterIDC;                            \/**< [in]: Specifies the deblocking filter mode. Permissible value range: [0,2] *\/$/;"	m	struct:_NV_ENC_CONFIG_H264
disableSPSPPS	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t disableSPSPPS             :1;                          \/**< [in]: Set to 1 to disable writing of Sequence and Picture parameter info in bitstream *\/$/;"	m	struct:_NV_ENC_CONFIG_H264
disable_FPE	lame/libmp3lame/util.c	/^disable_FPE(void)$/;"	f
disable_reservoir	lame/libmp3lame/lame_global_flags.h	/^    int     disable_reservoir; \/* use bit reservoir?                     *\/$/;"	m	struct:lame_global_struct
disable_reservoir	lame/libmp3lame/util.h	/^        int     disable_reservoir;$/;"	m
disable_wav_header	lame/frontend/main.h	/^    int   disable_wav_header;$/;"	m	struct:DecoderConfig
disabledBlend	Source/D3D10System.h	/^    ID3D10BlendState        *disabledBlend;$/;"	m	class:D3D10System
dismiss	OBSApi/Utility/RAIIHelpers.h	/^    void dismiss() { active = false; }$/;"	f	struct:ScopeGuard
disp	minhook/src/HDE32/hde32.h	/^    } disp;$/;"	m
disp	minhook/src/HDE64/include/hde64.h	/^    } disp;$/;"	m
disp16	minhook/src/HDE32/hde32.h	/^        uint16_t disp16;$/;"	m
disp16	minhook/src/HDE64/include/hde64.h	/^        uint16_t disp16;$/;"	m
disp32	minhook/src/HDE32/hde32.h	/^        uint32_t disp32;$/;"	m
disp32	minhook/src/HDE64/include/hde64.h	/^        uint32_t disp32;$/;"	m
disp8	minhook/src/HDE32/hde32.h	/^        uint8_t disp8;$/;"	m
disp8	minhook/src/HDE64/include/hde64.h	/^        uint8_t disp8;$/;"	m
dispGuard	libmfx/src/main.cpp	/^    MFX::mfxCriticalSection dispGuard = 0;$/;"	v
dispVersion	libmfx/include/mfx_dispatcher.h	/^    mfxVersion dispVersion;$/;"	m	struct:MFX_DISP_HANDLE
disp_height	lame/frontend/console.h	/^    int     disp_height;$/;"	m	struct:console_io_struct
disp_width	lame/frontend/console.h	/^    int     disp_width;$/;"	m	struct:console_io_struct
dispatchQueue	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/SimpleDispatcher.cs	/^        private BlockingCollection<Action> dispatchQueue;$/;"	f	class:RemoteBrowser.SimpleDispatcher	file:
dispatchThread	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/SimpleDispatcher.cs	/^        private Thread dispatchThread;$/;"	f	class:RemoteBrowser.SimpleDispatcher	file:
dispatcher	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserManager.cs	/^        private SimpleDispatcher dispatcher;$/;"	f	class:Browser.BrowserManager	file:
display	Source/libnsgif.h	/^      BOOL display;                \/**< whether the frame should be displayed\/animated *\/$/;"	m	struct:gif_frame
displayName	CLRHostPlugin/CLRHostInterop/AbstractImageSourceFactory.h	/^        String^ displayName;$/;"	m	class:CLROBS::abstract
displayPOCSyntax	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t displayPOCSyntax;                           \/**< [in]: Specifies the display POC syntax This is required to be set if client is handling the picture type decision. *\/$/;"	m	struct:_NV_ENC_PIC_PARAMS_H264
display_bitrate	lame/frontend/parse.c	/^display_bitrate(FILE * const fp, const char *const version, const int d, const int indx)$/;"	f	file:
display_bitrates	lame/frontend/parse.c	/^display_bitrates(FILE * const fp)$/;"	f
disposal_method	Source/libnsgif.h	/^    unsigned char disposal_method;        \/**< how the previous frame should be disposed; affects plotting *\/$/;"	m	struct:gif_frame
disposedEvent	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserPluginVisitor.cs	/^        private ManualResetEventSlim disposedEvent;$/;"	f	class:RemoteBrowser.BrowserPluginVisitor	file:
disptime	lame/doc/html/detailed.html	/^<a name="disptime"><span class="hilight">--disptime secs<\/span><\/a> Update the display each secs$/;"	a
dist_files	lame/ACM/ADbg/Makefile	/^	  dist_files=`for file in $$list; do echo $$file; done | \\$/;"	m
dist_files	lame/ACM/Makefile	/^	  dist_files=`for file in $$list; do echo $$file; done | \\$/;"	m
dist_files	lame/ACM/ddk/Makefile	/^	  dist_files=`for file in $$list; do echo $$file; done | \\$/;"	m
dist_files	lame/ACM/tinyxml/Makefile	/^	  dist_files=`for file in $$list; do echo $$file; done | \\$/;"	m
dist_files	lame/Dll/Makefile	/^	  dist_files=`for file in $$list; do echo $$file; done | \\$/;"	m
dist_files	lame/Makefile	/^	  dist_files=`for file in $$list; do echo $$file; done | \\$/;"	m
dist_files	lame/debian/Makefile	/^	  dist_files=`for file in $$list; do echo $$file; done | \\$/;"	m
dist_files	lame/doc/Makefile	/^	  dist_files=`for file in $$list; do echo $$file; done | \\$/;"	m
dist_files	lame/doc/html/Makefile	/^	  dist_files=`for file in $$list; do echo $$file; done | \\$/;"	m
dist_files	lame/doc/man/Makefile	/^	  dist_files=`for file in $$list; do echo $$file; done | \\$/;"	m
dist_files	lame/dshow/Makefile	/^	  dist_files=`for file in $$list; do echo $$file; done | \\$/;"	m
dist_files	lame/frontend/Makefile	/^	  dist_files=`for file in $$list; do echo $$file; done | \\$/;"	m
dist_files	lame/include/Makefile	/^	  dist_files=`for file in $$list; do echo $$file; done | \\$/;"	m
dist_files	lame/libmp3lame/Makefile	/^	  dist_files=`for file in $$list; do echo $$file; done | \\$/;"	m
dist_files	lame/libmp3lame/i386/Makefile	/^	  dist_files=`for file in $$list; do echo $$file; done | \\$/;"	m
dist_files	lame/libmp3lame/vector/Makefile	/^	  dist_files=`for file in $$list; do echo $$file; done | \\$/;"	m
dist_files	lame/mac/Makefile	/^	  dist_files=`for file in $$list; do echo $$file; done | \\$/;"	m
dist_files	lame/macosx/English.lproj/Makefile	/^	  dist_files=`for file in $$list; do echo $$file; done | \\$/;"	m
dist_files	lame/macosx/LAME.xcodeproj/Makefile	/^	  dist_files=`for file in $$list; do echo $$file; done | \\$/;"	m
dist_files	lame/macosx/Makefile	/^	  dist_files=`for file in $$list; do echo $$file; done | \\$/;"	m
dist_files	lame/misc/Makefile	/^	  dist_files=`for file in $$list; do echo $$file; done | \\$/;"	m
dist_files	lame/mpglib/Makefile	/^	  dist_files=`for file in $$list; do echo $$file; done | \\$/;"	m
dist_files	lame/vc_solution/Makefile	/^	  dist_files=`for file in $$list; do echo $$file; done | \\$/;"	m
distanceFromDroppedFrame	Source/RTMPPublisher.h	/^    UINT distanceFromDroppedFrame;$/;"	m	struct:NetworkPacket
distcleancheck_listfiles	lame/Makefile	/^distcleancheck_listfiles = find . -type f -print$/;"	m
distdir	lame/ACM/Makefile	/^	        distdir="$$new_distdir" \\$/;"	m
distdir	lame/ACM/Makefile	/^	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\\\"; \\$/;"	m
distdir	lame/Makefile	/^	        distdir="$$new_distdir" \\$/;"	m
distdir	lame/Makefile	/^	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\\\"; \\$/;"	m
distdir	lame/Makefile	/^distdir = $(PACKAGE)-$(VERSION)$/;"	m
distdir	lame/debian/Makefile	/^	  top_distdir="$(top_distdir)" distdir="$(distdir)" \\$/;"	m
distdir	lame/doc/Makefile	/^	        distdir="$$new_distdir" \\$/;"	m
distdir	lame/doc/Makefile	/^	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\\\"; \\$/;"	m
distdir	lame/libmp3lame/Makefile	/^	        distdir="$$new_distdir" \\$/;"	m
distdir	lame/libmp3lame/Makefile	/^	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\\\"; \\$/;"	m
distdir	lame/macosx/Makefile	/^	        distdir="$$new_distdir" \\$/;"	m
distdir	lame/macosx/Makefile	/^	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\\\"; \\$/;"	m
distuninstallcheck_dir	lame/Makefile	/^	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \\$/;"	m
distuninstallcheck_dir	lame/Makefile	/^	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \\$/;"	m
distuninstallcheck_listfiles	lame/Makefile	/^distuninstallcheck_listfiles = find . -type f -print$/;"	m
dither	lame/misc/ath.c	/^    const double*  dither;$/;"	m	file:
dither_coeff	lame/misc/ath.c	/^const double dither_coeff [] [16] = {$/;"	v
dllmain.cpp	minhook/dll_resources/dllmain.cpp	1;"	F
dnDevNode	lame/ACM/ddk/msacmdrv.h	/^    DWORD           dnDevNode;	    \/\/ devnode id for pnp drivers.$/;"	m	struct:tACMDRVOPENDESC
doLog	ObsNvenc/src/nvmain.cpp	/^bool doLog = true;$/;"	v
doNotWait	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                  doNotWait         :1;      \/**< [in]:  Set to 1 to make ::NvEncLockInputBuffer() a unblocking call. If the encoding is not completed, driver will return ::NV_ENC_ERR_ENCODER_BUSY error code. *\/$/;"	m	struct:_NV_ENC_LOCK_INPUT_BUFFER
doNotWait	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                doNotWait         :1;        \/**< [in]: If this flag is set, the NvEncodeAPI interface will return buffer pointer even if operation is not completed. If not set, the call will block until operation completes. *\/$/;"	m	struct:_NV_ENC_LOCK_BITSTREAM
do_copy_buffer	lame/libmp3lame/bitstream.c	/^do_copy_buffer(lame_internal_flags * gfc, unsigned char *buffer, int size)$/;"	f	file:
do_gain_analysis	lame/libmp3lame/bitstream.c	/^do_gain_analysis(lame_internal_flags * gfc, unsigned char* buffer, int minimum)$/;"	f	file:
do_proxy	Source/mongoose.c	/^static void do_proxy(struct connection *conn) {$/;"	f	file:
do_ssi_exec	Source/mongoose.c	/^static void do_ssi_exec(struct mg_connection *conn, char *tag) {$/;"	f	file:
do_ssi_include	Source/mongoose.c	/^static void do_ssi_include(struct mg_connection *conn, const char *ssi,$/;"	f	file:
docdir	lame/ACM/ADbg/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	lame/ACM/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	lame/ACM/ddk/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	lame/ACM/tinyxml/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	lame/Dll/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	lame/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	lame/debian/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	lame/doc/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	lame/doc/html/Makefile	/^docdir = $(datadir)\/doc$/;"	m
docdir	lame/doc/man/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	lame/dshow/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	lame/frontend/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	lame/include/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	lame/libmp3lame/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	lame/libmp3lame/i386/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	lame/libmp3lame/vector/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	lame/mac/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	lame/macosx/English.lproj/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	lame/macosx/LAME.xcodeproj/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	lame/macosx/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	lame/misc/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	lame/mpglib/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	lame/vc_solution/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
document	lame/ACM/tinyxml/tinyxml.h	/^	TiXmlDocument*	document;	\/\/ A pointer back to a document, for error reporting.$/;"	m	class:TiXmlAttribute
dontTouchConfig	ObsNvenc/inc/NVENCEncoder.h	/^    bool dontTouchConfig;$/;"	m	class:NVENCEncoder
dosToLongFileName	lame/frontend/main.c	/^dosToLongFileName(char *fn)$/;"	f
dot_seen	lame/ACM/Makefile	/^	    dot_seen=yes; \\$/;"	m
dot_seen	lame/ACM/Makefile	/^	dot_seen=no; \\$/;"	m
dot_seen	lame/Makefile	/^	    dot_seen=yes; \\$/;"	m
dot_seen	lame/Makefile	/^	dot_seen=no; \\$/;"	m
dot_seen	lame/doc/Makefile	/^	    dot_seen=yes; \\$/;"	m
dot_seen	lame/doc/Makefile	/^	dot_seen=no; \\$/;"	m
dot_seen	lame/libmp3lame/Makefile	/^	    dot_seen=yes; \\$/;"	m
dot_seen	lame/libmp3lame/Makefile	/^	dot_seen=no; \\$/;"	m
dot_seen	lame/macosx/Makefile	/^	    dot_seen=yes; \\$/;"	m
dot_seen	lame/macosx/Makefile	/^	dot_seen=no; \\$/;"	m
double2int	libsamplerate/float_cast.h	/^	double2int (register double in)$/;"	f
double2int	libsamplerate/float_cast.h	/^	static inline long double2int (double in)$/;"	f
double_to_fp	libsamplerate/src_sinc.c	/^double_to_fp (double x)$/;"	f	file:
double_to_int	libfaac/ltp.c	42;"	d	file:
doublesFramerate	DShowPlugin/DShowPlugin.h	/^    bool   doublesFramerate;$/;"	m	struct:DeinterlacerConfig
doublesFramerate	DShowPlugin/DeviceSource.h	/^        bool                        doublesFramerate;$/;"	m	struct:DeviceSource::<anonymous>
down	lame/misc/ath.c	/^    down       = 1,$/;"	e	file:
down_sample	lame/mpglib/mpg123.h	/^    int     down_sample;$/;"	m	struct:frame
down_sample_sblimit	lame/mpglib/mpg123.h	/^    int     down_sample_sblimit;$/;"	m	struct:frame
downscale	Source/OBS.h	/^    float   downscale;$/;"	m	class:OBS
downscaleMultipliers	Source/SettingsVideo.cpp	/^const float downscaleMultipliers[multiplierCount] = {1.0f, 1.25f, 1.5f, 1.75f, 2.0f, 2.25f, 2.5f, 2.75f, 3.0f};$/;"	v
downscaleType	Source/OBS.h	/^    int     downscaleType;$/;"	m	class:OBS
dpb	x264/x264.h	/^    int dpb;         \/* max decoded picture buffer (mbs) *\/$/;"	m
dpb_output_time	x264/x264.h	/^    double dpb_output_time;$/;"	m
dr_mc	libfaac/coder.h	/^    double dr_mc[LPC][BLOCK_LEN_LONG],e_mc[LPC+1+1][BLOCK_LEN_LONG];$/;"	m
drain_into_ancillary	lame/libmp3lame/bitstream.c	/^drain_into_ancillary(lame_internal_flags * gfc, int remainingBits)$/;"	f	file:
drawColor	OBSApi/VolumeControl.cpp	/^    DWORD drawColor;$/;"	m	struct:VolumeControlData	file:
drawColor	OBSApi/VolumeMeter.cpp	/^    DWORD drawColor;$/;"	m	struct:VolumeMeterData	file:
drawShader	DShowPlugin/DeviceSource.h	/^    Shader          *drawShader;$/;"	m	class:DeviceSource
drawShader	GraphicsCapture/GraphicsCaptureSource.h	/^    Shader *invertShader, *drawShader;$/;"	m	class:GraphicsCaptureSource
dropThreshold	Source/RTMPPublisher.h	/^    DWORD dropThreshold, bframeDropThreshold;$/;"	m	class:RTMPPublisher
dsc	lame/libmp3lame/id3tag.h	/^    } dsc  , txt;$/;"	m	struct:FrameDataNode
dsize	lame/mpglib/mpglib.h	/^    int     dsize;$/;"	m	struct:mpstr_tag
dts	Source/Encoder_QSV.cpp	/^        List<mfxI64> dts;$/;"	m	struct:<anonymous>::DTSGenerator	file:
dts_gen	Source/Encoder_QSV.cpp	/^    DTSGenerator dts_gen;$/;"	m	class:QSVEncoder	file:
dummy0	minhook/src/trampoline.cpp	/^		uint8_t		dummy0;$/;"	m	struct:MinHook::<anonymous>::JCC_ABS	file:
dummy1	minhook/src/trampoline.cpp	/^		uint8_t		dummy1;		\/\/ EB 06			JMP +8$/;"	m	struct:MinHook::<anonymous>::JCC_ABS	file:
dummy2	minhook/src/trampoline.cpp	/^		uint8_t		dummy2;$/;"	m	struct:MinHook::<anonymous>::JCC_ABS	file:
dummy3	minhook/src/trampoline.cpp	/^		uint16_t	dummy3;		\/\/ FF25 xxxxxxxx	JMP [RIP+xxxxxxxx]$/;"	m	struct:MinHook::<anonymous>::JCC_ABS	file:
dummyEvent	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	/^HANDLE dummyEvent = NULL;$/;"	v
dumpCPUData	OBSApi/Utility/Profiler.cpp	/^    void dumpCPUData(int rootCallCount, int indent=0)$/;"	f	struct:ProfileNodeInfo
dumpData	OBSApi/Utility/Profiler.cpp	/^    void dumpData(int rootCallCount, int indent=0)$/;"	f	struct:ProfileNodeInfo
dumpLastData	OBSApi/Utility/Profiler.cpp	/^    void dumpLastData(int callNum, int indent=0)$/;"	f	struct:ProfileNodeInfo
dump_config	lame/Dll/BladeMP3EncDLL.c	/^static void dump_config( lame_global_flags* gfp )$/;"	f	file:
dupString	Source/CodeTokenizer.h	/^    String dupString;$/;"	m	struct:CodeTokenizer
duplicator	Source/D3D10System.h	/^    IDXGIOutputDuplication *duplicator;$/;"	m	class:D3D10OutputDuplicator
duplicator	Source/DesktopImageSource.cpp	/^    OutputDuplicator *duplicator;$/;"	m	class:DesktopImageSource	file:
duration	Source/RTMPStuff.h	/^SAVC(duration);$/;"	v
duration	lame/misc/ath.c	/^    unsigned long  duration;$/;"	m	file:
duration	librtmp/rtmp.c	/^SAVC(duration);$/;"	v
dvidir	lame/ACM/ADbg/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	lame/ACM/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	lame/ACM/ddk/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	lame/ACM/tinyxml/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	lame/Dll/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	lame/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	lame/debian/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	lame/doc/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	lame/doc/html/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	lame/doc/man/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	lame/dshow/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	lame/frontend/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	lame/include/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	lame/libmp3lame/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	lame/libmp3lame/i386/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	lame/libmp3lame/vector/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	lame/mac/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	lame/macosx/English.lproj/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	lame/macosx/LAME.xcodeproj/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	lame/macosx/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	lame/misc/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	lame/mpglib/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	lame/vc_solution/Makefile	/^dvidir = ${docdir}$/;"	m
dwAllocCurLine	OBSApi/Utility/DebugAlloc.cpp	/^unsigned int dwAllocCurLine;$/;"	v
dwBitRateValue	lame/dshow/Encoder.h	/^const unsigned int dwBitRateValue[2][14] =$/;"	v
dwBitrate	lame/Dll/BladeMP3EncDLL.h	/^			DWORD			dwBitrate;			\/\/ CBR bitrate, VBR min bitrate$/;"	m
dwBitrate	lame/dshow/Encoder.h	/^    DWORD   dwBitrate;                      \/\/BR in bit per second$/;"	m
dwCallback	lame/ACM/ddk/msacmdrv.h	/^    DWORD_PTR           dwCallback;$/;"	m	struct:tACMDRVSTREAMINSTANCE
dwConfig	lame/Dll/BladeMP3EncDLL.h	/^	DWORD	dwConfig;			\/\/ BE_CONFIG_XXXXX$/;"	m
dwCurColorVert	OBSApi/GraphicsSystem.h	/^    DWORD dwCurColorVert;$/;"	m	class:GraphicsSystem
dwCurNormVert	OBSApi/GraphicsSystem.h	/^    DWORD dwCurNormVert;$/;"	m	class:GraphicsSystem
dwCurPointVert	OBSApi/GraphicsSystem.h	/^    DWORD dwCurPointVert;$/;"	m	class:GraphicsSystem
dwCurTexVert	OBSApi/GraphicsSystem.h	/^    DWORD dwCurTexVert;$/;"	m	class:GraphicsSystem
dwDriver	lame/ACM/ddk/msacmdrv.h	/^    DWORD_PTR               dwDriver;       \/\/ driver instance data$/;"	m	struct:tACMDRVSTREAMHEADER
dwDriver	lame/ACM/ddk/msacmdrv.h	/^    DWORD_PTR           dwDriver;$/;"	m	struct:tACMDRVSTREAMINSTANCE
dwDstUser	lame/ACM/ddk/msacmdrv.h	/^    DWORD_PTR               dwDstUser;$/;"	m	struct:tACMDRVSTREAMHEADER
dwEmphasis	lame/Dll/BladeMP3EncDLL.h	/^			DWORD			dwEmphasis;			\/\/ FUTURE USE, SET TO 0$/;"	m
dwEnforceVBRmin	lame/dshow/Encoder.h	/^    DWORD   dwEnforceVBRmin;$/;"	m
dwError	lame/ACM/ddk/msacmdrv.h	/^    DWORD           dwError;        \/\/ result from DRV_OPEN request$/;"	m	struct:tACMDRVOPENDESC
dwFlags	lame/ACM/ddk/msacmdrv.h	/^    DWORD           dwFlags;        \/\/$/;"	m	struct:tACMDRVOPENDESC
dwForceMS	lame/dshow/Encoder.h	/^    DWORD   dwForceMS;$/;"	m
dwInstance	lame/ACM/ddk/msacmdrv.h	/^    DWORD_PTR           dwInstance;$/;"	m	struct:tACMDRVSTREAMINSTANCE
dwKeepAllFreq	lame/dshow/Encoder.h	/^    DWORD   dwKeepAllFreq;$/;"	m
dwLength	OBSApi/Utility/ConfigFile.h	/^    DWORD dwLength;$/;"	m	class:ConfigFile
dwLine	OBSApi/Utility/DebugAlloc.cpp	/^    DWORD dwLine;$/;"	m	struct:Allocation	file:
dwMP3MaxSize	Source/Encoder_MP3.cpp	/^    DWORD dwMP3MaxSize;$/;"	m	class:MP3Encoder	file:
dwMaxBitrate	lame/Dll/BladeMP3EncDLL.h	/^			DWORD			dwMaxBitrate;		\/\/ CBR ignored, VBR Max bitrate$/;"	m
dwModeFixed	lame/dshow/Encoder.h	/^    DWORD   dwModeFixed;$/;"	m
dwMpegVersion	lame/Dll/BladeMP3EncDLL.h	/^			DWORD			dwMpegVersion;		\/\/ FUTURE USE, MPEG-1 OR MPEG-2$/;"	m
dwNoShortBlock	lame/dshow/Encoder.h	/^    DWORD   dwNoShortBlock;$/;"	m
dwPES	lame/dshow/Encoder.h	/^    DWORD   dwPES;                          \/\/ PES header. Obsolete$/;"	m
dwPrepared	lame/ACM/ddk/msacmdrv.h	/^    DWORD_PTR               dwPrepared;$/;"	m	struct:tACMDRVSTREAMHEADER
dwPsyModel	lame/Dll/BladeMP3EncDLL.h	/^			DWORD			dwPsyModel;			\/\/ FUTURE USE, SET TO 0$/;"	m
dwQuality	lame/dshow/Encoder.h	/^    DWORD   dwQuality;                      \/\/Encoding quality$/;"	m
dwReSampleRate	lame/Dll/BladeMP3EncDLL.h	/^			DWORD			dwReSampleRate;		\/\/ DOWNSAMPLERATE, 0=ENCODER DECIDES  $/;"	m
dwSampleBufferSize	lame/Dll/BladeMP3EncDLL.c	/^static DWORD				dwSampleBufferSize=0;$/;"	v	file:
dwSampleRate	lame/Dll/BladeMP3EncDLL.h	/^			DWORD			dwSampleRate;		\/\/ SAMPLERATE OF INPUT FILE$/;"	m
dwSampleRate	lame/Dll/BladeMP3EncDLL.h	/^			DWORD	dwSampleRate;		\/\/ 48000, 44100 and 32000 allowed$/;"	m
dwSampleRate	lame/Dll/BladeMP3EncDLL.h	/^			DWORD	dwSampleRate;$/;"	m
dwSampleRate	lame/dshow/Encoder.h	/^    DWORD   dwSampleRate;                   \/\/SF in Hz$/;"	m
dwSampleRate	lame/dshow/PropPage.cpp	/^    DWORD dwSampleRate;$/;"	m	struct:SSampleRate	file:
dwSrcUser	lame/ACM/ddk/msacmdrv.h	/^    DWORD_PTR               dwSrcUser;$/;"	m	struct:tACMDRVSTREAMHEADER
dwStrictISO	lame/dshow/Encoder.h	/^    DWORD   dwStrictISO;$/;"	m
dwStructSize	lame/Dll/BladeMP3EncDLL.h	/^			DWORD			dwStructSize;$/;"	m
dwStructVersion	lame/Dll/BladeMP3EncDLL.h	/^			DWORD			dwStructVersion;	$/;"	m
dwUser	lame/ACM/ddk/msacmdrv.h	/^    DWORD_PTR               dwUser;$/;"	m	struct:tACMDRVSTREAMHEADER
dwVBRq	lame/dshow/Encoder.h	/^    DWORD   dwVBRq;                         \/\/ VBR quality setting (0=highest quality, 9=lowest)                         $/;"	m
dwVariableMax	lame/dshow/Encoder.h	/^    DWORD   dwVariableMax;                  \/\/specify a maximum allowed bitrate$/;"	m
dwVariableMin	lame/dshow/Encoder.h	/^    DWORD   dwVariableMin;                  \/\/specify a minimum allowed bitrate$/;"	m
dwVbrAbr_bps	lame/Dll/BladeMP3EncDLL.h	/^			DWORD			dwVbrAbr_bps;		\/\/ Use ABR in stead of nVBRQuality$/;"	m
dwVersion	lame/ACM/ddk/msacmdrv.h	/^    DWORD           dwVersion;      \/\/ current version of ACM opening you$/;"	m	struct:tACMDRVOPENDESC
dwVoiceMode	lame/dshow/Encoder.h	/^    DWORD   dwVoiceMode;$/;"	m
dwXingTag	lame/dshow/Encoder.h	/^    DWORD   dwXingTag;$/;"	m
dxgi1_2.h	extras/dxgi1_2.h	1;"	F
dxgiFormat	GraphicsCapture/GraphicsCaptureHook/D3D10Capture.cpp	/^DXGI_FORMAT             dxgiFormat;$/;"	v
dyLoadCuda	ObsNvenc/src/cudaDynload.cpp	/^bool dyLoadCuda()$/;"	f
e	lame/doc/html/detailed.html	/^<a name="e"><span class="hilight">-e  n\/5\/c<\/span><\/a> Write the de-emphasis flag$/;"	a
e	lame/misc/mugeco.sh	/^e() { echo "$progname: $*"; }$/;"	f
eAll	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/RenderProcess.cs	/^        eAll,$/;"	e	enum:Browser.EDataFlow	file:
eAudioFunc	libmfx/include/mfx_dispatcher.h	/^enum eAudioFunc$/;"	g
eAudioFuncTotal	libmfx/include/mfx_dispatcher.h	/^    eAudioFuncTotal$/;"	e	enum:eAudioFunc
eCapture	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/RenderProcess.cs	/^        eCapture,$/;"	e	enum:Browser.EDataFlow	file:
eCommunications	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/RenderProcess.cs	/^        eCommunications,$/;"	e	enum:Browser.ERole	file:
eConsole	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/RenderProcess.cs	/^        eConsole,$/;"	e	enum:Browser.ERole	file:
eFakeAudioEnum	libmfx/include/mfx_dispatcher.h	/^    eFakeAudioEnum = eMFXGetPriority,$/;"	e	enum:eAudioFunc
eFunc	libmfx/include/mfx_dispatcher.h	/^enum eFunc$/;"	g
eMFXCloneSession	libmfx/include/mfx_dispatcher.h	/^    eMFXCloneSession,$/;"	e	enum:eFunc
eMFXClose	libmfx/include/mfx_dispatcher.h	/^    eMFXClose,$/;"	e	enum:eFunc
eMFXDisjoinSession	libmfx/include/mfx_dispatcher.h	/^    eMFXDisjoinSession,$/;"	e	enum:eFunc
eMFXGetPriority	libmfx/include/mfx_dispatcher.h	/^    eMFXGetPriority,$/;"	e	enum:eFunc
eMFXInit	libmfx/include/mfx_dispatcher.h	/^    eMFXInit,$/;"	e	enum:eFunc
eMFXJoinSession	libmfx/include/mfx_dispatcher.h	/^    eMFXJoinSession,$/;"	e	enum:eFunc
eMFXQueryIMPL	libmfx/include/mfx_dispatcher.h	/^    eMFXQueryIMPL,$/;"	e	enum:eFunc
eMFXQueryVersion	libmfx/include/mfx_dispatcher.h	/^    eMFXQueryVersion,$/;"	e	enum:eFunc
eMFXSetPriority	libmfx/include/mfx_dispatcher.h	/^    eMFXSetPriority,$/;"	e	enum:eFunc
eMfxImplType	libmfx/include/mfx_dispatcher.h	/^enum eMfxImplType$/;"	g
eMultimedia	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/RenderProcess.cs	/^        eMultimedia,$/;"	e	enum:Browser.ERole	file:
eRender	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/RenderProcess.cs	/^        eRender,$/;"	e	enum:Browser.EDataFlow	file:
eVideoFuncTotal	libmfx/include/mfx_dispatcher.h	/^    eVideoFuncTotal$/;"	e	enum:eFunc
e_mc	libfaac/coder.h	/^    double dr_mc[LPC][BLOCK_LEN_LONG],e_mc[LPC+1+1][BLOCK_LEN_LONG];$/;"	m
earmode_t	lame/misc/ath.c	/^} earmode_t;$/;"	t	file:
ebp	lame/libmp3lame/i386/nasm.h	/^	mov ebp, [esp]$/;"	v
edepth	librtmp/rtmp.h	/^        int edepth;$/;"	m	struct:RTMP_LNK
edgeBottom	Source/OBS.h	/^    edgeBottom = 0x08,$/;"	e	enum:edges
edgeLeft	Source/OBS.h	/^    edgeLeft = 0x01,$/;"	e	enum:edges
edgeRight	Source/OBS.h	/^    edgeRight = 0x02,$/;"	e	enum:edges
edgeTop	Source/OBS.h	/^    edgeTop = 0x04,$/;"	e	enum:edges
edges	Source/OBS.h	/^enum edges {$/;"	g
editProc	Source/SettingsVideo.cpp	/^FARPROC editProc = NULL;$/;"	v
elapsed_time	lame/frontend/timestatus.c	/^    double  elapsed_time;    \/* total time *\/$/;"	m	struct:time_status_struct	file:
element	CLRHostPlugin/CLRHostInterop/XElement.h	/^        ::XElement *element;$/;"	m	class:CLROBS::XElement
element	OBSApi/Scene.h	/^    XElement *element;$/;"	m	class:SceneItem
element	Source/OBS.h	/^    XElement *element;$/;"	m	struct:GlobalSourceInfo
emph	lame/libmp3lame/lame-analysis.h	/^    int     framesize, stereo, js, ms_stereo, i_stereo, emph, bitrate, sampfreq, maindata;$/;"	m	struct:plotting_data
emphasis	lame/libmp3lame/lame_global_flags.h	/^    int     emphasis;        \/* Input PCM is emphased PCM (for$/;"	m	struct:lame_global_struct
emphasis	lame/libmp3lame/util.h	/^        int     emphasis;    \/* Input PCM is emphased PCM (for$/;"	m
emphasis	lame/mpglib/mpg123.h	/^    int     emphasis;$/;"	m	struct:frame
empty_fix	lame/ACM/Makefile	/^	  empty_fix=.; \\$/;"	m
empty_fix	lame/ACM/Makefile	/^	  empty_fix=; \\$/;"	m
empty_fix	lame/Makefile	/^	  empty_fix=.; \\$/;"	m
empty_fix	lame/Makefile	/^	  empty_fix=; \\$/;"	m
empty_fix	lame/doc/Makefile	/^	  empty_fix=.; \\$/;"	m
empty_fix	lame/doc/Makefile	/^	  empty_fix=; \\$/;"	m
empty_fix	lame/libmp3lame/Makefile	/^	  empty_fix=.; \\$/;"	m
empty_fix	lame/libmp3lame/Makefile	/^	  empty_fix=; \\$/;"	m
empty_fix	lame/macosx/Makefile	/^	  empty_fix=.; \\$/;"	m
empty_fix	lame/macosx/Makefile	/^	  empty_fix=; \\$/;"	m
en	lame/libmp3lame/l3side.h	/^    III_psy_xmin en;$/;"	m
en	lame/libmp3lame/lame-analysis.h	/^    double  en[2][4][SBMAX_l];$/;"	m	struct:plotting_data
en	lame/libmp3lame/util.h	/^        III_psy_xmin en[4];$/;"	m
en_s	lame/libmp3lame/lame-analysis.h	/^    double  en_s[2][4][3 * SBMAX_s];$/;"	m	struct:plotting_data
enableAQ	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                        enableAQ             :1;                     \/**< [in]: Set this to 1 to enable adaptive quantization. *\/$/;"	m	struct:_NV_ENC_RC_PARAMS
enableConstrainedEncoding	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t enableConstrainedEncoding :1;                          \/**< [in]: Set this to 1 to enable constrainedFrame encoding where each slice in the constarined picture is independent of other slices$/;"	m	struct:_NV_ENC_CONFIG_H264
enableEncodeAsync	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                                   enableEncodeAsync;               \/**< [in]: Set this to 1 to enable asynchronous mode and is expected to use events to get picture completion notification. *\/$/;"	m	struct:_NV_ENC_INITIALIZE_PARAMS
enableExtQPDeltaMap	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                        enableExtQPDeltaMap  :1;                     \/**< [in]: Set this to 1 to enable additional QP modifier for each MB supplied by client though signed byte array pointed to by NV_ENC_PIC_PARAMS::qpDeltaMap *\/$/;"	m	struct:_NV_ENC_RC_PARAMS
enableExternalMEHints	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                                   enableExternalMEHints     :1;    \/**< [in]: Set to 1 to enable external ME hints for the current frame. Currently this feature is supported only if NV_ENC_INITIALIZE_PARAMS::enablePTD to 0 or\\p frameIntervalP = 1 (i.e no B frames).*\/$/;"	m	struct:_NV_ENC_INITIALIZE_PARAMS
enableFullFrameRate	DShowPlugin/IVideoCaptureFilter.h	/^	BOOL								enableFullFrameRate;				\/\/!< Enable full frame rate (50\/60 fps)$/;"	m	struct:_VIDEO_CAPTURE_FILTER_SETTINGS_EX
enableInitialRCQP	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                        enableInitialRCQP    :1;                     \/**< [in]: Set this to 1 if user suppplied initial QP is used for rate control. *\/$/;"	m	struct:_NV_ENC_RC_PARAMS
enableIntraRefresh	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t enableIntraRefresh        :1;                          \/**< [in]: Set to 1 to enable gradual decoder refresh or intra refresh. If the GOP structure uses B frames this will be ignored *\/$/;"	m	struct:_NV_ENC_CONFIG_H264
enableLTR	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t enableLTR                 :1;                          \/**< [in]: Currently this feature is not available and must be set to 0. Set to 1 to enable LTR support and auto-mark the first *\/$/;"	m	struct:_NV_ENC_CONFIG_H264
enableMaxQP	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                        enableMaxQP          :1;                     \/**< [in]: Set this to 1 if maximum QP used for rate control. *\/$/;"	m	struct:_NV_ENC_RC_PARAMS
enableMinQP	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                        enableMinQP          :1;                     \/**< [in]: Set this to 1 if minimum QP used for rate control. *\/$/;"	m	struct:_NV_ENC_RC_PARAMS
enablePTD	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                                   enablePTD;                       \/**< [in]: Set this to 1 to enable the Picture Type Decision is be taken by the NvEncodeAPI interface. *\/$/;"	m	struct:_NV_ENC_INITIALIZE_PARAMS
enableStereoMVC	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t enableStereoMVC           :1;                          \/**< [in]: Set to 1 to enable stereo MVC*\/$/;"	m	struct:_NV_ENC_CONFIG_H264
enableSubFrameWrite	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                                   enableSubFrameWrite       :1;    \/**< [in]: Set this to 1 to write out available bitstream to memory at subframe intervals *\/$/;"	m	struct:_NV_ENC_INITIALIZE_PARAMS
enableTemporalSVC	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t enableTemporalSVC         :1;                          \/**< [in]: Set to 1 to enable SVC temporal*\/$/;"	m	struct:_NV_ENC_CONFIG_H264
enableVFR	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t enableVFR                 :1;                          \/**< [in]: Set to 1 to enable variable frame rate. *\/$/;"	m	struct:_NV_ENC_CONFIG_H264
enabled	ObsNvenc/inc/nvmain.h	/^    bool enabled;$/;"	m	struct:OSMutexLocker
enabled	QSVHelper/WindowsStuff.h	/^    bool enabled;$/;"	m	struct:IPCMutexLock
enabled_ids	Source/SettingsQSV.cpp	/^        std::initializer_list<int> enabled_ids;$/;"	m	file:
enc	lame/libmp3lame/id3tag.h	/^        int     enc;         \/* 0:Latin-1, 1:UCS-2, 2:RAW        *\/$/;"	m	struct:FrameDataNode::<anonymous>
enc_delay	lame/libmp3lame/VbrTag.h	/^    int     enc_delay;       \/* encoder delay *\/$/;"	m
enc_delay	lame/mpglib/mpglib.h	/^    int     enc_delay;       \/* set if vbr header present *\/$/;"	m	struct:mpstr_tag
enc_padding	lame/libmp3lame/VbrTag.h	/^    int     enc_padding;     \/* encoder paddign added at end of stream *\/$/;"	m
enc_padding	lame/mpglib/mpglib.h	/^    int     enc_padding;     \/* set if vbr header present *\/$/;"	m	struct:mpstr_tag
encodeCodecConfig	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_CODEC_CONFIG             encodeCodecConfig;                           \/**< [in]: Specifies the codec specific config parameters through this union. *\/$/;"	m	struct:_NV_ENC_CONFIG
encodeConfig	ObsNvenc/inc/NVENCEncoder.h	/^    NV_ENC_CONFIG encodeConfig;$/;"	m	class:NVENCEncoder
encodeConfig	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_CONFIG*                             encodeConfig;                    \/**< [in]: Specifies the advanced codec specific structure. If client has sent a valid codec config structure, it will override parameters set by the NV_ENC_INITIALIZE_PARAMS::presetGUID parameter. If set to NULL the NvEncodeAPI interface will use the NV_ENC_INITIALIZE_PARAMS::presetGUID to set the codec specific parameters.$/;"	m	struct:_NV_ENC_INITIALIZE_PARAMS
encodeData	ObsNvenc/inc/NVENCEncoder.h	/^    List<BYTE> encodeData, headerPacket, seiData;$/;"	m	class:NVENCEncoder
encodeGUID	ObsNvenc/inc/nvEncodeAPI.h	/^    GUID                                       encodeGUID;                      \/**< [in]: Specifies the Encode GUID for which the encoder is being created. ::NvEncInitializeEncoder() API will fail if this is not set, or set to unsupported value. *\/$/;"	m	struct:_NV_ENC_INITIALIZE_PARAMS
encodeHeight	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                                   encodeHeight;                    \/**< [in]: Specifies the encode height. If not set ::NvEncInitializeEncoder() API will fail. *\/$/;"	m	struct:_NV_ENC_INITIALIZE_PARAMS
encodeLibName	ObsNvenc/src/nvEncodeAPI.cpp	/^static LPCTSTR encodeLibName = TEXT("nvEncodeAPI.dll");$/;"	v	file:
encodeLibName	ObsNvenc/src/nvEncodeAPI.cpp	/^static LPCTSTR encodeLibName = TEXT("nvEncodeAPI64.dll");$/;"	v	file:
encodePicFlags	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                                    encodePicFlags;                 \/**< [in]: Specifies bit-wise OR`ed encode pic flags. See ::NV_ENC_PIC_FLAGS enum. *\/$/;"	m	struct:_NV_ENC_PIC_PARAMS
encodePresetGUIDs	ObsNvenc/inc/NVENCEncoder.h	/^    List<GUID> encodePresetGUIDs;$/;"	m	class:NVENCEncoder
encodeSideInfo2	lame/libmp3lame/bitstream.c	/^encodeSideInfo2(lame_internal_flags * gfc, int bitsPerFrame)$/;"	f	file:
encodeWidth	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                                   encodeWidth;                     \/**< [in]: Specifies the encode width. If not set ::NvEncInitializeEncoder() API will fail. *\/$/;"	m	struct:_NV_ENC_INITIALIZE_PARAMS
encode_task	QSVHelper/SupportStuff.h	/^struct encode_task$/;"	s
encode_task	Source/Encoder_QSV.cpp	/^    struct encode_task$/;"	s	class:QSVEncoder	file:
encode_tasks	QSVHelper/Encoder.h	/^    std::vector<encode_task> encode_tasks;$/;"	m	struct:Encoder
encode_tasks	Source/Encoder_QSV.cpp	/^    List<encode_task> encode_tasks;$/;"	m	class:QSVEncoder	file:
encoded_tasks	QSVHelper/Encoder.h	/^    std::queue<size_t> idle_tasks, queued_tasks, encoded_tasks;$/;"	m	struct:Encoder
encoder	ObsNvenc/inc/NVENCEncoder.h	/^    void *encoder;$/;"	m	class:NVENCEncoder
encoder	QSVHelper/Encoder.h	/^    MFXVideoENCODE encoder;$/;"	m	struct:Encoder
encoder	Source/RTMPStuff.h	/^SAVC(encoder);$/;"	v
encoder.c	lame/libmp3lame/encoder.c	1;"	F
encoder.h	lame/libmp3lame/encoder.h	1;"	F
encoderDataInitialized	Source/RTMPPublisher.h	/^    bool encoderDataInitialized = false;$/;"	m	class:RTMPPublisher
encoderRefDec	ObsNvenc/src/nvmain.cpp	/^void encoderRefDec()$/;"	f
encoderRefs	ObsNvenc/src/nvmain.cpp	/^unsigned int encoderRefs = 0;$/;"	v
encoderSkipThreshold	Source/OBS.h	/^    UINT                    encoderSkipThreshold;$/;"	m	class:OBS
encoder_delay	lame/libmp3lame/util.h	/^        int     encoder_delay;$/;"	m
encoder_flushed	QSVHelper/Encoder.h	/^    ipc_encoder_flushed encoder_flushed;$/;"	m	struct:Encoder
encoder_flushed	Source/Encoder_QSV.cpp	/^    ipc_encoder_flushed encoder_flushed;$/;"	m	class:QSVEncoder	file:
encoder_padding	lame/libmp3lame/util.h	/^        int     encoder_padding; \/* number of samples of padding appended to input *\/$/;"	m
encoder_progress	lame/frontend/timestatus.c	/^encoder_progress( lame_global_flags const* gf )$/;"	f
encoder_progress_begin	lame/frontend/timestatus.c	/^encoder_progress_begin( lame_global_flags const* gf$/;"	f
encoder_progress_end	lame/frontend/timestatus.c	/^encoder_progress_end( lame_global_flags const* gf )$/;"	f
encoding	lame/ACM/tinyxml/tinyxml.h	/^	std::string encoding;$/;"	m	class:TiXmlDeclaration
end	libmfx/include/mfx_vector.h	/^        iterator end() const $/;"	f	class:MFX::MFXVector
endBuffer	Source/MP4FileStream.cpp	/^    List<BYTE>      endBuffer;$/;"	m	class:MP4FileStream	file:
endID	OBSApi/Utility/Template.h	/^    unsigned int startID, endID;$/;"	m	class:CircularList
endSceneMethod	CLRHostPlugin/CLRHostPlugin/CLRImageSource.h	/^    mscorlib::_MethodInfo *endSceneMethod;$/;"	m	class:CLRImageSource
endY	DShowPlugin/DeviceSource.h	/^    UINT   startY, endY;$/;"	m	struct:ConvertData
endY	Source/OBSVideoCapture.cpp	/^    int width, height, inPitch, outPitch, startY, endY;$/;"	m	struct:Convert444Data	file:
end_code	Source/libnsgif.h	/^    int clear_code, end_code;$/;"	m	struct:gif_animation
end_of_input	libsamplerate/samplerate.h	/^	int		end_of_input ;$/;"	m
endmacro	lame/libmp3lame/i386/nasm.h	/^%endmacro$/;"	v
endpoint	Source/mongoose.c	/^  union endpoint endpoint;$/;"	m	struct:connection	file:
endpoint	Source/mongoose.c	/^union endpoint {$/;"	u	file:
endpoint_type	Source/mongoose.c	/^  enum endpoint_type endpoint_type;$/;"	m	struct:connection	file:
endpoint_type	Source/mongoose.c	/^enum endpoint_type {$/;"	g	file:
enerbox	lame/frontend/gtkanal.c	/^GtkWidget *enerbox[2];       \/* spectrum, gr=0,1 plotted here *\/$/;"	v
energy	lame/libmp3lame/lame-analysis.h	/^    double  energy[2][4][BLKSIZE];$/;"	m	struct:plotting_data
energy_above_cutoff	lame/libmp3lame/l3side.h	/^    char    energy_above_cutoff[SFBMAX];$/;"	m
energy_save	lame/libmp3lame/lame-analysis.h	/^    double  energy_save[4][BLKSIZE]; \/* psymodel is one ahead *\/$/;"	m	struct:plotting_data
enforce_min_bitrate	lame/libmp3lame/util.h	/^        int     enforce_min_bitrate; \/* strictly enforce VBR_min_bitrate normaly, it will be violated for analog silence *\/$/;"	m
enter	minhook/src/thread.cpp	/^	void CriticalSection::enter()$/;"	f	class:MinHook::CriticalSection
enteredSceneCount	DShowPlugin/DeviceSource.h	/^    UINT enteredSceneCount;$/;"	m	class:DeviceSource
entity	lame/ACM/tinyxml/tinyxml.h	/^	static Entity entity[ NUM_ENTITY ];$/;"	m	class:TiXmlBase
entity	lame/ACM/tinyxml/tinyxmlparser.cpp	/^TiXmlBase::Entity TiXmlBase::entity[ NUM_ENTITY ] = $/;"	m	class:TiXmlBase	file:
entries	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	/^    LPPALETTEENTRY entries;$/;"	m	class:Palette	file:
entropyCodingMode	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_H264_ENTROPY_CODING_MODE     entropyCodingMode;          \/**< [in]: Specifies the entropy coding mode. Check support for CABAC mode using ::NV_ENC_CAPS_SUPPORT_CABAC caps. *\/$/;"	m	struct:_NV_ENC_CONFIG_H264
enwindow	lame/libmp3lame/newmdct.c	/^static const FLOAT enwindow[] = {$/;"	v	file:
eql_w	lame/libmp3lame/util.h	/^        FLOAT   eql_w[BLKSIZE \/ 2]; \/* equal loudness weights (based on ATH) *\/$/;"	m
erase	libmfx/include/mfx_vector.h	/^        void erase (iterator at) $/;"	f	class:MFX::MFXVector
erb	lame/misc/ath.c	/^    erb       = 4,$/;"	e	file:
erb_f	lame/misc/ath.c	/^static long double erb_f           ( long double x ) { return log (1. + 0.00437*x); }$/;"	f	file:
error	lame/ACM/tinyxml/tinyxml.h	/^	bool error;$/;"	m	class:TiXmlDocument
error	libsamplerate/common.h	/^	int		error ;$/;"	m	struct:SRC_PRIVATE_tag
errorDesc	lame/ACM/tinyxml/tinyxml.h	/^	std::string errorDesc;$/;"	m	class:TiXmlDocument
errorId	lame/ACM/tinyxml/tinyxml.h	/^	int  errorId;	$/;"	m	class:TiXmlDocument
errorString	lame/ACM/tinyxml/tinyxml.h	/^	static const char* errorString[ TIXML_ERROR_STRING_COUNT ];$/;"	m	class:TiXmlBase
errorString	lame/ACM/tinyxml/tinyxmlerror.cpp	/^const char* TiXmlBase::errorString[ TIXML_ERROR_STRING_COUNT ] =$/;"	m	class:TiXmlBase	file:
error_flush	lame/frontend/console.c	/^error_flush()$/;"	f
error_printf	lame/frontend/console.c	/^error_printf(const char *format, ...)$/;"	f
error_protection	lame/libmp3lame/lame_global_flags.h	/^    int     error_protection; \/* use 2 bytes per frame for a CRC$/;"	m	struct:lame_global_struct
error_protection	lame/libmp3lame/util.h	/^        int     error_protection; \/* use 2 bytes per frame for a CRC checksum. default=0 *\/$/;"	m
error_protection	lame/mpglib/mpg123.h	/^    int     error_protection; \/* 1 = CRC-16 code following header *\/$/;"	m	struct:frame
errorf	lame/libmp3lame/lame_global_flags.h	/^        void    (*errorf) (const char *format, va_list ap);$/;"	m	struct:lame_global_struct::<anonymous>
errors	Source/LogUploader.h	/^    String errors;$/;"	m	struct:LogUploadResult
ers	lame/libmp3lame/lame-analysis.h	/^    double  ers[2][4];$/;"	m	struct:plotting_data
ers_save	lame/libmp3lame/lame-analysis.h	/^    double  ers_save[4];     \/* psymodel is one ahead *\/$/;"	m	struct:plotting_data
esp	lame/libmp3lame/i386/nasm.h	/^	sub esp, (-%$STACKN)-%$STACK$/;"	v
esp	lame/libmp3lame/i386/nasm.h	/^%define r7 esp$/;"	v
estimated_time	lame/frontend/timestatus.c	/^    double  estimated_time;  \/* estimated total duration time [s] *\/$/;"	m	struct:time_status_struct	file:
eval	lame/misc/abx.c	/^void  eval ( int right )$/;"	f
event_handler	Source/mongoose.c	/^  mg_handler_t event_handler;$/;"	m	struct:mg_server	file:
event_prefix	QSVHelper/Encoder.h	/^    std::wstring event_prefix;$/;"	m	struct:Encoder
event_prefix	Source/Encoder_QSV.cpp	/^    String event_prefix;$/;"	m	class:QSVEncoder	file:
exec_prefix	lame/ACM/ADbg/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	lame/ACM/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	lame/ACM/ddk/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	lame/ACM/tinyxml/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	lame/Dll/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	lame/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	lame/debian/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	lame/doc/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	lame/doc/html/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	lame/doc/man/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	lame/dshow/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	lame/frontend/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	lame/include/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	lame/libmp3lame/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	lame/libmp3lame/i386/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	lame/libmp3lame/vector/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	lame/mac/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	lame/macosx/English.lproj/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	lame/macosx/LAME.xcodeproj/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	lame/macosx/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	lame/misc/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	lame/mpglib/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	lame/vc_solution/Makefile	/^exec_prefix = ${prefix}$/;"	m
executeJSMethod	CLRHostPlugin/CLRHostPlugin/CLRImageSource.h	/^    mscorlib::_MethodInfo *executeJSMethod;$/;"	m	class:CLRImageSource
exename	GraphicsCapture/GraphicsCaptureSource.cpp	/^    String exename;$/;"	m	struct:FindWindowData	file:
exit_cleanup	lame/frontend/amiga_mpega.c	/^exit_cleanup(void)$/;"	f	file:
exit_code	QSVHelper/Encoder.h	/^    int exit_code;$/;"	m	struct:Encoder
expY	lame/libmp3lame/presets.c	/^    int     expY;$/;"	m	file:
exp_nspsytune	lame/libmp3lame/lame_global_flags.h	/^    int     exp_nspsytune;$/;"	m	struct:lame_global_struct
expectedMajorType	DShowPlugin/CaptureFilter.h	/^    GUID expectedMajorType;$/;"	m	class:CapturePin
expectedMediaType	DShowPlugin/CaptureFilter.h	/^    GUID expectedMediaType;$/;"	m	class:CapturePin
experiment	lame/misc/ath.c	/^int experiment ( generator_t* const  g,$/;"	f
experimentalY	lame/libmp3lame/lame_global_flags.h	/^    int     experimentalY;$/;"	m	struct:lame_global_struct
experimentalZ	lame/libmp3lame/lame_global_flags.h	/^    int     experimentalZ;$/;"	m	struct:lame_global_struct
export.cpp	minhook/src/export.cpp	1;"	F
expose_event	lame/frontend/gpkplotting.c	/^expose_event(GtkWidget * widget, GdkEventExpose * event, gpointer data)$/;"	f	file:
ext_buffers	QSVHelper/QSVStuff.h	/^    std::vector<const mfxExtBuffer*> ext_buffers;$/;"	m	struct:Parameters
ext_len	Source/mongoose.c	/^  size_t ext_len;$/;"	m	file:
extension	Source/mongoose.c	/^  const char *extension;$/;"	m	file:
extension	lame/libmp3lame/lame_global_flags.h	/^    int     extension;       \/* the MP3 'private extension' bit.$/;"	m	struct:lame_global_struct
extension	lame/libmp3lame/util.h	/^        int     extension;   \/* the MP3 'private extension' bit. Meaningless *\/$/;"	m
extension	lame/mpglib/mpg123.h	/^    int     extension;$/;"	m	struct:frame
extentHeight	Source/TextOutputSource.cpp	/^    UINT        extentWidth, extentHeight;$/;"	m	class:TextOutputSource	file:
extentWidth	Source/TextOutputSource.cpp	/^    UINT        extentWidth, extentHeight;$/;"	m	class:TextOutputSource	file:
extention	lame/misc/abx.c	/^    const char* const  extention;$/;"	m	file:
extra_sei	x264/x264.h	/^    x264_sei_t extra_sei;$/;"	m
extras	librtmp/rtmp.h	/^        AMFObject extras;$/;"	m	struct:RTMP_LNK
f	lame/doc/html/Makefile	/^    $(srcdir)\/*) f=`echo "$$p" | sed "s|^$$srcdirstrip\/||"`;; \\$/;"	m
f	lame/doc/html/Makefile	/^    *) f=$$p;; \\$/;"	m
f	lame/doc/html/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
f	lame/doc/man/Makefile	/^    $(srcdir)\/*) f=`echo "$$p" | sed "s|^$$srcdirstrip\/||"`;; \\$/;"	m
f	lame/doc/man/Makefile	/^    *) f=$$p;; \\$/;"	m
f	lame/doc/man/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
f	lame/include/Makefile	/^    $(srcdir)\/*) f=`echo "$$p" | sed "s|^$$srcdirstrip\/||"`;; \\$/;"	m
f	lame/include/Makefile	/^    *) f=$$p;; \\$/;"	m
f	lame/include/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
f	lame/libmp3lame/Makefile	/^    $(srcdir)\/*) f=`echo "$$p" | sed "s|^$$srcdirstrip\/||"`;; \\$/;"	m
f	lame/libmp3lame/Makefile	/^    *) f=$$p;; \\$/;"	m
f	lame/libmp3lame/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
f	lame/libmp3lame/takehiro.c	/^    float   f;$/;"	m	file:
f	lame/libmp3lame/vbrquantize.c	/^    float   f;$/;"	m	file:
f	libfaac/aacquant.c	/^    float f;$/;"	m	file:
f4x4	OBSApi/Utility/XMath.cpp	/^struct f4x4$/;"	s	file:
fCos	OBSApi/Utility/XMath.h	/^inline float fCos (float fRad, int nPrec=4)$/;"	f
fNewVol	DShowPlugin/DeviceSource.h	/^    float fNewVol;$/;"	m	class:DeviceSource
fSin	OBSApi/Utility/XMath.h	/^inline float fSin (float fRad, int nPrec=4)$/;"	f
fSinCosRecurse	OBSApi/Utility/XMath.h	/^inline float fSinCosRecurse (float fRet, float fRad, const float fRad2, float fRadPow, float fFact, const int nPrec, int nCur)$/;"	f
f_aq_strength	x264/x264.h	/^        float       f_aq_strength;$/;"	m	struct:x264_param_t::<anonymous>
f_bitrate_factor	x264/x264.h	/^    float f_bitrate_factor;$/;"	m
f_complexity_blur	x264/x264.h	/^        float       f_complexity_blur; \/* temporally blur complexity *\/$/;"	m	struct:x264_param_t::<anonymous>
f_crf_avg	x264/x264.h	/^    double f_crf_avg;$/;"	m
f_ip_factor	x264/x264.h	/^        float       f_ip_factor;$/;"	m	struct:x264_param_t::<anonymous>
f_pb_factor	x264/x264.h	/^        float       f_pb_factor;$/;"	m	struct:x264_param_t::<anonymous>
f_psnr	x264/x264.h	/^    double f_psnr[3];$/;"	m
f_psnr_avg	x264/x264.h	/^    double f_psnr_avg;$/;"	m
f_psy_rd	x264/x264.h	/^        float        f_psy_rd; \/* Psy RD strength *\/$/;"	m	struct:x264_param_t::<anonymous>
f_psy_trellis	x264/x264.h	/^        float        f_psy_trellis; \/* Psy trellis strength *\/$/;"	m	struct:x264_param_t::<anonymous>
f_qblur	x264/x264.h	/^        float       f_qblur;        \/* temporally blur quants *\/$/;"	m	struct:x264_param_t::<anonymous>
f_qcompress	x264/x264.h	/^        float       f_qcompress;    \/* 0.0 => cbr, 1.0 => constant qp *\/$/;"	m	struct:x264_param_t::<anonymous>
f_rate_tolerance	x264/x264.h	/^        float       f_rate_tolerance;$/;"	m	struct:x264_param_t::<anonymous>
f_rf_constant	x264/x264.h	/^        float       f_rf_constant;  \/* 1pass VBR, nominal QP *\/$/;"	m	struct:x264_param_t::<anonymous>
f_rf_constant_max	x264/x264.h	/^        float       f_rf_constant_max;  \/* In CRF mode, maximum CRF as caused by VBV *\/$/;"	m	struct:x264_param_t::<anonymous>
f_ssim	x264/x264.h	/^    double f_ssim;$/;"	m
f_t	lame/misc/abx.c	/^typedef float   f_t;$/;"	t	file:
f_vbv_buffer_init	x264/x264.h	/^        float       f_vbv_buffer_init; \/* <=1: fraction of buffer_size. >1: kbit *\/$/;"	m	struct:x264_param_t::<anonymous>
faac	Source/Encoder_AAC.cpp	/^    faacEncHandle faac;$/;"	m	class:AACEncoder	file:
faac.h	libfaac/include/faac.h	1;"	F
faacEncClose	libfaac/frame.c	/^int FAACAPI faacEncClose(faacEncHandle hEncoder)$/;"	f
faacEncConfiguration	libfaac/include/faaccfg.h	/^typedef struct faacEncConfiguration$/;"	s
faacEncConfiguration	libfaac/include/faaccfg.h	/^} faacEncConfiguration, *faacEncConfigurationPtr;$/;"	t
faacEncConfigurationPtr	libfaac/include/faaccfg.h	/^} faacEncConfiguration, *faacEncConfigurationPtr;$/;"	t
faacEncEncode	libfaac/frame.c	/^int FAACAPI faacEncEncode(faacEncHandle hEncoder,$/;"	f
faacEncGetCurrentConfiguration	libfaac/frame.c	/^faacEncConfigurationPtr FAACAPI faacEncGetCurrentConfiguration(faacEncHandle hEncoder)$/;"	f
faacEncGetDecoderSpecificInfo	libfaac/frame.c	/^int FAACAPI faacEncGetDecoderSpecificInfo(faacEncHandle hEncoder,unsigned char** ppBuffer,unsigned long* pSizeOfDecoderSpecificInfo)$/;"	f
faacEncGetVersion	libfaac/frame.c	/^int FAACAPI faacEncGetVersion( char **faac_id_string,$/;"	f
faacEncHandle	libfaac/frame.h	/^} faacEncStruct, *faacEncHandle;$/;"	t
faacEncHandle	libfaac/include/faac.h	/^typedef void *faacEncHandle;$/;"	t
faacEncOpen	libfaac/frame.c	/^faacEncHandle FAACAPI faacEncOpen(unsigned long sampleRate,$/;"	f
faacEncSetConfiguration	libfaac/frame.c	/^int FAACAPI faacEncSetConfiguration(faacEncHandle hEncoder,$/;"	f
faacEncStruct	libfaac/frame.h	/^} faacEncStruct, *faacEncHandle;$/;"	t
faaccfg.h	libfaac/include/faaccfg.h	1;"	F
fabsf	lame/libmp3lame/machine.h	181;"	d
factors	libfaac/kiss_fft/_kiss_fft_guts.h	/^    int factors[2*MAXFACTORS];$/;"	m	struct:kiss_fft_state
factory	Source/D3D10System.h	/^    IDXGIFactory1           *factory;$/;"	m	class:D3D10System
fadeTime	Source/BitmapTransitionSource.cpp	/^const float fadeTime = 1.5f;$/;"	v
failcom	lame/ACM/Makefile	/^	    *k*) failcom='fail=yes';; \\$/;"	m
failcom	lame/ACM/Makefile	/^	@fail= failcom='exit 1'; \\$/;"	m
failcom	lame/Makefile	/^	    *k*) failcom='fail=yes';; \\$/;"	m
failcom	lame/Makefile	/^	@fail= failcom='exit 1'; \\$/;"	m
failcom	lame/doc/Makefile	/^	    *k*) failcom='fail=yes';; \\$/;"	m
failcom	lame/doc/Makefile	/^	@fail= failcom='exit 1'; \\$/;"	m
failcom	lame/libmp3lame/Makefile	/^	    *k*) failcom='fail=yes';; \\$/;"	m
failcom	lame/libmp3lame/Makefile	/^	@fail= failcom='exit 1'; \\$/;"	m
failcom	lame/macosx/Makefile	/^	    *k*) failcom='fail=yes';; \\$/;"	m
failcom	lame/macosx/Makefile	/^	@fail= failcom='exit 1'; \\$/;"	m
fastHtonl	OBSApi/OBSApi.h	/^__forceinline DWORD fastHtonl (DWORD dw) {return DWORD_BE(dw);}$/;"	f
fastHtonll	OBSApi/OBSApi.h	/^__forceinline QWORD fastHtonll(QWORD qw) {return QWORD_BE(qw);}$/;"	f
fastHtons	OBSApi/OBSApi.h	/^__forceinline  WORD fastHtons (WORD  w)  {return  WORD_BE(w);}$/;"	f
fast_log2	lame/libmp3lame/util.c	/^fast_log2(ieee754_float32_t x)$/;"	f
fastest_coeffs	libsamplerate/fastest_coeffs.h	/^} fastest_coeffs =$/;"	v
fastest_coeffs.h	libsamplerate/fastest_coeffs.h	1;"	F
fastest_coeffs_s	libsamplerate/fastest_coeffs.h	/^static const struct fastest_coeffs_s$/;"	s
faultAddress	Source/CrashDumpHandler.h	/^    DWORD64 faultAddress;$/;"	m	struct:moduleinfo_s
fccComp	lame/ACM/ddk/msacmdrv.h	/^    FOURCC          fccComp;        \/\/ sub-type (not used--must be 0)$/;"	m	struct:tACMDRVOPENDESC
fccType	lame/ACM/ddk/msacmdrv.h	/^    FOURCC          fccType;        \/\/ 'audc'$/;"	m	struct:tACMDRVOPENDESC
fd	Source/mongoose.c	/^  int fd;                     \/\/ Opened regular local file$/;"	m	union:endpoint	file:
fd	lame/misc/ath.c	/^    int            fd;$/;"	m	file:
fdwConvert	lame/ACM/ddk/msacmdrv.h	/^    DWORD                   fdwConvert;     \/\/ flags passed from convert func$/;"	m	struct:tACMDRVSTREAMHEADER
fdwDriver	lame/ACM/ddk/msacmdrv.h	/^    DWORD                   fdwDriver;      \/\/ driver instance flags$/;"	m	struct:tACMDRVSTREAMHEADER
fdwDriver	lame/ACM/ddk/msacmdrv.h	/^    DWORD               fdwDriver;$/;"	m	struct:tACMDRVSTREAMINSTANCE
fdwOpen	lame/ACM/ddk/msacmdrv.h	/^    DWORD               fdwOpen;$/;"	m	struct:tACMDRVSTREAMINSTANCE
fdwPrepared	lame/ACM/ddk/msacmdrv.h	/^    DWORD                   fdwPrepared;$/;"	m	struct:tACMDRVSTREAMHEADER
fdwSize	lame/ACM/ddk/msacmdrv.h	/^    DWORD               fdwSize;$/;"	m	struct:tACMDRVSTREAMSIZE
fdwStatus	lame/ACM/ddk/msacmdrv.h	/^    DWORD                   fdwStatus;$/;"	m	struct:tACMDRVSTREAMHEADER
fdwSuggest	lame/ACM/ddk/msacmdrv.h	/^    DWORD               fdwSuggest;         \/\/ Suggest flags$/;"	m	struct:tACMDRVFORMATSUGGEST
features	lame/include/lame.h	/^    const char *features;    \/* Don't make assumptions about the contents! *\/$/;"	m
feed	lame/misc/abx.c	/^int feed ( int fd, const stereo_t* p, int len )$/;"	f
feed2	lame/misc/abx.c	/^int  feed2 ( int fd, const stereo_t* p1, const stereo_t* p2, int len )$/;"	f
feedfac	lame/misc/abx.c	/^int feedfac ( int fd, const stereo_t* p1, const stereo_t* p2, int len, double fac1, double fac2 )$/;"	f
fft	lame/misc/abx.c	/^int  fft ( compl* fn, const size_t newlen )$/;"	f
fft	libfaac/fft.c	/^void fft( FFT_Tables *fft_tables, double *xr, double *xi, int logm )$/;"	f
fft	libfaac/fft.c	/^void fft( FFT_Tables *fft_tables, double *xr, double *xi, int logm)$/;"	f
fft.c	lame/libmp3lame/fft.c	1;"	F
fft.c	libfaac/fft.c	1;"	F
fft.h	lame/libmp3lame/fft.h	1;"	F
fft.h	libfaac/fft.h	1;"	F
fftEnrgNext2S	libfaac/psychkni.c	/^  psyfloat *fftEnrgNext2S[8];$/;"	m	file:
fftEnrgNextS	libfaac/psychkni.c	/^  psyfloat *fftEnrgNextS[8];$/;"	m	file:
fftEnrgPrevS	libfaac/psychkni.c	/^  psyfloat *fftEnrgPrevS[8];$/;"	m	file:
fftEnrgS	libfaac/psychkni.c	/^  psyfloat *fftEnrgS[8];$/;"	m	file:
fft_fht	lame/libmp3lame/util.h	/^        void    (*fft_fht) (FLOAT *, int);$/;"	m	struct:lame_internal_flags
fft_initialize	libfaac/fft.c	/^void fft_initialize( FFT_Tables *fft_tables )$/;"	f
fft_long	lame/libmp3lame/fft.c	/^fft_long(lame_internal_flags const *const gfc,$/;"	f
fft_proc	libfaac/fft.c	/^static void fft_proc($/;"	f	file:
fft_short	lame/libmp3lame/fft.c	/^fft_short(lame_internal_flags const *const gfc,$/;"	f
fft_tables	libfaac/frame.h	/^	FFT_Tables	fft_tables;$/;"	m
fft_terminate	libfaac/fft.c	/^void fft_terminate( FFT_Tables *fft_tables )$/;"	f
fftfloat	libfaac/fft.h	/^typedef float fftfloat;$/;"	t
ffti	libfaac/fft.c	/^void ffti( FFT_Tables *fft_tables, double *xr, double *xi, int logm )$/;"	f
ffti	libfaac/fft.c	/^void ffti( FFT_Tables *fft_tables, double *xr, double *xi, int logm)$/;"	f
fht	lame/libmp3lame/fft.c	/^fht(FLOAT * fz, int n)$/;"	f	file:
fht_SSE2	lame/libmp3lame/vector/xmm_quantize_sub.c	/^fht_SSE2(FLOAT * fz, int n)$/;"	f
fi_union	lame/libmp3lame/takehiro.c	/^} fi_union;$/;"	t	file:
fi_union	lame/libmp3lame/vbrquantize.c	/^} fi_union;$/;"	t	file:
fi_union	libfaac/aacquant.c	/^} fi_union;$/;"	t	file:
fid	lame/libmp3lame/id3tag.h	/^    uint32_t fid;             \/* Frame Identifier                 *\/$/;"	m	struct:FrameDataNode
fieldOrder	DShowPlugin/DShowPlugin.h	/^    int    type, fieldOrder, processor;$/;"	m	struct:DeinterlacerConfig
fieldOrder	DShowPlugin/DeviceSource.h	/^        char                        fieldOrder; \/\/DeinterlacingFieldOrder$/;"	m	struct:DeviceSource::<anonymous>
file	OBSApi/Utility/XConfig.h	/^    XConfig *file;$/;"	m	class:XElement
file	OBSApi/Utility/XFile.h	/^    XFile file;$/;"	m	class:XFileInputSerializer
file	OBSApi/Utility/XFile.h	/^    XFile file;$/;"	m	class:XFileOutputSerializer
file	QSVHelper/WindowsStuff.h	/^    safe_handle file;$/;"	m	struct:NamedSharedMemory
file	Source/OBS.h	/^    String file;$/;"	m	struct:ServiceIdentifier
fileChangeMonitor	Source/TextOutputSource.cpp	/^    OSFileChangeData *fileChangeMonitor;$/;"	m	class:TextOutputSource	file:
fileControlOffset	Source/Settings.h	/^        LONG fileControlOffset;$/;"	m	struct:SettingsPublish::PublishDialogData
fileData	OBSApi/GraphicsSystem.h	/^            std::wstring fileData, fileName;$/;"	m	struct:GraphicsSystem::FutureShaderContainer::FutureShaderContext
fileData	OBSApi/GraphicsSystem.h	/^    std::wstring const *fileData = nullptr;$/;"	m	class:FutureShader::std
fileName	OBSApi/GraphicsSystem.h	/^            std::wstring fileData, fileName;$/;"	m	struct:GraphicsSystem::FutureShaderContainer::FutureShaderContext
fileName	OBSApi/GraphicsSystem.h	/^    std::wstring fileName;$/;"	m	class:FutureShader
fileName	OBSApi/Utility/XT.h	/^    TCHAR fileName[260];$/;"	m	struct:OSFindData
fileOffset	Source/MP4FileStream.cpp	/^    UINT64  fileOffset;$/;"	m	struct:MP4AudioFrameInfo	file:
fileOffset	Source/MP4FileStream.cpp	/^    UINT64  fileOffset;$/;"	m	struct:MP4VideoFrameInfo	file:
fileOut	Source/FLVFileStream.cpp	/^    XFileOutputSerializer fileOut;$/;"	m	class:FLVFileStream	file:
fileOut	Source/MP4FileStream.cpp	/^    XFileOutputSerializer fileOut;$/;"	m	class:MP4FileStream	file:
filePath	Source/BitmapImage.h	/^    String filePath;$/;"	m	class:BitmapImage
fileSize	OBSApi/Utility/XFile.h	/^    UINT64 fileSize;$/;"	m	class:XFileInputSerializer
fileSize	Source/RTMPStuff.h	/^SAVC(fileSize);$/;"	v
fileStream	Source/OBS.h	/^    std::unique_ptr<VideoFileStream> fileStream;$/;"	m	class:OBS
fileStreamStop	Source/OBS.h	/^    StopInfo fileStreamStop;$/;"	m	class:OBS
file_name	Source/mongoose.c	/^  char *file_name;$/;"	m	struct:dir_entry	file:
file_stat_t	Source/mongoose.c	/^typedef struct _stati64 file_stat_t;$/;"	t	file:
file_stat_t	Source/mongoose.c	/^typedef struct stat file_stat_t;$/;"	t	file:
file_stream	Source/ReplayBuffer.cpp	/^    unique_ptr<VideoFileStream> file_stream;$/;"	m	struct:RecordingHelper	file:
filename_to_type	lame/frontend/parse.c	/^filename_to_type(const char *FileName)$/;"	f	file:
fileno	Source/mongoose.c	1337;"	d	file:
files	lame/doc/html/Makefile	/^	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*\/||'`; \\$/;"	m
files	lame/doc/man/Makefile	/^	files=`{ for i in $$list; do echo "$$i"; done; \\$/;"	m
files	lame/frontend/Makefile	/^	files=`for p in $$list; do echo "$$p"; done | \\$/;"	m
files	lame/include/Makefile	/^	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*\/||'`; \\$/;"	m
filetype	lame/frontend/gtkanal.c	/^    int     filetype;        \/* input file type 0=WAV, 1=MP3 *\/$/;"	m	struct:gtkinfostruct	file:
fill_buffer	lame/libmp3lame/util.c	/^fill_buffer(lame_internal_flags * gfc,$/;"	f
fill_buffer_resample	lame/libmp3lame/util.c	/^fill_buffer_resample(lame_internal_flags * gfc,$/;"	f	file:
fill_buffer_resample_init	lame/libmp3lame/util.h	/^        int     fill_buffer_resample_init;$/;"	m	struct:lame_internal_flags
filled_bitstream	QSVHelper/Encoder.h	/^    ipc_filled_bitstream filled_bitstream;$/;"	m	struct:Encoder
filled_bitstream	Source/Encoder_QSV.cpp	/^    ipc_filled_bitstream filled_bitstream;$/;"	m	class:QSVEncoder	file:
filled_bitstream_waiter	Source/Encoder_QSV.cpp	/^              filled_bitstream_waiter;$/;"	m	class:QSVEncoder	file:
filtbank.c	libfaac/filtbank.c	1;"	F
filtbank.h	libfaac/filtbank.h	1;"	F
filter	DShowPlugin/CaptureFilter.h	/^    CaptureFilter *filter;$/;"	m	class:CaptureEnumPins
filter	DShowPlugin/CaptureFilter.h	/^    CaptureFilter *filter;$/;"	m	class:CapturePin
filter	NoiseGate/NoiseGate.h	/^    NoiseGateFilter *   filter;$/;"	m	class:NoiseGate
filter	OBSApi/GraphicsSystem.h	/^    GSSampleFilter filter;$/;"	m	struct:SamplerInfo
filterButter	lame/libmp3lame/gain_analysis.c	/^filterButter(const Float_t * input, Float_t * output, size_t nSamples, const Float_t * const kernel)$/;"	f	file:
filterYule	lame/libmp3lame/gain_analysis.c	/^filterYule(const Float_t * input, Float_t * output, size_t nSamples, const Float_t * const kernel)$/;"	f	file:
filter_coef	lame/libmp3lame/lame.c	/^filter_coef(FLOAT x)$/;"	f	file:
find	lame/libmp3lame/vbrquantize.c	/^    find_sf_f  find;$/;"	m	struct:algo_s	file:
findNode	lame/libmp3lame/id3tag.c	/^findNode(id3tag_spec const *tag, uint32_t frame_id, FrameDataNode const *last)$/;"	f	file:
findPeakSample	lame/libmp3lame/util.h	/^        int     findPeakSample;$/;"	m
findReplayGain	lame/libmp3lame/lame_global_flags.h	/^    int     findReplayGain;  \/* find the RG value? default=0       *\/$/;"	m	struct:lame_global_struct
findReplayGain	lame/libmp3lame/util.h	/^        int     findReplayGain; \/* find the RG value? default=0       *\/$/;"	m
find_index_file	Source/mongoose.c	/^static int find_index_file(struct connection *conn, char *path,$/;"	f	file:
find_lowest_scalefac	lame/libmp3lame/vbrquantize.c	/^find_lowest_scalefac(const FLOAT xr34)$/;"	f	file:
find_scalefac_x34	lame/libmp3lame/vbrquantize.c	/^find_scalefac_x34(const FLOAT * xr, const FLOAT * xr34, FLOAT l3_xmin, unsigned int bw,$/;"	f	file:
find_sf_f	lame/libmp3lame/vbrquantize.c	/^typedef uint8_t (*find_sf_f) (const FLOAT *, const FLOAT *, FLOAT, unsigned int, uint8_t);$/;"	t	file:
find_stack_direction	lame/configure	/^find_stack_direction ()$/;"	f
findpixmap	lame/frontend/gpkplotting.c	/^findpixmap(GtkWidget * widget)$/;"	f	file:
first	lame/ACM/Makefile	/^    first=`echo "$$dir1" | sed -e "$$sed_first"`; \\$/;"	m
first	lame/Makefile	/^    first=`echo "$$dir1" | sed -e "$$sed_first"`; \\$/;"	m
first	lame/doc/Makefile	/^    first=`echo "$$dir1" | sed -e "$$sed_first"`; \\$/;"	m
first	lame/libmp3lame/Makefile	/^    first=`echo "$$dir1" | sed -e "$$sed_first"`; \\$/;"	m
first	lame/libmp3lame/gain_analysis.h	/^        int     first;$/;"	m	struct:replaygain_data
first	lame/macosx/Makefile	/^    first=`echo "$$dir1" | sed -e "$$sed_first"`; \\$/;"	m
first	libmfx/include/msdk/include/mfxdefs.h	/^    mfxHDL first;$/;"	m
first	librtmp/hashswf.c	/^    int first;$/;"	m	struct:info	file:
first2	lame/ACM/Makefile	/^        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \\$/;"	m
first2	lame/Makefile	/^        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \\$/;"	m
first2	lame/doc/Makefile	/^        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \\$/;"	m
first2	lame/libmp3lame/Makefile	/^        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \\$/;"	m
first2	lame/macosx/Makefile	/^        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \\$/;"	m
firstChild	lame/ACM/tinyxml/tinyxml.h	/^	TiXmlNode*		firstChild;$/;"	m	class:TiXmlNode
firstChunkID	Source/MP4FileStream.cpp	/^    UINT firstChunkID;$/;"	m	struct:SampleToChunk	file:
firstFrameTime	Source/OBSVideoCapture.cpp	/^    QWORD firstFrameTime;$/;"	m	struct:FrameProcessInfo	file:
firstFrameTimestamp	Source/OBS.h	/^    QWORD firstFrameTimestamp;$/;"	m	class:OBS
firstFreeMem	OBSApi/Utility/FastAlloc.cpp	/^    FreeMemInfo *firstFreeMem; \/\/pointer to first free memory block$/;"	m	struct:Pool	file:
firstSceneTimestamp	Source/OBS.h	/^    QWORD firstSceneTimestamp;$/;"	m	class:OBS
firstTimestamp	Source/MMDeviceAudioSource.cpp	/^    QWORD firstTimestamp;$/;"	m	class:MMDeviceAudioSource	file:
firstTimestamp	Source/RTMPPublisher.h	/^    DWORD firstTimestamp;$/;"	m	class:RTMPPublisher
first_frame	QSVHelper/Encoder.h	/^    bool first_frame;$/;"	m	struct:Encoder
firstcode	Source/libnsgif.h	/^    int firstcode, oldcode;$/;"	m	struct:gif_animation
fixedCount	minhook/src/buffer.cpp	/^		size_t	fixedCount;$/;"	m	struct:MinHook::<anonymous>::MEMORY_BLOCK	file:
fixedSize	minhook/src/buffer.cpp	/^		size_t	fixedSize;$/;"	m	struct:MinHook::<anonymous>::MEMORY_BLOCK	file:
flag123	lame/frontend/gtkanal.c	/^    int     flag123;         \/* show mpg123 frame info, OR ISO encoder frame info *\/$/;"	m	struct:gtkinfostruct	file:
flags	DShowPlugin/CaptureFilter.h	/^    IAMFilterMiscFlags *flags;$/;"	m	class:CaptureFilter
flags	Source/mongoose.c	/^  unsigned int flags;$/;"	m	struct:ns_connection	file:
flags	lame/libmp3lame/VbrTag.h	/^    int     flags;           \/* from Vbr header data *\/$/;"	m
flags	lame/libmp3lame/id3tag.h	/^    unsigned int flags;$/;"	m	struct:id3tag_spec
flags	librtmp/rtmp.h	/^        uint8_t flags;$/;"	m	struct:RTMP_READ
flags	minhook/src/HDE32/hde32.h	/^    uint32_t flags;$/;"	m
flags	minhook/src/HDE64/include/hde64.h	/^    uint32_t flags;$/;"	m
flashVer	Source/RTMPStuff.h	/^SAVC(flashVer);$/;"	v
flashVer	librtmp/rtmp.c	/^SAVC(flashVer);$/;"	v
flashVer	librtmp/rtmp.h	/^        AVal flashVer;$/;"	m	struct:RTMP_LNK
flattenDistribution	lame/libmp3lame/vbrquantize.c	/^flattenDistribution(const int sfwork[SFBMAX], int sf_out[SFBMAX], int dm, int k, int p)$/;"	f	file:
float2int	libsamplerate/float_cast.h	/^	float2int (register float in)$/;"	f
float2int	libsamplerate/float_cast.h	/^	static inline long float2int (float in)$/;"	f
float32_t	lame/config.h	/^	typedef float  float32_t;$/;"	t
float32_t	lame/configMS.h	/^	typedef float  float32_t;$/;"	t
float64_t	lame/config.h	/^	typedef double float64_t;$/;"	t
float64_t	lame/configMS.h	/^	typedef double float64_t;$/;"	t
float_cast.h	libsamplerate/float_cast.h	1;"	F
floatcompare	lame/libmp3lame/quantize.c	/^floatcompare(const void *v1, const void *v2)$/;"	f	file:
flockfile	Source/mongoose.c	1352;"	d	file:
floor	lame/libmp3lame/util.h	/^        FLOAT   floor;       \/* lowest ATH value *\/$/;"	m
flush	QSVHelper/IPCStructs.h	/^    bool flush;$/;"	m	struct:queued_frame
flush	lame/doc/html/detailed.html	/^<a name="flush"><span class="hilight">--flush<\/span><\/a> Flush the output stream as soon as possible$/;"	a
flushFrame	libfaac/frame.h	/^    unsigned int flushFrame;$/;"	m
flush_bitstream	lame/libmp3lame/bitstream.c	/^flush_bitstream(lame_internal_flags * gfc)$/;"	f
flush_write	lame/frontend/main.h	/^    int   flush_write;$/;"	m	struct:WriterConfig
flushed	QSVHelper/Encoder.h	/^    bool flushed;$/;"	m	struct:Encoder
flvHeader	librtmp/rtmp.c	/^static const char flvHeader[] = { 'F', 'L', 'V', 0x01,$/;"	v	file:
fmoMode	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_H264_FMO_MODE                fmoMode;                    \/**< [in]: Specified the FMO Mode. Check support for FMO using ::NV_ENC_CAPS_SUPPORT_FMO caps. *\/$/;"	m	struct:_NV_ENC_CONFIG_H264
fmod_one	libsamplerate/common.h	/^fmod_one (double x)$/;"	f
fmsVer	Source/RTMPStuff.h	/^SAVC(fmsVer);$/;"	v
fmsg	librtmp/log.c	/^static FILE *fmsg;$/;"	v	file:
fontFaces	Source/TextOutputSource.cpp	/^    StringList fontFaces;$/;"	m	struct:ConfigTextSourceInfo	file:
fontHeight	OBSApi/HotkeyControlEx.cpp	/^    int fontHeight;$/;"	m	struct:HotkeyControlExData	file:
fontNames	Source/TextOutputSource.cpp	/^    StringList fontNames;$/;"	m	struct:ConfigTextSourceInfo	file:
fontSize	Source/OBS.h	/^    int fontSize;$/;"	m	struct:FontInfo
fontWeight	Source/OBS.h	/^    int fontWeight;$/;"	m	struct:FontInfo
fopen	Source/mongoose.c	1334;"	d	file:
forceIDR	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                                    forceIDR                :1;     \/**< [in]: Encode the current picture as an IDR picture. This flag is only valid when Picture type decision is taken by the Encoder$/;"	m	struct:_NV_ENC_RECONFIGURE_PARAMS
forceIntraRefreshWithFrameCnt	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t forceIntraRefreshWithFrameCnt;              \/**< [in]: Forces an intra refresh with duration equal to intraRefreshFrameCnt. $/;"	m	struct:_NV_ENC_PIC_PARAMS_H264
forceJump	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^static const BYTE forceJump[] = {0xEB};$/;"	v	file:
force_ms	lame/libmp3lame/lame_global_flags.h	/^    int     force_ms;        \/* force M\/S mode.  requires mode=1            *\/$/;"	m	struct:lame_global_struct
force_ms	lame/libmp3lame/util.h	/^        int     force_ms;    \/* force M\/S mode.  requires mode=1            *\/$/;"	m
force_short_block_calc	lame/libmp3lame/util.h	/^        int     force_short_block_calc;$/;"	m
foregroundCheckCount	GraphicsCapture/GraphicsCaptureSource.h	/^    DWORD foregroundCheckCount;$/;"	m	class:GraphicsCaptureSource
foregroundPID	GraphicsCapture/GraphicsCaptureSource.h	/^    DWORD foregroundPID;$/;"	m	class:GraphicsCaptureSource
format	GraphicsCapture/GlobalCaptureStuff.h	/^    DWORD   format;$/;"	m	struct:CaptureInfo
format	Source/D3D10System.h	/^    GSColorFormat format;$/;"	m	class:D3D10Texture
format	lame/Dll/BladeMP3EncDLL.h	/^	} format;$/;"	m
formatPitch	Source/D3D10Texture.cpp	/^const UINT formatPitch[] = {0, 1, 1, 4, 4, 4, 4, 8, 16, 0, 0, 0};$/;"	v
format_bitstream	lame/libmp3lame/bitstream.c	/^format_bitstream(lame_internal_flags * gfc)$/;"	f
forward_put_data	Source/mongoose.c	/^static void forward_put_data(struct connection *conn) {$/;"	f	file:
fp_fraction_part	libsamplerate/src_sinc.c	/^fp_fraction_part (increment_t x)$/;"	f	file:
fp_to_double	libsamplerate/src_sinc.c	/^fp_to_double (increment_t x)$/;"	f	file:
fp_to_int	libsamplerate/src_sinc.c	/^fp_to_int (increment_t x)$/;"	f	file:
fpad	Source/RTMPStuff.h	/^SAVC(fpad);$/;"	v
fpad	librtmp/rtmp.c	/^SAVC(fpad);$/;"	v
fps	ObsNvenc/inc/NVENCEncoder.h	/^    int fps;$/;"	m	class:NVENCEncoder
fps	QSVHelper/IPCStructs.h	/^    int32_t fps, keyint, bframes, width, height, max_bitrate, buffer_size;$/;"	m	struct:init_request
fps	Source/Encoder_QSV.cpp	/^    int fps;$/;"	m	class:QSVEncoder	file:
fps	Source/OBS.h	/^    UINT    frameTime, fps;$/;"	m	class:OBS
fps_ms	Source/Encoder_x264.cpp	/^    int fps_ms;$/;"	m	class:X264Encoder	file:
fr	lame/mpglib/mpglib.h	/^    struct frame fr;         \/* holds the parameters decoded from the header *\/$/;"	m	struct:mpstr_tag
frac_SpF	lame/libmp3lame/util.h	/^        int     frac_SpF;$/;"	m
frame	Source/Encoder_QSV.cpp	/^        mfxFrameData *frame;$/;"	m	struct:QSVEncoder::encode_task	file:
frame	lame/mpglib/mpg123.h	/^struct frame {$/;"	s
frame.c	libfaac/frame.c	1;"	F
frame.h	libfaac/frame.h	1;"	F
frameAvgQP	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                frameAvgQP;                  \/**< [out]: Average QP of the frame. *\/$/;"	m	struct:_NV_ENC_LOCK_BITSTREAM
frameCounter	Source/Encoder_MP3.cpp	/^    DWORD frameCounter;$/;"	m	class:MP3Encoder	file:
frameFieldMode	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_PARAMS_FRAME_FIELD_MODE  frameFieldMode;                              \/**< [in]: Specifies the frame\/field mode. Check support for field encoding using ::NV_ENC_CAPS_SUPPORT_FIELD_ENCODING caps. *\/$/;"	m	struct:_NV_ENC_CONFIG
frameIdx	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                                    frameIdx;                       \/**< [in]: Specifies the frame index associated with the input frame [optional]. *\/$/;"	m	struct:_NV_ENC_PIC_PARAMS
frameIdx	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                frameIdx;                    \/**< [out]: Frame no. for which the bitstream is being retrieved. *\/ $/;"	m	struct:_NV_ENC_LOCK_BITSTREAM
frameInterval	DShowPlugin/DeviceSource.h	/^    UINT64          frameInterval;$/;"	m	class:DeviceSource
frameIntervalP	ObsNvenc/inc/nvEncodeAPI.h	/^    int32_t                         frameIntervalP;                              \/**< [in]: Specifies the GOP pattern as follows: \\p frameIntervalP = 0: I, 1: IPP, 2: IBP, 3: IBBP  If goplength is set to NVENC_INFINITE_GOPLENGTH \\p frameIntervalP should be set to 1. *\/$/;"	m	struct:_NV_ENC_CONFIG
frameMutex	ObsNvenc/inc/NVENCEncoder.h	/^    HANDLE frameMutex;$/;"	m	class:NVENCEncoder
frameNum	lame/libmp3lame/lame-analysis.h	/^    int     frameNum;        \/* current frame number *\/$/;"	m	struct:plotting_data
frameNum	libfaac/frame.h	/^    unsigned int frameNum;$/;"	m
frameNum123	lame/libmp3lame/lame-analysis.h	/^    int     frameNum123;$/;"	m	struct:plotting_data
frameRateDen	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                                   frameRateDen;                    \/**< [in]: Specifies the denominator for frame rate used for encoding in frames per second ( Frame rate = frameRateNum \/ frameRateDen ). *\/$/;"	m	struct:_NV_ENC_INITIALIZE_PARAMS
frameRateNum	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                                   frameRateNum;                    \/**< [in]: Specifies the numerator for frame rate used for encoding in frames per second ( Frame rate = frameRateNum \/ frameRateDen ). *\/$/;"	m	struct:_NV_ENC_INITIALIZE_PARAMS
frameSatd	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                frameSatd;                   \/**< [out]: Total SATD cost for whole frame. *\/$/;"	m	struct:_NV_ENC_LOCK_BITSTREAM
frameShift	ObsNvenc/inc/NVENCEncoder.h	/^    int frameShift;$/;"	m	class:NVENCEncoder
frameShift	Source/Encoder_QSV.cpp	/^    int frameShift;$/;"	m	class:QSVEncoder	file:
frameShift	Source/Encoder_x264.cpp	/^    int frameShift;$/;"	m	class:X264Encoder	file:
frameTime	GraphicsCapture/GlobalCaptureStuff.h	/^    LONGLONG    frameTime;$/;"	m	struct:MemoryCopyData
frameTime	GraphicsCapture/GlobalCaptureStuff.h	/^    LONGLONG    frameTime;$/;"	m	struct:SharedTexData
frameTime	Source/DesktopImageSource.cpp	/^    UINT     frameTime;$/;"	m	class:DesktopImageSource	file:
frameTime	Source/MP4FileStream.cpp	/^    UINT frameTime = 0;$/;"	m	class:MP4FileStream	file:
frameTime	Source/OBS.h	/^    UINT    frameTime, fps;$/;"	m	class:OBS
frameTimestamp	Source/OBSVideoCapture.cpp	/^    DWORD frameTimestamp;$/;"	m	struct:FrameProcessInfo	file:
frame_buff	QSVHelper/Encoder.h	/^    ipc_frame_buff frame_buff;$/;"	m	struct:Encoder
frame_buff	Source/Encoder_QSV.cpp	/^    ipc_frame_buff frame_buff;$/;"	m	class:QSVEncoder	file:
frame_buff_status	QSVHelper/Encoder.h	/^    ipc_frame_buff_status frame_buff_status;$/;"	m	struct:Encoder
frame_buff_status	Source/Encoder_QSV.cpp	/^    ipc_frame_buff_status frame_buff_status;$/;"	m	class:QSVEncoder	file:
frame_count	Source/libnsgif.h	/^    unsigned int frame_count;            \/**< number of frames decoded *\/$/;"	m	struct:gif_animation
frame_count_partial	Source/libnsgif.h	/^    unsigned int frame_count_partial;        \/**< number of frames partially decoded *\/$/;"	m	struct:gif_animation
frame_ctr	lame/frontend/timestatus.c	/^    int     frame_ctr;$/;"	m	struct:DecoderProgress	file:
frame_delay	Source/libnsgif.h	/^      unsigned int frame_delay;        \/**< delay (in 100th second intervals) before animating the frame *\/$/;"	m	struct:gif_frame
frame_duration	lame/libmp3lame/psymodel.c	2073;"	d	file:
frame_duration	lame/libmp3lame/psymodel.c	2077;"	d	file:
frame_holders	Source/libnsgif.h	/^    unsigned int frame_holders;            \/**< current number of frame holders *\/$/;"	m	struct:gif_animation
frame_id_matches	lame/libmp3lame/id3tag.c	/^frame_id_matches(int id, int mask)$/;"	f	file:
frame_image	Source/libnsgif.h	/^    void *frame_image;                \/**< currently decoded image; stored as bitmap from bitmap_create callback *\/$/;"	m	struct:gif_animation
frame_index	QSVHelper/IPCStructs.h	/^    uint32_t frame_index;$/;"	m	struct:queued_frame
frame_index	QSVHelper/SupportStuff.h	/^    size_t frame_index;$/;"	m	struct:encode_task
frame_num	QSVHelper/IPCStructs.h	/^             frame_num;$/;"	m	struct:init_response
frame_number	lame/libmp3lame/util.h	/^        int     frame_number; \/* number of frames encoded             *\/$/;"	m
frame_only	x264/x264.h	/^    int frame_only;  \/* forbid interlacing *\/$/;"	m
frame_pitch	QSVHelper/IPCStructs.h	/^             frame_pitch;$/;"	m	struct:init_response
frame_pointer	Source/libnsgif.h	/^      unsigned int frame_pointer;        \/**< offset (in bytes) to the GIF frame data *\/$/;"	m	struct:gif_frame
frame_queue	QSVHelper/Encoder.h	/^    ipc_frame_queue frame_queue;$/;"	m	struct:Encoder
frame_queue	Source/Encoder_QSV.cpp	/^    IPCLockedSignalledArray<queued_frame> frame_queue;$/;"	m	class:QSVEncoder	file:
frame_size	QSVHelper/IPCStructs.h	/^             frame_size,$/;"	m	struct:init_response
frame_size	x264/x264.h	/^    int frame_size;  \/* max frame size (macroblocks) *\/$/;"	m
frame_ticks	QSVHelper/IPCStructs.h	/^    uint64_t frame_ticks;$/;"	m	struct:init_response
frame_ticks	Source/Encoder_QSV.cpp	/^        uint64_t frame_ticks;$/;"	m	struct:<anonymous>::DTSGenerator	file:
frame_time_ms	QSVHelper/Encoder.h	/^    unsigned frame_time_ms;$/;"	m	struct:Encoder
frame_type	QSVHelper/IPCStructs.h	/^    mfxU16 pic_struct, frame_type;$/;"	m	struct:bitstream_info
frameadv	lame/frontend/gtkanal.c	/^frameadv(GtkWidget * widget, gpointer data)$/;"	f	file:
frameadv1	lame/frontend/gtkanal.c	/^frameadv1(GtkWidget * widget, gpointer data)$/;"	f	file:
framebuf	lame/mpglib/mpglib.h	/^struct framebuf {$/;"	s
framecounter	lame/frontend/gtkanal.c	/^static GtkWidget *framecounter; \/* progress counter *\/$/;"	v	file:
framenum	lame/include/lame.h	/^  int framenum;        \/* frames decoded counter                         *\/$/;"	m
frameprogress	lame/frontend/gtkanal.c	/^static GtkWidget *frameprogress; \/* progress bar *\/$/;"	v	file:
framerate	Source/RTMPStuff.h	/^SAVC(framerate);$/;"	v
frames	QSVHelper/Encoder.h	/^    std::vector<mfxFrameData> frames;$/;"	m	struct:Encoder
frames	Source/Encoder_QSV.cpp	/^    List<mfxFrameData> frames;$/;"	m	class:QSVEncoder	file:
frames	Source/libnsgif.h	/^    gif_frame *frames;                \/**< decoded frames *\/$/;"	m	struct:gif_animation
frames	lame/libmp3lame/VbrTag.h	/^    int     frames;          \/* total bit stream frames from Vbr header data *\/$/;"	m
frames	libsamplerate/samplerate.h	/^{	long	frames ;$/;"	m
framesRendered	Source/NullOutput.cpp	/^    DWORD framesRendered;$/;"	m	class:NullNetwork	file:
frames_out	Source/Encoder_QSV.cpp	/^        uint64_t frames_out;$/;"	m	struct:<anonymous>::DTSGenerator	file:
frames_total	lame/frontend/timestatus.c	/^    int     frames_total;$/;"	m	struct:DecoderProgress	file:
framesize	lame/frontend/timestatus.c	/^    int     framesize;$/;"	m	struct:DecoderProgress	file:
framesize	lame/include/lame.h	/^  int framesize;       \/* number of samples per mp3 frame                *\/$/;"	m
framesize	lame/libmp3lame/lame-analysis.h	/^    int     framesize, stereo, js, ms_stereo, i_stereo, emph, bitrate, sampfreq, maindata;$/;"	m	struct:plotting_data
framesize	lame/mpglib/mpg123.h	/^    int     framesize;       \/* computed framesize *\/$/;"	m	struct:frame
framesize	lame/mpglib/mpglib.h	/^    int     framesize;$/;"	m	struct:mpstr_tag
frametime	lame/libmp3lame/lame-analysis.h	/^    double  frametime;       \/* starting time of frame, in seconds *\/$/;"	m	struct:plotting_data
free	lame/config.h	93;"	d
free	lame/configMS.h	93;"	d
freeCount	OBSApi/Utility/DebugAlloc.cpp	/^DWORD freeCount = 0;$/;"	v
freePcmBuffer	lame/frontend/get_audio.c	/^freePcmBuffer(PcmBuffer * b)$/;"	f	file:
free_aligned	lame/libmp3lame/util.c	/^free_aligned(aligned_pointer_t * ptr)$/;"	f
free_format	lame/libmp3lame/lame_global_flags.h	/^    int     free_format;     \/* use free format? default=0                  *\/$/;"	m	struct:lame_global_struct
free_format	lame/libmp3lame/util.h	/^        int     free_format;$/;"	m
free_format	lame/mpglib/mpglib.h	/^    int     free_format;     \/* 1 = free format frame *\/$/;"	m	struct:mpstr_tag
free_global_data	lame/libmp3lame/util.c	/^free_global_data(lame_internal_flags * gfc)$/;"	f	file:
free_id3tag	lame/libmp3lame/util.c	/^free_id3tag(lame_internal_flags * const gfc)$/;"	f
freeformat	lame/doc/html/detailed.html	/^<a name="freeformat"><span class="hilight">--freeformat<\/span><\/a> Encode to freeformat stream$/;"	a
freegfc	lame/libmp3lame/util.c	/^freegfc(lame_internal_flags * const gfc)$/;"	f
freq2bark	lame/libmp3lame/util.c	/^freq2bark(FLOAT freq)$/;"	f
freqBuff	libfaac/frame.h	/^    double *freqBuff[MAX_CHANNELS];$/;"	m
freqindex	lame/libmp3lame/gain_analysis.h	/^        int     freqindex;$/;"	m	struct:replaygain_data
freqs	lame/mpglib/common.c	/^const long freqs[9] = { 44100, 48000, 32000,$/;"	v
frequency	lame/ACM/ACM.h	/^		unsigned int frequency;$/;"	m	class:bitrate_item
frequency	lame/misc/ath.c	/^long double  frequency ( const generator_t* const g )$/;"	f
fromLatin1Char	lame/libmp3lame/id3tag.c	/^fromLatin1Char(const unsigned short* s, unsigned short c)$/;"	f	file:
frontend_close_console	lame/frontend/console.c	/^frontend_close_console(void)$/;"	f
frontend_debugf	lame/frontend/console.c	/^frontend_debugf(const char *format, va_list ap)$/;"	f
frontend_errorf	lame/frontend/console.c	/^frontend_errorf(const char *format, va_list ap)$/;"	f
frontend_msgf	lame/frontend/console.c	/^frontend_msgf(const char *format, va_list ap)$/;"	f
frontend_open_console	lame/frontend/console.c	/^frontend_open_console(void)$/;"	f
frontend_print_null	lame/frontend/console.c	/^frontend_print_null(const char *format, va_list ap)$/;"	f
fsizeold	lame/mpglib/mpglib.h	/^    int     fsizeold;        \/* size of previous frame, -1 for first *\/$/;"	m	struct:mpstr_tag
fsizeold_nopadding	lame/mpglib/mpglib.h	/^    int     fsizeold_nopadding;$/;"	m	struct:mpstr_tag
fskip	lame/frontend/get_audio.c	/^fskip(FILE * fp, long offset, int whence)$/;"	f	file:
fsqr	lame/libmp3lame/gain_analysis.c	/^fsqr(const double d)$/;"	f	file:
fullRange	DShowPlugin/DeviceSource.h	/^    BOOL            fullRange;$/;"	m	class:DeviceSource
fullRange	Source/OBS.h	/^    int fullRange;$/;"	m	struct:ColorDescription
fullSize	Source/BitmapImage.h	/^    Vect2 fullSize;$/;"	m	class:BitmapImage
fullSize	Source/BitmapTransitionSource.cpp	/^    Vect2    fullSize;$/;"	m	class:BitmapTransitionSource	file:
full_gain	lame/mpglib/mpg123.h	/^    real   *full_gain[3];$/;"	m	struct:gr_info_s
full_outer_loop	lame/libmp3lame/util.h	/^        int     full_outer_loop; \/* 0 = stop early after 0 distortion found. 1 = full search *\/$/;"	m
full_range	QSVHelper/IPCStructs.h	/^    int32_t full_range, matrix, primaries, transfer;$/;"	m	struct:init_request
fullscreenPrevPlacement	Source/OBS.h	/^    WINDOWPLACEMENT fullscreenPrevPlacement;$/;"	m	class:OBS
fun	OBSApi/Utility/RAIIHelpers.h	/^    Fun fun;$/;"	m	struct:ScopeGuard
func	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.h	/^    FARPROC func;$/;"	m	class:HookData
func	Source/DataPacketHelpers.h	/^    std::function<void(DataPacket&)> func;$/;"	m	struct:BufferedDataPacket
func	Source/OBS.h	/^        std::function<void()> func;$/;"	m	struct:OBS::StopInfo
func	lame/frontend/gtkanal.c	1334;"	d	file:
func	lame/frontend/gtkanal.c	1378;"	d	file:
func	lame/misc/ath.c	/^const converter_fn_t  func     [] = { linear_f,     logarithm_f,     square_f,     cubic_f    , erb_f    , recip_f     };$/;"	v
func_append	lame/config.status	/^func_append ()$/;"	f
func_append	lame/configure	/^func_append ()$/;"	f
func_append	lame/libtool	/^func_append ()$/;"	f
func_arith	lame/config.status	/^func_arith ()$/;"	f
func_arith	lame/configure	/^func_arith ()$/;"	f
func_arith	lame/libtool	/^func_arith ()$/;"	f
func_basename	lame/config.status	/^func_basename ()$/;"	f
func_basename	lame/configure	/^func_basename ()$/;"	f
func_basename	lame/libtool	/^func_basename ()$/;"	f
func_check_version_match	lame/libtool	/^func_check_version_match ()$/;"	f
func_check_version_match	lame/ltmain.sh	/^func_check_version_match ()$/;"	f
func_config	lame/libtool	/^func_config ()$/;"	f
func_config	lame/ltmain.sh	/^func_config ()$/;"	f
func_dirname	lame/config.status	/^func_dirname ()$/;"	f
func_dirname	lame/configure	/^func_dirname ()$/;"	f
func_dirname	lame/libtool	/^func_dirname ()$/;"	f
func_dirname_and_basename	lame/config.status	/^func_dirname_and_basename ()$/;"	f
func_dirname_and_basename	lame/configure	/^func_dirname_and_basename ()$/;"	f
func_dirname_and_basename	lame/libtool	/^func_dirname_and_basename ()$/;"	f
func_dirname_and_basename	lame/ltmain.sh	/^func_dirname_and_basename ()$/;"	f
func_echo	lame/libtool	/^func_echo ()$/;"	f
func_echo	lame/ltmain.sh	/^func_echo ()$/;"	f
func_echo_all	lame/configure	/^func_echo_all ()$/;"	f
func_echo_all	lame/libtool	/^func_echo_all ()$/;"	f
func_echo_all	lame/ltmain.sh	/^func_echo_all ()$/;"	f
func_emit_cwrapperexe_src	lame/libtool	/^func_emit_cwrapperexe_src ()$/;"	f
func_emit_cwrapperexe_src	lame/ltmain.sh	/^func_emit_cwrapperexe_src ()$/;"	f
func_emit_wrapper	lame/libtool	/^func_emit_wrapper ()$/;"	f
func_emit_wrapper	lame/ltmain.sh	/^func_emit_wrapper ()$/;"	f
func_enable_tag	lame/libtool	/^func_enable_tag ()$/;"	f
func_enable_tag	lame/ltmain.sh	/^func_enable_tag ()$/;"	f
func_error	lame/libtool	/^func_error ()$/;"	f
func_error	lame/ltmain.sh	/^func_error ()$/;"	f
func_exec_program	lame/libtool	/^func_exec_program ()$/;"	f
func_exec_program	lame/ltmain.sh	/^func_exec_program ()$/;"	f
func_exec_program_core	lame/libtool	/^func_exec_program_core ()$/;"	f
func_exec_program_core	lame/ltmain.sh	/^func_exec_program_core ()$/;"	f
func_execute_cmds	lame/libtool	/^func_execute_cmds ()$/;"	f
func_execute_cmds	lame/ltmain.sh	/^func_execute_cmds ()$/;"	f
func_extract_an_archive	lame/libtool	/^func_extract_an_archive ()$/;"	f
func_extract_an_archive	lame/ltmain.sh	/^func_extract_an_archive ()$/;"	f
func_extract_archives	lame/libtool	/^func_extract_archives ()$/;"	f
func_extract_archives	lame/ltmain.sh	/^func_extract_archives ()$/;"	f
func_fallback_echo	lame/config.status	/^func_fallback_echo ()$/;"	f
func_fallback_echo	lame/configure	/^  func_fallback_echo ()$/;"	f
func_fallback_echo	lame/configure	/^func_fallback_echo ()$/;"	f
func_fallback_echo	lame/libtool	/^func_fallback_echo ()$/;"	f
func_fallback_echo	lame/ltmain.sh	/^func_fallback_echo ()$/;"	f
func_fatal_configuration	lame/libtool	/^func_fatal_configuration ()$/;"	f
func_fatal_configuration	lame/ltmain.sh	/^func_fatal_configuration ()$/;"	f
func_fatal_error	lame/libtool	/^func_fatal_error ()$/;"	f
func_fatal_error	lame/ltmain.sh	/^func_fatal_error ()$/;"	f
func_fatal_help	lame/libtool	/^func_fatal_help ()$/;"	f
func_fatal_help	lame/ltmain.sh	/^func_fatal_help ()$/;"	f
func_features	lame/libtool	/^func_features ()$/;"	f
func_features	lame/ltmain.sh	/^func_features ()$/;"	f
func_generate_dlsyms	lame/libtool	/^func_generate_dlsyms ()$/;"	f
func_generate_dlsyms	lame/ltmain.sh	/^func_generate_dlsyms ()$/;"	f
func_grep	lame/libtool	/^func_grep ()$/;"	f
func_grep	lame/ltmain.sh	/^func_grep ()$/;"	f
func_help	lame/libtool	/^func_help ()$/;"	f
func_help	lame/ltmain.sh	/^func_help ()$/;"	f
func_infer_tag	lame/libtool	/^func_infer_tag ()$/;"	f
func_infer_tag	lame/ltmain.sh	/^func_infer_tag ()$/;"	f
func_lalib_p	lame/libtool	/^func_lalib_p ()$/;"	f
func_lalib_p	lame/ltmain.sh	/^func_lalib_p ()$/;"	f
func_lalib_unsafe_p	lame/libtool	/^func_lalib_unsafe_p ()$/;"	f
func_lalib_unsafe_p	lame/ltmain.sh	/^func_lalib_unsafe_p ()$/;"	f
func_len	lame/config.status	/^func_len ()$/;"	f
func_len	lame/configure	/^func_len ()$/;"	f
func_len	lame/libtool	/^func_len ()$/;"	f
func_lo2o	lame/config.status	/^func_lo2o ()$/;"	f
func_lo2o	lame/configure	/^func_lo2o ()$/;"	f
func_lo2o	lame/libtool	/^func_lo2o ()$/;"	f
func_lt_dump_args	lame/libtool	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	lame/ltmain.sh	/^func_lt_dump_args ()$/;"	f
func_ltwrapper_executable_p	lame/libtool	/^func_ltwrapper_executable_p ()$/;"	f
func_ltwrapper_executable_p	lame/ltmain.sh	/^func_ltwrapper_executable_p ()$/;"	f
func_ltwrapper_p	lame/libtool	/^func_ltwrapper_p ()$/;"	f
func_ltwrapper_p	lame/ltmain.sh	/^func_ltwrapper_p ()$/;"	f
func_ltwrapper_script_p	lame/libtool	/^func_ltwrapper_script_p ()$/;"	f
func_ltwrapper_script_p	lame/ltmain.sh	/^func_ltwrapper_script_p ()$/;"	f
func_ltwrapper_scriptname	lame/libtool	/^func_ltwrapper_scriptname ()$/;"	f
func_ltwrapper_scriptname	lame/ltmain.sh	/^func_ltwrapper_scriptname ()$/;"	f
func_missing_arg	lame/libtool	/^func_missing_arg ()$/;"	f
func_missing_arg	lame/ltmain.sh	/^func_missing_arg ()$/;"	f
func_mkdir_p	lame/libtool	/^func_mkdir_p ()$/;"	f
func_mkdir_p	lame/ltmain.sh	/^func_mkdir_p ()$/;"	f
func_mktempdir	lame/libtool	/^func_mktempdir ()$/;"	f
func_mktempdir	lame/ltmain.sh	/^func_mktempdir ()$/;"	f
func_mode_compile	lame/libtool	/^func_mode_compile ()$/;"	f
func_mode_compile	lame/ltmain.sh	/^func_mode_compile ()$/;"	f
func_mode_execute	lame/libtool	/^func_mode_execute ()$/;"	f
func_mode_execute	lame/ltmain.sh	/^func_mode_execute ()$/;"	f
func_mode_finish	lame/libtool	/^func_mode_finish ()$/;"	f
func_mode_finish	lame/ltmain.sh	/^func_mode_finish ()$/;"	f
func_mode_help	lame/libtool	/^func_mode_help ()$/;"	f
func_mode_help	lame/ltmain.sh	/^func_mode_help ()$/;"	f
func_mode_install	lame/libtool	/^func_mode_install ()$/;"	f
func_mode_install	lame/ltmain.sh	/^func_mode_install ()$/;"	f
func_mode_link	lame/libtool	/^func_mode_link ()$/;"	f
func_mode_link	lame/ltmain.sh	/^func_mode_link ()$/;"	f
func_mode_uninstall	lame/libtool	/^func_mode_uninstall ()$/;"	f
func_mode_uninstall	lame/ltmain.sh	/^func_mode_uninstall ()$/;"	f
func_normal_abspath	lame/libtool	/^func_normal_abspath ()$/;"	f
func_normal_abspath	lame/ltmain.sh	/^func_normal_abspath ()$/;"	f
func_opt_split	lame/config.status	/^func_opt_split ()$/;"	f
func_opt_split	lame/configure	/^func_opt_split ()$/;"	f
func_opt_split	lame/libtool	/^func_opt_split ()$/;"	f
func_parse_lt_options	lame/libtool	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	lame/ltmain.sh	/^func_parse_lt_options ()$/;"	f
func_quote_for_eval	lame/libtool	/^func_quote_for_eval ()$/;"	f
func_quote_for_eval	lame/ltmain.sh	/^func_quote_for_eval ()$/;"	f
func_quote_for_expand	lame/libtool	/^func_quote_for_expand ()$/;"	f
func_quote_for_expand	lame/ltmain.sh	/^func_quote_for_expand ()$/;"	f
func_relative_path	lame/libtool	/^func_relative_path ()$/;"	f
func_relative_path	lame/ltmain.sh	/^func_relative_path ()$/;"	f
func_show_eval	lame/libtool	/^func_show_eval ()$/;"	f
func_show_eval	lame/ltmain.sh	/^func_show_eval ()$/;"	f
func_show_eval_locale	lame/libtool	/^func_show_eval_locale ()$/;"	f
func_show_eval_locale	lame/ltmain.sh	/^func_show_eval_locale ()$/;"	f
func_source	lame/libtool	/^func_source ()$/;"	f
func_source	lame/ltmain.sh	/^func_source ()$/;"	f
func_stripname	lame/config.status	/^func_stripname ()$/;"	f
func_stripname	lame/configure	/^func_stripname ()$/;"	f
func_stripname	lame/libtool	/^func_stripname ()$/;"	f
func_to_host_path	lame/libtool	/^func_to_host_path ()$/;"	f
func_to_host_path	lame/ltmain.sh	/^func_to_host_path ()$/;"	f
func_to_host_pathlist	lame/libtool	/^func_to_host_pathlist ()$/;"	f
func_to_host_pathlist	lame/ltmain.sh	/^func_to_host_pathlist ()$/;"	f
func_usage	lame/libtool	/^func_usage ()$/;"	f
func_usage	lame/ltmain.sh	/^func_usage ()$/;"	f
func_verbose	lame/libtool	/^func_verbose ()$/;"	f
func_verbose	lame/ltmain.sh	/^func_verbose ()$/;"	f
func_version	lame/libtool	/^func_version ()$/;"	f
func_version	lame/ltmain.sh	/^func_version ()$/;"	f
func_warning	lame/libtool	/^func_warning ()$/;"	f
func_warning	lame/ltmain.sh	/^func_warning ()$/;"	f
func_win32_import_lib_p	lame/libtool	/^func_win32_import_lib_p ()$/;"	f
func_win32_import_lib_p	lame/ltmain.sh	/^func_win32_import_lib_p ()$/;"	f
func_win32_libid	lame/libtool	/^func_win32_libid ()$/;"	f
func_win32_libid	lame/ltmain.sh	/^func_win32_libid ()$/;"	f
func_write_libtool_object	lame/libtool	/^func_write_libtool_object ()$/;"	f
func_write_libtool_object	lame/ltmain.sh	/^func_write_libtool_object ()$/;"	f
func_xform	lame/config.status	/^func_xform ()$/;"	f
func_xform	lame/configure	/^func_xform ()$/;"	f
func_xform	lame/libtool	/^func_xform ()$/;"	f
funlockfile	Source/mongoose.c	1353;"	d	file:
futureShaders	OBSApi/GraphicsSystem.h	/^    } futureShaders;$/;"	m	class:GraphicsSystem
g	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    float g;$/;"	m	struct:_D3DCOLORVALUE
g	librtmp/dh.h	/^    MP_t g;$/;"	m	struct:MDH
gCS	minhook/src/hook.cpp	/^static MinHook::CriticalSection* gCS = NULL;$/;"	v	file:
gFail	lame/ACM/tinyxml/xmltest.cpp	/^int gFail = 0;$/;"	v
gHooks	minhook/src/hook.cpp	/^	std::vector<HOOK_ENTRY> gHooks;$/;"	v
gIsInitialized	minhook/src/hook.cpp	/^	bool gIsInitialized = false;$/;"	v
gMaxAddress	minhook/src/buffer.cpp	/^	intptr_t gMaxAddress;$/;"	v
gMemoryBlocks	minhook/src/buffer.cpp	/^	std::vector<MEMORY_BLOCK> gMemoryBlocks;$/;"	v
gMinAddress	minhook/src/buffer.cpp	/^	intptr_t gMinAddress;$/;"	v
gPass	lame/ACM/tinyxml/xmltest.cpp	/^int gPass = 0;$/;"	v
g_CurrentPalette	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	/^} g_CurrentPalette;$/;"	v
g_Templates	lame/dshow/Mpegac.cpp	/^CFactoryTemplate g_Templates[] = $/;"	v
g_bConvert16to32	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	/^BOOL g_bConvert16to32 = false;$/;"	v
g_bUse32bitCapture	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	/^BOOL g_bUse32bitCapture = false;$/;"	v
g_bUseFlipMethod	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	/^BOOL g_bUseFlipMethod = false;$/;"	v
g_bUsePalette	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	/^BOOL g_bUsePalette = false;$/;"	v
g_cTemplates	lame/dshow/Mpegac.cpp	/^int g_cTemplates = sizeof(g_Templates) \/ sizeof(g_Templates[0]);$/;"	v
g_ddInterface	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	/^LPDIRECTDRAW7           g_ddInterface = NULL;$/;"	v
g_dwCaptureSize	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	/^DWORD g_dwCaptureSize = 0; \/\/ bytesize of memory capture buffer$/;"	v
g_dwSize	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	/^DWORD g_dwSize = 0; \/\/ bytesize of buffers$/;"	v
g_frontSurface	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	/^LPDIRECTDRAWSURFACE7    g_frontSurface = NULL;$/;"	v
g_registrator1	libmfx/src/mfx_dispatcher_log.cpp	/^    static SinkRegistrator<ETWHandlerFactory> g_registrator1;$/;"	v	file:
g_registrator2	libmfx/src/mfx_dispatcher_log.cpp	/^    static SinkRegistrator<FileSink> g_registrator2;$/;"	v	file:
g_surfaceDesc	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	/^LPDDSURFACEDESC2        g_surfaceDesc;$/;"	v
g_wszName	lame/dshow/Mpegac.cpp	/^static WCHAR g_wszName[] = L"LAME Audio Encoder";$/;"	v	file:
gain_analysis.c	lame/libmp3lame/gain_analysis.c	1;"	F
gain_analysis.h	lame/libmp3lame/gain_analysis.h	1;"	F
gainpow2	lame/mpglib/layer3.c	/^static real gainpow2[256 + 118 + 4];$/;"	v	file:
gamma	DShowPlugin/DeviceSource.h	/^    int             gamma;$/;"	m	class:DeviceSource
gamma	GraphicsCapture/GraphicsCaptureSource.h	/^    int gamma;$/;"	m	class:GraphicsCaptureSource
gamma	Source/DesktopImageSource.cpp	/^    int      gamma;$/;"	m	class:DesktopImageSource	file:
gcd	Source/SettingsVideo.cpp	/^static int gcd(int a, int b)$/;"	f	file:
gcd	lame/libmp3lame/util.c	/^gcd(int i, int j)$/;"	f	file:
gd_are_hip_tables_layer1_initialized	lame/mpglib/layer1.c	/^static int gd_are_hip_tables_layer1_initialized = 0;$/;"	v	file:
gd_are_hip_tables_layer2_initialized	lame/mpglib/layer2.c	/^static int gd_are_hip_tables_layer2_initialized = 0;$/;"	v	file:
gd_are_hip_tables_layer3_initialized	lame/mpglib/layer3.c	/^static int gd_are_hip_tables_layer3_initialized = 0;$/;"	v	file:
generateOutPath	lame/frontend/parse.c	/^int generateOutPath(lame_t gfp, char const* inPath, char const* outDir, char* outPath)$/;"	f	file:
generatedLayout	Source/D3D10System.h	/^    List<D3D10_INPUT_ELEMENT_DESC> generatedLayout;$/;"	m	struct:ShaderProcessor
generator_t	lame/misc/ath.c	/^} generator_t;$/;"	t	file:
genmode	lame/misc/ath.c	/^    genmode_t      genmode;$/;"	m	file:
genmode_t	lame/misc/ath.c	/^} genmode_t;$/;"	t	file:
genre-list	lame/doc/html/detailed.html	/^<a name="genre-list"><span class="hilight">--genre-list<\/span><\/a> Print alphabetical ordered list of$/;"	a
genre_alpha_map	lame/libmp3lame/id3tag.c	/^static const int genre_alpha_map[] = {$/;"	v	file:
genre_id3v1	lame/libmp3lame/id3tag.h	/^    int     genre_id3v1;$/;"	m	struct:id3tag_spec
genre_list_handler	lame/frontend/parse.c	/^genre_list_handler(int num, const char *name, void *cookie)$/;"	f	file:
genre_names	lame/libmp3lame/id3tag.c	/^static const char *const genre_names[] = {$/;"	v	file:
get	CLRHostPlugin/CLRHostInterop/AbstractImageSource.cpp	/^Vector2^ AbstractImageSource::Size::get()$/;"	f	class:AbstractImageSource::Size
get	CLRHostPlugin/CLRHostInterop/AbstractImageSourceFactory.cpp	/^String^ AbstractImageSourceFactory::ClassName::get()$/;"	f	class:AbstractImageSourceFactory::ClassName
get	CLRHostPlugin/CLRHostInterop/AbstractImageSourceFactory.cpp	/^String^ AbstractImageSourceFactory::DisplayName::get()$/;"	f	class:AbstractImageSourceFactory::DisplayName
get	CLRHostPlugin/CLRHostInterop/AbstractPlugin.cpp	/^String^ AbstractPlugin::Description::get()$/;"	f	class:AbstractPlugin::Description
get	CLRHostPlugin/CLRHostInterop/AbstractPlugin.cpp	/^String^ AbstractPlugin::Name::get()$/;"	f	class:AbstractPlugin::Name
get	CLRHostPlugin/CLRHostInterop/AbstractWPFSettingsPane.cpp	/^String^ AbstractWPFSettingsPane::Category::get()$/;"	f	class:AbstractWPFSettingsPane::Category
get	CLRHostPlugin/CLRHostInterop/GraphicsSystem.cpp	/^CLROBS::GSColorFormat CLROBS::Texture::Format::get() $/;"	f	class:CLROBS::Texture::Format
get	CLRHostPlugin/CLRHostInterop/GraphicsSystem.cpp	/^CLROBS::GraphicsSystem^ CLROBS::GraphicsSystem::Instance::get()$/;"	f	class:CLROBS::GraphicsSystem::Instance
get	CLRHostPlugin/CLRHostInterop/GraphicsSystem.cpp	/^System::IntPtr CLROBS::Texture::D3DTexture::get() $/;"	f	class:CLROBS::Texture::D3DTexture
get	CLRHostPlugin/CLRHostInterop/GraphicsSystem.cpp	/^System::IntPtr CLROBS::Texture::OBSTexture::get() $/;"	f	class:CLROBS::Texture::OBSTexture
get	CLRHostPlugin/CLRHostInterop/GraphicsSystem.cpp	/^unsigned int CLROBS::Texture::Height::get() $/;"	f	class:CLROBS::Texture::Height
get	CLRHostPlugin/CLRHostInterop/GraphicsSystem.cpp	/^unsigned int CLROBS::Texture::Width::get() $/;"	f	class:CLROBS::Texture::Width
get	CLRHostPlugin/CLRHostInterop/XElement.cpp	/^CLROBS::XElement^ CLROBS::XElement::Parent::get()$/;"	f	class:CLROBS::XElement::Parent
get	CLRHostPlugin/CLRHostInterop/XElement.cpp	/^System::String^ CLROBS::XElement::Name::get() $/;"	f	class:CLROBS::XElement::Name
get	QSVHelper/IntelSupport/include/base_allocator.h	/^        T* get()$/;"	f	class:BaseFrameAllocator::safe_array
get	libmfx/include/mfx_dispatcher_log.h	/^    inline static T & get()$/;"	f	class:DSSingleTone
get	libmfx/include/mfx_dispatcher_log.h	/^    inline static T & get(TParam1 par1)$/;"	f	class:DSSingleTone
get1bit	lame/mpglib/layer3.c	/^get1bit(PMPSTR mp)$/;"	f	file:
getBinary	lame/dshow/REG.CPP	/^DWORD CRegKey::getBinary(PTSTR valuename, PVOID pDefault, PVOID pResult, int cbSize)$/;"	f	class:Lame::CRegKey
getCategoryMethod	CLRHostPlugin/CLRHostPlugin/CLRSettingsPane.h	/^    mscorlib::_MethodInfo *getCategoryMethod;$/;"	m	class:CLRSettingsPane
getCodeFromHRESULT	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	/^unsigned int getCodeFromHRESULT(HRESULT hr)$/;"	f
getDWORD	lame/dshow/REG.CPP	/^DWORD   CRegKey::getDWORD(PTSTR valuename, DWORD bDefault)$/;"	f	class:Lame::CRegKey
getDisplayNameMethod	CLRHostPlugin/CLRHostPlugin/CLRImageSourceFactory.h	/^    mscorlib::_MethodInfo *getDisplayNameMethod;$/;"	m	class:CLRImageSourceFactory
getFlag	lame/dshow/REG.CPP	/^BOOL    CRegKey::getFlag(PTSTR valuename, BOOL bDefault)$/;"	f	class:Lame::CRegKey
getFrameLength	lame/dshow/Encoder.cpp	/^int getFrameLength(const unsigned char * pdata)$/;"	f
getFrontSurface	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	/^bool getFrontSurface(LPDIRECTDRAWSURFACE7 lpDDSurface)$/;"	f
getOldTag	lame/frontend/get_audio.c	/^getOldTag(lame_t gf)$/;"	f
getPluginDescriptionMethod	CLRHostPlugin/CLRHostPlugin/CLRPlugin.h	/^    mscorlib::_MethodInfo *getPluginDescriptionMethod;$/;"	m	class:CLRPlugin
getPluginNameMethod	CLRHostPlugin/CLRHostPlugin/CLRPlugin.h	/^    mscorlib::_MethodInfo *getPluginNameMethod;$/;"	m	class:CLRPlugin
getSizeMethod	CLRHostPlugin/CLRHostPlugin/CLRImageSource.h	/^    mscorlib::_MethodInfo *getSizeMethod;$/;"	m	class:CLRImageSource
getSourceClassNameMethod	CLRHostPlugin/CLRHostPlugin/CLRImageSourceFactory.h	/^    mscorlib::_MethodInfo *getSourceClassNameMethod;$/;"	m	class:CLRImageSourceFactory
getStreamLength	Source/RTMPStuff.h	/^SAVC(getStreamLength);$/;"	v
getString	lame/dshow/REG.CPP	/^DWORD CRegKey::getString(PTSTR valuename, PTSTR pDefault, PTSTR pResult, int cbSize)$/;"	f	class:Lame::CRegKey
getUserModeExceptionProc	Source/Main.cpp	/^typedef BOOL (WINAPI *getUserModeExceptionProc)(LPDWORD);$/;"	t	file:
getWideString	libmfx/include/mfx_dispatcher_defs.h	/^inline std::wstring getWideString(const char * string)$/;"	f
getX	CLRHostPlugin/CLRHostPlugin/CLRVector2.cpp	/^float CLRVector2::getX()$/;"	f	class:CLRVector2
getXMethod	CLRHostPlugin/CLRHostPlugin/CLRVector2.h	/^    mscorlib::_MethodInfo *getXMethod;$/;"	m	class:CLRVector2
getY	CLRHostPlugin/CLRHostPlugin/CLRVector2.cpp	/^float CLRVector2::getY()$/;"	f	class:CLRVector2
getYMethod	CLRHostPlugin/CLRHostPlugin/CLRVector2.h	/^    mscorlib::_MethodInfo *getYMethod;$/;"	m	class:CLRVector2
get_Bitrate	lame/dshow/Mpegac.cpp	/^STDMETHODIMP CMpegAudEnc::get_Bitrate(DWORD *dwBitrate)$/;"	f	class:CMpegAudEnc
get_CRCFlag	lame/dshow/Mpegac.cpp	/^STDMETHODIMP CMpegAudEnc::get_CRCFlag(DWORD *dwFlag)$/;"	f	class:CMpegAudEnc
get_ChannelMode	lame/dshow/Mpegac.cpp	/^STDMETHODIMP CMpegAudEnc::get_ChannelMode(DWORD *dwChannelMode)$/;"	f	class:CMpegAudEnc
get_CopyrightFlag	lame/dshow/Mpegac.cpp	/^STDMETHODIMP CMpegAudEnc::get_CopyrightFlag(DWORD *dwFlag)$/;"	f	class:CMpegAudEnc
get_EnforceVBRmin	lame/dshow/Mpegac.cpp	/^STDMETHODIMP CMpegAudEnc::get_EnforceVBRmin(DWORD *dwFlag)$/;"	f	class:CMpegAudEnc
get_ForceMS	lame/dshow/Mpegac.cpp	/^STDMETHODIMP CMpegAudEnc::get_ForceMS(DWORD *dwFlag)$/;"	f	class:CMpegAudEnc
get_ForceMono	lame/dshow/Mpegac.cpp	/^STDMETHODIMP CMpegAudEnc::get_ForceMono(DWORD *dwFlag)$/;"	f	class:CMpegAudEnc
get_KeepAllFreq	lame/dshow/Mpegac.cpp	/^STDMETHODIMP CMpegAudEnc::get_KeepAllFreq(DWORD *dwFlag)$/;"	f	class:CMpegAudEnc
get_MPEGLayer	lame/dshow/Mpegac.cpp	/^STDMETHODIMP CMpegAudEnc::get_MPEGLayer(DWORD *dwLayer)$/;"	f	class:CMpegAudEnc
get_ModeFixed	lame/dshow/Mpegac.cpp	/^STDMETHODIMP CMpegAudEnc::get_ModeFixed(DWORD *dwModeFixed)$/;"	f	class:CMpegAudEnc
get_NoShortBlock	lame/dshow/Mpegac.cpp	/^STDMETHODIMP CMpegAudEnc::get_NoShortBlock(DWORD *dwNoShortBlock)$/;"	f	class:CMpegAudEnc
get_OriginalFlag	lame/dshow/Mpegac.cpp	/^STDMETHODIMP CMpegAudEnc::get_OriginalFlag(DWORD *dwFlag)$/;"	f	class:CMpegAudEnc
get_PESOutputEnabled	lame/dshow/Mpegac.cpp	/^STDMETHODIMP CMpegAudEnc::get_PESOutputEnabled(DWORD *dwEnabled)$/;"	f	class:CMpegAudEnc
get_ParameterBlockSize	lame/dshow/Mpegac.cpp	/^STDMETHODIMP CMpegAudEnc::get_ParameterBlockSize(BYTE *pcBlock, DWORD *pdwSize)$/;"	f	class:CMpegAudEnc
get_Quality	lame/dshow/Mpegac.cpp	/^STDMETHODIMP CMpegAudEnc::get_Quality(DWORD *dwQuality)             $/;"	f	class:CMpegAudEnc
get_SampleOverlap	lame/dshow/Mpegac.cpp	/^STDMETHODIMP CMpegAudEnc::get_SampleOverlap(DWORD *dwFlag)$/;"	f	class:CMpegAudEnc
get_SampleRate	lame/dshow/Mpegac.cpp	/^STDMETHODIMP CMpegAudEnc::get_SampleRate(DWORD *dwSampleRate)$/;"	f	class:CMpegAudEnc
get_SetDuration	lame/dshow/Mpegac.cpp	/^STDMETHODIMP CMpegAudEnc::get_SetDuration(DWORD *dwFlag)$/;"	f	class:CMpegAudEnc
get_SourceChannels	lame/dshow/Mpegac.cpp	/^STDMETHODIMP CMpegAudEnc::get_SourceChannels(DWORD *dwChannels)$/;"	f	class:CMpegAudEnc
get_SourceSampleRate	lame/dshow/Mpegac.cpp	/^STDMETHODIMP CMpegAudEnc::get_SourceSampleRate(DWORD *dwSampleRate)$/;"	f	class:CMpegAudEnc
get_StrictISO	lame/dshow/Mpegac.cpp	/^STDMETHODIMP CMpegAudEnc::get_StrictISO(DWORD *dwFlag)$/;"	f	class:CMpegAudEnc
get_Variable	lame/dshow/Mpegac.cpp	/^STDMETHODIMP CMpegAudEnc::get_Variable(DWORD *dwVariable)$/;"	f	class:CMpegAudEnc
get_VariableMax	lame/dshow/Mpegac.cpp	/^STDMETHODIMP CMpegAudEnc::get_VariableMax(DWORD *dwMax)$/;"	f	class:CMpegAudEnc
get_VariableMin	lame/dshow/Mpegac.cpp	/^STDMETHODIMP CMpegAudEnc::get_VariableMin(DWORD *dwMin)$/;"	f	class:CMpegAudEnc
get_VariableQ	lame/dshow/Mpegac.cpp	/^STDMETHODIMP CMpegAudEnc::get_VariableQ(DWORD *dwVBRq)             $/;"	f	class:CMpegAudEnc
get_VoiceMode	lame/dshow/Mpegac.cpp	/^STDMETHODIMP CMpegAudEnc::get_VoiceMode(DWORD *dwFlag)$/;"	f	class:CMpegAudEnc
get_XingTag	lame/dshow/Mpegac.cpp	/^STDMETHODIMP CMpegAudEnc::get_XingTag(DWORD *dwXingTag)$/;"	f	class:CMpegAudEnc
get_audio	lame/frontend/get_audio.c	/^get_audio(lame_t gfp, int buffer[2][1152])$/;"	f
get_audio.c	lame/frontend/get_audio.c	1;"	F
get_audio.h	lame/frontend/get_audio.h	1;"	F
get_audio16	lame/frontend/get_audio.c	/^get_audio16(lame_t gfp, short buffer[2][1152])$/;"	f
get_audio_common	lame/frontend/get_audio.c	/^get_audio_common(lame_t gfp, int buffer[2][1152], short buffer16[2][1152])$/;"	f	file:
get_audio_global_data	lame/frontend/get_audio.c	/^} get_audio_global_data;$/;"	t	file:
get_audio_global_data_struct	lame/frontend/get_audio.c	/^typedef struct get_audio_global_data_struct {$/;"	s	file:
get_cosine	lame/misc/ath.c	/^long double  get_cosine ( generator_t* const g )$/;"	f
get_done	Source/libnsgif.h	/^    BOOL get_done;$/;"	m	struct:gif_animation
get_framebits	lame/libmp3lame/quantize.c	/^get_framebits(lame_internal_flags * gfc, int frameBits[15])$/;"	f	file:
get_hip	lame/frontend/get_audio.c	/^get_hip(void)$/;"	f
get_klemm_noise	lame/libmp3lame/quantize.c	/^get_klemm_noise(const FLOAT * distort, const gr_info * const gi)$/;"	f	file:
get_lame_os_bitness	lame/libmp3lame/version.c	/^get_lame_os_bitness(void)$/;"	f
get_lame_short_version	lame/libmp3lame/version.c	/^get_lame_short_version(void)$/;"	f
get_lame_tag_encoder_short_version	lame/libmp3lame/version.c	/^get_lame_tag_encoder_short_version(void)$/;"	f
get_lame_url	lame/libmp3lame/version.c	/^get_lame_url(void)$/;"	f
get_lame_version	lame/libmp3lame/version.c	/^get_lame_version(void)$/;"	f
get_lame_version_numerical	lame/libmp3lame/version.c	/^get_lame_version_numerical(lame_version_t * lvp)$/;"	f
get_lame_very_short_version	lame/libmp3lame/version.c	/^get_lame_very_short_version(void)$/;"	f
get_leq_16_bits	lame/mpglib/common.c	/^get_leq_16_bits(PMPSTR mp, unsigned int number_of_bits)$/;"	f
get_leq_8_bits	lame/mpglib/common.c	/^get_leq_8_bits(PMPSTR mp, unsigned int number_of_bits)$/;"	f
get_line_len	Source/mongoose.c	/^static int get_line_len(const char *buf, int buf_len) {$/;"	f	file:
get_main_menu	lame/frontend/gtkanal.c	/^get_main_menu(GtkWidget * windows, GtkWidget ** menubar)$/;"	f	file:
get_max_frame_buffer_size_by_constraint	lame/libmp3lame/bitstream.c	/^get_max_frame_buffer_size_by_constraint(SessionConfig_t const * cfg, int constraint)$/;"	f
get_method	Source/SettingsQSV.cpp	/^static ratecontrol_t get_method(HWND hwnd)$/;"	f	file:
get_mime_type	Source/mongoose.c	/^static void get_mime_type(const struct mg_server *server, const char *path,$/;"	f	file:
get_month_index	Source/mongoose.c	/^static int get_month_index(const char *s) {$/;"	f	file:
get_mp3x_version	lame/frontend/gtkanal.c	/^get_mp3x_version(void)$/;"	f
get_option_index	Source/mongoose.c	/^static int get_option_index(const char *name) {$/;"	f	file:
get_psy_version	lame/libmp3lame/version.c	/^get_psy_version(void)$/;"	f
get_request_len	Source/mongoose.c	/^static int get_request_len(const char *s, size_t buf_len) {$/;"	f	file:
get_sine	lame/misc/ath.c	/^long double  get_sine ( generator_t* const g )$/;"	f
get_termcap_number	lame/frontend/console.c	/^get_termcap_number(char const* id, int* dest, int low, int high)$/;"	f	file:
get_termcap_string	lame/frontend/console.c	/^get_termcap_string(char const* id, char* dest, size_t n)$/;"	f	file:
get_var	Source/mongoose.c	/^static int get_var(const char *data, size_t data_len, const char *name,$/;"	f	file:
get_vbr_preset	lame/libmp3lame/presets.c	/^get_vbr_preset(int v)$/;"	f	file:
get_x264_log	Source/Encoder_x264.cpp	/^void get_x264_log(void *param, int i_level, const char *psz, va_list argptr)$/;"	f
getbits	lame/mpglib/common.c	/^getbits(PMPSTR mp, int number_of_bits)$/;"	f
getbits_fast	lame/mpglib/common.c	/^getbits_fast(PMPSTR mp, int number_of_bits)$/;"	f
getchar_keyboard	lame/misc/ath.c	/^int  getchar_keyboard ( keyboard_t* const k )$/;"	f
getframebits	lame/libmp3lame/bitstream.c	/^getframebits(const lame_internal_flags * gfc)$/;"	f
getoff	librtmp/handshake.h	/^typedef unsigned int (getoff)(uint8_t *buf, unsigned int len);$/;"	t
gfc	lame/frontend/gtkanal.c	/^lame_internal_flags *gfc;$/;"	v
gfc	lame/libmp3lame/vbrquantize.c	/^    lame_internal_flags *gfc;$/;"	m	struct:algo_s	file:
gfp	lame/ACM/ACMStream.h	/^	lame_global_flags * gfp;$/;"	m	class:ACMStream
gfp	lame/ACM/DecodeStream.h	/^	lame_global_flags * gfp;$/;"	m	class:DecodeStream
gfp	lame/frontend/gtkanal.c	/^static lame_global_flags *gfp;$/;"	v	file:
gfp_save	lame/Dll/BladeMP3EncDLL.c	/^static lame_global_flags*	gfp_save = NULL;$/;"	v	file:
gif	Source/BitmapImage.h	/^    gif_animation gif;$/;"	m	class:BitmapImage
gif_animation	Source/libnsgif.h	/^typedef struct gif_animation {$/;"	s
gif_animation	Source/libnsgif.h	/^} gif_animation;$/;"	t
gif_bitmap_callback_vt	Source/libnsgif.h	/^typedef struct gif_bitmap_callback_vt {$/;"	s
gif_bitmap_callback_vt	Source/libnsgif.h	/^} gif_bitmap_callback_vt;$/;"	t
gif_bitmap_cb_create	Source/libnsgif.h	/^typedef void* (*gif_bitmap_cb_create)(int width, int height);$/;"	t
gif_bitmap_cb_destroy	Source/libnsgif.h	/^typedef void (*gif_bitmap_cb_destroy)(void *bitmap);$/;"	t
gif_bitmap_cb_get_buffer	Source/libnsgif.h	/^typedef unsigned char* (*gif_bitmap_cb_get_buffer)(void *bitmap);$/;"	t
gif_bitmap_cb_modified	Source/libnsgif.h	/^typedef void (*gif_bitmap_cb_modified)(void *bitmap);$/;"	t
gif_bitmap_cb_set_opaque	Source/libnsgif.h	/^typedef void (*gif_bitmap_cb_set_opaque)(void *bitmap, BOOL opaque);$/;"	t
gif_bitmap_cb_test_opaque	Source/libnsgif.h	/^typedef BOOL (*gif_bitmap_cb_test_opaque)(void *bitmap);$/;"	t
gif_create	Source/libnsgif.c	/^void gif_create(gif_animation *gif, gif_bitmap_callback_vt *bitmap_callbacks) {$/;"	f
gif_data	Source/libnsgif.h	/^    unsigned char *gif_data;            \/**< pointer to GIF data *\/$/;"	m	struct:gif_animation
gif_decode_frame	Source/libnsgif.c	/^gif_result gif_decode_frame(gif_animation *gif, unsigned int frame) {$/;"	f
gif_finalise	Source/libnsgif.c	/^void gif_finalise(gif_animation *gif) {$/;"	f
gif_frame	Source/libnsgif.h	/^typedef struct gif_frame {$/;"	s
gif_frame	Source/libnsgif.h	/^} gif_frame;$/;"	t
gif_init_LZW	Source/libnsgif.c	/^void gif_init_LZW(gif_animation *gif) {$/;"	f
gif_initialise	Source/libnsgif.c	/^gif_result gif_initialise(gif_animation *gif, size_t size, unsigned char *data) {$/;"	f
gif_initialise_frame	Source/libnsgif.c	/^static gif_result gif_initialise_frame(gif_animation *gif) {$/;"	f	file:
gif_initialise_frame_extensions	Source/libnsgif.c	/^static gif_result gif_initialise_frame_extensions(gif_animation *gif, const int frame) {$/;"	f	file:
gif_initialise_sprite	Source/libnsgif.c	/^static gif_result gif_initialise_sprite(gif_animation *gif, unsigned int width, unsigned int height) {$/;"	f	file:
gif_interlaced_line	Source/libnsgif.c	/^static unsigned int gif_interlaced_line(int height, int y) {$/;"	f	file:
gif_next_LZW	Source/libnsgif.c	/^static BOOL gif_next_LZW(gif_animation *gif) {$/;"	f	file:
gif_next_code	Source/libnsgif.c	/^static int gif_next_code(gif_animation *gif, int code_size) {$/;"	f	file:
gif_result	Source/libnsgif.h	/^} gif_result;$/;"	t
gif_skip_frame_extensions	Source/libnsgif.c	/^static gif_result gif_skip_frame_extensions(gif_animation *gif) {$/;"	f	file:
giswapPresent	GraphicsCapture/GraphicsCaptureHook/DXGICapture.cpp	/^HookData giswapPresent;$/;"	v
giswapResizeBuffers	GraphicsCapture/GraphicsCaptureHook/DXGICapture.cpp	/^HookData giswapResizeBuffers;$/;"	v
glBindBuffer	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^GLBINDBUFFERPROC        glBindBuffer       = NULL;$/;"	v
glBindFramebuffer	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^GLBINDFRAMEBUFFERPROC      glBindFramebuffer      = NULL;$/;"	v
glBindTexture	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^GLBINDTEXTUREPROC       glBindTexture      = NULL;$/;"	v
glBlitFramebuffer	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^GLBLITFRAMEBUFFERPROC      glBlitFramebuffer      = NULL;$/;"	v
glBufferData	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^GLBUFFERDATAARBPROC     glBufferData       = NULL;$/;"	v
glDataMutexes	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^HANDLE                  glDataMutexes[NUM_BUFFERS];$/;"	v
glDeleteBuffers	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^GLDELETEBUFFERSARBPROC  glDeleteBuffers    = NULL;$/;"	v
glDeleteFramebuffers	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^GLDELETEFRAMEBUFFERSPROC   glDeleteFramebuffers   = NULL;$/;"	v
glDeleteTextures	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^GLDELETETEXTURESPROC    glDeleteTextures   = NULL;$/;"	v
glDrawBuffer	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^GLDRAWBUFFERPROC         glDrawBuffer           = NULL;$/;"	v
glFramebufferTexture2D	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^GLFRAMEBUFFERTEXTURE2DPROC glFramebufferTexture2D = NULL;$/;"	v
glGenBuffers	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^GLGENBUFFERSARBPROC     glGenBuffers       = NULL;$/;"	v
glGenFramebuffers	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^GLGENFRAMEBUFFERSPROC      glGenFramebuffers      = NULL;$/;"	v
glGenTextures	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^GLGENTEXTURESPROC       glGenTextures      = NULL;$/;"	v
glGetError	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^GLGETERRORPROC           glGetError             = NULL;$/;"	v
glGetIntegerv	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^GLGETINTEGERVPROC        glGetIntegerv          = NULL;$/;"	v
glHookDeleteContext	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^HookData                glHookDeleteContext;$/;"	v
glHookSwapBuffers	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^HookData                glHookSwapBuffers;$/;"	v
glHookSwapLayerBuffers	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^HookData                glHookSwapLayerBuffers;$/;"	v
glHookwglSwapBuffers	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^HookData                glHookwglSwapBuffers;$/;"	v
glLockedTextures	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^bool                    glLockedTextures[NUM_BUFFERS];$/;"	v
glMapBuffer	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^GLMAPBUFFERPROC         glMapBuffer        = NULL;$/;"	v
glMutex	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	/^CRITICAL_SECTION glMutex;$/;"	v
glReadBuffer	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^GLREADBUFFERPROC         glReadBuffer           = NULL;$/;"	v
glReadPixels	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^GLREADPIXELSPROC         glReadPixels           = NULL;$/;"	v
glUnmapBuffer	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^GLUNMAPBUFFERPROC       glUnmapBuffer      = NULL;$/;"	v
gl_dxDevice	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^HANDLE gl_dxDevice = NULL;$/;"	v
gl_fbo	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^static GLuint gl_fbo       = 0;$/;"	v	file:
gl_handle	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^HANDLE gl_handle = NULL;$/;"	v
gl_sharedtex	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^static GLuint gl_sharedtex = 0;$/;"	v	file:
glcaptureInfo	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^CaptureInfo             glcaptureInfo;$/;"	v
global	lame/frontend/get_audio.c	/^static get_audio_global_data global;$/;"	v	file:
globalOpacity	Source/TextOutputSource.cpp	/^    UINT        globalOpacity;$/;"	m	class:TextOutputSource	file:
globalSource	Source/GlobalSource.cpp	/^    ImageSource *globalSource;$/;"	m	class:GlobalSource	file:
globalSources	Source/OBS.h	/^    List<GlobalSourceInfo> globalSources;$/;"	m	class:OBS
globalSourcesImportConfig	Source/OBS.h	/^    XConfig                 globalSourcesImportConfig;$/;"	m	class:OBS
global_colour_table	Source/libnsgif.h	/^    unsigned int *global_colour_table;        \/**< global colour table *\/$/;"	m	struct:gif_animation
global_colours	Source/libnsgif.h	/^    BOOL global_colours;                \/**< whether the GIF has a global colour table *\/$/;"	m	struct:gif_animation
global_decoder	lame/frontend/parse.c	/^DecoderConfig global_decoder;$/;"	v
global_decoder_progress	lame/frontend/timestatus.c	/^} global_decoder_progress;$/;"	v	file:
global_encoder_progress	lame/frontend/timestatus.c	/^} global_encoder_progress;$/;"	v	file:
global_gain	lame/libmp3lame/l3side.h	/^    int     global_gain;$/;"	m
global_gain	lame/libmp3lame/quantize_pvt.h	/^    int     global_gain;$/;"	m	struct:calc_noise_data_t
global_gain	libfaac/coder.h	/^    int global_gain;$/;"	m
global_pred_flag	libfaac/coder.h	/^    int global_pred_flag;$/;"	m
global_raw_pcm	lame/frontend/parse.c	/^RawPCMConfig global_raw_pcm = $/;"	v
global_reader	lame/frontend/parse.c	/^ReaderConfig global_reader = { sf_unknown, 0, 0, 0 };$/;"	v
global_ui_config	lame/frontend/parse.c	/^UiConfig global_ui_config = {0,0,0,0};$/;"	v
global_writer	lame/frontend/parse.c	/^WriterConfig global_writer = { 0 };$/;"	v
gltextures	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^GLuint                  gltextures[NUM_BUFFERS] = ZERO_ARRAY;$/;"	v
glue3	minhook/src/pstdint.h	742;"	d
glue3_aux	minhook/src/pstdint.h	741;"	d
gmt_time_string	Source/mongoose.c	/^static void gmt_time_string(char *buf, size_t buf_len, time_t *t) {$/;"	f	file:
gopLength	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                        gopLength;                                   \/**< [in]: Specifies the number of pictures in one GOP. Low latency application client can set goplength to NVENC_INFINITE_GOPLENGTH so that keyframes are not inserted automatically. *\/$/;"	m	struct:_NV_ENC_CONFIG
gpk_bargraph_draw	lame/frontend/gpkplotting.c	/^gpk_bargraph_draw(GtkWidget * widget, \/* plot on this widged *\/$/;"	f
gpk_graph_draw	lame/frontend/gpkplotting.c	/^gpk_graph_draw(GtkWidget * widget, \/* plot on this widged *\/$/;"	f
gpk_plot_new	lame/frontend/gpkplotting.c	/^gpk_plot_new(int width, int height)$/;"	f
gpk_rectangle_draw	lame/frontend/gpkplotting.c	/^gpk_rectangle_draw(GtkWidget * widget, \/* plot on this widged *\/$/;"	f
gpk_redraw	lame/frontend/gpkplotting.c	/^gpk_redraw(GdkPixmap * pixmap, GtkWidget * pixmapbox)$/;"	f
gpkplotting.c	lame/frontend/gpkplotting.c	1;"	F
gpkplotting.h	lame/frontend/gpkplotting.h	1;"	F
gpsyInfo	libfaac/frame.h	/^    GlobalPsyInfo gpsyInfo;$/;"	m
gr	lame/mpglib/mpg123.h	/^        struct gr_info_s gr[2];$/;"	m	struct:III_sideinfo::<anonymous>
gr_info	lame/libmp3lame/l3side.h	/^} gr_info;$/;"	t
gr_info_s	lame/mpglib/mpg123.h	/^struct gr_info_s {$/;"	s
graduations	OBSApi/VolumeMeter.cpp	/^    float graduations[16];$/;"	m	struct:VolumeMeterData	file:
graph	DShowPlugin/CaptureFilter.h	/^    IFilterGraph *graph;$/;"	m	class:CaptureFilter
graph	DShowPlugin/DeviceSource.h	/^    IGraphBuilder           *graph;$/;"	m	class:DeviceSource
graphicsSystem	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        ::GraphicsSystem *graphicsSystem;$/;"	m	class:CLROBS::GSSampleFilter::GSAddressMode::GraphicsSystem
green	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    WORD                green[256];$/;"	m	struct:_D3DGAMMARAMP
grp_3tab	lame/mpglib/layer2.c	/^static unsigned char grp_3tab[32 * 3] = { 0, }; \/* used: 27 *\/$/;"	v	file:
grp_5tab	lame/mpglib/layer2.c	/^static unsigned char grp_5tab[128 * 3] = { 0, }; \/* used: 125 *\/$/;"	v	file:
grp_9tab	lame/mpglib/layer2.c	/^static unsigned char grp_9tab[1024 * 3] = { 0, }; \/* used: 729 *\/$/;"	v	file:
grp_table_select	lame/mpglib/layer2.c	/^grp_table_select(short d1, unsigned int idx)$/;"	f	file:
gs_bLogFile	lame/Dll/BladeMP3EncDLL.c	/^static BOOL					gs_bLogFile=FALSE;$/;"	v	file:
gs_hModule	lame/Dll/BladeMP3EncDLL.c	/^static HMODULE				gs_hModule=NULL;$/;"	v	file:
gtkanal.c	lame/frontend/gtkanal.c	1;"	F
gtkanal.h	lame/frontend/gtkanal.h	1;"	F
gtkcontrol	lame/frontend/gtkanal.c	/^gtkcontrol(lame_global_flags * gfp2, char *inPath)$/;"	f
gtkinfo	lame/frontend/gtkanal.c	/^} gtkinfo;$/;"	v
gtkinfostruct	lame/frontend/gtkanal.c	/^struct gtkinfostruct {$/;"	s	file:
gtkmakeframe	lame/frontend/gtkanal.c	/^gtkmakeframe(void)$/;"	f
guess_scalefac_x34	lame/libmp3lame/vbrquantize.c	/^guess_scalefac_x34(const FLOAT * xr, const FLOAT * xr34, FLOAT l3_xmin, unsigned int bw, uint8_t sf_min)$/;"	f	file:
guidToString	ObsNvenc/src/nvmain.cpp	/^String guidToString(const GUID &guid)$/;"	f
h	OBSApi/Utility/RAIIHelpers.h	/^    HANDLE h;$/;"	m	struct:ScopedLock
h	ObsNvenc/inc/nvmain.h	/^    HANDLE& h;$/;"	m	struct:OSMutexLocker
h	QSVHelper/WindowsStuff.h	/^    HANDLE h;$/;"	m	struct:safe_handle
h	lame/libmp3lame/i386/nasm.h	/^	times (1 & ge10(($$-%%here) & 15) & ~ge11(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,008h,90h,90h,90h,90h,90h,90h,90h,90h$/;"	v
h	lame/libmp3lame/i386/nasm.h	/^	times (1 & ge11(($$-%%here) & 15) & ~ge12(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,009h,90h,90h,90h,90h,90h,90h,90h,90h,90h$/;"	v
h	lame/libmp3lame/i386/nasm.h	/^	times (1 & ge12(($$-%%here) & 15) & ~ge13(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Ah,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h$/;"	v
h	lame/libmp3lame/i386/nasm.h	/^	times (1 & ge13(($$-%%here) & 15) & ~ge14(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Bh,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h$/;"	v
h	lame/libmp3lame/i386/nasm.h	/^	times (1 & ge14(($$-%%here) & 15) & ~ge15(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Ch,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h$/;"	v
h	lame/libmp3lame/i386/nasm.h	/^	times (1 & ge15(($$-%%here) & 15) & ~ge16(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Dh,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h$/;"	v
h	lame/libmp3lame/i386/nasm.h	/^	times (1 & ge3(($$-%%here) & 15)  & ~ge4(($$-%%here) & 15)  & ~ge%1(($$-%%here) & 15)) DB 08Dh,004h,020h$/;"	v
h	lame/libmp3lame/i386/nasm.h	/^	times (1 & ge4(($$-%%here) & 15)  & ~ge5(($$-%%here) & 15)  & ~ge%1(($$-%%here) & 15)) DB 08Dh,044h,020h,000h$/;"	v
h	lame/libmp3lame/i386/nasm.h	/^	times (1 & ge5(($$-%%here) & 15)  & ~ge6(($$-%%here) & 15)  & ~ge%1(($$-%%here) & 15)) DB 08Dh,044h,020h,000h,090h$/;"	v
h	lame/libmp3lame/i386/nasm.h	/^	times (1 & ge6(($$-%%here) & 15)  & ~ge7(($$-%%here) & 15)  & ~ge%1(($$-%%here) & 15)) DB 08Dh,080h,0,0,0,0$/;"	v
h	lame/libmp3lame/i386/nasm.h	/^	times (1 & ge7(($$-%%here) & 15)  & ~ge8(($$-%%here) & 15)  & ~ge%1(($$-%%here) & 15)) DB 08Dh,004h,005h,0,0,0,0$/;"	v
h	lame/libmp3lame/i386/nasm.h	/^	times (1 & ge8(($$-%%here) & 15)  & ~ge9(($$-%%here) & 15)  & ~ge%1(($$-%%here) & 15)) DB 08Dh,004h,005h,0,0,0,0,90h$/;"	v
h	lame/libmp3lame/i386/nasm.h	/^	times (1 & ge9(($$-%%here) & 15)  & ~ge10(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,007h,90h,90h,90h,90h,90h,90h,90h$/;"	v
h264Config	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_CONFIG_H264      h264Config;                  \/**< [in]: Specifies the H.264-specific encoder configuration *\/$/;"	m	union:_NV_ENC_CODEC_CONFIG
h264PicParams	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_PIC_PARAMS_H264 h264PicParams;                \/**< [in]: H264 encode picture params. *\/$/;"	m	union:_NV_ENC_CODEC_PIC_PARAMS
h264VUIParameters	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_CONFIG_H264_VUI_PARAMETERS   h264VUIParameters;          \/**< [in]: Specifies the H264 video usability info pamameters *\/$/;"	m	struct:_NV_ENC_CONFIG_H264
hAllocationMutex	OBSApi/Utility/FastAlloc.h	/^    HANDLE hAllocationMutex;$/;"	m	class:FastAlloc
hAudioMutex	DShowPlugin/DeviceSource.h	/^    HANDLE hAudioMutex;$/;"	m	class:DeviceAudioSource
hAuxAudioMutex	Source/OBS.h	/^    HANDLE hAuxAudioMutex;$/;"	m	class:OBS
hBitmap	DShowPlugin/DShowPlugin.cpp	/^    HBITMAP hBitmap;$/;"	m	struct:ColorSelectionData	file:
hBitmap	Source/BitmapImageSource.cpp	/^    HBITMAP hBitmap;$/;"	m	struct:ColorSelectionData	file:
hBitmap	Source/DesktopImageSource.cpp	/^    HBITMAP hBitmap;$/;"	m	struct:ColorSelectionData	file:
hBlack	OBSApi/VolumeMeter.cpp	/^    HBRUSH  hRed, hGreen,hGreenDark, hBlack, hGray, hLightGray;$/;"	m	struct:VolumeMeterData	file:
hBufferEvent	Source/RTMPPublisher.h	/^    HANDLE hBufferEvent;$/;"	m	class:RTMPPublisher
hBufferSpaceAvailableEvent	Source/RTMPPublisher.h	/^    HANDLE hBufferSpaceAvailableEvent;$/;"	m	class:RTMPPublisher
hCaptureDC	Source/OBS.h	/^    HDC                     hCaptureDC;$/;"	m	class:OBS
hCaptureThread	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	/^HANDLE hCaptureThread = NULL;$/;"	v
hConnectionThread	Source/RTMPPublisher.h	/^    HANDLE hConnectionThread;$/;"	m	class:RTMPPublisher
hConvertThreads	DShowPlugin/DeviceSource.h	/^    HANDLE          *hConvertThreads;$/;"	m	class:DeviceSource
hCopyEvent	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^HANDLE                  hCopyEvent = NULL;$/;"	v
hCopyThread	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^HANDLE                  hCopyThread = NULL;$/;"	v
hCurrentCursor	GraphicsCapture/GraphicsCaptureSource.h	/^    HCURSOR hCurrentCursor;$/;"	m	class:GraphicsCaptureSource
hCurrentCursor	Source/DesktopImageSource.cpp	/^    HCURSOR  hCurrentCursor;$/;"	m	class:DesktopImageSource	file:
hD3D9Dll	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^HMODULE                 hD3D9Dll = NULL;$/;"	v
hDataBufferMutex	Source/RTMPPublisher.h	/^    HANDLE hDataBufferMutex;$/;"	m	class:RTMPPublisher
hDataMutex	Source/RTMPPublisher.h	/^    HANDLE hDataMutex;$/;"	m	class:RTMPPublisher
hDebugMutex	OBSApi/Utility/DebugAlloc.h	/^    HANDLE hDebugMutex;$/;"	m	class:DebugAlloc
hDeviceWindow	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    HWND                hDeviceWindow;$/;"	m	struct:_D3DPRESENT_PARAMETERS_
hDirectory	OBSApi/Utility/XT_Windows.cpp	/^    HANDLE hDirectory;$/;"	m	struct:OSFileChangeData	file:
hEncodeThread	Source/OBS.h	/^    HANDLE  hEncodeThread;$/;"	m	class:OBS
hFile	OBSApi/Utility/XFile.h	/^    HANDLE hFile;$/;"	m	class:XFile
hFile	lame/ACM/ADbg/ADbg.h	/^	HANDLE hFile;$/;"	m	class:ADbg
hFileMap	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	/^HANDLE hFileMap = NULL;$/;"	v
hFileMap	GraphicsCapture/MemoryCapture.h	/^    HANDLE hFileMap;$/;"	m	class:MemoryCapture
hFileMap	GraphicsCapture/SharedTexCapture.h	/^    HANDLE hFileMap;$/;"	m	class:SharedTexCapture
hFocusWindow	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    HWND            hFocusWindow;$/;"	m	struct:_D3DDEVICE_CREATION_PARAMETERS
hFont	OBSApi/HotkeyControlEx.cpp	/^    HFONT hFont;$/;"	m	struct:HotkeyControlExData	file:
hFont	Source/OBS.h	/^    HFONT hFont;$/;"	m	struct:FontInfo
hGray	OBSApi/VolumeMeter.cpp	/^    HBRUSH  hRed, hGreen,hGreenDark, hBlack, hGray, hLightGray;$/;"	m	struct:VolumeMeterData	file:
hGreen	OBSApi/VolumeMeter.cpp	/^    HBRUSH  hRed, hGreen,hGreenDark, hBlack, hGray, hLightGray;$/;"	m	struct:VolumeMeterData	file:
hGreenDark	OBSApi/VolumeMeter.cpp	/^    HBRUSH  hRed, hGreen,hGreenDark, hBlack, hGray, hLightGray;$/;"	m	struct:VolumeMeterData	file:
hHotkeyMutex	Source/OBS.h	/^    HANDLE hHotkeyMutex;$/;"	m	class:OBS
hHotkeyThread	Source/OBS.h	/^    HANDLE hHotkeyThread;$/;"	m	class:OBS
hIcon	Source/OBS.h	/^    HICON hIcon;$/;"	m	struct:IconInfo
hInfoFileMap	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	/^HANDLE hInfoFileMap = NULL;$/;"	v
hInfoMutex	Source/OBS.h	/^    HANDLE hInfoMutex;$/;"	m	class:OBS
hInst	Source/OBS.h	/^    HINSTANCE hInst;$/;"	m	struct:IconInfo
hInstance	PSVPlugin/psvplugin.cpp	/^HINSTANCE   hInstance;$/;"	v
hLightGray	OBSApi/VolumeMeter.cpp	/^    HBRUSH  hRed, hGreen,hGreenDark, hBlack, hGray, hLightGray;$/;"	m	struct:VolumeMeterData	file:
hMemoryMutex	GraphicsCapture/MemoryCapture.h	/^    HANDLE hMemoryMutex;$/;"	m	class:MemoryCapture
hModule	Source/OBS.h	/^    HMODULE hModule;$/;"	m	struct:PluginInfo
hModule	libmfx/include/mfx_dispatcher.h	/^    mfxModuleHandle hModule;$/;"	m	struct:MFX_DISP_HANDLE
hMonitor	Source/OBS.h	/^    HMONITOR hMonitor;$/;"	m	struct:MonitorInfo
hMutex	GraphicsCapture/MemoryCapture.h	/^    HANDLE hMutex;$/;"	m	class:MemoryCapture
hOBSIsAlive	GraphicsCapture/GraphicsCaptureSource.h	/^    HANDLE hOBSIsAlive;$/;"	m	class:GraphicsCaptureSource
hOBSMutex	Source/Main.cpp	/^HANDLE hOBSMutex = NULL;$/;"	v
hPipe	Source/mongoose.c	/^  HANDLE hPipe;$/;"	m	struct:threadparam	file:
hProfilerMutex	OBSApi/Utility/Profiler.cpp	/^HANDLE hProfilerMutex = NULL;$/;"	v
hProvider	Source/Updater.cpp	/^HCRYPTPROV hProvider;$/;"	v
hRTMPMutex	Source/RTMPPublisher.h	/^    HANDLE hRTMPMutex;$/;"	m	class:RTMPPublisher
hRed	OBSApi/VolumeMeter.cpp	/^    HBRUSH  hRed, hGreen,hGreenDark, hBlack, hGray, hLightGray;$/;"	m	struct:VolumeMeterData	file:
hSampleMutex	DShowPlugin/DeviceSource.h	/^    HANDLE          hSampleMutex;$/;"	m	class:DeviceSource
hSampleThread	DShowPlugin/DeviceSource.h	/^    HANDLE          hSampleThread;$/;"	m	class:DeviceSource
hSceneMutex	Source/OBS.h	/^    HANDLE  hSceneMutex;$/;"	m	class:OBS
hSendBacklogEvent	Source/RTMPPublisher.h	/^    HANDLE hSendBacklogEvent;$/;"	m	class:RTMPPublisher
hSendLoopExit	Source/RTMPPublisher.h	/^    HANDLE hSendLoopExit;$/;"	m	class:RTMPPublisher
hSendSempahore	Source/RTMPPublisher.h	/^    HANDLE hSendSempahore;$/;"	m	class:RTMPPublisher
hSendThread	Source/RTMPPublisher.h	/^    HANDLE hSendThread;$/;"	m	class:RTMPPublisher
hSignalComplete	DShowPlugin/DeviceSource.h	/^    HANDLE hSignalConvert, hSignalComplete;$/;"	m	struct:ConvertData
hSignalComplete	Source/OBSVideoCapture.cpp	/^    HANDLE hSignalConvert, hSignalComplete;$/;"	m	struct:Convert444Data	file:
hSignalConvert	DShowPlugin/DeviceSource.h	/^    HANDLE hSignalConvert, hSignalComplete;$/;"	m	struct:ConvertData
hSignalConvert	Source/OBSVideoCapture.cpp	/^    HANDLE hSignalConvert, hSignalComplete;$/;"	m	struct:Convert444Data	file:
hSignalEnd	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	/^HANDLE hSignalRestart=NULL, hSignalEnd=NULL;$/;"	v
hSignalEnd	GraphicsCapture/GraphicsCaptureSource.h	/^    HANDLE hSignalRestart, hSignalEnd;$/;"	m	class:GraphicsCaptureSource
hSignalExit	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	/^HANDLE hSignalReady=NULL, hSignalExit=NULL;$/;"	v
hSignalExit	GraphicsCapture/GraphicsCaptureSource.h	/^    HANDLE hSignalReady, hSignalExit;$/;"	m	class:GraphicsCaptureSource
hSignalReady	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	/^HANDLE hSignalReady=NULL, hSignalExit=NULL;$/;"	v
hSignalReady	GraphicsCapture/GraphicsCaptureSource.h	/^    HANDLE hSignalReady, hSignalExit;$/;"	m	class:GraphicsCaptureSource
hSignalRestart	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	/^HANDLE hSignalRestart=NULL, hSignalEnd=NULL;$/;"	v
hSignalRestart	GraphicsCapture/GraphicsCaptureSource.h	/^    HANDLE hSignalRestart, hSignalEnd;$/;"	m	class:GraphicsCaptureSource
hSocketLoopExit	Source/RTMPPublisher.h	/^    HANDLE hSocketLoopExit;$/;"	m	class:RTMPPublisher
hSocketThread	Source/RTMPPublisher.h	/^    HANDLE hSocketThread;$/;"	m	class:RTMPPublisher
hSoundDataMutex	Source/OBS.h	/^    HANDLE  hSoundThread, hSoundDataMutex;\/\/, hRequestAudioEvent;$/;"	m	class:OBS
hSoundThread	Source/OBS.h	/^    HANDLE  hSoundThread, hSoundDataMutex;\/\/, hRequestAudioEvent;$/;"	m	class:OBS
hStartupShutdownMutex	Source/OBS.h	/^    HANDLE hStartupShutdownMutex;$/;"	m	class:OBS
hStopSampleEvent	DShowPlugin/DeviceSource.h	/^    HANDLE          hStopSampleEvent;$/;"	m	class:DeviceSource
hTargetProcess	GraphicsCapture/GraphicsCaptureSource.h	/^    HANDLE hTargetProcess;$/;"	m	class:GraphicsCaptureSource
hTimer	Source/BandwidthAnalysis.cpp	/^    HANDLE hTimer;$/;"	m	class:BandwidthAnalyzer	file:
hVideoEvent	Source/OBS.h	/^    HANDLE hVideoEvent;$/;"	m	class:OBS
hVideoThread	Source/OBS.h	/^    HANDLE  hVideoThread;$/;"	m	class:OBS
hViewProj	OBSApi/GraphicsSystem.h	/^    HANDLE hViewProj;$/;"	m	class:Shader
hWriteEvent	Source/RTMPPublisher.h	/^    HANDLE hWriteEvent;$/;"	m	class:RTMPPublisher
h_id	lame/libmp3lame/VbrTag.h	/^    int     h_id;            \/* from MPEG header, 0=MPEG2, 1=MPEG1 *\/$/;"	m
h_ptr	lame/libmp3lame/util.h	/^        int     h_ptr;$/;"	m
handle	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/SharedTexture.cs	/^        private IntPtr handle;$/;"	f	class:Browser.SharedTexture	file:
handle	Source/mongoose.c	/^  HANDLE   handle;$/;"	m	struct:DIR	file:
handleBufferConversion	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	/^void handleBufferConversion(LPDWORD dst, LPBYTE src, LONG pitch)$/;"	f
handle_	minhook/src/thread.cpp	/^		HANDLE handle_;$/;"	m	class:MinHook::<anonymous>::ScopedHandle	file:
handle_delete	Source/mongoose.c	/^static void handle_delete(struct connection *conn, const char *path) {$/;"	f	file:
handle_mkcol	Source/mongoose.c	/^static void handle_mkcol(struct connection *conn, const char *path) {$/;"	f	file:
handle_propfind	Source/mongoose.c	/^static void handle_propfind(struct connection *conn, const char *path,$/;"	f	file:
handle_put	Source/mongoose.c	/^static void handle_put(struct connection *conn, const char *path) {$/;"	f	file:
handle_ssi_request	Source/mongoose.c	/^static void handle_ssi_request(struct connection *conn, const char *path) {$/;"	f	file:
handler	Source/mongoose.h	/^  void (*handler)(struct mg_connection *);$/;"	m	struct:mg_expansion
handshake.h	librtmp/handshake.h	1;"	F
hannWindow	libfaac/psych.h	/^	double *hannWindow;$/;"	m
hannWindowS	libfaac/psych.h	/^	double *hannWindowS;$/;"	m
has	lame/ACM/ddk/msacmdrv.h	/^    HACMSTREAM          has;$/;"	m	struct:tACMDRVSTREAMINSTANCE
hasBrowser	CLRBrowserSourcePlugin/Plugin/BrowserSource.cs	/^        private bool hasBrowser;$/;"	f	class:CLRBrowserSourcePlugin.BrowserSource	file:
hasDefaultsMethod	CLRHostPlugin/CLRHostPlugin/CLRSettingsPane.h	/^    mscorlib::_MethodInfo *hasDefaultsMethod;$/;"	m	class:CLRSettingsPane
hasNVENC	Source/Settings.h	/^    bool hasQSV, hasNVENC;$/;"	m	class:SettingsEncoding
hasQSV	Source/Settings.h	/^    bool hasQSV, hasNVENC;$/;"	m	class:SettingsEncoding
hasUcs2ByteOrderMarker	lame/libmp3lame/id3tag.c	/^hasUcs2ByteOrderMarker(unsigned short bom)$/;"	f	file:
has_3DNow	lame/libmp3lame/util.c	/^has_3DNow(void)$/;"	f
has_MMX	lame/libmp3lame/util.c	/^has_MMX(void)$/;"	f
has_SSE	lame/libmp3lame/util.c	/^has_SSE(void)$/;"	f
has_SSE2	lame/libmp3lame/util.c	/^has_SSE2(void)$/;"	f
has_ext	lame/misc/abx.c	/^int  has_ext ( const char* name, const char* ext )$/;"	f
hashswf.c	librtmp/hashswf.c	1;"	F
havege_random	librtmp/rtmp_sys.h	86;"	d
hbmpCompatible	Source/DesktopImageSource.cpp	/^    HBITMAP  hbmpCompatible, hbmpOld;$/;"	m	class:DesktopImageSource	file:
hbmpOld	Source/DesktopImageSource.cpp	/^    HBITMAP  hbmpCompatible, hbmpOld;$/;"	m	class:DesktopImageSource	file:
hdcAcquiredDC	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^HDC                     hdcAcquiredDC = NULL;$/;"	v
hdcCompatible	Source/DesktopImageSource.cpp	/^    HDC      hdcCompatible;$/;"	m	class:DesktopImageSource	file:
hdcDesktop	DShowPlugin/DShowPlugin.cpp	/^    HDC hdcDesktop;$/;"	m	struct:ColorSelectionData	file:
hdcDesktop	Source/BitmapImageSource.cpp	/^    HDC hdcDesktop;$/;"	m	struct:ColorSelectionData	file:
hdcDesktop	Source/DesktopImageSource.cpp	/^    HDC hdcDesktop;$/;"	m	struct:ColorSelectionData	file:
hdcDestination	DShowPlugin/DShowPlugin.cpp	/^    HDC hdcDestination;$/;"	m	struct:ColorSelectionData	file:
hdcDestination	Source/BitmapImageSource.cpp	/^    HDC hdcDestination;$/;"	m	struct:ColorSelectionData	file:
hdcDestination	Source/DesktopImageSource.cpp	/^    HDC hdcDestination;$/;"	m	struct:ColorSelectionData	file:
hde32.c	minhook/src/HDE32/hde32.c	1;"	F
hde32.h	minhook/src/HDE32/hde32.h	1;"	F
hde32_disasm	minhook/src/HDE32/hde32.c	/^unsigned int hde32_disasm(const void *code, hde32s *hs)$/;"	f
hde32_table	minhook/src/HDE32/table32.h	/^unsigned char hde32_table[] = {$/;"	v
hde32s	minhook/src/HDE32/hde32.h	/^} hde32s;$/;"	t
hde64.c	minhook/src/HDE64/src/hde64.c	1;"	F
hde64.h	minhook/src/HDE64/include/hde64.h	1;"	F
hde64_disasm	minhook/src/HDE64/src/hde64.c	/^unsigned int hde64_disasm(const void *code, hde64s *hs)$/;"	f
hde64_table	minhook/src/HDE64/src/table64.h	/^unsigned char hde64_table[] = {$/;"	v
hde64s	minhook/src/HDE64/include/hde64.h	/^} hde64s;$/;"	t
hde_disasm	minhook/src/trampoline.cpp	/^	inline unsigned int hde_disasm(const void* code, hde_t* hs) { return hde64_disasm(code, hs); }$/;"	f	namespace:MinHook::<anonymous>
hde_t	minhook/src/trampoline.cpp	/^	typedef hde64s hde_t;$/;"	t	namespace:MinHook::<anonymous>	file:
hdmiColorRange	DShowPlugin/IVideoCaptureFilter.h	/^    VIDEO_CAPTURE_FILTER_COLOR_RANGE     hdmiColorRange;                    \/\/!< HDMI color range$/;"	m	struct:_VIDEO_CAPTURE_FILTER_SETTINGS
head	lame/mpglib/mpglib.h	/^    struct buf *head, *tail; \/* buffer linked list pointers, tail points to oldest buffer *\/$/;"	m	struct:mpstr_tag
head_check	lame/mpglib/common.c	/^head_check(unsigned long head, int check_layer)$/;"	f
header	Source/Encoder_AAC.cpp	/^    List<BYTE>  header;$/;"	m	class:AACEncoder	file:
header	Source/Encoder_MP3.cpp	/^    List<BYTE> header;$/;"	m	class:MP3Encoder	file:
header	lame/libmp3lame/util.h	/^        } header[MAX_HEADER_BUF];$/;"	m
header	lame/mpglib/mpglib.h	/^    unsigned long header;$/;"	m	struct:mpstr_tag
headerPacket	ObsNvenc/inc/NVENCEncoder.h	/^    List<BYTE> encodeData, headerPacket, seiData;$/;"	m	class:NVENCEncoder
header_change	lame/mpglib/mpg123.h	/^    int     header_change;$/;"	m	struct:frame
header_parsed	lame/include/lame.h	/^  int header_parsed;   \/* 1 if header was parsed and following data was$/;"	m
header_parsed	lame/mpglib/mpglib.h	/^    int     header_parsed;   \/* 1 = header of current frame has been parsed *\/$/;"	m	struct:mpstr_tag
headerbox	lame/frontend/gtkanal.c	/^GtkWidget *headerbox;        \/* mpg123 header info shown here *\/$/;"	v
headersize	lame/libmp3lame/VbrTag.h	/^    int     headersize;      \/* size of VBR header, in bytes *\/$/;"	m
height	DShowPlugin/DeviceSource.h	/^    UINT   width, height;$/;"	m	struct:ConvertData
height	GraphicsCapture/MemoryCapture.h	/^    UINT height;$/;"	m	class:MemoryCapture
height	OBSApi/GraphicsSystem.h	/^    int width, height;$/;"	m	struct:TextureInfo
height	ObsNvenc/inc/NVENCEncoder.h	/^    int height;$/;"	m	class:NVENCEncoder
height	ObsNvenc/inc/NVENCEncoder.h	/^    int height;$/;"	m	struct:NVENCEncoderSurface
height	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                    height;                         \/**< [in]: Input buffer Height. *\/$/;"	m	struct:_NV_ENC_REGISTER_RESOURCE
height	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                  height;                  \/**< [in]: Input buffer width *\/$/;"	m	struct:_NV_ENC_CREATE_INPUT_BUFFER
height	QSVHelper/IPCStructs.h	/^    int32_t fps, keyint, bframes, width, height, max_bitrate, buffer_size;$/;"	m	struct:init_request
height	Source/D3D10System.h	/^    UINT width, height;$/;"	m	class:D3D10Texture
height	Source/DesktopImageSource.cpp	/^    int      width, height;$/;"	m	class:DesktopImageSource	file:
height	Source/Encoder_QSV.cpp	/^    UINT width, height;$/;"	m	class:QSVEncoder	file:
height	Source/Encoder_x264.cpp	/^    UINT width, height;$/;"	m	class:X264Encoder	file:
height	Source/MP4FileStream.cpp	/^    UINT width = 0, height = 0;$/;"	m	class:MP4FileStream	file:
height	Source/OBSVideoCapture.cpp	/^    int width, height, inPitch, outPitch, startY, endY;$/;"	m	struct:Convert444Data	file:
height	Source/RTMPStuff.h	/^SAVC(height);$/;"	v
height	Source/libnsgif.h	/^    unsigned int height;                \/**< heigth of GIF (may increase during decoding) *\/$/;"	m	struct:gif_animation
heldTime	NoiseGate/NoiseGate.h	/^    float   heldTime; \/\/ The amount of time we've held the gate open after it we hit the close threshold$/;"	m	class:NoiseGateFilter
help	lame/doc/html/detailed.html	/^<a name="help"><span class="hilight">--help<\/span><\/a> Print the command line help.$/;"	a
help_developer_switches	lame/frontend/parse.c	/^help_developer_switches(FILE * const fp)$/;"	f	file:
help_id3tag	lame/frontend/parse.c	/^help_id3tag(FILE * const fp)$/;"	f	file:
helper_killed	Source/Encoder_QSV.cpp	/^    bool helper_killed = false;$/;"	m	class:QSVEncoder	file:
here	lame/ACM/Makefile	/^	here=`$(am__cd) $(top_builddir) && pwd` \\$/;"	m
here	lame/ACM/Makefile	/^	here=`pwd`; \\$/;"	m
here	lame/Makefile	/^	here=`$(am__cd) $(top_builddir) && pwd` \\$/;"	m
here	lame/Makefile	/^	here=`pwd`; \\$/;"	m
here	lame/doc/Makefile	/^	here=`$(am__cd) $(top_builddir) && pwd` \\$/;"	m
here	lame/doc/Makefile	/^	here=`pwd`; \\$/;"	m
here	lame/frontend/Makefile	/^	here=`$(am__cd) $(top_builddir) && pwd` \\$/;"	m
here	lame/frontend/Makefile	/^	here=`pwd`; \\$/;"	m
here	lame/include/Makefile	/^	here=`$(am__cd) $(top_builddir) && pwd` \\$/;"	m
here	lame/include/Makefile	/^	here=`pwd`; \\$/;"	m
here	lame/libmp3lame/Makefile	/^	here=`$(am__cd) $(top_builddir) && pwd` \\$/;"	m
here	lame/libmp3lame/Makefile	/^	here=`pwd`; \\$/;"	m
here	lame/libmp3lame/i386/Makefile	/^	here=`$(am__cd) $(top_builddir) && pwd` \\$/;"	m
here	lame/libmp3lame/i386/Makefile	/^	here=`pwd`; \\$/;"	m
here	lame/libmp3lame/vector/Makefile	/^	here=`$(am__cd) $(top_builddir) && pwd` \\$/;"	m
here	lame/libmp3lame/vector/Makefile	/^	here=`pwd`; \\$/;"	m
here	lame/macosx/Makefile	/^	here=`$(am__cd) $(top_builddir) && pwd` \\$/;"	m
here	lame/macosx/Makefile	/^	here=`pwd`; \\$/;"	m
here	lame/misc/Makefile	/^	here=`$(am__cd) $(top_builddir) && pwd` \\$/;"	m
here	lame/misc/Makefile	/^	here=`pwd`; \\$/;"	m
here	lame/mpglib/Makefile	/^	here=`$(am__cd) $(top_builddir) && pwd` \\$/;"	m
here	lame/mpglib/Makefile	/^	here=`pwd`; \\$/;"	m
hexdig	librtmp/log.c	/^static const char hexdig[] = "0123456789abcdef";$/;"	v	file:
hexdump	Source/mongoose.c	/^static void hexdump(struct ns_connection *nc, const char *path,$/;"	f	file:
hexdump_file	Source/mongoose.c	/^  const char *hexdump_file;         \/\/ Debug hexdump file path$/;"	m	struct:ns_mgr	file:
hexenc	librtmp/rtmp.c	/^static void hexenc(unsigned char *inbuf, int len, char *dst)$/;"	f	file:
hi	librtmp/md5.h	/^	MD5_u32plus lo, hi;$/;"	m
hiconMute	OBSApi/VolumeControl.cpp	/^    HICON hiconPlay, hiconMute;$/;"	m	struct:VolumeControlData	file:
hiconPlay	OBSApi/VolumeControl.cpp	/^    HICON hiconPlay, hiconMute;$/;"	m	struct:VolumeControlData	file:
hierarchicalBFrames	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t hierarchicalBFrames       :1;                          \/**< [in]: Set to 1 to enable hierarchical BFrames *\/$/;"	m	struct:_NV_ENC_CONFIG_H264
hierarchicalPFrames	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t hierarchicalPFrames       :1;                          \/**< [in]: Set to 1 to enable hierarchical PFrames *\/$/;"	m	struct:_NV_ENC_CONFIG_H264
highVal	OBSApi/Utility/XMath.h	/^    struct {DWORD lowUVal; DWORD highVal;};$/;"	m	struct:XLARGE_UINT::<anonymous>
highVal	OBSApi/Utility/XMath.h	/^    struct {DWORD lowVal; LONG highVal;};$/;"	m	struct:XLARGE_INT::<anonymous>
high_qual_coeffs.h	libsamplerate/high_qual_coeffs.h	1;"	F
highestBytes	Source/BandwidthAnalysis.cpp	/^    DWORD highestBytes;$/;"	m	class:BandwidthAnalyzer	file:
highpass	lame/doc/html/detailed.html	/^<a name="highpass"><span class="hilight">--highpass number<\/span><\/a> Use a highpass filter when encoding$/;"	a
highpass-width	lame/doc/html/detailed.html	/^<a name="highpass-width"><span class="hilight">--highpass-width width<\/span><\/a> Set the width of the decaying curve.$/;"	a
highpass1	lame/libmp3lame/util.h	/^        FLOAT   highpass1, highpass2; \/* normalized frequency bounds of passband *\/$/;"	m
highpass2	lame/libmp3lame/util.h	/^        FLOAT   highpass1, highpass2; \/* normalized frequency bounds of passband *\/$/;"	m
highpassfreq	lame/libmp3lame/lame_global_flags.h	/^    int     highpassfreq;    \/* freq in Hz. 0=lame choses.$/;"	m	struct:lame_global_struct
highpassfreq	lame/libmp3lame/util.h	/^        int     highpassfreq;$/;"	m
highpasswidth	lame/libmp3lame/lame_global_flags.h	/^    int     highpasswidth;   \/* freq width of filter, in Hz$/;"	m	struct:lame_global_struct
hinstDLL	CLRHostPlugin/CLRHostPlugin/CLRHostPlugin.cpp	/^HINSTANCE CLRHostPlugin::hinstDLL = NULL;$/;"	m	class:CLRHostPlugin	file:
hinstDLL	CLRHostPlugin/CLRHostPlugin/CLRHostPlugin.h	/^    static HINSTANCE hinstDLL;$/;"	m	class:CLRHostPlugin
hinstDLL	NoiseGate/NoiseGate.cpp	/^HINSTANCE NoiseGate::hinstDLL = NULL;$/;"	m	class:NoiseGate	file:
hinstDLL	NoiseGate/NoiseGate.h	/^    static HINSTANCE    hinstDLL;$/;"	m	class:NoiseGate
hinstDll	scenesw/SceneSwitcher.h	/^    HINSTANCE hinstDll;$/;"	m	class:SceneSwitcher
hinstMain	DShowPlugin/DShowPlugin.cpp	/^HINSTANCE hinstMain = NULL;$/;"	v
hinstMain	GraphicsCapture/GraphicsCapture.cpp	/^HINSTANCE hinstMain = NULL;$/;"	v
hinstMain	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	/^HINSTANCE hinstMain = NULL;$/;"	v
hinstMain	Source/Main.cpp	/^HINSTANCE   hinstMain       = NULL;$/;"	v
hinstMain	scenesw/scenesw.cpp	/^HINSTANCE hinstMain = NULL;$/;"	v
hip	lame/frontend/get_audio.c	/^    hip_t   hip;$/;"	m	struct:get_audio_global_data_struct	file:
hip	lame/frontend/gtkanal.c	/^hip_t hip;$/;"	v
hip	lame/libmp3lame/util.h	/^        hip_t hip;$/;"	m	struct:lame_internal_flags
hip_decode	lame/libmp3lame/mpglib_interface.c	/^hip_decode(hip_t hip, unsigned char *buffer, size_t len, short pcm_l[], short pcm_r[])$/;"	f
hip_decode1	lame/libmp3lame/mpglib_interface.c	/^hip_decode1(hip_t hip, unsigned char *buffer, size_t len, short pcm_l[], short pcm_r[])$/;"	f
hip_decode1_headers	lame/libmp3lame/mpglib_interface.c	/^hip_decode1_headers(hip_t hip, unsigned char *buffer,$/;"	f
hip_decode1_headersB	lame/libmp3lame/mpglib_interface.c	/^hip_decode1_headersB(hip_t hip, unsigned char *buffer,$/;"	f
hip_decode1_unclipped	lame/libmp3lame/mpglib_interface.c	/^hip_decode1_unclipped(hip_t hip, unsigned char *buffer, size_t len, sample_t pcm_l[], sample_t pcm_r[])$/;"	f
hip_decode_exit	lame/libmp3lame/mpglib_interface.c	/^int hip_decode_exit(hip_t hip)$/;"	f
hip_decode_headers	lame/libmp3lame/mpglib_interface.c	/^hip_decode_headers(hip_t hip, unsigned char *buffer,$/;"	f
hip_decode_init	lame/libmp3lame/mpglib_interface.c	/^hip_t hip_decode_init(void)$/;"	f
hip_global_flags	lame/include/lame.h	/^typedef struct hip_global_struct hip_global_flags;$/;"	t
hip_global_struct	lame/libmp3lame/mpglib_interface.c	32;"	d	file:
hip_init_tables_layer1	lame/mpglib/layer1.c	/^hip_init_tables_layer1(void)$/;"	f
hip_init_tables_layer2	lame/mpglib/layer2.c	/^hip_init_tables_layer2(void)$/;"	f
hip_init_tables_layer3	lame/mpglib/layer3.c	/^hip_init_tables_layer3(void)$/;"	f
hip_set_debugf	lame/libmp3lame/mpglib_interface.c	/^void hip_set_debugf(hip_t hip, lame_report_function func)$/;"	f
hip_set_errorf	lame/libmp3lame/mpglib_interface.c	/^void hip_set_errorf(hip_t hip, lame_report_function func)$/;"	f
hip_set_msgf	lame/libmp3lame/mpglib_interface.c	/^void hip_set_msgf  (hip_t hip, lame_report_function func)$/;"	f
hip_set_pinfo	lame/libmp3lame/mpglib_interface.c	/^void hip_set_pinfo(hip_t hip, plotting_data* pinfo)$/;"	f
hip_t	lame/include/lame.h	/^typedef hip_global_flags *hip_t;$/;"	t
hist_printed_lines	lame/frontend/brhist.c	/^    int     hist_printed_lines;$/;"	m	struct:brhist_struct	file:
history.html	lame/doc/html/history.html	1;"	F
hlen	lame/libmp3lame/tables.h	/^    const uint8_t *hlen;        \/* pointer to array[xlen][ylen]  *\/$/;"	m	struct:huffcodetab
hmenuMain	Source/OBS.h	/^    HMENU           hmenuMain; \/\/ Main window menu so we can hide it in fullscreen mode$/;"	m	class:OBS
hogege	lame/libmp3lame/bitstream.c	/^static int hogege;$/;"	v	file:
holdTime	NoiseGate/NoiseGate.h	/^    float   holdTime;$/;"	m	class:NoiseGate
hook.cpp	minhook/src/hook.cpp	1;"	F
hook.h	minhook/src/hook.h	1;"	F
hookFunc	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.h	/^    FARPROC hookFunc;$/;"	m	class:HookData
hooking	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	/^static bool hooking = true;$/;"	v	file:
host	lame/ACM/ADbg/Makefile	/^host = x86_64-pc-mingw32$/;"	m
host	lame/ACM/Makefile	/^host = x86_64-pc-mingw32$/;"	m
host	lame/ACM/ddk/Makefile	/^host = x86_64-pc-mingw32$/;"	m
host	lame/ACM/tinyxml/Makefile	/^host = x86_64-pc-mingw32$/;"	m
host	lame/Dll/Makefile	/^host = x86_64-pc-mingw32$/;"	m
host	lame/Makefile	/^host = x86_64-pc-mingw32$/;"	m
host	lame/debian/Makefile	/^host = x86_64-pc-mingw32$/;"	m
host	lame/doc/Makefile	/^host = x86_64-pc-mingw32$/;"	m
host	lame/doc/html/Makefile	/^host = x86_64-pc-mingw32$/;"	m
host	lame/doc/man/Makefile	/^host = x86_64-pc-mingw32$/;"	m
host	lame/dshow/Makefile	/^host = x86_64-pc-mingw32$/;"	m
host	lame/frontend/Makefile	/^host = x86_64-pc-mingw32$/;"	m
host	lame/include/Makefile	/^host = x86_64-pc-mingw32$/;"	m
host	lame/libmp3lame/Makefile	/^host = x86_64-pc-mingw32$/;"	m
host	lame/libmp3lame/i386/Makefile	/^host = x86_64-pc-mingw32$/;"	m
host	lame/libmp3lame/vector/Makefile	/^host = x86_64-pc-mingw32$/;"	m
host	lame/mac/Makefile	/^host = x86_64-pc-mingw32$/;"	m
host	lame/macosx/English.lproj/Makefile	/^host = x86_64-pc-mingw32$/;"	m
host	lame/macosx/LAME.xcodeproj/Makefile	/^host = x86_64-pc-mingw32$/;"	m
host	lame/macosx/Makefile	/^host = x86_64-pc-mingw32$/;"	m
host	lame/misc/Makefile	/^host = x86_64-pc-mingw32$/;"	m
host	lame/mpglib/Makefile	/^host = x86_64-pc-mingw32$/;"	m
host	lame/vc_solution/Makefile	/^host = x86_64-pc-mingw32$/;"	m
host_alias	lame/ACM/ADbg/Makefile	/^host_alias = $/;"	m
host_alias	lame/ACM/Makefile	/^host_alias = $/;"	m
host_alias	lame/ACM/ddk/Makefile	/^host_alias = $/;"	m
host_alias	lame/ACM/tinyxml/Makefile	/^host_alias = $/;"	m
host_alias	lame/Dll/Makefile	/^host_alias = $/;"	m
host_alias	lame/Makefile	/^host_alias = $/;"	m
host_alias	lame/debian/Makefile	/^host_alias = $/;"	m
host_alias	lame/doc/Makefile	/^host_alias = $/;"	m
host_alias	lame/doc/html/Makefile	/^host_alias = $/;"	m
host_alias	lame/doc/man/Makefile	/^host_alias = $/;"	m
host_alias	lame/dshow/Makefile	/^host_alias = $/;"	m
host_alias	lame/frontend/Makefile	/^host_alias = $/;"	m
host_alias	lame/include/Makefile	/^host_alias = $/;"	m
host_alias	lame/libmp3lame/Makefile	/^host_alias = $/;"	m
host_alias	lame/libmp3lame/i386/Makefile	/^host_alias = $/;"	m
host_alias	lame/libmp3lame/vector/Makefile	/^host_alias = $/;"	m
host_alias	lame/mac/Makefile	/^host_alias = $/;"	m
host_alias	lame/macosx/English.lproj/Makefile	/^host_alias = $/;"	m
host_alias	lame/macosx/LAME.xcodeproj/Makefile	/^host_alias = $/;"	m
host_alias	lame/macosx/Makefile	/^host_alias = $/;"	m
host_alias	lame/misc/Makefile	/^host_alias = $/;"	m
host_alias	lame/mpglib/Makefile	/^host_alias = $/;"	m
host_alias	lame/vc_solution/Makefile	/^host_alias = $/;"	m
host_cpu	lame/ACM/ADbg/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	lame/ACM/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	lame/ACM/ddk/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	lame/ACM/tinyxml/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	lame/Dll/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	lame/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	lame/debian/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	lame/doc/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	lame/doc/html/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	lame/doc/man/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	lame/dshow/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	lame/frontend/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	lame/include/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	lame/libmp3lame/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	lame/libmp3lame/i386/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	lame/libmp3lame/vector/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	lame/mac/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	lame/macosx/English.lproj/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	lame/macosx/LAME.xcodeproj/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	lame/macosx/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	lame/misc/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	lame/mpglib/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	lame/vc_solution/Makefile	/^host_cpu = x86_64$/;"	m
host_os	lame/ACM/ADbg/Makefile	/^host_os = mingw32$/;"	m
host_os	lame/ACM/Makefile	/^host_os = mingw32$/;"	m
host_os	lame/ACM/ddk/Makefile	/^host_os = mingw32$/;"	m
host_os	lame/ACM/tinyxml/Makefile	/^host_os = mingw32$/;"	m
host_os	lame/Dll/Makefile	/^host_os = mingw32$/;"	m
host_os	lame/Makefile	/^host_os = mingw32$/;"	m
host_os	lame/debian/Makefile	/^host_os = mingw32$/;"	m
host_os	lame/doc/Makefile	/^host_os = mingw32$/;"	m
host_os	lame/doc/html/Makefile	/^host_os = mingw32$/;"	m
host_os	lame/doc/man/Makefile	/^host_os = mingw32$/;"	m
host_os	lame/dshow/Makefile	/^host_os = mingw32$/;"	m
host_os	lame/frontend/Makefile	/^host_os = mingw32$/;"	m
host_os	lame/include/Makefile	/^host_os = mingw32$/;"	m
host_os	lame/libmp3lame/Makefile	/^host_os = mingw32$/;"	m
host_os	lame/libmp3lame/i386/Makefile	/^host_os = mingw32$/;"	m
host_os	lame/libmp3lame/vector/Makefile	/^host_os = mingw32$/;"	m
host_os	lame/mac/Makefile	/^host_os = mingw32$/;"	m
host_os	lame/macosx/English.lproj/Makefile	/^host_os = mingw32$/;"	m
host_os	lame/macosx/LAME.xcodeproj/Makefile	/^host_os = mingw32$/;"	m
host_os	lame/macosx/Makefile	/^host_os = mingw32$/;"	m
host_os	lame/misc/Makefile	/^host_os = mingw32$/;"	m
host_os	lame/mpglib/Makefile	/^host_os = mingw32$/;"	m
host_os	lame/vc_solution/Makefile	/^host_os = mingw32$/;"	m
host_triplet	lame/ACM/ADbg/Makefile	/^host_triplet = x86_64-pc-mingw32$/;"	m
host_triplet	lame/ACM/Makefile	/^host_triplet = x86_64-pc-mingw32$/;"	m
host_triplet	lame/ACM/ddk/Makefile	/^host_triplet = x86_64-pc-mingw32$/;"	m
host_triplet	lame/ACM/tinyxml/Makefile	/^host_triplet = x86_64-pc-mingw32$/;"	m
host_triplet	lame/Dll/Makefile	/^host_triplet = x86_64-pc-mingw32$/;"	m
host_triplet	lame/Makefile	/^host_triplet = x86_64-pc-mingw32$/;"	m
host_triplet	lame/debian/Makefile	/^host_triplet = x86_64-pc-mingw32$/;"	m
host_triplet	lame/doc/Makefile	/^host_triplet = x86_64-pc-mingw32$/;"	m
host_triplet	lame/doc/html/Makefile	/^host_triplet = x86_64-pc-mingw32$/;"	m
host_triplet	lame/doc/man/Makefile	/^host_triplet = x86_64-pc-mingw32$/;"	m
host_triplet	lame/dshow/Makefile	/^host_triplet = x86_64-pc-mingw32$/;"	m
host_triplet	lame/frontend/Makefile	/^host_triplet = x86_64-pc-mingw32$/;"	m
host_triplet	lame/include/Makefile	/^host_triplet = x86_64-pc-mingw32$/;"	m
host_triplet	lame/libmp3lame/Makefile	/^host_triplet = x86_64-pc-mingw32$/;"	m
host_triplet	lame/libmp3lame/i386/Makefile	/^host_triplet = x86_64-pc-mingw32$/;"	m
host_triplet	lame/libmp3lame/vector/Makefile	/^host_triplet = x86_64-pc-mingw32$/;"	m
host_triplet	lame/mac/Makefile	/^host_triplet = x86_64-pc-mingw32$/;"	m
host_triplet	lame/macosx/English.lproj/Makefile	/^host_triplet = x86_64-pc-mingw32$/;"	m
host_triplet	lame/macosx/LAME.xcodeproj/Makefile	/^host_triplet = x86_64-pc-mingw32$/;"	m
host_triplet	lame/macosx/Makefile	/^host_triplet = x86_64-pc-mingw32$/;"	m
host_triplet	lame/misc/Makefile	/^host_triplet = x86_64-pc-mingw32$/;"	m
host_triplet	lame/mpglib/Makefile	/^host_triplet = x86_64-pc-mingw32$/;"	m
host_triplet	lame/vc_solution/Makefile	/^host_triplet = x86_64-pc-mingw32$/;"	m
host_vendor	lame/ACM/ADbg/Makefile	/^host_vendor = pc$/;"	m
host_vendor	lame/ACM/Makefile	/^host_vendor = pc$/;"	m
host_vendor	lame/ACM/ddk/Makefile	/^host_vendor = pc$/;"	m
host_vendor	lame/ACM/tinyxml/Makefile	/^host_vendor = pc$/;"	m
host_vendor	lame/Dll/Makefile	/^host_vendor = pc$/;"	m
host_vendor	lame/Makefile	/^host_vendor = pc$/;"	m
host_vendor	lame/debian/Makefile	/^host_vendor = pc$/;"	m
host_vendor	lame/doc/Makefile	/^host_vendor = pc$/;"	m
host_vendor	lame/doc/html/Makefile	/^host_vendor = pc$/;"	m
host_vendor	lame/doc/man/Makefile	/^host_vendor = pc$/;"	m
host_vendor	lame/dshow/Makefile	/^host_vendor = pc$/;"	m
host_vendor	lame/frontend/Makefile	/^host_vendor = pc$/;"	m
host_vendor	lame/include/Makefile	/^host_vendor = pc$/;"	m
host_vendor	lame/libmp3lame/Makefile	/^host_vendor = pc$/;"	m
host_vendor	lame/libmp3lame/i386/Makefile	/^host_vendor = pc$/;"	m
host_vendor	lame/libmp3lame/vector/Makefile	/^host_vendor = pc$/;"	m
host_vendor	lame/mac/Makefile	/^host_vendor = pc$/;"	m
host_vendor	lame/macosx/English.lproj/Makefile	/^host_vendor = pc$/;"	m
host_vendor	lame/macosx/LAME.xcodeproj/Makefile	/^host_vendor = pc$/;"	m
host_vendor	lame/macosx/Makefile	/^host_vendor = pc$/;"	m
host_vendor	lame/misc/Makefile	/^host_vendor = pc$/;"	m
host_vendor	lame/mpglib/Makefile	/^host_vendor = pc$/;"	m
host_vendor	lame/vc_solution/Makefile	/^host_vendor = pc$/;"	m
hostname	librtmp/rtmp.h	/^        AVal hostname;$/;"	m	struct:RTMP_LNK
hotkey	GraphicsCapture/GraphicsCaptureSource.h	/^    DWORD hotkey, hotkeyID;$/;"	m	class:GraphicsCaptureSource
hotkey	Source/API.cpp	/^    DWORD hotkey;$/;"	m	struct:HotkeyInfo	file:
hotkey	Source/OBS.h	/^    DWORD hotkey;$/;"	m	struct:SceneHotkeyInfo
hotkey	scenesw/SceneSwitcher.h	/^    DWORD hotkey;$/;"	m	class:SceneSwitcherSettings
hotkeyID	GraphicsCapture/GraphicsCaptureSource.h	/^    DWORD hotkey, hotkeyID;$/;"	m	class:GraphicsCaptureSource
hotkeyID	OBSApi/Scene.h	/^    UINT hotkeyID;$/;"	m	class:Scene
hotkeyID	Source/API.cpp	/^    DWORD hotkeyID;$/;"	m	struct:HotkeyInfo	file:
hotkeyID	Source/OBS.h	/^    DWORD hotkeyID;$/;"	m	struct:SceneHotkeyInfo
hotkeyID	scenesw/SceneSwitcher.h	/^    UINT hotkeyID;$/;"	m	class:SceneSwitcherSettings
hotkeyProc	Source/API.cpp	/^    OBSHOTKEYPROC hotkeyProc;$/;"	m	struct:HotkeyInfo	file:
hotkeyVK	OBSApi/HotkeyControlEx.cpp	/^    DWORD hotkeyVK, modifiers;$/;"	m	struct:HotkeyControlExData	file:
hotkeys	Source/API.cpp	/^    List<HotkeyInfo> hotkeys;$/;"	m	class:OBSAPIInterface	file:
hrd_timing	x264/x264.h	/^    x264_hrd_t hrd_timing;$/;"	m
hs	librtmp/rtmp_sys.h	/^    havege_state *hs;$/;"	m	struct:tls_server_ctx
hs	librtmp/rtmp_sys.h	/^    havege_state hs;$/;"	m	struct:tls_ctx
ht	lame/libmp3lame/tables.c	/^const struct huffcodetab ht[HTN] = {$/;"	v
ht	lame/mpglib/huffman.h	/^static const struct newhuff ht[] = $/;"	v
htc	lame/mpglib/huffman.h	/^static const struct newhuff htc[] = $/;"	v
htmldir	lame/ACM/ADbg/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	lame/ACM/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	lame/ACM/ddk/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	lame/ACM/tinyxml/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	lame/Dll/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	lame/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	lame/debian/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	lame/doc/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	lame/doc/html/Makefile	/^htmldir = $(docdir)\/html$/;"	m
htmldir	lame/doc/man/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	lame/dshow/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	lame/frontend/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	lame/include/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	lame/libmp3lame/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	lame/libmp3lame/i386/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	lame/libmp3lame/vector/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	lame/mac/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	lame/macosx/English.lproj/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	lame/macosx/LAME.xcodeproj/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	lame/macosx/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	lame/misc/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	lame/mpglib/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	lame/vc_solution/Makefile	/^htmldir = ${docdir}$/;"	m
http.h	librtmp/http.h	1;"	F
http_headers	Source/mongoose.h	/^  } http_headers[30];$/;"	m	struct:mg_connection
http_version	Source/mongoose.h	/^  const char *http_version;   \/\/ E.g. "1.0", "1.1"$/;"	m	struct:mg_connection
hue	DShowPlugin/IVideoCaptureFilter.h	/^    int                                  hue;                               \/\/!< Hue        (0-10000)$/;"	m	struct:_VIDEO_CAPTURE_FILTER_SETTINGS
huf_tbl_noESC	lame/libmp3lame/takehiro.c	/^static const int huf_tbl_noESC[] = {$/;"	v	file:
huff1	libfaac/hufftab.h	/^unsigned short huff1[][2] = {$/;"	v
huff10	libfaac/hufftab.h	/^unsigned short huff10[][2] = {$/;"	v
huff11	libfaac/hufftab.h	/^unsigned short huff11[][2] = {$/;"	v
huff12	libfaac/hufftab.h	/^unsigned int huff12[][2] = {$/;"	v
huff2	libfaac/hufftab.h	/^unsigned short huff2[][2] = {$/;"	v
huff3	libfaac/hufftab.h	/^unsigned short huff3[][2] = {$/;"	v
huff4	libfaac/hufftab.h	/^unsigned short huff4[][2] = {$/;"	v
huff5	libfaac/hufftab.h	/^unsigned short huff5[][2] = {$/;"	v
huff6	libfaac/hufftab.h	/^unsigned short huff6[][2] = {$/;"	v
huff7	libfaac/hufftab.h	/^unsigned short huff7[][2] = {$/;"	v
huff8	libfaac/hufftab.h	/^unsigned short huff8[][2] = {$/;"	v
huff9	libfaac/hufftab.h	/^unsigned short huff9[][2] = {$/;"	v
huffcodetab	lame/libmp3lame/tables.h	/^struct huffcodetab {$/;"	s
huffman.c	libfaac/huffman.c	1;"	F
huffman.h	lame/mpglib/huffman.h	1;"	F
huffman.h	libfaac/huffman.h	1;"	F
huffman_coder_count1	lame/libmp3lame/bitstream.c	/^huffman_coder_count1(lame_internal_flags * gfc, gr_info const *gi)$/;"	f	file:
huffman_init	lame/libmp3lame/takehiro.c	/^huffman_init(lame_internal_flags * const gfc)$/;"	f
hufftab.h	libfaac/hufftab.h	1;"	F
hwEncodeStatus	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                hwEncodeStatus;              \/**< [out]: The NvEncodeAPI interface status for the locked picture. *\/$/;"	m	struct:_NV_ENC_LOCK_BITSTREAM
hw_device.h	QSVHelper/IntelSupport/include/hw_device.h	1;"	F
hwnd	GraphicsCapture/GraphicsCaptureSource.cpp	/^    HWND hwnd;$/;"	m	struct:FindWindowData	file:
hwnd	OBSApi/SettingsPane.h	/^    HWND    hwnd;$/;"	m	class:SettingsPane
hwndCapture	GraphicsCapture/GlobalCaptureStuff.h	/^    DWORD   hwndCapture;$/;"	m	struct:CaptureInfo
hwndCapture	GraphicsCapture/GraphicsCaptureSource.h	/^    HWND hwndTarget, hwndCapture, hwndNextTarget;$/;"	m	class:GraphicsCaptureSource
hwndCaptureWindow	Source/DesktopImageSource.cpp	/^    HWND hwndConfigDialog, hwndCaptureWindow;$/;"	m	struct:RegionWindowData	file:
hwndConfigDialog	Source/DesktopImageSource.cpp	/^    HWND hwndConfigDialog, hwndCaptureWindow;$/;"	m	struct:RegionWindowData	file:
hwndCurrentSettings	Source/OBS.h	/^    HWND                hwndCurrentSettings;$/;"	m	class:OBS
hwndD3DDummyWindow	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	/^HWND hwndSender = NULL, hwndOBS = NULL, hwndD3DDummyWindow = NULL;$/;"	v
hwndFoundWindow	Source/DesktopImageSource.cpp	/^    HWND     hwndFoundWindow;$/;"	m	class:DesktopImageSource	file:
hwndLog	Source/Main.cpp	/^HWND        hwndLog         = NULL;$/;"	v
hwndLogWindow	Source/Main.cpp	/^HWND        hwndLogWindow   = NULL;$/;"	v
hwndMain	Source/Main.cpp	/^HWND        hwndMain        = NULL;$/;"	v
hwndMainAppWindow	OBSApi/Utility/XT_Windows.cpp	/^HWND        hwndMainAppWindow = NULL;$/;"	v
hwndNextTarget	GraphicsCapture/GraphicsCaptureSource.h	/^    HWND hwndTarget, hwndCapture, hwndNextTarget;$/;"	m	class:GraphicsCaptureSource
hwndOBS	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	/^HWND hwndSender = NULL, hwndOBS = NULL, hwndD3DDummyWindow = NULL;$/;"	v
hwndProjector	Source/OBS.h	/^    HWND    hwndProjector;$/;"	m	class:OBS
hwndRenderFrame	Source/Main.cpp	/^HWND        hwndRenderFrame = NULL;$/;"	v
hwndRenderMessage	Source/OBS.h	/^    HWND    hwndRenderMessage; \/\/ The text in the middle of the main window$/;"	m	class:OBS
hwndSender	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	/^HWND hwndSender = NULL, hwndOBS = NULL, hwndD3DDummyWindow = NULL;$/;"	v
hwndSettings	Source/OBS.h	/^    HWND                hwndSettings;$/;"	m	class:OBS
hwndSource	CLRHostPlugin/CLRHostInterop/AbstractWPFSettingsPane.h	/^        HwndSource^ hwndSource;$/;"	m	class:CLROBS::abstract
hwndTarget	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^HWND                    hwndTarget = NULL;$/;"	v
hwndTarget	GraphicsCapture/GraphicsCaptureSource.h	/^    HWND hwndTarget, hwndCapture, hwndNextTarget;$/;"	m	class:GraphicsCaptureSource
hwndTarget	GraphicsCapture/SharedTexCapture.h	/^    HWND hwndTarget;$/;"	m	class:SharedTexCapture
hwndTarget	GraphicsCapture/WindowCapture.h	/^    HWND hwndTarget;$/;"	m	class:WindowCapture
hybrid_blc	lame/mpglib/mpglib.h	/^    int     hybrid_blc[2];$/;"	m	struct:mpstr_tag
hybrid_block	lame/mpglib/mpglib.h	/^    real    hybrid_block[2][2][SBLIMIT * SSLIMIT];$/;"	m	struct:mpstr_tag
i	lame/libmp3lame/takehiro.c	/^    int     i;$/;"	m	file:
i	lame/libmp3lame/vbrquantize.c	/^    int     i;$/;"	m	file:
i	libfaac/aacquant.c	/^    int i;$/;"	m	file:
i	libfaac/kiss_fft/kiss_fft.h	/^    kiss_fft_scalar i;$/;"	m
i64tots_s	OBSApi/Utility/XString.cpp	/^int i64tots_s(INT64 val, TCHAR *buffer, size_t bufLen, int radix)$/;"	f
iAudioHeader	lame/frontend/rtp.c	/^    int     iAudioHeader;    \/* =0?! *\/$/;"	m	struct:rtpheader	file:
iLenLongestCW	libfaac/coder.h	/^    int iLenLongestCW;$/;"	m
iLenReordSpData	libfaac/coder.h	/^    int iLenReordSpData;$/;"	m
iNvencDeviceCount	ObsNvenc/src/nvEncodeAPI.cpp	/^int iNvencDeviceCount = 0;$/;"	v
iNvencUseDeviceID	ObsNvenc/src/nvEncodeAPI.cpp	/^unsigned int iNvencUseDeviceID = 0;$/;"	v
i_aq_mode	x264/x264.h	/^        int         i_aq_mode;      \/* psy adaptive QP. (X264_AQ_*) *\/$/;"	m	struct:x264_param_t::<anonymous>
i_avcintra_class	x264/x264.h	/^    int         i_avcintra_class;$/;"	m	struct:x264_param_t
i_bframe	x264/x264.h	/^    int         i_bframe;   \/* how many b-frame between 2 references pictures *\/$/;"	m	struct:x264_param_t
i_bframe_adaptive	x264/x264.h	/^    int         i_bframe_adaptive;$/;"	m	struct:x264_param_t
i_bframe_bias	x264/x264.h	/^    int         i_bframe_bias;$/;"	m	struct:x264_param_t
i_bframe_pyramid	x264/x264.h	/^    int         i_bframe_pyramid;   \/* Keep some B-frames as references: 0=off, 1=strict hierarchical, 2=normal *\/$/;"	m	struct:x264_param_t
i_bitrate	x264/x264.h	/^        int         i_bitrate;$/;"	m	struct:x264_param_t::<anonymous>
i_bottom	x264/x264.h	/^        unsigned int i_bottom;$/;"	m	struct:x264_param_t::<anonymous>
i_cabac_init_idc	x264/x264.h	/^    int         i_cabac_init_idc;$/;"	m	struct:x264_param_t
i_chroma_loc	x264/x264.h	/^        int         i_chroma_loc;    \/* both top & bottom *\/$/;"	m	struct:x264_param_t::<anonymous>
i_chroma_qp_offset	x264/x264.h	/^        int          i_chroma_qp_offset;$/;"	m	struct:x264_param_t::<anonymous>
i_colmatrix	x264/x264.h	/^        int         i_colmatrix;$/;"	m	struct:x264_param_t::<anonymous>
i_colorprim	x264/x264.h	/^        int         i_colorprim;$/;"	m	struct:x264_param_t::<anonymous>
i_cqm_preset	x264/x264.h	/^    int         i_cqm_preset;$/;"	m	struct:x264_param_t
i_csp	x264/x264.h	/^    int         i_csp;         \/* CSP of encoded bitstream *\/$/;"	m	struct:x264_param_t
i_csp	x264/x264.h	/^    int     i_csp;       \/* Colorspace *\/$/;"	m
i_deblocking_filter_alphac0	x264/x264.h	/^    int         i_deblocking_filter_alphac0;    \/* [-6, 6] -6 light filter, 6 strong *\/$/;"	m	struct:x264_param_t
i_deblocking_filter_beta	x264/x264.h	/^    int         i_deblocking_filter_beta;       \/* [-6, 6]  idem *\/$/;"	m	struct:x264_param_t
i_direct_mv_pred	x264/x264.h	/^        int          i_direct_mv_pred; \/* spatial vs temporal mv prediction *\/$/;"	m	struct:x264_param_t::<anonymous>
i_dpb_size	x264/x264.h	/^    int         i_dpb_size;         \/* Force a DPB size larger than that implied by B-frames and reference frames.$/;"	m	struct:x264_param_t
i_dts	x264/x264.h	/^    int64_t i_dts;$/;"	m
i_end	x264/x264.h	/^    int i_start, i_end; \/* range of frame numbers *\/$/;"	m
i_first_mb	x264/x264.h	/^    int i_first_mb; \/* If this NAL is a slice, the index of the first MB in the slice. *\/$/;"	m
i_fps_den	x264/x264.h	/^    uint32_t i_fps_den;$/;"	m	struct:x264_param_t
i_fps_num	x264/x264.h	/^    uint32_t i_fps_num;$/;"	m	struct:x264_param_t
i_frame_packing	x264/x264.h	/^    int i_frame_packing;$/;"	m	struct:x264_param_t
i_frame_reference	x264/x264.h	/^    int         i_frame_reference;  \/* Maximum number of reference frames *\/$/;"	m	struct:x264_param_t
i_frame_total	x264/x264.h	/^    int         i_frame_total; \/* number of frames to encode if known, else 0 *\/$/;"	m	struct:x264_param_t
i_height	x264/x264.h	/^    int         i_height;$/;"	m	struct:x264_param_t
i_keyint_max	x264/x264.h	/^    int         i_keyint_max;       \/* Force an IDR keyframe at this interval *\/$/;"	m	struct:x264_param_t
i_keyint_min	x264/x264.h	/^    int         i_keyint_min;       \/* Scenecuts closer together than this are coded as I, not IDR. *\/$/;"	m	struct:x264_param_t
i_last_mb	x264/x264.h	/^    int i_last_mb;  \/* If this NAL is a slice, the index of the last MB in the slice. *\/$/;"	m
i_left	x264/x264.h	/^        unsigned int i_left;$/;"	m	struct:x264_param_t::<anonymous>
i_level_idc	x264/x264.h	/^    int         i_level_idc;$/;"	m	struct:x264_param_t
i_log_level	x264/x264.h	/^    int         i_log_level;$/;"	m	struct:x264_param_t
i_lookahead	x264/x264.h	/^        int         i_lookahead;$/;"	m	struct:x264_param_t::<anonymous>
i_lookahead_threads	x264/x264.h	/^    int         i_lookahead_threads; \/* multiple threads for lookahead analysis *\/$/;"	m	struct:x264_param_t
i_luma_deadzone	x264/x264.h	/^        int          i_luma_deadzone[2]; \/* {inter, intra} *\/$/;"	m	struct:x264_param_t::<anonymous>
i_me_method	x264/x264.h	/^        int          i_me_method; \/* motion estimation algorithm to use (X264_ME_*) *\/$/;"	m	struct:x264_param_t::<anonymous>
i_me_range	x264/x264.h	/^        int          i_me_range; \/* integer pixel motion estimation search range (from predicted mv) *\/$/;"	m	struct:x264_param_t::<anonymous>
i_mv_range	x264/x264.h	/^        int          i_mv_range; \/* maximum length of a mv (in pixels). -1 = auto, based on level *\/$/;"	m	struct:x264_param_t::<anonymous>
i_mv_range_thread	x264/x264.h	/^        int          i_mv_range_thread; \/* minimum space between threads. -1 = auto, based on number of threads. *\/$/;"	m	struct:x264_param_t::<anonymous>
i_nal_hrd	x264/x264.h	/^    int         i_nal_hrd;$/;"	m	struct:x264_param_t
i_noise_reduction	x264/x264.h	/^        int          i_noise_reduction; \/* adaptive pseudo-deadzone *\/$/;"	m	struct:x264_param_t::<anonymous>
i_opencl_device	x264/x264.h	/^    int i_opencl_device;     \/* specify count of GPU devices to skip, for CLI users *\/$/;"	m	struct:x264_param_t
i_overscan	x264/x264.h	/^        int         i_overscan;    \/* 0=undef, 1=no overscan, 2=overscan *\/$/;"	m	struct:x264_param_t::<anonymous>
i_padding	x264/x264.h	/^    int i_padding;$/;"	m
i_payload	x264/x264.h	/^    int     i_payload;$/;"	m
i_pic_struct	x264/x264.h	/^    int     i_pic_struct;$/;"	m
i_plane	x264/x264.h	/^    int     i_plane;     \/* Number of image planes *\/$/;"	m
i_pts	x264/x264.h	/^    int64_t i_pts;$/;"	m
i_qp	x264/x264.h	/^    int i_qp;$/;"	m
i_qp_constant	x264/x264.h	/^        int         i_qp_constant;  \/* 0 to (51 + 6*(x264_bit_depth-8)). 0=lossless *\/$/;"	m	struct:x264_param_t::<anonymous>
i_qp_max	x264/x264.h	/^        int         i_qp_max;       \/* max allowed QP value *\/$/;"	m	struct:x264_param_t::<anonymous>
i_qp_min	x264/x264.h	/^        int         i_qp_min;       \/* min allowed QP value *\/$/;"	m	struct:x264_param_t::<anonymous>
i_qp_step	x264/x264.h	/^        int         i_qp_step;      \/* max QP step between frames *\/$/;"	m	struct:x264_param_t::<anonymous>
i_qpplus1	x264/x264.h	/^    int     i_qpplus1;$/;"	m
i_rc_method	x264/x264.h	/^        int         i_rc_method;    \/* X264_RC_* *\/$/;"	m	struct:x264_param_t::<anonymous>
i_ref_idc	x264/x264.h	/^    int i_ref_idc;  \/* nal_priority_e *\/$/;"	m
i_right	x264/x264.h	/^        unsigned int i_right;$/;"	m	struct:x264_param_t::<anonymous>
i_sar_height	x264/x264.h	/^        int         i_sar_height;$/;"	m	struct:x264_param_t::<anonymous>
i_sar_width	x264/x264.h	/^        int         i_sar_width;$/;"	m	struct:x264_param_t::<anonymous>
i_scenecut_threshold	x264/x264.h	/^    int         i_scenecut_threshold; \/* how aggressively to insert extra I frames *\/$/;"	m	struct:x264_param_t
i_slen2	lame/mpglib/layer3.c	/^static unsigned int i_slen2[256]; \/* MPEG 2.0 slen for intensity stereo *\/$/;"	v	file:
i_slice_count	x264/x264.h	/^    int i_slice_count;       \/* Number of slices per frame: forces rectangular slices. *\/$/;"	m	struct:x264_param_t
i_slice_count_max	x264/x264.h	/^    int i_slice_count_max;   \/* Absolute cap on slices per frame; stops applying slice-max-size$/;"	m	struct:x264_param_t
i_slice_max_mbs	x264/x264.h	/^    int i_slice_max_mbs;     \/* Max number of MBs per slice; overrides i_slice_count. *\/$/;"	m	struct:x264_param_t
i_slice_max_size	x264/x264.h	/^    int i_slice_max_size;    \/* Max size per slice in bytes; includes estimated NAL overhead. *\/$/;"	m	struct:x264_param_t
i_slice_min_mbs	x264/x264.h	/^    int i_slice_min_mbs;     \/* Min number of MBs per slice *\/$/;"	m	struct:x264_param_t
i_sps_id	x264/x264.h	/^    int i_sps_id;               \/* SPS and PPS id number *\/$/;"	m	struct:x264_param_t
i_start	x264/x264.h	/^    int i_start, i_end; \/* range of frame numbers *\/$/;"	m
i_stereo	lame/libmp3lame/lame-analysis.h	/^    int     framesize, stereo, js, ms_stereo, i_stereo, emph, bitrate, sampfreq, maindata;$/;"	m	struct:plotting_data
i_stride	x264/x264.h	/^    int     i_stride[4]; \/* Strides for each plane *\/$/;"	m
i_subpel_refine	x264/x264.h	/^        int          i_subpel_refine; \/* subpixel motion estimation quality *\/$/;"	m	struct:x264_param_t::<anonymous>
i_sync_lookahead	x264/x264.h	/^    int         i_sync_lookahead; \/* threaded lookahead buffer *\/$/;"	m	struct:x264_param_t
i_threads	x264/x264.h	/^    int         i_threads;           \/* encode multiple frames in parallel *\/$/;"	m	struct:x264_param_t
i_timebase_den	x264/x264.h	/^    uint32_t i_timebase_den;    \/* Timebase denominator *\/$/;"	m	struct:x264_param_t
i_timebase_num	x264/x264.h	/^    uint32_t i_timebase_num;    \/* Timebase numerator *\/$/;"	m	struct:x264_param_t
i_top	x264/x264.h	/^        unsigned int i_top;$/;"	m	struct:x264_param_t::<anonymous>
i_transfer	x264/x264.h	/^        int         i_transfer;$/;"	m	struct:x264_param_t::<anonymous>
i_trellis	x264/x264.h	/^        int          i_trellis;  \/* trellis RD quantization *\/$/;"	m	struct:x264_param_t::<anonymous>
i_type	x264/x264.h	/^    int     i_type;$/;"	m
i_type	x264/x264.h	/^    int i_type;     \/* nal_unit_type_e *\/$/;"	m
i_vbv_buffer_size	x264/x264.h	/^        int         i_vbv_buffer_size;$/;"	m	struct:x264_param_t::<anonymous>
i_vbv_max_bitrate	x264/x264.h	/^        int         i_vbv_max_bitrate;$/;"	m	struct:x264_param_t::<anonymous>
i_vidformat	x264/x264.h	/^        int         i_vidformat;$/;"	m	struct:x264_param_t::<anonymous>
i_weighted_pred	x264/x264.h	/^        int          i_weighted_pred; \/* weighting for P-frames *\/$/;"	m	struct:x264_param_t::<anonymous>
i_width	x264/x264.h	/^    int         i_width;$/;"	m	struct:x264_param_t
i_zones	x264/x264.h	/^        int         i_zones;        \/* number of zone_t's *\/$/;"	m	struct:x264_param_t::<anonymous>
iaudioprops.h	lame/dshow/iaudioprops.h	1;"	F
id	Source/OBS.h	/^    UINT id;$/;"	m	struct:StreamInfo
id	Source/OBS.h	/^    int id;$/;"	m	struct:ServiceIdentifier
id	Source/SettingsQSV.cpp	/^        int id;$/;"	m	file:
id	lame/ACM/AEncodeProperties.h	/^	UINT id;$/;"	m
id3_tag	lame/frontend/parse.c	/^id3_tag(lame_global_flags* gfp, int type, TextEncoding enc, char* str)$/;"	f	file:
id3tag.c	lame/libmp3lame/id3tag.c	1;"	F
id3tag.h	lame/libmp3lame/id3tag.h	1;"	F
id3tag_add_v2	lame/libmp3lame/id3tag.c	/^id3tag_add_v2(lame_t gfp)$/;"	f
id3tag_genre_list	lame/libmp3lame/id3tag.c	/^id3tag_genre_list(void (*handler) (int, const char *, void *), void *cookie)$/;"	f
id3tag_init	lame/libmp3lame/id3tag.c	/^id3tag_init(lame_t gfp)$/;"	f
id3tag_pad_v2	lame/libmp3lame/id3tag.c	/^id3tag_pad_v2(lame_t gfp)$/;"	f
id3tag_set_album	lame/libmp3lame/id3tag.c	/^id3tag_set_album(lame_t gfp, const char *album)$/;"	f
id3tag_set_albumart	lame/libmp3lame/id3tag.c	/^id3tag_set_albumart(lame_t gfp, const char *image, size_t size)$/;"	f
id3tag_set_artist	lame/libmp3lame/id3tag.c	/^id3tag_set_artist(lame_t gfp, const char *artist)$/;"	f
id3tag_set_comment	lame/libmp3lame/id3tag.c	/^id3tag_set_comment(lame_t gfp, const char *comment)$/;"	f
id3tag_set_comment_latin1	lame/libmp3lame/id3tag.c	/^id3tag_set_comment_latin1(lame_t gfp, char const *lang, char const *desc, char const *text)$/;"	f
id3tag_set_comment_ucs2	lame/libmp3lame/id3tag.c	/^id3tag_set_comment_ucs2(lame_t gfp, char const *lang, unsigned short const *desc, unsigned short const *text)$/;"	f
id3tag_set_comment_utf16	lame/libmp3lame/id3tag.c	/^id3tag_set_comment_utf16(lame_t gfp, char const *lang, unsigned short const *desc, unsigned short const *text)$/;"	f
id3tag_set_fieldvalue	lame/libmp3lame/id3tag.c	/^id3tag_set_fieldvalue(lame_t gfp, const char *fieldvalue)$/;"	f
id3tag_set_fieldvalue_ucs2	lame/libmp3lame/id3tag.c	/^id3tag_set_fieldvalue_ucs2(lame_t gfp, const unsigned short *fieldvalue)$/;"	f
id3tag_set_fieldvalue_utf16	lame/libmp3lame/id3tag.c	/^id3tag_set_fieldvalue_utf16(lame_t gfp, const unsigned short *fieldvalue)$/;"	f
id3tag_set_genre	lame/libmp3lame/id3tag.c	/^id3tag_set_genre(lame_t gfp, const char *genre)$/;"	f
id3tag_set_genre_utf16	lame/libmp3lame/id3tag.c	/^id3tag_set_genre_utf16(lame_t gfp, unsigned short const* text)$/;"	f	file:
id3tag_set_pad	lame/libmp3lame/id3tag.c	/^id3tag_set_pad(lame_t gfp, size_t n)$/;"	f
id3tag_set_textinfo_latin1	lame/libmp3lame/id3tag.c	/^id3tag_set_textinfo_latin1(lame_t gfp, char const *id, char const *text)$/;"	f
id3tag_set_textinfo_ucs2	lame/libmp3lame/id3tag.c	/^id3tag_set_textinfo_ucs2(lame_t gfp, char const *id, unsigned short const *text)$/;"	f
id3tag_set_textinfo_utf16	lame/libmp3lame/id3tag.c	/^id3tag_set_textinfo_utf16(lame_t gfp, char const *id, unsigned short const *text)$/;"	f
id3tag_set_title	lame/libmp3lame/id3tag.c	/^id3tag_set_title(lame_t gfp, const char *title)$/;"	f
id3tag_set_track	lame/libmp3lame/id3tag.c	/^id3tag_set_track(lame_t gfp, const char *track)$/;"	f
id3tag_set_userinfo_latin1	lame/libmp3lame/id3tag.c	/^id3tag_set_userinfo_latin1(lame_t gfp, uint32_t id, char const *fieldvalue)$/;"	f	file:
id3tag_set_userinfo_ucs2	lame/libmp3lame/id3tag.c	/^id3tag_set_userinfo_ucs2(lame_t gfp, uint32_t id, unsigned short const *fieldvalue)$/;"	f	file:
id3tag_set_year	lame/libmp3lame/id3tag.c	/^id3tag_set_year(lame_t gfp, const char *year)$/;"	f
id3tag_space_v1	lame/libmp3lame/id3tag.c	/^id3tag_space_v1(lame_t gfp)$/;"	f
id3tag_spec	lame/libmp3lame/id3tag.h	/^typedef struct id3tag_spec {$/;"	s
id3tag_spec	lame/libmp3lame/id3tag.h	/^} id3tag_spec;$/;"	t
id3tag_v1_only	lame/libmp3lame/id3tag.c	/^id3tag_v1_only(lame_t gfp)$/;"	f
id3tag_v2_only	lame/libmp3lame/id3tag.c	/^id3tag_v2_only(lame_t gfp)$/;"	f
id3tag_write_v1	lame/libmp3lame/id3tag.c	/^id3tag_write_v1(lame_t gfp)$/;"	f
id3tag_write_v2	lame/libmp3lame/id3tag.c	/^id3tag_write_v2(lame_t gfp)$/;"	f
id3v1-only	lame/doc/html/detailed.html	/^<a name="id3v1-only"><span class="hilight">--id3v1-only<\/span><\/a> Disable the use of id3v2.$/;"	a
id3v2-only	lame/doc/html/detailed.html	/^<a name="id3v2-only"><span class="hilight">--id3v2-only<\/span><\/a> Disable the user ov id3v1.$/;"	a
id3v2AddAudioDuration	lame/libmp3lame/id3tag.c	/^id3v2AddAudioDuration(lame_t gfp, double ms)$/;"	f	file:
id3v2AddLameVersion	lame/libmp3lame/id3tag.c	/^id3v2AddLameVersion(lame_t gfp)$/;"	f	file:
id3v2_add_latin1	lame/libmp3lame/id3tag.c	/^id3v2_add_latin1(lame_t gfp, uint32_t frame_id, char const *lang, char const *desc, char const *text)$/;"	f	file:
id3v2_add_ucs2	lame/libmp3lame/id3tag.c	/^id3v2_add_ucs2(lame_t gfp, uint32_t frame_id, char const *lang, unsigned short const *desc, unsigned short const *text)$/;"	f	file:
id_method_map	Source/SettingsQSV.cpp	/^    } id_method_map[] = {$/;"	v
idle_back	lame/frontend/gtkanal.c	/^static gint idle_back = 0;   \/* set when we are displaying the old data *\/$/;"	v	file:
idle_count	lame/frontend/gtkanal.c	/^static gint idle_count;      \/* pause & plot when idle_count=idel_count_max *\/$/;"	v	file:
idle_count_max	lame/frontend/gtkanal.c	/^static gint idle_count_max;  \/* number of frames to process before plotting *\/$/;"	v	file:
idle_end	lame/frontend/gtkanal.c	/^static gint idle_end = 0;    \/* process all frames, stop at last frame  *\/$/;"	v	file:
idle_keepgoing	lame/frontend/gtkanal.c	/^static gint idle_keepgoing;  \/* processing of frames is ON *\/$/;"	v	file:
idle_surfaces	QSVHelper/Encoder.h	/^    std::queue<mfxFrameSurface1*> idle_surfaces;$/;"	m	struct:Encoder
idle_tasks	QSVHelper/Encoder.h	/^    std::queue<size_t> idle_tasks, queued_tasks, encoded_tasks;$/;"	m	struct:Encoder
idle_tasks	Source/Encoder_QSV.cpp	/^                           idle_tasks;$/;"	m	class:QSVEncoder	file:
idrPeriod	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t idrPeriod;                                             \/**< [in]: Specifies the IDR interval. If not set, this is made equal to gopLength in NV_ENC_CONFIG.Low latency application client can set IDR interval to NVENC_INFINITE_GOPLENGTH so that IDR frames are not inserted automatically. *\/$/;"	m	struct:_NV_ENC_CONFIG_H264
ieee754_float32_t	lame/config.h	/^typedef float       ieee754_float32_t;$/;"	t
ieee754_float32_t	lame/configMS.h	/^typedef float       ieee754_float32_t;$/;"	t
ieee754_float32_t	lame/mac/Precompile_Common.h	31;"	d
ieee754_float64_t	lame/config.h	/^typedef double      ieee754_float64_t;$/;"	t
ieee754_float64_t	lame/configMS.h	/^typedef double      ieee754_float64_t;$/;"	t
ieee754_float64_t	lame/mac/Precompile_Common.h	30;"	d
ieee854_float80_t	lame/config.h	/^typedef long double ieee854_float80_t;$/;"	t
ieee854_float80_t	lame/configMS.h	/^typedef long double ieee854_float80_t;$/;"	t
ieee854_float80_t	lame/mac/Precompile_Common.h	29;"	d
ignore-tag-errors	lame/doc/html/detailed.html	/^<a name="ignore-tag-errors"><span class="hilight">--ignore-tag-errors<\/span><\/a> Ignore tag information errors$/;"	a
ignoreJump	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^static const BYTE ignoreJump[] = {0x90, 0x90};$/;"	v	file:
imageCX	DShowPlugin/DeviceSource.h	/^        UINT                        imageCX, imageCY;$/;"	m	struct:DeviceSource::<anonymous>
imageCX	DShowPlugin/DeviceSource.h	/^    UINT            imageCX, imageCY;$/;"	m	class:DeviceSource
imageCY	DShowPlugin/DeviceSource.h	/^        UINT                        imageCX, imageCY;$/;"	m	struct:DeviceSource::<anonymous>
imageCY	DShowPlugin/DeviceSource.h	/^    UINT            imageCX, imageCY;$/;"	m	class:DeviceSource
imageSourceClasses	Source/OBS.h	/^    List<ClassInfo> imageSourceClasses;$/;"	m	class:OBS
imageSourceFactories	CLRHostPlugin/CLRHostPlugin/CLRHostApi.h	/^    std::map<std::wstring, CLRImageSourceFactory *> imageSourceFactories;$/;"	m	class:CLRHostApi
imageSourceFactoryType	CLRHostPlugin/CLRHostPlugin/CLRHost.h	/^    mscorlib::_Type *imageSourceFactoryType;$/;"	m	class:CLRHost
imageSourceType	CLRHostPlugin/CLRHostPlugin/CLRHost.h	/^    mscorlib::_Type *imageSourceType;$/;"	m	class:CLRHost
imaxabs	extras/inttypes.h	249;"	d
imaxabs	lame/inttypes.h	249;"	d
imaxdiv	extras/inttypes.h	/^imaxdiv_t __cdecl imaxdiv(intmax_t numer, intmax_t denom)$/;"	f
imaxdiv	lame/inttypes.h	/^imaxdiv_t __cdecl imaxdiv(intmax_t numer, intmax_t denom)$/;"	f
imaxdiv_t	extras/inttypes.h	/^} imaxdiv_t;$/;"	t
imaxdiv_t	lame/inttypes.h	/^} imaxdiv_t;$/;"	t
img	x264/x264.h	/^    x264_image_t img;$/;"	m
imm	minhook/src/HDE32/hde32.h	/^    } imm;$/;"	m
imm	minhook/src/HDE64/include/hde64.h	/^    } imm;$/;"	m
imm16	minhook/src/HDE32/hde32.h	/^        uint16_t imm16;$/;"	m
imm16	minhook/src/HDE64/include/hde64.h	/^        uint16_t imm16;$/;"	m
imm32	minhook/src/HDE32/hde32.h	/^        uint32_t imm32;$/;"	m
imm32	minhook/src/HDE64/include/hde64.h	/^        uint32_t imm32;$/;"	m
imm64	minhook/src/HDE64/include/hde64.h	/^        uint64_t imm64;$/;"	m
imm8	minhook/src/HDE32/hde32.h	/^        uint8_t imm8;$/;"	m
imm8	minhook/src/HDE64/include/hde64.h	/^        uint8_t imm8;$/;"	m
impl	libmfx/include/mfx_dispatcher.h	/^    mfxIMPL impl;$/;"	m	struct:MFX_DISP_HANDLE
impl	libmfx/src/main.cpp	/^        mfxIMPL impl;$/;"	m	file:
implInterface	libmfx/include/mfx_dispatcher.h	/^    mfxIMPL implInterface;$/;"	m	struct:MFX_DISP_HANDLE
implStr	Source/Encoder_QSV.cpp	/^    const TCHAR* implStr[] = {$/;"	v
implType	libmfx/include/mfx_dispatcher.h	/^    eMfxImplType implType;$/;"	m	struct:MFX_DISP_HANDLE
implType	libmfx/src/main.cpp	/^        eMfxImplType implType;$/;"	m	file:
implTypes	libmfx/src/main.cpp	/^    } implTypes[] =$/;"	v
implTypesRange	libmfx/src/main.cpp	/^    } implTypesRange[] =$/;"	v
impl_parameters	QSVHelper/QSVHelper.cpp	/^    const struct impl_parameters$/;"	s	file:
impl_parameters	Source/Encoder_QSV.cpp	/^    const struct impl_parameters$/;"	s	file:
in	Source/mongoose.c	/^  unsigned char in[64];$/;"	m	struct:MD5Context	file:
inBufferSize	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t            inBufferSize;                    \/**< [in]:  Specifies the size of the spsppsBuffer provied by the client *\/$/;"	m	struct:_NV_ENC_SEQUENCE_PARAM_PAYLOAD
inPitch	Source/OBSVideoCapture.cpp	/^    int width, height, inPitch, outPitch, startY, endY;$/;"	m	struct:Convert444Data	file:
inSurf	ObsNvenc/inc/NVENCEncoder.h	/^    NVENCEncoderSurface *inSurf;$/;"	m	struct:NVENCEncoderOutputSurface
in_bitwidth	lame/frontend/main.h	/^    int     in_bitwidth;$/;"	m	struct:RawPCMConfig
in_buffer_0	lame/libmp3lame/util.h	/^        sample_t *in_buffer_0;$/;"	m
in_buffer_1	lame/libmp3lame/util.h	/^        sample_t *in_buffer_1;$/;"	m
in_buffer_nsamples	lame/libmp3lame/util.h	/^        int     in_buffer_nsamples;$/;"	m
in_count	libsamplerate/src_linear.c	/^	long	in_count, in_used ;$/;"	m	file:
in_count	libsamplerate/src_sinc.c	/^	long	in_count, in_used ;$/;"	m	file:
in_count	libsamplerate/src_zoh.c	/^	long	in_count, in_used ;$/;"	m	file:
in_endian	lame/frontend/main.h	/^    ByteOrder in_endian;$/;"	m	struct:RawPCMConfig
in_id3v2_size	lame/frontend/get_audio.c	/^    size_t  in_id3v2_size;$/;"	m	struct:get_audio_global_data_struct	file:
in_id3v2_tag	lame/frontend/get_audio.c	/^    unsigned char* in_id3v2_tag;$/;"	m	struct:get_audio_global_data_struct	file:
in_signed	lame/frontend/main.h	/^    int     in_signed;$/;"	m	struct:RawPCMConfig
in_used	libsamplerate/src_linear.c	/^	long	in_count, in_used ;$/;"	m	file:
in_used	libsamplerate/src_sinc.c	/^	long	in_count, in_used ;$/;"	m	file:
in_used	libsamplerate/src_zoh.c	/^	long	in_count, in_used ;$/;"	m	file:
inbuf_old	lame/libmp3lame/util.h	/^        sample_t *inbuf_old[2];$/;"	m
inc_scalefac_scale	lame/libmp3lame/quantize.c	/^inc_scalefac_scale(gr_info * const cod_info, FLOAT xrpow[576])$/;"	f	file:
inc_subblock_gain	lame/libmp3lame/quantize.c	/^inc_subblock_gain(const lame_internal_flags * const gfc, gr_info * const cod_info, FLOAT xrpow[576])$/;"	f	file:
include_option	lame/ACM/Makefile	/^	  include_option=--etags-include; \\$/;"	m
include_option	lame/ACM/Makefile	/^	  include_option=--include; \\$/;"	m
include_option	lame/Makefile	/^	  include_option=--etags-include; \\$/;"	m
include_option	lame/Makefile	/^	  include_option=--include; \\$/;"	m
include_option	lame/doc/Makefile	/^	  include_option=--etags-include; \\$/;"	m
include_option	lame/doc/Makefile	/^	  include_option=--include; \\$/;"	m
include_option	lame/libmp3lame/Makefile	/^	  include_option=--etags-include; \\$/;"	m
include_option	lame/libmp3lame/Makefile	/^	  include_option=--include; \\$/;"	m
include_option	lame/macosx/Makefile	/^	  include_option=--etags-include; \\$/;"	m
include_option	lame/macosx/Makefile	/^	  include_option=--include; \\$/;"	m
includedir	lame/ACM/ADbg/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	lame/ACM/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	lame/ACM/ddk/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	lame/ACM/tinyxml/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	lame/Dll/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	lame/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	lame/debian/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	lame/doc/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	lame/doc/html/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	lame/doc/man/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	lame/dshow/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	lame/frontend/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	lame/include/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	lame/libmp3lame/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	lame/libmp3lame/i386/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	lame/libmp3lame/vector/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	lame/mac/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	lame/macosx/English.lproj/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	lame/macosx/LAME.xcodeproj/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	lame/macosx/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	lame/misc/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	lame/mpglib/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	lame/vc_solution/Makefile	/^includedir = ${prefix}\/include$/;"	m
increment	libsamplerate/fastest_coeffs.h	/^{	int increment ;$/;"	m	struct:fastest_coeffs_s
increment	libsamplerate/high_qual_coeffs.h	/^{	int increment ;$/;"	m	struct:slow_high_qual_coeffs_s
increment	libsamplerate/mid_qual_coeffs.h	/^{	int increment ;$/;"	m	struct:slow_mid_qual_coeffs_s
increment_t	libsamplerate/src_sinc.c	/^typedef int32_t increment_t ;$/;"	t	file:
index	Source/D3D10ShaderProcessor.cpp	/^    UINT index;$/;"	m	struct:SemanticInfo	file:
index	libfaac/coder.h	/^    int index[TNS_MAX_ORDER+1];          \/* Coefficient indices *\/$/;"	m
index.html	lame/doc/html/index.html	1;"	F
index_inc	libsamplerate/src_sinc.c	/^	int		coeff_half_len, index_inc ;$/;"	m	file:
info	OBSApi/GraphicsSystem.h	/^    SamplerInfo info;$/;"	m	class:SamplerState
info	OBSApi/Utility/Profiler.h	/^    ProfileNodeInfo *info;$/;"	m	class:ProfilerNode
info	Source/mongoose.c	/^  WIN32_FIND_DATAW info;$/;"	m	struct:DIR	file:
info	librtmp/hashswf.c	/^struct info$/;"	s	file:
infoMem	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	/^CaptureInfo *infoMem = NULL;$/;"	v
infodir	lame/ACM/ADbg/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	lame/ACM/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	lame/ACM/ddk/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	lame/ACM/tinyxml/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	lame/Dll/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	lame/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	lame/debian/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	lame/doc/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	lame/doc/html/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	lame/doc/man/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	lame/dshow/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	lame/frontend/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	lame/include/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	lame/libmp3lame/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	lame/libmp3lame/i386/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	lame/libmp3lame/vector/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	lame/mac/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	lame/macosx/English.lproj/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	lame/macosx/LAME.xcodeproj/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	lame/macosx/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	lame/misc/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	lame/mpglib/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	lame/vc_solution/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
init	ObsNvenc/src/NVENCEncoder.cpp	/^void NVENCEncoder::init()$/;"	f	class:NVENCEncoder
init	lame/ACM/ACMStream.cpp	/^bool ACMStream::init(const int nSamplesPerSec, const int nOutputSamplesPerSec, const int nChannels, const int nAvgBytesPerSec, const vbr_mode mode)$/;"	f	class:ACMStream
init	lame/ACM/DecodeStream.cpp	/^bool DecodeStream::init(const int nSamplesPerSec, const int nChannels, const int nAvgBytesPerSec, const int nSourceBitrate)$/;"	f	class:DecodeStream
init	lame/misc/ath.c	/^    int             init;$/;"	m	file:
init	lame/misc/scalartest.c	/^void init ( void )$/;"	f
initEncodeParams	ObsNvenc/inc/NVENCEncoder.h	/^    NV_ENC_INITIALIZE_PARAMS initEncodeParams;$/;"	m	class:NVENCEncoder
initNvEnc	ObsNvenc/src/nvEncodeAPI.cpp	/^bool initNvEnc()$/;"	f
initPcmBuffer	lame/frontend/get_audio.c	/^initPcmBuffer(PcmBuffer * b, int w)$/;"	f	file:
init_bit_stream_w	lame/libmp3lame/bitstream.c	/^init_bit_stream_w(lame_internal_flags * gfc)$/;"	f
init_console	lame/frontend/console.c	/^init_console(Console_IO_t * const mfp)$/;"	f	file:
init_fft	lame/libmp3lame/fft.c	/^init_fft(lame_internal_flags * const gfc)$/;"	f
init_files	lame/frontend/lame_main.c	/^init_files(lame_global_flags * gf, char const *inPath, char const *outPath)$/;"	f	file:
init_infile	lame/frontend/get_audio.c	/^init_infile(lame_t gfp, char const *inPath)$/;"	f
init_log_table	lame/libmp3lame/util.c	/^init_log_table(void)$/;"	f
init_mask_add_max_values	lame/libmp3lame/psymodel.c	/^init_mask_add_max_values(void)$/;"	f	file:
init_numline	lame/libmp3lame/psymodel.c	/^init_numline(PsyConst_CB2SB_t * gd, FLOAT sfreq, int fft_size,$/;"	f	file:
init_outer_loop	lame/libmp3lame/quantize.c	/^init_outer_loop(lame_internal_flags const *gfc, gr_info * const cod_info)$/;"	f	file:
init_outfile	lame/frontend/get_audio.c	/^init_outfile(char const *outPath, int decode)$/;"	f
init_pts	Source/Encoder_QSV.cpp	/^        List<mfxI64> init_pts;$/;"	m	struct:<anonymous>::DTSGenerator	file:
init_request	QSVHelper/IPCStructs.h	/^struct init_request$/;"	s
init_response	QSVHelper/IPCStructs.h	/^struct init_response$/;"	s
init_s3_values	lame/libmp3lame/psymodel.c	/^init_s3_values(FLOAT ** p, int (*s3ind)[2], int npart,$/;"	f	file:
init_xrpow	lame/libmp3lame/quantize.c	/^init_xrpow(lame_internal_flags * gfc, gr_info * const cod_info, FLOAT xrpow[576])$/;"	f	file:
init_xrpow_core	lame/libmp3lame/util.h	/^        void    (*init_xrpow_core) (gr_info * const cod_info, FLOAT xrpow[576], int upper,$/;"	m	struct:lame_internal_flags
init_xrpow_core_c	lame/libmp3lame/quantize.c	/^init_xrpow_core_c(gr_info * const cod_info, FLOAT xrpow[576], int upper, FLOAT * sum)$/;"	f	file:
init_xrpow_core_init	lame/libmp3lame/quantize.c	/^init_xrpow_core_init(lame_internal_flags * const gfc)$/;"	f
init_xrpow_core_sse	lame/libmp3lame/vector/xmm_quantize_sub.c	/^init_xrpow_core_sse(gr_info * const cod_info, FLOAT xrpow[576], int upper, FLOAT * sum)$/;"	f
initialFrame	librtmp/rtmp.h	/^        char *initialFrame;$/;"	m	struct:RTMP_READ
initialFrameType	librtmp/rtmp.h	/^        uint8_t initialFrameType;$/;"	m	struct:RTMP_READ
initialPlugins	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserPluginManager.cs	/^        private List<BrowserPlugin> initialPlugins;$/;"	f	class:RemoteBrowser.BrowserPluginManager	file:
initialRCQP	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_QP                       initialRCQP;                                 \/**< [in]: Specifies the initial QP used for rate control. Client must set NV_ENC_CONFIG::enableInitialRCQP to 1. *\/$/;"	m	struct:_NV_ENC_RC_PARAMS
initialTimeStamp	Source/MP4FileStream.cpp	/^    DWORD           lastVideoTimestamp, initialTimeStamp;$/;"	m	class:MP4FileStream	file:
initialTimestamp	Source/FLVFileStream.cpp	/^    DWORD lastTimeStamp, initialTimestamp;$/;"	m	class:FLVFileStream	file:
injectHelper.c	injectHelper/injectHelper.c	1;"	F
injectHelperProcess	GraphicsCapture/GraphicsCaptureSource.h	/^    HANDLE injectHelperProcess;$/;"	m	class:GraphicsCaptureSource
inline	lame/libmp3lame/machine.h	102;"	d
inline	lame/libmp3lame/machine.h	106;"	d
inline	lame/libmp3lame/machine.h	107;"	d
inline	lame/libmp3lame/machine.h	110;"	d
inline	lame/libmp3lame/machine.h	111;"	d
inline	libsamplerate/config.h	207;"	d
input	DShowPlugin/DeviceSource.h	/^    LPBYTE input, output;$/;"	m	struct:ConvertData
input	Source/OBSVideoCapture.cpp	/^    LPBYTE input;$/;"	m	struct:Convert444Data	file:
inputBitsPerSample	OBSApi/AudioSource.h	/^    UINT  inputBitsPerSample;$/;"	m	class:AudioSource
inputBlockSize	OBSApi/AudioSource.h	/^    UINT  inputBlockSize;$/;"	m	class:AudioSource
inputBuffer	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_INPUT_PTR                            inputBuffer;                    \/**< [in]: Specifies the input buffer pointer. Client must use a pointer obtained from ::NvEncCreateInputBuffer() or ::NvEncMapInputResource() APIs.*\/$/;"	m	struct:_NV_ENC_PIC_PARAMS
inputBuffer	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_INPUT_PTR          inputBuffer;               \/**< [in]:  Pointer to the input buffer to be locked, client should pass the pointer obtained from ::NvEncCreateInputBuffer() or ::NvEncMapInputResource API. *\/$/;"	m	struct:_NV_ENC_LOCK_INPUT_BUFFER
inputBuffer	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_INPUT_PTR          inputBuffer;             \/**< [out]: Pointer to input buffer *\/$/;"	m	struct:_NV_ENC_CREATE_INPUT_BUFFER
inputBuffer	Source/Encoder_AAC.cpp	/^    List<float> inputBuffer;$/;"	m	class:AACEncoder	file:
inputBuffer	Source/MMDeviceAudioSource.cpp	/^    List<float> inputBuffer;$/;"	m	class:MMDeviceAudioSource	file:
inputBufferSize	Source/MMDeviceAudioSource.cpp	/^    UINT inputBufferSize;$/;"	m	class:MMDeviceAudioSource	file:
inputChannelMask	OBSApi/AudioSource.h	/^    DWORD inputChannelMask;$/;"	m	class:AudioSource
inputChannels	OBSApi/AudioSource.h	/^    UINT  inputChannels;$/;"	m	class:AudioSource
inputDevice	DShowPlugin/IVideoCaptureFilter.h	/^    VIDEO_CAPTURE_FILTER_INPUT_DEVICE    inputDevice;                       \/\/!< Input device (e.g. Xbox360)$/;"	m	struct:_VIDEO_CAPTURE_FILTER_SETTINGS
inputDuration	ObsNvenc/inc/nvEncodeAPI.h	/^    uint64_t                                    inputDuration;                  \/**< [in]: Specifies duration of the input picture *\/$/;"	m	struct:_NV_ENC_PIC_PARAMS
inputFormat	libfaac/include/faaccfg.h	/^    unsigned int inputFormat;$/;"	m	struct:faacEncConfiguration
inputHeight	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                                    inputHeight;                    \/**< [in]: Specifies the input buffer height *\/$/;"	m	struct:_NV_ENC_PIC_PARAMS
inputLayout	Source/D3D10System.h	/^    ID3D10InputLayout  *inputLayout;$/;"	m	class:D3D10VertexShader
inputPitch	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                                    inputPitch;                     \/**< [in]: Specifies the input buffer pitch. If pitch value is not known, set this to inputWidth. *\/$/;"	m	struct:_NV_ENC_PIC_PARAMS
inputPriority	DShowPlugin/MediaInfoStuff.cpp	/^const int inputPriority[] =$/;"	v
inputResource	ObsNvenc/inc/nvEncodeAPI.h	/^    void*                      inputResource;             \/**< [in]:  Deprecated. Do not use. *\/$/;"	m	struct:_NV_ENC_MAP_INPUT_RESOURCE
inputSamplesPerSec	OBSApi/AudioSource.h	/^    UINT  inputSamplesPerSec;$/;"	m	class:AudioSource
inputStream	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/AssetSchemeHandler.cs	/^        private Stream inputStream;$/;"	f	class:RemoteBrowser.AssetSchemeHandler	file:
inputSurface	ObsNvenc/inc/NVENCEncoder.h	/^    NV_ENC_INPUT_PTR inputSurface;$/;"	m	struct:NVENCEncoderSurface
inputSurfaces	ObsNvenc/inc/NVENCEncoder.h	/^    NVENCEncoderSurface *inputSurfaces;$/;"	m	class:NVENCEncoder
inputTimeStamp	ObsNvenc/inc/nvEncodeAPI.h	/^    uint64_t                                    inputTimeStamp;                 \/**< [in]: Specifies presentation timestamp associated with the input picture. *\/$/;"	m	struct:_NV_ENC_PIC_PARAMS
inputTimestamp	ObsNvenc/inc/NVENCEncoder.h	/^    uint64_t inputTimestamp;$/;"	m	struct:NVENCEncoderOutputSurface
inputWidth	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                                    inputWidth;                     \/**< [in]: Specifies the input buffer width *\/$/;"	m	struct:_NV_ENC_PIC_PARAMS
input_format	lame/frontend/main.h	/^    sound_file_format input_format;$/;"	m	struct:ReaderConfig
input_frames	libsamplerate/samplerate.h	/^	long	input_frames, output_frames ;$/;"	m
input_frames_used	libsamplerate/samplerate.h	/^	long	input_frames_used, output_frames_gen ;$/;"	m
input_index	libsamplerate/src_sinc.c	/^	double	src_ratio, input_index ;$/;"	m	file:
input_samplerate	lame/frontend/main.h	/^    int   input_samplerate;$/;"	m	struct:ReaderConfig
insert	libmfx/include/mfx_vector.h	/^        void insert(iterator where, iterator beg_iter, iterator end_iter) $/;"	f	class:MFX::MFXVector
install-sh	lame/install-sh	1;"	F
install_sh	lame/ACM/ADbg/Makefile	/^install_sh = ${SHELL} \/d\/projects\/opensplit\/lame\/install-sh$/;"	m
install_sh	lame/ACM/Makefile	/^install_sh = ${SHELL} \/d\/projects\/opensplit\/lame\/install-sh$/;"	m
install_sh	lame/ACM/ddk/Makefile	/^install_sh = ${SHELL} \/d\/projects\/opensplit\/lame\/install-sh$/;"	m
install_sh	lame/ACM/tinyxml/Makefile	/^install_sh = ${SHELL} \/d\/projects\/opensplit\/lame\/install-sh$/;"	m
install_sh	lame/Dll/Makefile	/^install_sh = ${SHELL} \/d\/projects\/opensplit\/lame\/install-sh$/;"	m
install_sh	lame/Makefile	/^install_sh = ${SHELL} \/d\/projects\/opensplit\/lame\/install-sh$/;"	m
install_sh	lame/debian/Makefile	/^install_sh = ${SHELL} \/d\/projects\/opensplit\/lame\/install-sh$/;"	m
install_sh	lame/doc/Makefile	/^install_sh = ${SHELL} \/d\/projects\/opensplit\/lame\/install-sh$/;"	m
install_sh	lame/doc/html/Makefile	/^install_sh = ${SHELL} \/d\/projects\/opensplit\/lame\/install-sh$/;"	m
install_sh	lame/doc/man/Makefile	/^install_sh = ${SHELL} \/d\/projects\/opensplit\/lame\/install-sh$/;"	m
install_sh	lame/dshow/Makefile	/^install_sh = ${SHELL} \/d\/projects\/opensplit\/lame\/install-sh$/;"	m
install_sh	lame/frontend/Makefile	/^install_sh = ${SHELL} \/d\/projects\/opensplit\/lame\/install-sh$/;"	m
install_sh	lame/include/Makefile	/^install_sh = ${SHELL} \/d\/projects\/opensplit\/lame\/install-sh$/;"	m
install_sh	lame/libmp3lame/Makefile	/^install_sh = ${SHELL} \/d\/projects\/opensplit\/lame\/install-sh$/;"	m
install_sh	lame/libmp3lame/i386/Makefile	/^install_sh = ${SHELL} \/d\/projects\/opensplit\/lame\/install-sh$/;"	m
install_sh	lame/libmp3lame/vector/Makefile	/^install_sh = ${SHELL} \/d\/projects\/opensplit\/lame\/install-sh$/;"	m
install_sh	lame/mac/Makefile	/^install_sh = ${SHELL} \/d\/projects\/opensplit\/lame\/install-sh$/;"	m
install_sh	lame/macosx/English.lproj/Makefile	/^install_sh = ${SHELL} \/d\/projects\/opensplit\/lame\/install-sh$/;"	m
install_sh	lame/macosx/LAME.xcodeproj/Makefile	/^install_sh = ${SHELL} \/d\/projects\/opensplit\/lame\/install-sh$/;"	m
install_sh	lame/macosx/Makefile	/^install_sh = ${SHELL} \/d\/projects\/opensplit\/lame\/install-sh$/;"	m
install_sh	lame/misc/Makefile	/^install_sh = ${SHELL} \/d\/projects\/opensplit\/lame\/install-sh$/;"	m
install_sh	lame/mpglib/Makefile	/^install_sh = ${SHELL} \/d\/projects\/opensplit\/lame\/install-sh$/;"	m
install_sh	lame/vc_solution/Makefile	/^install_sh = ${SHELL} \/d\/projects\/opensplit\/lame\/install-sh$/;"	m
install_sh_DATA	lame/ACM/ADbg/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	lame/ACM/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	lame/ACM/ddk/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	lame/ACM/tinyxml/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	lame/Dll/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	lame/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	lame/debian/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	lame/doc/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	lame/doc/html/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	lame/doc/man/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	lame/dshow/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	lame/frontend/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	lame/include/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	lame/libmp3lame/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	lame/libmp3lame/i386/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	lame/libmp3lame/vector/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	lame/mac/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	lame/macosx/English.lproj/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	lame/macosx/LAME.xcodeproj/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	lame/macosx/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	lame/misc/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	lame/mpglib/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	lame/vc_solution/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_PROGRAM	lame/ACM/ADbg/Makefile	/^	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \\$/;"	m
install_sh_PROGRAM	lame/ACM/ADbg/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	lame/ACM/Makefile	/^	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \\$/;"	m
install_sh_PROGRAM	lame/ACM/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	lame/ACM/ddk/Makefile	/^	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \\$/;"	m
install_sh_PROGRAM	lame/ACM/ddk/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	lame/ACM/tinyxml/Makefile	/^	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \\$/;"	m
install_sh_PROGRAM	lame/ACM/tinyxml/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	lame/Dll/Makefile	/^	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \\$/;"	m
install_sh_PROGRAM	lame/Dll/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	lame/Makefile	/^	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \\$/;"	m
install_sh_PROGRAM	lame/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	lame/debian/Makefile	/^	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \\$/;"	m
install_sh_PROGRAM	lame/debian/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	lame/doc/Makefile	/^	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \\$/;"	m
install_sh_PROGRAM	lame/doc/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	lame/doc/html/Makefile	/^	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \\$/;"	m
install_sh_PROGRAM	lame/doc/html/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	lame/doc/man/Makefile	/^	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \\$/;"	m
install_sh_PROGRAM	lame/doc/man/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	lame/dshow/Makefile	/^	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \\$/;"	m
install_sh_PROGRAM	lame/dshow/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	lame/frontend/Makefile	/^	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \\$/;"	m
install_sh_PROGRAM	lame/frontend/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	lame/include/Makefile	/^	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \\$/;"	m
install_sh_PROGRAM	lame/include/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	lame/libmp3lame/Makefile	/^	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \\$/;"	m
install_sh_PROGRAM	lame/libmp3lame/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	lame/libmp3lame/i386/Makefile	/^	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \\$/;"	m
install_sh_PROGRAM	lame/libmp3lame/i386/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	lame/libmp3lame/vector/Makefile	/^	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \\$/;"	m
install_sh_PROGRAM	lame/libmp3lame/vector/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	lame/mac/Makefile	/^	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \\$/;"	m
install_sh_PROGRAM	lame/mac/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	lame/macosx/English.lproj/Makefile	/^	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \\$/;"	m
install_sh_PROGRAM	lame/macosx/English.lproj/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	lame/macosx/LAME.xcodeproj/Makefile	/^	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \\$/;"	m
install_sh_PROGRAM	lame/macosx/LAME.xcodeproj/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	lame/macosx/Makefile	/^	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \\$/;"	m
install_sh_PROGRAM	lame/macosx/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	lame/misc/Makefile	/^	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \\$/;"	m
install_sh_PROGRAM	lame/misc/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	lame/mpglib/Makefile	/^	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \\$/;"	m
install_sh_PROGRAM	lame/mpglib/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	lame/vc_solution/Makefile	/^	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \\$/;"	m
install_sh_PROGRAM	lame/vc_solution/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_SCRIPT	lame/ACM/ADbg/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	lame/ACM/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	lame/ACM/ddk/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	lame/ACM/tinyxml/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	lame/Dll/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	lame/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	lame/debian/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	lame/doc/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	lame/doc/html/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	lame/doc/man/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	lame/dshow/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	lame/frontend/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	lame/include/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	lame/libmp3lame/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	lame/libmp3lame/i386/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	lame/libmp3lame/vector/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	lame/mac/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	lame/macosx/English.lproj/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	lame/macosx/LAME.xcodeproj/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	lame/macosx/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	lame/misc/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	lame/mpglib/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	lame/vc_solution/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
instance	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserManager.cs	/^        private static BrowserManager instance;$/;"	f	class:Browser.BrowserManager	file:
instance	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        private static BrowserSettings instance;$/;"	f	class:Shared.BrowserSettings	file:
instance	CLRHostPlugin/CLRHostInterop/API.h	/^        static API^ instance = nullptr;$/;"	m	class:CLROBS::API
instance	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        static GraphicsSystem^ instance = nullptr;$/;"	m	class:CLROBS::GSSampleFilter::GSAddressMode::GraphicsSystem
instance	CLRHostPlugin/CLRHostPlugin/CLRHostPlugin.cpp	/^CLRHostPlugin *CLRHostPlugin::instance = NULL;$/;"	m	class:CLRHostPlugin	file:
instance	CLRHostPlugin/CLRHostPlugin/CLRHostPlugin.h	/^    static CLRHostPlugin *instance;$/;"	m	class:CLRHostPlugin
instance	NoiseGate/NoiseGate.cpp	/^NoiseGate *NoiseGate::instance = NULL;$/;"	m	class:NoiseGate	file:
instance	NoiseGate/NoiseGate.h	/^    static NoiseGate *  instance;$/;"	m	class:NoiseGate
int16_t	ObsNvenc/inc/nvEncodeAPI.h	/^typedef short int16_t;$/;"	t
int16_t	extras/stdint.h	/^typedef short  int16_t;$/;"	t
int16_t	lame/config.h	/^	typedef __int16 int16_t;$/;"	t
int16_t	lame/config.h	77;"	d
int16_t	lame/configMS.h	/^	typedef __int16 int16_t;$/;"	t
int16_t	lame/configMS.h	77;"	d
int16_t	lame/stdint.h	/^typedef short  int16_t;$/;"	t
int16_t	librtmp/stdint.h	/^typedef short  int16_t;$/;"	t
int16_t	minhook/src/pstdint.h	/^  typedef signed int int16_t;$/;"	t
int16_t	minhook/src/pstdint.h	/^  typedef signed short int16_t;$/;"	t
int32_t	ObsNvenc/inc/nvEncodeAPI.h	/^typedef __int32 int32_t;$/;"	t
int32_t	extras/stdint.h	/^typedef int  int32_t;$/;"	t
int32_t	lame/config.h	/^	typedef __int32 int32_t;$/;"	t
int32_t	lame/config.h	78;"	d
int32_t	lame/configMS.h	/^	typedef __int32 int32_t;$/;"	t
int32_t	lame/configMS.h	78;"	d
int32_t	lame/stdint.h	/^typedef int  int32_t;$/;"	t
int32_t	libfaac/frame.h	/^typedef signed int int32_t;$/;"	t
int32_t	libfaac/include/faac.h	/^typedef signed int int32_t;$/;"	t
int32_t	librtmp/stdint.h	/^typedef int  int32_t;$/;"	t
int32_t	libsamplerate/common.h	/^typedef	int		int32_t ;$/;"	t
int32_t	libsamplerate/common.h	/^typedef	long	int32_t ;$/;"	t
int32_t	minhook/src/pstdint.h	/^  typedef signed int int32_t;$/;"	t
int32_t	minhook/src/pstdint.h	/^  typedef signed long int32_t;$/;"	t
int32_t	minhook/src/pstdint.h	/^  typedef signed short int32_t;$/;"	t
int64_t	ObsNvenc/inc/nvEncodeAPI.h	/^typedef __int64 int64_t;$/;"	t
int64_t	Source/mongoose.c	/^typedef __int64   int64_t;$/;"	t	file:
int64_t	extras/stdint.h	/^typedef __int64  int64_t;$/;"	t
int64_t	lame/config.h	/^	typedef __int64 int64_t;$/;"	t
int64_t	lame/config.h	79;"	d
int64_t	lame/configMS.h	/^	typedef __int64 int64_t;$/;"	t
int64_t	lame/configMS.h	79;"	d
int64_t	lame/stdint.h	/^typedef __int64  int64_t;$/;"	t
int64_t	librtmp/stdint.h	/^typedef __int64  int64_t;$/;"	t
int64_t	minhook/src/pstdint.h	/^   __extension__ typedef long long int64_t;$/;"	t
int64_t	minhook/src/pstdint.h	/^   typedef __int64 int64_t;$/;"	t
int64_t	minhook/src/pstdint.h	/^   typedef long long int64_t;$/;"	t
int8_t	ObsNvenc/inc/nvEncodeAPI.h	/^typedef signed char int8_t;$/;"	t
int8_t	extras/stdint.h	/^typedef signed char int8_t;$/;"	t
int8_t	lame/config.h	/^	typedef __int8  int8_t;$/;"	t
int8_t	lame/config.h	76;"	d
int8_t	lame/configMS.h	/^	typedef __int8  int8_t;$/;"	t
int8_t	lame/configMS.h	76;"	d
int8_t	lame/stdint.h	/^typedef signed char int8_t;$/;"	t
int8_t	librtmp/stdint.h	/^typedef signed char int8_t;$/;"	t
int8_t	minhook/src/pstdint.h	/^    typedef signed char int8_t;$/;"	t
int_fast16_t	extras/stdint.h	/^typedef short  int_fast16_t;$/;"	t
int_fast16_t	lame/stdint.h	/^typedef short  int_fast16_t;$/;"	t
int_fast16_t	librtmp/stdint.h	/^typedef short  int_fast16_t;$/;"	t
int_fast16_t	minhook/src/pstdint.h	/^typedef  int_least16_t  int_fast16_t;$/;"	t
int_fast32_t	extras/stdint.h	/^typedef int  int_fast32_t;$/;"	t
int_fast32_t	lame/stdint.h	/^typedef int  int_fast32_t;$/;"	t
int_fast32_t	librtmp/stdint.h	/^typedef int  int_fast32_t;$/;"	t
int_fast32_t	minhook/src/pstdint.h	/^typedef  int_least32_t  int_fast32_t;$/;"	t
int_fast64_t	extras/stdint.h	/^typedef __int64  int_fast64_t;$/;"	t
int_fast64_t	lame/stdint.h	/^typedef __int64  int_fast64_t;$/;"	t
int_fast64_t	librtmp/stdint.h	/^typedef __int64  int_fast64_t;$/;"	t
int_fast64_t	minhook/src/pstdint.h	/^  typedef  int_least64_t  int_fast64_t;$/;"	t
int_fast8_t	extras/stdint.h	/^typedef char int_fast8_t;$/;"	t
int_fast8_t	lame/stdint.h	/^typedef char int_fast8_t;$/;"	t
int_fast8_t	librtmp/stdint.h	/^typedef char int_fast8_t;$/;"	t
int_fast8_t	minhook/src/pstdint.h	/^typedef   int_least8_t   int_fast8_t;$/;"	t
int_least16_t	extras/stdint.h	/^typedef short  int_least16_t;$/;"	t
int_least16_t	lame/stdint.h	/^typedef short  int_least16_t;$/;"	t
int_least16_t	librtmp/stdint.h	/^typedef short  int_least16_t;$/;"	t
int_least16_t	minhook/src/pstdint.h	/^  typedef  int16_t  int_least16_t;$/;"	t
int_least32_t	extras/stdint.h	/^typedef int  int_least32_t;$/;"	t
int_least32_t	lame/stdint.h	/^typedef int  int_least32_t;$/;"	t
int_least32_t	librtmp/stdint.h	/^typedef int  int_least32_t;$/;"	t
int_least32_t	minhook/src/pstdint.h	/^  typedef  int32_t  int_least32_t;$/;"	t
int_least64_t	extras/stdint.h	/^typedef __int64  int_least64_t;$/;"	t
int_least64_t	lame/stdint.h	/^typedef __int64  int_least64_t;$/;"	t
int_least64_t	librtmp/stdint.h	/^typedef __int64  int_least64_t;$/;"	t
int_least64_t	minhook/src/pstdint.h	/^    typedef  int64_t  int_least64_t;$/;"	t
int_least8_t	extras/stdint.h	/^typedef signed char int_least8_t;$/;"	t
int_least8_t	lame/stdint.h	/^typedef signed char int_least8_t;$/;"	t
int_least8_t	librtmp/stdint.h	/^typedef signed char int_least8_t;$/;"	t
int_least8_t	minhook/src/pstdint.h	/^  typedef   int8_t   int_least8_t;$/;"	t
int_to_fp	libsamplerate/src_sinc.c	/^int_to_fp (int x)$/;"	f	file:
inter	x264/x264.h	/^        unsigned int inter;     \/* inter partitions *\/$/;"	m	struct:x264_param_t::<anonymous>
interChRatio	lame/libmp3lame/lame_global_flags.h	/^    float   interChRatio;$/;"	m	struct:lame_global_struct
interChRatio	lame/libmp3lame/util.h	/^        float   interChRatio;$/;"	m
interch	lame/libmp3lame/presets.c	/^    FLOAT   interch;$/;"	m	file:
interface.c	lame/mpglib/interface.c	1;"	F
interface.h	lame/mpglib/interface.h	1;"	F
interfaceVersion	DShowPlugin/IVideoCaptureFilter.h	/^	DWORD								interfaceVersion;					\/\/!< Clients need to set this value to VIDEO_CAPTURE_FILTER_INTERFACE_VERSION$/;"	m	struct:_VIDEO_CAPTURE_FILTER_SETTINGS_EX
internal_flags	lame/libmp3lame/lame_global_flags.h	/^    lame_internal_flags *internal_flags;$/;"	m	struct:lame_global_struct
internal_opts_enabled	lame/frontend/parse.c	/^static int const internal_opts_enabled = INTERNAL_OPTS;$/;"	v	file:
intf	QSVHelper/QSVHelper.cpp	/^                intf;$/;"	m	struct:<anonymous>::impl_parameters	file:
intf	Source/Encoder_QSV.cpp	/^               intf;$/;"	m	struct:<anonymous>::impl_parameters	file:
intmax_t	extras/stdint.h	/^typedef __int64  intmax_t;$/;"	t
intmax_t	lame/stdint.h	/^typedef __int64  intmax_t;$/;"	t
intmax_t	librtmp/stdint.h	/^typedef __int64  intmax_t;$/;"	t
intmax_t	minhook/src/pstdint.h	/^  typedef int32_t intmax_t;$/;"	t
intmax_t	minhook/src/pstdint.h	/^  typedef int64_t intmax_t;$/;"	t
intptr_t	minhook/src/pstdint.h	/^  typedef ptrdiff_t intptr_t;$/;"	t
intra	x264/x264.h	/^        unsigned int intra;     \/* intra partitions *\/$/;"	m	struct:x264_param_t::<anonymous>
intraRefreshCnt	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                            intraRefreshCnt;            \/**< [in]: Specifies the length of intra refresh in number of frames for periodic intra refresh. This value should be smaller than intraRefreshPeriod *\/$/;"	m	struct:_NV_ENC_CONFIG_H264
intraRefreshPeriod	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                            intraRefreshPeriod;         \/**< [in]: Specifies the interval between successive intra refresh if enableIntrarefresh is set. Requires enableIntraRefresh to be set.$/;"	m	struct:_NV_ENC_CONFIG_H264
introduction.html	lame/doc/html/introduction.html	1;"	F
inttypes.h	extras/inttypes.h	1;"	F
inttypes.h	lame/inttypes.h	1;"	F
inv_cubic_f	lame/misc/ath.c	/^static long double inv_cubic_f     ( long double x ) { return x*x*x;  }$/;"	f	file:
inv_erb_f	lame/misc/ath.c	/^static long double inv_erb_f       ( long double x ) { return (exp(x) - 1.) * (1.\/0.00437); }$/;"	f	file:
inv_func	lame/misc/ath.c	/^const converter_fn_t  inv_func [] = { inv_linear_f, inv_logarithm_f, inv_square_f, inv_cubic_f, inv_erb_f, inv_recip_f };$/;"	v
inv_linear_f	lame/misc/ath.c	/^static long double inv_linear_f    ( long double x ) { return x;  }$/;"	f	file:
inv_logarithm_f	lame/misc/ath.c	/^static long double inv_logarithm_f ( long double x ) { return pow (10., x);  }$/;"	f	file:
inv_recip_f	lame/misc/ath.c	/^static long double inv_recip_f     ( long double x ) { return x > 1.L  ?  1.L\/x         :  1.0L; }$/;"	f	file:
inv_square_f	lame/misc/ath.c	/^static long double inv_square_f    ( long double x ) { return x*x;  }$/;"	f	file:
inverse	libfaac/kiss_fft/_kiss_fft_guts.h	/^    int inverse;$/;"	m	struct:kiss_fft_state
invertShader	GraphicsCapture/GraphicsCaptureSource.h	/^    Shader *invertShader, *drawShader;$/;"	m	class:GraphicsCaptureSource
iobuf	Source/mongoose.c	/^struct iobuf {$/;"	s	file:
iobuf_append	Source/mongoose.c	/^size_t iobuf_append(struct iobuf *io, const void *buf, size_t len) {$/;"	f
iobuf_free	Source/mongoose.c	/^void iobuf_free(struct iobuf *iobuf) {$/;"	f
iobuf_init	Source/mongoose.c	/^void iobuf_init(struct iobuf *iobuf, size_t initial_size) {$/;"	f
iobuf_remove	Source/mongoose.c	/^void iobuf_remove(struct iobuf *io, size_t n) {$/;"	f
iobuf_resize	Source/mongoose.c	/^void iobuf_resize(struct iobuf *io, size_t new_size) {$/;"	f
ipc_bitstream_buff	QSVHelper/IPCInfo.h	/^typedef NamedSharedMemory                           ipc_bitstream_buff;$/;"	t
ipc_bitstream_info	QSVHelper/IPCInfo.h	/^typedef IPCArray<bitstream_info>                    ipc_bitstream_info;$/;"	t
ipc_encoder_flushed	QSVHelper/IPCInfo.h	/^typedef IPCSignal<true>                             ipc_encoder_flushed;$/;"	t
ipc_filled_bitstream	QSVHelper/IPCInfo.h	/^typedef IPCLockedSignalledType<int32_t>             ipc_filled_bitstream;$/;"	t
ipc_frame_buff	QSVHelper/IPCInfo.h	/^typedef NamedSharedMemory                           ipc_frame_buff;$/;"	t
ipc_frame_buff_status	QSVHelper/IPCInfo.h	/^typedef IPCLockedSignalledArray<uint32_t>           ipc_frame_buff_status;$/;"	t
ipc_frame_queue	QSVHelper/IPCInfo.h	/^typedef IPCLockedSignalledArray<queued_frame>       ipc_frame_queue;$/;"	t
ipc_init_request	QSVHelper/IPCInfo.h	/^typedef IPCSignalledType<init_request>              ipc_init_request;$/;"	t
ipc_init_response	QSVHelper/IPCInfo.h	/^typedef IPCSignalledType<init_response>             ipc_init_response;$/;"	t
ipc_pps_buff	QSVHelper/IPCInfo.h	/^typedef IPCArray<mfxU8>                             ipc_pps_buff;$/;"	t
ipc_sps_buff	QSVHelper/IPCInfo.h	/^typedef IPCArray<mfxU8>                             ipc_sps_buff;$/;"	t
ipc_spspps_size	QSVHelper/IPCInfo.h	/^typedef IPCSignalledType<spspps_size>               ipc_spspps_size;$/;"	t
ipc_stop	QSVHelper/IPCInfo.h	/^typedef IPCSignal<true>                             ipc_stop;$/;"	t
ipow20	lame/libmp3lame/quantize_pvt.c	/^FLOAT   ipow20[Q_MAX];$/;"	v
ir	lame/frontend/Makefile	/^	    if test "$$dir" = .; then dir=; else dir=\/$$dir; fi; \\$/;"	m
isAlive	ObsNvenc/inc/NVENCEncoder.h	/^    bool isAlive() { return alive; }$/;"	f	class:NVENCEncoder
isAllocated	QSVHelper/IntelSupport/include/d3d11_allocator.h	/^        static bool isAllocated (TextureResource & that)$/;"	f	struct:D3D11FrameAllocator::TextureResource
isAssetWrapping	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/AssetSchemeHandler.cs	/^        private Boolean isAssetWrapping;$/;"	f	class:RemoteBrowser.AssetSchemeHandler	file:
isCommonSuffix	lame/frontend/parse.c	/^int isCommonSuffix(char const* s_ext)$/;"	f	file:
isComplete	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/AssetSchemeHandler.cs	/^        private bool isComplete;$/;"	f	class:RemoteBrowser.AssetSchemeHandler	file:
isDisabledFromConfig	NoiseGate/NoiseGate.h	/^    bool                isDisabledFromConfig;$/;"	m	class:NoiseGate
isDynamicLocale	CLRHostPlugin/CLRHostPlugin/CLRHostPlugin.h	/^    bool isDynamicLocale;$/;"	m	class:CLRHostPlugin
isEnabled	NoiseGate/NoiseGate.h	/^    bool    isEnabled;$/;"	m	class:NoiseGate
isEnabled	minhook/src/hook.cpp	/^		bool	isEnabled;$/;"	m	struct:MinHook::<anonymous>::HOOK_ENTRY	file:
isFrameIdMatching	lame/libmp3lame/id3tag.c	/^isFrameIdMatching(int id, int mask)$/;"	f	file:
isInitialized	CLRHostPlugin/CLRHostPlugin/CLRHost.h	/^    bool isInitialized;$/;"	m	class:CLRHost
isLibraryLoaded	CLRHostPlugin/CLRHostPlugin/CLRHost.h	/^    bool isLibraryLoaded;$/;"	m	class:CLRHost
isMultiFrame	lame/libmp3lame/id3tag.c	/^isMultiFrame(uint32_t frame_id)$/;"	f	file:
isMultiThreadedMessageLoop	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserManager.cs	/^        private bool isMultiThreadedMessageLoop;$/;"	f	class:Browser.BrowserManager	file:
isObjectRefNull	CLRHostPlugin/CLRHostPlugin/CLRObjectRef.h	/^    bool isObjectRefNull() { return objectRef == nullptr; }$/;"	f	class:CLRObjectRef
isOpen	NoiseGate/NoiseGate.h	/^    bool    isOpen;$/;"	m	class:NoiseGateFilter
isQSV	ObsNvenc/src/NVENCEncoder.cpp	/^bool NVENCEncoder::isQSV()$/;"	f	class:NVENCEncoder
isQSV	Source/Encoder_QSV.cpp	/^    virtual bool isQSV() { return true; }$/;"	f	class:QSVEncoder
isQSV	Source/OBS.h	/^    virtual bool isQSV() { return false; }$/;"	f	class:VideoEncoder
isRead	QSVHelper/IntelSupport/include/d3d11_allocator.h	/^    bool isRead() const$/;"	f	class:MFXReadWriteMid
isReady	DShowPlugin/DeviceSource.h	/^        bool                        isReady;$/;"	m	struct:DeviceSource::<anonymous>
isReady	OBSApi/GraphicsSystem.h	/^    bool isReady = false;$/;"	m	class:FutureShader
isResamplingNecessary	lame/libmp3lame/util.c	/^isResamplingNecessary(SessionConfig_t const* cfg)$/;"	f
isSameDescriptor	lame/libmp3lame/id3tag.c	/^isSameDescriptor(FrameDataNode const *node, char const *dsc)$/;"	f	file:
isSameDescriptorUcs2	lame/libmp3lame/id3tag.c	/^isSameDescriptorUcs2(FrameDataNode const *node, unsigned short const *dsc)$/;"	f	file:
isSameLang	lame/libmp3lame/id3tag.c	/^isSameLang(char const *l1, char const *l2)$/;"	f	file:
isShutdown	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/SimpleDispatcher.cs	/^        private bool isShutdown;$/;"	f	class:RemoteBrowser.SimpleDispatcher	file:
isSingleProcess	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserManager.cs	/^        private bool isSingleProcess;$/;"	f	class:Browser.BrowserManager	file:
isStereo	Source/OBS.h	/^    BOOL isStereo;$/;"	m	class:OBS
isTypeRefNull	CLRHostPlugin/CLRHostPlugin/CLRObjectRef.h	/^    bool isTypeRefNull() { return typeRef == nullptr; }$/;"	f	class:CLRObjectRef
isValidPublicKey	librtmp/dh.h	/^isValidPublicKey(MP_t y, MP_t p, MP_t q)$/;"	f
isWrite	QSVHelper/IntelSupport/include/d3d11_allocator.h	/^    bool isWrite() const$/;"	f	class:MFXReadWriteMid
is_authorized	Source/mongoose.c	/^static int is_authorized(struct connection *conn, const char *path,$/;"	f	file:
is_authorized_for_dav	Source/mongoose.c	/^static int is_authorized_for_dav(struct connection *conn) {$/;"	f	file:
is_bad_src_ratio	libsamplerate/samplerate.c	/^is_bad_src_ratio (double ratio)$/;"	f	file:
is_big_endian	Source/mongoose.c	/^static int is_big_endian(void) {$/;"	f	file:
is_dav_request	Source/mongoose.c	/^static int is_dav_request(const struct connection *conn) {$/;"	f	file:
is_lame_global_flags_valid	lame/libmp3lame/lame.c	/^is_lame_global_flags_valid(const lame_global_flags * gfp)$/;"	f
is_lame_internal_flags_valid	lame/libmp3lame/lame.c	/^is_lame_internal_flags_valid(const lame_internal_flags * gfc)$/;"	f
is_mpeg_file_format	lame/frontend/get_audio.c	/^is_mpeg_file_format(int input_file_format)$/;"	f
is_new	QSVHelper/IPCStructs.h	/^    bool is_new;$/;"	m	struct:queued_frame
is_not_modified	Source/mongoose.c	/^static int is_not_modified(const struct connection *conn,$/;"	f	file:
is_present	libfaac/channels.h	/^    int is_present;$/;"	m
is_signalled	QSVHelper/WindowsStuff.h	/^    bool is_signalled(DWORD timeout=0) { return WaitForSingleObject(signal_, timeout) == WAIT_OBJECT_0; }$/;"	f	struct:IPCSignal
is_syncword_mp123	lame/frontend/get_audio.c	/^is_syncword_mp123(const void *const headerptr)$/;"	f	file:
is_valid_http_method	Source/mongoose.c	/^static int is_valid_http_method(const char *s) {$/;"	f	file:
is_valid_uri	Source/mongoose.c	/^static int is_valid_uri(const char *uri) {$/;"	f	file:
is_websocket	Source/mongoose.h	/^  int is_websocket;           \/\/ Connection is a websocket connection$/;"	m	struct:mg_connection
isbyte	Source/mongoose.c	/^static int isbyte(int n) {$/;"	f	file:
ispow	lame/mpglib/layer3.c	/^static real ispow[8207];$/;"	v	file:
issuedQueries	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^bool                    issuedQueries[NUM_BUFFERS] = ZERO_ARRAY;$/;"	v
ist	lame/doc/man/Makefile	/^	  if test "$$base" = "$$inst"; then list="$$list $$file"; else \\$/;"	m
iter2	Source/mongoose.c	/^static void iter2(struct ns_connection *nc, int ev, void *param) {$/;"	f	file:
iterate_amplifier	lame/misc/ath.c	/^long double iterate_amplifier ( amplitude_t* const a )$/;"	f
iterate_generator	lame/misc/ath.c	/^long double  iterate_generator ( generator_t* const g )$/;"	f
iteration_finish_one	lame/libmp3lame/quantize.c	/^iteration_finish_one(lame_internal_flags * gfc, int gr, int ch)$/;"	f	file:
iteration_init	lame/libmp3lame/quantize_pvt.c	/^iteration_init(lame_internal_flags * gfc)$/;"	f
iteration_init_init	lame/libmp3lame/util.h	/^        int     iteration_init_init;$/;"	m	struct:lame_internal_flags
iteration_loop	lame/libmp3lame/util.h	/^        iteration_loop_t iteration_loop;$/;"	m	struct:lame_internal_flags
iteration_loop_t	lame/libmp3lame/util.h	/^    typedef void (*iteration_loop_t) (lame_internal_flags * gfc, const FLOAT pe[2][2],$/;"	t
iterator	libmfx/include/mfx_vector.h	/^        typedef iterator_tmpl<T> iterator;$/;"	t	class:MFX::MFXVector
iterator_tmpl	libmfx/include/mfx_vector.h	/^        iterator_tmpl() $/;"	f	class:MFX::iterator_tmpl
iterator_tmpl	libmfx/include/mfx_vector.h	/^        iterator_tmpl(mfxU32 index , T * records) $/;"	f	class:MFX::iterator_tmpl
iterator_tmpl	libmfx/include/mfx_vector.h	/^    class iterator_tmpl $/;"	c	namespace:MFX
itime	lame/libmp3lame/util.h	/^        double  itime[2]; \/* float precision seems to be not enough *\/$/;"	m
itots_s	OBSApi/Utility/XString.cpp	/^int itots_s(int val, TCHAR *buffer, size_t bufLen, int radix)$/;"	f
ix_max	lame/libmp3lame/takehiro.c	/^ix_max(const int *ix, const int *end)$/;"	f	file:
jimglCreateContext	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^WGLCREATECONTEXTPROC     jimglCreateContext     = NULL;$/;"	v
jimglDeleteContext	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^WGLDELETECONTEXTPROC     jimglDeleteContext     = NULL;$/;"	v
jimglGetCurrentContext	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^WGLGETCURRENTCONTEXTPROC jimglGetCurrentContext = NULL;$/;"	v
jimglGetCurrentDC	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^WGLGETCURRENTDCPROC      jimglGetCurrentDC      = NULL;$/;"	v
jimglGetProcAddress	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^WGLGETPROCADDRESSPROC    jimglGetProcAddress    = NULL;$/;"	v
jimglMakeCurrent	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^WGLMAKECURRENTPROC       jimglMakeCurrent       = NULL;$/;"	v
jimglSwapBuffers	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^WGLSWAPBUFFERSPROC       jimglSwapBuffers       = NULL;$/;"	v
jimglSwapLayerBuffers	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^WGLSWAPLAYERBUFFERSPROC  jimglSwapLayerBuffers  = NULL;$/;"	v
js	lame/libmp3lame/lame-analysis.h	/^    int     framesize, stereo, js, ms_stereo, i_stereo, emph, bitrate, sampfreq, maindata;$/;"	m	struct:plotting_data
jumpRange	OBSApi/AudioSource.cpp	/^    QWORD     jumpRange;$/;"	m	struct:NotAResampler	file:
kCoeffs	libfaac/coder.h	/^    double kCoeffs[TNS_MAX_ORDER+1];     \/* Reflection Coefficients *\/$/;"	m
k_34_4	lame/libmp3lame/vbrquantize.c	/^k_34_4(DOUBLEX x[4], int l3[4])$/;"	f	file:
kbd_window_long	libfaac/frame.h	/^    double *kbd_window_long;$/;"	m
kbd_window_short	libfaac/frame.h	/^    double *kbd_window_short;$/;"	m
kbflag	lame/frontend/gtkanal.c	/^    int     kbflag;          \/* toggle between wave # and barks *\/$/;"	m	struct:gtkinfostruct	file:
kbps	lame/frontend/brhist.c	/^    int     kbps[BRHIST_WIDTH];$/;"	m	struct:brhist_struct	file:
keepAliveTime	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	/^LONGLONG keepAliveTime = 0;$/;"	v
key	librtmp/rtmp_sys.h	/^    rsa_context key;$/;"	m	struct:tls_server_ctx
keyBaseColor	DShowPlugin/DeviceSource.h	/^    Color4          keyBaseColor;$/;"	m	class:DeviceSource
keyBlend	DShowPlugin/DeviceSource.h	/^    int             keyBlend;$/;"	m	class:DeviceSource
keyBlend	Source/BitmapImageSource.cpp	/^    UINT     keySimilarity, keyBlend;$/;"	m	class:BitmapImageSource	file:
keyBlend	Source/DesktopImageSource.cpp	/^    UINT     keySimilarity, keyBlend;$/;"	m	class:DesktopImageSource	file:
keyChroma	DShowPlugin/DeviceSource.h	/^    Color4          keyChroma;$/;"	m	class:DeviceSource
keyColor	DShowPlugin/DeviceSource.h	/^    DWORD           keyColor;$/;"	m	class:DeviceSource
keyColor	Source/BitmapImageSource.cpp	/^    DWORD    keyColor;$/;"	m	class:BitmapImageSource	file:
keyColor	Source/DesktopImageSource.cpp	/^    DWORD    keyColor;$/;"	m	class:DesktopImageSource	file:
keySimilarity	DShowPlugin/DeviceSource.h	/^    int             keySimilarity;$/;"	m	class:DeviceSource
keySimilarity	Source/BitmapImageSource.cpp	/^    UINT     keySimilarity, keyBlend;$/;"	m	class:BitmapImageSource	file:
keySimilarity	Source/DesktopImageSource.cpp	/^    UINT     keySimilarity, keyBlend;$/;"	m	class:DesktopImageSource	file:
keySpillReduction	DShowPlugin/DeviceSource.h	/^    int             keySpillReduction;$/;"	m	class:DeviceSource
key_press_event	lame/frontend/gtkanal.c	/^key_press_event(GtkWidget * widget, GdkEventKey * event)$/;"	f	file:
keyboard_t	lame/misc/ath.c	/^} keyboard_t;$/;"	t	file:
keyframeWait	Source/OBS.h	/^    int  keyframeWait;$/;"	m	class:OBS
keyframe_ctrl	QSVHelper/Encoder.h	/^    EncodeCtrl keyframe_ctrl, sei_ctrl;$/;"	m	struct:Encoder
keyframes	Source/ReplayBuffer.cpp	/^    deque<pair<DWORD, packet_list_t::iterator>> keyframes;$/;"	m	struct:ReplayBuffer	file:
keyint	ObsNvenc/inc/NVENCEncoder.h	/^    int keyint;$/;"	m	class:NVENCEncoder
keyint	QSVHelper/IPCStructs.h	/^    int32_t fps, keyint, bframes, width, height, max_bitrate, buffer_size;$/;"	m	struct:init_request
keyword	Source/mongoose.h	/^  const char *keyword;$/;"	m	struct:mg_expansion
kf_bfly2	libfaac/kiss_fft/kiss_fft.c	/^static void kf_bfly2($/;"	f	file:
kf_bfly3	libfaac/kiss_fft/kiss_fft.c	/^static void kf_bfly3($/;"	f	file:
kf_bfly4	libfaac/kiss_fft/kiss_fft.c	/^static void kf_bfly4($/;"	f	file:
kf_bfly5	libfaac/kiss_fft/kiss_fft.c	/^static void kf_bfly5($/;"	f	file:
kf_bfly_generic	libfaac/kiss_fft/kiss_fft.c	/^static void kf_bfly_generic($/;"	f	file:
kf_cexp	libfaac/kiss_fft/_kiss_fft_guts.h	/^void kf_cexp(kiss_fft_cpx * x,double phase) \/* returns e ** (j*phase)   *\/$/;"	f
kf_factor	libfaac/kiss_fft/kiss_fft.c	/^void kf_factor(int n,int * facbuf)$/;"	f	file:
kf_work	libfaac/kiss_fft/kiss_fft.c	/^void kf_work($/;"	f	file:
kiss_fft	libfaac/kiss_fft/kiss_fft.c	/^void kiss_fft(kiss_fft_cfg cfg,const kiss_fft_cpx *fin,kiss_fft_cpx *fout)$/;"	f
kiss_fft.c	libfaac/kiss_fft/kiss_fft.c	1;"	F
kiss_fft.h	libfaac/kiss_fft/kiss_fft.h	1;"	F
kiss_fft_alloc	libfaac/kiss_fft/kiss_fft.c	/^kiss_fft_cfg kiss_fft_alloc(int nfft,int inverse_fft,void * mem,size_t * lenmem )$/;"	f
kiss_fft_cfg	libfaac/kiss_fft/kiss_fft.h	/^typedef struct kiss_fft_state* kiss_fft_cfg;$/;"	t
kiss_fft_cpx	libfaac/kiss_fft/kiss_fft.h	/^}kiss_fft_cpx;$/;"	t
kiss_fft_free	libfaac/kiss_fft/kiss_fft.h	82;"	d
kiss_fft_scalar	libfaac/kiss_fft/kiss_fft.h	26;"	d
kiss_fft_scalar	libfaac/kiss_fft/kiss_fft.h	30;"	d
kiss_fft_state	libfaac/kiss_fft/_kiss_fft_guts.h	/^struct kiss_fft_state{$/;"	s
kiss_fft_stride	libfaac/kiss_fft/kiss_fft.c	/^void kiss_fft_stride(kiss_fft_cfg st,const kiss_fft_cpx *fin,kiss_fft_cpx *fout,int in_stride)$/;"	f
kiss_fftr	libfaac/kiss_fft/kiss_fftr.c	/^void kiss_fftr(kiss_fftr_cfg st,const kiss_fft_scalar *timedata,kiss_fft_cpx *freqdata)$/;"	f
kiss_fftr.c	libfaac/kiss_fft/kiss_fftr.c	1;"	F
kiss_fftr.h	libfaac/kiss_fft/kiss_fftr.h	1;"	F
kiss_fftr_alloc	libfaac/kiss_fft/kiss_fftr.c	/^kiss_fftr_cfg kiss_fftr_alloc(int nfft,int inverse_fft,void * mem,size_t * lenmem)$/;"	f
kiss_fftr_cfg	libfaac/kiss_fft/kiss_fftr.h	/^typedef struct kiss_fftr_state *kiss_fftr_cfg;$/;"	t
kiss_fftr_free	libfaac/kiss_fft/kiss_fftr.h	41;"	d
kiss_fftr_state	libfaac/kiss_fft/kiss_fftr.c	/^struct kiss_fftr_state{$/;"	s	file:
kiss_fftri	libfaac/kiss_fft/kiss_fftr.c	/^void kiss_fftri(kiss_fftr_cfg st,const kiss_fft_cpx *freqdata,kiss_fft_scalar *timedata)$/;"	f
korr_t	lame/misc/abx.c	/^} korr_t;$/;"	t	file:
korr_t	lame/misc/mlame_corr.c	/^} korr_t;$/;"	t	file:
l	Source/mongoose.c	/^union char64long16 { unsigned char c[64]; uint32_t l[16]; };$/;"	m	union:char64long16	file:
l	lame/libmp3lame/id3tag.h	/^            char   *l;       \/* ptr to Latin-1 chars             *\/$/;"	m	union:FrameDataNode::<anonymous>::<anonymous>
l	lame/libmp3lame/l3side.h	/^    FLOAT   l[SBMAX_l];$/;"	m
l	lame/libmp3lame/l3side.h	/^    int     l[1 + SBMAX_l];$/;"	m
l	lame/libmp3lame/util.h	/^        FLOAT   l[SBMAX_l];  \/* ATH for sfbs in long blocks *\/$/;"	m
l	lame/libmp3lame/util.h	/^        PsyConst_CB2SB_t l;$/;"	m
l2	lame/doc/man/Makefile	/^	l2='$(man_MANS)'; for i in $$l2; do echo "$$i"; done | \\$/;"	m
l2tables.h	lame/mpglib/l2tables.h	1;"	F
l3_enc	lame/libmp3lame/l3side.h	/^    int     l3_enc[576];$/;"	m
l3_side	lame/libmp3lame/util.h	/^        III_side_info_t l3_side;$/;"	m	struct:lame_internal_flags
l3side.h	lame/libmp3lame/l3side.h	1;"	F
lFlags	librtmp/rtmp.h	/^        int lFlags;$/;"	m	struct:RTMP_LNK
lLayer	lame/dshow/Encoder.h	/^    long    lLayer;                         \/\/Layer: 1 or 2$/;"	m
l_to_s	lame/libmp3lame/util.h	/^        PsyConst_CB2SB_t l_to_s;$/;"	m
la_depth	QSVHelper/IPCStructs.h	/^    decltype(mfxExtCodingOption2::LookAheadDepth) la_depth;$/;"	m	struct:init_request
lame-analysis.h	lame/libmp3lame/lame-analysis.h	1;"	F
lame.c	lame/libmp3lame/lame.c	1;"	F
lame.h	lame/include/lame.h	1;"	F
lameGUI.html	lame/misc/lameGUI.html	1;"	F
lame_DEPENDENCIES	lame/frontend/Makefile	/^lame_DEPENDENCIES = $(top_builddir)\/libmp3lame\/libmp3lame.la$/;"	m
lame_LDADD	lame/frontend/Makefile	/^lame_LDADD = $(LDADD)$/;"	m
lame_OBJECTS	lame/frontend/Makefile	/^lame_OBJECTS = $(am_lame_OBJECTS)$/;"	m
lame_SOURCES	lame/frontend/Makefile	/^lame_SOURCES = lame_main.c $(common_sources)$/;"	m
lame_allocated_gfp	lame/libmp3lame/lame_global_flags.h	/^    int     lame_allocated_gfp; \/* is this struct owned by calling$/;"	m	struct:lame_global_struct
lame_alpha_version_enabled	lame/frontend/parse.c	/^static int const lame_alpha_version_enabled = LAME_ALPHA_VERSION;$/;"	v	file:
lame_bitrate_block_type_hist	lame/libmp3lame/lame.c	/^lame_bitrate_block_type_hist(const lame_global_flags * gfp, int bitrate_btype_count[14][6])$/;"	f
lame_bitrate_hist	lame/libmp3lame/lame.c	/^lame_bitrate_hist(const lame_global_flags * gfp, int bitrate_count[14])$/;"	f
lame_bitrate_kbps	lame/libmp3lame/lame.c	/^lame_bitrate_kbps(const lame_global_flags * gfp, int bitrate_kbps[14])$/;"	f
lame_bitrate_stereo_mode_hist	lame/libmp3lame/lame.c	/^lame_bitrate_stereo_mode_hist(const lame_global_flags * gfp, int bitrate_stmode_count[14][4])$/;"	f
lame_block_type_hist	lame/libmp3lame/lame.c	/^lame_block_type_hist(const lame_global_flags * gfp, int btype_count[6])$/;"	f
lame_calloc	lame/libmp3lame/id3tag.c	63;"	d	file:
lame_close	lame/libmp3lame/lame.c	/^lame_close(lame_global_flags * gfp)$/;"	f
lame_copy_inbuffer	lame/libmp3lame/lame.c	/^lame_copy_inbuffer(lame_internal_flags* gfc, $/;"	f	file:
lame_debugf	lame/libmp3lame/util.c	/^lame_debugf(const lame_internal_flags* gfc, const char *format, ...)$/;"	f
lame_decode	lame/libmp3lame/mpglib_interface.c	/^lame_decode(unsigned char *buffer, int len, short pcm_l[], short pcm_r[])$/;"	f
lame_decode1	lame/libmp3lame/mpglib_interface.c	/^lame_decode1(unsigned char *buffer, int len, short pcm_l[], short pcm_r[])$/;"	f
lame_decode1_headers	lame/libmp3lame/mpglib_interface.c	/^lame_decode1_headers(unsigned char *buffer,$/;"	f
lame_decode1_headersB	lame/libmp3lame/mpglib_interface.c	/^lame_decode1_headersB(unsigned char *buffer,$/;"	f
lame_decode_exit	lame/libmp3lame/mpglib_interface.c	/^lame_decode_exit(void)$/;"	f
lame_decode_fromfile	lame/frontend/amiga_mpega.c	/^lame_decode_fromfile(FILE * fd, short pcm_l[], short pcm_r[], mp3data_struct * mp3data)$/;"	f
lame_decode_fromfile	lame/frontend/get_audio.c	/^lame_decode_fromfile(FILE * fd, short pcm_l[], short pcm_r[], mp3data_struct * mp3data)$/;"	f	file:
lame_decode_headers	lame/libmp3lame/mpglib_interface.c	/^lame_decode_headers(unsigned char *buffer,$/;"	f
lame_decode_init	lame/libmp3lame/mpglib_interface.c	/^lame_decode_init(void)$/;"	f
lame_decode_initfile	lame/frontend/amiga_mpega.c	/^lame_decode_initfile(const char *fullname, mp3data_struct * mp3data)$/;"	f
lame_decode_initfile	lame/frontend/get_audio.c	/^lame_decode_initfile(FILE * fd, mp3data_struct * mp3data, int *enc_delay, int *enc_padding)$/;"	f
lame_decoder	lame/frontend/lame_main.c	/^lame_decoder(lame_t gfp, FILE * outf, char *inPath, char *outPath)$/;"	f	file:
lame_encode_buffer	lame/libmp3lame/lame.c	/^lame_encode_buffer(lame_global_flags * gfp,$/;"	f
lame_encode_buffer_float	lame/libmp3lame/lame.c	/^lame_encode_buffer_float(lame_global_flags * gfp,$/;"	f
lame_encode_buffer_ieee_double	lame/libmp3lame/lame.c	/^lame_encode_buffer_ieee_double(lame_t gfp,$/;"	f
lame_encode_buffer_ieee_float	lame/libmp3lame/lame.c	/^lame_encode_buffer_ieee_float(lame_t gfp,$/;"	f
lame_encode_buffer_int	lame/libmp3lame/lame.c	/^lame_encode_buffer_int(lame_global_flags * gfp,$/;"	f
lame_encode_buffer_interleaved	lame/libmp3lame/lame.c	/^lame_encode_buffer_interleaved(lame_global_flags * gfp,$/;"	f
lame_encode_buffer_interleaved_ieee_double	lame/libmp3lame/lame.c	/^lame_encode_buffer_interleaved_ieee_double(lame_t gfp,$/;"	f
lame_encode_buffer_interleaved_ieee_float	lame/libmp3lame/lame.c	/^lame_encode_buffer_interleaved_ieee_float(lame_t gfp,$/;"	f
lame_encode_buffer_long	lame/libmp3lame/lame.c	/^lame_encode_buffer_long(lame_global_flags * gfp,$/;"	f
lame_encode_buffer_long2	lame/libmp3lame/lame.c	/^lame_encode_buffer_long2(lame_global_flags * gfp,$/;"	f
lame_encode_buffer_sample_t	lame/libmp3lame/lame.c	/^lame_encode_buffer_sample_t(lame_internal_flags * gfc,$/;"	f	file:
lame_encode_buffer_template	lame/libmp3lame/lame.c	/^lame_encode_buffer_template(lame_global_flags * gfp,$/;"	f	file:
lame_encode_finish	lame/libmp3lame/lame.c	/^lame_encode_finish(lame_global_flags * gfp, unsigned char *mp3buffer, int mp3buffer_size)$/;"	f
lame_encode_flush	lame/libmp3lame/lame.c	/^lame_encode_flush(lame_global_flags * gfp, unsigned char *mp3buffer, int mp3buffer_size)$/;"	f
lame_encode_flush_nogap	lame/libmp3lame/lame.c	/^lame_encode_flush_nogap(lame_global_flags * gfp, unsigned char *mp3buffer, int mp3buffer_size)$/;"	f
lame_encode_frame_init	lame/libmp3lame/encoder.c	/^lame_encode_frame_init(lame_internal_flags * gfc, const sample_t *const inbuf[2])$/;"	f	file:
lame_encode_frame_init	lame/libmp3lame/util.h	/^        int     lame_encode_frame_init;$/;"	m	struct:lame_internal_flags
lame_encode_mp3_frame	lame/libmp3lame/encoder.c	/^lame_encode_mp3_frame(       \/* Output *\/$/;"	f
lame_encoder	lame/frontend/lame_main.c	/^lame_encoder(lame_global_flags * gf, FILE * outf, int nogap, char *inPath, char *outPath)$/;"	f	file:
lame_encoder_loop	lame/frontend/lame_main.c	/^lame_encoder_loop(lame_global_flags * gf, FILE * outf, int nogap, char *inPath, char *outPath)$/;"	f	file:
lame_errorcodes_t	lame/include/lame.h	/^} lame_errorcodes_t;$/;"	t
lame_errorcodes_t	lame/libmp3lame/lameerror.h	/^} lame_errorcodes_t;$/;"	t
lame_errorf	lame/libmp3lame/util.c	/^lame_errorf(const lame_internal_flags* gfc, const char *format, ...)$/;"	f
lame_fopen	lame/frontend/main.c	/^FILE* lame_fopen(char const* file, char const* mode)$/;"	f
lame_get_ATHcurve	lame/libmp3lame/set_get.c	/^lame_get_ATHcurve(const lame_global_flags * gfp)$/;"	f
lame_get_ATHlower	lame/libmp3lame/set_get.c	/^lame_get_ATHlower(const lame_global_flags * gfp)$/;"	f
lame_get_ATHonly	lame/libmp3lame/set_get.c	/^lame_get_ATHonly(const lame_global_flags * gfp)$/;"	f
lame_get_ATHshort	lame/libmp3lame/set_get.c	/^lame_get_ATHshort(const lame_global_flags * gfp)$/;"	f
lame_get_ATHtype	lame/libmp3lame/set_get.c	/^lame_get_ATHtype(const lame_global_flags * gfp)$/;"	f
lame_get_AudiophileGain	lame/libmp3lame/set_get.c	/^lame_get_AudiophileGain(const lame_global_flags * gfp)$/;"	f
lame_get_PeakSample	lame/libmp3lame/set_get.c	/^lame_get_PeakSample(const lame_global_flags * gfp)$/;"	f
lame_get_RadioGain	lame/libmp3lame/set_get.c	/^lame_get_RadioGain(const lame_global_flags * gfp)$/;"	f
lame_get_ReplayGain_decode	lame/libmp3lame/set_get.c	/^lame_get_ReplayGain_decode(const lame_global_flags * gfp)$/;"	f
lame_get_ReplayGain_input	lame/libmp3lame/set_get.c	/^lame_get_ReplayGain_input(const lame_global_flags * gfp)$/;"	f
lame_get_VBR	lame/libmp3lame/set_get.c	/^lame_get_VBR(const lame_global_flags * gfp)$/;"	f
lame_get_VBR_hard_min	lame/libmp3lame/set_get.c	/^lame_get_VBR_hard_min(const lame_global_flags * gfp)$/;"	f
lame_get_VBR_max_bitrate_kbps	lame/libmp3lame/set_get.c	/^lame_get_VBR_max_bitrate_kbps(const lame_global_flags * gfp)$/;"	f
lame_get_VBR_mean_bitrate_kbps	lame/libmp3lame/set_get.c	/^lame_get_VBR_mean_bitrate_kbps(const lame_global_flags * gfp)$/;"	f
lame_get_VBR_min_bitrate_kbps	lame/libmp3lame/set_get.c	/^lame_get_VBR_min_bitrate_kbps(const lame_global_flags * gfp)$/;"	f
lame_get_VBR_q	lame/libmp3lame/set_get.c	/^lame_get_VBR_q(const lame_global_flags * gfp)$/;"	f
lame_get_VBR_quality	lame/libmp3lame/set_get.c	/^lame_get_VBR_quality(const lame_global_flags * gfp)$/;"	f
lame_get_allow_diff_short	lame/libmp3lame/set_get.c	/^lame_get_allow_diff_short(const lame_global_flags * gfp)$/;"	f
lame_get_analysis	lame/libmp3lame/set_get.c	/^lame_get_analysis(const lame_global_flags * gfp)$/;"	f
lame_get_athaa_loudapprox	lame/libmp3lame/set_get.c	/^lame_get_athaa_loudapprox(const lame_global_flags * gfp)$/;"	f
lame_get_athaa_sensitivity	lame/libmp3lame/set_get.c	/^lame_get_athaa_sensitivity(const lame_global_flags * gfp)$/;"	f
lame_get_athaa_type	lame/libmp3lame/set_get.c	/^lame_get_athaa_type(const lame_global_flags * gfp)$/;"	f
lame_get_bWriteVbrTag	lame/libmp3lame/set_get.c	/^lame_get_bWriteVbrTag(const lame_global_flags * gfp)$/;"	f
lame_get_bitrate	lame/libmp3lame/tables.c	/^lame_get_bitrate(int mpeg_version, int table_index)$/;"	f
lame_get_brate	lame/libmp3lame/set_get.c	/^lame_get_brate(const lame_global_flags * gfp)$/;"	f
lame_get_compression_ratio	lame/libmp3lame/set_get.c	/^lame_get_compression_ratio(const lame_global_flags * gfp)$/;"	f
lame_get_copyright	lame/libmp3lame/set_get.c	/^lame_get_copyright(const lame_global_flags * gfp)$/;"	f
lame_get_cwlimit	lame/libmp3lame/set_get.c	/^lame_get_cwlimit(const lame_global_flags * gfp)$/;"	f
lame_get_decode_on_the_fly	lame/libmp3lame/set_get.c	/^lame_get_decode_on_the_fly(const lame_global_flags * gfp)$/;"	f
lame_get_decode_only	lame/libmp3lame/set_get.c	/^lame_get_decode_only(const lame_global_flags * gfp)$/;"	f
lame_get_disable_reservoir	lame/libmp3lame/set_get.c	/^lame_get_disable_reservoir(const lame_global_flags * gfp)$/;"	f
lame_get_emphasis	lame/libmp3lame/set_get.c	/^lame_get_emphasis(const lame_global_flags * gfp)$/;"	f
lame_get_encoder_delay	lame/libmp3lame/set_get.c	/^lame_get_encoder_delay(const lame_global_flags * gfp)$/;"	f
lame_get_encoder_padding	lame/libmp3lame/set_get.c	/^lame_get_encoder_padding(const lame_global_flags * gfp)$/;"	f
lame_get_error_protection	lame/libmp3lame/set_get.c	/^lame_get_error_protection(const lame_global_flags * gfp)$/;"	f
lame_get_exp_nspsytune	lame/libmp3lame/set_get.c	/^lame_get_exp_nspsytune(const lame_global_flags * gfp)$/;"	f
lame_get_experimentalX	lame/libmp3lame/set_get.c	/^lame_get_experimentalX(const lame_global_flags * gfp)$/;"	f
lame_get_experimentalY	lame/libmp3lame/set_get.c	/^lame_get_experimentalY(const lame_global_flags * gfp)$/;"	f
lame_get_experimentalZ	lame/libmp3lame/set_get.c	/^lame_get_experimentalZ(const lame_global_flags * gfp)$/;"	f
lame_get_extension	lame/libmp3lame/set_get.c	/^lame_get_extension(const lame_global_flags * gfp)$/;"	f
lame_get_file_size	lame/frontend/get_audio.c	/^lame_get_file_size(FILE * fp)$/;"	f	file:
lame_get_findPeakSample	lame/libmp3lame/set_get.c	/^lame_get_findPeakSample(const lame_global_flags * gfp)$/;"	f
lame_get_findReplayGain	lame/libmp3lame/set_get.c	/^lame_get_findReplayGain(const lame_global_flags * gfp)$/;"	f
lame_get_force_ms	lame/libmp3lame/set_get.c	/^lame_get_force_ms(const lame_global_flags * gfp)$/;"	f
lame_get_force_short_blocks	lame/libmp3lame/set_get.c	/^lame_get_force_short_blocks(const lame_global_flags * gfp)$/;"	f
lame_get_frameNum	lame/libmp3lame/set_get.c	/^lame_get_frameNum(const lame_global_flags * gfp)$/;"	f
lame_get_framesize	lame/libmp3lame/set_get.c	/^lame_get_framesize(const lame_global_flags * gfp)$/;"	f
lame_get_free_format	lame/libmp3lame/set_get.c	/^lame_get_free_format(const lame_global_flags * gfp)$/;"	f
lame_get_highpassfreq	lame/libmp3lame/set_get.c	/^lame_get_highpassfreq(const lame_global_flags * gfp)$/;"	f
lame_get_highpasswidth	lame/libmp3lame/set_get.c	/^lame_get_highpasswidth(const lame_global_flags * gfp)$/;"	f
lame_get_id3v1_tag	lame/libmp3lame/id3tag.c	/^lame_get_id3v1_tag(lame_t gfp, unsigned char *buffer, size_t size)$/;"	f
lame_get_id3v2_tag	lame/libmp3lame/id3tag.c	/^lame_get_id3v2_tag(lame_t gfp, unsigned char *buffer, size_t size)$/;"	f
lame_get_in_samplerate	lame/libmp3lame/set_get.c	/^lame_get_in_samplerate(const lame_global_flags * gfp)$/;"	f
lame_get_interChRatio	lame/libmp3lame/set_get.c	/^lame_get_interChRatio(const lame_global_flags * gfp)$/;"	f
lame_get_lametag_frame	lame/libmp3lame/VbrTag.c	/^lame_get_lametag_frame(lame_global_flags const *gfp, unsigned char *buffer, size_t size)$/;"	f
lame_get_lowpassfreq	lame/libmp3lame/set_get.c	/^lame_get_lowpassfreq(const lame_global_flags * gfp)$/;"	f
lame_get_lowpasswidth	lame/libmp3lame/set_get.c	/^lame_get_lowpasswidth(const lame_global_flags * gfp)$/;"	f
lame_get_maskingadjust	lame/libmp3lame/set_get.c	/^lame_get_maskingadjust(const lame_global_flags * gfp)$/;"	f
lame_get_maskingadjust_short	lame/libmp3lame/set_get.c	/^lame_get_maskingadjust_short(const lame_global_flags * gfp)$/;"	f
lame_get_mf_samples_to_encode	lame/libmp3lame/set_get.c	/^lame_get_mf_samples_to_encode(const lame_global_flags * gfp)$/;"	f
lame_get_mode	lame/libmp3lame/set_get.c	/^lame_get_mode(const lame_global_flags * gfp)$/;"	f
lame_get_mode_automs	lame/libmp3lame/set_get.c	/^lame_get_mode_automs(const lame_global_flags * gfp)$/;"	f
lame_get_msfix	lame/libmp3lame/set_get.c	/^lame_get_msfix(const lame_global_flags * gfp)$/;"	f
lame_get_noATH	lame/libmp3lame/set_get.c	/^lame_get_noATH(const lame_global_flags * gfp)$/;"	f
lame_get_no_short_blocks	lame/libmp3lame/set_get.c	/^lame_get_no_short_blocks(const lame_global_flags * gfp)$/;"	f
lame_get_noclipGainChange	lame/libmp3lame/set_get.c	/^lame_get_noclipGainChange(const lame_global_flags * gfp)$/;"	f
lame_get_noclipScale	lame/libmp3lame/set_get.c	/^lame_get_noclipScale(const lame_global_flags * gfp)$/;"	f
lame_get_nogap_currentindex	lame/libmp3lame/set_get.c	/^lame_get_nogap_currentindex(const lame_global_flags * gfp)$/;"	f
lame_get_nogap_total	lame/libmp3lame/set_get.c	/^lame_get_nogap_total(const lame_global_flags * gfp)$/;"	f
lame_get_num_channels	lame/libmp3lame/set_get.c	/^lame_get_num_channels(const lame_global_flags * gfp)$/;"	f
lame_get_num_samples	lame/libmp3lame/set_get.c	/^lame_get_num_samples(const lame_global_flags * gfp)$/;"	f
lame_get_ogg	lame/libmp3lame/set_get.c	/^lame_get_ogg(const lame_global_flags * gfp)$/;"	f
lame_get_original	lame/libmp3lame/set_get.c	/^lame_get_original(const lame_global_flags * gfp)$/;"	f
lame_get_out_samplerate	lame/libmp3lame/set_get.c	/^lame_get_out_samplerate(const lame_global_flags * gfp)$/;"	f
lame_get_padding_type	lame/libmp3lame/set_get.c	/^lame_get_padding_type(const lame_global_flags * gfp)$/;"	f
lame_get_quality	lame/libmp3lame/set_get.c	/^lame_get_quality(const lame_global_flags * gfp)$/;"	f
lame_get_quant_comp	lame/libmp3lame/set_get.c	/^lame_get_quant_comp(const lame_global_flags * gfp)$/;"	f
lame_get_quant_comp_short	lame/libmp3lame/set_get.c	/^lame_get_quant_comp_short(const lame_global_flags * gfp)$/;"	f
lame_get_samplerate	lame/libmp3lame/tables.c	/^lame_get_samplerate(int mpeg_version, int table_index)$/;"	f
lame_get_scale	lame/libmp3lame/set_get.c	/^lame_get_scale(const lame_global_flags * gfp)$/;"	f
lame_get_scale_left	lame/libmp3lame/set_get.c	/^lame_get_scale_left(const lame_global_flags * gfp)$/;"	f
lame_get_scale_right	lame/libmp3lame/set_get.c	/^lame_get_scale_right(const lame_global_flags * gfp)$/;"	f
lame_get_sfscale	lame/libmp3lame/set_get.c	/^lame_get_sfscale(const lame_global_flags * gfp)$/;"	f
lame_get_short_threshold_lrm	lame/libmp3lame/set_get.c	/^lame_get_short_threshold_lrm(const lame_global_flags * gfp)$/;"	f
lame_get_short_threshold_s	lame/libmp3lame/set_get.c	/^lame_get_short_threshold_s(const lame_global_flags * gfp)$/;"	f
lame_get_size_mp3buffer	lame/libmp3lame/set_get.c	/^lame_get_size_mp3buffer(const lame_global_flags * gfp)$/;"	f
lame_get_strict_ISO	lame/libmp3lame/set_get.c	/^lame_get_strict_ISO(const lame_global_flags * gfp)$/;"	f
lame_get_subblock_gain	lame/libmp3lame/set_get.c	/^lame_get_subblock_gain(const lame_global_flags * gfp)$/;"	f
lame_get_substep	lame/libmp3lame/set_get.c	/^lame_get_substep(const lame_global_flags * gfp)$/;"	f
lame_get_totalframes	lame/libmp3lame/set_get.c	/^lame_get_totalframes(const lame_global_flags * gfp)$/;"	f
lame_get_useTemporal	lame/libmp3lame/set_get.c	/^lame_get_useTemporal(const lame_global_flags * gfp)$/;"	f
lame_get_version	lame/libmp3lame/set_get.c	/^lame_get_version(const lame_global_flags * gfp)$/;"	f
lame_get_write_id3tag_automatic	lame/libmp3lame/set_get.c	/^lame_get_write_id3tag_automatic(lame_global_flags const *gfp)$/;"	f
lame_getenv	lame/frontend/main.c	/^char* lame_getenv(char const* var)$/;"	f
lame_global_flags	lame/ACM/ACMStream.h	/^typedef struct lame_global_struct lame_global_flags;$/;"	t
lame_global_flags	lame/include/lame.h	/^typedef struct lame_global_struct lame_global_flags;$/;"	t
lame_global_flags.h	lame/libmp3lame/lame_global_flags.h	1;"	F
lame_global_struct	lame/libmp3lame/lame_global_flags.h	/^struct lame_global_struct {$/;"	s
lame_init	lame/libmp3lame/lame.c	/^lame_init(void)$/;"	f
lame_init_bitstream	lame/libmp3lame/lame.c	/^lame_init_bitstream(lame_global_flags * gfp)$/;"	f
lame_init_old	lame/libmp3lame/lame.c	/^lame_init_old(lame_global_flags * gfp)$/;"	f	file:
lame_init_params	lame/libmp3lame/lame.c	/^lame_init_params(lame_global_flags * gfp)$/;"	f
lame_init_params_ppflt	lame/libmp3lame/lame.c	/^lame_init_params_ppflt(lame_internal_flags * gfc)$/;"	f	file:
lame_init_qval	lame/libmp3lame/lame.c	/^lame_init_qval(lame_global_flags * gfp)$/;"	f	file:
lame_internal_flags	lame/libmp3lame/VbrTag.h	/^typedef struct lame_internal_flags lame_internal_flags;$/;"	t
lame_internal_flags	lame/libmp3lame/encoder.h	/^typedef struct lame_internal_flags lame_internal_flags;$/;"	t
lame_internal_flags	lame/libmp3lame/lame_global_flags.h	/^typedef struct lame_internal_flags lame_internal_flags;$/;"	t
lame_internal_flags	lame/libmp3lame/util.h	/^    struct lame_internal_flags {$/;"	s
lame_internal_flags	lame/libmp3lame/util.h	/^    typedef struct lame_internal_flags lame_internal_flags;$/;"	t
lame_internal_flags_defined	lame/libmp3lame/VbrTag.h	51;"	d
lame_internal_flags_defined	lame/libmp3lame/encoder.h	147;"	d
lame_internal_flags_defined	lame/libmp3lame/lame_global_flags.h	5;"	d
lame_internal_flags_defined	lame/libmp3lame/util.h	551;"	d
lame_intrin.h	lame/libmp3lame/vector/lame_intrin.h	1;"	F
lame_main	lame/frontend/lame_main.c	/^lame_main(lame_t gf, int argc, char **argv)$/;"	f
lame_main	lame/frontend/mp3rtp.c	/^lame_main(lame_t gf, int argc, char **argv)$/;"	f
lame_main	lame/frontend/mp3x.c	/^lame_main(lame_t gf, int argc, char **argv)$/;"	f
lame_main.c	lame/frontend/lame_main.c	1;"	F
lame_mp3_tags_fid	lame/libmp3lame/lame.c	/^lame_mp3_tags_fid(lame_global_flags * gfp, FILE * fpStream)$/;"	f
lame_msgf	lame/libmp3lame/util.c	/^lame_msgf(const lame_internal_flags* gfc, const char *format, ...)$/;"	f
lame_print_config	lame/libmp3lame/lame.c	/^lame_print_config(const lame_global_flags * gfp)$/;"	f
lame_print_internals	lame/libmp3lame/lame.c	/^lame_print_internals(const lame_global_flags * gfp)$/;"	f
lame_report_def	lame/libmp3lame/util.c	/^lame_report_def(const char *format, va_list args)$/;"	f
lame_report_fnc	lame/libmp3lame/util.c	/^lame_report_fnc(lame_report_function print_f, const char *format, ...)$/;"	f
lame_report_function	lame/include/lame.h	/^typedef void (*lame_report_function)(const char *format, va_list ap);$/;"	t
lame_set_ATHcurve	lame/libmp3lame/set_get.c	/^lame_set_ATHcurve(lame_global_flags * gfp, float ATHcurve)$/;"	f
lame_set_ATHlower	lame/libmp3lame/set_get.c	/^lame_set_ATHlower(lame_global_flags * gfp, float ATHlower)$/;"	f
lame_set_ATHonly	lame/libmp3lame/set_get.c	/^lame_set_ATHonly(lame_global_flags * gfp, int ATHonly)$/;"	f
lame_set_ATHshort	lame/libmp3lame/set_get.c	/^lame_set_ATHshort(lame_global_flags * gfp, int ATHshort)$/;"	f
lame_set_ATHtype	lame/libmp3lame/set_get.c	/^lame_set_ATHtype(lame_global_flags * gfp, int ATHtype)$/;"	f
lame_set_ReplayGain_decode	lame/libmp3lame/set_get.c	/^lame_set_ReplayGain_decode(lame_global_flags * gfp, int arg)$/;"	f
lame_set_ReplayGain_input	lame/libmp3lame/set_get.c	/^lame_set_ReplayGain_input(lame_global_flags * gfp, int arg)$/;"	f
lame_set_VBR	lame/libmp3lame/set_get.c	/^lame_set_VBR(lame_global_flags * gfp, vbr_mode VBR)$/;"	f
lame_set_VBR_hard_min	lame/libmp3lame/set_get.c	/^lame_set_VBR_hard_min(lame_global_flags * gfp, int VBR_hard_min)$/;"	f
lame_set_VBR_max_bitrate_kbps	lame/libmp3lame/set_get.c	/^lame_set_VBR_max_bitrate_kbps(lame_global_flags * gfp, int VBR_max_bitrate_kbps)$/;"	f
lame_set_VBR_mean_bitrate_kbps	lame/libmp3lame/set_get.c	/^lame_set_VBR_mean_bitrate_kbps(lame_global_flags * gfp, int VBR_mean_bitrate_kbps)$/;"	f
lame_set_VBR_min_bitrate_kbps	lame/libmp3lame/set_get.c	/^lame_set_VBR_min_bitrate_kbps(lame_global_flags * gfp, int VBR_min_bitrate_kbps)$/;"	f
lame_set_VBR_q	lame/libmp3lame/set_get.c	/^lame_set_VBR_q(lame_global_flags * gfp, int VBR_q)$/;"	f
lame_set_VBR_quality	lame/libmp3lame/set_get.c	/^lame_set_VBR_quality(lame_global_flags * gfp, float VBR_q)$/;"	f
lame_set_allow_diff_short	lame/libmp3lame/set_get.c	/^lame_set_allow_diff_short(lame_global_flags * gfp, int allow_diff_short)$/;"	f
lame_set_analysis	lame/libmp3lame/set_get.c	/^lame_set_analysis(lame_global_flags * gfp, int analysis)$/;"	f
lame_set_asm_optimizations	lame/libmp3lame/set_get.c	/^lame_set_asm_optimizations(lame_global_flags * gfp, int optim, int mode)$/;"	f
lame_set_athaa_loudapprox	lame/libmp3lame/set_get.c	/^lame_set_athaa_loudapprox(lame_global_flags * gfp, int athaa_loudapprox)$/;"	f
lame_set_athaa_sensitivity	lame/libmp3lame/set_get.c	/^lame_set_athaa_sensitivity(lame_global_flags * gfp, float athaa_sensitivity)$/;"	f
lame_set_athaa_type	lame/libmp3lame/set_get.c	/^lame_set_athaa_type(lame_global_flags * gfp, int athaa_type)$/;"	f
lame_set_bWriteVbrTag	lame/libmp3lame/set_get.c	/^lame_set_bWriteVbrTag(lame_global_flags * gfp, int bWriteVbrTag)$/;"	f
lame_set_brate	lame/libmp3lame/set_get.c	/^lame_set_brate(lame_global_flags * gfp, int brate)$/;"	f
lame_set_compression_ratio	lame/libmp3lame/set_get.c	/^lame_set_compression_ratio(lame_global_flags * gfp, float compression_ratio)$/;"	f
lame_set_copyright	lame/libmp3lame/set_get.c	/^lame_set_copyright(lame_global_flags * gfp, int copyright)$/;"	f
lame_set_cwlimit	lame/libmp3lame/set_get.c	/^lame_set_cwlimit(lame_global_flags * gfp, int cwlimit)$/;"	f
lame_set_debugf	lame/libmp3lame/set_get.c	/^lame_set_debugf(lame_global_flags * gfp, void (*func) (const char *, va_list))$/;"	f
lame_set_decode_on_the_fly	lame/libmp3lame/set_get.c	/^lame_set_decode_on_the_fly(lame_global_flags * gfp, int decode_on_the_fly)$/;"	f
lame_set_decode_only	lame/libmp3lame/set_get.c	/^lame_set_decode_only(lame_global_flags * gfp, int decode_only)$/;"	f
lame_set_disable_reservoir	lame/libmp3lame/set_get.c	/^lame_set_disable_reservoir(lame_global_flags * gfp, int disable_reservoir)$/;"	f
lame_set_emphasis	lame/libmp3lame/set_get.c	/^lame_set_emphasis(lame_global_flags * gfp, int emphasis)$/;"	f
lame_set_error_protection	lame/libmp3lame/set_get.c	/^lame_set_error_protection(lame_global_flags * gfp, int error_protection)$/;"	f
lame_set_errorf	lame/libmp3lame/set_get.c	/^lame_set_errorf(lame_global_flags * gfp, void (*func) (const char *, va_list))$/;"	f
lame_set_exp_nspsytune	lame/libmp3lame/set_get.c	/^lame_set_exp_nspsytune(lame_global_flags * gfp, int exp_nspsytune)$/;"	f
lame_set_experimentalX	lame/libmp3lame/set_get.c	/^lame_set_experimentalX(lame_global_flags * gfp, int experimentalX)$/;"	f
lame_set_experimentalY	lame/libmp3lame/set_get.c	/^lame_set_experimentalY(lame_global_flags * gfp, int experimentalY)$/;"	f
lame_set_experimentalZ	lame/libmp3lame/set_get.c	/^lame_set_experimentalZ(lame_global_flags * gfp, int experimentalZ)$/;"	f
lame_set_extension	lame/libmp3lame/set_get.c	/^lame_set_extension(lame_global_flags * gfp, int extension)$/;"	f
lame_set_findPeakSample	lame/libmp3lame/set_get.c	/^lame_set_findPeakSample(lame_global_flags * gfp, int arg)$/;"	f
lame_set_findReplayGain	lame/libmp3lame/set_get.c	/^lame_set_findReplayGain(lame_global_flags * gfp, int findReplayGain)$/;"	f
lame_set_force_ms	lame/libmp3lame/set_get.c	/^lame_set_force_ms(lame_global_flags * gfp, int force_ms)$/;"	f
lame_set_force_short_blocks	lame/libmp3lame/set_get.c	/^lame_set_force_short_blocks(lame_global_flags * gfp, int short_blocks)$/;"	f
lame_set_free_format	lame/libmp3lame/set_get.c	/^lame_set_free_format(lame_global_flags * gfp, int free_format)$/;"	f
lame_set_highpassfreq	lame/libmp3lame/set_get.c	/^lame_set_highpassfreq(lame_global_flags * gfp, int highpassfreq)$/;"	f
lame_set_highpasswidth	lame/libmp3lame/set_get.c	/^lame_set_highpasswidth(lame_global_flags * gfp, int highpasswidth)$/;"	f
lame_set_in_samplerate	lame/libmp3lame/set_get.c	/^lame_set_in_samplerate(lame_global_flags * gfp, int in_samplerate)$/;"	f
lame_set_interChRatio	lame/libmp3lame/set_get.c	/^lame_set_interChRatio(lame_global_flags * gfp, float ratio)$/;"	f
lame_set_lowpassfreq	lame/libmp3lame/set_get.c	/^lame_set_lowpassfreq(lame_global_flags * gfp, int lowpassfreq)$/;"	f
lame_set_lowpasswidth	lame/libmp3lame/set_get.c	/^lame_set_lowpasswidth(lame_global_flags * gfp, int lowpasswidth)$/;"	f
lame_set_maskingadjust	lame/libmp3lame/set_get.c	/^lame_set_maskingadjust(lame_global_flags * gfp, float adjust)$/;"	f
lame_set_maskingadjust_short	lame/libmp3lame/set_get.c	/^lame_set_maskingadjust_short(lame_global_flags * gfp, float adjust)$/;"	f
lame_set_mode	lame/libmp3lame/set_get.c	/^lame_set_mode(lame_global_flags * gfp, MPEG_mode mode)$/;"	f
lame_set_mode_automs	lame/libmp3lame/set_get.c	/^lame_set_mode_automs(lame_global_flags * gfp, int mode_automs)$/;"	f
lame_set_msfix	lame/libmp3lame/set_get.c	/^lame_set_msfix(lame_global_flags * gfp, double msfix)$/;"	f
lame_set_msgf	lame/libmp3lame/set_get.c	/^lame_set_msgf(lame_global_flags * gfp, void (*func) (const char *, va_list))$/;"	f
lame_set_noATH	lame/libmp3lame/set_get.c	/^lame_set_noATH(lame_global_flags * gfp, int noATH)$/;"	f
lame_set_no_short_blocks	lame/libmp3lame/set_get.c	/^lame_set_no_short_blocks(lame_global_flags * gfp, int no_short_blocks)$/;"	f
lame_set_nogap_currentindex	lame/libmp3lame/set_get.c	/^lame_set_nogap_currentindex(lame_global_flags * gfp, int the_nogap_index)$/;"	f
lame_set_nogap_total	lame/libmp3lame/set_get.c	/^lame_set_nogap_total(lame_global_flags * gfp, int the_nogap_total)$/;"	f
lame_set_num_channels	lame/libmp3lame/set_get.c	/^lame_set_num_channels(lame_global_flags * gfp, int num_channels)$/;"	f
lame_set_num_samples	lame/libmp3lame/set_get.c	/^lame_set_num_samples(lame_global_flags * gfp, unsigned long num_samples)$/;"	f
lame_set_ogg	lame/libmp3lame/set_get.c	/^lame_set_ogg(lame_global_flags * gfp, int ogg)$/;"	f
lame_set_original	lame/libmp3lame/set_get.c	/^lame_set_original(lame_global_flags * gfp, int original)$/;"	f
lame_set_out_samplerate	lame/libmp3lame/set_get.c	/^lame_set_out_samplerate(lame_global_flags * gfp, int out_samplerate)$/;"	f
lame_set_padding_type	lame/libmp3lame/set_get.c	/^lame_set_padding_type(lame_global_flags * gfp, Padding_type padding_type)$/;"	f
lame_set_preset	lame/libmp3lame/set_get.c	/^lame_set_preset(lame_global_flags * gfp, int preset)$/;"	f
lame_set_preset_expopts	lame/libmp3lame/set_get.c	/^lame_set_preset_expopts(lame_global_flags * gfp, int preset_expopts)$/;"	f
lame_set_preset_notune	lame/libmp3lame/set_get.c	/^lame_set_preset_notune(lame_global_flags * gfp, int preset_notune)$/;"	f
lame_set_quality	lame/libmp3lame/set_get.c	/^lame_set_quality(lame_global_flags * gfp, int quality)$/;"	f
lame_set_quant_comp	lame/libmp3lame/set_get.c	/^lame_set_quant_comp(lame_global_flags * gfp, int quant_type)$/;"	f
lame_set_quant_comp_short	lame/libmp3lame/set_get.c	/^lame_set_quant_comp_short(lame_global_flags * gfp, int quant_type)$/;"	f
lame_set_scale	lame/libmp3lame/set_get.c	/^lame_set_scale(lame_global_flags * gfp, float scale)$/;"	f
lame_set_scale_left	lame/libmp3lame/set_get.c	/^lame_set_scale_left(lame_global_flags * gfp, float scale)$/;"	f
lame_set_scale_right	lame/libmp3lame/set_get.c	/^lame_set_scale_right(lame_global_flags * gfp, float scale)$/;"	f
lame_set_sfscale	lame/libmp3lame/set_get.c	/^lame_set_sfscale(lame_global_flags * gfp, int val)$/;"	f
lame_set_short_threshold	lame/libmp3lame/set_get.c	/^lame_set_short_threshold(lame_global_flags * gfp, float lrm, float s)$/;"	f
lame_set_short_threshold_lrm	lame/libmp3lame/set_get.c	/^lame_set_short_threshold_lrm(lame_global_flags * gfp, float lrm)$/;"	f
lame_set_short_threshold_s	lame/libmp3lame/set_get.c	/^lame_set_short_threshold_s(lame_global_flags * gfp, float s)$/;"	f
lame_set_stream_binary_mode	lame/frontend/lametime.c	/^lame_set_stream_binary_mode(FILE * const fp)$/;"	f
lame_set_strict_ISO	lame/libmp3lame/set_get.c	/^lame_set_strict_ISO(lame_global_flags * gfp, int val)$/;"	f
lame_set_subblock_gain	lame/libmp3lame/set_get.c	/^lame_set_subblock_gain(lame_global_flags * gfp, int sbgain)$/;"	f
lame_set_substep	lame/libmp3lame/set_get.c	/^lame_set_substep(lame_global_flags * gfp, int method)$/;"	f
lame_set_tune	lame/libmp3lame/set_get.c	/^lame_set_tune(lame_global_flags * gfp, float val)$/;"	f
lame_set_useTemporal	lame/libmp3lame/set_get.c	/^lame_set_useTemporal(lame_global_flags * gfp, int useTemporal)$/;"	f
lame_set_write_id3tag_automatic	lame/libmp3lame/set_get.c	/^lame_set_write_id3tag_automatic(lame_global_flags * gfp, int v)$/;"	f
lame_stereo_mode_hist	lame/libmp3lame/lame.c	/^lame_stereo_mode_hist(const lame_global_flags * gfp, int stmode_count[4])$/;"	f
lame_t	lame/include/lame.h	/^typedef lame_global_flags *lame_t;$/;"	t
lame_version_print	lame/frontend/parse.c	/^lame_version_print(FILE * const fp)$/;"	f	file:
lame_version_t	lame/include/lame.h	/^} lame_version_t;$/;"	t
lameerror.h	lame/libmp3lame/lameerror.h	1;"	F
lameid3.pl	lame/misc/lameid3.pl	1;"	F
lametime.c	lame/frontend/lametime.c	1;"	F
lametime.h	lame/frontend/lametime.h	1;"	F
largeVal	OBSApi/Utility/XMath.h	/^    INT64 largeVal;$/;"	m	union:XLARGE_INT
largeVal	OBSApi/Utility/XMath.h	/^    UINT64 largeVal;$/;"	m	union:XLARGE_UINT
largetbl	lame/libmp3lame/tables.c	/^const uint32_t largetbl[16 * 16] = {$/;"	v
lastAudioTimeVal	Source/MP4FileStream.cpp	/^    UINT64 lastAudioTimeVal;$/;"	m	class:MP4FileStream	file:
lastAudioTimestamp	Source/OBS.h	/^    DWORD lastAudioTimestamp;$/;"	m	class:OBS
lastBFrameDropTime	Source/RTMPPublisher.h	/^    UINT lastBFrameDropTime;$/;"	m	class:RTMPPublisher
lastByte	OBSApi/AudioSource.cpp	/^        BYTE lastByte;$/;"	m	struct:TripleToLong::<anonymous>	file:
lastCX	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^LONG lastCX=0, lastCY=0;$/;"	v
lastCY	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^LONG lastCX=0, lastCY=0;$/;"	v
lastCall	OBSApi/Utility/Profiler.cpp	/^    DWORD lastCall;$/;"	m	struct:ProfileNodeInfo	file:
lastChild	lame/ACM/tinyxml/tinyxml.h	/^	TiXmlNode*		lastChild;$/;"	m	class:TiXmlNode
lastCpuTimeElapsed	OBSApi/Utility/Profiler.cpp	/^          lastCpuTimeElapsed;$/;"	m	struct:ProfileNodeInfo	file:
lastDecodedFrame	Source/BitmapImage.h	/^    UINT curFrame, curLoop, lastDecodedFrame;$/;"	m	class:BitmapImage
lastFreeMem	OBSApi/Utility/FastAlloc.cpp	/^    FreeMemInfo *lastFreeMem; \/\/pointer to last free memory block$/;"	m	struct:Pool	file:
lastMousePos	Source/OBS.h	/^    Vect2   startMousePos, lastMousePos;$/;"	m	class:OBS
lastOfMB	ObsNvenc/inc/nvEncodeAPI.h	/^    int32_t    lastOfMB    : 1;                         \/**< [in]: Set to 1 for the last MV of macroblock. *\/$/;"	m	struct:_NVENC_EXTERNAL_ME_HINT
lastOutputFile	Source/OBS.h	/^    String  lastOutputFile;$/;"	m	class:OBS
lastProcessName	GraphicsCapture/GraphicsCaptureSource.h	/^    wchar_t lastProcessName[MAX_PATH];$/;"	m	class:GraphicsCaptureSource
lastQPCTime	OBSApi/OBSApi.cpp	/^__declspec(thread) LONGLONG lastQPCTime = 0;$/;"	v
lastQPCTimestamp	Source/MMDeviceAudioSource.cpp	/^    QWORD lastQPCTimestamp;$/;"	m	class:MMDeviceAudioSource	file:
lastRenderTarget	Source/OBS.h	/^    int     lastRenderTarget;$/;"	m	class:OBS
lastRenderTexture	Source/OBS.h	/^    Texture *lastRenderTexture;$/;"	m	class:OBS
lastRendered	GraphicsCapture/GlobalCaptureStuff.h	/^    UINT        lastRendered;$/;"	m	struct:MemoryCopyData
lastRendered	Source/DesktopImageSource.cpp	/^    Texture *lastRendered;$/;"	m	class:DesktopImageSource	file:
lastSentTimestamp	OBSApi/AudioSource.h	/^    QWORD lastSentTimestamp;$/;"	m	class:AudioSource
lastTime	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^LONGLONG                lastTime = 0;$/;"	v
lastTime	Source/BandwidthAnalysis.cpp	/^    DWORD lastTime;$/;"	m	class:BandwidthAnalyzer	file:
lastTimeElapsed	OBSApi/Utility/Profiler.cpp	/^          lastTimeElapsed,$/;"	m	struct:ProfileNodeInfo	file:
lastTimeStamp	Source/FLVFileStream.cpp	/^    DWORD lastTimeStamp, initialTimestamp;$/;"	m	class:FLVFileStream	file:
lastTimestamp	Source/DelayedPublisher.cpp	/^    DWORD lastTimestamp;$/;"	m	class:DelayedPublisher	file:
lastUnmutedVol	OBSApi/VolumeControl.cpp	/^    float lastUnmutedVol;$/;"	m	struct:VolumeControlData	file:
lastUsedTimestamp	OBSApi/AudioSource.h	/^    QWORD lastUsedTimestamp;$/;"	m	class:AudioSource
lastValidByteOffset	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t            lastValidByteOffset;             \/**< [out]: Offset of last valid bytes of completed bitstream *\/$/;"	m	struct:_NV_ENC_STAT
lastVideoTime	Source/MMDeviceAudioSource.cpp	/^    QWORD lastVideoTime;$/;"	m	class:MMDeviceAudioSource	file:
lastVideoTimestamp	Source/MP4FileStream.cpp	/^    DWORD           lastVideoTimestamp, initialTimeStamp;$/;"	m	class:MP4FileStream	file:
last_attacks	lame/libmp3lame/util.h	/^        int     last_attacks[4];$/;"	m
last_byte	Source/libnsgif.h	/^    int curbit, lastbit, last_byte;$/;"	m	struct:gif_animation
last_en_subshort	lame/libmp3lame/util.h	/^        FLOAT   last_en_subshort[4][9];$/;"	m
last_error_message	lame/frontend/rtp.c	/^last_error_message(int err_code)$/;"	f	file:
last_frame_num	lame/frontend/timestatus.c	/^    int     last_frame_num;$/;"	m	struct:EncoderProgress	file:
last_io_time	Source/mongoose.c	/^  time_t last_io_time;        \/\/ Timestamp of the last socket IO$/;"	m	struct:ns_connection	file:
last_mode_ext	lame/frontend/timestatus.c	/^    int     last_mode_ext;$/;"	m	struct:DecoderProgress	file:
last_position	libsamplerate/common.h	/^{	double	last_ratio, last_position ;$/;"	m	struct:SRC_PRIVATE_tag
last_ratio	libsamplerate/common.h	/^{	double	last_ratio, last_position ;$/;"	m	struct:SRC_PRIVATE_tag
last_time	lame/frontend/timestatus.c	/^    double  last_time;       \/* result of last call to clock *\/$/;"	m	struct:time_status_struct	file:
last_time	lame/frontend/timestatus.c	/^    double  last_time;$/;"	m	struct:EncoderProgress	file:
last_value	libsamplerate/src_linear.c	/^	float	last_value [1] ;$/;"	m	file:
last_value	libsamplerate/src_zoh.c	/^	float	last_value [1] ;$/;"	m	file:
lastband	libfaac/psychkni.c	/^  int lastband;$/;"	m	file:
lastbit	Source/libnsgif.h	/^    int curbit, lastbit, last_byte;$/;"	m	struct:gif_animation
lastofPart	ObsNvenc/inc/nvEncodeAPI.h	/^    int32_t    lastofPart  : 1;                         \/**< [in]: Set to 1 for the last MV of (sub) partition  *\/$/;"	m	struct:_NVENC_EXTERNAL_ME_HINT
lastx	libfaac/coder.h	/^    int lastx;$/;"	m
latencyFactor	Source/RTMPPublisher.h	/^    int latencyFactor;$/;"	m	class:RTMPPublisher
latencymode_t	Source/RTMPPublisher.h	/^} latencymode_t;$/;"	t
latestAudioTime	Source/OBS.h	/^    QWORD   latestAudioTime;$/;"	m	class:OBS
latestVideoSample	DShowPlugin/DeviceSource.h	/^    SampleData      *latestVideoSample;$/;"	m	class:DeviceSource
latestVideoTime	Source/OBS.h	/^    QWORD latestVideoTime;$/;"	m	class:OBS
latestVideoTimeNS	Source/OBS.h	/^    QWORD latestVideoTimeNS;$/;"	m	class:OBS
lay	lame/mpglib/mpg123.h	/^    int     lay;             \/* Layer *\/$/;"	m	struct:frame
layer1.c	lame/mpglib/layer1.c	1;"	F
layer1.h	lame/mpglib/layer1.h	1;"	F
layer2.c	lame/mpglib/layer2.c	1;"	F
layer2.h	lame/mpglib/layer2.h	1;"	F
layer3.c	lame/mpglib/layer3.c	1;"	F
layer3.h	lame/mpglib/layer3.h	1;"	F
layer3_audiodata_precedesframes	lame/mpglib/layer3.c	/^layer3_audiodata_precedesframes(PMPSTR mp)$/;"	f
ld	lame/misc/abx.c	/^int  ld ( size_t number )$/;"	f
leaf	OBSApi/Utility/XTLocalization.cpp	/^    LocaleStringItem *leaf;$/;"	m	struct:StringLookupNode	file:
leave	minhook/src/thread.cpp	/^	void CriticalSection::leave()$/;"	f	class:MinHook::CriticalSection
left	ObsNvenc/inc/nvEncodeAPI.h	/^  uint32_t left;                                        \/**< [in]: X coordinate of the upper left corner of rectangular area to be specified.       *\/$/;"	m	struct:_NVENC_RECT
left	lame/misc/ath.c	/^    left     = 0, $/;"	e	file:
left	libfaac/bitstream.c	/^    unsigned int left; \/* left start of free space in segment *\/$/;"	m	file:
left_calc	libsamplerate/src_sinc.c	/^	double left_calc [128], right_calc [128] ;$/;"	m	file:
len	Source/mongoose.c	/^  int len;                              \/\/ Space taken$/;"	m	struct:cgi_env_block	file:
len	Source/mongoose.c	/^  size_t len;$/;"	m	struct:iobuf	file:
len	Source/mongoose.c	/^  size_t len;$/;"	m	struct:ns_str	file:
len	Source/mongoose.c	/^  size_t len;$/;"	m	struct:vec	file:
len	libfaac/bitstream.c	/^    unsigned int len; \/* length of free space in segment *\/$/;"	m	file:
len	libfaac/coder.h	/^    int *len;$/;"	m
len	minhook/src/HDE32/hde32.h	/^    uint8_t len;$/;"	m
len	minhook/src/HDE64/include/hde64.h	/^    uint8_t len;$/;"	m
lenOfId3v2Tag	lame/frontend/get_audio.c	/^lenOfId3v2Tag(unsigned char const* buf)$/;"	f	file:
length	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/AssetSchemeHandler.cs	/^        private long length;$/;"	f	class:RemoteBrowser.AssetSchemeHandler	file:
length	libfaac/coder.h	/^    int length;                          \/* Length, in bands *\/$/;"	m
length	librtmp/dh.h	/^    long length;$/;"	m	struct:MDH
level	NoiseGate/NoiseGate.h	/^    float   level;  \/\/ Input level with delayed decay$/;"	m	class:NoiseGateFilter
level	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t level;                                                 \/**< [in]: Specifies the encoding level. Client is recommended to set this to NV_ENC_LEVEL_AUTOSELECT in order to enable the NvEncodeAPI interface to select the correct level. *\/$/;"	m	struct:_NV_ENC_CONFIG_H264
level	Source/RTMPStuff.h	/^SAVC(level);$/;"	v
level	librtmp/rtmp.c	/^SAVC(level);$/;"	v
level_idc	x264/x264.h	/^    int level_idc;$/;"	m
levelmessage	lame/frontend/mp3rtp.c	/^levelmessage(unsigned int maxv, int* maxx, int* tmpx)$/;"	f	file:
levels	librtmp/log.c	/^static const char *levels[] =$/;"	v	file:
lfe	libfaac/channels.h	/^    int lfe;$/;"	m
lgf	Source/Encoder_MP3.cpp	/^    lame_global_flags *lgf;$/;"	m	class:MP3Encoder	file:
libCopyright	libfaac/frame.c	/^static char *libCopyright =$/;"	v	file:
lib_LTLIBRARIES	lame/libmp3lame/Makefile	/^lib_LTLIBRARIES = libmp3lame.la$/;"	m
libdir	lame/ACM/ADbg/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	lame/ACM/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	lame/ACM/ddk/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	lame/ACM/tinyxml/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	lame/Dll/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	lame/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	lame/debian/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	lame/doc/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	lame/doc/html/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	lame/doc/man/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	lame/dshow/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	lame/frontend/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	lame/include/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	lame/libmp3lame/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	lame/libmp3lame/i386/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	lame/libmp3lame/vector/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	lame/mac/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	lame/macosx/English.lproj/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	lame/macosx/LAME.xcodeproj/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	lame/macosx/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	lame/misc/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	lame/mpglib/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	lame/vc_solution/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libexecdir	lame/ACM/ADbg/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	lame/ACM/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	lame/ACM/ddk/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	lame/ACM/tinyxml/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	lame/Dll/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	lame/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	lame/debian/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	lame/doc/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	lame/doc/html/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	lame/doc/man/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	lame/dshow/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	lame/frontend/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	lame/include/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	lame/libmp3lame/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	lame/libmp3lame/i386/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	lame/libmp3lame/vector/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	lame/mac/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	lame/macosx/English.lproj/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	lame/macosx/LAME.xcodeproj/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	lame/macosx/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	lame/misc/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	lame/mpglib/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	lame/vc_solution/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libfaacName	libfaac/frame.c	/^static char *libfaacName = FAAC_VERSION ".1 (" __DATE__ ") UNSTABLE";$/;"	v	file:
libfaacName	libfaac/frame.c	/^static char *libfaacName = FAAC_VERSION;$/;"	v	file:
liblameasmroutines_la_LIBADD	lame/libmp3lame/i386/Makefile	/^liblameasmroutines_la_LIBADD =$/;"	m
liblameasmroutines_la_OBJECTS	lame/libmp3lame/i386/Makefile	/^liblameasmroutines_la_OBJECTS = $(am_liblameasmroutines_la_OBJECTS)$/;"	m
liblamevectorroutines_la_LIBADD	lame/libmp3lame/vector/Makefile	/^liblamevectorroutines_la_LIBADD =$/;"	m
liblamevectorroutines_la_OBJECTS	lame/libmp3lame/vector/Makefile	/^liblamevectorroutines_la_OBJECTS =  \\$/;"	m
liblamevectorroutines_la_SOURCES	lame/libmp3lame/vector/Makefile	/^liblamevectorroutines_la_SOURCES = $(xmm_sources)$/;"	m
libmp3lame_la_DEPENDENCIES	lame/libmp3lame/Makefile	/^libmp3lame_la_DEPENDENCIES = $(cpu_ldadd) $(vector_ldadd) \\$/;"	m
libmp3lame_la_LDFLAGS	lame/libmp3lame/Makefile	/^libmp3lame_la_LDFLAGS = -version-info 0:0 \\$/;"	m
libmp3lame_la_LIBADD	lame/libmp3lame/Makefile	/^libmp3lame_la_LIBADD = $(cpu_ldadd) $(vector_ldadd) $(decoder_ldadd) \\$/;"	m
libmp3lame_la_LINK	lame/libmp3lame/Makefile	/^libmp3lame_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
libmp3lame_la_OBJECTS	lame/libmp3lame/Makefile	/^libmp3lame_la_OBJECTS = $(am_libmp3lame_la_OBJECTS)$/;"	m
libmp3lame_la_SOURCES	lame/libmp3lame/Makefile	/^libmp3lame_la_SOURCES = \\$/;"	m
libmpgdecoder_la_LIBADD	lame/mpglib/Makefile	/^libmpgdecoder_la_LIBADD =$/;"	m
libmpgdecoder_la_OBJECTS	lame/mpglib/Makefile	/^libmpgdecoder_la_OBJECTS = $(am_libmpgdecoder_la_OBJECTS)$/;"	m
libmpgdecoder_la_SOURCES	lame/mpglib/Makefile	/^libmpgdecoder_la_SOURCES = common.c \\$/;"	m
libnsgif.c	Source/libnsgif.c	1;"	F
libnsgif.h	Source/libnsgif.h	1;"	F
libraryAssembly	CLRHostPlugin/CLRHostPlugin/CLRHost.h	/^    mscorlib::_Assembly *libraryAssembly;$/;"	m	class:CLRHost
libraryInstance	CLRHostPlugin/CLRHostPlugin/CLRHost.h	/^    IUnknown *libraryInstance;$/;"	m	class:CLRHost
libraryType	CLRHostPlugin/CLRHostPlugin/CLRHost.h	/^    mscorlib::_Type *libraryType;$/;"	m	class:CLRHost
librtmpErrorCallback	Source/RTMPPublisher.cpp	/^void RTMPPublisher::librtmpErrorCallback(int level, const char *format, va_list vl)$/;"	f	class:RTMPPublisher
libtool	lame/libtool	1;"	F
license	lame/doc/html/detailed.html	/^<a name="license"><span class="hilight">--license<\/span><\/a> Print the license page$/;"	a
license.h	ObsNvenc/inc/license.h	1;"	F
linbits	lame/mpglib/huffman.h	/^    const unsigned int linbits;$/;"	m	struct:newhuff
linePitch	DShowPlugin/DeviceSource.h	/^    UINT            linePitch, lineShift, lineSize;$/;"	m	class:DeviceSource
linePitch	DShowPlugin/DeviceSource.h	/^    UINT   linePitch, lineShift;$/;"	m	struct:ConvertData
lineShift	DShowPlugin/DeviceSource.h	/^    UINT            linePitch, lineShift, lineSize;$/;"	m	class:DeviceSource
lineShift	DShowPlugin/DeviceSource.h	/^    UINT   linePitch, lineShift;$/;"	m	struct:ConvertData
lineSize	DShowPlugin/DeviceSource.h	/^    UINT            linePitch, lineShift, lineSize;$/;"	m	class:DeviceSource
linear	lame/misc/ath.c	/^    linear    = 0,$/;"	e	file:
linear_f	lame/misc/ath.c	/^static long double linear_f        ( long double x ) { return x > 0.L  ?  x             :  0.0L; }$/;"	f	file:
linear_get_description	libsamplerate/src_linear.c	/^linear_get_description (int src_enum)$/;"	f
linear_get_name	libsamplerate/src_linear.c	/^linear_get_name (int src_enum)$/;"	f
linear_int	lame/libmp3lame/lame.c	/^linear_int(double a, double b, double m)$/;"	f	file:
linear_magic_marker	libsamplerate/src_linear.c	/^{	int		linear_magic_marker ;$/;"	m	file:
linear_reset	libsamplerate/src_linear.c	/^linear_reset (SRC_PRIVATE *psrc)$/;"	f	file:
linear_set_converter	libsamplerate/src_linear.c	/^linear_set_converter (SRC_PRIVATE *psrc, int src_enum)$/;"	f
linear_vari_process	libsamplerate/src_linear.c	/^linear_vari_process (SRC_PRIVATE *psrc, SRC_DATA *data)$/;"	f	file:
linkify	UpgradeLog.htm	/^/;"	f
linkifyElement	UpgradeLog.htm	/^/;"	f
links.html	lame/doc/html/links.html	1;"	F
linmax	lame/libmp3lame/tables.h	/^    const unsigned int linmax;        \/* max number to be stored in linbits *\/$/;"	m	struct:huffcodetab
linpre	lame/libmp3lame/gain_analysis.h	/^        Float_t *linpre;     \/* left input samples, with pre-buffer *\/$/;"	m	struct:replaygain_data
linprebuf	lame/libmp3lame/gain_analysis.h	/^        Float_t linprebuf[MAX_ORDER * 2];$/;"	m	struct:replaygain_data
list	QSVHelper/WindowsStuff.h	/^    std::vector<HANDLE> list;$/;"	m	struct:IPCWaiter
list	lame/ACM/ADbg/Makefile	/^	list='$(DISTFILES)'; \\$/;"	m
list	lame/ACM/Makefile	/^	  *) list='$(SUBDIRS)' ;; \\$/;"	m
list	lame/ACM/Makefile	/^	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \\$/;"	m
list	lame/ACM/Makefile	/^	list='$(DISTFILES)'; \\$/;"	m
list	lame/ACM/Makefile	/^	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \\$/;"	m
list	lame/ACM/Makefile	/^	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \\$/;"	m
list	lame/ACM/Makefile	/^	list='$(SUBDIRS)'; for subdir in $$list; do \\$/;"	m
list	lame/ACM/ddk/Makefile	/^	list='$(DISTFILES)'; \\$/;"	m
list	lame/ACM/tinyxml/Makefile	/^	list='$(DISTFILES)'; \\$/;"	m
list	lame/Dll/Makefile	/^	list='$(DISTFILES)'; \\$/;"	m
list	lame/Makefile	/^	  *) list='$(SUBDIRS)' ;; \\$/;"	m
list	lame/Makefile	/^	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \\$/;"	m
list	lame/Makefile	/^	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \\$/;"	m
list	lame/Makefile	/^	list='$(DISTFILES)'; \\$/;"	m
list	lame/Makefile	/^	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \\$/;"	m
list	lame/Makefile	/^	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \\$/;"	m
list	lame/Makefile	/^	list='$(SUBDIRS)'; for subdir in $$list; do \\$/;"	m
list	lame/debian/Makefile	/^	list='$(DISTFILES)'; \\$/;"	m
list	lame/doc/Makefile	/^	  *) list='$(SUBDIRS)' ;; \\$/;"	m
list	lame/doc/Makefile	/^	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \\$/;"	m
list	lame/doc/Makefile	/^	list='$(DISTFILES)'; \\$/;"	m
list	lame/doc/Makefile	/^	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \\$/;"	m
list	lame/doc/Makefile	/^	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \\$/;"	m
list	lame/doc/Makefile	/^	list='$(SUBDIRS)'; for subdir in $$list; do \\$/;"	m
list	lame/doc/html/Makefile	/^	@list='$(pkghtml_DATA)'; test -n "$(pkghtmldir)" || list=; \\$/;"	m
list	lame/doc/html/Makefile	/^	list='$(DISTFILES)'; \\$/;"	m
list	lame/doc/man/Makefile	/^	  list=`for p in $$list; do \\$/;"	m
list	lame/doc/man/Makefile	/^	list='$(DISTFILES)'; \\$/;"	m
list	lame/doc/man/Makefile	/^	list=; while read file base inst; do \\$/;"	m
list	lame/dshow/Makefile	/^	list='$(DISTFILES)'; \\$/;"	m
list	lame/frontend/Makefile	/^	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \\$/;"	m
list	lame/frontend/Makefile	/^	list='$(DISTFILES)'; \\$/;"	m
list	lame/frontend/Makefile	/^	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \\$/;"	m
list	lame/frontend/Makefile	/^	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \\$/;"	m
list	lame/frontend/Makefile	/^	list=`for p in $$list; do echo "$$p"; done | sed 's\/$(EXEEXT)$$\/\/'`; \\$/;"	m
list	lame/include/Makefile	/^	@list='$(pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \\$/;"	m
list	lame/include/Makefile	/^	list='$(DISTFILES)'; \\$/;"	m
list	lame/include/Makefile	/^	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \\$/;"	m
list	lame/include/Makefile	/^	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \\$/;"	m
list	lame/libmp3lame/Makefile	/^	  *) list='$(SUBDIRS)' ;; \\$/;"	m
list	lame/libmp3lame/Makefile	/^	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \\$/;"	m
list	lame/libmp3lame/Makefile	/^	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \\$/;"	m
list	lame/libmp3lame/Makefile	/^	list='$(DISTFILES)'; \\$/;"	m
list	lame/libmp3lame/Makefile	/^	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \\$/;"	m
list	lame/libmp3lame/Makefile	/^	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \\$/;"	m
list	lame/libmp3lame/Makefile	/^	list='$(SUBDIRS)'; for subdir in $$list; do \\$/;"	m
list	lame/libmp3lame/i386/Makefile	/^	list='$(DISTFILES)'; \\$/;"	m
list	lame/libmp3lame/i386/Makefile	/^	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \\$/;"	m
list	lame/libmp3lame/i386/Makefile	/^	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \\$/;"	m
list	lame/libmp3lame/vector/Makefile	/^	list='$(DISTFILES)'; \\$/;"	m
list	lame/libmp3lame/vector/Makefile	/^	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \\$/;"	m
list	lame/libmp3lame/vector/Makefile	/^	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \\$/;"	m
list	lame/mac/Makefile	/^	list='$(DISTFILES)'; \\$/;"	m
list	lame/macosx/English.lproj/Makefile	/^	list='$(DISTFILES)'; \\$/;"	m
list	lame/macosx/LAME.xcodeproj/Makefile	/^	list='$(DISTFILES)'; \\$/;"	m
list	lame/macosx/Makefile	/^	  *) list='$(SUBDIRS)' ;; \\$/;"	m
list	lame/macosx/Makefile	/^	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \\$/;"	m
list	lame/macosx/Makefile	/^	list='$(DISTFILES)'; \\$/;"	m
list	lame/macosx/Makefile	/^	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \\$/;"	m
list	lame/macosx/Makefile	/^	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \\$/;"	m
list	lame/macosx/Makefile	/^	list='$(SUBDIRS)'; for subdir in $$list; do \\$/;"	m
list	lame/misc/Makefile	/^	list='$(DISTFILES)'; \\$/;"	m
list	lame/misc/Makefile	/^	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \\$/;"	m
list	lame/misc/Makefile	/^	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \\$/;"	m
list	lame/mpglib/Makefile	/^	list='$(DISTFILES)'; \\$/;"	m
list	lame/mpglib/Makefile	/^	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \\$/;"	m
list	lame/mpglib/Makefile	/^	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \\$/;"	m
list	lame/vc_solution/Makefile	/^	list='$(DISTFILES)'; \\$/;"	m
list.html	lame/doc/html/list.html	1;"	F
list2	lame/libmp3lame/Makefile	/^	    list2="$$list2 $$p"; \\$/;"	m
list2	lame/libmp3lame/Makefile	/^	list2=; for p in $$list; do \\$/;"	m
listAreaWidth	Source/OBS.cpp	/^const int listAreaWidth = totalControlAreaWidth-miscAreaWidth;$/;"	v
listControlWidth	Source/OBS.cpp	/^const int listControlWidth = listAreaWidth\/2;$/;"	v
listboxProc	Source/OBS.cpp	/^WNDPROC listboxProc = NULL;$/;"	v
listener	Source/mongoose.c	/^  struct ns_connection *listener;     \/\/ Set only for accept()-ed connections$/;"	m	struct:ns_connection	file:
listviewProc	Source/OBS.cpp	/^WNDPROC listviewProc = NULL;$/;"	v
little-endian	lame/doc/html/detailed.html	/^<a name="little-endian"><span class="hilight">--little-endian<\/span><\/a> Set the byte order to little-endian.$/;"	a
live	librtmp/rtmp.c	/^SAVC(live);$/;"	v
lng	lame/libmp3lame/id3tag.h	/^    char    lng[4];          \/* 3-character language descriptor  *\/$/;"	m	struct:FrameDataNode
lo	librtmp/md5.h	/^	MD5_u32plus lo, hi;$/;"	m
loadFailed	ObsNvenc/src/cudaDynload.cpp	/^static bool loadFailed = false;$/;"	v	file:
loadPluginMethod	CLRHostPlugin/CLRHostPlugin/CLRPlugin.h	/^    mscorlib::_MethodInfo *loadPluginMethod;$/;"	m	class:CLRPlugin
loadStatus	libmfx/include/mfx_dispatcher.h	/^    mfxStatus loadStatus;$/;"	m	struct:MFX_DISP_HANDLE
local8BitToUtf8	lame/frontend/main.c	/^char* local8BitToUtf8(const char* str)$/;"	f
local_char_pos	lame/libmp3lame/id3tag.c	/^local_char_pos(char const* str, char c)$/;"	f	file:
local_colour_table	Source/libnsgif.h	/^    unsigned int *local_colour_table;        \/**< local colour table *\/$/;"	m	struct:gif_animation
local_ip	Source/mongoose.h	/^  char local_ip[48];          \/\/ Local IP address$/;"	m	struct:mg_connection
local_port	Source/mongoose.h	/^  unsigned short local_port;  \/\/ Local port number$/;"	m	struct:mg_connection
local_strcasecmp	lame/frontend/parse.c	/^local_strcasecmp(const char *s1, const char *s2)$/;"	f	file:
local_strcasecmp	lame/libmp3lame/id3tag.c	/^local_strcasecmp(const char *s1, const char *s2)$/;"	f	file:
local_strdup	lame/libmp3lame/id3tag.c	/^local_strdup(char **dst, const char *src)$/;"	f	file:
local_strdup_utf16_to_latin1	lame/libmp3lame/id3tag.c	/^local_strdup_utf16_to_latin1(unsigned short const* utf16)$/;"	f	file:
local_strncasecmp	lame/frontend/parse.c	/^local_strncasecmp(const char *s1, const char *s2, int n)$/;"	f	file:
local_target	lame/ACM/Makefile	/^	    local_target="$$target"; \\$/;"	m
local_target	lame/ACM/Makefile	/^	    local_target="$$target-am"; \\$/;"	m
local_target	lame/Makefile	/^	    local_target="$$target"; \\$/;"	m
local_target	lame/Makefile	/^	    local_target="$$target-am"; \\$/;"	m
local_target	lame/doc/Makefile	/^	    local_target="$$target"; \\$/;"	m
local_target	lame/doc/Makefile	/^	    local_target="$$target-am"; \\$/;"	m
local_target	lame/libmp3lame/Makefile	/^	    local_target="$$target"; \\$/;"	m
local_target	lame/libmp3lame/Makefile	/^	    local_target="$$target-am"; \\$/;"	m
local_target	lame/macosx/Makefile	/^	    local_target="$$target"; \\$/;"	m
local_target	lame/macosx/Makefile	/^	    local_target="$$target-am"; \\$/;"	m
local_ucs2_pos	lame/libmp3lame/id3tag.c	/^local_ucs2_pos(unsigned short const* str, unsigned short c)$/;"	f	file:
local_ucs2_strdup	lame/libmp3lame/id3tag.c	/^local_ucs2_strdup(unsigned short **dst, unsigned short const *src)$/;"	f	file:
local_ucs2_strlen	lame/libmp3lame/id3tag.c	/^local_ucs2_strlen(unsigned short const *s)$/;"	f	file:
local_ucs2_substr	lame/libmp3lame/id3tag.c	/^local_ucs2_substr(unsigned short** dst, unsigned short const* src, size_t start, size_t end)$/;"	f	file:
locale	OBSApi/Utility/XTLocalization.cpp	/^LocaleStringLookup *locale=NULL;$/;"	v
localedir	lame/ACM/ADbg/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	lame/ACM/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	lame/ACM/ddk/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	lame/ACM/tinyxml/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	lame/Dll/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	lame/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	lame/debian/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	lame/doc/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	lame/doc/html/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	lame/doc/man/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	lame/dshow/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	lame/frontend/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	lame/include/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	lame/libmp3lame/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	lame/libmp3lame/i386/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	lame/libmp3lame/vector/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	lame/mac/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	lame/macosx/English.lproj/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	lame/macosx/LAME.xcodeproj/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	lame/macosx/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	lame/misc/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	lame/mpglib/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	lame/vc_solution/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localizationStrings	CLRHostPlugin/CLRHostPlugin/Localization.h	/^static CTSTR localizationStrings[] = {$/;"	v
localstatedir	lame/ACM/ADbg/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	lame/ACM/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	lame/ACM/ddk/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	lame/ACM/tinyxml/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	lame/Dll/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	lame/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	lame/debian/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	lame/doc/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	lame/doc/html/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	lame/doc/man/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	lame/dshow/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	lame/frontend/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	lame/include/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	lame/libmp3lame/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	lame/libmp3lame/i386/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	lame/libmp3lame/vector/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	lame/mac/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	lame/macosx/English.lproj/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	lame/macosx/LAME.xcodeproj/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	lame/macosx/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	lame/misc/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	lame/mpglib/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	lame/vc_solution/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
lock	OBSApi/GraphicsSystem.h	/^        std::unique_ptr<void, MutexDeleter> lock;$/;"	m	struct:GraphicsSystem::FutureShaderContainer
lock	QSVHelper/WindowsStuff.h	/^    void lock() { if(mutex_) WaitForSingleObject(mutex_, INFINITE); }$/;"	f	struct:IPCMutex
lock_mutex	QSVHelper/WindowsStuff.h	/^IPCMutexLock<T> lock_mutex(T &t) { return IPCMutexLock<T>(t); }$/;"	f
locked	OBSApi/Utility/RAIIHelpers.h	/^    bool locked, unlock;$/;"	m	struct:ScopedLock
locked	ObsNvenc/inc/NVENCEncoder.h	/^    bool locked;$/;"	m	struct:NVENCEncoderSurface
lockedTextures	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^bool                    lockedTextures[NUM_BUFFERS] = ZERO_ARRAY;$/;"	v
log	OBSApi/Utility/XT.cpp	/^        String log;$/;"	m	struct:<anonymous>::XStringLog	file:
log.c	librtmp/log.c	1;"	F
log.h	librtmp/log.h	1;"	F
log10f	lame/libmp3lame/machine.h	183;"	d
logDirectoryMonitor	Source/OBS.h	/^    OSDirectoryMonitorData *logDirectoryMonitor;$/;"	m	class:OBS
logFiles	Source/OBS.h	/^    std::map<std::wstring, bool> logFiles;$/;"	m	class:OBS
logOutput	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	/^fstream logOutput;$/;"	v
logUpdateCallback	Source/OBS.h	/^    OBS_LOG_UPDATE_CALLBACK logUpdateCallback;$/;"	m	struct:PluginInfo
log_access	Source/mongoose.c	/^static void log_access(const struct connection *conn, const char *path) {$/;"	f	file:
log_file	QSVHelper/Encoder.h	/^    std::wofstream &log_file;$/;"	m	struct:Encoder
log_file	QSVHelper/QSVHelper.cpp	/^    std::wofstream log_file;$/;"	v
log_header	Source/mongoose.c	/^static void log_header(const struct mg_connection *conn, const char *header,$/;"	f	file:
log_table	lame/libmp3lame/util.c	/^static ieee754_float32_t log_table[LOG2_SIZE + 1];$/;"	v	file:
logarithm	lame/misc/ath.c	/^    logarithm = 1,$/;"	e	file:
logarithm_f	lame/misc/ath.c	/^static long double logarithm_f     ( long double x ) { return x > 0.L  ?  log10 (x)     : -3.5L; }$/;"	f	file:
logdual	lame/misc/abx.c	/^double logdual ( long double x )$/;"	f
logicalCores	OBSApi/Utility/XT_Windows.cpp	/^int coreCount = 1, logicalCores = 1;$/;"	v
logm_to_nfft	libfaac/fft.c	/^static const int logm_to_nfft[] = $/;"	v	file:
longDiff	lame/mpglib/layer3.c	/^    short   longDiff[22];$/;"	m	struct:bandInfoStruct	file:
longIdx	lame/mpglib/layer3.c	/^    short   longIdx[23];$/;"	m	struct:bandInfoStruct	file:
longLimit	lame/mpglib/layer3.c	/^static int longLimit[9][23];$/;"	v	file:
long_block_constrain	lame/libmp3lame/vbrquantize.c	/^long_block_constrain(const algo_t * that, const int vbrsf[SFBMAX], const int vbrsfmin[SFBMAX],$/;"	f	file:
long_help	lame/frontend/parse.c	/^long_help(const lame_global_flags * gfp, FILE * const fp, const char *ProgramName, int lessmode)$/;"	f
longfact	lame/libmp3lame/util.h	/^        FLOAT   longfact[SBMAX_l];$/;"	m
longhelp	lame/doc/html/detailed.html	/^<a name="longhelp"><span class="hilight">--longhelp<\/span><\/a> Shows the detailed help $/;"	a
lookup	OBSApi/Utility/XTLocalization.h	/^    String      lookup;$/;"	m	struct:LocaleStringItem
lookupGenre	lame/libmp3lame/id3tag.c	/^lookupGenre(char const* genre)$/;"	f	file:
loop	lame/libmp3lame/i386/nasm.h	/^; macro to align for begining of loop$/;"	v
loop_break	lame/libmp3lame/quantize.c	/^loop_break(const gr_info * const cod_info)$/;"	f	file:
loop_count	Source/libnsgif.h	/^    int loop_count;                    \/**< number of times to loop animation *\/$/;"	m	struct:gif_animation
loudness_sq	lame/libmp3lame/util.h	/^        FLOAT   loudness_sq[2][2]; \/* loudness^2 approx. per granule and channel *\/$/;"	m
loudness_sq_save	lame/libmp3lame/util.h	/^        FLOAT   loudness_sq_save[2]; \/* account for granule delay of L3psycho_anal *\/$/;"	m
lout	lame/libmp3lame/gain_analysis.h	/^        Float_t *lout;       \/* left "out" (i.e. post second filter) samples *\/$/;"	m	struct:replaygain_data
loutbuf	lame/libmp3lame/gain_analysis.h	/^        Float_t loutbuf[MAX_SAMPLES_PER_WINDOW + MAX_ORDER];$/;"	m	struct:replaygain_data
lowFreqMix	OBSApi/AudioSource.cpp	/^const float lowFreqMix  = dbMinus3;$/;"	v
lowLatencyMode	Source/RTMPPublisher.h	/^    latencymode_t lowLatencyMode;$/;"	m	class:RTMPPublisher
lowUVal	OBSApi/Utility/XMath.h	/^    struct {DWORD lowUVal; DWORD highVal;};$/;"	m	struct:XLARGE_UINT::<anonymous>
lowVal	OBSApi/Utility/XMath.h	/^    struct {DWORD lowVal; LONG highVal;};$/;"	m	struct:XLARGE_INT::<anonymous>
lowercase	Source/mongoose.c	/^static int lowercase(const char *s) {$/;"	f	file:
lowpass	lame/doc/html/detailed.html	/^<a name="lowpass"><span class="hilight">--lowpass number<\/span><\/a> Use a lowpass filter when encoding$/;"	a
lowpass-width	lame/doc/html/detailed.html	/^<a name="lowpass-width"><span class="hilight">--lowpass-width width<\/span><\/a> Set the width of the decaying curve.$/;"	a
lowpass1	lame/libmp3lame/util.h	/^        FLOAT   lowpass1, lowpass2; \/* normalized frequency bounds of passband *\/$/;"	m
lowpass2	lame/libmp3lame/util.h	/^        FLOAT   lowpass1, lowpass2; \/* normalized frequency bounds of passband *\/$/;"	m
lowpassfreq	lame/libmp3lame/lame_global_flags.h	/^    int     lowpassfreq;     \/* freq in Hz. 0=lame choses.$/;"	m	struct:lame_global_struct
lowpassfreq	lame/libmp3lame/util.h	/^        int     lowpassfreq;$/;"	m
lowpasswidth	lame/libmp3lame/lame_global_flags.h	/^    int     lowpasswidth;    \/* freq width of filter, in Hz$/;"	m	struct:lame_global_struct
lpAllocCurFile	OBSApi/Utility/DebugAlloc.cpp	/^TCHAR *       lpAllocCurFile;$/;"	v
lpAppDataPath	Source/Main.cpp	/^TCHAR       lpAppDataPath[MAX_PATH];$/;"	v
lpAppPath	Source/Main.cpp	/^TCHAR       lpAppPath[MAX_PATH];$/;"	v
lpCode	OBSApi/Utility/XTLocalization.h	/^    CTSTR lpCode, lpNative;$/;"	m	struct:LocaleNativeName
lpCode	Source/CodeTokenizer.h	/^    TSTR lpCode, lpTemp;$/;"	m	struct:CodeTokenizer
lpCurrentDevice	GraphicsCapture/GraphicsCaptureHook/D3D8Capture.cpp	/^LPDIRECT3DDEVICE8 lpCurrentDevice = NULL;$/;"	v
lpCurrentDevice	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^LPVOID                  lpCurrentDevice = NULL;$/;"	v
lpCurrentSwap	GraphicsCapture/GraphicsCaptureHook/D3D10Capture.cpp	/^LPVOID                  lpCurrentSwap;$/;"	v
lpData	DShowPlugin/DeviceSource.h	/^    LPBYTE lpData;$/;"	m	struct:SampleData
lpExceptionGUIDs	DShowPlugin/DShowPlugin.cpp	/^const GUID lpExceptionGUIDs[DEV_EXCEPTION_COUNT] = {CLSID_ElgatoVideoCaptureFilter};$/;"	v
lpExceptionNames	DShowPlugin/DShowPlugin.cpp	/^CTSTR lpExceptionNames[DEV_EXCEPTION_COUNT] = {TEXT("Elgato Game Capture HD")};$/;"	v
lpFile	OBSApi/Utility/DebugAlloc.cpp	/^    TCHAR lpFile[1024];$/;"	m	struct:Allocation	file:
lpFileData	OBSApi/Utility/ConfigFile.h	/^    TSTR lpFileData;$/;"	m	class:ConfigFile
lpGifData	Source/BitmapImage.h	/^    LPBYTE lpGifData;$/;"	m	class:BitmapImage
lpImageBuffer	DShowPlugin/DeviceSource.h	/^    LPBYTE          lpImageBuffer;$/;"	m	class:DeviceSource
lpLogFileName	OBSApi/Utility/XT.cpp	/^TCHAR                   lpLogFileName[260] = TEXT("XT.log");$/;"	v
lpMem	OBSApi/Utility/FastAlloc.cpp	/^    LPVOID      lpMem;$/;"	m	struct:Pool	file:
lpName	DShowPlugin/DShowPlugin.cpp	/^    CTSTR lpName;$/;"	m	struct:ConfigDialogData	file:
lpName	GraphicsCapture/GraphicsCapture.cpp	/^    CTSTR lpName;$/;"	m	struct:ConfigDialogData	file:
lpName	OBSApi/Utility/Profiler.cpp	/^    CTSTR lpName;$/;"	m	struct:ProfileNodeInfo	file:
lpName	OBSApi/Utility/Profiler.h	/^    CTSTR lpName;$/;"	m	class:ProfilerNode
lpName	Source/BitmapImageSource.cpp	/^    CTSTR lpName;$/;"	m	struct:ConfigDesktopSourceInfo	file:
lpName	Source/BitmapTransitionSource.cpp	/^    CTSTR lpName;$/;"	m	struct:ConfigBitmapInfo	file:
lpName	Source/D3D10ShaderProcessor.cpp	/^    LPCSTR lpName;$/;"	m	struct:SemanticInfo	file:
lpName	Source/DesktopImageSource.cpp	/^    CTSTR lpName;$/;"	m	struct:ConfigDesktopSourceInfo	file:
lpName	Source/TextOutputSource.cpp	/^    CTSTR lpName;$/;"	m	struct:ConfigTextSourceInfo	file:
lpNative	OBSApi/Utility/XTLocalization.h	/^    CTSTR lpCode, lpNative;$/;"	m	struct:LocaleNativeName
lpNext	OBSApi/Utility/FastAlloc.cpp	/^    FreeMemInfo *lpNext;    \/\/pointer to next free data$/;"	m	struct:FreeMemInfo	file:
lpPacket	Source/OBS.h	/^    LPBYTE lpPacket;$/;"	m	struct:DataPacket
lpPool	OBSApi/Utility/FastAlloc.cpp	/^    Pool        *lpPool;$/;"	m	struct:FreeMemInfo	file:
lpPrev	OBSApi/Utility/FastAlloc.cpp	/^    FreeMemInfo *lpPrev;$/;"	m	struct:FreeMemInfo	file:
lpSampleRate	lame/dshow/PropPage.cpp	/^    LPCSTR lpSampleRate;$/;"	m	struct:SSampleRate	file:
lpSharedMemory	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	/^LPBYTE lpSharedMemory = NULL;$/;"	v
lpString	OBSApi/Utility/XString.h	/^    TSTR lpString;$/;"	m	class:String
lpTemp	Source/CodeTokenizer.h	/^    TSTR lpCode, lpTemp;$/;"	m	struct:CodeTokenizer
lpszText	lame/dshow/aboutprp.cpp	/^CHAR lpszText[] =   "This library is free software; you can redistribute it \\r\\n"$/;"	v
lrand	Source/BitmapTransitionSource.cpp	/^    inline int lrand(int limit)$/;"	f	class:BitmapTransitionSource	file:
lrint	libsamplerate/float_cast.h	/^	lrint (double flt)$/;"	f
lrint	libsamplerate/float_cast.h	/^	lrint(double flt)$/;"	f
lrint	libsamplerate/float_cast.h	194;"	d
lrint	libsamplerate/float_cast.h	197;"	d
lrint	libsamplerate/float_cast.h	230;"	d
lrint	libsamplerate/float_cast.h	233;"	d
lrint	libsamplerate/float_cast.h	274;"	d
lrint	libsamplerate/float_cast.h	83;"	d
lrint	libsamplerate/float_cast.h	86;"	d
lrintf	libsamplerate/float_cast.h	/^	lrintf (float flt)$/;"	f
lrintf	libsamplerate/float_cast.h	/^	lrintf(float flt)$/;"	f
lrintf	libsamplerate/float_cast.h	195;"	d
lrintf	libsamplerate/float_cast.h	198;"	d
lrintf	libsamplerate/float_cast.h	231;"	d
lrintf	libsamplerate/float_cast.h	234;"	d
lrintf	libsamplerate/float_cast.h	275;"	d
lrintf	libsamplerate/float_cast.h	84;"	d
lrintf	libsamplerate/float_cast.h	87;"	d
lsa	Source/mongoose.c	/^  union socket_address lsa;   \/\/ Listening socket address$/;"	m	struct:mg_server	file:
lseek	Source/mongoose.c	1325;"	d	file:
lseek	Source/mongoose.c	1338;"	d	file:
lsf	lame/mpglib/mpg123.h	/^    int     lsf;             \/* 0 = MPEG-1, 1 = MPEG-2\/2.5 *\/$/;"	m	struct:frame
lstep	lame/libmp3lame/gain_analysis.h	/^        Float_t *lstep;      \/* left "first step" (i.e. post first filter) samples *\/$/;"	m	struct:replaygain_data
lstepbuf	lame/libmp3lame/gain_analysis.h	/^        Float_t lstepbuf[MAX_SAMPLES_PER_WINDOW + MAX_ORDER];$/;"	m	struct:replaygain_data
lsum	lame/libmp3lame/gain_analysis.h	/^        double  lsum;$/;"	m	struct:replaygain_data
ltmain.sh	lame/ltmain.sh	1;"	F
ltp.c	libfaac/ltp.c	1;"	F
ltp.h	libfaac/ltp.h	1;"	F
ltpInfo	libfaac/coder.h	/^    LtpInfo ltpInfo;$/;"	m
ltpTimeBuff	libfaac/frame.h	/^    double *ltpTimeBuff[MAX_CHANNELS];$/;"	m
ltp_enc_tf	libfaac/ltp.c	/^static double ltp_enc_tf(faacEncHandle hEncoder,$/;"	f	file:
ltp_overlap_buffer	libfaac/coder.h	/^    double *ltp_overlap_buffer;$/;"	m
ltrFrame	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                ltrFrame          :1;        \/**< [out]: Flag indicating this frame is marked as LTR frame *\/$/;"	m	struct:_NV_ENC_LOCK_BITSTREAM
ltrFrameBitmap	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                ltrFrameBitmap;              \/**< [out]: Bitmap of LTR frames indices which were used for encoding this frame. Value of 0 if no LTR frames were used. *\/$/;"	m	struct:_NV_ENC_LOCK_BITSTREAM
ltrFrameIdx	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                ltrFrameIdx;                 \/**< [out]: Frame index associated with this LTR frame. *\/$/;"	m	struct:_NV_ENC_LOCK_BITSTREAM
ltrMarkFrame	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t ltrMarkFrame               :1;              \/**< [in]: Set to 1 if client wants to mark this frame as LTR *\/$/;"	m	struct:_NV_ENC_PIC_PARAMS_H264
ltrMarkFrameIdx	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t ltrMarkFrameIdx;                            \/**< [in]: Specifies the long term referenceframe index to use for marking this frame as LTR.*\/$/;"	m	struct:_NV_ENC_PIC_PARAMS_H264
ltrNumFrames	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                            ltrNumFrames;               \/**< [in]: Specifies the number of LTR frames used. Additionally, encoder will mark the first numLTRFrames base layer reference frames within each IDR interval as LTR *\/$/;"	m	struct:_NV_ENC_CONFIG_H264
ltrTrustMode	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                            ltrTrustMode;               \/**< [in]: Specifies the LTR operating mode. Set to 0 to disallow encoding using LTR frames until later specified. Set to 1 to allow encoding using LTR frames unless later invalidated.*\/$/;"	m	struct:_NV_ENC_CONFIG_H264
ltrUsageMode	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t ltrUsageMode;                               \/**< [in]: Specifies additional usage constraints for encoding using LTR frames from this point further. 0: no constraints, 1: no short term refs older than current, no previous LTR frames.*\/$/;"	m	struct:_NV_ENC_PIC_PARAMS_H264
ltrUseFrameBitmap	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t ltrUseFrameBitmap;                          \/**< [in]: Specifies the the associated bitmap of LTR frame indices when encoding this frame. *\/$/;"	m	struct:_NV_ENC_PIC_PARAMS_H264
ltrUseFrames	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t ltrUseFrames               :1;              \/**< [in]: Set to 1 if client allows encoding this frame using the LTR frames specified in ltrFrameBitmap *\/$/;"	m	struct:_NV_ENC_PIC_PARAMS_H264
m	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^        float m[4][4];$/;"	m	union:_D3DMATRIX::<anonymous>
m	OBSApi/Utility/XMath.h	/^        __m128 m;$/;"	m	union:Quat::<anonymous>
m	OBSApi/Utility/XMath.h	/^        __m128 m;$/;"	m	union:Vect4::<anonymous>
m	OBSApi/Utility/XMath.h	/^        __m128 m;$/;"	m	union:Vect::<anonymous>
m	lame/doc/html/detailed.html	/^<a name="m"><span class="hilight">-m x<\/span><\/a> Channel modes$/;"	a
m	lame/frontend/rtp.c	/^    int     m:1;             \/* marker: 0 *\/$/;"	m	struct:rtpbits	file:
mBRmode	lame/ACM/AEncodeProperties.h	/^	BRMode mBRmode;$/;"	m	class:AEncodeProperties
mCreatePluginPtr	libmfx/include/mfx_load_plugin.h	/^        CreatePluginPtr_t mCreatePluginPtr;$/;"	m	class:MFX::PluginModule
mCurrentAPIVersion	libmfx/include/mfx_plugin_hive.h	/^        mfxVersion mCurrentAPIVersion;$/;"	m	class:MFX::MFXPluginStorageBase
mHmodule	libmfx/include/mfx_load_plugin.h	/^        mfxModuleHandle mHmodule;$/;"	m	class:MFX::PluginModule
mIndex	libmfx/include/mfx_vector.h	/^        mfxU32 mIndex;$/;"	m	class:MFX::iterator_tmpl
mIsAPIVersionParsed	libmfx/include/mfx_plugin_hive.h	/^        bool mIsAPIVersionParsed;$/;"	m	class:MFX::MFXPluginsInFS
mIsVersionParsed	libmfx/include/mfx_plugin_hive.h	/^        bool mIsVersionParsed;$/;"	m	class:MFX::MFXPluginsInFS
mNrecords	libmfx/include/mfx_vector.h	/^        mfxU32  mNrecords;$/;"	m	class:MFX::MFXVector
mPath	libmfx/include/mfx_load_plugin.h	/^        msdk_disp_char mPath[MAX_PLUGIN_PATH];$/;"	m	class:MFX::PluginModule
mPlugins	libmfx/include/mfx_load_plugin.h	/^        MFXVector<FactoryRecord> mPlugins;$/;"	m	class:MFX::MFXPluginFactory
mRecords	libmfx/include/mfx_vector.h	/^        T*      mRecords;$/;"	m	class:MFX::MFXVector
mRecords	libmfx/include/mfx_vector.h	/^        T* mRecords;$/;"	m	class:MFX::iterator_tmpl
mSession	libmfx/include/mfx_load_plugin.h	/^        mfxSession mSession;$/;"	m	class:MFX::MFXPluginFactory
m_Adapter	libmfx/include/msdk/include/mfxplugin++.h	/^    detail::MFXPluginAdapterInternal<T> m_Adapter;$/;"	m	class:MFXPluginAdapter
m_CapsNum	lame/dshow/Mpegac.h	/^    int                         m_CapsNum;$/;"	m	class:CMpegAudEnc
m_CurrentOutputFormat	lame/dshow/Mpegac.h	/^    current_output_format_t  m_CurrentOutputFormat;$/;"	m	class:CMpegAudEncOutPin
m_DispatcherLogSink	libmfx/include/mfx_dispatcher_log.h	/^    int m_DispatcherLogSink;$/;"	m	class:DispatchLog
m_Encoder	lame/dshow/Mpegac.h	/^    CEncoder                    m_Encoder;$/;"	m	class:CMpegAudEnc
m_EventHandle	libmfx/src/mfx_dispatcher_log.cpp	/^    REGHANDLE m_EventHandle;$/;"	m	class:ETWHandler	file:
m_ExtResponses	QSVHelper/IntelSupport/include/base_allocator.h	/^    std::list<UniqueResponse> m_ExtResponses;$/;"	m	class:BaseFrameAllocator
m_Recepients	libmfx/include/mfx_dispatcher_log.h	/^    std::list<IMsgHandler*>m_Recepients;$/;"	m	class:DispatchLog
m_SetFormat	lame/dshow/Mpegac.h	/^    BOOL        m_SetFormat;$/;"	m	class:CMpegAudEncOutPin
m_StorageID	libmfx/include/mfx_library_iterator.h	/^    int    m_StorageID;$/;"	m	class:MFX::MFXLibraryIterator
m_SubKeyName	libmfx/include/mfx_library_iterator.h	/^    wchar_t m_SubKeyName[MFX_MAX_REGISTRY_KEY_NAME];            \/\/ registry subkey for selected module loaded $/;"	m	class:MFX::MFXLibraryIterator
m_VideoProcessorEnum	QSVHelper/IntelSupport/include/d3d11_device.h	/^    ComPtr<ID3D11VideoProcessorEnumerator> m_VideoProcessorEnum;$/;"	m	class:CD3D11Device
m_WorkingBuffer	lame/ACM/ACMStream.h	/^	char m_WorkingBuffer[2304*2]; \/\/ should be at least twice my_SamplesPerBlock$/;"	m	class:ACMStream
m_WorkingBuffer	lame/ACM/DecodeStream.h	/^	char m_WorkingBuffer[2304*2]; \/\/ should be at least twice my_SamplesPerBlock$/;"	m	class:DecodeStream
m_WorkingBufferUseSize	lame/ACM/ACMStream.h	/^unsigned int m_WorkingBufferUseSize;$/;"	m	class:ACMStream
m_WorkingBufferUseSize	lame/ACM/DecodeStream.h	/^	unsigned int m_WorkingBufferUseSize;$/;"	m	class:DecodeStream
m_adapters	libmfx/include/mfx_library_iterator.h	/^    struct mfx_disp_adapters* m_adapters;$/;"	m	class:MFX::MFXLibraryIterator
m_adapters_num	libmfx/include/mfx_library_iterator.h	/^    mfxU32 m_adapters_num;$/;"	m	class:MFX::MFXLibraryIterator
m_allowOverlap	lame/dshow/Mpegac.h	/^    DWORD                       m_allowOverlap;$/;"	m	class:CMpegAudEnc
m_bCustomSend	librtmp/rtmp.h	/^        uint8_t m_bCustomSend;$/;"	m	struct:RTMP
m_bDefaultStereoEnabled	QSVHelper/IntelSupport/include/d3d11_device.h	/^    BOOL                                    m_bDefaultStereoEnabled;$/;"	m	class:CD3D11Device
m_bFinished	lame/dshow/Encoder.h	/^    BOOL                m_bFinished;$/;"	m	class:CEncoder
m_bInpuTypeSet	lame/dshow/Encoder.h	/^    BOOL                m_bInpuTypeSet;$/;"	m	class:CEncoder
m_bIsSubKeyValid	libmfx/include/mfx_library_iterator.h	/^    bool   m_bIsSubKeyValid;$/;"	m	class:MFX::MFXLibraryIterator
m_bOutpuTypeSet	lame/dshow/Encoder.h	/^    BOOL                m_bOutpuTypeSet;$/;"	m	class:CEncoder
m_bPlaying	librtmp/rtmp.h	/^        uint8_t m_bPlaying;$/;"	m	struct:RTMP
m_bProviderEnable	libmfx/src/mfx_dispatcher_log.cpp	/^    bool      m_bProviderEnable;$/;"	m	class:ETWHandler	file:
m_bSendChunkSizeInfo	librtmp/rtmp.h	/^        uint8_t m_bSendChunkSizeInfo;$/;"	m	struct:RTMP
m_bSendCounter	librtmp/rtmp.h	/^        uint8_t m_bSendCounter;$/;"	m	struct:RTMP
m_bSendEncoding	librtmp/rtmp.h	/^        uint8_t m_bSendEncoding;$/;"	m	struct:RTMP
m_bStreamOutput	lame/dshow/Mpegac.h	/^	BOOL						m_bStreamOutput;      \/\/ Binary stream output$/;"	m	class:CMpegAudEnc
m_bUseFormatter	libmfx/src/mfx_dispatcher_log.cpp	/^    bool      m_bUseFormatter;$/;"	m	class:ETWHandler	file:
m_bUseNagle	librtmp/rtmp.h	/^        uint8_t m_bUseNagle;$/;"	m	struct:RTMP
m_baseRegKey	libmfx/include/mfx_library_iterator.h	/^    WinRegKey m_baseRegKey;                                     \/\/ (WinRegKey) main registry key    $/;"	m	class:MFX::MFXLibraryIterator
m_bindIP	librtmp/rtmp.h	/^        RTMP_BINDINFO m_bindIP;$/;"	m	struct:RTMP
m_body	librtmp/rtmp.h	/^        char *m_body;$/;"	m	struct:RTMPPacket
m_bytesPerSample	lame/dshow/Mpegac.h	/^    int                         m_bytesPerSample;$/;"	m	class:CMpegAudEnc
m_bytesToDuration	lame/dshow/Mpegac.h	/^    float                       m_bytesToDuration;$/;"	m	class:CMpegAudEnc
m_cbStreamAlignment	lame/dshow/Mpegac.h	/^	long						m_cbStreamAlignment;  \/\/ Stream block size$/;"	m	class:CMpegAudEnc
m_channelTimestamp	librtmp/rtmp.h	/^        int *m_channelTimestamp;	\/* abs timestamp of last packet *\/$/;"	m	struct:RTMP
m_channelsAllocatedIn	librtmp/rtmp.h	/^        int m_channelsAllocatedIn;$/;"	m	struct:RTMP
m_channelsAllocatedOut	librtmp/rtmp.h	/^        int m_channelsAllocatedOut;$/;"	m	struct:RTMP
m_chunk	librtmp/rtmp.h	/^        RTMPChunk *m_chunk;$/;"	m	struct:RTMPPacket
m_clientID	librtmp/rtmp.h	/^        AVal m_clientID;$/;"	m	struct:RTMP
m_codecPlg	libmfx/include/msdk/include/mfxplugin++.h	/^        mfxVideoCodecPlugin   m_codecPlg;$/;"	m	class:detail::MFXCodecPluginAdapterBase
m_core	libmfx/include/msdk/include/mfxplugin++.h	/^    mfxCoreInterface m_core;$/;"	m	class:MFXCoreInterface
m_croph	QSVHelper/IntelSupport/include/base_allocator.h	/^        mfxU16 m_croph;$/;"	m	struct:BaseFrameAllocator::UniqueResponse
m_cropw	QSVHelper/IntelSupport/include/base_allocator.h	/^        mfxU16 m_cropw;$/;"	m	struct:BaseFrameAllocator::UniqueResponse
m_cs	lame/dshow/Mpegac.h	/^    CCritSec                    m_cs;$/;"	m	class:CMpegAudEnc
m_currentMediaTypeIndex	lame/dshow/Mpegac.h	/^	int                         m_currentMediaTypeIndex;$/;"	m	class:CMpegAudEnc
m_customSendFunc	librtmp/rtmp.h	/^        CUSTOMSEND m_customSendFunc;$/;"	m	struct:RTMP
m_customSendParam	librtmp/rtmp.h	/^        void*   m_customSendParam;$/;"	m	struct:RTMP
m_deviceID	libmfx/include/mfx_dxva2_device.h	/^    mfxU32 m_deviceID;$/;"	m	class:MFX::DXDevice
m_deviceID	libmfx/include/mfx_dxva2_device.h	/^    mfxU32 m_deviceID;$/;"	m	class:MFX::DXVA2Device
m_deviceID	libmfx/include/mfx_library_iterator.h	/^    mfxU32 m_deviceID;                                          \/\/ (mfxU32) property of used graphic card$/;"	m	class:MFX::MFXLibraryIterator
m_driverVersion	libmfx/include/mfx_dxva2_device.h	/^    mfxU64 m_driverVersion;$/;"	m	class:MFX::DXDevice
m_driverVersion	libmfx/include/mfx_dxva2_device.h	/^    mfxU64 m_driverVersion;$/;"	m	class:MFX::DXVA2Device
m_dwBitrate	lame/dshow/PropPage.h	/^    DWORD   m_dwBitrate;                \/\/constant bit rate$/;"	m	class:CMpegAudEncPropertyPage
m_dwCRC	lame/dshow/PropPage.h	/^    DWORD   m_dwCRC;$/;"	m	class:CMpegAudEncPropertyPage
m_dwChannelMode	lame/dshow/PropPage.h	/^    DWORD   m_dwChannelMode;$/;"	m	class:CMpegAudEncPropertyPage
m_dwChannelMode	lame/dshow/PropPage_adv.h	/^    DWORD   m_dwChannelMode;$/;"	m	class:CMpegAudEncPropertyPageAdv
m_dwCopyright	lame/dshow/PropPage.h	/^    DWORD   m_dwCopyright;$/;"	m	class:CMpegAudEncPropertyPage
m_dwEnforceVBRmin	lame/dshow/PropPage_adv.h	/^    DWORD   m_dwEnforceVBRmin;$/;"	m	class:CMpegAudEncPropertyPageAdv
m_dwForceMS	lame/dshow/PropPage_adv.h	/^    DWORD   m_dwForceMS;$/;"	m	class:CMpegAudEncPropertyPageAdv
m_dwForceMono	lame/dshow/PropPage.h	/^    DWORD   m_dwForceMono;$/;"	m	class:CMpegAudEncPropertyPage
m_dwIndex	lame/dshow/REG.H	/^	DWORD	m_dwIndex;$/;"	m	class:Lame::CRegEnumKey
m_dwKeepAllFreq	lame/dshow/PropPage_adv.h	/^    DWORD   m_dwKeepAllFreq;$/;"	m	class:CMpegAudEncPropertyPageAdv
m_dwMax	lame/dshow/PropPage.h	/^    DWORD   m_dwMax;                    \/\/specify a maximum allowed bitrate$/;"	m	class:CMpegAudEncPropertyPage
m_dwMin	lame/dshow/PropPage.h	/^    DWORD   m_dwMin;                    \/\/specify a minimum allowed bitrate$/;"	m	class:CMpegAudEncPropertyPage
m_dwModeFixed	lame/dshow/PropPage_adv.h	/^    DWORD   m_dwModeFixed;$/;"	m	class:CMpegAudEncPropertyPageAdv
m_dwNoShortBlock	lame/dshow/PropPage_adv.h	/^    DWORD   m_dwNoShortBlock;$/;"	m	class:CMpegAudEncPropertyPageAdv
m_dwOriginal	lame/dshow/PropPage.h	/^    DWORD   m_dwOriginal;$/;"	m	class:CMpegAudEncPropertyPage
m_dwOverlap	lame/dshow/PropPage_adv.h	/^    DWORD   m_dwOverlap;$/;"	m	class:CMpegAudEncPropertyPageAdv
m_dwQuality	lame/dshow/PropPage.h	/^    DWORD   m_dwQuality;                \/\/encoding quality$/;"	m	class:CMpegAudEncPropertyPage
m_dwSampleRate	lame/dshow/PropPage.h	/^    DWORD   m_dwSampleRate;$/;"	m	class:CMpegAudEncPropertyPage
m_dwSetStop	lame/dshow/PropPage_adv.h	/^    DWORD   m_dwSetStop;$/;"	m	class:CMpegAudEncPropertyPageAdv
m_dwStrictISO	lame/dshow/PropPage_adv.h	/^    DWORD   m_dwStrictISO;$/;"	m	class:CMpegAudEncPropertyPageAdv
m_dwVBRq	lame/dshow/PropPage.h	/^    DWORD   m_dwVBRq;                   \/\/VBR quality setting (0=highest quality, 9=lowest) $/;"	m	class:CMpegAudEncPropertyPage
m_dwVariable	lame/dshow/PropPage.h	/^    DWORD   m_dwVariable;               \/\/flag - whether the variable bit rate set $/;"	m	class:CMpegAudEncPropertyPage
m_dwVoiceMode	lame/dshow/PropPage_adv.h	/^    DWORD   m_dwVoiceMode;$/;"	m	class:CMpegAudEncPropertyPageAdv
m_dwXingTag	lame/dshow/PropPage_adv.h	/^    DWORD   m_dwXingTag;$/;"	m	class:CMpegAudEncPropertyPageAdv
m_fAudioCodecs	librtmp/rtmp.h	/^        double m_fAudioCodecs;	\/* audioCodecs for the connect packet *\/$/;"	m	struct:RTMP
m_fDuration	librtmp/rtmp.h	/^        double m_fDuration;		\/* duration of stream in seconds *\/$/;"	m	struct:RTMP
m_fEncoding	librtmp/rtmp.h	/^        double m_fEncoding;		\/* AMF0 or AMF3 *\/$/;"	m	struct:RTMP
m_fVideoCodecs	librtmp/rtmp.h	/^        double m_fVideoCodecs;	\/* videoCodecs for the connect packet *\/$/;"	m	struct:RTMP
m_fWindowInactive	lame/dshow/aboutprp.h	/^    BOOL    m_fWindowInactive;$/;"	m	class:CMAEAbout
m_frameCount	lame/dshow/Encoder.h	/^    int                 m_frameCount;$/;"	m	class:CEncoder
m_hKey	lame/dshow/REG.H	/^	HKEY	m_hKey;$/;"	m	class:Lame::CRegEnumKey
m_hKey	lame/dshow/REG.H	/^	HKEY	m_hKey;$/;"	m	class:Lame::CRegKey
m_hKey	libmfx/include/mfx_win_reg_key.h	/^    HKEY m_hKey;                                                \/\/ (HKEY) handle to the opened key$/;"	m	class:MFX::WinRegKey
m_hModule	libmfx/include/mfx_dxva2_device.h	/^    HMODULE m_hModule;$/;"	m	class:MFX::DXDevice
m_hRootKey	lame/dshow/REG.H	/^	HKEY	m_hRootKey;$/;"	m	class:Lame::CRegKey
m_hasAbsTimestamp	librtmp/rtmp.h	/^        uint8_t m_hasAbsTimestamp;	\/* timestamp absolute or relative? *\/$/;"	m	struct:RTMPPacket
m_hasFinished	lame/dshow/Mpegac.h	/^    BOOL                        m_hasFinished;$/;"	m	class:CMpegAudEnc
m_hdl	libmfx/include/mfx_dispatcher_log.h	/^    FILE * m_hdl;$/;"	m	class:FileSink
m_headerType	librtmp/rtmp.h	/^        uint8_t m_headerType;$/;"	m	struct:RTMPPacket
m_hwndQuality	lame/dshow/PropPage.h	/^    HWND    m_hwndQuality;               \/\/Slider window handle$/;"	m	class:CMpegAudEncPropertyPage
m_implInterface	libmfx/include/mfx_library_iterator.h	/^    mfxIMPL m_implInterface;                                    \/\/ Required interface (D3D9, D3D11)$/;"	m	class:MFX::MFXLibraryIterator
m_implType	libmfx/include/mfx_library_iterator.h	/^    eMfxImplType m_implType;                                    \/\/ Required library implementation $/;"	m	class:MFX::MFXLibraryIterator
m_inChunkSize	librtmp/rtmp.h	/^        int m_inChunkSize;$/;"	m	struct:RTMP
m_initParams	QSVHelper/IntelSupport/include/d3d11_allocator.h	/^    D3D11AllocatorParams m_initParams;$/;"	m	class:D3D11FrameAllocator
m_lastLibIndex	libmfx/include/mfx_library_iterator.h	/^    int m_lastLibIndex;                                      \/\/ (mfxU32) index of previously returned library$/;"	m	class:MFX::MFXLibraryIterator
m_lastLibIndex	libmfx/include/mfx_library_iterator.h	/^    mfxU32 m_lastLibIndex;                                      \/\/ (mfxU32) index of previously returned library$/;"	m	class:MFX::MFXLibraryIterator
m_lastLibMerit	libmfx/include/mfx_library_iterator.h	/^    mfxU32 m_lastLibMerit;                                      \/\/ (mfxU32) merit of previously returned library$/;"	m	class:MFX::MFXLibraryIterator
m_level	libmfx/include/mfx_dispatcher_log.h	/^    int  m_level;$/;"	m	struct:DispatchLogBlockHelper
m_level	libmfx/include/mfx_dispatcher_log.h	/^    int  m_level;$/;"	m	struct:DispatcherLogBracketsHelper
m_libPath	libmfx/src/mfx_dispatcher_trace.cpp	/^    std::string m_libPath;$/;"	m	class:sdk_library	file:
m_libs	libmfx/include/mfx_library_iterator.h	/^    struct mfx_libs* m_libs;$/;"	m	class:MFX::MFXLibraryIterator
m_libs_num	libmfx/include/mfx_library_iterator.h	/^    mfxU32 m_libs_num;$/;"	m	class:MFX::MFXLibraryIterator
m_lock	lame/dshow/Encoder.h	/^    CCritSec            m_lock;$/;"	m	class:CEncoder
m_luid	libmfx/include/mfx_dxva2_device.h	/^    mfxU64 m_luid;$/;"	m	class:MFX::DXDevice
m_mabsi	lame/dshow/Encoder.h	/^    MPEG_ENCODER_CONFIG m_mabsi;$/;"	m	class:CEncoder
m_mediaChannel	librtmp/rtmp.h	/^        int m_mediaChannel;$/;"	m	struct:RTMP
m_mediaStamp	librtmp/rtmp.h	/^        uint32_t m_mediaStamp;$/;"	m	struct:RTMP
m_memIdMap	QSVHelper/IntelSupport/include/d3d11_allocator.h	/^    std::vector<referenceType> m_memIdMap;$/;"	m	class:D3D11FrameAllocator
m_methodCalls	librtmp/rtmp.h	/^        RTMP_METHOD *m_methodCalls;	\/* remote method calls queue *\/$/;"	m	struct:RTMP
m_mfxAPI	libmfx/include/msdk/include/mfxplugin++.h	/^        mfxPlugin m_mfxAPI;$/;"	m	class:detail::MFXPluginAdapterBase
m_mid	QSVHelper/IntelSupport/include/d3d11_allocator.h	/^    mfxMedIdEx m_mid;$/;"	m	class:MFXReadWriteMid
m_mid_to_report	QSVHelper/IntelSupport/include/d3d11_allocator.h	/^    mfxMemId   m_mid_to_report;$/;"	m	class:MFXReadWriteMid
m_msgCounter	librtmp/rtmp.h	/^        int m_msgCounter;		\/* RTMPT stuff *\/$/;"	m	struct:RTMP
m_nBWCheckCounter	librtmp/rtmp.h	/^        int m_nBWCheckCounter;$/;"	m	struct:RTMP
m_nBodySize	librtmp/rtmp.h	/^        uint32_t m_nBodySize;$/;"	m	struct:RTMPPacket
m_nBufferMS	librtmp/rtmp.h	/^        int m_nBufferMS;$/;"	m	struct:RTMP
m_nBytesIn	librtmp/rtmp.h	/^        int m_nBytesIn;$/;"	m	struct:RTMP
m_nBytesInSent	librtmp/rtmp.h	/^        int m_nBytesInSent;$/;"	m	struct:RTMP
m_nBytesRead	librtmp/rtmp.h	/^        uint32_t m_nBytesRead;$/;"	m	struct:RTMPPacket
m_nChannel	librtmp/rtmp.h	/^        int m_nChannel;$/;"	m	struct:RTMPPacket
m_nClientBW	librtmp/rtmp.h	/^        int m_nClientBW;$/;"	m	struct:RTMP
m_nClientBW2	librtmp/rtmp.h	/^        uint8_t m_nClientBW2;$/;"	m	struct:RTMP
m_nInfoField2	librtmp/rtmp.h	/^        int32_t m_nInfoField2;	\/* last 4 bytes in a long header *\/$/;"	m	struct:RTMPPacket
m_nServerBW	librtmp/rtmp.h	/^        int m_nServerBW;$/;"	m	struct:RTMP
m_nTimeStamp	librtmp/rtmp.h	/^        uint32_t m_nTimeStamp;	\/* timestamp *\/$/;"	m	struct:RTMPPacket
m_nViews	QSVHelper/IntelSupport/include/d3d11_device.h	/^    mfxU16                                  m_nViews;$/;"	m	class:CD3D11Device
m_name	lame/dshow/REG.H	/^	TCHAR	m_name[MAX_PATH];$/;"	m	class:Lame::CRegKey
m_numAdapters	libmfx/include/mfx_dxva2_device.h	/^    mfxU32 m_numAdapters;$/;"	m	class:MFX::DXDevice
m_numAdapters	libmfx/include/mfx_dxva2_device.h	/^    mfxU32 m_numAdapters;$/;"	m	class:MFX::DXVA2Device
m_numCalls	librtmp/rtmp.h	/^        int m_numCalls;$/;"	m	struct:RTMP
m_numInvokes	librtmp/rtmp.h	/^        int m_numInvokes;$/;"	m	struct:RTMP
m_opcode	libmfx/include/mfx_dispatcher_log.h	/^    int  m_opcode;$/;"	m	struct:DispatcherLogBracketsHelper
m_outChunkSize	librtmp/rtmp.h	/^        int m_outChunkSize;$/;"	m	struct:RTMP
m_outFrameBuf	lame/dshow/Encoder.h	/^    unsigned char *     m_outFrameBuf;$/;"	m	class:CEncoder
m_outOffset	lame/dshow/Encoder.h	/^    int                 m_outOffset;$/;"	m	class:CEncoder
m_outReadOffset	lame/dshow/Encoder.h	/^    int                 m_outReadOffset;$/;"	m	class:CEncoder
m_pAEProps	lame/dshow/PropPage.h	/^    IAudioEncoderProperties *m_pAEProps;$/;"	m	class:CMpegAudEncPropertyPage
m_pAEProps	lame/dshow/PropPage_adv.h	/^    IAudioEncoderProperties *m_pAEProps;$/;"	m	class:CMpegAudEncPropertyPageAdv
m_pAdapter	QSVHelper/IntelSupport/include/d3d11_device.h	/^    ComPtr<IDXGIAdapter>                   m_pAdapter;$/;"	m	class:CD3D11Device
m_pCSection	libmfx/include/mfx_critical_section.h	/^    mfxCriticalSection *m_pCSection;$/;"	m	class:MFX::MFXAutomaticCriticalSection
m_pD3D11Ctx	QSVHelper/IntelSupport/include/d3d11_device.h	/^    ComPtr<ID3D11DeviceContext>            m_pD3D11Ctx;$/;"	m	class:CD3D11Device
m_pD3D11Device	QSVHelper/IntelSupport/include/d3d11_device.h	/^    ComPtr<ID3D11Device>                   m_pD3D11Device;$/;"	m	class:CD3D11Device
m_pD3D9	libmfx/include/mfx_dxva2_device.h	/^    void *m_pD3D9;$/;"	m	class:MFX::D3D9Device
m_pD3D9Ex	libmfx/include/mfx_dxva2_device.h	/^    void *m_pD3D9Ex;$/;"	m	class:MFX::D3D9Device
m_pDX11VideoDevice	QSVHelper/IntelSupport/include/d3d11_device.h	/^    ComPtr<ID3D11VideoDevice>              m_pDX11VideoDevice; \/\/QI$/;"	m	class:CD3D11Device
m_pDXGIAdapter1	libmfx/include/mfx_dxva2_device.h	/^    void *m_pDXGIAdapter1;$/;"	m	class:MFX::DXGI1Device
m_pDXGIBackBuffer	QSVHelper/IntelSupport/include/d3d11_device.h	/^    ComPtr<ID3D11Texture2D>                m_pDXGIBackBuffer;$/;"	m	class:CD3D11Device
m_pDXGIDev	QSVHelper/IntelSupport/include/d3d11_device.h	/^    ComPtr<IDXGIDevice1>                   m_pDXGIDev;$/;"	m	class:CD3D11Device
m_pDXGIFactory	QSVHelper/IntelSupport/include/d3d11_device.h	/^    ComPtr<IDXGIFactory2>                  m_pDXGIFactory;$/;"	m	class:CD3D11Device
m_pDXGIFactory1	libmfx/include/mfx_dxva2_device.h	/^    void *m_pDXGIFactory1;$/;"	m	class:MFX::DXGI1Device
m_pDXGIOutput	QSVHelper/IntelSupport/include/d3d11_device.h	/^    ComPtr<IDXGIOutput>                    m_pDXGIOutput;$/;"	m	class:CD3D11Device
m_pDeviceContext	QSVHelper/IntelSupport/include/d3d11_allocator.h	/^    ID3D11DeviceContext *m_pDeviceContext;$/;"	m	class:D3D11FrameAllocator
m_pDisplayControl	QSVHelper/IntelSupport/include/d3d11_device.h	/^    ComPtr<IDXGIDisplayControl>            m_pDisplayControl;$/;"	m	class:CD3D11Device
m_pFilter	lame/dshow/Mpegac.h	/^    CMpegAudEnc *m_pFilter;$/;"	m	class:CMpegAudEncOutPin
m_pInputViewLeft	QSVHelper/IntelSupport/include/d3d11_device.h	/^    ComPtr<ID3D11VideoProcessorInputView>  m_pInputViewLeft;$/;"	m	class:CD3D11Device
m_pInputViewRight	QSVHelper/IntelSupport/include/d3d11_device.h	/^    ComPtr<ID3D11VideoProcessorInputView>  m_pInputViewRight;$/;"	m	class:CD3D11Device
m_pOutputView	QSVHelper/IntelSupport/include/d3d11_device.h	/^    ComPtr<ID3D11VideoProcessorOutputView> m_pOutputView;$/;"	m	class:CD3D11Device
m_pStaging	QSVHelper/IntelSupport/include/d3d11_allocator.h	/^        ID3D11Texture2D * m_pStaging;$/;"	m	class:D3D11FrameAllocator::TextureSubResource
m_pSwapChain	QSVHelper/IntelSupport/include/d3d11_device.h	/^    ComPtr<IDXGISwapChain1>                m_pSwapChain;$/;"	m	class:CD3D11Device
m_pTarget	QSVHelper/IntelSupport/include/d3d11_allocator.h	/^        TextureResource * m_pTarget;$/;"	m	class:D3D11FrameAllocator::TextureSubResource
m_pTempTexture	QSVHelper/IntelSupport/include/d3d11_device.h	/^    ComPtr<ID3D11Texture2D>                m_pTempTexture;$/;"	m	class:CD3D11Device
m_pTexture	QSVHelper/IntelSupport/include/d3d11_allocator.h	/^        ID3D11Texture2D * m_pTexture;$/;"	m	class:D3D11FrameAllocator::TextureSubResource
m_pVideoContext	QSVHelper/IntelSupport/include/d3d11_device.h	/^    ComPtr<ID3D11VideoContext>             m_pVideoContext; \/\/QI$/;"	m	class:CD3D11Device
m_pVideoProcessor	QSVHelper/IntelSupport/include/d3d11_device.h	/^    ComPtr<ID3D11VideoProcessor>           m_pVideoProcessor;$/;"	m	class:CD3D11Device
m_packetType	librtmp/rtmp.h	/^        uint8_t m_packetType;$/;"	m	struct:RTMPPacket
m_param	libmfx/include/msdk/include/mfxplugin++.h	/^    mfxPluginParam m_param;$/;"	m	class:MFXPluginParam
m_path	libmfx/include/mfx_library_iterator.h	/^    msdk_disp_char  m_path[260];$/;"	m	class:MFX::MFXLibraryIterator
m_pauseStamp	librtmp/rtmp.h	/^        uint32_t m_pauseStamp;$/;"	m	struct:RTMP
m_pausing	librtmp/rtmp.h	/^        int m_pausing;$/;"	m	struct:RTMP
m_polling	librtmp/rtmp.h	/^        int m_polling;$/;"	m	struct:RTMP
m_ptr	QSVHelper/IntelSupport/include/base_allocator.h	/^        T* m_ptr; \/\/ the wrapped object pointer$/;"	m	class:BaseFrameAllocator::safe_array
m_read	librtmp/rtmp.h	/^        RTMP_READ m_read;$/;"	m	struct:RTMP
m_refCount	QSVHelper/IntelSupport/include/base_allocator.h	/^        mfxU32 m_refCount;$/;"	m	struct:BaseFrameAllocator::UniqueResponse
m_resourcesByRequest	QSVHelper/IntelSupport/include/d3d11_allocator.h	/^    std::list <TextureResource> m_resourcesByRequest;\/\/each alloc request generates new item in list$/;"	m	class:D3D11FrameAllocator
m_resplen	librtmp/rtmp.h	/^        int m_resplen;$/;"	m	struct:RTMP
m_responses	QSVHelper/IntelSupport/include/base_allocator.h	/^    std::list<mfxFrameAllocResponse> m_responses;$/;"	m	class:BaseFrameAllocator
m_rtBytePos	lame/dshow/Mpegac.h	/^	REFERENCE_TIME m_rtBytePos;$/;"	m	class:CMpegAudEnc
m_rtEstimated	lame/dshow/Mpegac.h	/^    REFERENCE_TIME              m_rtEstimated;$/;"	m	class:CMpegAudEnc
m_rtFrameTime	lame/dshow/Mpegac.h	/^    REFERENCE_TIME              m_rtFrameTime;$/;"	m	class:CMpegAudEnc
m_rtStreamTime	lame/dshow/Mpegac.h	/^    REFERENCE_TIME              m_rtStreamTime;$/;"	m	class:CMpegAudEnc
m_samplesIn	lame/dshow/Mpegac.h	/^    LONGLONG                    m_samplesIn;$/;"	m	class:CMpegAudEnc
m_samplesOut	lame/dshow/Mpegac.h	/^    LONGLONG                    m_samplesOut;$/;"	m	class:CMpegAudEnc
m_samplesPerFrame	lame/dshow/Mpegac.h	/^    int                         m_samplesPerFrame;$/;"	m	class:CMpegAudEnc
m_sb	librtmp/rtmp.h	/^        RTMPSockBuf m_sb;$/;"	m	struct:RTMP
m_session	libmfx/include/msdk/include/mfxaudio++.h	/^    mfxSession m_session;                                       \/\/ (mfxSession) handle to the owning session$/;"	m	class:MFXAudioDECODE
m_session	libmfx/include/msdk/include/mfxaudio++.h	/^    mfxSession m_session;                                       \/\/ (mfxSession) handle to the owning session$/;"	m	class:MFXAudioENCODE
m_session	libmfx/include/msdk/include/mfxaudio++.h	/^    mfxSession m_session;                                       \/\/ (mfxSession) handle to the owning session$/;"	m	class:MFXAudioSession
m_session	libmfx/include/msdk/include/mfxplugin++.h	/^    mfxSession m_session;    $/;"	m	class:MFXVideoUSER
m_session	libmfx/include/msdk/include/mfxvideo++.h	/^    mfxSession m_session;                                       \/\/ (mfxSession) handle to the owning session$/;"	m	class:MFXVideoDECODE
m_session	libmfx/include/msdk/include/mfxvideo++.h	/^    mfxSession m_session;                                       \/\/ (mfxSession) handle to the owning session$/;"	m	class:MFXVideoENCODE
m_session	libmfx/include/msdk/include/mfxvideo++.h	/^    mfxSession m_session;                                       \/\/ (mfxSession) handle to the owning session$/;"	m	class:MFXVideoSession
m_session	libmfx/include/msdk/include/mfxvideo++.h	/^    mfxSession m_session;                                       \/\/ (mfxSession) handle to the owning session$/;"	m	class:MFXVideoVPP
m_setDuration	lame/dshow/Mpegac.h	/^    DWORD                       m_setDuration;$/;"	m	class:CMpegAudEnc
m_sguid	libmfx/src/mfx_dispatcher_log.cpp	/^    const wchar_t * m_sguid;$/;"	m	class:EventRegistrator	file:
m_srIdx	lame/dshow/PropPage.h	/^    int     m_srIdx;$/;"	m	class:CMpegAudEncPropertyPage
m_storage	libmfx/include/mfx_dispatcher_log.h	/^    _storage_type m_storage;$/;"	m	class:ETWHandlerFactory
m_stream_id	librtmp/rtmp.h	/^        int m_stream_id;		\/* returned in _result from createStream *\/$/;"	m	struct:RTMP
m_subResource	QSVHelper/IntelSupport/include/d3d11_allocator.h	/^        UINT m_subResource;$/;"	m	class:D3D11FrameAllocator::TextureSubResource
m_sync	lame/dshow/Mpegac.h	/^    resync_point_t              m_sync[RESYNC_COUNT];$/;"	m	class:CMpegAudEnc
m_sync_in_idx	lame/dshow/Mpegac.h	/^    int                         m_sync_in_idx;$/;"	m	class:CMpegAudEnc
m_sync_out_idx	lame/dshow/Mpegac.h	/^    int                         m_sync_out_idx;$/;"	m	class:CMpegAudEnc
m_type	QSVHelper/IntelSupport/include/base_allocator.h	/^        mfxU16 m_type;$/;"	m	struct:BaseFrameAllocator::UniqueResponse
m_unackd	librtmp/rtmp.h	/^        int m_unackd;$/;"	m	struct:RTMP
m_vecChannelsIn	librtmp/rtmp.h	/^        RTMPPacket **m_vecChannelsIn;$/;"	m	struct:RTMP
m_vecChannelsOut	librtmp/rtmp.h	/^        RTMPPacket **m_vecChannelsOut;$/;"	m	struct:RTMP
m_vector	libmfx/src/main.cpp	/^    HandleVector& m_vector;$/;"	m	struct:VectorHandleGuard	file:
m_vendorID	libmfx/include/mfx_dxva2_device.h	/^    mfxU32 m_vendorID;$/;"	m	class:MFX::DXDevice
m_vendorID	libmfx/include/mfx_dxva2_device.h	/^    mfxU32 m_vendorID;$/;"	m	class:MFX::DXVA2Device
m_vendorID	libmfx/include/mfx_library_iterator.h	/^    mfxU32 m_vendorID;                                          \/\/ (mfxU32) property of used graphic card$/;"	m	class:MFX::MFXLibraryIterator
m_wfex	lame/dshow/Encoder.h	/^    WAVEFORMATEX        m_wfex;$/;"	m	class:CEncoder
m_write	librtmp/rtmp.h	/^        RTMPPacket m_write;$/;"	m	struct:RTMP
ma_max_i1	lame/libmp3lame/psymodel.c	/^static FLOAT ma_max_i1;$/;"	v	file:
ma_max_i2	lame/libmp3lame/psymodel.c	/^static FLOAT ma_max_i2;$/;"	v	file:
ma_max_m	lame/libmp3lame/psymodel.c	/^static FLOAT ma_max_m;$/;"	v	file:
machine.h	lame/libmp3lame/machine.h	1;"	F
machine_byte_order	lame/frontend/get_audio.c	/^machine_byte_order(void)$/;"	f
main	lame/ACM/tinyxml/xmltest.cpp	/^int main()$/;"	f
main	lame/Dll/Example.cpp	/^int main(int argc, char *argv[])$/;"	f
main	lame/config.guess	/^		main()$/;"	f
main	lame/config.guess	/^	main ()$/;"	f
main	lame/config.guess	/^main ()$/;"	f
main	lame/frontend/main.c	/^int main(int argc, char *argv[])$/;"	f
main	lame/mac/MacDLLMain.c	/^main()$/;"	f
main	lame/misc/abx.c	/^int  main ( int argc, char** argv )$/;"	f
main	lame/misc/ath.c	/^int main ( int argc, char** argv )$/;"	f
main	lame/misc/mlame_corr.c	/^int main ( int argc, char** argv )$/;"	f
main	lame/misc/scalartest.c	/^int main ( int argc, char** argv )$/;"	f
main	libmfx/src/mfx_dispatcher_trace.cpp	/^int main(int argc, const char *argv[], bool bUsePrefix)$/;"	f
main	minhook/src/pstdint.h	/^int main () {$/;"	f
main.c	lame/frontend/main.c	1;"	F
main.cpp	lame/ACM/main.cpp	1;"	F
main.cpp	libmfx/src/main.cpp	1;"	F
main.h	lame/frontend/main.h	1;"	F
mainPixelShader	Source/OBS.h	/^    Shader  *mainVertexShader, *mainPixelShader, *yuvScalePixelShader, *transitionPixelShader;$/;"	m	class:OBS
mainRenderTextures	Source/OBS.h	/^    Texture         *mainRenderTextures[NUM_RENDER_BUFFERS];$/;"	m	class:OBS
mainSceneName	scenesw/SceneSwitcher.h	/^	String mainSceneName;$/;"	m	class:SceneSwitcher
mainVertexShader	Source/OBS.h	/^    Shader  *mainVertexShader, *mainPixelShader, *yuvScalePixelShader, *transitionPixelShader;$/;"	m	class:OBS
mainWndName	scenesw/SceneSwitcher.h	/^	String mainWndName;$/;"	m	class:SceneSwitcher
main_data_begin	lame/libmp3lame/l3side.h	/^    int     main_data_begin;$/;"	m
main_data_begin	lame/mpglib/mpg123.h	/^    unsigned main_data_begin;$/;"	m	struct:III_sideinfo
mainbits	lame/libmp3lame/lame-analysis.h	/^    int     mainbits[2][2];$/;"	m	struct:plotting_data
maindata	lame/libmp3lame/lame-analysis.h	/^    int     framesize, stereo, js, ms_stereo, i_stereo, emph, bitrate, sampfreq, maindata;$/;"	m	struct:plotting_data
major	lame/include/lame.h	/^    int major;$/;"	m
make_decode_tables	lame/mpglib/tabinit.c	/^make_decode_tables(long scaleval)$/;"	f
make_even_number_of_bytes_in_length	lame/frontend/get_audio.c	/^make_even_number_of_bytes_in_length(long x)$/;"	f	file:
make_mfx_plugin_adapter	libmfx/include/msdk/include/mfxplugin++.h	/^inline MFXPluginAdapter<T> make_mfx_plugin_adapter(T* pPlugin) {$/;"	f
make_unix_time	librtmp/hashswf.c	/^make_unix_time(char *s)$/;"	f	file:
makeid3args	lame/misc/lameid3.pl	/^sub makeid3args( $ )$/;"	s
malloc	lame/config.h	94;"	d
malloc	lame/configMS.h	94;"	d
malloc_aligned	lame/libmp3lame/util.c	/^malloc_aligned(aligned_pointer_t * ptr, unsigned int size, unsigned int bytes)$/;"	f
man1dir	lame/doc/man/Makefile	/^man1dir = $(mandir)\/man1$/;"	m
man_MANS	lame/doc/man/Makefile	/^man_MANS = lame.1$/;"	m
mandir	lame/ACM/ADbg/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	lame/ACM/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	lame/ACM/ddk/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	lame/ACM/tinyxml/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	lame/Dll/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	lame/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	lame/debian/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	lame/doc/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	lame/doc/html/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	lame/doc/man/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	lame/dshow/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	lame/frontend/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	lame/include/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	lame/libmp3lame/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	lame/libmp3lame/i386/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	lame/libmp3lame/vector/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	lame/mac/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	lame/macosx/English.lproj/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	lame/macosx/LAME.xcodeproj/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	lame/macosx/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	lame/misc/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	lame/mpglib/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	lame/vc_solution/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
map	lame/mpglib/layer3.c	/^static int *map[9][3];$/;"	v	file:
map2MP3Frequency	lame/ACM/ACMStream.cpp	/^map2MP3Frequency(int freq)$/;"	f	file:
map2MP3Frequency	lame/libmp3lame/util.c	/^map2MP3Frequency(int freq)$/;"	f
mapID	GraphicsCapture/GlobalCaptureStuff.h	/^    UINT    mapID;$/;"	m	struct:CaptureInfo
mapSize	GraphicsCapture/GlobalCaptureStuff.h	/^    DWORD   mapSize;$/;"	m	struct:CaptureInfo
mapbuf0	lame/mpglib/layer3.c	/^static int mapbuf0[9][152];$/;"	v	file:
mapbuf1	lame/mpglib/layer3.c	/^static int mapbuf1[9][156];$/;"	v	file:
mapbuf2	lame/mpglib/layer3.c	/^static int mapbuf2[9][44];$/;"	v	file:
mapend	lame/mpglib/layer3.c	/^static int *mapend[9][3];$/;"	v	file:
mappedBufferFmt	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_BUFFER_FORMAT       mappedBufferFmt;           \/**< [out]: Buffer format of the outputResource. This buffer format must be used in NV_ENC_PIC_PARAMS::bufferFmt if client using the above mapped resource pointer. *\/$/;"	m	struct:_NV_ENC_MAP_INPUT_RESOURCE
mappedResource	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_INPUT_PTR           mappedResource;            \/**< [out]: Mapped pointer corresponding to the registeredResource. This pointer must be used in NV_ENC_PIC_PARAMS::inputBuffer parameter in ::NvEncEncodePicture() API. *\/$/;"	m	struct:_NV_ENC_MAP_INPUT_RESOURCE
maskTbl	Source/libnsgif.c	/^const static int maskTbl[16] = {0x0000, 0x0001, 0x0003, 0x0007, 0x000f, 0x001f, 0x003f, 0x007f,$/;"	v	file:
mask_add_delta	lame/libmp3lame/psymodel.c	/^mask_add_delta(int i)$/;"	f	file:
mask_adjust	lame/libmp3lame/util.h	/^        FLOAT   mask_adjust; \/* the dbQ stuff *\/$/;"	m
mask_adjust_short	lame/libmp3lame/util.h	/^        FLOAT   mask_adjust_short; \/* the dbQ stuff *\/$/;"	m
masking_adj	lame/libmp3lame/presets.c	/^    FLOAT   masking_adj;$/;"	m	file:
masking_adj_short	lame/libmp3lame/presets.c	/^    FLOAT   masking_adj_short;$/;"	m	file:
masking_lower	lame/libmp3lame/util.h	/^        FLOAT   masking_lower;$/;"	m
masking_lower	lame/libmp3lame/util.h	/^        FLOAT   masking_lower[CBANDS];$/;"	m
maskingadjust	lame/libmp3lame/lame_global_flags.h	/^    float   maskingadjust;$/;"	m	struct:lame_global_struct
maskingadjust_short	lame/libmp3lame/lame_global_flags.h	/^    float   maskingadjust_short;$/;"	m	struct:lame_global_struct
matrix	QSVHelper/IPCStructs.h	/^    int32_t full_range, matrix, primaries, transfer;$/;"	m	struct:init_request
matrix	Source/OBS.h	/^    int matrix;$/;"	m	struct:ColorDescription
max	QSVHelper/Utilities.h	33;"	d
max	libfaac/util.h	33;"	d
maxAnisotropy	OBSApi/GraphicsSystem.h	/^    UINT maxAnisotropy;$/;"	m	struct:SamplerInfo
maxBitRate	ObsNvenc/inc/NVENCEncoder.h	/^    int maxBitRate;$/;"	m	class:NVENCEncoder
maxBitRate	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                        maxBitRate;                                  \/**< [in]: Specifies the maximum bitrate for the encoded output. This is used for VBR and ignored for CBR mode. *\/$/;"	m	struct:_NV_ENC_RC_PARAMS
maxBitRate	Source/MP4FileStream.cpp	/^    UINT maxBitRate = 0;$/;"	m	class:MP4FileStream	file:
maxBlockSize	OBSApi/Utility/FastAlloc.cpp	/^    size_t maxBlockSize;$/;"	m	struct:MemInfo	file:
maxBlocks	OBSApi/Utility/FastAlloc.cpp	/^    DWORD maxBlocks;$/;"	m	struct:MemInfo	file:
maxBufferTime	Source/RTMPPublisher.h	/^const DWORD maxBufferTime = 600;$/;"	v
maxCX	DShowPlugin/MediaInfoStuff.h	/^    UINT maxCX, maxCY;$/;"	m	struct:MediaOutputInfo
maxCY	DShowPlugin/MediaInfoStuff.h	/^    UINT maxCX, maxCY;$/;"	m	struct:MediaOutputInfo
maxCwLen	libfaac/bitstream.c	/^static const int maxCwLen[32] = {0, 11, 9, 20, 16, 13, 11, 14, 12, 17, 14, 49,$/;"	v	file:
maxEncodeHeight	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                                   maxEncodeHeight;                 \/**< [in]: Maximum encode height to be allowed for current Encode session.$/;"	m	struct:_NV_ENC_INITIALIZE_PARAMS
maxEncodeWidth	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                                   maxEncodeWidth;                  \/**< [in]: Maximum encode width to be used for current Encode session.$/;"	m	struct:_NV_ENC_INITIALIZE_PARAMS
maxFrameInterval	DShowPlugin/DShowPlugin.cpp	/^    UINT64 minFrameInterval, maxFrameInterval;$/;"	m	struct:FPSInterval	file:
maxFrameInterval	DShowPlugin/MediaInfoStuff.h	/^    UINT64 minFrameInterval, maxFrameInterval;$/;"	m	struct:MediaOutputInfo
maxIndex	libmfx/src/main.cpp	/^        mfxU32 maxIndex;$/;"	m	file:
maxLinear	OBSApi/VolumeMeter.cpp	/^float maxLinear;$/;"	v
maxMEHintCountsPerBlock	ObsNvenc/inc/nvEncodeAPI.h	/^    NVENC_EXTERNAL_ME_HINT_COUNTS_PER_BLOCKTYPE maxMEHintCountsPerBlock[2];      \/**< [in]: If Client wants to pass external motion vectors in NV_ENC_PIC_PARAMS::meExternalHints buffer it must specify the maximum number of hint candidates per block per direction for the encode session.$/;"	m	struct:_NV_ENC_INITIALIZE_PARAMS
maxNumRefFrames	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                            maxNumRefFrames;            \/**< [in]: Specifies the DPB size used for encoding. Setting it to 0 will let driver use the default dpb size. $/;"	m	struct:_NV_ENC_CONFIG_H264
maxQP	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_QP                       maxQP;                                       \/**< [in]: Specifies the maximum QP used for rate control. Client must set NV_ENC_CONFIG::enableMaxQP to 1. *\/$/;"	m	struct:_NV_ENC_RC_PARAMS
maxSurfaceCount	ObsNvenc/inc/NVENCEncoder.h	/^    int maxSurfaceCount;$/;"	m	class:NVENCEncoder
max_bitrate	QSVHelper/IPCStructs.h	/^    int32_t fps, keyint, bframes, width, height, max_bitrate, buffer_size;$/;"	m	struct:init_request
max_bitrate	Source/Encoder_QSV.cpp	/^           max_bitrate;$/;"	m	class:QSVEncoder	file:
max_code	Source/libnsgif.h	/^    int max_code, max_code_size;$/;"	m	struct:gif_animation
max_code_size	Source/libnsgif.h	/^    int max_code, max_code_size;$/;"	m	struct:gif_animation
max_int	lame/libmp3lame/presets.c	/^max_int(int a, int b)$/;"	f	file:
max_noise	lame/libmp3lame/lame-analysis.h	/^    double  max_noise[2][2];$/;"	m	struct:plotting_data
max_noise	lame/libmp3lame/quantize_pvt.h	/^    FLOAT   max_noise;       \/* max quantization noise *\/$/;"	m	struct:calc_noise_result_t
max_nonzero_coeff	lame/libmp3lame/l3side.h	/^    int     max_nonzero_coeff;$/;"	m
max_plotwindows	lame/frontend/gpkplotting.c	/^static gint max_plotwindows = 10;$/;"	v	file:
max_pred_sfb	libfaac/coder.h	/^    int max_pred_sfb;$/;"	m
max_range_long	lame/libmp3lame/vbrquantize.c	/^static const uint8_t max_range_long[SBMAX_l] = {$/;"	v	file:
max_range_long_lsf_pretab	lame/libmp3lame/vbrquantize.c	/^static const uint8_t max_range_long_lsf_pretab[SBMAX_l] = {$/;"	v	file:
max_range_sfac_tab	lame/libmp3lame/takehiro.c	/^static const int max_range_sfac_tab[6][4] = {$/;"	v	file:
max_range_short	lame/libmp3lame/vbrquantize.c	/^static const uint8_t max_range_short[SBMAX_s * 3] = {$/;"	v	file:
max_sfb	libfaac/coder.h	/^    int max_sfb;$/;"	m
maxb	lame/mpglib/mpg123.h	/^    unsigned maxb;$/;"	m	struct:gr_info_s
maxband	lame/mpglib/mpg123.h	/^    unsigned maxband[3];$/;"	m	struct:gr_info_s
maxbandl	lame/mpglib/mpg123.h	/^    unsigned maxbandl;$/;"	m	struct:gr_info_s
maxbits	lame/frontend/gtkanal.c	/^    int     maxbits;         \/* max bits per frame used so far *\/$/;"	m	struct:gtkinfostruct	file:
maximum	lame/misc/abx.c	/^int  maximum ( stereo_t* p, size_t len )$/;"	f
maxvalue	lame/frontend/mp3rtp.c	/^maxvalue(int Buffer[2][1152])$/;"	f	file:
maybeLatin1	lame/libmp3lame/id3tag.c	/^maybeLatin1(unsigned short const* text)$/;"	f	file:
maybeSyncWord	lame/Dll/BladeMP3EncDLL.c	/^maybeSyncWord(FILE* fpStream)$/;"	f	file:
maybeSyncWord	lame/dshow/Encoder.cpp	/^HRESULT CEncoder::maybeSyncWord(IStream *pStream)$/;"	f	class:CEncoder
mb_info	x264/x264.h	/^    uint8_t *mb_info;$/;"	m
mb_info_free	x264/x264.h	/^    void (*mb_info_free)( void* );$/;"	m
mbps	x264/x264.h	/^    int mbps;        \/* max macroblock processing rate (macroblocks\/sec) *\/$/;"	m
mbsToMbs	lame/frontend/main.c	/^char* mbsToMbs(const char* str, int cp_from, int cp_to)$/;"	f
mbsToUnicode	lame/frontend/main.c	/^static wchar_t *mbsToUnicode(const char *mbstr, int code_page)$/;"	f	file:
mcmp	OBSApi/Utility/Inline.h	/^inline BOOL STDCALL mcmp(const void *pDest, const void *pSrc, size_t iLen)$/;"	f
mcpy	OBSApi/Utility/Inline.h	/^inline void STDCALL mcpy(void *pDest, const void *pSrc, size_t iLen)$/;"	f
mcpy	OBSApi/Utility/Inline.h	29;"	d
mcpyrev	OBSApi/Utility/Inline.h	/^inline void STDCALL mcpyrev(void *pDest, const void *pSrc, size_t iLen)$/;"	f
mctrl	lame/frontend/amiga_mpega.c	/^MPEGA_CTRL mctrl;$/;"	v
md5.c	librtmp/md5.c	1;"	F
md5.h	librtmp/md5.h	1;"	F
mdatStart	Source/MP4FileStream.cpp	/^    UINT64 mdatStart, mdatStop;$/;"	m	class:MP4FileStream	file:
mdatStop	Source/MP4FileStream.cpp	/^    UINT64 mdatStart, mdatStop;$/;"	m	class:MP4FileStream	file:
mdct_long	lame/libmp3lame/newmdct.c	/^mdct_long(FLOAT * out, FLOAT const *in)$/;"	f	file:
mdct_predicted	libfaac/coder.h	/^    double *mdct_predicted;$/;"	m
mdct_short	lame/libmp3lame/newmdct.c	/^mdct_short(FLOAT * inout)$/;"	f	file:
mdct_sub48	lame/libmp3lame/newmdct.c	/^mdct_sub48(lame_internal_flags * gfc, const sample_t * w0, const sample_t * w1)$/;"	f
mdctbox	lame/frontend/gtkanal.c	/^GtkWidget *mdctbox[2];       \/* mdct coefficients gr=0,1 plotted here *\/$/;"	v
meExternalHints	ObsNvenc/inc/nvEncodeAPI.h	/^    NVENC_EXTERNAL_ME_HINT                     *meExternalHints;                \/**< [in]: Specifies the pointer to ME external hints for the current frame. The size of ME hint buffer should be equal to number of macroblocks multiplied by the total number of candidates per macroblock.$/;"	m	struct:_NV_ENC_PIC_PARAMS
meHintCountsPerBlock	ObsNvenc/inc/nvEncodeAPI.h	/^    NVENC_EXTERNAL_ME_HINT_COUNTS_PER_BLOCKTYPE meHintCountsPerBlock[2];        \/**< [in]: Specifies the number of hint candidates per block per direction for the current frame. meHintCountsPerBlock[0] is for L0 predictors and meHintCountsPerBlock[1] is for L1 predictors.$/;"	m	struct:_NV_ENC_PIC_PARAMS
mean_bits	lame/libmp3lame/lame-analysis.h	/^    int     scfsi[2], mean_bits, resvsize;$/;"	m	struct:plotting_data
mediaType	DShowPlugin/MediaInfoStuff.h	/^    AM_MEDIA_TYPE *mediaType;$/;"	m	struct:MediaOutputInfo
memcpy	lame/frontend/console.c	15;"	d	file:
memcpy	lame/frontend/get_audio.c	48;"	d	file:
memcpy	lame/frontend/gpkplotting.c	39;"	d	file:
memcpy	lame/frontend/lame_main.c	43;"	d	file:
memcpy	lame/frontend/main.c	43;"	d	file:
memcpy	lame/frontend/parse.c	43;"	d	file:
memcpy	lame/frontend/rtp.c	62;"	d	file:
memcpy	lame/libmp3lame/id3tag.c	50;"	d	file:
memcpy	lame/libmp3lame/machine.h	44;"	d
memcpy	lame/mpglib/decode_i386.c	46;"	d	file:
memcpy	lame/mpglib/mpg123.h	35;"	d
meminfo	OBSApi/Utility/FastAlloc.cpp	/^    MemInfo     *meminfo;$/;"	m	struct:Pool	file:
memmove	lame/frontend/console.c	16;"	d	file:
memmove	lame/frontend/get_audio.c	49;"	d	file:
memmove	lame/frontend/gpkplotting.c	40;"	d	file:
memmove	lame/frontend/lame_main.c	44;"	d	file:
memmove	lame/frontend/main.c	44;"	d	file:
memmove	lame/frontend/parse.c	44;"	d	file:
memmove	lame/frontend/rtp.c	63;"	d	file:
memmove	lame/libmp3lame/machine.h	45;"	d
memmove	lame/mpglib/decode_i386.c	47;"	d	file:
memmove	lame/mpglib/mpg123.h	36;"	d
memory	QSVHelper/WindowsStuff.h	/^    NamedSharedMemory memory;$/;"	m	struct:IPCArray
memory	QSVHelper/WindowsStuff.h	/^    NamedSharedMemory memory;$/;"	m	struct:IPCType
memory	QSVHelper/WindowsStuff.h	/^    void *memory;$/;"	m	struct:NamedSharedMemory
memoryBreakID	OBSApi/Utility/DebugAlloc.cpp	/^int memoryBreakID;$/;"	v
memoryHeap	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_MEMORY_HEAP        memoryHeap;              \/**< [in]: Input buffer memory heap *\/$/;"	m	struct:_NV_ENC_CREATE_INPUT_BUFFER
memoryHeap	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_MEMORY_HEAP    memoryHeap;                  \/**< [in]: Output buffer memory heap *\/$/;"	m	struct:_NV_ENC_CREATE_BITSTREAM_BUFFER
menu_items	lame/frontend/gtkanal.c	/^static const GtkItemFactoryEntry menu_items[] = {$/;"	v	file:
meritKeyName	libmfx/src/mfx_library_iterator.cpp	/^wchar_t meritKeyName[] = L"Merit";$/;"	v
message	Source/mongoose.c	/^  char message[NS_CTL_MSG_MESSAGE_SIZE];$/;"	m	struct:ctl_msg	file:
metaDataPacketBuffer	Source/RTMPPublisher.h	/^    std::vector<char> metaDataPacketBuffer;$/;"	m	class:RTMPPublisher
metaDataPos	Source/FLVFileStream.cpp	/^    UINT64 metaDataPos;$/;"	m	class:FLVFileStream	file:
metaHeader	librtmp/rtmp.h	/^        char *metaHeader;$/;"	m	struct:RTMP_READ
method	Source/Encoder_QSV.cpp	/^        decltype(mfxInfoMFX::RateControlMethod) method;$/;"	m	file:
method	Source/SettingsQSV.cpp	/^        ratecontrol_t method;$/;"	m	file:
method_enabled_ids	Source/SettingsQSV.cpp	/^    } method_enabled_ids[] = {$/;"	v
mf_samples_to_encode	lame/libmp3lame/util.h	/^        int     mf_samples_to_encode;$/;"	m
mf_size	lame/libmp3lame/util.h	/^        int     mf_size;$/;"	m
mfbuf	lame/libmp3lame/util.h	/^        sample_t mfbuf[2][MFSIZE];$/;"	m
mfx	libmfx/include/msdk/include/mfxastructures.h	/^    mfxAudioInfoMFX   mfx;$/;"	m
mfx	libmfx/include/msdk/include/mfxstructures.h	/^        mfxInfoMFX  mfx;$/;"	m
mfxAllocatorParams	QSVHelper/IntelSupport/include/base_allocator.h	/^struct mfxAllocatorParams$/;"	s
mfxAudioAllocRequest	libmfx/include/msdk/include/mfxastructures.h	/^} mfxAudioAllocRequest;$/;"	t
mfxAudioFrame	libmfx/include/msdk/include/mfxastructures.h	/^} mfxAudioFrame;$/;"	t
mfxAudioInfoMFX	libmfx/include/msdk/include/mfxastructures.h	/^} mfxAudioInfoMFX;$/;"	t
mfxAudioParam	libmfx/include/msdk/include/mfxastructures.h	/^} mfxAudioParam;$/;"	t
mfxBitstream	libmfx/include/msdk/include/mfxcommon.h	/^} mfxBitstream;$/;"	t
mfxBufferAllocator	libmfx/include/msdk/include/mfxvideo.h	/^} mfxBufferAllocator;$/;"	t
mfxChar	libmfx/include/msdk/include/mfxdefs.h	/^typedef char                mfxChar;$/;"	t
mfxCoreInterface	libmfx/include/msdk/include/mfxplugin.h	/^typedef struct mfxCoreInterface {$/;"	s
mfxCoreInterface	libmfx/include/msdk/include/mfxplugin.h	/^} mfxCoreInterface;$/;"	t
mfxCoreParam	libmfx/include/msdk/include/mfxplugin.h	/^typedef struct mfxCoreParam{$/;"	s
mfxCoreParam	libmfx/include/msdk/include/mfxplugin.h	/^} mfxCoreParam;$/;"	t
mfxCriticalSection	libmfx/include/mfx_critical_section.h	/^typedef volatile mfxL32 mfxCriticalSection;$/;"	t	namespace:MFX
mfxDecodeStat	libmfx/include/msdk/include/mfxstructures.h	/^} mfxDecodeStat;$/;"	t
mfxEncodeCtrl	libmfx/include/msdk/include/mfxstructures.h	/^} mfxEncodeCtrl;$/;"	t
mfxEncodeStat	libmfx/include/msdk/include/mfxstructures.h	/^} mfxEncodeStat;$/;"	t
mfxEncryptedData	libmfx/include/msdk/include/mfxcommon.h	/^typedef struct _mfxEncryptedData mfxEncryptedData;$/;"	t
mfxEnterCriticalSection	libmfx/src/mfx_critical_section.cpp	/^void mfxEnterCriticalSection(mfxCriticalSection *pCSection)$/;"	f	namespace:MFX
mfxExtAVCEncodedFrameInfo	libmfx/include/msdk/include/mfxstructures.h	/^} mfxExtAVCEncodedFrameInfo;$/;"	t
mfxExtAVCRefListCtrl	libmfx/include/msdk/include/mfxstructures.h	/^} mfxExtAVCRefListCtrl;$/;"	t
mfxExtAVCRefLists	libmfx/include/msdk/include/mfxstructures.h	/^}mfxExtAVCRefLists;$/;"	t
mfxExtAvcTemporalLayers	libmfx/include/msdk/include/mfxstructures.h	/^} mfxExtAvcTemporalLayers;$/;"	t
mfxExtBuffer	libmfx/include/msdk/include/mfxcommon.h	/^} mfxExtBuffer;$/;"	t
mfxExtCodingOption	libmfx/include/msdk/include/mfxstructures.h	/^} mfxExtCodingOption;$/;"	t
mfxExtCodingOption2	libmfx/include/msdk/include/mfxstructures.h	/^} mfxExtCodingOption2;$/;"	t
mfxExtCodingOptionSPSPPS	libmfx/include/msdk/include/mfxstructures.h	/^} mfxExtCodingOptionSPSPPS;$/;"	t
mfxExtEncoderCapability	libmfx/include/msdk/include/mfxstructures.h	/^} mfxExtEncoderCapability;$/;"	t
mfxExtEncoderROI	libmfx/include/msdk/include/mfxstructures.h	/^} mfxExtEncoderROI;$/;"	t
mfxExtEncoderResetOption	libmfx/include/msdk/include/mfxstructures.h	/^} mfxExtEncoderResetOption;$/;"	t
mfxExtJPEGHuffmanTables	libmfx/include/msdk/include/mfxjpeg.h	/^} mfxExtJPEGHuffmanTables;$/;"	t
mfxExtJPEGQuantTables	libmfx/include/msdk/include/mfxjpeg.h	/^} mfxExtJPEGQuantTables;$/;"	t
mfxExtMVCSeqDesc	libmfx/include/msdk/include/mfxmvc.h	/^} mfxExtMVCSeqDesc;$/;"	t
mfxExtMVCTargetViews	libmfx/include/msdk/include/mfxmvc.h	/^} mfxExtMVCTargetViews ;$/;"	t
mfxExtOpaqueSurfaceAlloc	libmfx/include/msdk/include/mfxstructures.h	/^} mfxExtOpaqueSurfaceAlloc;$/;"	t
mfxExtPictureTimingSEI	libmfx/include/msdk/include/mfxstructures.h	/^} mfxExtPictureTimingSEI;$/;"	t
mfxExtVPPComposite	libmfx/include/msdk/include/mfxstructures.h	/^} mfxExtVPPComposite;$/;"	t
mfxExtVPPDeinterlacing	libmfx/include/msdk/include/mfxstructures.h	/^} mfxExtVPPDeinterlacing;$/;"	t
mfxExtVPPDenoise	libmfx/include/msdk/include/mfxstructures.h	/^} mfxExtVPPDenoise;$/;"	t
mfxExtVPPDetail	libmfx/include/msdk/include/mfxstructures.h	/^} mfxExtVPPDetail;$/;"	t
mfxExtVPPDoNotUse	libmfx/include/msdk/include/mfxstructures.h	/^} mfxExtVPPDoNotUse;$/;"	t
mfxExtVPPDoUse	libmfx/include/msdk/include/mfxstructures.h	/^} mfxExtVPPDoUse;$/;"	t
mfxExtVPPFrameRateConversion	libmfx/include/msdk/include/mfxstructures.h	/^} mfxExtVPPFrameRateConversion;$/;"	t
mfxExtVPPImageStab	libmfx/include/msdk/include/mfxstructures.h	/^} mfxExtVPPImageStab;$/;"	t
mfxExtVPPProcAmp	libmfx/include/msdk/include/mfxstructures.h	/^} mfxExtVPPProcAmp;$/;"	t
mfxExtVPPVideoSignalInfo	libmfx/include/msdk/include/mfxstructures.h	/^} mfxExtVPPVideoSignalInfo;$/;"	t
mfxExtVideoSignalInfo	libmfx/include/msdk/include/mfxstructures.h	/^} mfxExtVideoSignalInfo;$/;"	t
mfxExtVppAuxData	libmfx/include/msdk/include/mfxstructures.h	/^} mfxExtVppAuxData;$/;"	t
mfxF32	libmfx/include/msdk/include/mfxdefs.h	/^typedef float               mfxF32;$/;"	t
mfxF64	libmfx/include/msdk/include/mfxdefs.h	/^typedef double              mfxF64;$/;"	t
mfxFrameAllocRequest	libmfx/include/msdk/include/mfxstructures.h	/^} mfxFrameAllocRequest;$/;"	t
mfxFrameAllocResponse	libmfx/include/msdk/include/mfxstructures.h	/^} mfxFrameAllocResponse;$/;"	t
mfxFrameAllocator	libmfx/include/msdk/include/mfxvideo.h	/^} mfxFrameAllocator;$/;"	t
mfxFrameData	libmfx/include/msdk/include/mfxstructures.h	/^} mfxFrameData;$/;"	t
mfxFrameId	libmfx/include/msdk/include/mfxstructures.h	/^} mfxFrameId;$/;"	t
mfxFrameInfo	libmfx/include/msdk/include/mfxstructures.h	/^} mfxFrameInfo;$/;"	t
mfxFrameSurface1	libmfx/include/msdk/include/mfxstructures.h	/^} mfxFrameSurface1;$/;"	t
mfxFunctionPointer	libmfx/include/mfx_dispatcher_defs.h	/^typedef void (MFX_CDECL * mfxFunctionPointer)(void);$/;"	t
mfxHDL	libmfx/include/msdk/include/mfxdefs.h	/^typedef void*               mfxHDL;$/;"	t
mfxHDLPair	libmfx/include/msdk/include/mfxdefs.h	/^} mfxHDLPair;$/;"	t
mfxHandleType	libmfx/include/msdk/include/mfxstructures.h	/^} mfxHandleType;$/;"	t
mfxI16	libmfx/include/msdk/include/mfxdefs.h	/^typedef short               mfxI16;$/;"	t
mfxI16Pair	libmfx/include/msdk/include/mfxdefs.h	/^} mfxI16Pair;$/;"	t
mfxI32	libmfx/include/msdk/include/mfxdefs.h	/^typedef int                 mfxI32;$/;"	t
mfxI64	libmfx/include/msdk/include/mfxdefs.h	/^typedef __INT64             mfxI64;$/;"	t
mfxI8	libmfx/include/msdk/include/mfxdefs.h	/^typedef char                mfxI8;$/;"	t
mfxIMPL	libmfx/include/msdk/include/mfxcommon.h	/^typedef mfxI32 mfxIMPL;$/;"	t
mfxInfoMFX	libmfx/include/msdk/include/mfxstructures.h	/^} mfxInfoMFX;$/;"	t
mfxInfoVPP	libmfx/include/msdk/include/mfxstructures.h	/^} mfxInfoVPP;$/;"	t
mfxInterlockedCas32	libmfx/src/mfx_critical_section.cpp	/^mfxU32 mfxInterlockedCas32(mfxCriticalSection *pCSection, mfxU32 value_to_exchange, mfxU32 value_to_compare)$/;"	f	namespace:MFX
mfxInterlockedXchg32	libmfx/src/mfx_critical_section.cpp	/^mfxU32 mfxInterlockedXchg32(mfxCriticalSection *pCSection, mfxU32 value)  $/;"	f	namespace:MFX
mfxL32	libmfx/include/msdk/include/mfxdefs.h	/^typedef int                 mfxL32;$/;"	t
mfxL32	libmfx/include/msdk/include/mfxdefs.h	/^typedef long                mfxL32;$/;"	t
mfxLeaveCriticalSection	libmfx/src/mfx_critical_section.cpp	/^void mfxLeaveCriticalSection(mfxCriticalSection *pCSection)$/;"	f	namespace:MFX
mfxMVCOperationPoint	libmfx/include/msdk/include/mfxmvc.h	/^} mfxMVCOperationPoint;$/;"	t
mfxMVCViewDependency	libmfx/include/msdk/include/mfxmvc.h	/^} mfxMVCViewDependency;$/;"	t
mfxMedIdEx	QSVHelper/IntelSupport/include/d3d11_allocator.h	/^    struct mfxMedIdEx$/;"	s	class:MFXReadWriteMid
mfxMemId	libmfx/include/msdk/include/mfxdefs.h	/^typedef mfxHDL              mfxMemId;$/;"	t
mfxModuleHandle	libmfx/include/mfx_dispatcher_defs.h	/^typedef void * mfxModuleHandle;$/;"	t
mfxOut	Source/OBSVideoCapture.cpp	/^    mfxFrameSurface1 *mfxOut;$/;"	m	struct:EncoderPicture	file:
mfxPayload	libmfx/include/msdk/include/mfxstructures.h	/^} mfxPayload;$/;"	t
mfxPlugin	libmfx/include/msdk/include/mfxplugin.h	/^typedef struct mfxPlugin{$/;"	s
mfxPlugin	libmfx/include/msdk/include/mfxplugin.h	/^} mfxPlugin;$/;"	t
mfxPluginParam	libmfx/include/msdk/include/mfxplugin.h	/^typedef struct mfxPluginParam {$/;"	s
mfxPluginParam	libmfx/include/msdk/include/mfxplugin.h	/^} mfxPluginParam;$/;"	t
mfxPluginType	libmfx/include/msdk/include/mfxplugin.h	/^} mfxPluginType;$/;"	t
mfxPluginUID	libmfx/include/msdk/include/mfxplugin.h	/^} mfxPluginUID;$/;"	t
mfxPriority	libmfx/include/msdk/include/mfxcommon.h	/^} mfxPriority;$/;"	t
mfxRefPic	libmfx/include/msdk/include/mfxstructures.h	/^    struct mfxRefPic{$/;"	s
mfxSession	libmfx/include/msdk/include/mfxsession.h	/^typedef struct _mfxSession *mfxSession;$/;"	t
mfxSkipMode	libmfx/include/msdk/include/mfxstructures.h	/^} mfxSkipMode;$/;"	t
mfxStatus	libmfx/include/msdk/include/mfxdefs.h	/^} mfxStatus;$/;"	t
mfxSyncPoint	libmfx/include/msdk/include/mfxcommon.h	/^typedef struct _mfxSyncPoint *mfxSyncPoint;$/;"	t
mfxThreadPolicy	libmfx/include/msdk/include/mfxplugin.h	/^} mfxThreadPolicy;$/;"	t
mfxThreadTask	libmfx/include/msdk/include/mfxdefs.h	/^typedef void*               mfxThreadTask;$/;"	t
mfxU16	libmfx/include/msdk/include/mfxdefs.h	/^typedef unsigned short      mfxU16;$/;"	t
mfxU32	libmfx/include/msdk/include/mfxdefs.h	/^typedef unsigned int        mfxU32;$/;"	t
mfxU64	libmfx/include/msdk/include/mfxdefs.h	/^typedef __UINT64            mfxU64;$/;"	t
mfxU8	libmfx/include/msdk/include/mfxdefs.h	/^typedef unsigned char       mfxU8;$/;"	t
mfxUL32	libmfx/include/msdk/include/mfxdefs.h	/^typedef unsigned int        mfxUL32;$/;"	t
mfxUL32	libmfx/include/msdk/include/mfxdefs.h	/^typedef unsigned long       mfxUL32;$/;"	t
mfxVPPCompInputStream	libmfx/include/msdk/include/mfxstructures.h	/^typedef struct mfxVPPCompInputStream {$/;"	s
mfxVPPCompInputStream	libmfx/include/msdk/include/mfxstructures.h	/^} mfxVPPCompInputStream;     $/;"	t
mfxVPPStat	libmfx/include/msdk/include/mfxstructures.h	/^} mfxVPPStat;$/;"	t
mfxVersion	libmfx/include/msdk/include/mfxcommon.h	/^} mfxVersion;$/;"	t
mfxVideoCodecPlugin	libmfx/include/msdk/include/mfxplugin.h	/^typedef struct mfxVideoCodecPlugin{$/;"	s
mfxVideoCodecPlugin	libmfx/include/msdk/include/mfxplugin.h	/^} mfxVideoCodecPlugin;$/;"	t
mfxVideoParam	libmfx/include/msdk/include/mfxstructures.h	/^} mfxVideoParam;$/;"	t
mfx_critical_section.cpp	libmfx/src/mfx_critical_section.cpp	1;"	F
mfx_critical_section.h	libmfx/include/mfx_critical_section.h	1;"	F
mfx_disp_adapters	libmfx/include/mfx_library_iterator.h	/^struct mfx_disp_adapters$/;"	s
mfx_dispatcher.cpp	libmfx/src/mfx_dispatcher.cpp	1;"	F
mfx_dispatcher.h	libmfx/include/mfx_dispatcher.h	1;"	F
mfx_dispatcher_defs.h	libmfx/include/mfx_dispatcher_defs.h	1;"	F
mfx_dispatcher_log.cpp	libmfx/src/mfx_dispatcher_log.cpp	1;"	F
mfx_dispatcher_log.h	libmfx/include/mfx_dispatcher_log.h	1;"	F
mfx_dispatcher_trace.cpp	libmfx/src/mfx_dispatcher_trace.cpp	1;"	F
mfx_dll_free	libmfx/src/mfx_load_dll.cpp	/^bool mfx_dll_free(mfxModuleHandle handle)$/;"	f	namespace:MFX
mfx_dll_get_addr	libmfx/src/mfx_load_dll.cpp	/^mfxFunctionPointer mfx_dll_get_addr(mfxModuleHandle handle, const char *pFunctionName)$/;"	f	namespace:MFX
mfx_dll_load	libmfx/src/mfx_load_dll.cpp	/^mfxModuleHandle mfx_dll_load(const msdk_disp_char *pFileName)$/;"	f	namespace:MFX
mfx_dxva2_device.cpp	libmfx/src/mfx_dxva2_device.cpp	1;"	F
mfx_dxva2_device.h	libmfx/include/mfx_dxva2_device.h	1;"	F
mfx_exposed_functions_list.h	libmfx/include/mfx_exposed_functions_list.h	1;"	F
mfx_function_table.cpp	libmfx/src/mfx_function_table.cpp	1;"	F
mfx_get_default_audio_dll_name	libmfx/src/mfx_load_dll.cpp	/^mfxStatus mfx_get_default_audio_dll_name(msdk_disp_char *pPath, size_t pathSize, eMfxImplType implType)$/;"	f	namespace:MFX
mfx_get_default_dll_name	libmfx/src/mfx_load_dll.cpp	/^mfxStatus mfx_get_default_dll_name(msdk_disp_char *pPath, size_t pathSize, eMfxImplType implType)$/;"	f	namespace:MFX
mfx_get_default_plugin_name	libmfx/src/mfx_load_dll.cpp	/^mfxStatus mfx_get_default_plugin_name(msdk_disp_char *pPath, size_t pathSize, eMfxImplType implType)$/;"	f	namespace:MFX
mfx_get_dll_handle	libmfx/src/mfx_load_dll.cpp	/^mfxModuleHandle mfx_get_dll_handle(const msdk_disp_char *pFileName)$/;"	f	namespace:MFX
mfx_library_iterator.cpp	libmfx/src/mfx_library_iterator.cpp	1;"	F
mfx_library_iterator.h	libmfx/include/mfx_library_iterator.h	1;"	F
mfx_libs	libmfx/include/mfx_library_iterator.h	/^struct mfx_libs$/;"	s
mfx_load_dll.cpp	libmfx/src/mfx_load_dll.cpp	1;"	F
mfx_load_dll.h	libmfx/include/mfx_load_dll.h	1;"	F
mfx_load_plugin.cpp	libmfx/src/mfx_load_plugin.cpp	1;"	F
mfx_load_plugin.h	libmfx/include/mfx_load_plugin.h	1;"	F
mfx_plugin_hive.cpp	libmfx/src/mfx_plugin_hive.cpp	1;"	F
mfx_plugin_hive.h	libmfx/include/mfx_plugin_hive.h	1;"	F
mfx_vector.h	libmfx/include/mfx_vector.h	1;"	F
mfx_win_reg_key.cpp	libmfx/src/mfx_win_reg_key.cpp	1;"	F
mfx_win_reg_key.h	libmfx/include/mfx_win_reg_key.h	1;"	F
mfxastructures.h	libmfx/include/msdk/include/mfxastructures.h	1;"	F
mfxaudio++.h	libmfx/include/msdk/include/mfxaudio++.h	1;"	F
mfxaudio.h	libmfx/include/msdk/include/mfxaudio.h	1;"	F
mfxaudio_exposed_functions_list.h	libmfx/include/mfxaudio_exposed_functions_list.h	1;"	F
mfxcommon.h	libmfx/include/msdk/include/mfxcommon.h	1;"	F
mfxdefs.h	libmfx/include/msdk/include/mfxdefs.h	1;"	F
mfxjpeg.h	libmfx/include/msdk/include/mfxjpeg.h	1;"	F
mfxmvc.h	libmfx/include/msdk/include/mfxmvc.h	1;"	F
mfxplugin++.h	libmfx/include/msdk/include/mfxplugin++.h	1;"	F
mfxplugin.h	libmfx/include/msdk/include/mfxplugin.h	1;"	F
mfxsession.h	libmfx/include/msdk/include/mfxsession.h	1;"	F
mfxstructures.h	libmfx/include/msdk/include/mfxstructures.h	1;"	F
mfxvideo++.h	libmfx/include/msdk/include/mfxvideo++.h	1;"	F
mfxvideo.h	libmfx/include/msdk/include/mfxvideo.h	1;"	F
mfxvstructures.h	libmfx/include/msdk/include/mfxvstructures.h	1;"	F
mg_authorize_digest	Source/mongoose.c	/^int mg_authorize_digest(struct mg_connection *c, FILE *fp) {$/;"	f
mg_conn	Source/mongoose.c	/^  struct mg_connection mg_conn;$/;"	m	struct:connection	file:
mg_connect	Source/mongoose.c	/^struct mg_connection *mg_connect(struct mg_server *server, const char *addr) {$/;"	f
mg_connection	Source/mongoose.h	/^struct mg_connection {$/;"	s
mg_copy_listeners	Source/mongoose.c	/^void mg_copy_listeners(struct mg_server *s, struct mg_server *to) {$/;"	f
mg_create_server	Source/mongoose.c	/^struct mg_server *mg_create_server(void *server_data, mg_handler_t handler) {$/;"	f
mg_destroy_server	Source/mongoose.c	/^void mg_destroy_server(struct mg_server **server) {$/;"	f
mg_ev_handler	Source/mongoose.c	/^static void mg_ev_handler(struct ns_connection *nc, int ev, void *p) {$/;"	f	file:
mg_event	Source/mongoose.h	/^enum mg_event {$/;"	g
mg_expansion	Source/mongoose.h	/^struct mg_expansion {$/;"	s
mg_fopen	Source/mongoose.c	/^static FILE *mg_fopen(const char *path, const char *mode) {$/;"	f	file:
mg_forward	Source/mongoose.c	/^int mg_forward(struct mg_connection *c, const char *addr) {$/;"	f
mg_get_header	Source/mongoose.c	/^const char *mg_get_header(const struct mg_connection *ri, const char *s) {$/;"	f
mg_get_mime_type	Source/mongoose.c	/^const char *mg_get_mime_type(const char *path, const char *default_mime_type) {$/;"	f
mg_get_option	Source/mongoose.c	/^const char *mg_get_option(const struct mg_server *server, const char *name) {$/;"	f
mg_get_valid_option_names	Source/mongoose.c	/^const char **mg_get_valid_option_names(void) {$/;"	f
mg_get_var	Source/mongoose.c	/^int mg_get_var(const struct mg_connection *conn, const char *name,$/;"	f
mg_get_var_n	Source/mongoose.c	/^int mg_get_var_n(const struct mg_connection *conn, const char *name,$/;"	f
mg_handler_t	Source/mongoose.h	/^typedef int (*mg_handler_t)(struct mg_connection *, enum mg_event);$/;"	t
mg_header	Source/mongoose.h	/^  struct mg_header {$/;"	s	struct:mg_connection
mg_match_prefix	Source/mongoose.c	/^int mg_match_prefix(const char *pattern, ssize_t pattern_len, const char *str) {$/;"	f
mg_md5	Source/mongoose.c	/^char *mg_md5(char buf[33], ...) {$/;"	f
mg_mmap	Source/mongoose.c	/^void *mg_mmap(FILE *fp, size_t size) {$/;"	f
mg_munmap	Source/mongoose.c	/^void mg_munmap(void *p, size_t size) {$/;"	f
mg_next	Source/mongoose.c	/^struct mg_connection *mg_next(struct mg_server *s, struct mg_connection *c) {$/;"	f
mg_open	Source/mongoose.c	/^static int mg_open(const char *path, int flag, int mode) {$/;"	f	file:
mg_parse_header	Source/mongoose.c	/^int mg_parse_header(const char *s, const char *var_name, char *buf,$/;"	f
mg_parse_multipart	Source/mongoose.c	/^int mg_parse_multipart(const char *buf, int buf_len,$/;"	f
mg_poll_server	Source/mongoose.c	/^time_t mg_poll_server(struct mg_server *server, int milliseconds) {$/;"	f
mg_printf	Source/mongoose.c	/^size_t mg_printf(struct mg_connection *conn, const char *fmt, ...) {$/;"	f
mg_printf_data	Source/mongoose.c	/^size_t mg_printf_data(struct mg_connection *c, const char *fmt, ...) {$/;"	f
mg_result	Source/mongoose.h	/^enum mg_result { MG_FALSE, MG_TRUE, MG_MORE };$/;"	g
mg_send_data	Source/mongoose.c	/^size_t mg_send_data(struct mg_connection *c, const void *data, int data_len) {$/;"	f
mg_send_digest_auth_request	Source/mongoose.c	/^void mg_send_digest_auth_request(struct mg_connection *c) {$/;"	f
mg_send_file	Source/mongoose.c	/^void mg_send_file(struct mg_connection *c, const char *file_name,$/;"	f
mg_send_file_data	Source/mongoose.c	/^void mg_send_file_data(struct mg_connection *c, int fd) {$/;"	f
mg_send_file_internal	Source/mongoose.c	/^void mg_send_file_internal(struct mg_connection *c, const char *file_name,$/;"	f
mg_send_header	Source/mongoose.c	/^void mg_send_header(struct mg_connection *c, const char *name, const char *v) {$/;"	f
mg_send_status	Source/mongoose.c	/^void mg_send_status(struct mg_connection *c, int status) {$/;"	f
mg_server	Source/mongoose.c	/^struct mg_server {$/;"	s	file:
mg_set_option	Source/mongoose.c	/^const char *mg_set_option(struct mg_server *server, const char *name,$/;"	f
mg_snprintf	Source/mongoose.c	/^static int mg_snprintf(char *buf, size_t buflen, const char *fmt, ...) {$/;"	f	file:
mg_start_thread	Source/mongoose.c	/^void *mg_start_thread(void *(*f)(void *), void *p) {$/;"	f
mg_stat	Source/mongoose.c	/^static int mg_stat(const char *path, file_stat_t *st) {$/;"	f	file:
mg_strcasecmp	Source/mongoose.c	/^static int mg_strcasecmp(const char *s1, const char *s2) {$/;"	f	file:
mg_strdup	Source/mongoose.c	/^static char *mg_strdup(const char *str) {$/;"	f	file:
mg_strncasecmp	Source/mongoose.c	/^static int mg_strncasecmp(const char *s1, const char *s2, size_t len) {$/;"	f	file:
mg_template	Source/mongoose.c	/^void mg_template(struct mg_connection *conn, const char *s,$/;"	f
mg_terminate_ssl	Source/mongoose.c	/^int mg_terminate_ssl(struct mg_connection *c, const char *cert) {$/;"	f
mg_url_decode	Source/mongoose.c	/^int mg_url_decode(const char *src, size_t src_len, char *dst,$/;"	f
mg_url_encode	Source/mongoose.c	/^size_t mg_url_encode(const char *src, size_t s_len, char *dst, size_t dst_len) {$/;"	f
mg_vprintf	Source/mongoose.c	/^size_t mg_vprintf(struct mg_connection *conn, const char *fmt, va_list ap) {$/;"	f
mg_vprintf_data	Source/mongoose.c	/^size_t mg_vprintf_data(struct mg_connection *c, const char *fmt, va_list ap) {$/;"	f
mg_vsnprintf	Source/mongoose.c	/^static int mg_vsnprintf(char *buf, size_t buflen, const char *fmt, va_list ap) {$/;"	f	file:
mg_wakeup_server	Source/mongoose.c	/^void mg_wakeup_server(struct mg_server *server) {$/;"	f
mg_wakeup_server_ex	Source/mongoose.c	/^void mg_wakeup_server_ex(struct mg_server *server, mg_handler_t cb,$/;"	f
mg_websocket_printf	Source/mongoose.c	/^size_t mg_websocket_printf(struct mg_connection *conn, int opcode,$/;"	f
mg_websocket_write	Source/mongoose.c	/^size_t mg_websocket_write(struct mg_connection *conn, int opcode,$/;"	f
mg_write	Source/mongoose.c	/^size_t mg_write(struct mg_connection *c, const void *buf, size_t len) {$/;"	f
mgr	Source/mongoose.c	/^  struct ns_mgr *mgr;$/;"	m	struct:ns_connection	file:
mi	lame/doc/html/ms_stereo.html	/^<a name="mi">Intensity-Stereo<\/a> (not supported in LAME) uses a technique known as joint$/;"	a
micAudio	Source/OBS.h	/^    AudioSource  *micAudio;$/;"	m	class:OBS
micBoost	Source/OBS.h	/^    float   desktopBoost, micBoost;$/;"	m	class:OBS
micMag	Source/OBS.h	/^    float   desktopMag, micMag;$/;"	m	class:OBS
micMax	Source/OBS.h	/^    float   desktopMax, micMax;$/;"	m	class:OBS
micPeak	Source/OBS.h	/^    float   desktopPeak, micPeak;$/;"	m	class:OBS
micSource	NoiseGate/NoiseGate.h	/^    AudioSource *       micSource;$/;"	m	class:NoiseGate
micVol	Source/OBS.h	/^    float   desktopVol, micVol, curMicVol, curDesktopVol;$/;"	m	class:OBS
micVolumeChangeCallback	Source/OBS.h	/^    OBS_VOLUME_CHANGED_CALLBACK micVolumeChangeCallback;$/;"	m	struct:PluginInfo
mid_qual_coeffs.h	libsamplerate/mid_qual_coeffs.h	1;"	F
mids	libmfx/include/msdk/include/mfxstructures.h	/^    mfxMemId    *mids;      \/* the array allocated by application *\/$/;"	m
midside.c	libfaac/midside.c	1;"	F
midside.h	libfaac/midside.h	1;"	F
mimeTypes	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/MimeTypeManager.cs	/^        private static readonly String[] mimeTypes = $/;"	f	class:RemoteBrowser.MimeTypeManager	file:
mime_type	Source/mongoose.c	/^  const char *mime_type;$/;"	m	file:
min	QSVHelper/Utilities.h	30;"	d
min	libfaac/util.h	36;"	d
minBlockSize	OBSApi/Utility/FastAlloc.cpp	/^    size_t minBlockSize;$/;"	m	struct:MemInfo	file:
minCX	DShowPlugin/MediaInfoStuff.h	/^    UINT minCX, minCY;$/;"	m	struct:MediaOutputInfo
minCY	DShowPlugin/MediaInfoStuff.h	/^    UINT minCX, minCY;$/;"	m	struct:MediaOutputInfo
minClientHeight	Source/OBS.h	/^static const int minClientHeight = 275;$/;"	v
minClientWidth	Source/OBS.h	/^static const int minClientWidth  = 640;$/;"	v
minFrameInterval	DShowPlugin/DShowPlugin.cpp	/^    UINT64 minFrameInterval, maxFrameInterval;$/;"	m	struct:FPSInterval	file:
minFrameInterval	DShowPlugin/MediaInfoStuff.h	/^    UINT64 minFrameInterval, maxFrameInterval;$/;"	m	struct:MediaOutputInfo
minFramedropTimestsamp	Source/RTMPPublisher.h	/^    DWORD minFramedropTimestsamp;$/;"	m	class:RTMPPublisher
minIndex	libmfx/src/main.cpp	/^        mfxU32 minIndex;$/;"	m	file:
minLinear	OBSApi/VolumeMeter.cpp	/^float minLinear;$/;"	v
minPercentage	OBSApi/Utility/Profiler.cpp	/^float minPercentage, minTime;$/;"	v
minQP	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_QP                       minQP;                                       \/**< [in]: Specifies the minimum QP used for rate control. Client must set NV_ENC_CONFIG::enableMinQP to 1. *\/$/;"	m	struct:_NV_ENC_RC_PARAMS
minTime	OBSApi/Utility/Profiler.cpp	/^float minPercentage, minTime;$/;"	v
min_int	lame/libmp3lame/presets.c	/^min_int(int a, int b)$/;"	f	file:
min_size_t	lame/frontend/get_audio.c	/^min_size_t(size_t a, size_t b)$/;"	f	file:
mincr	x264/x264.h	/^    int mincr;       \/* min compression ratio *\/$/;"	m
mingain_l	lame/libmp3lame/vbrquantize.c	/^    int     mingain_l;$/;"	m	struct:algo_s	file:
mingain_s	lame/libmp3lame/vbrquantize.c	/^    int     mingain_s[3];$/;"	m	struct:algo_s	file:
minor	lame/include/lame.h	/^    int minor;$/;"	m
minval	lame/libmp3lame/presets.c	/^    FLOAT   minval;$/;"	m	file:
minval	lame/libmp3lame/util.h	/^        FLOAT   minval;$/;"	m
minval	lame/libmp3lame/util.h	/^        FLOAT   minval[CBANDS];$/;"	m
miscAreaWidth	Source/OBS.cpp	/^const int miscAreaWidth = 290;$/;"	v
missing	lame/missing	1;"	F
mixed	lame/libmp3lame/lame-analysis.h	/^    int     mixed[2][2];$/;"	m	struct:plotting_data
mixed_block_flag	lame/libmp3lame/l3side.h	/^    int     mixed_block_flag;$/;"	m
mixed_block_flag	lame/mpglib/mpg123.h	/^    unsigned mixed_block_flag;$/;"	m	struct:gr_info_s
mj	lame/doc/html/ms_stereo.html	/^In <a name="mj">Mid-Side Stereo<\/a>, the encoder analyzes the left, right<a href="#note2"><sup>2$/;"	a
mk_mp3.sh	lame/misc/mk_mp3.sh	1;"	F
mkdir	Source/mongoose.c	1343;"	d	file:
mkdir_p	lame/ACM/ADbg/Makefile	/^mkdir_p = \/bin\/mkdir -p$/;"	m
mkdir_p	lame/ACM/Makefile	/^mkdir_p = \/bin\/mkdir -p$/;"	m
mkdir_p	lame/ACM/ddk/Makefile	/^mkdir_p = \/bin\/mkdir -p$/;"	m
mkdir_p	lame/ACM/tinyxml/Makefile	/^mkdir_p = \/bin\/mkdir -p$/;"	m
mkdir_p	lame/Dll/Makefile	/^mkdir_p = \/bin\/mkdir -p$/;"	m
mkdir_p	lame/Makefile	/^mkdir_p = \/bin\/mkdir -p$/;"	m
mkdir_p	lame/debian/Makefile	/^mkdir_p = \/bin\/mkdir -p$/;"	m
mkdir_p	lame/doc/Makefile	/^mkdir_p = \/bin\/mkdir -p$/;"	m
mkdir_p	lame/doc/html/Makefile	/^mkdir_p = \/bin\/mkdir -p$/;"	m
mkdir_p	lame/doc/man/Makefile	/^mkdir_p = \/bin\/mkdir -p$/;"	m
mkdir_p	lame/dshow/Makefile	/^mkdir_p = \/bin\/mkdir -p$/;"	m
mkdir_p	lame/frontend/Makefile	/^mkdir_p = \/bin\/mkdir -p$/;"	m
mkdir_p	lame/include/Makefile	/^mkdir_p = \/bin\/mkdir -p$/;"	m
mkdir_p	lame/libmp3lame/Makefile	/^mkdir_p = \/bin\/mkdir -p$/;"	m
mkdir_p	lame/libmp3lame/i386/Makefile	/^mkdir_p = \/bin\/mkdir -p$/;"	m
mkdir_p	lame/libmp3lame/vector/Makefile	/^mkdir_p = \/bin\/mkdir -p$/;"	m
mkdir_p	lame/mac/Makefile	/^mkdir_p = \/bin\/mkdir -p$/;"	m
mkdir_p	lame/macosx/English.lproj/Makefile	/^mkdir_p = \/bin\/mkdir -p$/;"	m
mkdir_p	lame/macosx/LAME.xcodeproj/Makefile	/^mkdir_p = \/bin\/mkdir -p$/;"	m
mkdir_p	lame/macosx/Makefile	/^mkdir_p = \/bin\/mkdir -p$/;"	m
mkdir_p	lame/misc/Makefile	/^mkdir_p = \/bin\/mkdir -p$/;"	m
mkdir_p	lame/mpglib/Makefile	/^mkdir_p = \/bin\/mkdir -p$/;"	m
mkdir_p	lame/vc_solution/Makefile	/^mkdir_p = \/bin\/mkdir -p$/;"	m
mkinstalldirs	lame/ACM/ADbg/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	lame/ACM/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	lame/ACM/ddk/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	lame/ACM/tinyxml/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	lame/Dll/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	lame/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	lame/debian/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	lame/doc/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	lame/doc/html/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	lame/doc/man/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	lame/dshow/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	lame/frontend/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	lame/include/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	lame/libmp3lame/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	lame/libmp3lame/i386/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	lame/libmp3lame/vector/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	lame/mac/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	lame/macosx/English.lproj/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	lame/macosx/LAME.xcodeproj/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	lame/macosx/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	lame/misc/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	lame/mpglib/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	lame/vc_solution/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
ml00	lame/libmp3lame/fft.c	172;"	d	file:
ml01	lame/libmp3lame/fft.c	177;"	d	file:
ml10	lame/libmp3lame/fft.c	173;"	d	file:
ml11	lame/libmp3lame/fft.c	178;"	d	file:
ml20	lame/libmp3lame/fft.c	174;"	d	file:
ml21	lame/libmp3lame/fft.c	179;"	d	file:
ml30	lame/libmp3lame/fft.c	175;"	d	file:
ml31	lame/libmp3lame/fft.c	180;"	d	file:
mlame	lame/misc/mlame	1;"	F
mlame_corr.c	lame/misc/mlame_corr.c	1;"	F
mld	lame/libmp3lame/util.h	/^        FLOAT   mld[Max(SBMAX_l,SBMAX_s)];$/;"	m
mld_cb	lame/libmp3lame/util.h	/^        FLOAT   mld_cb[CBANDS];$/;"	m
mmCapture	Source/MMDeviceAudioSource.cpp	/^    IAudioCaptureClient *mmCapture;$/;"	m	class:MMDeviceAudioSource	file:
mmClient	Source/BlankAudioPlayback.cpp	/^    IAudioClient        *mmClient;$/;"	m	struct:BlankAudioPlayback	file:
mmClient	Source/MMDeviceAudioSource.cpp	/^    IAudioClient        *mmClient;$/;"	m	class:MMDeviceAudioSource	file:
mmClock	Source/MMDeviceAudioSource.cpp	/^    IAudioClock         *mmClock;$/;"	m	class:MMDeviceAudioSource	file:
mmDevice	Source/BlankAudioPlayback.cpp	/^    IMMDevice           *mmDevice;$/;"	m	struct:BlankAudioPlayback	file:
mmDevice	Source/MMDeviceAudioSource.cpp	/^    IMMDevice           *mmDevice;$/;"	m	class:MMDeviceAudioSource	file:
mmEnumerator	Source/BlankAudioPlayback.cpp	/^    IMMDeviceEnumerator *mmEnumerator;$/;"	m	struct:BlankAudioPlayback	file:
mmEnumerator	Source/MMDeviceAudioSource.cpp	/^    IMMDeviceEnumerator *mmEnumerator;$/;"	m	class:MMDeviceAudioSource	file:
mmRender	Source/BlankAudioPlayback.cpp	/^    IAudioRenderClient  *mmRender;$/;"	m	struct:BlankAudioPlayback	file:
mmap	Source/mongoose.c	/^static void *mmap(void *addr, int64_t len, int prot, int flags, int fd,$/;"	f	file:
mmx	lame/libmp3lame/lame_global_flags.h	/^        int     mmx;$/;"	m	struct:lame_global_struct::<anonymous>
mode	QSVHelper/IPCStructs.h	/^    enum { MODE_QUERY, MODE_ENCODE } mode;$/;"	m	struct:init_request
mode	Source/RTMPStuff.h	/^SAVC(mode);$/;"	v
mode	Source/Settings.h	/^        UINT mode;$/;"	m	struct:SettingsPublish::PublishDialogData
mode	Source/TextOutputSource.cpp	/^    int         mode;$/;"	m	class:TextOutputSource	file:
mode	lame/ACM/ACM.h	/^		vbr_mode     mode;$/;"	m	class:bitrate_item
mode	lame/include/lame.h	/^  int mode;            \/* mp3 frame type                                 *\/$/;"	m
mode	lame/libmp3lame/lame_global_flags.h	/^    MPEG_mode mode;          \/* see enum in lame.h$/;"	m	struct:lame_global_struct
mode	lame/libmp3lame/util.h	/^        MPEG_mode mode;$/;"	m
mode	lame/mpglib/mpg123.h	/^    int     mode;$/;"	m	struct:frame
mode	libsamplerate/common.h	/^	int		mode ;$/;"	m	struct:SRC_PRIVATE_tag
mode_ext	lame/include/lame.h	/^  int mode_ext;        \/* mp3 frame type                                 *\/$/;"	m
mode_ext	lame/libmp3lame/util.h	/^        int     mode_ext;$/;"	m
mode_ext	lame/mpglib/mpg123.h	/^    int     mode_ext;$/;"	m	struct:frame
mode_gr	lame/libmp3lame/util.h	/^        int     mode_gr;     \/* granules per frame *\/$/;"	m
model	libfaac/frame.h	/^  psymodel_t *model;$/;"	m
modifiers	OBSApi/HotkeyControlEx.cpp	/^    DWORD hotkeyVK, modifiers;$/;"	m	struct:HotkeyControlExData	file:
modifyType	Source/OBS.h	/^    ItemModifyType modifyType;$/;"	m	class:OBS
modrm	minhook/src/HDE32/hde32.h	/^    uint8_t modrm;$/;"	m
modrm	minhook/src/HDE64/include/hde64.h	/^    uint8_t modrm;$/;"	m
modrm_mod	minhook/src/HDE32/hde32.h	/^    uint8_t modrm_mod;$/;"	m
modrm_mod	minhook/src/HDE64/include/hde64.h	/^    uint8_t modrm_mod;$/;"	m
modrm_reg	minhook/src/HDE32/hde32.h	/^    uint8_t modrm_reg;$/;"	m
modrm_reg	minhook/src/HDE64/include/hde64.h	/^    uint8_t modrm_reg;$/;"	m
modrm_rm	minhook/src/HDE32/hde32.h	/^    uint8_t modrm_rm;$/;"	m
modrm_rm	minhook/src/HDE64/include/hde64.h	/^    uint8_t modrm_rm;$/;"	m
module	libmfx/include/mfx_load_plugin.h	/^            PluginModule module;$/;"	m	struct:MFX::MFXPluginFactory::FactoryRecord
moduleName	Source/CrashDumpHandler.h	/^    TCHAR   moduleName[MAX_PATH];$/;"	m	struct:moduleinfo_s
moduleinfo_s	Source/CrashDumpHandler.h	/^typedef struct moduleinfo_s$/;"	s
moduleinfo_t	Source/CrashDumpHandler.h	/^} moduleinfo_t;$/;"	t
mongoose.c	Source/mongoose.c	1;"	F
mongoose.h	Source/mongoose.h	1;"	F
monitor	Source/DesktopImageSource.cpp	/^    UINT     monitor;$/;"	m	class:DesktopImageSource	file:
monitorData	Source/DesktopImageSource.cpp	/^    MonitorInfo monitorData;$/;"	m	class:DesktopImageSource	file:
monitorNameList	Source/OBS.h	/^    StringList monitorNameList;$/;"	m	struct:DeviceOutputData
monitors	Source/OBS.h	/^    List<MonitorInfo>       monitors;$/;"	m	class:OBS
monitors	Source/OBS.h	/^    List<MonitorInfo> monitors;$/;"	m	struct:DeviceOutputData
mono	lame/misc/mlame_corr.c	/^typedef signed short mono;$/;"	t	file:
monoChromeEncoding	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                        monoChromeEncoding;                          \/**< [in]: Set this to 1 to enable monochrome encoding for this session. *\/$/;"	m	struct:_NV_ENC_CONFIG
mono_t	lame/misc/abx.c	/^typedef sample_t      mono_t   [1];$/;"	t	file:
monthtab	librtmp/hashswf.c	/^static const char *monthtab[12] = { "Jan", "Feb", "Mar",$/;"	v	file:
mp	lame/libmp3lame/mpglib_interface.c	/^static MPSTR   mp;$/;"	v	file:
mp1input	lame/doc/html/detailed.html	/^<a name="mp1input"><span class="hilight">--mp1input<\/span><\/a>$/;"	a
mp2input	lame/doc/html/detailed.html	/^ <a name="mp2input"><span class="hilight">--mp2input<\/span><\/a>$/;"	a
mp3	lame/Dll/BladeMP3EncDLL.h	/^			} mp3;					\/\/ BE_CONFIG_MP3$/;"	m
mp3_delay	lame/frontend/main.h	/^    int   mp3_delay;                \/* to adjust the number of samples truncated during decode *\/$/;"	m	struct:DecoderConfig
mp3_delay_set	lame/frontend/main.h	/^    int   mp3_delay_set;            \/* user specified the value of the mp3 encoder delay to assume for decoding *\/$/;"	m	struct:DecoderConfig
mp3data_struct	lame/include/lame.h	/^} mp3data_struct;$/;"	t
mp3done	lame/frontend/gtkanal.c	/^static int mp3done = 0;      \/* last frame has been read *\/$/;"	v	file:
mp3input	lame/doc/html/detailed.html	/^ <a name="mp3input"><span class="hilight">--mp3input<\/span><\/a> MPEG layer I, II or III input file$/;"	a
mp3input_data	lame/frontend/main.h	/^    mp3data_struct mp3input_data;$/;"	m	struct:DecoderConfig
mp3rtp.c	lame/frontend/mp3rtp.c	1;"	F
mp3rtp_DEPENDENCIES	lame/frontend/Makefile	/^mp3rtp_DEPENDENCIES = $(top_builddir)\/libmp3lame\/libmp3lame.la$/;"	m
mp3rtp_LDADD	lame/frontend/Makefile	/^mp3rtp_LDADD = $(LDADD)$/;"	m
mp3rtp_OBJECTS	lame/frontend/Makefile	/^mp3rtp_OBJECTS = $(am_mp3rtp_OBJECTS)$/;"	m
mp3rtp_SOURCES	lame/frontend/Makefile	/^mp3rtp_SOURCES = mp3rtp.c rtp.c $(common_sources)$/;"	m
mp3x.c	lame/frontend/mp3x.c	1;"	F
mp3x_DEPENDENCIES	lame/frontend/Makefile	/^mp3x_DEPENDENCIES = $(am__DEPENDENCIES_1)$/;"	m
mp3x_LDADD	lame/frontend/Makefile	/^mp3x_LDADD = $(LDADD) $/;"	m
mp3x_OBJECTS	lame/frontend/Makefile	/^mp3x_OBJECTS = $(am_mp3x_OBJECTS)$/;"	m
mp3x_SOURCES	lame/frontend/Makefile	/^mp3x_SOURCES = mp3x.c gtkanal.c gpkplotting.c $(common_sources)$/;"	m
mp4a	Source/RTMPStuff.h	/^SAVC(mp4a);$/;"	v
mpeg1_bitrate	lame/ACM/ACM.cpp	/^static const unsigned int mpeg1_bitrate[] = {320, 256, 224, 192, 160, 128, 112, 96, 80, 64, 56, 48, 40, 32};$/;"	v	file:
mpeg1_freq	lame/ACM/ACM.cpp	/^static const unsigned int mpeg1_freq[] = {48000,44100,32000};$/;"	v	file:
mpeg1_scale_bitcount	lame/libmp3lame/takehiro.c	/^mpeg1_scale_bitcount(const lame_internal_flags * gfc, gr_info * const cod_info)$/;"	f	file:
mpeg25	lame/mpglib/mpg123.h	/^    int     mpeg25;          \/* 1 = MPEG-2.5, 0 = MPEG-1\/2 *\/$/;"	m	struct:frame
mpeg2_bitrate	lame/ACM/ACM.cpp	/^static const unsigned int mpeg2_bitrate[] = {160, 144, 128, 112,  96,  80,  64, 56, 48, 40, 32, 24, 16,  8};$/;"	v	file:
mpeg2_freq	lame/ACM/ACM.cpp	/^static const unsigned int mpeg2_freq[] = {24000,22050,16000,12000,11025,8000};$/;"	v	file:
mpeg2_scale_bitcount	lame/libmp3lame/takehiro.c	/^mpeg2_scale_bitcount(const lame_internal_flags * gfc, gr_info * const cod_info)$/;"	f	file:
mpegVersion	libfaac/include/faaccfg.h	/^    unsigned int mpegVersion;$/;"	m	struct:faacEncConfiguration
mpg123.h	lame/mpglib/mpg123.h	1;"	F
mpg123blocktype	lame/libmp3lame/lame-analysis.h	/^    int     mpg123blocktype[2][2];$/;"	m	struct:plotting_data
mpg123xr	lame/libmp3lame/lame-analysis.h	/^    double  mpg123xr[2][2][576];$/;"	m	struct:plotting_data
mpglib.h	lame/mpglib/mpglib.h	1;"	F
mpglib_interface.c	lame/libmp3lame/mpglib_interface.c	1;"	F
mpstr_tag	lame/mpglib/mpglib.h	/^typedef struct mpstr_tag {$/;"	s
ms	lame/doc/html/ms_stereo.html	/^In <a name="ms">Simple Stereo<\/a>, the encoder analyzes the left and the right channels$/;"	a
ms00	lame/libmp3lame/fft.c	182;"	d	file:
ms01	lame/libmp3lame/fft.c	187;"	d	file:
ms10	lame/libmp3lame/fft.c	183;"	d	file:
ms11	lame/libmp3lame/fft.c	188;"	d	file:
ms20	lame/libmp3lame/fft.c	184;"	d	file:
ms21	lame/libmp3lame/fft.c	189;"	d	file:
ms30	lame/libmp3lame/fft.c	185;"	d	file:
ms31	lame/libmp3lame/fft.c	190;"	d	file:
msInfo	libfaac/channels.h	/^    MSInfo msInfo;$/;"	m
msSpectrum	libfaac/frame.h	/^    double *msSpectrum[MAX_CHANNELS];$/;"	m
ms_convert	lame/libmp3lame/quantize.c	/^ms_convert(III_side_info_t * l3_side, int gr)$/;"	f	file:
ms_ener_ratio	lame/libmp3lame/lame-analysis.h	/^    double  ms_ener_ratio[2];$/;"	m	struct:plotting_data
ms_ratio	lame/libmp3lame/lame-analysis.h	/^    double  ms_ratio[2];$/;"	m	struct:plotting_data
ms_stereo	lame/libmp3lame/lame-analysis.h	/^    int     framesize, stereo, js, ms_stereo, i_stereo, emph, bitrate, sampfreq, maindata;$/;"	m	struct:plotting_data
ms_stereo.html	lame/doc/html/ms_stereo.html	1;"	F
ms_used	libfaac/channels.h	/^    int ms_used[MAX_SCFAC_BANDS];$/;"	m
msacmdrv.h	lame/ACM/ddk/msacmdrv.h	1;"	F
mscorelib.h	CLRHostPlugin/CLRHostPlugin/mscorelib.h	1;"	F
mscorlib	CLRHostPlugin/CLRHostPlugin/CLRHost.h	/^namespace mscorlib {$/;"	n
mscorlib	CLRHostPlugin/CLRHostPlugin/CLRImageSource.h	/^namespace mscorlib {$/;"	n
mscorlib	CLRHostPlugin/CLRHostPlugin/CLRImageSourceFactory.h	/^namespace mscorlib {$/;"	n
mscorlib	CLRHostPlugin/CLRHostPlugin/CLRObject.h	/^namespace mscorlib {$/;"	n
mscorlib	CLRHostPlugin/CLRHostPlugin/CLRPlugin.h	/^namespace mscorlib {$/;"	n
mscorlib	CLRHostPlugin/CLRHostPlugin/CLRSettingsPane.h	/^namespace mscorlib {$/;"	n
mscorlib	CLRHostPlugin/CLRHostPlugin/CLRVector2.h	/^namespace mscorlib {$/;"	n
mscorlib	CLRHostPlugin/CLRHostPlugin/CLRXElement.h	/^namespace mscorlib {$/;"	n
msdk_atoi	QSVHelper/IntelSupport/include/vm/strings_defs.h	35;"	d
msdk_char	QSVHelper/IntelSupport/include/vm/strings_defs.h	/^typedef TCHAR msdk_char;$/;"	t
msdk_disp_char	libmfx/include/mfx_dispatcher_defs.h	/^typedef char msdk_disp_char;$/;"	t
msdk_disp_char	libmfx/include/mfx_dispatcher_defs.h	/^typedef wchar_t  msdk_disp_char;$/;"	t
msdk_disp_char_cpy_s	libmfx/include/mfx_dispatcher_defs.h	44;"	d
msdk_disp_char_cpy_s	libmfx/include/mfx_dispatcher_defs.h	46;"	d
msdk_disp_char_cpy_s	libmfx/include/mfx_dispatcher_defs.h	51;"	d
msdk_fprintf	QSVHelper/IntelSupport/include/vm/strings_defs.h	27;"	d
msdk_itoa_decimal	QSVHelper/IntelSupport/include/vm/strings_defs.h	39;"	d
msdk_locked_tasks	QSVHelper/Encoder.h	/^    std::vector<std::pair<mfxFrameSurface1*, uint32_t>> msdk_locked_tasks;$/;"	m	struct:Encoder
msdk_printf	QSVHelper/IntelSupport/include/vm/strings_defs.h	26;"	d
msdk_sprintf	QSVHelper/IntelSupport/include/vm/strings_defs.h	28;"	d
msdk_sscanf	QSVHelper/IntelSupport/include/vm/strings_defs.h	34;"	d
msdk_strchr	QSVHelper/IntelSupport/include/vm/strings_defs.h	38;"	d
msdk_strcmp	QSVHelper/IntelSupport/include/vm/strings_defs.h	31;"	d
msdk_strcopy	QSVHelper/IntelSupport/include/vm/strings_defs.h	43;"	d
msdk_strlen	QSVHelper/IntelSupport/include/vm/strings_defs.h	30;"	d
msdk_strncmp	QSVHelper/IntelSupport/include/vm/strings_defs.h	32;"	d
msdk_strstr	QSVHelper/IntelSupport/include/vm/strings_defs.h	33;"	d
msdk_strtod	QSVHelper/IntelSupport/include/vm/strings_defs.h	37;"	d
msdk_strtol	QSVHelper/IntelSupport/include/vm/strings_defs.h	36;"	d
msdk_vprintf	QSVHelper/IntelSupport/include/vm/strings_defs.h	29;"	d
mset	OBSApi/Utility/Inline.h	/^inline void STDCALL mset(void *pDest, unsigned char val, size_t iLen)$/;"	f
msetd	OBSApi/Utility/Inline.h	/^inline void STDCALL msetd(void *pDest, DWORD val, size_t iLen)$/;"	f
msfix	lame/libmp3lame/lame_global_flags.h	/^    float   msfix;           \/* Naoki's adjustment of Mid\/Side maskings *\/$/;"	m	struct:lame_global_struct
msfix	lame/libmp3lame/presets.c	/^    FLOAT   msfix;$/;"	m	file:
msfix	lame/libmp3lame/util.h	/^        float   msfix;       \/* Naoki's adjustment of Mid\/Side maskings *\/$/;"	m
msflag	lame/frontend/gtkanal.c	/^    int     msflag;          \/* toggle between L&R vs M&S PCM data display *\/$/;"	m	struct:gtkinfostruct	file:
msgf	lame/libmp3lame/lame_global_flags.h	/^        void    (*msgf) (const char *format, va_list ap);$/;"	m	struct:lame_global_struct::<anonymous>
msleep	lame/frontend/gtkanal.c	49;"	d	file:
msleep	lame/frontend/gtkanal.c	52;"	d	file:
msleep	librtmp/rtmp_sys.h	59;"	d
msleep	librtmp/rtmp_sys.h	74;"	d
mstream	lame/frontend/amiga_mpega.c	/^MPEGA_STREAM *mstream = NULL;$/;"	v
mswap	OBSApi/Utility/Inline.h	/^inline void STDCALL mswap(void *pDest, const void *pSrc, size_t iLen)$/;"	f
mswap	OBSApi/Utility/Inline.h	/^inline void STDCALL mswap(void *pDest, void *pSrc, size_t iLen)$/;"	f
mugeco.sh	lame/misc/mugeco.sh	1;"	F
muls	lame/mpglib/common.c	/^real    muls[27][64];$/;"	v
multiplier	lame/misc/ath.c	/^    int            multiplier;           \/\/ -TURN_STEPS: down, +TURN_STEPS up$/;"	m	file:
multiplierCount	Source/SettingsVideo.cpp	/^const int multiplierCount = 9;$/;"	v
multiply	lame/misc/abx.c	/^void  multiply ( char c, stereo_t* p, size_t len, double fact )$/;"	f
munmap	Source/mongoose.c	1625;"	d	file:
munmap	Source/mongoose.c	1656;"	d	file:
music_in	lame/frontend/get_audio.c	/^    FILE   *music_in;$/;"	m	struct:get_audio_global_data_struct	file:
must_hide_file	Source/mongoose.c	/^static int must_hide_file(struct connection *conn, const char *path) {$/;"	f	file:
muteDesktopHotkeyID	Source/OBS.h	/^    UINT muteDesktopHotkeyID;$/;"	m	class:OBS
muteMicHotkeyID	Source/OBS.h	/^    UINT muteMicHotkeyID;$/;"	m	class:OBS
mutex	Source/OBS.h	/^        std::unique_ptr<void, MutexDeleter> mutex;$/;"	m	struct:OBS::PendingStreams
mutexName	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	/^LPCTSTR                 mutexName = TEXT("Global\\\\ddUnlockFunctionMutex");$/;"	v
mutex_	QSVHelper/WindowsStuff.h	/^    safe_handle mutex_;$/;"	m	struct:IPCMutex
mvPrecision	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_MV_PRECISION             mvPrecision;                                 \/**< [in]: Specifies the desired motion vector prediction precision. *\/$/;"	m	struct:_NV_ENC_CONFIG
mv_range	x264/x264.h	/^    int mv_range;    \/* max vertical mv component range (pixels) *\/$/;"	m
mvs_per_2mb	x264/x264.h	/^    int mvs_per_2mb; \/* max mvs per 2 consecutive mbs. *\/$/;"	m
mvx	ObsNvenc/inc/nvEncodeAPI.h	/^    int32_t    mvx         : 12;                        \/**< [in]: Specifies the x component of integer pixel MV (relative to current MB) S12.0. *\/$/;"	m	struct:_NVENC_EXTERNAL_ME_HINT
mvy	ObsNvenc/inc/nvEncodeAPI.h	/^    int32_t    mvy         : 10;                        \/**< [in]: Specifies the y component of integer pixel MV (relative to current MB) S10.0 .*\/$/;"	m	struct:_NVENC_EXTERNAL_ME_HINT
my_AvgBytesPerSec	lame/ACM/ACMStream.h	/^	int my_AvgBytesPerSec;$/;"	m	class:ACMStream
my_AvgBytesPerSec	lame/ACM/DecodeStream.h	/^	int my_AvgBytesPerSec;$/;"	m	class:DecodeStream
my_Channels	lame/ACM/ACMStream.h	/^	int my_Channels;$/;"	m	class:ACMStream
my_Channels	lame/ACM/DecodeStream.h	/^	int my_Channels;$/;"	m	class:DecodeStream
my_DecodeData	lame/ACM/DecodeStream.h	/^	MPSTR my_DecodeData;$/;"	m	class:DecodeStream
my_EncodingProperties	lame/ACM/ACM.h	/^	AEncodeProperties my_EncodingProperties;$/;"	m	class:ACM
my_OutBytesPerSec	lame/ACM/ACMStream.h	/^	int my_OutBytesPerSec;$/;"	m	class:ACMStream
my_SamplesPerBlock	lame/ACM/ACMStream.h	/^	DWORD  my_SamplesPerBlock;$/;"	m	class:ACMStream
my_SamplesPerBlock	lame/ACM/DecodeStream.h	/^	DWORD  my_SamplesPerBlock;$/;"	m	class:DecodeStream
my_SamplesPerSec	lame/ACM/ACMStream.h	/^	int my_SamplesPerSec;$/;"	m	class:ACMStream
my_SamplesPerSec	lame/ACM/DecodeStream.h	/^	int my_SamplesPerSec;$/;"	m	class:DecodeStream
my_SourceBitrate	lame/ACM/DecodeStream.h	/^	int my_SourceBitrate;$/;"	m	class:DecodeStream
my_VBRMode	lame/ACM/ACMStream.h	/^	vbr_mode my_VBRMode;$/;"	m	class:ACMStream
my_console_printing	lame/frontend/console.c	/^my_console_printing(FILE * fp, const char *format, va_list ap)$/;"	f	file:
my_current_config	lame/ACM/AEncodeProperties.h	/^	std::string my_current_config;$/;"	m	class:AEncodeProperties
my_debug	lame/ACM/ACM.h	/^	ADbg    my_debug;$/;"	m	class:ACM
my_debug	lame/ACM/ACMStream.h	/^	ADbg * my_debug;$/;"	m	class:ACMStream
my_debug	lame/ACM/AEncodeProperties.h	/^	ADbg              my_debug;$/;"	m	class:AEncodeProperties
my_debug	lame/ACM/DecodeStream.h	/^	ADbg * my_debug;$/;"	m	class:DecodeStream
my_debug_output	lame/ACM/ADbg/ADbg.h	/^	bool my_debug_output;$/;"	m	class:ADbg
my_dhm_G	librtmp/rtmp.c	/^static const char *my_dhm_G = "4";$/;"	v	file:
my_dhm_P	librtmp/rtmp.c	/^static const char *my_dhm_P =$/;"	v	file:
my_error_printing	lame/frontend/console.c	/^my_error_printing(FILE * fp, const char *format, va_list ap)$/;"	f	file:
my_hIcon	lame/ACM/ACM.h	/^	HICON   my_hIcon;$/;"	m	class:ACM
my_hModule	lame/ACM/ACM.h	/^	HMODULE my_hModule;$/;"	m	class:ACM
my_hModule	lame/ACM/AEncodeProperties.h	/^	HMODULE my_hModule;$/;"	m	class:AEncodeProperties
my_level	lame/ACM/ADbg/ADbg.h	/^	int my_level;$/;"	m	class:ADbg
my_report_printing	lame/frontend/console.c	/^my_report_printing(FILE * fp, const char *format, va_list ap)$/;"	f	file:
my_store_location	lame/ACM/AEncodeProperties.h	/^	std::string my_store_location;$/;"	m	class:AEncodeProperties
my_stored_data	lame/ACM/AEncodeProperties.h	/^	TiXmlDocument my_stored_data;$/;"	m	class:AEncodeProperties
my_time_included	lame/ACM/ADbg/ADbg.h	/^	bool my_time_included;$/;"	m	class:ADbg
my_use_file	lame/ACM/ADbg/ADbg.h	/^	bool my_use_file;$/;"	m	class:ADbg
n	lame/frontend/get_audio.c	/^    int     n;               \/* number samples allocated *\/$/;"	m	struct:PcmBuffer	file:
n	lame/misc/abx.c	/^    unsigned long       n;$/;"	m	file:
n	lame/misc/mlame_corr.c	/^    unsigned long long  n;$/;"	m	file:
nBitRate	lame/dshow/Mpegac.h	/^    DWORD      nBitRate;$/;"	m
nBitRate	lame/dshow/Mpegac.h	/^    DWORD   nBitRate;$/;"	m
nBytesWritten	lame/libmp3lame/util.h	/^        unsigned long nBytesWritten;$/;"	m
nChannelIndex	lame/ACM/AEncodeProperties.h	/^	int nChannelIndex;$/;"	m	class:AEncodeProperties
nIgnoredFlvFrameCounter	librtmp/rtmp.h	/^        uint32_t nIgnoredFlvFrameCounter;$/;"	m	struct:RTMP_READ
nIgnoredFrameCounter	librtmp/rtmp.h	/^        uint32_t nIgnoredFrameCounter;$/;"	m	struct:RTMP_READ
nInitialFrameSize	librtmp/rtmp.h	/^        uint32_t nInitialFrameSize;$/;"	m	struct:RTMP_READ
nMaxBitrateIndex	lame/ACM/AEncodeProperties.h	/^	int nMaxBitrateIndex; \/\/ only used in VBR mode$/;"	m	class:AEncodeProperties
nMetaHeaderSize	librtmp/rtmp.h	/^        uint32_t nMetaHeaderSize;$/;"	m	struct:RTMP_READ
nMinBitrateIndex	lame/ACM/AEncodeProperties.h	/^	int nMinBitrateIndex; \/\/ CBR and VBR$/;"	m	class:AEncodeProperties
nMode	lame/Dll/BladeMP3EncDLL.h	/^			LONG			nMode;				\/\/ BE_MP3_MODE_STEREO, BE_MP3_MODE_DUALCHANNEL, BE_MP3_MODE_MONO$/;"	m
nMusicCRC	lame/libmp3lame/util.h	/^        uint16_t nMusicCRC;$/;"	m	struct:lame_internal_flags
nPlugins	libmfx/include/mfx_load_plugin.h	/^        mfxU32 nPlugins;$/;"	m	class:MFX::MFXPluginFactory
nPreset	lame/Dll/BladeMP3EncDLL.h	/^			LONG			nPreset;			\/\/ Quality preset, use one of the settings of the LAME_QUALITY_PRESET enum$/;"	m
nPresetIndex	lame/ACM/AEncodeProperties.h	/^	int nPresetIndex;$/;"	m	class:AEncodeProperties
nQuality	lame/Dll/BladeMP3EncDLL.h	/^			WORD			nQuality;			\/\/ Quality Setting, HIGH BYTE should be NOT LOW byte, otherwhise quality=5$/;"	m
nResumeTS	librtmp/rtmp.h	/^        uint32_t nResumeTS;$/;"	m	struct:RTMP_READ
nSampleRate	lame/dshow/Mpegac.h	/^    DWORD      nSampleRate;$/;"	m
nSampleRate	lame/dshow/Mpegac.h	/^    DWORD   nSampleRate;$/;"	m
nSamplingFreqIndex	lame/ACM/AEncodeProperties.h	/^	int nSamplingFreqIndex;$/;"	m	class:AEncodeProperties
nTextureCoords	Source/D3D10System.h	/^    UINT nTextureCoords;$/;"	m	class:D3D10VertexShader
nTextures	Source/D3D10System.h	/^    UINT nTextures;$/;"	m	struct:ShaderProcessor
nVBRQuality	lame/Dll/BladeMP3EncDLL.h	/^			INT				nVBRQuality;		\/\/ VBR QUALITY 0..9$/;"	m
nVbrMethod	lame/Dll/BladeMP3EncDLL.h	/^			VBRMETHOD		nVbrMethod;$/;"	m
nVbrNumFrames	lame/libmp3lame/util.h	/^        unsigned int nVbrNumFrames;$/;"	m
nWindowsDefined	scenesw/SceneSwitcher.h	/^	int nWindowsDefined;$/;"	m	class:SceneSwitcher
n_sb	lame/libmp3lame/util.h	/^        int     n_sb; \/* SBMAX_l or SBMAX_s *\/$/;"	m
n_slen2	lame/mpglib/layer3.c	/^static unsigned int n_slen2[512]; \/* MPEG 2.0 slen for 'normal' mode *\/$/;"	v	file:
nal_priority_e	x264/x264.h	/^enum nal_priority_e$/;"	g
nal_unit_type_e	x264/x264.h	/^enum nal_unit_type_e$/;"	g
nalu_process	x264/x264.h	/^    void (*nalu_process) ( x264_t *h, x264_nal_t *nal, void *opaque );$/;"	m	struct:x264_param_t
name	OBSApi/GraphicsSystem.h	/^    String name;$/;"	m	struct:ShaderParameterInfo
name	OBSApi/Utility/ConfigFile.h	/^    TSTR name;$/;"	m	struct:ConfigKey
name	OBSApi/Utility/ConfigFile.h	/^    TSTR name;$/;"	m	struct:ConfigSection
name	QSVHelper/WindowsStuff.h	/^    std::wstring name;$/;"	m	struct:NamedSharedMemory
name	Source/D3D10System.h	/^    String name;$/;"	m	struct:ShaderParam
name	Source/D3D10System.h	/^    String name;$/;"	m	struct:ShaderSampler
name	Source/Encoder_QSV.cpp	/^        const char* name;$/;"	m	file:
name	Source/mongoose.h	/^    const char *name;         \/\/ HTTP header name$/;"	m	struct:mg_connection::mg_header
name	lame/ACM/tinyxml/tinyxml.h	/^	std::string		name;$/;"	m	class:TiXmlAttribute
name	libfaac/frame.h	/^  char *name;$/;"	m
name	libfaac/include/faac.h	/^  char *name;$/;"	m
name	libfaac/include/faaccfg.h	/^    char *name;$/;"	m	struct:faacEncConfiguration
name	libmfx/include/mfx_library_iterator.h	/^    char name[MFX_MAX_REAL_LIBNAME+1];$/;"	m	struct:mfx_libs
name	librtmp/rtmp.c	/^    AVal name;$/;"	m	struct:urlopt	file:
name	librtmp/rtmp.h	/^        AVal name;$/;"	m	struct:RTMP_METHOD
name_from_line	libmfx/include/mfx_dispatcher_log.h	145;"	d
nasm.h	lame/libmp3lame/i386/nasm.h	1;"	F
nasm_sources	lame/libmp3lame/i386/Makefile	/^nasm_sources = \\$/;"	m
nativeNames	OBSApi/Utility/XTLocalization.cpp	/^LocaleNativeName nativeNames[] =$/;"	v
nb_l1	lame/libmp3lame/util.h	/^        FLOAT   nb_l1[4][CBANDS], nb_l2[4][CBANDS];$/;"	m
nb_l2	lame/libmp3lame/util.h	/^        FLOAT   nb_l1[4][CBANDS], nb_l2[4][CBANDS];$/;"	m
nb_s1	lame/libmp3lame/util.h	/^        FLOAT   nb_s1[4][CBANDS], nb_s2[4][CBANDS];$/;"	m
nb_s2	lame/libmp3lame/util.h	/^        FLOAT   nb_s1[4][CBANDS], nb_s2[4][CBANDS];$/;"	m
nc	Source/mongoose.c	/^  struct ns_connection *nc;   \/\/ CGI or proxy->target connection$/;"	m	union:endpoint	file:
nearestBitrateFullIndex	lame/libmp3lame/util.c	/^nearestBitrateFullIndex(uint16_t bitrate)$/;"	f
neednl	librtmp/log.c	/^static int neednl;$/;"	v	file:
needsPreviousFrame	DShowPlugin/DeviceSource.h	/^        bool                        needsPreviousFrame;$/;"	m	struct:DeviceSource::<anonymous>
negsintbl	libfaac/fft.h	/^    fftfloat **negsintbl;$/;"	m
network	Source/OBS.h	/^    std::unique_ptr<NetworkStream> network;$/;"	m	class:OBS
networkStop	Source/OBS.h	/^    StopInfo networkStop;$/;"	m	class:OBS
newCX	DShowPlugin/DeviceSource.h	/^    UINT            newCX, newCY;$/;"	m	class:DeviceSource
newCY	DShowPlugin/DeviceSource.h	/^    UINT            newCX, newCY;$/;"	m	class:DeviceSource
newD3D10Release	GraphicsCapture/GraphicsCaptureHook/D3D10Capture.cpp	/^FARPROC                 newD3D10Release;$/;"	v
newD3D11Release	GraphicsCapture/GraphicsCaptureHook/D3D11Capture.cpp	/^FARPROC                 newD3D11Release = NULL;$/;"	v
newD3D9Release	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^FARPROC                 newD3D9Release = NULL;$/;"	v
newDarHeight	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                                   newDarHeight;                    \/**< [in]: Specifies the new disalay aspect ratio height for current Encoding session, in case of dynamic resolution change. Client should only set this in combination with NV_ENC_PIC_FLAGS::NV_ENC_PIC_FLAG_DYN_RES_CHANGE.$/;"	m	struct:_NV_ENC_PIC_PARAMS
newDarWidth	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                                   newDarWidth;                     \/**< [in]: Specifies the new disalay aspect ratio width for current Encoding session, in case of dynamic resolution change. Client should only set this in combination with NV_ENC_PIC_FLAGS::NV_ENC_PIC_FLAG_DYN_RES_CHANGE.$/;"	m	struct:_NV_ENC_PIC_PARAMS
newEncodeHeight	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                                    newEncodeHeight;                \/**< [in]: Specifies the new output width for current Encoding session, in case of dynamic resolution change. Client should only set this in combination with NV_ENC_PIC_FLAGS::NV_ENC_PIC_FLAG_DYN_RES_CHANGE.$/;"	m	struct:_NV_ENC_PIC_PARAMS
newEncodeWidth	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                                    newEncodeWidth;                 \/**< [in]: Specifies the new output width for current Encoding session, in case of dynamic resolution change. Client should only set this in combination with NV_ENC_PIC_FLAGS::NV_ENC_PIC_FLAG_DYN_RES_CHANGE.$/;"	m	struct:_NV_ENC_PIC_PARAMS
newIPs	minhook/src/hook.cpp	/^		std::vector<uintptr_t>	newIPs;$/;"	m	struct:MinHook::<anonymous>::HOOK_ENTRY	file:
newIPs	minhook/src/trampoline.h	/^		std::vector<uintptr_t>	newIPs;$/;"	m	struct:MinHook::CREATE_TREMPOLINE_T
new_distdir	lame/ACM/Makefile	/^	    new_distdir=$$reldir; \\$/;"	m
new_distdir	lame/Makefile	/^	    new_distdir=$$reldir; \\$/;"	m
new_distdir	lame/doc/Makefile	/^	    new_distdir=$$reldir; \\$/;"	m
new_distdir	lame/libmp3lame/Makefile	/^	    new_distdir=$$reldir; \\$/;"	m
new_distdir	lame/macosx/Makefile	/^	    new_distdir=$$reldir; \\$/;"	m
new_top_distdir	lame/ACM/Makefile	/^	    new_top_distdir=$$reldir; \\$/;"	m
new_top_distdir	lame/Makefile	/^	    new_top_distdir=$$reldir; \\$/;"	m
new_top_distdir	lame/doc/Makefile	/^	    new_top_distdir=$$reldir; \\$/;"	m
new_top_distdir	lame/libmp3lame/Makefile	/^	    new_top_distdir=$$reldir; \\$/;"	m
new_top_distdir	lame/macosx/Makefile	/^	    new_top_distdir=$$reldir; \\$/;"	m
newhuff	lame/mpglib/huffman.h	/^struct newhuff $/;"	s
newmdct.c	lame/libmp3lame/newmdct.c	1;"	F
newmdct.h	lame/libmp3lame/newmdct.h	1;"	F
next	Source/mongoose.c	/^  struct ns_connection *next, *prev;  \/\/ ns_mgr::active_connections linkage$/;"	m	struct:ns_connection	file:
next	lame/ACM/tinyxml/tinyxml.h	/^	TiXmlAttribute*	next;$/;"	m	class:TiXmlAttribute
next	lame/ACM/tinyxml/tinyxml.h	/^	TiXmlNode*		next;$/;"	m	class:TiXmlNode
next	lame/mpglib/mpglib.h	/^    struct buf *next;$/;"	m	struct:buf
next	lame/mpglib/mpglib.h	/^    struct frame *next;$/;"	m	struct:framebuf
next2SampleBuff	libfaac/frame.h	/^    double *next2SampleBuff[MAX_CHANNELS];$/;"	m
next3SampleBuff	libfaac/frame.h	/^    double *next3SampleBuff[MAX_CHANNELS];$/;"	m
nextFree	OBSApi/Utility/FastAlloc.cpp	/^    FreeMemInfo *nextFree;$/;"	m	struct:MemInfo	file:
nextSampleBuff	libfaac/frame.h	/^    double *nextSampleBuff[MAX_CHANNELS];$/;"	m
nextTexture	Source/BitmapTransitionSource.cpp	/^    UINT  nextTexture;$/;"	m	class:BitmapTransitionSource	file:
nextUpperAlpha	lame/libmp3lame/id3tag.c	/^const char* nextUpperAlpha(const char* p, char x)$/;"	f	file:
next_option	Source/mongoose.c	/^static const char *next_option(const char *list, struct vec *val,$/;"	f	file:
next_status_time	Source/ReplayBuffer.cpp	/^    QWORD next_status_time = 0;$/;"	m	struct:RecordingHelper	file:
nfft	libfaac/kiss_fft/_kiss_fft_guts.h	/^    int nfft;$/;"	m	struct:kiss_fft_state
noATH	lame/libmp3lame/lame_global_flags.h	/^    int     noATH;           \/* disable ATH                          *\/$/;"	m	struct:lame_global_struct
noATH	lame/libmp3lame/util.h	/^        int     noATH;       \/* disable ATH                          *\/$/;"	m
no_sal2.h	extras/no_sal2.h	1;"	F
noasm	lame/doc/html/detailed.html	/^<a name="noasm"><span class="hilight">--noasm value<\/span><\/a> Disables the specified assembler $/;"	a
noclipGainChange	lame/libmp3lame/util.h	/^        int     noclipGainChange; \/* gain change required for preventing clipping *\/$/;"	m
noclipScale	lame/libmp3lame/util.h	/^        FLOAT   noclipScale; \/* user-specified scale factor required for preventing clipping *\/$/;"	m
nogap	lame/doc/html/detailed.html	/^<a name="nogap"><span class="hilight">--nogap file1 file2 [...]<\/span><\/a> Encodes multiple continuous$/;"	a
nogap_current	lame/libmp3lame/lame_global_flags.h	/^    int     nogap_current;$/;"	m	struct:lame_global_struct
nogap_total	lame/libmp3lame/lame_global_flags.h	/^    int     nogap_total;$/;"	m	struct:lame_global_struct
nogapout	lame/doc/html/detailed.html	/^<a name="nogapout"><span class="hilight">--nogapout dir<\/span><\/a> Specify a directory for the output$/;"	a
nogaptags	lame/doc/html/detailed.html	/^<a name="nogaptags"><span class="hilight">--nogaptags<\/span><\/a> Enables the use of VBR tags with files$/;"	a
nohist	lame/doc/html/detailed.html	/^<a name="nohist"><span class="hilight">--nohist<\/span><\/a> Disable bitrate Histogram$/;"	a
noinst_HEADERS	lame/frontend/Makefile	/^noinst_HEADERS = \\$/;"	m
noinst_HEADERS	lame/libmp3lame/Makefile	/^noinst_HEADERS = \\$/;"	m
noinst_HEADERS	lame/libmp3lame/i386/Makefile	/^noinst_HEADERS = nasm.h$/;"	m
noinst_HEADERS	lame/libmp3lame/vector/Makefile	/^noinst_HEADERS = lame_intrin.h$/;"	m
noinst_HEADERS	lame/mpglib/Makefile	/^noinst_HEADERS = common.h \\$/;"	m
noinst_LTLIBRARIES	lame/libmp3lame/vector/Makefile	/^noinst_LTLIBRARIES = liblamevectorroutines.la$/;"	m
noinst_LTLIBRARIES	lame/mpglib/Makefile	/^noinst_LTLIBRARIES = libmpgdecoder.la$/;"	m
noise	lame/libmp3lame/quantize_pvt.h	/^    FLOAT   noise[39];$/;"	m	struct:calc_noise_data_t
noise_log	lame/libmp3lame/quantize_pvt.h	/^    FLOAT   noise_log[39];$/;"	m	struct:calc_noise_data_t
noise_shaping	lame/libmp3lame/lame_global_flags.h	/^    int     noise_shaping;$/;"	m	struct:lame_global_struct
noise_shaping	lame/libmp3lame/util.h	/^        int     noise_shaping; \/* 0 = none$/;"	m
noise_shaping_amp	lame/libmp3lame/util.h	/^        int     noise_shaping_amp; \/*  0 = ISO model: amplify all distorted bands$/;"	m
noise_shaping_stop	lame/libmp3lame/util.h	/^        int     noise_shaping_stop; \/* 0 = stop at over=0, all scalefacs amplified or$/;"	m
none	lame/libmp3lame/i386/nasm.h	/^; otherwise                     ->   none$/;"	v
nonempty	lame/ACM/Makefile	/^	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \\$/;"	m
nonempty	lame/Makefile	/^	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \\$/;"	m
nonempty	lame/doc/Makefile	/^	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \\$/;"	m
nonempty	lame/frontend/Makefile	/^	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \\$/;"	m
nonempty	lame/include/Makefile	/^	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \\$/;"	m
nonempty	lame/libmp3lame/Makefile	/^	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \\$/;"	m
nonempty	lame/libmp3lame/i386/Makefile	/^	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \\$/;"	m
nonempty	lame/libmp3lame/vector/Makefile	/^	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \\$/;"	m
nonempty	lame/macosx/Makefile	/^	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \\$/;"	m
nonempty	lame/misc/Makefile	/^	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \\$/;"	m
nonempty	lame/mpglib/Makefile	/^	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \\$/;"	m
nonprivate	librtmp/rtmp.c	/^SAVC(nonprivate);$/;"	v
nop	OBSApi/Utility/Inline.h	/^inline void nop()$/;"	f
noquant_count_bits	lame/libmp3lame/takehiro.c	/^noquant_count_bits(lame_internal_flags const *const gfc,$/;"	f
noreplaygain	lame/doc/html/detailed.html	/^<a name="noreplaygain"><span class="hilight">--noreplaygain<\/span><\/a> Disable ReplayGain analysis$/;"	a
normalBuffer	Source/D3D10System.h	/^    ID3D10Buffer *normalBuffer;$/;"	m	class:D3D10VertexBuffer
normalSize	Source/D3D10System.h	/^    UINT normalSize;$/;"	m	class:D3D10VertexBuffer
not_set	QSVHelper/IntelSupport/include/d3d11_allocator.h	/^        not_set = 0,$/;"	e	enum:MFXReadWriteMid::<anonymous>
note1	lame/doc/html/about.html	/^<li><a name="note1"><\/a> See the results of <a href="http:\/\/listening-tests.hydrogenaudio.org\/sebastian\/">$/;"	a
note1	lame/doc/html/detailed.html	/^<li><a name="note1"><\/a>If compiled with decoding capabilities<\/li>$/;"	a
note1	lame/doc/html/introduction.html	/^<li><a name="note1"><\/a>Audio compression (also called coding)$/;"	a
note1	lame/doc/html/ms_stereo.html	/^<li><a name="note1"><\/a>This is not the same than dual-mono. Dual-mono should be$/;"	a
note1	lame/doc/html/usage.html	/^<li><a name="note1"><\/a>$/;"	a
note2	lame/doc/html/about.html	/^<li><a name="note2"><\/a> MPEG1 sample rates are 32Khz, 44.1Khz and 48Khz.$/;"	a
note2	lame/doc/html/detailed.html	/^<li><a name="note2"><\/a>HIP stands for Hip Isn't a Player and is based off of$/;"	a
note2	lame/doc/html/introduction.html	/^<li><a name="note2"><\/a>Lossy encoding (as opposed to lossless) cannot guarantee$/;"	a
note2	lame/doc/html/ms_stereo.html	/^<li><a name="note2"><\/a>If one channel has much less noise masking in a certain$/;"	a
note2	lame/doc/html/usage.html	/^<li><a name="note2"><\/a>Lossy codecs, like MP3, should not be used for archiving,$/;"	a
note3	lame/doc/html/about.html	/^<li><a name="note3"><\/a> See <a href="vbr.html">Variable Bit Rate<\/a> and$/;"	a
note3	lame/doc/html/ms_stereo.html	/^<li><a name="note3"><\/a>Quote from wikipedia <a$/;"	a
note4	lame/doc/html/about.html	/^<li><a name="note4"><\/a> The stereo encoding of LAME automatically switches between $/;"	a
npart	lame/libmp3lame/util.h	/^        int     npart;$/;"	m
nr_of_sfb	libfaac/coder.h	/^    int nr_of_sfb;$/;"	m
nr_of_sfb_block	lame/libmp3lame/quantize_pvt.c	/^const int nr_of_sfb_block[6][3][4] = {$/;"	v
ns_add_conn	Source/mongoose.c	/^static void ns_add_conn(struct ns_mgr *mgr, struct ns_connection *c) {$/;"	f	file:
ns_add_sock	Source/mongoose.c	/^struct ns_connection *ns_add_sock(struct ns_mgr *s, sock_t sock,$/;"	f
ns_add_to_set	Source/mongoose.c	/^static void ns_add_to_set(sock_t sock, fd_set *set, sock_t *max_fd) {$/;"	f	file:
ns_avprintf	Source/mongoose.c	/^int ns_avprintf(char **buf, size_t size, const char *fmt, va_list ap) {$/;"	f
ns_bind	Source/mongoose.c	/^struct ns_connection *ns_bind(struct ns_mgr *srv, const char *str,$/;"	f
ns_broadcast	Source/mongoose.c	/^void ns_broadcast(struct ns_mgr *mgr, ns_callback_t cb,void *data, size_t len) {$/;"	f
ns_call	Source/mongoose.c	/^static void ns_call(struct ns_connection *nc, int ev, void *p) {$/;"	f	file:
ns_callback_t	Source/mongoose.c	/^typedef void (*ns_callback_t)(struct ns_connection *, int event_num, void *evp);$/;"	t	file:
ns_close_conn	Source/mongoose.c	/^static void ns_close_conn(struct ns_connection *conn) {$/;"	f	file:
ns_conn	Source/mongoose.c	/^  struct ns_connection *ns_conn;  \/\/ NOTE(lsm): main.c depends on this order$/;"	m	struct:connection	file:
ns_connect	Source/mongoose.c	/^struct ns_connection *ns_connect(struct ns_mgr *mgr, const char *address,$/;"	f
ns_connection	Source/mongoose.c	/^struct ns_connection {$/;"	s	file:
ns_destroy_conn	Source/mongoose.c	/^static void ns_destroy_conn(struct ns_connection *conn) {$/;"	f	file:
ns_forward	Source/mongoose.c	/^static void ns_forward(struct ns_connection *from, struct ns_connection *to) {$/;"	f	file:
ns_handle_udp	Source/mongoose.c	/^static void ns_handle_udp(struct ns_connection *ls) {$/;"	f	file:
ns_hexdump	Source/mongoose.c	/^int ns_hexdump(const void *buf, int len, char *dst, int dst_len) {$/;"	f
ns_is_error	Source/mongoose.c	/^static int ns_is_error(int n) {$/;"	f	file:
ns_mgr	Source/mongoose.c	/^  struct ns_mgr ns_mgr;$/;"	m	struct:mg_server	file:
ns_mgr	Source/mongoose.c	/^struct ns_mgr {$/;"	s	file:
ns_mgr_free	Source/mongoose.c	/^void ns_mgr_free(struct ns_mgr *s) {$/;"	f
ns_mgr_init	Source/mongoose.c	/^void ns_mgr_init(struct ns_mgr *s, void *user_data) {$/;"	f
ns_mgr_poll	Source/mongoose.c	/^time_t ns_mgr_poll(struct ns_mgr *mgr, int milli) {$/;"	f
ns_next	Source/mongoose.c	/^struct ns_connection *ns_next(struct ns_mgr *s, struct ns_connection *conn) {$/;"	f
ns_open_listening_socket	Source/mongoose.c	/^static sock_t ns_open_listening_socket(union socket_address *sa, int proto) {$/;"	f	file:
ns_out	Source/mongoose.c	/^static size_t ns_out(struct ns_connection *nc, const void *buf, size_t len) {$/;"	f	file:
ns_parse_address	Source/mongoose.c	/^static int ns_parse_address(const char *str, union socket_address *sa,$/;"	f	file:
ns_printf	Source/mongoose.c	/^int ns_printf(struct ns_connection *conn, const char *fmt, ...) {$/;"	f
ns_read_from_socket	Source/mongoose.c	/^static void ns_read_from_socket(struct ns_connection *conn) {$/;"	f	file:
ns_remove_conn	Source/mongoose.c	/^static void ns_remove_conn(struct ns_connection *conn) {$/;"	f	file:
ns_resolve	Source/mongoose.c	/^int ns_resolve(const char *host, char *buf, size_t n) {$/;"	f
ns_resolve2	Source/mongoose.c	/^static int ns_resolve2(const char *host, struct in_addr *ina) {$/;"	f	file:
ns_send	Source/mongoose.c	/^int ns_send(struct ns_connection *conn, const void *buf, size_t len) {$/;"	f
ns_set_close_on_exec	Source/mongoose.c	/^void ns_set_close_on_exec(sock_t sock) {$/;"	f
ns_set_non_blocking_mode	Source/mongoose.c	/^static void ns_set_non_blocking_mode(sock_t sock) {$/;"	f	file:
ns_sock_to_str	Source/mongoose.c	/^void ns_sock_to_str(sock_t sock, char *buf, size_t len, int flags) {$/;"	f
ns_socketpair	Source/mongoose.c	/^int ns_socketpair(sock_t sp[2]) {$/;"	f
ns_socketpair2	Source/mongoose.c	/^int ns_socketpair2(sock_t sp[2], int sock_type) {$/;"	f
ns_ssl_err	Source/mongoose.c	/^static int ns_ssl_err(struct ns_connection *conn, int res) {$/;"	f	file:
ns_start_thread	Source/mongoose.c	/^void *ns_start_thread(void *(*f)(void *), void *p) {$/;"	f
ns_stat_t	Source/mongoose.c	/^typedef struct _stati64 ns_stat_t;$/;"	t	file:
ns_stat_t	Source/mongoose.c	/^typedef struct stat ns_stat_t;$/;"	t	file:
ns_str	Source/mongoose.c	/^struct ns_str {$/;"	s	file:
ns_use_ca_cert	Source/mongoose.c	/^static int ns_use_ca_cert(SSL_CTX *ctx, const char *cert) {$/;"	f	file:
ns_use_cert	Source/mongoose.c	/^static int ns_use_cert(SSL_CTX *ctx, const char *pem_file) {$/;"	f	file:
ns_vprintf	Source/mongoose.c	/^int ns_vprintf(struct ns_connection *nc, const char *fmt, va_list ap) {$/;"	f
ns_write_to_socket	Source/mongoose.c	/^static void ns_write_to_socket(struct ns_connection *conn) {$/;"	f	file:
nsamp	lame/include/lame.h	/^  unsigned long nsamp; \/* number of samples in mp3 file.                 *\/$/;"	m
num	OBSApi/Utility/FastAlloc.cpp	/^    int         num;        \/\/number of free blocks$/;"	m	struct:FreeMemInfo	file:
num	OBSApi/Utility/Template.h	/^    unsigned int num;$/;"	m	class:List
num	librtmp/rtmp.h	/^        int num;$/;"	m	struct:RTMP_METHOD
numAllocations	OBSApi/Utility/DebugAlloc.cpp	/^DWORD numAllocations = 0;$/;"	v
numAudioSamples	Source/MP4FileStream.cpp	/^    UINT numVideoSamples, numAudioSamples;$/;"	m	class:MP4FileStream	file:
numBFramesDumped	Source/RTMPPublisher.h	/^    UINT numBFramesDumped;$/;"	m	class:RTMPPublisher
numBit	libfaac/bitstream.h	/^  long numBit;          \/* number of bits in buffer *\/$/;"	m
numByte	libfaac/bitstream.h	/^  long numByte;         \/* number of bytes read\/written (only file) *\/$/;"	m
numCalls	OBSApi/Utility/Profiler.cpp	/^    DWORD numCalls;$/;"	m	struct:ProfileNodeInfo	file:
numCandsPerBlk16x16	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t   numCandsPerBlk16x16                   : 4;   \/**< [in]: Specifies the number of candidates per 16x16 block. *\/$/;"	m	struct:_NVENC_EXTERNAL_ME_HINT_COUNTS_PER_BLOCKTYPE
numCandsPerBlk16x8	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t   numCandsPerBlk16x8                    : 4;   \/**< [in]: Specifies the number of candidates per 16x8 block. *\/$/;"	m	struct:_NVENC_EXTERNAL_ME_HINT_COUNTS_PER_BLOCKTYPE
numCandsPerBlk8x16	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t   numCandsPerBlk8x16                    : 4;   \/**< [in]: Specifies the number of candidates per 8x16 block. *\/$/;"	m	struct:_NVENC_EXTERNAL_ME_HINT_COUNTS_PER_BLOCKTYPE
numCandsPerBlk8x8	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t   numCandsPerBlk8x8                     : 4;   \/**< [in]: Specifies the number of candidates per 8x8 block. *\/$/;"	m	struct:_NVENC_EXTERNAL_ME_HINT_COUNTS_PER_BLOCKTYPE
numChannels	lame/frontend/get_audio.c	/^    short   numChannels;$/;"	m	struct:IFF_AIFF_struct	file:
numChannels	libfaac/frame.h	/^    unsigned int numChannels;$/;"	m
numEntries	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	/^    DWORD numEntries;$/;"	m	class:Palette	file:
numFilters	libfaac/coder.h	/^    int numFilters;                             \/* Number of filters *\/$/;"	m
numPFramesDumped	Source/RTMPPublisher.h	/^    UINT numPFramesDumped;$/;"	m	class:RTMPPublisher
numParallelCalls	OBSApi/Utility/Profiler.cpp	/^    DWORD numParallelCalls;$/;"	m	struct:ProfileNodeInfo	file:
numReadSamples	Source/Encoder_AAC.cpp	/^    DWORD numReadSamples;$/;"	m	class:AACEncoder	file:
numSampleFrames	lame/frontend/get_audio.c	/^    unsigned long numSampleFrames;$/;"	m	struct:IFF_AIFF_struct	file:
numSeconds	Source/BandwidthAnalysis.cpp	/^    DWORD numSeconds;$/;"	m	class:BandwidthAnalyzer	file:
numSlices	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                numSlices;                   \/**< [out]: Number of slices in the encoded picture. Will be reported only if NV_ENC_INITIALIZE_PARAMS::reportSliceOffsets set to 1. *\/$/;"	m	struct:_NV_ENC_LOCK_BITSTREAM
numStartFrames	Source/RTMPPublisher.h	/^    bool numStartFrames, bNetworkStrain;$/;"	m	class:RTMPPublisher
numTemporalLayers	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t numTemporalLayers;                                     \/**< [in]: Specifies max temporal layers to be used for hierarchical coding. Valid value range is [1,::NV_ENC_CAPS_NUM_MAX_TEMPORAL_LAYERS] *\/$/;"	m	struct:_NV_ENC_CONFIG_H264
numTextureCoords	Source/D3D10System.h	/^    UINT numTextureCoords;$/;"	m	struct:ShaderProcessor
numThreads	Source/OBSVideoCapture.cpp	/^    DWORD numThreads;$/;"	m	struct:Convert444Data	file:
numTimesInARowNewDataSeen	Source/MMDeviceAudioSource.cpp	/^    UINT32 numTimesInARowNewDataSeen;$/;"	m	class:MMDeviceAudioSource	file:
numVerts	Source/D3D10System.h	/^    UINT numVerts;$/;"	m	class:D3D10VertexBuffer
numVideoSamples	Source/MP4FileStream.cpp	/^    UINT numVideoSamples, numAudioSamples;$/;"	m	class:MP4FileStream	file:
num_bytes_recv	Source/mongoose.c	/^  int64_t num_bytes_recv; \/\/ Total number of bytes received$/;"	m	struct:connection	file:
num_cb_long	libfaac/coder.h	/^  int num_cb_long;$/;"	m
num_cb_short	libfaac/coder.h	/^  int num_cb_short;$/;"	m
num_channels	lame/libmp3lame/lame_global_flags.h	/^    int     num_channels;    \/* input number of channels. default=2         *\/$/;"	m	struct:lame_global_struct
num_data	libfaac/bitstream.c	/^    unsigned short num_data; \/* number of data cells for codeword *\/$/;"	m	file:
num_data_cw	libfaac/coder.h	/^    int *num_data_cw;$/;"	m
num_frames	lame/mpglib/mpglib.h	/^    int     num_frames;      \/* set if vbr header present *\/$/;"	m	struct:mpstr_tag
num_headers	Source/mongoose.h	/^  int num_headers;            \/\/ Number of HTTP headers$/;"	m	struct:mg_connection
num_leap_years	Source/mongoose.c	/^static int num_leap_years(int year) {$/;"	f	file:
num_payloads	x264/x264.h	/^    int num_payloads;$/;"	m
num_plotwindows	lame/frontend/gpkplotting.c	/^static gint num_plotwindows = 0;$/;"	v	file:
num_samples	lame/libmp3lame/lame-analysis.h	/^    int     num_samples;     \/* number of pcm samples read for this frame *\/$/;"	m	struct:plotting_data
num_samples	lame/libmp3lame/lame_global_flags.h	/^    unsigned long num_samples; \/* number of samples. default=2^32-1           *\/$/;"	m	struct:lame_global_struct
num_samples_read	lame/frontend/get_audio.c	/^    unsigned int num_samples_read;$/;"	m	struct:get_audio_global_data_struct	file:
num_sl_cw	libfaac/bitstream.c	/^    unsigned short num_sl_cw; \/* number of spectral lines per codeword *\/$/;"	m	file:
num_window_groups	libfaac/coder.h	/^    int num_window_groups;$/;"	m
numberOfBuiltInSettingsPanes	Source/OBS.h	/^    int                 numberOfBuiltInSettingsPanes;$/;"	m	class:OBS
numberOfEncoderSettingsPanes	Source/OBS.h	/^    int                 numberOfEncoderSettingsPanes;$/;"	m	class:OBS
numlines	lame/libmp3lame/util.h	/^        int     numlines[CBANDS];$/;"	m
nvEncCreateBitstreamBuffer	ObsNvenc/inc/nvEncodeAPI.h	/^    PNVENCCREATEBITSTREAMBUFFER     nvEncCreateBitstreamBuffer;        \/**< [out]: Client should access ::NvEncCreateBitstreamBuffer() API through this pointer.    *\/$/;"	m	struct:_NV_ENCODE_API_FUNCTION_LIST
nvEncCreateInputBuffer	ObsNvenc/inc/nvEncodeAPI.h	/^    PNVENCCREATEINPUTBUFFER         nvEncCreateInputBuffer;            \/**< [out]: Client should access ::NvEncCreateInputBuffer() API through this pointer.        *\/$/;"	m	struct:_NV_ENCODE_API_FUNCTION_LIST
nvEncDestroyBitstreamBuffer	ObsNvenc/inc/nvEncodeAPI.h	/^    PNVENCDESTROYBITSTREAMBUFFER    nvEncDestroyBitstreamBuffer;       \/**< [out]: Client should access ::NvEncDestroyBitstreamBuffer() API through this pointer.   *\/$/;"	m	struct:_NV_ENCODE_API_FUNCTION_LIST
nvEncDestroyEncoder	ObsNvenc/inc/nvEncodeAPI.h	/^    PNVENCDESTROYENCODER            nvEncDestroyEncoder;               \/**< [out]: Client should access ::NvEncDestroyEncoder() API through this pointer.           *\/$/;"	m	struct:_NV_ENCODE_API_FUNCTION_LIST
nvEncDestroyInputBuffer	ObsNvenc/inc/nvEncodeAPI.h	/^    PNVENCDESTROYINPUTBUFFER        nvEncDestroyInputBuffer;           \/**< [out]: Client should access ::NvEncDestroyInputBuffer() API through this pointer.       *\/$/;"	m	struct:_NV_ENCODE_API_FUNCTION_LIST
nvEncEncodePicture	ObsNvenc/inc/nvEncodeAPI.h	/^    PNVENCENCODEPICTURE             nvEncEncodePicture;                \/**< [out]: Client should access ::NvEncEncodePicture() API through this pointer.            *\/$/;"	m	struct:_NV_ENCODE_API_FUNCTION_LIST
nvEncGetEncodeCaps	ObsNvenc/inc/nvEncodeAPI.h	/^    PNVENCGETENCODECAPS             nvEncGetEncodeCaps;                \/**< [out]: Client should access ::NvEncGetEncodeCaps() API through this pointer.            *\/$/;"	m	struct:_NV_ENCODE_API_FUNCTION_LIST
nvEncGetEncodeGUIDCount	ObsNvenc/inc/nvEncodeAPI.h	/^    PNVENCGETENCODEGUIDCOUNT        nvEncGetEncodeGUIDCount;           \/**< [out]: Client should access ::NvEncGetEncodeGUIDCount() API through this pointer.       *\/$/;"	m	struct:_NV_ENCODE_API_FUNCTION_LIST
nvEncGetEncodeGUIDs	ObsNvenc/inc/nvEncodeAPI.h	/^    PNVENCGETENCODEGUIDS            nvEncGetEncodeGUIDs;               \/**< [out]: Client should access ::NvEncGetEncodeGUIDs() API through this pointer.           *\/$/;"	m	struct:_NV_ENCODE_API_FUNCTION_LIST
nvEncGetEncodePresetConfig	ObsNvenc/inc/nvEncodeAPI.h	/^    PNVENCGETENCODEPRESETCONFIG     nvEncGetEncodePresetConfig;        \/**< [out]: Client should access ::NvEncGetEncodePresetConfig() API through this pointer.    *\/$/;"	m	struct:_NV_ENCODE_API_FUNCTION_LIST
nvEncGetEncodePresetCount	ObsNvenc/inc/nvEncodeAPI.h	/^    PNVENCGETENCODEPRESETCOUNT      nvEncGetEncodePresetCount;         \/**< [out]: Client should access ::NvEncGetEncodePresetCount() API through this pointer.     *\/$/;"	m	struct:_NV_ENCODE_API_FUNCTION_LIST
nvEncGetEncodePresetGUIDs	ObsNvenc/inc/nvEncodeAPI.h	/^    PNVENCGETENCODEPRESETGUIDS      nvEncGetEncodePresetGUIDs;         \/**< [out]: Client should access ::NvEncGetEncodePresetGUIDs() API through this pointer.     *\/$/;"	m	struct:_NV_ENCODE_API_FUNCTION_LIST
nvEncGetEncodeProfileGUIDCount	ObsNvenc/inc/nvEncodeAPI.h	/^    PNVENCGETENCODEPRESETCOUNT      nvEncGetEncodeProfileGUIDCount;    \/**< [out]: Client should access ::NvEncGetEncodeProfileGUIDCount() API through this pointer.*\/$/;"	m	struct:_NV_ENCODE_API_FUNCTION_LIST
nvEncGetEncodeProfileGUIDs	ObsNvenc/inc/nvEncodeAPI.h	/^    PNVENCGETENCODEPRESETGUIDS      nvEncGetEncodeProfileGUIDs;        \/**< [out]: Client should access ::NvEncGetEncodeProfileGUIDs() API through this pointer.     *\/$/;"	m	struct:_NV_ENCODE_API_FUNCTION_LIST
nvEncGetEncodeStats	ObsNvenc/inc/nvEncodeAPI.h	/^    PNVENCGETENCODESTATS            nvEncGetEncodeStats;               \/**< [out]: Client should access ::NvEncGetEncodeStats() API through this pointer.           *\/$/;"	m	struct:_NV_ENCODE_API_FUNCTION_LIST
nvEncGetInputFormatCount	ObsNvenc/inc/nvEncodeAPI.h	/^    PNVENCGETINPUTFORMATCOUNT       nvEncGetInputFormatCount;          \/**< [out]: Client should access ::NvEncGetInputFormatCount() API through this pointer.      *\/$/;"	m	struct:_NV_ENCODE_API_FUNCTION_LIST
nvEncGetInputFormats	ObsNvenc/inc/nvEncodeAPI.h	/^    PNVENCGETINPUTFORMATS           nvEncGetInputFormats;              \/**< [out]: Client should access ::NvEncGetInputFormats() API through this pointer.          *\/$/;"	m	struct:_NV_ENCODE_API_FUNCTION_LIST
nvEncGetSequenceParams	ObsNvenc/inc/nvEncodeAPI.h	/^    PNVENCGETSEQUENCEPARAMS         nvEncGetSequenceParams;            \/**< [out]: Client should access ::NvEncGetSequenceParams() API through this pointer.        *\/$/;"	m	struct:_NV_ENCODE_API_FUNCTION_LIST
nvEncInitializeEncoder	ObsNvenc/inc/nvEncodeAPI.h	/^    PNVENCINITIALIZEENCODER         nvEncInitializeEncoder;            \/**< [out]: Client should access ::NvEncInitializeEncoder() API through this pointer.        *\/$/;"	m	struct:_NV_ENCODE_API_FUNCTION_LIST
nvEncInvalidateRefFrames	ObsNvenc/inc/nvEncodeAPI.h	/^    PNVENCINVALIDATEREFFRAMES       nvEncInvalidateRefFrames;          \/**< [out]: Client should access ::NvEncInvalidateRefFrames() API through this pointer.      *\/$/;"	m	struct:_NV_ENCODE_API_FUNCTION_LIST
nvEncLib	ObsNvenc/src/nvEncodeAPI.cpp	/^static HMODULE nvEncLib = NULL;$/;"	v	file:
nvEncLockBitstream	ObsNvenc/inc/nvEncodeAPI.h	/^    PNVENCLOCKBITSTREAM             nvEncLockBitstream;                \/**< [out]: Client should access ::NvEncLockBitstream() API through this pointer.            *\/$/;"	m	struct:_NV_ENCODE_API_FUNCTION_LIST
nvEncLockInputBuffer	ObsNvenc/inc/nvEncodeAPI.h	/^    PNVENCLOCKINPUTBUFFER           nvEncLockInputBuffer;              \/**< [out]: Client should access ::NvEncLockInputBuffer() API through this pointer.          *\/$/;"	m	struct:_NV_ENCODE_API_FUNCTION_LIST
nvEncMapInputResource	ObsNvenc/inc/nvEncodeAPI.h	/^    PNVENCMAPINPUTRESOURCE          nvEncMapInputResource;             \/**< [out]: Client should access ::NvEncMapInputResource() API through this pointer.         *\/$/;"	m	struct:_NV_ENCODE_API_FUNCTION_LIST
nvEncOpenEncodeSession	ObsNvenc/inc/nvEncodeAPI.h	/^    PNVENCOPENENCODESESSION         nvEncOpenEncodeSession;            \/**< [out]: Client should access ::NvEncOpenEncodeSession() API through this pointer.        *\/$/;"	m	struct:_NV_ENCODE_API_FUNCTION_LIST
nvEncOpenEncodeSessionEx	ObsNvenc/inc/nvEncodeAPI.h	/^    PNVENCOPENENCODESESSIONEX       nvEncOpenEncodeSessionEx;          \/**< [out]: Client should access ::NvEncOpenEncodeSession() API through this pointer.        *\/$/;"	m	struct:_NV_ENCODE_API_FUNCTION_LIST
nvEncReconfigureEncoder	ObsNvenc/inc/nvEncodeAPI.h	/^    PNVENCRECONFIGUREENCODER        nvEncReconfigureEncoder;           \/**< [out]: Client should access ::NvEncReconfigureEncoder() API through this pointer.       *\/$/;"	m	struct:_NV_ENCODE_API_FUNCTION_LIST
nvEncRegisterAsyncEvent	ObsNvenc/inc/nvEncodeAPI.h	/^    PNVENCREGISTERASYNCEVENT        nvEncRegisterAsyncEvent;           \/**< [out]: Client should access ::NvEncRegisterAsyncEvent() API through this pointer.       *\/$/;"	m	struct:_NV_ENCODE_API_FUNCTION_LIST
nvEncRegisterResource	ObsNvenc/inc/nvEncodeAPI.h	/^    PNVENCREGISTERRESOURCE          nvEncRegisterResource;             \/**< [out]: Client should access ::NvEncRegisterResource() API through this pointer.         *\/$/;"	m	struct:_NV_ENCODE_API_FUNCTION_LIST
nvEncUnlockBitstream	ObsNvenc/inc/nvEncodeAPI.h	/^    PNVENCUNLOCKBITSTREAM           nvEncUnlockBitstream;              \/**< [out]: Client should access ::NvEncUnlockBitstream() API through this pointer.          *\/$/;"	m	struct:_NV_ENCODE_API_FUNCTION_LIST
nvEncUnlockInputBuffer	ObsNvenc/inc/nvEncodeAPI.h	/^    PNVENCUNLOCKINPUTBUFFER         nvEncUnlockInputBuffer;            \/**< [out]: Client should access ::NvEncUnlockInputBuffer() API through this pointer.        *\/$/;"	m	struct:_NV_ENCODE_API_FUNCTION_LIST
nvEncUnmapInputResource	ObsNvenc/inc/nvEncodeAPI.h	/^    PNVENCUNMAPINPUTRESOURCE        nvEncUnmapInputResource;           \/**< [out]: Client should access ::NvEncUnmapInputResource() API through this pointer.       *\/$/;"	m	struct:_NV_ENCODE_API_FUNCTION_LIST
nvEncUnregisterAsyncEvent	ObsNvenc/inc/nvEncodeAPI.h	/^    PNVENCUNREGISTERASYNCEVENT      nvEncUnregisterAsyncEvent;         \/**< [out]: Client should access ::NvEncUnregisterAsyncEvent() API through this pointer.     *\/$/;"	m	struct:_NV_ENCODE_API_FUNCTION_LIST
nvEncUnregisterResource	ObsNvenc/inc/nvEncodeAPI.h	/^    PNVENCUNREGISTERRESOURCE        nvEncUnregisterResource;           \/**< [out]: Client should access ::NvEncUnregisterResource() API through this pointer.       *\/$/;"	m	struct:_NV_ENCODE_API_FUNCTION_LIST
nvEncodeAPI.cpp	ObsNvenc/src/nvEncodeAPI.cpp	1;"	F
nvEncodeAPI.h	ObsNvenc/inc/nvEncodeAPI.h	1;"	F
nvars	Source/mongoose.c	/^  int nvars;                            \/\/ Number of variables in envp[]$/;"	m	struct:cgi_env_block	file:
nvmain.cpp	ObsNvenc/src/nvmain.cpp	1;"	F
nvmain.h	ObsNvenc/inc/nvmain.h	1;"	F
nxt	lame/libmp3lame/id3tag.h	/^    struct FrameDataNode *nxt;$/;"	m	struct:FrameDataNode
o	lame/doc/html/detailed.html	/^<a name="o"><span class="hilight">-o<\/span><\/a> non-original   $/;"	a
o_num	librtmp/amf.h	/^        int o_num;$/;"	m	struct:AMFObject
o_props	librtmp/amf.h	/^        struct AMFObjectProperty *o_props;$/;"	m	struct:AMFObject
objectEncoding	Source/RTMPStuff.h	/^SAVC(objectEncoding);$/;"	v
objectEncoding	librtmp/rtmp.c	/^SAVC(objectEncoding);$/;"	v
objectRef	CLRHostPlugin/CLRHostPlugin/CLRObject.h	/^    IUnknown *objectRef;$/;"	m	class:CLRObject
objectRef	CLRHostPlugin/CLRHostPlugin/CLRObjectRef.h	/^    void *objectRef;$/;"	m	class:CLRObjectRef
objectType	CLRHostPlugin/CLRHostPlugin/CLRObject.h	/^    mscorlib::_Type *objectType;$/;"	m	class:CLRObject
obs_process_id	QSVHelper/IPCStructs.h	/^    uint32_t obs_process_id;$/;"	m	struct:init_request
off	librtmp/rtmp.c	/^    off_t off;$/;"	m	struct:urlopt	file:
offset	DShowPlugin/DeviceSource.h	/^    int offset;$/;"	m	class:DeviceAudioSource
offset	lame/frontend/get_audio.c	/^    unsigned long offset;$/;"	m	struct:blockAlign_struct	file:
okButton_Click	CLRBrowserSourcePlugin/Plugin/ConfigDialog.xaml.cs	/^        private void okButton_Click(object sender, RoutedEventArgs e)$/;"	m	class:CLRBrowserSourcePlugin.ConfigDialog	file:
okButton_Click	CLRHostPlugin/CLRCSharpSamplePlugin/SampleConfiguration.xaml.cs	/^        private void okButton_Click(object sender, RoutedEventArgs e)$/;"	m	class:CSharpSamplePlugin.SampleConfigurationDialog	file:
oldD3D10Release	GraphicsCapture/GraphicsCaptureHook/D3D10Capture.cpp	/^FARPROC                 oldD3D10Release;$/;"	v
oldD3D11Release	GraphicsCapture/GraphicsCaptureHook/D3D11Capture.cpp	/^FARPROC                 oldD3D11Release = NULL;$/;"	v
oldD3D9Release	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^FARPROC                 oldD3D9Release = NULL;$/;"	v
oldIPs	minhook/src/hook.cpp	/^		std::vector<uintptr_t>	oldIPs;$/;"	m	struct:MinHook::<anonymous>::HOOK_ENTRY	file:
oldIPs	minhook/src/trampoline.h	/^		std::vector<uintptr_t>	oldIPs;$/;"	m	struct:MinHook::CREATE_TREMPOLINE_T
oldRenderFrameCtrlHeight	Source/OBS.h	/^    int     oldRenderFrameCtrlWidth, oldRenderFrameCtrlHeight; \/\/ The size of the entire preview control before the user began to resize the window$/;"	m	class:OBS
oldRenderFrameCtrlWidth	Source/OBS.h	/^    int     oldRenderFrameCtrlWidth, oldRenderFrameCtrlHeight; \/\/ The size of the entire preview control before the user began to resize the window$/;"	m	class:OBS
old_free_format	lame/mpglib/mpglib.h	/^    int     old_free_format; \/* 1 = last frame was free format *\/$/;"	m	struct:mpstr_tag
oldcode	Source/libnsgif.h	/^    int firstcode, oldcode;$/;"	m	struct:gif_animation
oldincludedir	lame/ACM/ADbg/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	lame/ACM/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	lame/ACM/ddk/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	lame/ACM/tinyxml/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	lame/Dll/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	lame/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	lame/debian/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	lame/doc/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	lame/doc/html/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	lame/doc/man/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	lame/dshow/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	lame/frontend/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	lame/include/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	lame/libmp3lame/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	lame/libmp3lame/i386/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	lame/libmp3lame/vector/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	lame/mac/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	lame/macosx/English.lproj/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	lame/macosx/LAME.xcodeproj/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	lame/macosx/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	lame/misc/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	lame/mpglib/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	lame/vc_solution/Makefile	/^oldincludedir = \/usr\/include$/;"	m
omisc	librtmp/rtmp.c	/^    int omisc;$/;"	m	struct:urlopt	file:
onBWDone	librtmp/rtmp.c	/^SAVC(onBWDone);$/;"	v
onFCSubscribe	Source/RTMPStuff.h	/^SAVC(onFCSubscribe);$/;"	v
onFCSubscribe	librtmp/rtmp.c	/^SAVC(onFCSubscribe);$/;"	v
onFCUnsubscribe	librtmp/rtmp.c	/^SAVC(onFCUnsubscribe);$/;"	v
onMetaData	Source/RTMPStuff.h	/^SAVC(onMetaData);$/;"	v
onMetaData	librtmp/rtmp.c	/^SAVC(onMetaData);$/;"	v
onStartStreamMethod	CLRHostPlugin/CLRHostPlugin/CLRPlugin.h	/^    mscorlib::_MethodInfo *onStartStreamMethod;$/;"	m	class:CLRPlugin
onStatus	Source/RTMPStuff.h	/^SAVC(onStatus);$/;"	v
onStatus	librtmp/rtmp.c	/^SAVC(onStatus);$/;"	v
onStopStreamMethod	CLRHostPlugin/CLRHostPlugin/CLRPlugin.h	/^    mscorlib::_MethodInfo *onStopStreamMethod;$/;"	m	class:CLRPlugin
on_accept	Source/mongoose.c	/^static void on_accept(struct ns_connection *nc, union socket_address *sa) {$/;"	f	file:
on_cgi_data	Source/mongoose.c	/^static void on_cgi_data(struct ns_connection *nc) {$/;"	f	file:
on_pe	lame/libmp3lame/quantize_pvt.c	/^on_pe(lame_internal_flags * gfc, const FLOAT pe[][2], int targ_bits[2], int mean_bits, int gr, int cbr)$/;"	f
on_recv_data	Source/mongoose.c	/^static void on_recv_data(struct connection *conn) {$/;"	f	file:
on_socket_error	lame/frontend/rtp.c	/^on_socket_error(SOCKET s)$/;"	f	file:
onlyVersionRegistered	libmfx/include/mfx_plugin_hive.h	/^        bool onlyVersionRegistered;$/;"	m	class:MFX::PluginDescriptionRecord
opacity	DShowPlugin/DeviceSource.h	/^    UINT            opacity;$/;"	m	class:DeviceSource
opacity	Source/BitmapImageSource.cpp	/^    DWORD opacity;$/;"	m	class:BitmapImageSource	file:
opacity	Source/BitmapTransitionSource.cpp	/^    UINT  opacity;$/;"	m	class:BitmapTransitionSource	file:
opacity	Source/DesktopImageSource.cpp	/^    UINT     opacity;$/;"	m	class:DesktopImageSource	file:
opacity	Source/TextOutputSource.cpp	/^    UINT        opacity;$/;"	m	class:TextOutputSource	file:
opaque	Source/libnsgif.h	/^    BOOL opaque;                \/**< whether the frame is totally opaque *\/$/;"	m	struct:gif_frame
opaque	x264/x264.h	/^    void *opaque;$/;"	m
opcode	minhook/src/HDE32/hde32.h	/^    uint8_t opcode;$/;"	m
opcode	minhook/src/HDE64/include/hde64.h	/^    uint8_t opcode;$/;"	m
opcode	minhook/src/hook.cpp	/^		uint16_t	opcode;$/;"	m	struct:MinHook::<anonymous>::JMP_ABS	file:
opcode	minhook/src/hook.cpp	/^		uint8_t		opcode;$/;"	m	struct:MinHook::<anonymous>::JMP_REL	file:
opcode	minhook/src/hook.cpp	/^		uint8_t		opcode;$/;"	m	struct:MinHook::<anonymous>::JMP_REL_SHORT	file:
opcode	minhook/src/trampoline.cpp	/^		uint16_t	opcode;$/;"	m	struct:MinHook::<anonymous>::JMP_ABS	file:
opcode	minhook/src/trampoline.cpp	/^		uint8_t		opcode;		\/\/ 7* 02			J** +4$/;"	m	struct:MinHook::<anonymous>::JCC_ABS	file:
opcode	minhook/src/trampoline.cpp	/^		uint8_t		opcode;$/;"	m	struct:MinHook::<anonymous>::JMP_REL	file:
opcode	minhook/src/trampoline.cpp	/^		uint8_t		opcode;$/;"	m	struct:MinHook::<anonymous>::JMP_REL_SHORT	file:
opcode2	minhook/src/HDE32/hde32.h	/^    uint8_t opcode2;$/;"	m
opcode2	minhook/src/HDE64/include/hde64.h	/^    uint8_t opcode2;$/;"	m
open	Source/mongoose.c	1335;"	d	file:
open	lame/ACM/ACMStream.cpp	/^bool ACMStream::open(const AEncodeProperties & the_Properties)$/;"	f	class:ACMStream
open	lame/ACM/DecodeStream.cpp	/^bool DecodeStream::open()$/;"	f	class:DecodeStream
openAnalyzerOnSuccess	Source/LogUploader.h	/^    bool openAnalyzerOnSuccess;$/;"	m	struct:LogUploadResult
openThreshold	NoiseGate/NoiseGate.h	/^    float   openThreshold;$/;"	m	class:NoiseGate
open_amplifier	lame/misc/ath.c	/^int  open_amplifier ( $/;"	f
open_auth_file	Source/mongoose.c	/^static FILE *open_auth_file(struct connection *conn, const char *path,$/;"	f	file:
open_cgi_endpoint	Source/mongoose.c	/^static void open_cgi_endpoint(struct connection *conn, const char *prog) {$/;"	f	file:
open_file_endpoint	Source/mongoose.c	/^static void open_file_endpoint(struct connection *conn, const char *path,$/;"	f	file:
open_generator	lame/misc/ath.c	/^int  open_generator ( $/;"	f
open_keyboard	lame/misc/ath.c	/^int  open_keyboard    ( keyboard_t* const k )$/;"	f
open_local_endpoint	Source/mongoose.c	/^static void open_local_endpoint(struct connection *conn, int skip_user) {$/;"	f	file:
open_mpeg_file	lame/frontend/get_audio.c	/^open_mpeg_file(lame_t gfp, char const *inPath, int *enc_delay, int *enc_padding)$/;"	f	file:
open_snd_file	lame/frontend/get_audio.c	/^open_snd_file(lame_t gfp, char const *inPath)$/;"	f	file:
open_soundcard	lame/misc/ath.c	/^int  open_soundcard ( $/;"	f
open_wave_file	lame/frontend/get_audio.c	/^open_wave_file(lame_t gfp, char const *inPath)$/;"	f	file:
opencl_device_id	x264/x264.h	/^    void *opencl_device_id;  \/* pass explicit cl_device_id as void*, for API users *\/$/;"	m	struct:x264_param_t
opendir	Source/mongoose.c	/^static DIR *opendir(const char *name) {$/;"	f	file:
operand	minhook/src/hook.cpp	/^		uint32_t	operand;$/;"	m	struct:MinHook::<anonymous>::JMP_ABS	file:
operand	minhook/src/hook.cpp	/^		uint32_t	operand;$/;"	m	struct:MinHook::<anonymous>::JMP_REL	file:
operand	minhook/src/hook.cpp	/^		uint8_t		operand;$/;"	m	struct:MinHook::<anonymous>::JMP_REL_SHORT	file:
operand	minhook/src/trampoline.cpp	/^		uint32_t	operand;$/;"	m	struct:MinHook::<anonymous>::JCC_ABS	file:
operand	minhook/src/trampoline.cpp	/^		uint32_t	operand;$/;"	m	struct:MinHook::<anonymous>::JMP_ABS	file:
operand	minhook/src/trampoline.cpp	/^		uint32_t	operand;$/;"	m	struct:MinHook::<anonymous>::JMP_REL	file:
operand	minhook/src/trampoline.cpp	/^		uint8_t		operand;$/;"	m	struct:MinHook::<anonymous>::JMP_REL_SHORT	file:
operator !	OBSApi/Utility/ComPtr.hpp	/^	inline bool operator!() const      {return !ptr;}$/;"	f	class:ComPtr
operator !	QSVHelper/ComPtr.hpp	/^	inline bool operator!() const      {return !ptr;}$/;"	f	class:ComPtr
operator !	QSVHelper/WindowsStuff.h	/^    bool operator!() const { return !h; }$/;"	f	struct:safe_handle
operator !	QSVHelper/WindowsStuff.h	/^    bool operator!() const { return !memory || !file; }$/;"	f	struct:NamedSharedMemory
operator !	QSVHelper/WindowsStuff.h	/^    bool operator!() const { return !memory || !signal_ || !mutex_; }$/;"	f	struct:IPCLockedSignalledType
operator !	QSVHelper/WindowsStuff.h	/^    bool operator!() const { return !memory || !signal_; }$/;"	f	struct:IPCSignalledArray
operator !	QSVHelper/WindowsStuff.h	/^    bool operator!() const { return !memory || !signal_; }$/;"	f	struct:IPCSignalledType
operator !	QSVHelper/WindowsStuff.h	/^    bool operator!() const { return !memory; }$/;"	f	struct:IPCArray
operator !	QSVHelper/WindowsStuff.h	/^    bool operator!() const { return !memory; }$/;"	f	struct:IPCType
operator !	QSVHelper/WindowsStuff.h	/^    bool operator!() const { return !signal_; }$/;"	f	struct:IPCSignal
operator !	QSVHelper/WindowsStuff.h	/^    bool operator!() { return !memory || !signal_ || !mutex_; }$/;"	f	struct:IPCLockedSignalledArray
operator !	QSVHelper/WindowsStuff.h	/^    bool operator!() { return !mutex_; }$/;"	f	struct:IPCMutex
operator !	Source/LogUploader.cpp	/^        bool operator!() { return get() == nullptr; }$/;"	f	struct:<anonymous>::HTTPHandle
operator !=	OBSApi/Utility/ComPtr.hpp	/^	inline bool operator!=(T *p) const {return ptr != p;}$/;"	f	class:ComPtr
operator !=	OBSApi/Utility/XMath.h	/^    inline BOOL  operator!=(const Plane& p) const           {return !CloseTo(p, EPSILON);}$/;"	f	struct:Plane
operator !=	OBSApi/Utility/XMath.h	/^    inline BOOL operator!=(const Euler &v) const     {return (v.x!=x)||(v.y!=y)||(v.z!=z);}$/;"	f	struct:Euler
operator !=	OBSApi/Utility/XMath.h	/^    inline BOOL operator!=(const Quat &q) const     {return (q.x!=x)||(q.y!=y)||(q.z!=z)||(q.w!=w);}$/;"	f	struct:Quat
operator !=	OBSApi/Utility/XMath.h	/^    inline BOOL operator!=(const Vect &v) const     {return !CloseTo(v);}$/;"	f	struct:Vect
operator !=	OBSApi/Utility/XMath.h	/^    inline BOOL operator!=(const Vect2 &v) const    {return (v.x!=x)||(v.y!=y);}$/;"	f	struct:Vect2
operator !=	OBSApi/Utility/XMath.h	/^    inline BOOL operator!=(const Vect4 &v) const      {return !CloseTo(v);}$/;"	f	struct:Vect4
operator !=	OBSApi/Utility/XMath.h	/^    inline BOOL operator!=(const Vect4 &v) const      {return (v.x!=x)||(v.y!=y)||(v.z!=z);}$/;"	f	struct:Vect4
operator !=	OBSApi/Utility/XString.h	/^    inline BOOL operator!=(CTSTR lpStr) const {return !Compare(lpStr);}$/;"	f	class:String
operator !=	OBSApi/Utility/XString.h	/^    inline BOOL operator!=(const String &str) const {return !Compare(str);}$/;"	f	class:String
operator !=	QSVHelper/ComPtr.hpp	/^	inline bool operator!=(T *p) const {return ptr != p;}$/;"	f	class:ComPtr
operator !=	Source/OBS.h	/^    bool operator!=(const ServiceIdentifier &sid) { return !(*this == sid); }$/;"	f	struct:ServiceIdentifier
operator !=	lame/ACM/AEncodeProperties.cpp	/^bool AEncodeProperties::operator !=(const AEncodeProperties & the_instance) const$/;"	f	class:AEncodeProperties
operator !=	libmfx/include/mfx_plugin_hive.h	/^    inline bool operator != (const mfxPluginUID &lhs, const mfxPluginUID & rhs) $/;"	f	namespace:MFX
operator !=	libmfx/include/mfx_vector.h	/^        bool  operator !=(const iterator_tmpl<T> & that )const $/;"	f	class:MFX::iterator_tmpl
operator &	QSVHelper/QSVStuff.h	/^    mfxEncodeCtrl *operator&() { return &ctrl; }$/;"	f	struct:EncodeCtrl
operator &	QSVHelper/QSVStuff.h	/^    mfxVideoParam* operator&() { return &params; }$/;"	f	struct:Parameters
operator &	QSVHelper/WindowsStuff.h	/^    T *operator&() { return &memory.as<T>(); }$/;"	f	struct:IPCType
operator &	QSVHelper/WindowsStuff.h	/^    void *operator&() { return memory; }$/;"	f	struct:NamedSharedMemory
operator ()	OBSApi/Utility/RAIIHelpers.h	/^    void operator()(HANDLE h) const { if (!h) return; Log(L"Terminating 0x%x", GetThreadId(h)); TerminateThread(h, exitCode); }$/;"	f	struct:ThreadTerminator
operator ()	OBSApi/Utility/RAIIHelpers.h	/^    void operator()(HANDLE h) const { if (!h) return; OSCloseEvent(h); }$/;"	f	struct:EventDeleter
operator ()	OBSApi/Utility/RAIIHelpers.h	/^    void operator()(HANDLE h) const { if (!h) return; OSCloseMutex(h); }$/;"	f	struct:MutexDeleter
operator ()	OBSApi/Utility/RAIIHelpers.h	/^    void operator()(HANDLE h) const { if (!h) return; OSCloseThread(h); }$/;"	f	struct:ThreadCloser
operator ()	OBSApi/Utility/RAIIHelpers.h	/^    void operator()(HANDLE h) const { if (!h) return; OSTerminateThread(h, args ...); }$/;"	f	struct:ThreadDeleter
operator ()	OBSApi/Utility/XT_Windows.cpp	/^        void operator()(HANDLE h) { if (h && h != INVALID_HANDLE_VALUE) CloseHandle(h); }$/;"	f	struct:<anonymous>::HandleCloser
operator ()	OBSApi/Utility/XT_Windows.cpp	/^        void operator()(HANDLE h) { if (h && h != INVALID_HANDLE_VALUE) FindCloseChangeNotification(h); }$/;"	f	struct:<anonymous>::ChangeNotificationCloser
operator ()	QSVHelper/IntelSupport/include/base_allocator.h	/^        bool operator () (const UniqueResponse &response)const$/;"	f	struct:BaseFrameAllocator::UniqueResponse
operator ()	QSVHelper/IntelSupport/include/base_allocator.h	/^        bool operator () (const mfxFrameAllocResponse & l, const mfxFrameAllocResponse &r)const$/;"	f	struct:BaseFrameAllocator::IsSame
operator ()	QSVHelper/IntelSupport/src/d3d11_allocator.cpp	/^    mfxHDL operator ()()$/;"	f	struct:sequence
operator ()	Source/Encoder_QSV.cpp	/^        int64_t operator()(uint64_t bs_pts, int64_t bs_dts)$/;"	f	struct:<anonymous>::DTSGenerator
operator ()	Source/LogUploader.cpp	/^        void operator()(HINTERNET h) { WinHttpCloseHandle(h); }$/;"	f	struct:<anonymous>::HTTPHandleDeleter
operator ()	Source/WindowStuff.cpp	/^        void operator()(void *h) { GlobalFree(h); }$/;"	f	struct:<anonymous>::HLOCALDeleter
operator ()	Source/WindowStuff.cpp	/^        void operator()(void *m) { GlobalUnlock(m); }$/;"	f	struct:<anonymous>::MemUnlocker
operator *	OBSApi/Utility/XMath.h	/^    inline Euler operator*(const Euler &v) const     {return Euler(x*v.x, y*v.y, z*v.z);}$/;"	f	struct:Euler
operator *	OBSApi/Utility/XMath.h	/^    inline Euler operator*(float f) const            {return Euler(  x*f,   y*f,   z*f);}$/;"	f	struct:Euler
operator *	OBSApi/Utility/XMath.h	/^    inline Matrix operator*(const Euler &e) const$/;"	f	struct:Matrix
operator *	OBSApi/Utility/XMath.h	/^    inline Matrix operator*(const Matrix &m) const$/;"	f	struct:Matrix
operator *	OBSApi/Utility/XMath.h	/^    inline Matrix operator*(const Quat &q) const$/;"	f	struct:Matrix
operator *	OBSApi/Utility/XMath.h	/^    inline Matrix operator*(const Vect &v) const$/;"	f	struct:Matrix
operator *	OBSApi/Utility/XMath.h	/^    inline Quat operator*(float f) const            {return Quat(  x*f,   y*f,   z*f,   w*f);}$/;"	f	struct:Quat
operator *	OBSApi/Utility/XMath.h	/^    inline Quat operator*(float f) const            {return Quat(_mm_mul_ps(m, _mm_set1_ps(f)));}$/;"	f	struct:Quat
operator *	OBSApi/Utility/XMath.h	/^    inline Vect operator*(const Vect &v) const      {return Vect(_mm_mul_ps(m, v.m));}$/;"	f	struct:Vect
operator *	OBSApi/Utility/XMath.h	/^    inline Vect operator*(const Vect &v) const      {return Vect(x*v.x, y*v.y, z*v.z);}$/;"	f	struct:Vect
operator *	OBSApi/Utility/XMath.h	/^    inline Vect operator*(float f) const            {return Vect(  x*f,   y*f,   z*f);}$/;"	f	struct:Vect
operator *	OBSApi/Utility/XMath.h	/^    inline Vect operator*(float f) const            {return Vect(_mm_mul_ps(m, _mm_set1_ps(f)));}$/;"	f	struct:Vect
operator *	OBSApi/Utility/XMath.h	/^    inline Vect2 operator*(const Vect2 &v) const    {return Vect2(x*v.x, y*v.y);}$/;"	f	struct:Vect2
operator *	OBSApi/Utility/XMath.h	/^    inline Vect2 operator*(float f) const           {return Vect2(  x*f,   y*f);}$/;"	f	struct:Vect2
operator *	OBSApi/Utility/XMath.h	/^    inline Vect4 operator*(const Vect4 &v) const      {return Vect4(_mm_mul_ps(m, v.m));}$/;"	f	struct:Vect4
operator *	OBSApi/Utility/XMath.h	/^    inline Vect4 operator*(const Vect4 &v) const      {return Vect4(x*v.x, y*v.y, z*v.z, w*v.w);}$/;"	f	struct:Vect4
operator *	OBSApi/Utility/XMath.h	/^    inline Vect4 operator*(float f) const             {return Vect4(  x*f,   y*f,   z*f,   w*f);}$/;"	f	struct:Vect4
operator *	OBSApi/Utility/XMath.h	/^    inline Vect4 operator*(float f) const             {return Vect4(_mm_mul_ps(m, _mm_set1_ps(f)));}$/;"	f	struct:Vect4
operator *	OBSApi/Utility/XMath.h	/^inline Quat  Quat::operator*(const AxisAngle &aa) const {return Quat(*this) *= aa.GetQuat();}$/;"	f	class:Quat
operator *	OBSApi/Utility/XMath.h	/^inline Quat Quat::operator*(const Quat &q) const$/;"	f	class:Quat
operator *	OBSApi/Utility/XMath.h	/^inline Vect2 operator*(float f, const Vect2 &v) {return Vect2(f*v.x, f*v.y);}$/;"	f
operator *	QSVHelper/WindowsStuff.h	/^    T &operator*() { return memory.as<T>(); }$/;"	f	struct:IPCType
operator *	libmfx/include/mfx_vector.h	/^        T & operator *() $/;"	f	class:MFX::iterator_tmpl
operator *=	OBSApi/Utility/XMath.cpp	/^Quat& Quat::operator*=(const Euler &e)$/;"	f	class:Quat
operator *=	OBSApi/Utility/XMath.cpp	/^Quat& Quat::operator*=(const Quat &q)$/;"	f	class:Quat
operator *=	OBSApi/Utility/XMath.h	/^    inline Euler& operator*=(const Euler &v)         {return (*this)=(*this)*v;}$/;"	f	struct:Euler
operator *=	OBSApi/Utility/XMath.h	/^    inline Euler& operator*=(float f)                {return (*this)=(*this)*f;}$/;"	f	struct:Euler
operator *=	OBSApi/Utility/XMath.h	/^    inline Matrix& operator*=(const Euler &e)$/;"	f	struct:Matrix
operator *=	OBSApi/Utility/XMath.h	/^    inline Matrix& operator*=(const Matrix &m)$/;"	f	struct:Matrix
operator *=	OBSApi/Utility/XMath.h	/^    inline Matrix& operator*=(const Quat &q)$/;"	f	struct:Matrix
operator *=	OBSApi/Utility/XMath.h	/^    inline Matrix& operator*=(const Vect &v)$/;"	f	struct:Matrix
operator *=	OBSApi/Utility/XMath.h	/^    inline Quat& operator*=(float f)                {m = _mm_mul_ps(m, _mm_set1_ps(f)); return *this;}$/;"	f	struct:Quat
operator *=	OBSApi/Utility/XMath.h	/^    inline Quat& operator*=(float f)                {return (*this)=(*this)*f;}$/;"	f	struct:Quat
operator *=	OBSApi/Utility/XMath.h	/^    inline Vect& operator*=(const Vect &v)          {m = _mm_mul_ps(m, v.m); return *this;}$/;"	f	struct:Vect
operator *=	OBSApi/Utility/XMath.h	/^    inline Vect& operator*=(const Vect &v)          {return (*this)=(*this)*v;}$/;"	f	struct:Vect
operator *=	OBSApi/Utility/XMath.h	/^    inline Vect& operator*=(float f)                {m = _mm_mul_ps(m, _mm_set1_ps(f)); return *this;}$/;"	f	struct:Vect
operator *=	OBSApi/Utility/XMath.h	/^    inline Vect& operator*=(float f)                {return (*this)=(*this)*f;}$/;"	f	struct:Vect
operator *=	OBSApi/Utility/XMath.h	/^    inline Vect2& operator*=(const Vect2 &v)        {return (*this)=(*this)*v;}$/;"	f	struct:Vect2
operator *=	OBSApi/Utility/XMath.h	/^    inline Vect2& operator*=(float f)               {return (*this)=(*this)*f;}$/;"	f	struct:Vect2
operator *=	OBSApi/Utility/XMath.h	/^    inline Vect4& operator*=(const Vect4 &v)          {m = _mm_mul_ps(m, v.m); return *this;}$/;"	f	struct:Vect4
operator *=	OBSApi/Utility/XMath.h	/^    inline Vect4& operator*=(const Vect4 &v)          {return (*this)=(*this)*v;}$/;"	f	struct:Vect4
operator *=	OBSApi/Utility/XMath.h	/^    inline Vect4& operator*=(float f)                 {m = _mm_mul_ps(m, _mm_set1_ps(f)); return *this;}$/;"	f	struct:Vect4
operator *=	OBSApi/Utility/XMath.h	/^    inline Vect4& operator*=(float f)                 {return (*this)=(*this)*f;}$/;"	f	struct:Vect4
operator *=	OBSApi/Utility/XMath.h	/^inline Quat& Quat::operator*=(const AxisAngle &aa)      {return *this *= aa.GetQuat();}$/;"	f	class:Quat
operator +	OBSApi/Utility/Template.h	/^    inline T* operator+(unsigned int index) const$/;"	f	class:List
operator +	OBSApi/Utility/Template.h	/^    inline T* operator+(unsigned int index)$/;"	f	class:List
operator +	OBSApi/Utility/XMath.h	/^    inline Bounds operator+(const Vect &pos) const$/;"	f	struct:Bounds
operator +	OBSApi/Utility/XMath.h	/^    inline Euler operator+(const Euler &v) const     {return Euler(x+v.x, y+v.y, z+v.z);}$/;"	f	struct:Euler
operator +	OBSApi/Utility/XMath.h	/^    inline Euler operator+(float f) const            {return Euler(  x+f,   y+f,   z+f);}$/;"	f	struct:Euler
operator +	OBSApi/Utility/XMath.h	/^    inline Quat operator+(const Quat &q) const      {return Quat(x+q.x, y+q.y, z+q.z, w+q.w);}$/;"	f	struct:Quat
operator +	OBSApi/Utility/XMath.h	/^    inline Quat operator+(const Quat &v) const      {return Quat(_mm_add_ps(m, v.m));}$/;"	f	struct:Quat
operator +	OBSApi/Utility/XMath.h	/^    inline Quat operator+(float f) const            {return Quat(  x+f,   y+f,   z+f,   w+f);}$/;"	f	struct:Quat
operator +	OBSApi/Utility/XMath.h	/^    inline Quat operator+(float f) const            {return Quat(_mm_add_ps(m, _mm_set1_ps(f)));}$/;"	f	struct:Quat
operator +	OBSApi/Utility/XMath.h	/^    inline Vect operator+(const Vect &v) const      {return Vect(_mm_add_ps(m, v.m));}$/;"	f	struct:Vect
operator +	OBSApi/Utility/XMath.h	/^    inline Vect operator+(const Vect &v) const      {return Vect(x+v.x, y+v.y, z+v.z);}$/;"	f	struct:Vect
operator +	OBSApi/Utility/XMath.h	/^    inline Vect operator+(float f) const            {Vect val(_mm_add_ps(m, _mm_set1_ps(f))); val.w = 0.0f; return val;}$/;"	f	struct:Vect
operator +	OBSApi/Utility/XMath.h	/^    inline Vect operator+(float f) const            {return Vect(  x+f,   y+f,   z+f);}$/;"	f	struct:Vect
operator +	OBSApi/Utility/XMath.h	/^    inline Vect2 operator+(const Vect2 &v) const    {return Vect2(x+v.x, y+v.y);}$/;"	f	struct:Vect2
operator +	OBSApi/Utility/XMath.h	/^    inline Vect2 operator+(float f) const           {return Vect2(  x+f,   y+f);}$/;"	f	struct:Vect2
operator +	OBSApi/Utility/XMath.h	/^    inline Vect4 operator+(const Vect4 &v) const      {return Vect4(_mm_add_ps(m, v.m));}$/;"	f	struct:Vect4
operator +	OBSApi/Utility/XMath.h	/^    inline Vect4 operator+(const Vect4 &v) const      {return Vect4(x+v.x, y+v.y, z+v.z, w+v.w);}$/;"	f	struct:Vect4
operator +	OBSApi/Utility/XMath.h	/^    inline Vect4 operator+(float f) const             {return Vect4(  x+f,   y+f,   z+f,   w+f);}$/;"	f	struct:Vect4
operator +	OBSApi/Utility/XMath.h	/^    inline Vect4 operator+(float f) const             {return Vect4(_mm_add_ps(m, _mm_set1_ps(f)));}$/;"	f	struct:Vect4
operator +	OBSApi/Utility/XString.cpp	/^String  String::operator+(CTSTR str) const$/;"	f	class:String
operator +	OBSApi/Utility/XString.cpp	/^String  String::operator+(TCHAR ch) const$/;"	f	class:String
operator +	OBSApi/Utility/XString.cpp	/^String  String::operator+(const String &str) const$/;"	f	class:String
operator +	OBSApi/Utility/XString.cpp	/^String  String::operator+(int number) const$/;"	f	class:String
operator +	OBSApi/Utility/XString.cpp	/^String  String::operator+(unsigned int unumber) const$/;"	f	class:String
operator ++	libmfx/include/mfx_vector.h	/^        iterator_tmpl<T> & operator ++() $/;"	f	class:MFX::iterator_tmpl
operator ++	libmfx/include/mfx_vector.h	/^        iterator_tmpl<T> & operator ++(int) $/;"	f	class:MFX::iterator_tmpl
operator +=	OBSApi/Utility/XMath.h	/^    inline Bounds& operator+=(const Vect &pos)$/;"	f	struct:Bounds
operator +=	OBSApi/Utility/XMath.h	/^    inline Euler& operator+=(const Euler &v)         {return (*this)=(*this)+v;}$/;"	f	struct:Euler
operator +=	OBSApi/Utility/XMath.h	/^    inline Euler& operator+=(float f)                {return (*this)=(*this)+f;}$/;"	f	struct:Euler
operator +=	OBSApi/Utility/XMath.h	/^    inline Quat& operator+=(const Quat &q)          {return (*this)=(*this)+q;}$/;"	f	struct:Quat
operator +=	OBSApi/Utility/XMath.h	/^    inline Quat& operator+=(const Quat &v)          {m = _mm_add_ps(m, v.m); return *this;}$/;"	f	struct:Quat
operator +=	OBSApi/Utility/XMath.h	/^    inline Quat& operator+=(float f)                {m = _mm_add_ps(m, _mm_set1_ps(f)); return *this;}$/;"	f	struct:Quat
operator +=	OBSApi/Utility/XMath.h	/^    inline Quat& operator+=(float f)                {return (*this)=(*this)+f;}$/;"	f	struct:Quat
operator +=	OBSApi/Utility/XMath.h	/^    inline Vect& operator+=(const Vect &v)          {m = _mm_add_ps(m, v.m); return *this;}$/;"	f	struct:Vect
operator +=	OBSApi/Utility/XMath.h	/^    inline Vect& operator+=(const Vect &v)          {return (*this)=(*this)+v;}$/;"	f	struct:Vect
operator +=	OBSApi/Utility/XMath.h	/^    inline Vect& operator+=(float f)                {m = _mm_add_ps(m, _mm_set1_ps(f)); w=0.0f; return *this;}$/;"	f	struct:Vect
operator +=	OBSApi/Utility/XMath.h	/^    inline Vect& operator+=(float f)                {return (*this)=(*this)+f;}$/;"	f	struct:Vect
operator +=	OBSApi/Utility/XMath.h	/^    inline Vect2& operator+=(const Vect2 &v)        {return (*this)=(*this)+v;}$/;"	f	struct:Vect2
operator +=	OBSApi/Utility/XMath.h	/^    inline Vect2& operator+=(float f)               {return (*this)=(*this)+f;}$/;"	f	struct:Vect2
operator +=	OBSApi/Utility/XMath.h	/^    inline Vect4& operator+=(const Vect4 &v)          {m = _mm_add_ps(m, v.m); return *this;}$/;"	f	struct:Vect4
operator +=	OBSApi/Utility/XMath.h	/^    inline Vect4& operator+=(const Vect4 &v)          {return (*this)=(*this)+v;}$/;"	f	struct:Vect4
operator +=	OBSApi/Utility/XMath.h	/^    inline Vect4& operator+=(float f)                 {m = _mm_add_ps(m, _mm_set1_ps(f)); return *this;}$/;"	f	struct:Vect4
operator +=	OBSApi/Utility/XMath.h	/^    inline Vect4& operator+=(float f)                 {return (*this)=(*this)+f;}$/;"	f	struct:Vect4
operator +=	OBSApi/Utility/XString.cpp	/^String& String::operator+=(CTSTR str)$/;"	f	class:String
operator +=	OBSApi/Utility/XString.cpp	/^String& String::operator+=(TCHAR ch)$/;"	f	class:String
operator +=	OBSApi/Utility/XString.cpp	/^String& String::operator+=(const String &str)$/;"	f	class:String
operator +=	OBSApi/Utility/XString.cpp	/^String& String::operator+=(int number)$/;"	f	class:String
operator +=	OBSApi/Utility/XString.cpp	/^String& String::operator+=(unsigned int unumber)$/;"	f	class:String
operator -	OBSApi/Utility/Template.h	/^    inline T* operator-(unsigned int index)$/;"	f	class:List
operator -	OBSApi/Utility/XMath.h	/^    inline Euler operator-() const                   {return Euler(-x, -y, -z);}$/;"	f	struct:Euler
operator -	OBSApi/Utility/XMath.h	/^    inline Euler operator-(const Euler &v) const     {return Euler(x-v.x, y-v.y, z-v.z);}$/;"	f	struct:Euler
operator -	OBSApi/Utility/XMath.h	/^    inline Euler operator-(float f) const            {return Euler(  x-f,   y-f,   z-f);}$/;"	f	struct:Euler
operator -	OBSApi/Utility/XMath.h	/^    inline Plane operator-() const                          {return Plane(-Dir, -Dist);}$/;"	f	struct:Plane
operator -	OBSApi/Utility/XMath.h	/^    inline Quat  operator-() const                  {return GetInv();}$/;"	f	struct:Quat
operator -	OBSApi/Utility/XMath.h	/^    inline Quat operator-(const Quat &q) const      {return Quat(x-q.x, y-q.y, z-q.z, w-q.w);}$/;"	f	struct:Quat
operator -	OBSApi/Utility/XMath.h	/^    inline Quat operator-(const Quat &v) const      {return Quat(_mm_sub_ps(m, v.m));}$/;"	f	struct:Quat
operator -	OBSApi/Utility/XMath.h	/^    inline Quat operator-(float f) const            {return Quat(  x-f,   y-f,   z-f,   w-f);}$/;"	f	struct:Quat
operator -	OBSApi/Utility/XMath.h	/^    inline Quat operator-(float f) const            {return Quat(_mm_sub_ps(m, _mm_set1_ps(f)));}$/;"	f	struct:Quat
operator -	OBSApi/Utility/XMath.h	/^    inline Vect operator-() const                   {return Vect(-x, -y, -z);}$/;"	f	struct:Vect
operator -	OBSApi/Utility/XMath.h	/^    inline Vect operator-(const Vect &v) const      {return Vect(_mm_sub_ps(m, v.m));}$/;"	f	struct:Vect
operator -	OBSApi/Utility/XMath.h	/^    inline Vect operator-(const Vect &v) const      {return Vect(x-v.x, y-v.y, z-v.z);}$/;"	f	struct:Vect
operator -	OBSApi/Utility/XMath.h	/^    inline Vect operator-(float f) const            {Vect val(_mm_sub_ps(m, _mm_set1_ps(f))); val.w = 0.0f; return val;}$/;"	f	struct:Vect
operator -	OBSApi/Utility/XMath.h	/^    inline Vect operator-(float f) const            {return Vect(  x-f,   y-f,   z-f);}$/;"	f	struct:Vect
operator -	OBSApi/Utility/XMath.h	/^    inline Vect2 operator-() const                  {return Vect2(-x, -y);}$/;"	f	struct:Vect2
operator -	OBSApi/Utility/XMath.h	/^    inline Vect2 operator-(const Vect2 &v) const    {return Vect2(x-v.x, y-v.y);}$/;"	f	struct:Vect2
operator -	OBSApi/Utility/XMath.h	/^    inline Vect2 operator-(float f) const           {return Vect2(  x-f,   y-f);}$/;"	f	struct:Vect2
operator -	OBSApi/Utility/XMath.h	/^    inline Vect4 operator-() const                    {return Vect4(-x, -y, -z, -w);}$/;"	f	struct:Vect4
operator -	OBSApi/Utility/XMath.h	/^    inline Vect4 operator-(const Vect4 &v) const      {return Vect4(_mm_sub_ps(m, v.m));}$/;"	f	struct:Vect4
operator -	OBSApi/Utility/XMath.h	/^    inline Vect4 operator-(const Vect4 &v) const      {return Vect4(x-v.x, y-v.y, z-v.z, w-v.w);}$/;"	f	struct:Vect4
operator -	OBSApi/Utility/XMath.h	/^    inline Vect4 operator-(float f) const             {return Vect4(  x-f,   y-f,   z-f,   w-f);}$/;"	f	struct:Vect4
operator -	OBSApi/Utility/XMath.h	/^    inline Vect4 operator-(float f) const             {return Vect4(_mm_sub_ps(m, _mm_set1_ps(f)));}$/;"	f	struct:Vect4
operator -	libmfx/include/mfx_vector.h	/^        mfxU32 operator - (const iterator_tmpl<T> &that) const $/;"	f	class:MFX::iterator_tmpl
operator -=	OBSApi/Utility/XMath.h	/^    inline Euler& operator-=(const Euler &v)         {return (*this)=(*this)-v;}$/;"	f	struct:Euler
operator -=	OBSApi/Utility/XMath.h	/^    inline Euler& operator-=(float f)                {return (*this)=(*this)-f;}$/;"	f	struct:Euler
operator -=	OBSApi/Utility/XMath.h	/^    inline Quat& operator-=(const Quat &q)          {return (*this)=(*this)-q;}$/;"	f	struct:Quat
operator -=	OBSApi/Utility/XMath.h	/^    inline Quat& operator-=(const Quat &v)          {m = _mm_sub_ps(m, v.m); return *this;}$/;"	f	struct:Quat
operator -=	OBSApi/Utility/XMath.h	/^    inline Quat& operator-=(float f)                {m = _mm_sub_ps(m, _mm_set1_ps(f)); return *this;}$/;"	f	struct:Quat
operator -=	OBSApi/Utility/XMath.h	/^    inline Quat& operator-=(float f)                {return (*this)=(*this)-f;}$/;"	f	struct:Quat
operator -=	OBSApi/Utility/XMath.h	/^    inline Vect& operator-=(const Vect &v)          {m = _mm_sub_ps(m, v.m); return *this;}$/;"	f	struct:Vect
operator -=	OBSApi/Utility/XMath.h	/^    inline Vect& operator-=(const Vect &v)          {return (*this)=(*this)-v;}$/;"	f	struct:Vect
operator -=	OBSApi/Utility/XMath.h	/^    inline Vect& operator-=(float f)                {m = _mm_sub_ps(m, _mm_set1_ps(f)); w=0.0f; return *this;}$/;"	f	struct:Vect
operator -=	OBSApi/Utility/XMath.h	/^    inline Vect& operator-=(float f)                {return (*this)=(*this)-f;}$/;"	f	struct:Vect
operator -=	OBSApi/Utility/XMath.h	/^    inline Vect2& operator-=(const Vect2 &v)        {return (*this)=(*this)-v;}$/;"	f	struct:Vect2
operator -=	OBSApi/Utility/XMath.h	/^    inline Vect2& operator-=(float f)               {return (*this)=(*this)-f;}$/;"	f	struct:Vect2
operator -=	OBSApi/Utility/XMath.h	/^    inline Vect4& operator-=(const Vect4 &v)          {m = _mm_sub_ps(m, v.m); return *this;}$/;"	f	struct:Vect4
operator -=	OBSApi/Utility/XMath.h	/^    inline Vect4& operator-=(const Vect4 &v)          {return (*this)=(*this)-v;}$/;"	f	struct:Vect4
operator -=	OBSApi/Utility/XMath.h	/^    inline Vect4& operator-=(float f)                 {m = _mm_sub_ps(m, _mm_set1_ps(f)); return *this;}$/;"	f	struct:Vect4
operator -=	OBSApi/Utility/XMath.h	/^    inline Vect4& operator-=(float f)                 {return (*this)=(*this)-f;}$/;"	f	struct:Vect4
operator ->	OBSApi/Utility/ComPtr.hpp	/^	inline T *operator->() const       {return ptr;}$/;"	f	class:ComPtr
operator ->	QSVHelper/ComPtr.hpp	/^	inline T *operator->() const       {return ptr;}$/;"	f	class:ComPtr
operator ->	QSVHelper/QSVStuff.h	/^    const mfxVideoParam* operator->() const { return &params; }$/;"	f	struct:Parameters
operator ->	QSVHelper/QSVStuff.h	/^    mfxVideoParam* operator->() { return &params; }$/;"	f	struct:Parameters
operator ->	QSVHelper/WindowsStuff.h	/^    T *operator->() { return &memory.as<T>(); }$/;"	f	struct:IPCType
operator ->	libmfx/include/mfx_vector.h	/^        T * operator ->() $/;"	f	class:MFX::iterator_tmpl
operator /	OBSApi/Utility/XMath.h	/^    inline Euler operator\/(const Euler &v) const     {return Euler(x\/v.x, y\/v.y, z\/v.z);}$/;"	f	struct:Euler
operator /	OBSApi/Utility/XMath.h	/^    inline Euler operator\/(float f) const$/;"	f	struct:Euler
operator /	OBSApi/Utility/XMath.h	/^    inline Quat operator\/(float f) const            {return Quat(_mm_div_ps(m, _mm_set1_ps(f)));}$/;"	f	struct:Quat
operator /	OBSApi/Utility/XMath.h	/^    inline Quat operator\/(float f) const$/;"	f	struct:Quat
operator /	OBSApi/Utility/XMath.h	/^    inline Vect operator\/(const Vect &v) const      {__m128 tmp = _mm_div_ps(m, v.m); tmp.m128_f32[3] = 0.0f; return Vect(tmp);}$/;"	f	struct:Vect
operator /	OBSApi/Utility/XMath.h	/^    inline Vect operator\/(const Vect &v) const      {return Vect(x\/v.x, y\/v.y, z\/v.z);}$/;"	f	struct:Vect
operator /	OBSApi/Utility/XMath.h	/^    inline Vect operator\/(float f) const            {__m128 tmp = _mm_div_ps(m, _mm_set1_ps(f)); tmp.m128_f32[3] = 0.0f; return Vect(tmp);}$/;"	f	struct:Vect
operator /	OBSApi/Utility/XMath.h	/^    inline Vect operator\/(float f) const$/;"	f	struct:Vect
operator /	OBSApi/Utility/XMath.h	/^    inline Vect2 operator\/(const Vect2 &v) const    {return Vect2(x\/v.x, y\/v.y);}$/;"	f	struct:Vect2
operator /	OBSApi/Utility/XMath.h	/^    inline Vect2 operator\/(float f) const           {return Vect2(  x\/f,   y\/f);}$/;"	f	struct:Vect2
operator /	OBSApi/Utility/XMath.h	/^    inline Vect4 operator\/(const Vect4 &v) const      {return Vect4(_mm_div_ps(m, v.m));}$/;"	f	struct:Vect4
operator /	OBSApi/Utility/XMath.h	/^    inline Vect4 operator\/(const Vect4 &v) const      {return Vect4(x\/v.x, y\/v.y, z\/v.z, w\/v.w);}$/;"	f	struct:Vect4
operator /	OBSApi/Utility/XMath.h	/^    inline Vect4 operator\/(float f) const             {return Vect4(_mm_div_ps(m, _mm_set1_ps(f)));}$/;"	f	struct:Vect4
operator /	OBSApi/Utility/XMath.h	/^    inline Vect4 operator\/(float f) const$/;"	f	struct:Vect4
operator /	OBSApi/Utility/XMath.h	/^inline Vect2 operator\/(float f, const Vect2 &v) {return Vect2(f\/v.x, f\/v.y);}$/;"	f
operator /=	OBSApi/Utility/XMath.h	/^    inline Euler& operator\/=(const Euler &v)         {return (*this)=(*this)\/v;}$/;"	f	struct:Euler
operator /=	OBSApi/Utility/XMath.h	/^    inline Euler& operator\/=(float f)                {return (*this)=(*this)\/f;}$/;"	f	struct:Euler
operator /=	OBSApi/Utility/XMath.h	/^    inline Quat& operator\/=(float f)                {m = _mm_div_ps(m, _mm_set1_ps(f)); return *this;}$/;"	f	struct:Quat
operator /=	OBSApi/Utility/XMath.h	/^    inline Quat& operator\/=(float f)                {return (*this)=(*this)\/f;}$/;"	f	struct:Quat
operator /=	OBSApi/Utility/XMath.h	/^    inline Vect& operator\/=(const Vect &v)          {m = _mm_div_ps(m, v.m); w=0.0f; return *this;}$/;"	f	struct:Vect
operator /=	OBSApi/Utility/XMath.h	/^    inline Vect& operator\/=(const Vect &v)          {return (*this)=(*this)\/v;}$/;"	f	struct:Vect
operator /=	OBSApi/Utility/XMath.h	/^    inline Vect& operator\/=(float f)                {m = _mm_div_ps(m, _mm_set1_ps(f)); w=0.0f; return *this;}$/;"	f	struct:Vect
operator /=	OBSApi/Utility/XMath.h	/^    inline Vect& operator\/=(float f)                {return (*this)=(*this)\/f;}$/;"	f	struct:Vect
operator /=	OBSApi/Utility/XMath.h	/^    inline Vect2& operator\/=(const Vect2 &v)        {return (*this)=(*this)\/v;}$/;"	f	struct:Vect2
operator /=	OBSApi/Utility/XMath.h	/^    inline Vect2& operator\/=(float f)               {return (*this)=(*this)\/f;}$/;"	f	struct:Vect2
operator /=	OBSApi/Utility/XMath.h	/^    inline Vect4& operator\/=(const Vect4 &v)          {m = _mm_div_ps(m, v.m); return *this;}$/;"	f	struct:Vect4
operator /=	OBSApi/Utility/XMath.h	/^    inline Vect4& operator\/=(const Vect4 &v)          {return (*this)=(*this)\/v;}$/;"	f	struct:Vect4
operator /=	OBSApi/Utility/XMath.h	/^    inline Vect4& operator\/=(float f)                 {m = _mm_div_ps(m, _mm_set1_ps(f)); return *this;}$/;"	f	struct:Vect4
operator /=	OBSApi/Utility/XMath.h	/^    inline Vect4& operator\/=(float f)                 {return (*this)=(*this)\/f;}$/;"	f	struct:Vect4
operator <	lame/ACM/ACM.cpp	/^bool bitrate_item::operator<(const bitrate_item & other_bitrate) const$/;"	f	class:bitrate_item
operator <	lame/ACM/tinyxml/tinyxml.h	/^	bool operator<( const TiXmlAttribute& rhs )	 const { return name < rhs.name; }$/;"	f	class:TiXmlAttribute
operator <	libmfx/include/mfx_dispatcher.h	/^bool operator < (const mfxVersion &one, const mfxVersion &two)$/;"	f
operator <	minhook/src/buffer.cpp	/^	bool operator <(const MEMORY_BLOCK& lhs, const MEMORY_BLOCK& rhs)$/;"	f	namespace:MinHook::<anonymous>
operator <	minhook/src/buffer.cpp	/^	bool operator <(const MEMORY_BLOCK& lhs, const T& rhs)$/;"	f	namespace:MinHook::<anonymous>
operator <	minhook/src/buffer.cpp	/^	bool operator <(const T& lhs, const MEMORY_BLOCK& rhs)$/;"	f	namespace:MinHook::<anonymous>
operator <	minhook/src/hook.cpp	/^	bool operator <(const HOOK_ENTRY& lhs, const HOOK_ENTRY& rhs)$/;"	f	namespace:MinHook::<anonymous>
operator <	minhook/src/hook.cpp	/^	bool operator <(const HOOK_ENTRY& lhs, const T& rhs)$/;"	f	namespace:MinHook::<anonymous>
operator <	minhook/src/hook.cpp	/^	bool operator <(const T& lhs, const HOOK_ENTRY& rhs)$/;"	f	namespace:MinHook::<anonymous>
operator <<	OBSApi/Utility/Serializer.h	/^    friend inline Serializer& operator<<(Serializer &s, BYTE &b)       {s.Serialize(&b, 1);  return s;}$/;"	f	class:Serializer
operator <<	OBSApi/Utility/Serializer.h	/^    friend inline Serializer& operator<<(Serializer &s, DWORD &dw)     {s.Serialize(&dw, 4); return s;}$/;"	f	class:Serializer
operator <<	OBSApi/Utility/Serializer.h	/^    friend inline Serializer& operator<<(Serializer &s, LONG  &dw)     {s.Serialize(&dw, 4); return s;}$/;"	f	class:Serializer
operator <<	OBSApi/Utility/Serializer.h	/^    friend inline Serializer& operator<<(Serializer &s, LONG64 &qw)    {s.Serialize(&qw, 8); return s;}$/;"	f	class:Serializer
operator <<	OBSApi/Utility/Serializer.h	/^    friend inline Serializer& operator<<(Serializer &s, QWORD &qw)     {s.Serialize(&qw, 8); return s;}$/;"	f	class:Serializer
operator <<	OBSApi/Utility/Serializer.h	/^    friend inline Serializer& operator<<(Serializer &s, UINT  &dw)     {s.Serialize(&dw, 4); return s;}$/;"	f	class:Serializer
operator <<	OBSApi/Utility/Serializer.h	/^    friend inline Serializer& operator<<(Serializer &s, WORD  &w)      {s.Serialize(&w, 2);  return s;}$/;"	f	class:Serializer
operator <<	OBSApi/Utility/Serializer.h	/^    friend inline Serializer& operator<<(Serializer &s, bool  &bv)     {BOOL bVal = (BOOL)bv; s.Serialize(&bVal, 4); return s;}$/;"	f	class:Serializer
operator <<	OBSApi/Utility/Serializer.h	/^    friend inline Serializer& operator<<(Serializer &s, char &b)       {s.Serialize(&b, 1);  return s;}$/;"	f	class:Serializer
operator <<	OBSApi/Utility/Serializer.h	/^    friend inline Serializer& operator<<(Serializer &s, double &d)     {s.Serialize(&d, 8);  return s;}$/;"	f	class:Serializer
operator <<	OBSApi/Utility/Serializer.h	/^    friend inline Serializer& operator<<(Serializer &s, float &f)      {s.Serialize(&f, 4);  return s;}$/;"	f	class:Serializer
operator <<	OBSApi/Utility/Serializer.h	/^    friend inline Serializer& operator<<(Serializer &s, int   &dw)     {s.Serialize(&dw, 4); return s;}$/;"	f	class:Serializer
operator <<	OBSApi/Utility/Serializer.h	/^    friend inline Serializer& operator<<(Serializer &s, short &w)      {s.Serialize(&w, 2);  return s;}$/;"	f	class:Serializer
operator <<	OBSApi/Utility/Template.h	/^    inline BitList& operator<<(const BOOL val)$/;"	f	class:BitList
operator <<	OBSApi/Utility/Template.h	/^    inline CircularList<T>& operator<<(const T& val)$/;"	f	class:CircularList
operator <<	OBSApi/Utility/Template.h	/^    inline List<T>& operator<<(const T& val)$/;"	f	class:List
operator <<	OBSApi/Utility/Template.h	/^    inline friend Serializer& operator<<(Serializer &s, BitList &list)$/;"	f	class:BitList
operator <<	OBSApi/Utility/Template.h	/^    inline friend Serializer& operator<<(Serializer &s, List<T> &list)$/;"	f	class:List
operator <<	OBSApi/Utility/Template.h	/^    inline friend Serializer& operator<<(Serializer &s, SafeList<T> &list)$/;"	f	class:SafeList
operator <<	OBSApi/Utility/Template.h	/^    inline int operator<<(const T& val)$/;"	f	class:SafeList
operator <<	OBSApi/Utility/XMath.h	/^    friend inline Serializer& operator<<(Serializer &s, AxisAngle &aa)$/;"	f	struct:AxisAngle
operator <<	OBSApi/Utility/XMath.h	/^    friend inline Serializer& operator<<(Serializer &s, Bounds &b)$/;"	f	struct:Bounds
operator <<	OBSApi/Utility/XMath.h	/^    friend inline Serializer& operator<<(Serializer &s, Euler &e)$/;"	f	struct:Euler
operator <<	OBSApi/Utility/XMath.h	/^    friend inline Serializer& operator<<(Serializer &s, Line2 &line2)$/;"	f	struct:Line2
operator <<	OBSApi/Utility/XMath.h	/^    friend inline Serializer& operator<<(Serializer &s, Matrix &m)$/;"	f	struct:Matrix
operator <<	OBSApi/Utility/XMath.h	/^    friend inline Serializer& operator<<(Serializer &s, Plane &p)$/;"	f	struct:Plane
operator <<	OBSApi/Utility/XMath.h	/^    friend inline Serializer& operator<<(Serializer &s, Quat &q)$/;"	f	struct:Quat
operator <<	OBSApi/Utility/XMath.h	/^    friend inline Serializer& operator<<(Serializer &s, Vect &v)$/;"	f	struct:Vect
operator <<	OBSApi/Utility/XMath.h	/^    friend inline Serializer& operator<<(Serializer &s, Vect2 &v)$/;"	f	struct:Vect2
operator <<	OBSApi/Utility/XMath.h	/^    friend inline Serializer& operator<<(Serializer &s, Vect4 &v)$/;"	f	struct:Vect4
operator <<	OBSApi/Utility/XString.cpp	/^Serializer& operator<<(Serializer &s, String &str)$/;"	f
operator <<	OBSApi/Utility/XString.cpp	/^String& String::operator<<(CTSTR str)$/;"	f	class:String
operator <<	OBSApi/Utility/XString.cpp	/^String& String::operator<<(TCHAR ch)$/;"	f	class:String
operator <<	OBSApi/Utility/XString.cpp	/^String& String::operator<<(const String &str)$/;"	f	class:String
operator <<	OBSApi/Utility/XString.cpp	/^String& String::operator<<(int number)$/;"	f	class:String
operator <<	OBSApi/Utility/XString.cpp	/^String& String::operator<<(unsigned int unumber)$/;"	f	class:String
operator <<	OBSApi/Utility/XString.h	/^    inline StringList& operator<<(CTSTR lpStr)$/;"	f	class:StringList
operator <<	OBSApi/Utility/XString.h	/^    inline StringList& operator<<(const String& val)$/;"	f	class:StringList
operator <<	OBSApi/Utility/XString.h	/^    inline friend Serializer& operator<<(Serializer &s, StringList &list)$/;"	f	class:StringList
operator <<	lame/ACM/tinyxml/tinyxml.h	/^	friend std::ostream& operator<< ( std::ostream& out, const TiXmlNode& base )$/;"	f	class:TiXmlNode
operator <=	libmfx/include/mfx_dispatcher.h	/^bool operator <= (const mfxVersion &one, const mfxVersion &two)$/;"	f
operator =	OBSApi/GraphicsSystem.h	/^    FutureShader &operator=(FutureShader &&other)$/;"	f	class:FutureShader
operator =	OBSApi/Utility/ComPtr.hpp	/^	inline ComPtr &operator=(ComPtr &&c)$/;"	f	class:ComPtr
operator =	OBSApi/Utility/ComPtr.hpp	/^	inline ComPtr &operator=(T *p)$/;"	f	class:ComPtr
operator =	OBSApi/Utility/ComPtr.hpp	/^	inline ComPtr &operator=(const ComPtr &c)$/;"	f	class:ComPtr
operator =	OBSApi/Utility/ComPtr.hpp	/^	template <typename U> inline ComPtr &operator=(const ComPtr<U> &c)$/;"	f	class:ComPtr
operator =	OBSApi/Utility/Template.h	/^    inline void operator=(const SafeList<T>& list)$/;"	f	class:SafeList
operator =	OBSApi/Utility/XMath.cpp	/^Quat& Quat::operator=(const Euler &e)$/;"	f	class:Quat
operator =	OBSApi/Utility/XMath.h	/^    inline AxisAngle& operator=(const Quat &aa)     {return MakeFromQuat(aa);}$/;"	f	struct:AxisAngle
operator =	OBSApi/Utility/XMath.h	/^    inline AxisAngle& operator=(const Vect &v)      {x = v.x; y = v.y; z = v.z; return *this;}$/;"	f	struct:AxisAngle
operator =	OBSApi/Utility/XMath.h	/^    inline Bounds& operator=(const Bounds &box)$/;"	f	struct:Bounds
operator =	OBSApi/Utility/XMath.h	/^    inline Euler& operator=(const Euler &v)          {x=v.x; y=v.y; z=v.z; return *this;}$/;"	f	struct:Euler
operator =	OBSApi/Utility/XMath.h	/^    inline Euler& operator=(float f)                 {x=f; y=f; z=f; return *this;}$/;"	f	struct:Euler
operator =	OBSApi/Utility/XMath.h	/^    inline Plane& operator=(const Plane& p)                 {Dir = p.Dir; Dist = p.Dist; return *this;}$/;"	f	struct:Plane
operator =	OBSApi/Utility/XMath.h	/^    inline Quat& operator=(const AxisAngle &aa)     {return MakeFromAxisAngle(aa);}$/;"	f	struct:Quat
operator =	OBSApi/Utility/XMath.h	/^    inline Quat& operator=(const Quat &q)           {m = q.m; return *this;}$/;"	f	struct:Quat
operator =	OBSApi/Utility/XMath.h	/^    inline Quat& operator=(const Quat &q)           {x=q.x; y=q.y; z=q.z; w=q.w; return *this;}$/;"	f	struct:Quat
operator =	OBSApi/Utility/XMath.h	/^    inline Quat& operator=(const Vect &v)           {m = v.m; w=1.0f; return *this;}$/;"	f	struct:Quat
operator =	OBSApi/Utility/XMath.h	/^    inline Quat& operator=(const Vect &v)           {x=v.x; y=v.y; z=v.z; w=1.0f; return *this;}$/;"	f	struct:Quat
operator =	OBSApi/Utility/XMath.h	/^    inline Vect& operator=(const Vect &v)           {$/;"	f	struct:Vect
operator =	OBSApi/Utility/XMath.h	/^    inline Vect& operator=(const Vect &v)           {x=v.x; y=v.y; z=v.z; return *this;}$/;"	f	struct:Vect
operator =	OBSApi/Utility/XMath.h	/^    inline Vect& operator=(const Vect2 &v2)         {x = v2.x; y = v2.y; z = w = 0.0f; return *this;}$/;"	f	struct:Vect
operator =	OBSApi/Utility/XMath.h	/^    inline Vect& operator=(float f)                 {m = _mm_set1_ps(f); w=0.0f; return *this;}$/;"	f	struct:Vect
operator =	OBSApi/Utility/XMath.h	/^    inline Vect& operator=(float f)                 {x=f; y=f; z=f; return *this;}$/;"	f	struct:Vect
operator =	OBSApi/Utility/XMath.h	/^    inline Vect2& operator=(const Vect2 &v)         {x=v.x; y=v.y; return *this;}$/;"	f	struct:Vect2
operator =	OBSApi/Utility/XMath.h	/^    inline Vect2& operator=(float val)              {x=val; y=val; return *this;}$/;"	f	struct:Vect2
operator =	OBSApi/Utility/XMath.h	/^    inline Vect4& operator=(const Vect4 &v)           {m=v.m; return *this;}$/;"	f	struct:Vect4
operator =	OBSApi/Utility/XMath.h	/^    inline Vect4& operator=(const Vect4 &v)           {x=v.x; y=v.y; z=v.z; w=v.w; return *this;}$/;"	f	struct:Vect4
operator =	OBSApi/Utility/XMath.h	/^    inline Vect4& operator=(float f)                  {m = _mm_set1_ps(f); return *this;}$/;"	f	struct:Vect4
operator =	OBSApi/Utility/XMath.h	/^    inline Vect4& operator=(float f)                  {x=f; y=f; z=f; w=f; return *this;}$/;"	f	struct:Vect4
operator =	OBSApi/Utility/XMath.h	/^inline CompactVect& CompactVect::operator=(const Vect &v)$/;"	f	class:CompactVect
operator =	OBSApi/Utility/XMath.h	/^inline Vect2& Vect2::operator=(const Vect &v)$/;"	f	class:Vect2
operator =	OBSApi/Utility/XString.cpp	/^String& String::operator=(CTSTR str)$/;"	f	class:String
operator =	OBSApi/Utility/XString.cpp	/^String& String::operator=(TCHAR ch)$/;"	f	class:String
operator =	OBSApi/Utility/XString.cpp	/^String& String::operator=(const String &str)$/;"	f	class:String
operator =	OBSApi/Utility/XString.cpp	/^String& String::operator=(int number)$/;"	f	class:String
operator =	OBSApi/Utility/XString.cpp	/^String& String::operator=(unsigned int unumber)$/;"	f	class:String
operator =	QSVHelper/ComPtr.hpp	/^	inline ComPtr &operator=(ComPtr &&c)$/;"	f	class:ComPtr
operator =	QSVHelper/ComPtr.hpp	/^	inline ComPtr &operator=(T *p)$/;"	f	class:ComPtr
operator =	QSVHelper/ComPtr.hpp	/^	inline ComPtr &operator=(const ComPtr &c)$/;"	f	class:ComPtr
operator =	QSVHelper/ComPtr.hpp	/^	template <typename U> inline ComPtr &operator=(const ComPtr<U> &c)$/;"	f	class:ComPtr
operator =	QSVHelper/QSVStuff.cpp	/^Parameters &Parameters::operator =(const Parameters& o)$/;"	f	class:Parameters
operator =	QSVHelper/WindowsStuff.h	/^    IPCArray &operator=(IPCArray &&other) { memory = std::move(other.memory); size = other.size; return *this; }$/;"	f	struct:IPCArray
operator =	QSVHelper/WindowsStuff.h	/^    IPCLockedSignalledArray &operator=(IPCLockedSignalledArray &&other)$/;"	f	struct:IPCLockedSignalledArray
operator =	QSVHelper/WindowsStuff.h	/^    IPCLockedSignalledType &operator=(IPCLockedSignalledType &&other) { memory = std::move(other.memory); signal_ = std::move(other.signal_); mutex_ = std::move(other.mutex_); return *this; }$/;"	f	struct:IPCLockedSignalledType
operator =	QSVHelper/WindowsStuff.h	/^    IPCMutex &operator=(IPCMutex &&other) { mutex_ = std::move(other.mutex_); return *this; }$/;"	f	struct:IPCMutex
operator =	QSVHelper/WindowsStuff.h	/^    IPCSignal &operator=(IPCSignal &&other) { signal_ = std::move(other.signal_); return *this; }$/;"	f	struct:IPCSignal
operator =	QSVHelper/WindowsStuff.h	/^    IPCSignalledArray &operator=(IPCSignalledArray &&other) { memory = std::move(other.memory); signal_ = std::move(other.signal_); size = other.size; return *this; }$/;"	f	struct:IPCSignalledArray
operator =	QSVHelper/WindowsStuff.h	/^    IPCSignalledType &operator=(IPCSignalledType &&other) { memory = std::move(other.memory); signal_ = std::move(other.signal_); return *this; }$/;"	f	struct:IPCSignalledType
operator =	QSVHelper/WindowsStuff.h	/^    IPCType &operator=(IPCType &&other) { memory = std::move(other.memory); return *this; }$/;"	f	struct:IPCType
operator =	QSVHelper/WindowsStuff.h	/^    NamedSharedMemory &operator=(NamedSharedMemory &&other)$/;"	f	struct:NamedSharedMemory
operator =	QSVHelper/WindowsStuff.h	/^    safe_handle &operator=(safe_handle &&other) { reset(other.h); other.h = nullptr; return *this; }$/;"	f	struct:safe_handle
operator =	libmfx/include/mfx_vector.h	/^        MFXVector & operator = (const MFXVector & rhs)$/;"	f	class:MFX::MFXVector
operator =	libmfx/include/msdk/include/mfxplugin++.h	/^        MFXCodecPluginAdapterBase<T>& operator = (const MFXCodecPluginAdapterBase<T> & that) {$/;"	f	class:detail::MFXCodecPluginAdapterBase
operator =	libmfx/include/msdk/include/mfxplugin++.h	/^        MFXPluginAdapterInternal<MFXDecoderPlugin>& operator = (const MFXPluginAdapterInternal<MFXDecoderPlugin> & that) {$/;"	f	class:detail::MFXPluginAdapterInternal
operator =	libmfx/include/msdk/include/mfxplugin++.h	/^        MFXPluginAdapterInternal<MFXEncoderPlugin>& operator = (const MFXPluginAdapterInternal<MFXEncoderPlugin> & that) {$/;"	f	class:detail::MFXPluginAdapterInternal
operator =	libmfx/include/msdk/include/mfxplugin++.h	/^        MFXPluginAdapterInternal<MFXGenericPlugin>& operator = (const MFXPluginAdapterInternal<MFXGenericPlugin> & that) {$/;"	f	class:detail::MFXPluginAdapterInternal
operator =	libmfx/include/msdk/include/mfxplugin++.h	/^        MFXPluginAdapterInternal<MFXVPPPlugin>& operator = (const MFXPluginAdapterInternal<MFXVPPPlugin> & that) {$/;"	f	class:detail::MFXPluginAdapterInternal
operator =	libmfx/include/msdk/include/mfxplugin++.h	/^    MFXCoreInterface &operator = (const MFXCoreInterface & that)$/;"	f	class:MFXCoreInterface
operator =	libmfx/src/mfx_load_plugin.cpp	/^MFX::PluginModule & MFX::PluginModule::operator = (const MFX::PluginModule & that) $/;"	f	class:MFX::PluginModule
operator ==	OBSApi/Utility/ComPtr.hpp	/^	inline bool operator==(T *p) const {return ptr == p;}$/;"	f	class:ComPtr
operator ==	OBSApi/Utility/XMath.h	/^    inline BOOL  operator==(const Plane& p) const           {return CloseTo(p, EPSILON);}$/;"	f	struct:Plane
operator ==	OBSApi/Utility/XMath.h	/^    inline BOOL operator==(const Euler &v) const     {return (v.x==x)&&(v.y==y)&&(v.z==z);}$/;"	f	struct:Euler
operator ==	OBSApi/Utility/XMath.h	/^    inline BOOL operator==(const Quat &q) const     {return (q.x==x)&&(q.y==y)&&(q.z==z)&&(q.w==w);}$/;"	f	struct:Quat
operator ==	OBSApi/Utility/XMath.h	/^    inline BOOL operator==(const Vect &v) const     {return CloseTo(v);}$/;"	f	struct:Vect
operator ==	OBSApi/Utility/XMath.h	/^    inline BOOL operator==(const Vect2 &v) const    {return (v.x==x)&&(v.y==y);}$/;"	f	struct:Vect2
operator ==	OBSApi/Utility/XMath.h	/^    inline BOOL operator==(const Vect4 &v) const      {return (v.x==x)&&(v.y==y)&&(v.z==z);}$/;"	f	struct:Vect4
operator ==	OBSApi/Utility/XMath.h	/^    inline BOOL operator==(const Vect4 &v) const      {return CloseTo(v);}$/;"	f	struct:Vect4
operator ==	OBSApi/Utility/XString.h	/^    inline BOOL operator==(CTSTR lpStr) const {return Compare(lpStr);}$/;"	f	class:String
operator ==	OBSApi/Utility/XString.h	/^    inline BOOL operator==(const String &str) const {return Compare(str);}$/;"	f	class:String
operator ==	QSVHelper/ComPtr.hpp	/^	inline bool operator==(T *p) const {return ptr == p;}$/;"	f	class:ComPtr
operator ==	Source/OBS.h	/^    bool operator==(const ServiceIdentifier &sid) { return id == sid.id && file == sid.file; }$/;"	f	struct:ServiceIdentifier
operator ==	Source/OBSVideoCapture.cpp	/^bool operator==(const EncoderPicture& lhs, const EncoderPicture& rhs)$/;"	f
operator ==	lame/ACM/tinyxml/tinyxml.h	/^	bool operator==( const TiXmlAttribute& rhs ) const { return rhs.name == name; }$/;"	f	class:TiXmlAttribute
operator ==	libmfx/include/mfx_dispatcher.h	/^bool operator == (const mfxVersion &one, const mfxVersion &two)$/;"	f
operator ==	libmfx/include/mfx_plugin_hive.h	/^    inline bool operator == (const mfxPluginUID &lhs, const mfxPluginUID & rhs) $/;"	f	namespace:MFX
operator ==	libmfx/include/mfx_vector.h	/^        bool  operator ==(const iterator_tmpl<T> & that )const $/;"	f	class:MFX::iterator_tmpl
operator >	lame/ACM/tinyxml/tinyxml.h	/^	bool operator>( const TiXmlAttribute& rhs )  const { return name > rhs.name; }$/;"	f	class:TiXmlAttribute
operator >>	lame/ACM/tinyxml/tinyxml.h	/^	friend std::istream& operator>> ( std::istream& in, TiXmlNode& base )$/;"	f	class:TiXmlNode
operator HANDLE	QSVHelper/WindowsStuff.h	/^    operator HANDLE() { return h; }$/;"	f	struct:safe_handle
operator HANDLE	minhook/src/thread.cpp	/^		operator HANDLE() const$/;"	f	class:MinHook::<anonymous>::ScopedHandle
operator HINTERNET	Source/LogUploader.cpp	/^        operator HINTERNET() { return get(); }$/;"	f	struct:<anonymous>::HTTPHandle
operator HKEY	lame/dshow/REG.H	/^	operator HKEY () const { return m_hKey; };$/;"	f	class:Lame::CRegKey
operator T	QSVHelper/WindowsStuff.h	/^    operator T() { return memory.as<T>(); }$/;"	f	struct:IPCType
operator T*	OBSApi/Utility/ComPtr.hpp	/^	inline    operator T*() const      {return ptr;}$/;"	f	class:ComPtr
operator T*	QSVHelper/ComPtr.hpp	/^	inline    operator T*() const      {return ptr;}$/;"	f	class:ComPtr
operator T*	QSVHelper/WindowsStuff.h	/^    operator T*() { return static_cast<T*>(&memory); }$/;"	f	struct:IPCArray
operator TSTR	OBSApi/Utility/XString.h	/^    inline operator TSTR() const                {return lpString;}$/;"	f	class:String
operator []	OBSApi/Utility/Template.h	/^    inline BOOL operator[](unsigned int index) const$/;"	f	class:BitList
operator []	OBSApi/Utility/Template.h	/^    inline T& operator[](unsigned int index) const$/;"	f	class:CircularList
operator []	OBSApi/Utility/Template.h	/^    inline T& operator[](unsigned int index) const$/;"	f	class:List
operator []	OBSApi/Utility/Template.h	/^    inline T& operator[](unsigned int index)$/;"	f	class:CircularList
operator []	OBSApi/Utility/Template.h	/^    inline T& operator[](unsigned int index)$/;"	f	class:List
operator []	libmfx/include/mfx_vector.h	/^        T& operator [] (mfxU32 idx) $/;"	f	class:MFX::MFXVector
operator ^	OBSApi/Utility/XMath.h	/^    inline Quat  operator^(const Quat &q) const$/;"	f	struct:Quat
operator ^	OBSApi/Utility/XMath.h	/^    inline Vect  operator^(const Vect &v) const     {return Cross(v);}$/;"	f	struct:Vect
operator ^	OBSApi/Utility/XMath.h	/^    inline Vect  operator^(const Vect &v) const     {return Vect((y*v.z)-(z*v.y), (z*v.x)-(x*v.z), (x*v.y)-(y*v.x));}$/;"	f	struct:Vect
operator ^=	OBSApi/Utility/XMath.h	/^    inline Quat& operator^=(const Quat &q)          {return (*this)=(*this)^q;}$/;"	f	struct:Quat
operator ^=	OBSApi/Utility/XMath.h	/^    inline Vect& operator^=(const Vect &v)          {return (*this)=(*this)^v;}$/;"	f	struct:Vect
operator bool	QSVHelper/Encoder.h	/^    operator bool() { return static_cast<mfxSession>(session) != nullptr; }$/;"	f	struct:Encoder
operator bool	QSVHelper/WindowsStuff.h	/^    operator bool() const { return h != nullptr; }$/;"	f	struct:safe_handle
operator const mfxPluginParam&	libmfx/include/msdk/include/mfxplugin++.h	/^    operator const mfxPluginParam& () const {$/;"	f	class:MFXPluginParam
operator delete	OBSApi/Utility/Alloc.h	/^    inline void operator delete(void *lpData)$/;"	f	class:Alloc
operator delete	OBSApi/Utility/Alloc.h	/^    inline void operator delete(void *lpData, TCHAR *lpFile, unsigned int lpLine)$/;"	f	class:Alloc
operator delete	OBSApi/Utility/Alloc.h	/^inline void operator delete(void* lpData)$/;"	f
operator delete	lame/ACM/main.cpp	/^void operator delete(void *block) {$/;"	f
operator delete[]	OBSApi/Utility/Alloc.h	/^inline void operator delete[](void* lpData)$/;"	f
operator float*	OBSApi/Utility/XMath.h	/^    inline operator float*()                         {return ptr;}$/;"	f	struct:Euler
operator float*	OBSApi/Utility/XMath.h	/^    inline operator float*()                        {return ptr;}$/;"	f	struct:Quat
operator float*	OBSApi/Utility/XMath.h	/^    inline operator float*()                        {return ptr;}$/;"	f	struct:Vect
operator float*	OBSApi/Utility/XMath.h	/^    inline operator float*()                        {return ptr;}$/;"	f	struct:Vect2
operator mfxEncodeCtrl	QSVHelper/QSVStuff.h	/^    operator mfxEncodeCtrl() { return ctrl; }$/;"	f	struct:EncodeCtrl
operator mfxMemId	QSVHelper/IntelSupport/include/d3d11_allocator.h	/^    operator mfxMemId() const$/;"	f	class:MFXReadWriteMid
operator mfxPlugin	libmfx/include/msdk/include/mfxplugin++.h	/^        operator  mfxPlugin () const {$/;"	f	class:detail::MFXPluginAdapterBase
operator mfxPlugin	libmfx/include/msdk/include/mfxplugin++.h	/^    operator  mfxPlugin () const {$/;"	f	class:MFXPluginAdapter
operator mfxPluginParam&	libmfx/include/msdk/include/mfxplugin++.h	/^    operator mfxPluginParam& () {$/;"	f	class:MFXPluginParam
operator mfxSession	libmfx/include/msdk/include/mfxaudio++.h	/^    virtual operator mfxSession (void) { return m_session; }$/;"	f	class:MFXAudioSession
operator mfxSession	libmfx/include/msdk/include/mfxvideo++.h	/^    virtual operator mfxSession (void) { return m_session; }$/;"	f	class:MFXVideoSession
operator mfxVideoParam	QSVHelper/QSVStuff.h	/^    operator mfxVideoParam() { return params; }$/;"	f	struct:Parameters
operator mfxVideoParam*	QSVHelper/QSVStuff.h	/^    operator mfxVideoParam*() { return &params; }$/;"	f	struct:Parameters
operator new	OBSApi/Utility/Alloc.h	/^    inline void  *operator new(size_t dwSize)$/;"	f	class:Alloc
operator new	OBSApi/Utility/Alloc.h	/^    inline void *operator new(size_t dwSize, TCHAR *lpFile, unsigned int lpLine)$/;"	f	class:Alloc
operator new	OBSApi/Utility/Alloc.h	/^inline void* operator new(size_t dwSize)$/;"	f
operator new	lame/ACM/main.cpp	/^void * operator new( unsigned int cb )$/;"	f
operator new[]	OBSApi/Utility/Alloc.h	/^inline void* operator new[](size_t dwSize)$/;"	f
operator |	OBSApi/Utility/XMath.h	/^    inline float operator| (const Quat &q) const    {return (x*q.x)+(y*q.y)+(z*q.z)+(w*q.w);}$/;"	f	struct:Quat
operator |	OBSApi/Utility/XMath.h	/^    inline float operator|(const Quat &v) const$/;"	f	struct:Quat
operator |	OBSApi/Utility/XMath.h	/^    inline float operator|(const Vect &v) const     {return (x*v.x)+(y*v.y)+(z*v.z);}$/;"	f	struct:Vect
operator |	OBSApi/Utility/XMath.h	/^    inline float operator|(const Vect &v) const     {return Dot(v);}$/;"	f	struct:Vect
operator |	OBSApi/Utility/XMath.h	/^    inline float operator|(const Vect& p) const             {return (p|Dir)-Dist;}$/;"	f	struct:Plane
operator |	OBSApi/Utility/XMath.h	/^    inline float operator|(const Vect2 &v) const    {return (x*v.x)+(y*v.y);}$/;"	f	struct:Vect2
operator |	OBSApi/Utility/XMath.h	/^    inline float operator|(const Vect4 &v) const      {return (x*v.x)+(y*v.y)+(z*v.z)+(w*v.w);}$/;"	f	struct:Vect4
operator |	OBSApi/Utility/XMath.h	/^    inline float operator|(const Vect4 &v) const$/;"	f	struct:Vect4
optimum_bandwidth	lame/libmp3lame/lame.c	/^optimum_bandwidth(double *const lowerlimit, double *const upperlimit, const unsigned bitrate)$/;"	f	file:
optimum_samplefreq	lame/libmp3lame/lame.c	/^optimum_samplefreq(int lowpassfreq, int input_samplefreq)$/;"	f	file:
optinfo	librtmp/rtmp.c	/^static const char *optinfo[] =$/;"	v	file:
options	librtmp/rtmp.c	/^} options[] =$/;"	v	file:
order	lame/libmp3lame/newmdct.c	/^static const int order[] = {$/;"	v	file:
order	libfaac/coder.h	/^    int order;                           \/* Filter order *\/$/;"	m
origFunc	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.h	/^    FARPROC origFunc;$/;"	m	class:HookData
original	lame/libmp3lame/lame_global_flags.h	/^    int     original;        \/* mark as original. default=1            *\/$/;"	m	struct:lame_global_struct
original	lame/libmp3lame/util.h	/^        int     original;    \/* mark as original. default=1            *\/$/;"	m
original	lame/mpglib/mpg123.h	/^    int     original;$/;"	m	struct:frame
osVersionInfo	OBSApi/Utility/XT_Windows.cpp	/^OSVERSIONINFO osVersionInfo;$/;"	v
otype	librtmp/rtmp.c	/^    int otype;$/;"	m	struct:urlopt	file:
outBufferSize	ObsNvenc/inc/NVENCEncoder.h	/^    uint32_t outBufferSize;$/;"	m	class:NVENCEncoder
outOfBitsStrategy	lame/libmp3lame/vbrquantize.c	/^outOfBitsStrategy(algo_t const* that, const int sfwork[SFBMAX], const int vbrsfmin[SFBMAX], int target)$/;"	f	file:
outPitch	Source/OBSVideoCapture.cpp	/^    int width, height, inPitch, outPitch, startY, endY;$/;"	m	struct:Convert444Data	file:
outSPSPPSPayloadSize	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t*           outSPSPPSPayloadSize;            \/**< [out]: Size of the sequence and picture header in  bytes written by the NvEncodeAPI interface to the SPSPPSBuffer. *\/$/;"	m	struct:_NV_ENC_SEQUENCE_PARAM_PAYLOAD
out_count	libsamplerate/src_linear.c	/^	long	out_count, out_gen ;$/;"	m	file:
out_count	libsamplerate/src_sinc.c	/^	long	out_count, out_gen ;$/;"	m	file:
out_count	libsamplerate/src_zoh.c	/^	long	out_count, out_gen ;$/;"	m	file:
out_frames	Source/Encoder_QSV.cpp	/^    uint64_t out_frames;$/;"	m	class:QSVEncoder	file:
out_gen	libsamplerate/src_linear.c	/^	long	out_count, out_gen ;$/;"	m	file:
out_gen	libsamplerate/src_sinc.c	/^	long	out_count, out_gen ;$/;"	m	file:
out_gen	libsamplerate/src_zoh.c	/^	long	out_count, out_gen ;$/;"	m	file:
outerMids	QSVHelper/IntelSupport/include/d3d11_allocator.h	/^        std::vector<mfxMemId> outerMids;$/;"	m	struct:D3D11FrameAllocator::TextureResource
outer_loop	lame/libmp3lame/quantize.c	/^outer_loop(lame_internal_flags * gfc, gr_info * const cod_info, const FLOAT * const l3_xmin, \/* allowed distortion *\/$/;"	f	file:
outlineColor	Source/TextOutputSource.cpp	/^    DWORD       outlineColor;$/;"	m	class:TextOutputSource	file:
outlineOpacity	Source/TextOutputSource.cpp	/^    UINT        outlineOpacity;$/;"	m	class:TextOutputSource	file:
outlineSize	Source/TextOutputSource.cpp	/^    float       outlineSize;$/;"	m	class:TextOutputSource	file:
output	DShowPlugin/DeviceSource.h	/^    LPBYTE input, output;$/;"	m	struct:ConvertData
output	Source/OBSVideoCapture.cpp	/^    LPBYTE output[3];$/;"	m	struct:Convert444Data	file:
outputAUD	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t outputAUD                 :1;                          \/**< [in]: Set to 1 to write access unit delimiter syntax in bitstream *\/$/;"	m	struct:_NV_ENC_CONFIG_H264
outputBitStream	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_OUTPUT_PTR   outputBitStream;                 \/**< [out]: Specifies the pointer to output bitstream. *\/$/;"	m	struct:_NV_ENC_STAT
outputBitstream	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_OUTPUT_PTR                           outputBitstream;                \/**< [in]: Specifies the pointer to output buffer. Client should use a pointer obtained from ::NvEncCreateBitstreamBuffer() API. *\/$/;"	m	struct:_NV_ENC_PIC_PARAMS
outputBitstream	ObsNvenc/inc/nvEncodeAPI.h	/^    void*                   outputBitstream;             \/**< [in]: Pointer to the bitstream buffer being locked. *\/$/;"	m	struct:_NV_ENC_LOCK_BITSTREAM
outputBuffer	DShowPlugin/DeviceSource.h	/^    List<BYTE> outputBuffer;$/;"	m	class:DeviceAudioSource
outputBuffer	OBSApi/AudioSource.h	/^    List<float> outputBuffer;$/;"	m	class:AudioSource
outputBufferingPeriodSEI	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t outputBufferingPeriodSEI  :1;                          \/**< [in]: Set to 1 to write SEI buffering period syntax in the bitstream *\/$/;"	m	struct:_NV_ENC_CONFIG_H264
outputCX	Source/OBS.h	/^    UINT    outputCX, outputCY;$/;"	m	class:OBS
outputCY	Source/OBS.h	/^    UINT    outputCX, outputCY;$/;"	m	class:OBS
outputColor	CLRBrowserSourcePlugin/Plugin/BrowserSource.cs	/^        private UInt32 outputColor;$/;"	f	class:CLRBrowserSourcePlugin.BrowserSource	file:
outputDuration	ObsNvenc/inc/nvEncodeAPI.h	/^    uint64_t                outputDuration;              \/**< [out]: Presentation duration associates with the encoded output. *\/$/;"	m	struct:_NV_ENC_LOCK_BITSTREAM
outputFormat	libfaac/include/faaccfg.h	/^    unsigned int outputFormat;$/;"	m	struct:faacEncConfiguration
outputFramePackingSEI	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t outputFramePackingSEI     :1;                          \/**< [in]: Set to 1 to enable writing of frame packing arrangement SEI messages to bitstream *\/$/;"	m	struct:_NV_ENC_CONFIG_H264
outputFrameSize	Source/Encoder_MP3.cpp	/^    UINT outputFrameSize;$/;"	m	class:MP3Encoder	file:
outputList	DShowPlugin/DShowPlugin.cpp	/^    List<MediaOutputInfo> outputList;$/;"	m	struct:ConfigDialogData	file:
outputPictureTimingSEI	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t outputPictureTimingSEI    :1;                          \/**< [in]: Set to 1 to write SEI picture timing syntax in the bitstream *\/ $/;"	m	struct:_NV_ENC_CONFIG_H264
outputRecoveryPointSEI	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t outputRecoveryPointSEI    :1;                          \/**< [in]: Set to 1 to enable writing of recovery point SEI message *\/$/;"	m	struct:_NV_ENC_CONFIG_H264
outputSize	Source/Encoder_AAC.cpp	/^    DWORD outputSize;$/;"	m	class:AACEncoder	file:
outputSurface	ObsNvenc/inc/NVENCEncoder.h	/^    NV_ENC_OUTPUT_PTR outputSurface;$/;"	m	struct:NVENCEncoderOutputSurface
outputSurfaceQueue	ObsNvenc/inc/NVENCEncoder.h	/^    std::queue<NVENCEncoderOutputSurface*> outputSurfaceQueue;$/;"	m	class:NVENCEncoder
outputSurfaceQueueReady	ObsNvenc/inc/NVENCEncoder.h	/^    std::queue<NVENCEncoderOutputSurface*> outputSurfaceQueueReady;$/;"	m	class:NVENCEncoder
outputSurfaces	ObsNvenc/inc/NVENCEncoder.h	/^    NVENCEncoderOutputSurface *outputSurfaces;$/;"	m	class:NVENCEncoder
outputTimeStamp	ObsNvenc/inc/nvEncodeAPI.h	/^    uint64_t                outputTimeStamp;             \/**< [out]: Presentation timestamp associated with the encoded output. *\/$/;"	m	struct:_NV_ENC_LOCK_BITSTREAM
output_caps_t	lame/dshow/Mpegac.h	/^} output_caps_t;$/;"	t
output_frames	libsamplerate/samplerate.h	/^	long	input_frames, output_frames ;$/;"	m
output_frames_gen	libsamplerate/samplerate.h	/^	long	input_frames_used, output_frames_gen ;$/;"	m
ov_enc	lame/libmp3lame/util.h	/^        EncResult_t ov_enc;$/;"	m	struct:lame_internal_flags
ov_psy	lame/libmp3lame/util.h	/^        PsyResult_t ov_psy;$/;"	m	struct:lame_internal_flags
ov_rpg	lame/libmp3lame/util.h	/^        RpgResult_t ov_rpg;$/;"	m	struct:lame_internal_flags
over	lame/libmp3lame/lame-analysis.h	/^    int     over[2][2];$/;"	m	struct:plotting_data
over_SSD	lame/libmp3lame/lame-analysis.h	/^    int     over_SSD[2][2];$/;"	m	struct:plotting_data
over_SSD	lame/libmp3lame/quantize_pvt.h	/^    int     over_SSD;        \/* SSD-like cost of distorted bands *\/$/;"	m	struct:calc_noise_result_t
over_count	lame/libmp3lame/quantize_pvt.h	/^    int     over_count;      \/* number of quantization noise > masking *\/$/;"	m	struct:calc_noise_result_t
over_noise	lame/libmp3lame/lame-analysis.h	/^    double  over_noise[2][2];$/;"	m	struct:plotting_data
over_noise	lame/libmp3lame/quantize_pvt.h	/^    FLOAT   over_noise;      \/* sum of quantization noise > masking *\/$/;"	m	struct:calc_noise_result_t
overlapBuff	libfaac/frame.h	/^    double *overlapBuff[MAX_CHANNELS];$/;"	m
override	ObsNvenc/inc/NVENCEncoder.h	/^    bool Encode(LPVOID picIn, List<DataPacket> &packets, List<PacketType> &packetTypes, DWORD timestamp, DWORD &out_pts) override;$/;"	m	class:NVENCEncoder
override	Source/D3D10System.h	/^    virtual Shader*         CreatePixelShaderFromBlob(ShaderBlob const &blob, CTSTR lpShader, CTSTR lpFileName) override;$/;"	m	class:D3D10System
override	Source/D3D10System.h	/^    virtual Shader*         CreateVertexShaderFromBlob(ShaderBlob const &blob, CTSTR lpShader, CTSTR lpFileName) override;$/;"	m	class:D3D10System
override	Source/D3D10System.h	/^    virtual void CreatePixelShaderBlob(std::vector<char> &blob, CTSTR lpShader, CTSTR lpFileName) override;$/;"	m	class:D3D10System
override	Source/D3D10System.h	/^    virtual void CreateVertexShaderBlob(std::vector<char> &blob, CTSTR lpShader, CTSTR lpFileName) override;$/;"	m	class:D3D10System
override	Source/Settings.h	/^    virtual CTSTR GetCategory() const override;$/;"	m	class:SettingsHotkeys
override	Source/Settings.h	/^    virtual CTSTR GetCategory() const override;$/;"	m	class:SettingsQSV
override	Source/Settings.h	/^    virtual HWND CreatePane(HWND parentHwnd) override;$/;"	m	class:SettingsHotkeys
override	Source/Settings.h	/^    virtual HWND CreatePane(HWND parentHwnd) override;$/;"	m	class:SettingsQSV
override	Source/Settings.h	/^    virtual INT_PTR ProcMessage(UINT message, WPARAM wParam, LPARAM lParam) override;$/;"	m	class:SettingsHotkeys
override	Source/Settings.h	/^    virtual INT_PTR ProcMessage(UINT message, WPARAM wParam, LPARAM lParam) override;$/;"	m	class:SettingsQSV
override	Source/Settings.h	/^    virtual bool HasDefaults() const override;$/;"	m	class:SettingsHotkeys
override	Source/Settings.h	/^    virtual bool HasDefaults() const override;$/;"	m	class:SettingsQSV
override	Source/Settings.h	/^    virtual void ApplySettings() override;$/;"	m	class:SettingsHotkeys
override	Source/Settings.h	/^    virtual void ApplySettings() override;$/;"	m	class:SettingsQSV
override	Source/Settings.h	/^    virtual void CancelSettings() override;$/;"	m	class:SettingsHotkeys
override	Source/Settings.h	/^    virtual void CancelSettings() override;$/;"	m	class:SettingsQSV
override	Source/Settings.h	/^    virtual void DestroyPane() override;$/;"	m	class:SettingsHotkeys
override	Source/Settings.h	/^    virtual void DestroyPane() override;$/;"	m	class:SettingsQSV
override	Source/Settings.h	/^    virtual void OptimizeSettings() override;$/;"	m	class:SettingsPublish
override	Source/Settings.h	/^    virtual ~SettingsHotkeys() override;$/;"	m	class:SettingsHotkeys
override	Source/Settings.h	/^    virtual ~SettingsQSV() override;$/;"	m	class:SettingsQSV
overscanInfo	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t    overscanInfo;                         \/**< [in]: Specifies the overscan info(as defined in Annex E of the ITU-T Specification). *\/$/;"	m	struct:_NV_ENC_CONFIG_H264_VUI_PARAMETERS
overscanInfoPresentFlag	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t    overscanInfoPresentFlag;              \/**< [in]: if set to 1 , it specifies that the overscanInfo is present *\/$/;"	m	struct:_NV_ENC_CONFIG_H264_VUI_PARAMETERS
p	Source/mongoose.c	/^  const char *p;$/;"	m	struct:ns_str	file:
p	lame/doc/html/detailed.html	/^<a name="p"><span class="hilight">-p<\/span><\/a> CRC error detection  $/;"	a
p	lame/frontend/rtp.c	/^    int     p:1;             \/* is there padding appended: 0 *\/$/;"	m	struct:rtpbits	file:
p	librtmp/dh.h	/^    MP_t p;$/;"	m	struct:MDH
p	librtmp/handshake.h	/^    uint32_t p[BF_ROUNDS+2];$/;"	m	struct:bf_key
pAddress	minhook/src/buffer.cpp	/^		void*	pAddress;$/;"	m	struct:MinHook::<anonymous>::MEMORY_BLOCK	file:
pBackup	minhook/src/hook.cpp	/^		void*	pBackup;$/;"	m	struct:MinHook::<anonymous>::HOOK_ENTRY	file:
pBits	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    void*               pBits;$/;"	m	struct:_D3DLOCKED_BOX
pBits	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    void*               pBits;$/;"	m	struct:_D3DLOCKED_RECT
pChange	scenesw/SceneSwitcher.h	/^    bool pChange;$/;"	m	class:SceneSwitcherSettings
pCopyData	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^void                    *pCopyData = NULL;$/;"	v
pDetour	minhook/src/hook.cpp	/^		void*	pDetour;$/;"	m	struct:MinHook::<anonymous>::HOOK_ENTRY	file:
pDevice	QSVHelper/IntelSupport/include/d3d11_allocator.h	/^    ID3D11Device *pDevice;$/;"	m	struct:D3D11AllocatorParams
pDirtyRects	extras/dxgi1_2.h	/^    RECT *pDirtyRects;$/;"	m	struct:DXGI_PRESENT_PARAMETERS
pFlags	librtmp/rtmp.h	/^        int pFlags;$/;"	m	struct:RTMP_LNK
pId	QSVHelper/IntelSupport/include/d3d11_allocator.h	/^        mfxMemId pId;$/;"	m	struct:MFXReadWriteMid::mfxMedIdEx
pName	libmfx/include/mfx_dispatcher.h	/^    const char *pName;$/;"	m	struct:FUNCTION_DESCRIPTION
pNvEnc	ObsNvenc/src/nvEncodeAPI.cpp	/^NV_ENCODE_API_FUNCTION_LIST *pNvEnc = 0;$/;"	v
pNvencDevices	ObsNvenc/src/nvEncodeAPI.cpp	/^CUdevice pNvencDevices[16];$/;"	v
pOpenProcess	GraphicsCapture/GraphicsCaptureSource.cpp	/^    OPPROC pOpenProcess;$/;"	m	struct:FindWindowData	file:
pRelay	minhook/src/hook.cpp	/^		void*	pRelay;$/;"	m	struct:MinHook::<anonymous>::HOOK_ENTRY	file:
pScrollOffset	extras/dxgi1_2.h	/^    POINT *pScrollOffset;$/;"	m	struct:DXGI_PRESENT_PARAMETERS
pScrollRect	extras/dxgi1_2.h	/^    RECT *pScrollRect;$/;"	m	struct:DXGI_PRESENT_PARAMETERS
pSysMemBuffer	ObsNvenc/inc/nvEncodeAPI.h	/^    void*                     pSysMemBuffer;           \/**< [in]: Pointer to existing sysmem buffer *\/$/;"	m	struct:_NV_ENC_CREATE_INPUT_BUFFER
pTable	minhook/src/hook.cpp	/^		void*	pTable;$/;"	m	struct:MinHook::<anonymous>::HOOK_ENTRY	file:
pTable	minhook/src/trampoline.h	/^		void*					pTable;$/;"	m	struct:MinHook::CREATE_TREMPOLINE_T
pTarget	minhook/src/hook.cpp	/^		void*	pTarget;$/;"	m	struct:MinHook::<anonymous>::HOOK_ENTRY	file:
pTarget	minhook/src/trampoline.h	/^		void*					pTarget;$/;"	m	struct:MinHook::CREATE_TREMPOLINE_T
pTrampoline	minhook/src/hook.cpp	/^		void*	pTrampoline;$/;"	m	struct:MinHook::<anonymous>::HOOK_ENTRY	file:
pTrampoline	minhook/src/trampoline.h	/^		void*					pTrampoline;$/;"	m	struct:MinHook::CREATE_TREMPOLINE_T
p_66	minhook/src/HDE32/hde32.h	/^    uint8_t p_66;$/;"	m
p_66	minhook/src/HDE64/include/hde64.h	/^    uint8_t p_66;$/;"	m
p_67	minhook/src/HDE32/hde32.h	/^    uint8_t p_67;$/;"	m
p_67	minhook/src/HDE64/include/hde64.h	/^    uint8_t p_67;$/;"	m
p_UTCoffset	librtmp/amf.h	/^        int16_t p_UTCoffset;$/;"	m	struct:AMFObjectProperty
p_aval	librtmp/amf.h	/^            AVal p_aval;$/;"	m	union:AMFObjectProperty::<anonymous>
p_checkNVENCHardwareSupport	Source/Encoder_NVENC.cpp	/^static PCHECKNVENCHARDWARESUPPORT p_checkNVENCHardwareSupport = NULL;$/;"	v	file:
p_createNVENCEncoder	Source/Encoder_NVENC.cpp	/^static PCREATENVENCENCODER p_createNVENCEncoder = NULL;$/;"	v	file:
p_lock	minhook/src/HDE32/hde32.h	/^    uint8_t p_lock;$/;"	m
p_lock	minhook/src/HDE64/include/hde64.h	/^    uint8_t p_lock;$/;"	m
p_log_private	x264/x264.h	/^    void        *p_log_private;$/;"	m	struct:x264_param_t
p_name	librtmp/amf.h	/^        AVal p_name;$/;"	m	struct:AMFObjectProperty
p_number	librtmp/amf.h	/^            double p_number;$/;"	m	union:AMFObjectProperty::<anonymous>
p_nvencModule	Source/Encoder_NVENC.cpp	/^static HMODULE p_nvencModule = NULL;$/;"	v	file:
p_object	librtmp/amf.h	/^            AMFObject p_object;$/;"	m	union:AMFObjectProperty::<anonymous>
p_payload	x264/x264.h	/^    uint8_t *p_payload;$/;"	m
p_rep	minhook/src/HDE32/hde32.h	/^    uint8_t p_rep;$/;"	m
p_rep	minhook/src/HDE64/include/hde64.h	/^    uint8_t p_rep;$/;"	m
p_seg	minhook/src/HDE32/hde32.h	/^    uint8_t p_seg;$/;"	m
p_seg	minhook/src/HDE64/include/hde64.h	/^    uint8_t p_seg;$/;"	m
p_type	librtmp/amf.h	/^        AMFDataType p_type;$/;"	m	struct:AMFObjectProperty
p_vu	librtmp/amf.h	/^        } p_vu;$/;"	m	struct:AMFObjectProperty
packetSize	librtmp/rtmp.c	/^static const int packetSize[] = { 12, 8, 4, 1 };$/;"	v	file:
packetWaitType	Source/RTMPPublisher.h	/^    int packetWaitType;$/;"	m	class:RTMPPublisher
packets	Source/OBS.h	/^    List<VideoPacketData> packets;$/;"	m	struct:VideoSegment
packets	Source/ReplayBuffer.cpp	/^    packet_list_t packets;$/;"	m	struct:ReplayBuffer	file:
packets_mutex	Source/ReplayBuffer.cpp	/^    unique_ptr<void, MutexDeleter> packets_mutex;$/;"	m	struct:RecordingHelper	file:
pad-id3v2	lame/doc/html/detailed.html	/^<a name="pad-id3v2"><span class="hilight">--pad-id3v2<\/span><\/a> Pad ID3v2 tag.  $/;"	a
padding	lame/libmp3lame/lame-analysis.h	/^    int     crc, padding;$/;"	m	struct:plotting_data
padding	lame/libmp3lame/util.h	/^        int     padding;     \/* padding for the current frame? *\/$/;"	m
padding	lame/mpglib/mpg123.h	/^    int     padding;$/;"	m	struct:frame
padding_size	lame/libmp3lame/id3tag.h	/^    unsigned int padding_size;$/;"	m	struct:id3tag_spec
padshNext	lame/ACM/ddk/msacmdrv.h	/^    LPACMDRVSTREAMHEADER    padshNext;      \/\/ for async driver queueing$/;"	m	struct:tACMDRVSTREAMHEADER
pageUrl	Source/RTMPStuff.h	/^SAVC(pageUrl);$/;"	v
pageUrl	librtmp/rtmp.c	/^SAVC(pageUrl);$/;"	v
pageUrl	librtmp/rtmp.h	/^        AVal pageUrl;$/;"	m	struct:RTMP_LNK
paired_ch	libfaac/channels.h	/^    int paired_ch;$/;"	m
parallelCalls	OBSApi/Utility/Profiler.h	/^    DWORD parallelCalls;$/;"	m	class:ProfilerNode
param	Source/API.cpp	/^    UPARAM param;$/;"	m	struct:HotkeyInfo	file:
param	x264/x264.h	/^    struct x264_param_t *param;$/;"	m
param	x264/x264.h	/^    x264_param_t *param;$/;"	m
param1	lame/misc/ath.c	/^    long double    param1;$/;"	m	file:
param2	lame/misc/ath.c	/^    long double    param2;$/;"	m	file:
paramData	Source/Encoder_x264.cpp	/^    x264_param_t paramData;$/;"	m	class:X264Encoder	file:
param_free	x264/x264.h	/^    void (*param_free)( void* );$/;"	m	struct:x264_param_t
parameter_control_ids	Source/SettingsQSV.cpp	/^    int parameter_control_ids[] = {$/;"	v
params	QSVHelper/Encoder.h	/^    Parameters params;$/;"	m	struct:Encoder
params	QSVHelper/QSVStuff.h	/^    mfxVideoParam params;$/;"	m	struct:Parameters
parent	NoiseGate/NoiseGate.h	/^    NoiseGate *     parent;$/;"	m	class:NoiseGateFilter
parent	NoiseGate/NoiseGate.h	/^    NoiseGate * parent;$/;"	m	class:NoiseGateSettings
parent	OBSApi/Scene.h	/^    Scene *parent;$/;"	m	class:SceneItem
parent	OBSApi/Utility/Profiler.cpp	/^    ProfileNodeInfo *parent;$/;"	m	struct:ProfileNodeInfo	file:
parent	OBSApi/Utility/Profiler.h	/^    ProfilerNode *parent;$/;"	m	class:ProfilerNode
parent	OBSApi/Utility/XConfig.h	/^    XElement *parent;$/;"	m	class:XElement
parent	lame/ACM/tinyxml/tinyxml.h	/^	TiXmlNode*		parent;		$/;"	m	class:TiXmlNode
parse.c	lame/frontend/parse.c	1;"	F
parse.h	lame/frontend/parse.h	1;"	F
parseAMF	librtmp/rtmp.c	/^parseAMF(AMFObject *obj, AVal *av, int *depth)$/;"	f	file:
parse_aiff_header	lame/frontend/get_audio.c	/^parse_aiff_header(lame_global_flags * gfp, FILE * sf)$/;"	f	file:
parse_args	lame/frontend/parse.c	/^parse_args(lame_global_flags * gfp, int argc, char **argv,$/;"	f
parse_args_from_string	lame/frontend/lame_main.c	/^parse_args_from_string(lame_global_flags * const gfp, const char *p, char *inPath, char *outPath)$/;"	f	file:
parse_date_string	Source/mongoose.c	/^static time_t parse_date_string(const char *datetime) {$/;"	f	file:
parse_file_header	lame/frontend/get_audio.c	/^parse_file_header(lame_global_flags * gfp, FILE * sf)$/;"	f	file:
parse_header	Source/mongoose.c	/^static int parse_header(const char *str, size_t str_len, const char *var_name,$/;"	f	file:
parse_http_headers	Source/mongoose.c	/^static void parse_http_headers(char **buf, struct mg_connection *ri) {$/;"	f	file:
parse_http_message	Source/mongoose.c	/^static size_t parse_http_message(char *buf, size_t len,$/;"	f	file:
parse_net	Source/mongoose.c	/^static int parse_net(const char *spec, uint32_t *net, uint32_t *mask) {$/;"	f	file:
parse_nogap_filenames	lame/frontend/lame_main.c	/^parse_nogap_filenames(int nogapout, char const *inPath, char *outPath, char *outdir)$/;"	f	file:
parse_range_header	Source/mongoose.c	/^static int parse_range_header(const char *header, int64_t *a, int64_t *b) {$/;"	f	file:
parse_wave_header	lame/frontend/get_audio.c	/^parse_wave_header(lame_global_flags * gfp, FILE * sf)$/;"	f	file:
parseurl.c	librtmp/parseurl.c	1;"	F
part2_3_length	lame/libmp3lame/l3side.h	/^    int     part2_3_length;$/;"	m
part2_3_length	lame/mpglib/mpg123.h	/^    unsigned part2_3_length;$/;"	m	struct:gr_info_s
part2_length	lame/libmp3lame/l3side.h	/^    int     part2_length;$/;"	m
partType	ObsNvenc/inc/nvEncodeAPI.h	/^    int32_t    partType    : 2;                         \/**< [in]: Specifies the bloack partition type.0=16x16 1=16x8 2=8x16 3=8x8 (blocks in partition must be consecutive).*\/$/;"	m	struct:_NVENC_EXTERNAL_ME_HINT
patch	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^PatchInfo patch[NUM_KNOWN_PATCHES] =$/;"	v
patchAbove	minhook/src/hook.cpp	/^		bool	patchAbove;$/;"	m	struct:MinHook::<anonymous>::HOOK_ENTRY	file:
patchAbove	minhook/src/trampoline.h	/^		bool					patchAbove;$/;"	m	struct:MinHook::CREATE_TREMPOLINE_T
patchData	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^    const BYTE *patchData;$/;"	m	struct:PatchInfo	file:
patchSize	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^    size_t patchSize;$/;"	m	struct:PatchInfo	file:
patchType	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^int                     patchType = 0;$/;"	v
patch_compare	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^BYTE patch_compare[NUM_KNOWN_PATCHES][PATCH_COMPARE_SIZE] =$/;"	v
patch_offsets	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^UPARAM patch_offsets[NUM_KNOWN_PATCHES] = {\/*0x4B55F,*\/ 0x54FE6, 0x55095, 0x550C5, 0x8BDB5, 0x8E635, 0x90352, 0x9038A, 0x93AFA, 0x93B8A, 0x1841E5};$/;"	v
patch_offsets	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^UPARAM patch_offsets[NUM_KNOWN_PATCHES] = {\/*0x4BDA1,*\/ 0x79AA6, 0x79C9E, 0x79D96, 0x7F9BD, 0x8A3F4, 0x8E9F7, 0x8F00F, 0x8FBB1, 0x90264, 0x166A08};$/;"	v
pathKeyName	libmfx/src/mfx_library_iterator.cpp	/^wchar_t pathKeyName[] = L"Path";$/;"	v
path_info	Source/mongoose.c	/^  char *path_info;$/;"	m	struct:connection	file:
pause	librtmp/rtmp.c	/^SAVC(pause);$/;"	v
payload	ObsNvenc/inc/nvEncodeAPI.h	/^    uint8_t *payload;                \/**< [in] pointer to user data *\/$/;"	m	struct:_NV_ENC_H264_SEI_PAYLOAD
payload	x264/x264.h	/^    uint8_t *payload;$/;"	m
payloadSize	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t payloadSize;            \/**< [in] SEI payload size in bytes. SEI payload must be byte aligned, as described in Annex D *\/$/;"	m	struct:_NV_ENC_H264_SEI_PAYLOAD
payloadType	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t payloadType;            \/**< [in] SEI payload types and syntax can be found in Annex D of the H.264 Specification. *\/$/;"	m	struct:_NV_ENC_H264_SEI_PAYLOAD
payload_list	QSVHelper/QSVStuff.h	/^    std::vector<mfxPayload*> payload_list;$/;"	m	struct:EncodeCtrl
payload_long	lame/libmp3lame/quantize_pvt.c	/^static float const payload_long[2][4] = $/;"	v	file:
payload_short	lame/libmp3lame/quantize_pvt.c	/^static float const payload_short[2][4] = $/;"	v	file:
payload_size	x264/x264.h	/^    int payload_size;$/;"	m
payload_type	x264/x264.h	/^    int payload_type;$/;"	m
payloads	QSVHelper/QSVStuff.h	/^    std::vector<mfxPayload> payloads;$/;"	m	struct:EncodeCtrl
payloads	x264/x264.h	/^    x264_sei_payload_t *payloads;$/;"	m
pbDst	lame/ACM/ddk/msacmdrv.h	/^    LPBYTE                  pbDst;$/;"	m	struct:tACMDRVSTREAMHEADER
pbPreparedDst	lame/ACM/ddk/msacmdrv.h	/^    LPBYTE                  pbPreparedDst;$/;"	m	struct:tACMDRVSTREAMHEADER
pbPreparedSrc	lame/ACM/ddk/msacmdrv.h	/^    LPBYTE                  pbPreparedSrc;$/;"	m	struct:tACMDRVSTREAMHEADER
pbSrc	lame/ACM/ddk/msacmdrv.h	/^    LPBYTE                  pbSrc;$/;"	m	struct:tACMDRVSTREAMHEADER
pc	minhook/src/trampoline.h	/^		size_t		pc;$/;"	m	struct:MinHook::TEMP_ADDR
pclose	Source/mongoose.c	1331;"	d	file:
pclose	Source/mongoose.c	1342;"	d	file:
pcm16	lame/frontend/get_audio.c	/^    PcmBuffer pcm16;$/;"	m	struct:get_audio_global_data_struct	file:
pcm32	lame/frontend/get_audio.c	/^    PcmBuffer pcm32;$/;"	m	struct:get_audio_global_data_struct	file:
pcm_double_type	lame/libmp3lame/lame.c	/^,   pcm_double_type$/;"	e	enum:PCMSampleType	file:
pcm_float_type	lame/libmp3lame/lame.c	/^,   pcm_float_type$/;"	e	enum:PCMSampleType	file:
pcm_int_type	lame/libmp3lame/lame.c	/^,   pcm_int_type$/;"	e	enum:PCMSampleType	file:
pcm_is_ieee_float	lame/frontend/get_audio.c	/^    int     pcm_is_ieee_float;$/;"	m	struct:get_audio_global_data_struct	file:
pcm_is_unsigned_8bit	lame/frontend/get_audio.c	/^    int     pcm_is_unsigned_8bit;$/;"	m	struct:get_audio_global_data_struct	file:
pcm_long_type	lame/libmp3lame/lame.c	/^,   pcm_long_type$/;"	e	enum:PCMSampleType	file:
pcm_short_type	lame/libmp3lame/lame.c	/^{   pcm_short_type$/;"	e	enum:PCMSampleType	file:
pcm_transform	lame/libmp3lame/util.h	/^        FLOAT   pcm_transform[2][2];$/;"	m
pcmbitwidth	lame/frontend/get_audio.c	/^    int     pcmbitwidth;$/;"	m	struct:get_audio_global_data_struct	file:
pcmbox	lame/frontend/gtkanal.c	/^GtkWidget *pcmbox;           \/* PCM data plotted here *\/$/;"	v
pcmdata	lame/libmp3lame/lame-analysis.h	/^    double  pcmdata[2][1600];$/;"	m	struct:plotting_data
pcmdata2	lame/libmp3lame/lame-analysis.h	/^    double  pcmdata2[2][1152 + 1152 - DECDELAY];$/;"	m	struct:plotting_data
pcmswapbytes	lame/frontend/get_audio.c	/^    int     pcmswapbytes;$/;"	m	struct:get_audio_global_data_struct	file:
pcpx	libfaac/kiss_fft/_kiss_fft_guts.h	96;"	d
pdfdir	lame/ACM/ADbg/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	lame/ACM/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	lame/ACM/ddk/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	lame/ACM/tinyxml/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	lame/Dll/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	lame/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	lame/debian/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	lame/doc/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	lame/doc/html/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	lame/doc/man/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	lame/dshow/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	lame/frontend/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	lame/include/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	lame/libmp3lame/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	lame/libmp3lame/i386/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	lame/libmp3lame/vector/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	lame/mac/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	lame/macosx/English.lproj/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	lame/macosx/LAME.xcodeproj/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	lame/macosx/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	lame/misc/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	lame/mpglib/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	lame/vc_solution/Makefile	/^pdfdir = ${docdir}$/;"	m
pe	lame/libmp3lame/lame-analysis.h	/^    double  pe[2][4];$/;"	m	struct:plotting_data
pecalc_l	lame/libmp3lame/psymodel.c	/^pecalc_l(III_psy_ratio const *mr, FLOAT masking_lower)$/;"	f	file:
pecalc_s	lame/libmp3lame/psymodel.c	/^pecalc_s(III_psy_ratio const *mr, FLOAT masking_lower)$/;"	f	file:
pefirbuf	lame/libmp3lame/util.h	/^        FLOAT   pefirbuf[19];$/;"	m
penalties	lame/libmp3lame/quantize.c	/^penalties(double noise)$/;"	f	file:
pendingAudioFrames	Source/OBS.h	/^    List<FrameAudio> pendingAudioFrames;$/;"	m	class:OBS
pendingStreams	Source/OBS.h	/^    } pendingStreams;$/;"	m	class:OBS
pendingTexture	CLRBrowserSourcePlugin/Plugin/BrowserSource.cs	/^        private TextureDesc pendingTexture;$/;"	f	class:CLRBrowserSourcePlugin.BrowserSource	file:
pendingTextureLock	CLRBrowserSourcePlugin/Plugin/BrowserSource.cs	/^        private Object pendingTextureLock = new Object();$/;"	f	class:CLRBrowserSourcePlugin.BrowserSource	file:
performTransition	Source/OBS.h	/^    bool    performTransition;$/;"	m	class:OBS
pf_log	x264/x264.h	/^    void        (*pf_log)( void *, int i_level, const char *psz, va_list );$/;"	m	struct:x264_param_t
pgf	lame/dshow/Encoder.h	/^    lame_global_flags * pgf;$/;"	m	class:CEncoder
phase	lame/misc/ath.c	/^    long double    phase;$/;"	m	file:
phase0	lame/misc/ath.c	/^    phase0   = 2, $/;"	e	file:
phase180	lame/misc/ath.c	/^    phase180 = 4, $/;"	e	file:
phase90	lame/misc/ath.c	/^    phase90  = 3, $/;"	e	file:
phasemod	lame/misc/ath.c	/^    phasemod = 5 $/;"	e	file:
pi_nal	Source/Encoder_x264.cpp	/^    int pi_nal;$/;"	m	class:X264Encoder	file:
pic	Source/OBSVideoCapture.cpp	/^    EncoderPicture *pic;$/;"	m	struct:FrameProcessInfo	file:
picIdx	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t            picIdx;                          \/**< [out]: Picture number *\/$/;"	m	struct:_NV_ENC_STAT
picOut	Source/Encoder_x264.cpp	/^    x264_picture_t picOut;$/;"	m	class:X264Encoder	file:
picOut	Source/OBSVideoCapture.cpp	/^    x264_picture_t *picOut;$/;"	m	struct:EncoderPicture	file:
picType	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t            picType;                         \/**< [out]: Picture type of encoded picture. See ::NV_ENC_PIC_TYPE. *\/$/;"	m	struct:_NV_ENC_STAT
pic_struct	QSVHelper/IPCStructs.h	/^    mfxU16 pic_struct, frame_type;$/;"	m	struct:bitstream_info
pic_struct_e	x264/x264.h	/^enum pic_struct_e$/;"	g
pictureStruct	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_PIC_STRUCT                           pictureStruct;                  \/**< [in]: Specifies structure of the input picture. *\/$/;"	m	struct:_NV_ENC_PIC_PARAMS
pictureStruct	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_PIC_STRUCT       pictureStruct;               \/**< [out]: Structure of the generated output picture. *\/$/;"	m	struct:_NV_ENC_LOCK_BITSTREAM
pictureType	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_PIC_TYPE                             pictureType;                    \/**< [in]: Specifies input picture type. Client required to be set explicitly by the client if the client has not set NV_ENC_INITALIZE_PARAMS::enablePTD to 1 while calling NvInitializeEncoder. *\/$/;"	m	struct:_NV_ENC_PIC_PARAMS
pictureType	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_PIC_TYPE         pictureType;                 \/**< [out]: Picture type of the encoded picture. *\/$/;"	m	struct:_NV_ENC_LOCK_BITSTREAM
pin	DShowPlugin/CaptureFilter.h	/^    CapturePin *pin;$/;"	m	class:CaptureEnumMediaTypes
pin	DShowPlugin/CaptureFilter.h	/^    CapturePin *pin;$/;"	m	class:CaptureFilter
pinfo	lame/frontend/gtkanal.c	/^plotting_data *pinfo;$/;"	v
pinfo	lame/libmp3lame/util.h	/^        plotting_data *pinfo;$/;"	m	struct:lame_internal_flags
pinfo	lame/mpglib/mpglib.h	/^    plotting_data *pinfo;$/;"	m	struct:mpstr_tag
ping	librtmp/rtmp.c	/^SAVC(ping);$/;"	v
ping_idle_websocket_connection	Source/mongoose.c	/^static void ping_idle_websocket_connection(struct connection *conn, time_t t) {$/;"	f	file:
ping_idle_websocket_connection	Source/mongoose.c	3205;"	d	file:
pitch	DShowPlugin/DeviceSource.h	/^    UINT   pitch;$/;"	m	struct:ConvertData
pitch	GraphicsCapture/GlobalCaptureStuff.h	/^    UINT    pitch;$/;"	m	struct:CaptureInfo
pitch	GraphicsCapture/MemoryCapture.h	/^    UINT pitch;$/;"	m	class:MemoryCapture
pitch	OBSApi/Utility/XMath.h	/^            float pitch;$/;"	m	struct:Euler::<anonymous>::<anonymous>
pitch	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                    pitch;                          \/**< [in]: Input buffer Pitch.  *\/$/;"	m	struct:_NV_ENC_REGISTER_RESOURCE
pitch	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                  pitch;                     \/**< [out]: Pitch of the locked input buffer. *\/$/;"	m	struct:_NV_ENC_LOCK_INPUT_BUFFER
pitch	libfaac/ltp.c	/^static int pitch(double *sb_samples, double *x_buffer, int flen, int lag0, int lag1,$/;"	f	file:
pixelData	GraphicsCapture/GraphicsCaptureHook/D3D8Capture.cpp	/^void* pixelData = NULL;$/;"	v
pixelFormat	GraphicsCapture/GraphicsCaptureHook/D3D8Capture.cpp	/^D3DFORMAT pixelFormat = D3DFMT_UNKNOWN;$/;"	v
pixelFormatIsSupported	GraphicsCapture/GraphicsCaptureHook/D3D8Capture.cpp	/^bool pixelFormatIsSupported(D3DFORMAT format)$/;"	f
pixelShader	DShowPlugin/DeviceSource.h	/^        FuturePixelShader           pixelShader;$/;"	m	struct:DeviceSource::<anonymous>
pixelShader	Source/D3D10System.h	/^    ID3D10PixelShader *pixelShader;$/;"	m	class:D3D10PixelShader
pixmapboxes	lame/frontend/gpkplotting.c	/^static GtkWidget *pixmapboxes[10];$/;"	v	file:
pixmaps	lame/frontend/gpkplotting.c	/^static GdkPixmap *pixmaps[10];$/;"	v	file:
pkgdatadir	lame/ACM/ADbg/Makefile	/^pkgdatadir = $(datadir)\/lame$/;"	m
pkgdatadir	lame/ACM/Makefile	/^pkgdatadir = $(datadir)\/lame$/;"	m
pkgdatadir	lame/ACM/ddk/Makefile	/^pkgdatadir = $(datadir)\/lame$/;"	m
pkgdatadir	lame/ACM/tinyxml/Makefile	/^pkgdatadir = $(datadir)\/lame$/;"	m
pkgdatadir	lame/Dll/Makefile	/^pkgdatadir = $(datadir)\/lame$/;"	m
pkgdatadir	lame/Makefile	/^pkgdatadir = $(datadir)\/lame$/;"	m
pkgdatadir	lame/debian/Makefile	/^pkgdatadir = $(datadir)\/lame$/;"	m
pkgdatadir	lame/doc/Makefile	/^pkgdatadir = $(datadir)\/lame$/;"	m
pkgdatadir	lame/doc/html/Makefile	/^pkgdatadir = $(datadir)\/lame$/;"	m
pkgdatadir	lame/doc/man/Makefile	/^pkgdatadir = $(datadir)\/lame$/;"	m
pkgdatadir	lame/dshow/Makefile	/^pkgdatadir = $(datadir)\/lame$/;"	m
pkgdatadir	lame/frontend/Makefile	/^pkgdatadir = $(datadir)\/lame$/;"	m
pkgdatadir	lame/include/Makefile	/^pkgdatadir = $(datadir)\/lame$/;"	m
pkgdatadir	lame/libmp3lame/Makefile	/^pkgdatadir = $(datadir)\/lame$/;"	m
pkgdatadir	lame/libmp3lame/i386/Makefile	/^pkgdatadir = $(datadir)\/lame$/;"	m
pkgdatadir	lame/libmp3lame/vector/Makefile	/^pkgdatadir = $(datadir)\/lame$/;"	m
pkgdatadir	lame/mac/Makefile	/^pkgdatadir = $(datadir)\/lame$/;"	m
pkgdatadir	lame/macosx/English.lproj/Makefile	/^pkgdatadir = $(datadir)\/lame$/;"	m
pkgdatadir	lame/macosx/LAME.xcodeproj/Makefile	/^pkgdatadir = $(datadir)\/lame$/;"	m
pkgdatadir	lame/macosx/Makefile	/^pkgdatadir = $(datadir)\/lame$/;"	m
pkgdatadir	lame/misc/Makefile	/^pkgdatadir = $(datadir)\/lame$/;"	m
pkgdatadir	lame/mpglib/Makefile	/^pkgdatadir = $(datadir)\/lame$/;"	m
pkgdatadir	lame/vc_solution/Makefile	/^pkgdatadir = $(datadir)\/lame$/;"	m
pkgdocdir	lame/doc/html/Makefile	/^pkgdocdir = $(docdir)\/$(PACKAGE)$/;"	m
pkghtml_DATA	lame/doc/html/Makefile	/^pkghtml_DATA = \\$/;"	m
pkghtmldir	lame/doc/html/Makefile	/^pkghtmldir = $(pkgdocdir)\/html$/;"	m
pkginclude_HEADERS	lame/include/Makefile	/^pkginclude_HEADERS = lame.h$/;"	m
pkgincludedir	lame/ACM/ADbg/Makefile	/^pkgincludedir = $(includedir)\/lame$/;"	m
pkgincludedir	lame/ACM/Makefile	/^pkgincludedir = $(includedir)\/lame$/;"	m
pkgincludedir	lame/ACM/ddk/Makefile	/^pkgincludedir = $(includedir)\/lame$/;"	m
pkgincludedir	lame/ACM/tinyxml/Makefile	/^pkgincludedir = $(includedir)\/lame$/;"	m
pkgincludedir	lame/Dll/Makefile	/^pkgincludedir = $(includedir)\/lame$/;"	m
pkgincludedir	lame/Makefile	/^pkgincludedir = $(includedir)\/lame$/;"	m
pkgincludedir	lame/debian/Makefile	/^pkgincludedir = $(includedir)\/lame$/;"	m
pkgincludedir	lame/doc/Makefile	/^pkgincludedir = $(includedir)\/lame$/;"	m
pkgincludedir	lame/doc/html/Makefile	/^pkgincludedir = $(includedir)\/lame$/;"	m
pkgincludedir	lame/doc/man/Makefile	/^pkgincludedir = $(includedir)\/lame$/;"	m
pkgincludedir	lame/dshow/Makefile	/^pkgincludedir = $(includedir)\/lame$/;"	m
pkgincludedir	lame/frontend/Makefile	/^pkgincludedir = $(includedir)\/lame$/;"	m
pkgincludedir	lame/include/Makefile	/^pkgincludedir = $(includedir)\/lame$/;"	m
pkgincludedir	lame/libmp3lame/Makefile	/^pkgincludedir = $(includedir)\/lame$/;"	m
pkgincludedir	lame/libmp3lame/i386/Makefile	/^pkgincludedir = $(includedir)\/lame$/;"	m
pkgincludedir	lame/libmp3lame/vector/Makefile	/^pkgincludedir = $(includedir)\/lame$/;"	m
pkgincludedir	lame/mac/Makefile	/^pkgincludedir = $(includedir)\/lame$/;"	m
pkgincludedir	lame/macosx/English.lproj/Makefile	/^pkgincludedir = $(includedir)\/lame$/;"	m
pkgincludedir	lame/macosx/LAME.xcodeproj/Makefile	/^pkgincludedir = $(includedir)\/lame$/;"	m
pkgincludedir	lame/macosx/Makefile	/^pkgincludedir = $(includedir)\/lame$/;"	m
pkgincludedir	lame/misc/Makefile	/^pkgincludedir = $(includedir)\/lame$/;"	m
pkgincludedir	lame/mpglib/Makefile	/^pkgincludedir = $(includedir)\/lame$/;"	m
pkgincludedir	lame/vc_solution/Makefile	/^pkgincludedir = $(includedir)\/lame$/;"	m
pkglibdir	lame/ACM/ADbg/Makefile	/^pkglibdir = $(libdir)\/lame$/;"	m
pkglibdir	lame/ACM/Makefile	/^pkglibdir = $(libdir)\/lame$/;"	m
pkglibdir	lame/ACM/ddk/Makefile	/^pkglibdir = $(libdir)\/lame$/;"	m
pkglibdir	lame/ACM/tinyxml/Makefile	/^pkglibdir = $(libdir)\/lame$/;"	m
pkglibdir	lame/Dll/Makefile	/^pkglibdir = $(libdir)\/lame$/;"	m
pkglibdir	lame/Makefile	/^pkglibdir = $(libdir)\/lame$/;"	m
pkglibdir	lame/debian/Makefile	/^pkglibdir = $(libdir)\/lame$/;"	m
pkglibdir	lame/doc/Makefile	/^pkglibdir = $(libdir)\/lame$/;"	m
pkglibdir	lame/doc/html/Makefile	/^pkglibdir = $(libdir)\/lame$/;"	m
pkglibdir	lame/doc/man/Makefile	/^pkglibdir = $(libdir)\/lame$/;"	m
pkglibdir	lame/dshow/Makefile	/^pkglibdir = $(libdir)\/lame$/;"	m
pkglibdir	lame/frontend/Makefile	/^pkglibdir = $(libdir)\/lame$/;"	m
pkglibdir	lame/include/Makefile	/^pkglibdir = $(libdir)\/lame$/;"	m
pkglibdir	lame/libmp3lame/Makefile	/^pkglibdir = $(libdir)\/lame$/;"	m
pkglibdir	lame/libmp3lame/i386/Makefile	/^pkglibdir = $(libdir)\/lame$/;"	m
pkglibdir	lame/libmp3lame/vector/Makefile	/^pkglibdir = $(libdir)\/lame$/;"	m
pkglibdir	lame/mac/Makefile	/^pkglibdir = $(libdir)\/lame$/;"	m
pkglibdir	lame/macosx/English.lproj/Makefile	/^pkglibdir = $(libdir)\/lame$/;"	m
pkglibdir	lame/macosx/LAME.xcodeproj/Makefile	/^pkglibdir = $(libdir)\/lame$/;"	m
pkglibdir	lame/macosx/Makefile	/^pkglibdir = $(libdir)\/lame$/;"	m
pkglibdir	lame/misc/Makefile	/^pkglibdir = $(libdir)\/lame$/;"	m
pkglibdir	lame/mpglib/Makefile	/^pkglibdir = $(libdir)\/lame$/;"	m
pkglibdir	lame/vc_solution/Makefile	/^pkglibdir = $(libdir)\/lame$/;"	m
pkglibexecdir	lame/ACM/ADbg/Makefile	/^pkglibexecdir = $(libexecdir)\/lame$/;"	m
pkglibexecdir	lame/ACM/Makefile	/^pkglibexecdir = $(libexecdir)\/lame$/;"	m
pkglibexecdir	lame/ACM/ddk/Makefile	/^pkglibexecdir = $(libexecdir)\/lame$/;"	m
pkglibexecdir	lame/ACM/tinyxml/Makefile	/^pkglibexecdir = $(libexecdir)\/lame$/;"	m
pkglibexecdir	lame/Dll/Makefile	/^pkglibexecdir = $(libexecdir)\/lame$/;"	m
pkglibexecdir	lame/Makefile	/^pkglibexecdir = $(libexecdir)\/lame$/;"	m
pkglibexecdir	lame/debian/Makefile	/^pkglibexecdir = $(libexecdir)\/lame$/;"	m
pkglibexecdir	lame/doc/Makefile	/^pkglibexecdir = $(libexecdir)\/lame$/;"	m
pkglibexecdir	lame/doc/html/Makefile	/^pkglibexecdir = $(libexecdir)\/lame$/;"	m
pkglibexecdir	lame/doc/man/Makefile	/^pkglibexecdir = $(libexecdir)\/lame$/;"	m
pkglibexecdir	lame/dshow/Makefile	/^pkglibexecdir = $(libexecdir)\/lame$/;"	m
pkglibexecdir	lame/frontend/Makefile	/^pkglibexecdir = $(libexecdir)\/lame$/;"	m
pkglibexecdir	lame/include/Makefile	/^pkglibexecdir = $(libexecdir)\/lame$/;"	m
pkglibexecdir	lame/libmp3lame/Makefile	/^pkglibexecdir = $(libexecdir)\/lame$/;"	m
pkglibexecdir	lame/libmp3lame/i386/Makefile	/^pkglibexecdir = $(libexecdir)\/lame$/;"	m
pkglibexecdir	lame/libmp3lame/vector/Makefile	/^pkglibexecdir = $(libexecdir)\/lame$/;"	m
pkglibexecdir	lame/mac/Makefile	/^pkglibexecdir = $(libexecdir)\/lame$/;"	m
pkglibexecdir	lame/macosx/English.lproj/Makefile	/^pkglibexecdir = $(libexecdir)\/lame$/;"	m
pkglibexecdir	lame/macosx/LAME.xcodeproj/Makefile	/^pkglibexecdir = $(libexecdir)\/lame$/;"	m
pkglibexecdir	lame/macosx/Makefile	/^pkglibexecdir = $(libexecdir)\/lame$/;"	m
pkglibexecdir	lame/misc/Makefile	/^pkglibexecdir = $(libexecdir)\/lame$/;"	m
pkglibexecdir	lame/mpglib/Makefile	/^pkglibexecdir = $(libexecdir)\/lame$/;"	m
pkglibexecdir	lame/vc_solution/Makefile	/^pkglibexecdir = $(libexecdir)\/lame$/;"	m
plane	x264/x264.h	/^    uint8_t *plane[4];   \/* Pointers to each plane *\/$/;"	m
platforms	QSVHelper/QSVHelper.cpp	/^        int platforms;$/;"	m	struct:<anonymous>::impl_parameters	file:
play	Source/RTMPStuff.h	/^SAVC(play);$/;"	v
play	librtmp/rtmp.c	/^SAVC(play);$/;"	v
play_soundcard	lame/misc/ath.c	/^int  play_soundcard    ( soundcard_t* const k, stereo_t* samples, size_t length )$/;"	f
playbackDevices	Source/Settings.h	/^        AudioDeviceList playbackDevices;$/;"	m	struct:SettingsAudio::AudioDeviceStorage
playlist_ready	librtmp/rtmp.c	/^SAVC(playlist_ready);$/;"	v
playpath	librtmp/rtmp.h	/^        AVal playpath;	\/* passed in explicitly *\/$/;"	m	struct:RTMP_LNK
playpath0	librtmp/rtmp.h	/^        AVal playpath0;	\/* parsed from URL *\/$/;"	m	struct:RTMP_LNK
plgParams	libmfx/include/mfx_load_plugin.h	/^            mfxPluginParam plgParams;$/;"	m	struct:MFX::MFXPluginFactory::FactoryRecord
plot_frame	lame/frontend/gtkanal.c	/^plot_frame(void)$/;"	f
plotclick	lame/frontend/gtkanal.c	/^plotclick(GtkWidget * widget, gpointer data)$/;"	f	file:
plotting_data	lame/libmp3lame/lame-analysis.h	/^struct plotting_data {$/;"	s
plotting_data	lame/libmp3lame/lame-analysis.h	/^typedef struct plotting_data plotting_data;$/;"	t
plotting_data	lame/libmp3lame/util.h	/^    typedef struct plotting_data plotting_data;$/;"	t
plotting_data	lame/mpglib/mpglib.h	/^typedef struct plotting_data plotting_data;$/;"	t
plotting_data_defined	lame/libmp3lame/lame-analysis.h	90;"	d
plotting_data_defined	lame/libmp3lame/util.h	115;"	d
plotting_data_defined	lame/mpglib/mpglib.h	27;"	d
plugin	libmfx/include/mfx_load_plugin.h	/^            mfxPlugin plugin;$/;"	m	struct:MFX::MFXPluginFactory::FactoryRecord
pluginCfgFileName	libmfx/src/mfx_plugin_hive.cpp	/^    const wchar_t pluginCfgFileName[] = L"plugin.cfg";$/;"	v
pluginCfgFileNameLen	libmfx/src/mfx_plugin_hive.cpp	/^    const mfxU32 pluginCfgFileNameLen = 10;$/;"	v
pluginDescription	CLRHostPlugin/CLRHostInterop/AbstractPlugin.h	/^        String^ pluginDescription;$/;"	m	class:CLROBS::abstract
pluginDirNameLen	libmfx/src/mfx_plugin_hive.cpp	/^    const mfxU32 pluginDirNameLen = 32;$/;"	v
pluginFactory	libmfx/include/mfx_dispatcher.h	/^    MFX::MFXPluginFactory pluginFactory;$/;"	m	struct:MFX_DISP_HANDLE
pluginFileName	libmfx/src/mfx_plugin_hive.cpp	/^    const wchar_t pluginFileName[] = L"FileName64";$/;"	v
pluginFileNameRestrictedCharacters	libmfx/src/mfx_plugin_hive.cpp	/^    const wchar_t pluginFileNameRestrictedCharacters[] = L"\\\\\/";$/;"	v
pluginHive	libmfx/include/mfx_dispatcher.h	/^    MFX::MFXPluginStorage pluginHive;$/;"	m	struct:MFX_DISP_HANDLE
pluginLocale	DShowPlugin/DShowPlugin.cpp	/^LocaleStringLookup *pluginLocale = NULL;$/;"	v
pluginLocale	PSVPlugin/psvplugin.cpp	/^LocaleStringLookup *pluginLocale = NULL;$/;"	v
pluginLocale	scenesw/SceneSwitcher.h	/^    LocaleStringLookup *pluginLocale;$/;"	m	class:SceneSwitcher
pluginName	CLRHostPlugin/CLRHostInterop/AbstractPlugin.h	/^        String^ pluginName;$/;"	m	class:CLROBS::abstract
pluginSearchPattern	libmfx/src/mfx_plugin_hive.cpp	/^    const wchar_t pluginSearchPattern[] = L"????????????????????????????????";$/;"	v
pluginSubkey	libmfx/src/mfx_plugin_hive.cpp	/^    const wchar_t pluginSubkey[] = L"Plugin";$/;"	v
pluginType	CLRHostPlugin/CLRHostPlugin/CLRHost.h	/^    mscorlib::_Type *pluginType;$/;"	m	class:CLRHost
plugins	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        private List<BrowserPlugin> plugins;$/;"	f	class:Shared.BrowserRuntimeSettings	file:
plugins	Source/OBS.h	/^    List<PluginInfo> plugins;$/;"	m	class:OBS
pnt	lame/mpglib/mpglib.h	/^    unsigned char *pnt;$/;"	m	struct:buf
pnts	lame/mpglib/tabinit.c	/^real   *pnts[] = { cos64, cos32, cos16, cos8, cos4 };$/;"	v
pointer	lame/libmp3lame/util.h	/^        void   *pointer;     \/* to use with malloc\/free *\/$/;"	m
pong	librtmp/rtmp.c	/^SAVC(pong);$/;"	v
popen	Source/mongoose.c	1328;"	d	file:
popen	Source/mongoose.c	1341;"	d	file:
populateEncodePresetGUIDs	ObsNvenc/src/NVENCEncoder.cpp	/^bool NVENCEncoder::populateEncodePresetGUIDs()$/;"	f	class:NVENCEncoder
port	librtmp/rtmp.h	/^        unsigned short port;$/;"	m	struct:RTMP_LNK
pos	OBSApi/Scene.h	/^    Vect2 pos, size;$/;"	m	class:SceneItem
pos	lame/libmp3lame/util.h	/^        int     pos;         \/* actual position in our bag *\/$/;"	m
pos	lame/mpglib/mpglib.h	/^    long    pos;$/;"	m	struct:buf
pos	lame/mpglib/mpglib.h	/^    long    pos;$/;"	m	struct:framebuf
position	OBSApi/Utility/Template.h	/^    DWORD position;$/;"	m	class:BufferInputSerializer
position	OBSApi/Utility/Template.h	/^    DWORD position;$/;"	m	class:BufferOutputSerializer
position	minhook/src/trampoline.h	/^		size_t		position;$/;"	m	struct:MinHook::TEMP_ADDR
pow1_1	lame/mpglib/layer3.c	/^static real pow1_1[2][16], pow2_1[2][16], pow1_2[2][16], pow2_2[2][16];$/;"	v	file:
pow1_2	lame/mpglib/layer3.c	/^static real pow1_1[2][16], pow2_1[2][16], pow1_2[2][16], pow2_2[2][16];$/;"	v	file:
pow20	lame/libmp3lame/quantize_pvt.c	/^FLOAT   pow20[Q_MAX + Q_MAX2 + 1];$/;"	v
pow2_1	lame/mpglib/layer3.c	/^static real pow1_1[2][16], pow2_1[2][16], pow1_2[2][16], pow2_2[2][16];$/;"	v	file:
pow2_2	lame/mpglib/layer3.c	/^static real pow1_1[2][16], pow2_1[2][16], pow1_2[2][16], pow2_2[2][16];$/;"	v	file:
pow2gain	lame/mpglib/mpg123.h	/^    real   *pow2gain;$/;"	m	struct:gr_info_s
pow43	lame/libmp3lame/quantize_pvt.c	/^FLOAT   pow43[PRECALC_SIZE];$/;"	v
pow43	libfaac/aacquant.h	/^    double *pow43;$/;"	m
powf	lame/libmp3lame/machine.h	182;"	d
pp_nal	Source/Encoder_x264.cpp	/^    x264_nal_t *pp_nal;$/;"	m	class:X264Encoder	file:
pplot	lame/frontend/gtkanal.c	/^plotting_data *pplot;$/;"	v
ppsId	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t            ppsId;                           \/**< [in]:  Specifies the PPS id to be used in picture header. Default value is 0.  *\/$/;"	m	struct:_NV_ENC_SEQUENCE_PARAM_PAYLOAD
ppsId	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t ppsId;                                                 \/**< [in]: Specifies the PPS id of the picture header. Currently reserved and must be set to 0. *\/$/;"	m	struct:_NV_ENC_CONFIG_H264
pps_buffer	QSVHelper/Encoder.h	/^    ipc_pps_buff pps_buffer;$/;"	m	struct:Encoder
pps_size	QSVHelper/IPCStructs.h	/^           pps_size;$/;"	m	struct:spspps_size
pred_global_flag	libfaac/coder.h	/^    int pred_global_flag;$/;"	m
pred_sfb_flag	libfaac/coder.h	/^    int pred_sfb_flag[MAX_SCFAC_BANDS];$/;"	m
prediction	libfaac/ltp.c	/^static void prediction(double *buffer, double *predicted_samples, double *weight, int lag,$/;"	f	file:
preferredOutputType	DShowPlugin/DeviceSource.h	/^    UINT            preferredOutputType;$/;"	m	class:DeviceSource
prefix	lame/ACM/ADbg/ADbg.h	/^	char prefix[MAX_PREFIX_LENGTH];$/;"	m	class:ADbg
prefix	lame/ACM/ADbg/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	lame/ACM/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	lame/ACM/ddk/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	lame/ACM/tinyxml/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	lame/Dll/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	lame/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	lame/debian/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	lame/doc/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	lame/doc/html/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	lame/doc/man/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	lame/dshow/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	lame/frontend/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	lame/include/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	lame/libmp3lame/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	lame/libmp3lame/i386/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	lame/libmp3lame/vector/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	lame/mac/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	lame/macosx/English.lproj/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	lame/macosx/LAME.xcodeproj/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	lame/macosx/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	lame/misc/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	lame/mpglib/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	lame/vc_solution/Makefile	/^prefix = \/usr\/local$/;"	m
preflag	lame/libmp3lame/l3side.h	/^    int     preflag;$/;"	m
preflag	lame/libmp3lame/lame-analysis.h	/^    int     preflag[2][2];$/;"	m	struct:plotting_data
preflag	lame/mpglib/mpg123.h	/^    unsigned preflag;$/;"	m	struct:gr_info_s
prepare_cgi_environment	Source/mongoose.c	/^static void prepare_cgi_environment(struct connection *conn,$/;"	f	file:
prepare_data	libsamplerate/src_sinc.c	/^prepare_data (SINC_FILTER *filter, SRC_DATA *data, int half_filter_chan_len)$/;"	f	file:
preprocessMethod	CLRHostPlugin/CLRHostPlugin/CLRImageSource.h	/^    mscorlib::_MethodInfo *preprocessMethod;$/;"	m	class:CLRImageSource
present	libfaac/channels.h	/^    int present;$/;"	m
presentRecurse	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^static int presentRecurse = 0;$/;"	v	file:
preserveInputFormat	DShowPlugin/IVideoCaptureFilter.h	/^    BOOL                                 preserveInputFormat;               \/\/!< Input Format will be preserved (e.g. do not convert interlaced to progressive)$/;"	m	struct:_VIDEO_CAPTURE_FILTER_SETTINGS
preset	ObsNvenc/inc/NVENCEncoder.h	/^    String preset;$/;"	m	class:NVENCEncoder
preset	lame/doc/html/detailed.html	/^<a name="preset"><span class="hilight">--preset x<\/span><\/a> Enable one of the presets$/;"	a
preset	lame/libmp3lame/lame_global_flags.h	/^    int     preset;$/;"	m	struct:lame_global_struct
preset	lame/libmp3lame/util.h	/^        int     preset;$/;"	m
presetCfg	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_CONFIG presetCfg;                             \/**< [out]: preset config returned by the Nvidia Video Encoder interface. *\/$/;"	m	struct:_NV_ENC_PRESET_CONFIG
presetGUID	ObsNvenc/inc/nvEncodeAPI.h	/^    GUID                                       presetGUID;                      \/**< [in]: Specifies the preset for encoding. If the preset GUID is set then , the preset configuration will be applied before any other parameter. *\/$/;"	m	struct:_NV_ENC_INITIALIZE_PARAMS
preset_mode	lame/include/lame.h	/^} preset_mode;$/;"	t
preset_mode_e	lame/include/lame.h	/^typedef enum preset_mode_e {$/;"	g
presets.c	lame/libmp3lame/presets.c	1;"	F
presets_longinfo_dm	lame/frontend/parse.c	/^presets_longinfo_dm(FILE * msgfp)$/;"	f	file:
presets_set	lame/frontend/parse.c	/^presets_set(lame_t gfp, int fast, int cbr, const char *preset_name, const char *ProgramName)$/;"	f	file:
pretab	lame/libmp3lame/quantize_pvt.c	/^const int pretab[SBMAX_l] = {$/;"	v
pretab1	lame/mpglib/layer3.c	/^static const int pretab1 [22] = {0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,2,2,3,3,3,2,0}; \/* char enough ? *\/$/;"	v	file:
pretab2	lame/mpglib/layer3.c	/^static const int pretab2 [22] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};$/;"	v	file:
prev	Source/mongoose.c	/^  struct ns_connection *next, *prev;  \/\/ ns_mgr::active_connections linkage$/;"	m	struct:ns_connection	file:
prev	lame/ACM/tinyxml/tinyxml.h	/^	TiXmlAttribute*	prev;$/;"	m	class:TiXmlAttribute
prev	lame/ACM/tinyxml/tinyxml.h	/^	TiXmlNode*		prev;$/;"	m	class:TiXmlNode
prev	lame/mpglib/mpglib.h	/^    struct buf *prev;$/;"	m	struct:buf
prev	lame/mpglib/mpglib.h	/^    struct frame *prev;$/;"	m	struct:framebuf
prevCX	Source/DesktopImageSource.cpp	/^    int prevCX, prevCY;$/;"	m	struct:ConfigDesktopSourceInfo	file:
prevCY	Source/DesktopImageSource.cpp	/^    int prevCX, prevCY;$/;"	m	struct:ConfigDesktopSourceInfo	file:
prevElapsedTime	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	/^LONGLONG prevElapsedTime;$/;"	v
prevElapsedTime	OBSApi/Utility/XT_Windows.cpp	/^LONGLONG prevElapsedTime;$/;"	v
prevSamples	libfaac/psych.h	/^	double *prevSamples;$/;"	m
prevSamplesS	libfaac/psych.h	/^	double *prevSamplesS;$/;"	m
prev_window_shape	libfaac/coder.h	/^    int prev_window_shape;$/;"	m
previousTexture	DShowPlugin/DeviceSource.h	/^    Texture         *texture, *previousTexture;$/;"	m	class:DeviceSource
primaries	QSVHelper/IPCStructs.h	/^    int32_t full_range, matrix, primaries, transfer;$/;"	m	struct:init_request
primaries	Source/OBS.h	/^    int primaries;$/;"	m	struct:ColorDescription
primary_surface_palette_ref	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	/^    LPDIRECTDRAWPALETTE primary_surface_palette_ref;$/;"	m	class:Palette	file:
printColorFormat	GraphicsCapture/GraphicsCaptureHook/D3D8Capture.cpp	/^void printColorFormat(D3DFORMAT format)$/;"	f
printD3Derror	GraphicsCapture/GraphicsCaptureHook/D3D8Capture.cpp	/^void printD3Derror(string section, HRESULT err)$/;"	f
printDDrawError	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	/^void printDDrawError(HRESULT err, const char* callerName = "")$/;"	f
printDescriptorInfo	GraphicsCapture/GraphicsCaptureHook/D3D8Capture.cpp	/^void printDescriptorInfo(D3DSURFACE_DESC d)$/;"	f
printInputFormat	lame/frontend/lame_main.c	/^printInputFormat(lame_t gfp)$/;"	f	file:
print_clipping_info	lame/frontend/main.h	/^    int   print_clipping_info;      \/* print info whether waveform clips *\/$/;"	m	struct:UiConfig
print_dir_entry	Source/mongoose.c	/^static void print_dir_entry(const struct dir_entry *de) {$/;"	f	file:
print_license	lame/frontend/parse.c	/^print_license(FILE * const fp)$/;"	f	file:
print_props	Source/mongoose.c	/^static void print_props(struct connection *conn, const char *uri,$/;"	f	file:
print_seeking	lame/libmp3lame/VbrTag.c	/^print_seeking(unsigned char *t)$/;"	f	file:
print_socket_error	lame/frontend/rtp.c	/^print_socket_error(int error)$/;"	f	file:
print_trailing_info	lame/frontend/lame_main.c	/^print_trailing_info(lame_global_flags * gf)$/;"	f	file:
printnumber	lame/misc/abx.c	/^void  printnumber ( long double x )$/;"	f
priority	Source/OBS.h	/^    StreamInfoPriority priority;$/;"	m	struct:StreamInfo
priority	lame/doc/html/detailed.html	/^<a name="priority"><span class="hilight">--priority value<\/span><\/a> Set process priority$/;"	a
prios	librtmp/rtmp_sys.h	/^    gnutls_priority_t prios;$/;"	m	struct:tls_ctx
privData	ObsNvenc/inc/nvEncodeAPI.h	/^    void*                                      privData;                        \/**< [in]: Reserved private data buffer and must be set to NULL *\/$/;"	m	struct:_NV_ENC_INITIALIZE_PARAMS
privDataSize	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                                   privDataSize;                    \/**< [in]: Reserved private data buffer size and must be set to 0 *\/$/;"	m	struct:_NV_ENC_INITIALIZE_PARAMS
priv_key	librtmp/dh.h	/^    MP_t priv_key;$/;"	m	struct:MDH
private_bits	lame/libmp3lame/l3side.h	/^    int     private_bits;$/;"	m
private_bits	lame/mpglib/mpg123.h	/^    unsigned private_bits;$/;"	m	struct:III_sideinfo
private_data	libsamplerate/common.h	/^	void	*private_data ;$/;"	m	struct:SRC_PRIVATE_tag
prob	lame/misc/abx.c	/^long double  prob ( int last, int total )$/;"	f
proc_time	lame/frontend/timestatus.c	/^    timestatus_t proc_time;$/;"	m	struct:EncoderProgress	file:
processName	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	/^char processName[MAX_PATH];$/;"	v
process_id_t	Source/mongoose.c	/^typedef HANDLE process_id_t;$/;"	t	file:
process_id_t	Source/mongoose.c	/^typedef pid_t process_id_t;$/;"	t	file:
process_mutex	OBSApi/Utility/XT.cpp	/^        std::unique_ptr<void, MutexDeleter> append_mutex, process_mutex, read_mutex;$/;"	m	struct:<anonymous>::XStringLog	file:
process_response	Source/mongoose.c	/^static void process_response(struct connection *conn) {$/;"	f	file:
process_udp	Source/mongoose.c	/^static void process_udp(struct ns_connection *nc) {$/;"	f	file:
process_waiter	Source/Encoder_QSV.cpp	/^    IPCWaiter process_waiter,$/;"	m	class:QSVEncoder	file:
processing	OBSApi/Utility/XT.cpp	/^        StringList unprocessed, processing;$/;"	m	struct:<anonymous>::XStringLog	file:
processor	DShowPlugin/DShowPlugin.h	/^    int    type, fieldOrder, processor;$/;"	m	struct:DeinterlacerConfig
processor	DShowPlugin/DeviceSource.h	/^        char                        processor; \/\/DeinterlacingProcessor$/;"	m	struct:DeviceSource::<anonymous>
profile	DShowPlugin/IVideoCaptureFilter.h	/^    VIDEO_CAPTURE_FILTER_VID_ENC_PROFILE profile;                           \/\/!< Video encoder profile (maximum resolution)$/;"	m	struct:_VIDEO_CAPTURE_FILTER_SETTINGS
profile	QSVHelper/IPCStructs.h	/^    mfxU16 target_usage, profile;$/;"	m	struct:init_response
profile	QSVHelper/IPCStructs.h	/^    uint16_t target_usage, profile;$/;"	m	struct:init_request
profile	Source/Encoder_QSV.cpp	/^    mfxU16 target_usage, profile,$/;"	m	class:QSVEncoder	file:
profileGUID	ObsNvenc/inc/nvEncodeAPI.h	/^    GUID                            profileGUID;                                 \/**< [in]: Specifies the codec profile guid. If client specifies \\p NV_ENC_CODEC_PROFILE_AUTOSELECT_GUID the NvEncodeAPI interface will select the appropriate codec profile. *\/$/;"	m	struct:_NV_ENC_CONFIG
profileIn	OBSApi/Utility/Profiler.h	54;"	d
profileIn	OBSApi/Utility/Profiler.h	61;"	d
profileOut	OBSApi/Utility/Profiler.h	55;"	d
profileOut	OBSApi/Utility/Profiler.h	62;"	d
profileParallelSegment	OBSApi/Utility/Profiler.h	53;"	d
profileParallelSegment	OBSApi/Utility/Profiler.h	60;"	d
profileSegment	OBSApi/Utility/Profiler.h	52;"	d
profileSegment	OBSApi/Utility/Profiler.h	59;"	d
profileSingularIn	OBSApi/Utility/Profiler.h	51;"	d
profileSingularIn	OBSApi/Utility/Profiler.h	58;"	d
profileSingularSegment	OBSApi/Utility/Profiler.h	50;"	d
profileSingularSegment	OBSApi/Utility/Profiler.h	57;"	d
profilerData	OBSApi/Utility/Profiler.cpp	/^    static List<ProfileNodeInfo> profilerData;$/;"	m	struct:ProfileNodeInfo	file:
profilerData	OBSApi/Utility/Profiler.cpp	/^List<ProfileNodeInfo> ProfileNodeInfo::profilerData;$/;"	m	class:ProfileNodeInfo	file:
program_transform_name	lame/ACM/ADbg/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	lame/ACM/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	lame/ACM/ddk/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	lame/ACM/tinyxml/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	lame/Dll/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	lame/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	lame/debian/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	lame/doc/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	lame/doc/html/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	lame/doc/man/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	lame/dshow/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	lame/frontend/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	lame/include/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	lame/libmp3lame/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	lame/libmp3lame/i386/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	lame/libmp3lame/vector/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	lame/mac/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	lame/macosx/English.lproj/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	lame/macosx/LAME.xcodeproj/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	lame/macosx/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	lame/misc/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	lame/mpglib/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	lame/vc_solution/Makefile	/^program_transform_name = s,x,x,$/;"	m
progress_line	lame/frontend/brhist.c	/^progress_line(const lame_global_flags * gf, int full, int frames)$/;"	f	file:
projectorHeight	Source/OBS.h	/^    UINT    projectorWidth, projectorHeight;$/;"	m	class:OBS
projectorMonitorID	Source/OBS.h	/^    UINT    projectorMonitorID;$/;"	m	class:OBS
projectorSwap	Source/OBS.h	/^    IDXGISwapChain  *projectorSwap;$/;"	m	class:OBS
projectorTexture	Source/OBS.h	/^    Texture *projectorTexture;$/;"	m	class:OBS
projectorWidth	Source/OBS.h	/^    UINT    projectorWidth, projectorHeight;$/;"	m	class:OBS
projectorX	Source/OBS.h	/^    UINT    projectorX, projectorY;$/;"	m	class:OBS
projectorY	Source/OBS.h	/^    UINT    projectorX, projectorY;$/;"	m	class:OBS
prop	x264/x264.h	/^    x264_image_properties_t prop;$/;"	m
protect	minhook/src/buffer.cpp	/^		DWORD	protect;$/;"	m	struct:MinHook::<anonymous>::MEMORY_BLOCK	file:
proto_data	Source/mongoose.c	/^  void *proto_data;           \/\/ Application protocol-specific data$/;"	m	struct:ns_connection	file:
protocol	librtmp/rtmp.h	/^        int protocol;$/;"	m	struct:RTMP_LNK
proxify_connection	Source/mongoose.c	/^static void proxify_connection(struct connection *conn) {$/;"	f	file:
proxy_request	Source/mongoose.c	/^static void proxy_request(struct ns_connection *pc, struct mg_connection *c) {$/;"	f	file:
psdir	lame/ACM/ADbg/Makefile	/^psdir = ${docdir}$/;"	m
psdir	lame/ACM/Makefile	/^psdir = ${docdir}$/;"	m
psdir	lame/ACM/ddk/Makefile	/^psdir = ${docdir}$/;"	m
psdir	lame/ACM/tinyxml/Makefile	/^psdir = ${docdir}$/;"	m
psdir	lame/Dll/Makefile	/^psdir = ${docdir}$/;"	m
psdir	lame/Makefile	/^psdir = ${docdir}$/;"	m
psdir	lame/debian/Makefile	/^psdir = ${docdir}$/;"	m
psdir	lame/doc/Makefile	/^psdir = ${docdir}$/;"	m
psdir	lame/doc/html/Makefile	/^psdir = ${docdir}$/;"	m
psdir	lame/doc/man/Makefile	/^psdir = ${docdir}$/;"	m
psdir	lame/dshow/Makefile	/^psdir = ${docdir}$/;"	m
psdir	lame/frontend/Makefile	/^psdir = ${docdir}$/;"	m
psdir	lame/include/Makefile	/^psdir = ${docdir}$/;"	m
psdir	lame/libmp3lame/Makefile	/^psdir = ${docdir}$/;"	m
psdir	lame/libmp3lame/i386/Makefile	/^psdir = ${docdir}$/;"	m
psdir	lame/libmp3lame/vector/Makefile	/^psdir = ${docdir}$/;"	m
psdir	lame/mac/Makefile	/^psdir = ${docdir}$/;"	m
psdir	lame/macosx/English.lproj/Makefile	/^psdir = ${docdir}$/;"	m
psdir	lame/macosx/LAME.xcodeproj/Makefile	/^psdir = ${docdir}$/;"	m
psdir	lame/macosx/Makefile	/^psdir = ${docdir}$/;"	m
psdir	lame/misc/Makefile	/^psdir = ${docdir}$/;"	m
psdir	lame/mpglib/Makefile	/^psdir = ${docdir}$/;"	m
psdir	lame/vc_solution/Makefile	/^psdir = ${docdir}$/;"	m
pseudoMFXCloneSession	libmfx/src/mfx_function_table.cpp	/^mfxStatus pseudoMFXCloneSession(mfxSession session, mfxSession *clone)$/;"	f
pseudoMFXClose	libmfx/src/mfx_function_table.cpp	/^mfxStatus pseudoMFXClose(mfxSession session)$/;"	f
pseudoMFXInit	libmfx/src/mfx_function_table.cpp	/^mfxStatus pseudoMFXInit(mfxIMPL impl, mfxVersion *ver, mfxSession *session)$/;"	f
pseudoMFXJoinSession	libmfx/src/mfx_function_table.cpp	/^mfxStatus pseudoMFXJoinSession(mfxSession session, mfxSession child_session)$/;"	f
pseudohalf	lame/libmp3lame/util.h	/^        int     pseudohalf[SFBMAX];$/;"	m
psfb12	lame/libmp3lame/l3side.h	/^    int     psfb12[1 + PSFB12];$/;"	m
psfb12	lame/libmp3lame/util.h	/^        FLOAT   psfb12[PSFB12]; \/* ATH for partitionned sfb12 in short blocks *\/$/;"	m
psfb21	lame/libmp3lame/l3side.h	/^    int     psfb21[1 + PSFB21];$/;"	m
psfb21	lame/libmp3lame/util.h	/^        FLOAT   psfb21[PSFB21]; \/* ATH for partitionned sfb21 in long blocks *\/$/;"	m
psfb21_analogsilence	lame/libmp3lame/quantize.c	/^psfb21_analogsilence(lame_internal_flags const *gfc, gr_info * const cod_info)$/;"	f	file:
psrc_set_converter	libsamplerate/samplerate.c	/^psrc_set_converter (SRC_PRIVATE	*psrc, int converter_type)$/;"	f	file:
pstart	ObsNvenc/inc/NVENCEncoder.h	/^    uint8_t *pstart;$/;"	m	class:NVENCEncoder
pstdint.h	minhook/src/pstdint.h	1;"	F
psvplugin.cpp	PSVPlugin/psvplugin.cpp	1;"	F
psvplugin.h	PSVPlugin/psvplugin.h	1;"	F
psyInfo	libfaac/frame.h	/^    PsyInfo psyInfo[MAX_CHANNELS];$/;"	m
psy_alpha	lame/include/lame.h	/^    int psy_alpha;           \/* 0 if not an alpha version                  *\/$/;"	m
psy_beta	lame/include/lame.h	/^    int psy_beta;            \/* 0 if not a beta version                    *\/$/;"	m
psy_init_mc	libfaac/coder.h	/^    int psy_init_mc;$/;"	m
psy_lmax	lame/libmp3lame/l3side.h	/^    int     psy_lmax;$/;"	m
psy_major	lame/include/lame.h	/^    int psy_major;$/;"	m
psy_minor	lame/include/lame.h	/^    int psy_minor;$/;"	m
psych.h	libfaac/psych.h	1;"	F
psychkni.c	libfaac/psychkni.c	1;"	F
psycho_loudness_approx	lame/libmp3lame/psymodel.c	/^psycho_loudness_approx(FLOAT const *energy, FLOAT const *eql_w)$/;"	f	file:
psydata_t	libfaac/psychkni.c	/^psydata_t;$/;"	t	file:
psyfloat	libfaac/psychkni.c	/^typedef float psyfloat;$/;"	t	file:
psymax	lame/libmp3lame/l3side.h	/^    int     psymax;$/;"	m
psymodel	libfaac/frame.h	/^    psymodel_t *psymodel;$/;"	m
psymodel.c	lame/libmp3lame/psymodel.c	1;"	F
psymodel.h	lame/libmp3lame/psymodel.h	1;"	F
psymodel2	libfaac/psychkni.c	/^psymodel_t psymodel2 =$/;"	v
psymodel_init	lame/libmp3lame/psymodel.c	/^psymodel_init(lame_global_flags const *gfp)$/;"	f
psymodel_t	libfaac/psych.h	/^} psymodel_t;$/;"	t
psymodelidx	libfaac/include/faaccfg.h	/^    unsigned int psymodelidx;$/;"	m	struct:faacEncConfiguration
psymodellist	libfaac/frame.c	/^static const psymodellist_t psymodellist[] = {$/;"	v	file:
psymodellist	libfaac/include/faaccfg.h	/^    psymodellist_t *psymodellist;$/;"	m	struct:faacEncConfiguration
psymodellist_t	libfaac/frame.h	/^} psymodellist_t;$/;"	t
psymodellist_t	libfaac/include/faac.h	/^psymodellist_t;$/;"	t
pszAliasName	lame/ACM/ddk/msacmdrv.h	/^    LPCWSTR         pszAliasName;   \/\/ see DRVCONFIGINFO.lpszDCIAliasName$/;"	m	struct:tACMDRVOPENDESC
pszSectionName	lame/ACM/ddk/msacmdrv.h	/^    LPCWSTR         pszSectionName; \/\/ see DRVCONFIGINFO.lpszDCISectionName$/;"	m	struct:tACMDRVOPENDESC
psz_clbin_file	x264/x264.h	/^    char *psz_clbin_file;    \/* filename (in UTF-8) of the compiled OpenCL kernel cache file *\/$/;"	m	struct:x264_param_t
psz_cqm_file	x264/x264.h	/^    char        *psz_cqm_file;      \/* filename (in UTF-8) of CQM file, JM format *\/$/;"	m	struct:x264_param_t
psz_dump_yuv	x264/x264.h	/^    char        *psz_dump_yuv;  \/* filename (in UTF-8) for reconstructed frames *\/$/;"	m	struct:x264_param_t
psz_stat_in	x264/x264.h	/^        char        *psz_stat_in;   \/* input filename (in UTF-8) of the 2pass stats file *\/$/;"	m	struct:x264_param_t::<anonymous>
psz_stat_out	x264/x264.h	/^        char        *psz_stat_out;  \/* output filename (in UTF-8) of the 2pass stats file *\/$/;"	m	struct:x264_param_t::<anonymous>
psz_zones	x264/x264.h	/^        char        *psz_zones;     \/* alternate method of specifying zones *\/$/;"	m	struct:x264_param_t::<anonymous>
pt	lame/frontend/rtp.c	/^    int     pt:7;            \/* payload type: 14 for MPEG audio *\/$/;"	m	struct:rtpbits	file:
pthis	libmfx/include/msdk/include/mfxplugin.h	/^    mfxHDL pthis;$/;"	m	struct:mfxCoreInterface
pthis	libmfx/include/msdk/include/mfxplugin.h	/^    mfxHDL pthis;$/;"	m	struct:mfxPlugin
pthis	libmfx/include/msdk/include/mfxvideo.h	/^    mfxHDL      pthis;$/;"	m
ptr	OBSApi/Utility/ComPtr.hpp	/^	T *ptr;$/;"	m	class:ComPtr
ptr	OBSApi/Utility/XMath.cpp	/^    float ptr[4][4];$/;"	m	struct:f4x4	file:
ptr	OBSApi/Utility/XMath.h	/^        float ptr[2];$/;"	m	union:Vect2::<anonymous>
ptr	OBSApi/Utility/XMath.h	/^        float ptr[3];$/;"	m	union:Euler::<anonymous>
ptr	OBSApi/Utility/XMath.h	/^        float ptr[4];$/;"	m	union:AxisAngle::<anonymous>
ptr	OBSApi/Utility/XMath.h	/^        float ptr[4];$/;"	m	union:Quat::<anonymous>
ptr	OBSApi/Utility/XMath.h	/^        float ptr[4];$/;"	m	union:Vect4::<anonymous>
ptr	OBSApi/Utility/XMath.h	/^        float ptr[4];$/;"	m	union:Vect::<anonymous>
ptr	QSVHelper/ComPtr.hpp	/^	T *ptr;$/;"	m	class:ComPtr
ptr	Source/mongoose.c	/^  const char *ptr;$/;"	m	struct:vec	file:
ptr	lame/libmp3lame/id3tag.h	/^        } ptr;$/;"	m	struct:FrameDataNode::<anonymous>
ptr	lame/libmp3lame/util.h	/^            int     ptr;$/;"	m
ptr	libfaac/include/faac.h	/^  void *ptr;$/;"	m
pts	Source/OBS.h	/^    DWORD pts;$/;"	m	struct:VideoSegment
pubPasswd	librtmp/rtmp.h	/^        AVal pubPasswd;$/;"	m	struct:RTMP_LNK
pubUser	librtmp/rtmp.h	/^        AVal pubUser;$/;"	m	struct:RTMP_LNK
pub_key	librtmp/dh.h	/^    MP_t pub_key;$/;"	m	struct:MDH
publish	librtmp/rtmp.c	/^SAVC(publish);$/;"	v
pull_from_stdout	Source/mongoose.c	/^static void *pull_from_stdout(void *arg) {$/;"	f	file:
pupdate	lame/frontend/gtkanal.c	/^    int     pupdate;         \/* plot while processing, or only when needed *\/$/;"	m	struct:gtkinfostruct	file:
pushToTalkDelay	Source/OBS.h	/^    long long pushToTalkDelay, pushToTalkTimeLeft;$/;"	m	class:OBS
pushToTalkDown	Source/OBS.h	/^    int pushToTalkDown;$/;"	m	class:OBS
pushToTalkHotkey2ID	Source/OBS.h	/^    UINT pushToTalkHotkeyID, pushToTalkHotkey2ID;$/;"	m	class:OBS
pushToTalkHotkeyID	Source/OBS.h	/^    UINT pushToTalkHotkeyID, pushToTalkHotkey2ID;$/;"	m	class:OBS
pushToTalkTimeLeft	Source/OBS.h	/^    long long pushToTalkDelay, pushToTalkTimeLeft;$/;"	m	class:OBS
push_back	QSVHelper/WindowsStuff.h	/^    void push_back(const HANDLE &h) { list.push_back(h); }$/;"	f	struct:IPCWaiter
push_back	libmfx/include/mfx_vector.h	/^        void push_back(const T& obj) $/;"	f	class:MFX::MFXVector
push_to_stdin	Source/mongoose.c	/^static void *push_to_stdin(void *arg) {$/;"	f	file:
put_audio16	lame/frontend/get_audio.c	/^put_audio16(FILE * outf, short Buffer[2][1152], int iread, int nch)$/;"	f
put_dir	Source/mongoose.c	/^static int put_dir(const char *path) {$/;"	f	file:
putbits2	lame/libmp3lame/bitstream.c	/^putbits2(lame_internal_flags * gfc, int val, int j)$/;"	f	file:
putbits_noheaders	lame/libmp3lame/bitstream.c	/^putbits_noheaders(lame_internal_flags * gfc, int val, int j)$/;"	f	file:
putheader_bits	lame/libmp3lame/bitstream.c	/^putheader_bits(lame_internal_flags * gfc)$/;"	f	file:
pwfltr	lame/ACM/ddk/msacmdrv.h	/^    LPWAVEFILTER        pwfltr;$/;"	m	struct:tACMDRVSTREAMINSTANCE
pwfxDst	lame/ACM/ddk/msacmdrv.h	/^    LPWAVEFORMATEX      pwfxDst;            \/\/ Dest format$/;"	m	struct:tACMDRVFORMATSUGGEST
pwfxDst	lame/ACM/ddk/msacmdrv.h	/^    LPWAVEFORMATEX      pwfxDst;$/;"	m	struct:tACMDRVSTREAMINSTANCE
pwfxSrc	lame/ACM/ddk/msacmdrv.h	/^    LPWAVEFORMATEX      pwfxSrc;            \/\/ Source Format$/;"	m	struct:tACMDRVFORMATSUGGEST
pwfxSrc	lame/ACM/ddk/msacmdrv.h	/^    LPWAVEFORMATEX      pwfxSrc;$/;"	m	struct:tACMDRVSTREAMINSTANCE
q	lame/doc/html/detailed.html	/^<a name="q"><span class="hilight">-q n<\/span><\/a> Algorithm quality selection$/;"	a
qpDeltaMap	ObsNvenc/inc/nvEncodeAPI.h	/^    int8_t                                    *qpDeltaMap;                      \/**< [in]: Specifies the pointer to signed byte array containing QP delta value per MB in raster scan order in the current picture. This QP modifier is applied on top of the QP chosen by rate control. *\/$/;"	m	struct:_NV_ENC_PIC_PARAMS
qpDeltaMapSize	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                                   qpDeltaMapSize;                  \/**< [in]: Specifies the size in bytes of qpDeltaMap surface allocated by client and pointed to by NV_ENC_PIC_PARAMS::qpDeltaMap. Surface (array) should be picWidthInMbs * picHeightInMbs *\/$/;"	m	struct:_NV_ENC_PIC_PARAMS
qpInterB	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t        qpInterB;$/;"	m	struct:_NV_ENC_QP
qpInterP	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t        qpInterP;$/;"	m	struct:_NV_ENC_QP
qpIntra	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t        qpIntra;$/;"	m	struct:_NV_ENC_QP
qpPrimeYZeroTransformBypassFlag	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t qpPrimeYZeroTransformBypassFlag :1;                    \/**< [in]  To enable lossless encode set this to 1, set QP to 0 and RC_mode to NV_ENC_PARAMS_RC_CONSTQP and profile to HIGH_444_PREDICTIVE_PROFILE$/;"	m	struct:_NV_ENC_CONFIG_H264
qss	lame/libmp3lame/lame-analysis.h	/^    int     qss[2][2];$/;"	m	struct:plotting_data
qsv_cpu_platform	QSVHelper/QSVHelper.cpp	/^    enum qsv_cpu_platform$/;"	g	file:
qsv_cpu_platform	Source/Encoder_QSV.cpp	/^    enum qsv_cpu_platform$/;"	g	file:
qsv_get_cpu_platform	QSVHelper/QSVHelper.cpp	/^    qsv_cpu_platform qsv_get_cpu_platform()$/;"	f
qsv_get_cpu_platform	Source/Encoder_QSV.cpp	/^    qsv_cpu_platform qsv_get_cpu_platform()$/;"	f
qsv_intf_str	Source/Encoder_QSV.cpp	/^    CTSTR qsv_intf_str(const mfxU32 impl)$/;"	f
qsv_profile_str	Source/Encoder_QSV.cpp	/^    CTSTR qsv_profile_str(const mfxU16 profile)$/;"	f
qsvhelper_process	Source/Encoder_QSV.cpp	/^    safe_handle qsvhelper_process,$/;"	m	class:QSVEncoder	file:
qsvhelper_thread	Source/Encoder_QSV.cpp	/^                qsvhelper_thread;$/;"	m	class:QSVEncoder	file:
quality	ObsNvenc/inc/NVENCEncoder.h	/^    int quality;$/;"	m	class:NVENCEncoder
quality	lame/libmp3lame/lame_global_flags.h	/^    int     quality;         \/* quality setting 0=best,  9=worst  default=5 *\/$/;"	m	struct:lame_global_struct
quality	libfaac/aacquant.h	/^    double quality;$/;"	m
quant_comp	lame/libmp3lame/lame_global_flags.h	/^    int     quant_comp;$/;"	m	struct:lame_global_struct
quant_comp	lame/libmp3lame/presets.c	/^    int     quant_comp;$/;"	m	file:
quant_comp	lame/libmp3lame/util.h	/^        int     quant_comp;$/;"	m
quant_comp_s	lame/libmp3lame/presets.c	/^    int     quant_comp_s;$/;"	m	file:
quant_comp_short	lame/libmp3lame/lame_global_flags.h	/^    int     quant_comp_short;$/;"	m	struct:lame_global_struct
quant_comp_short	lame/libmp3lame/util.h	/^        int     quant_comp_short;$/;"	m
quant_compare	lame/libmp3lame/quantize.c	/^quant_compare(const int quant_comp,$/;"	f	file:
quant_offsets	x264/x264.h	/^    float *quant_offsets;$/;"	m
quant_offsets_free	x264/x264.h	/^    void (*quant_offsets_free)( void* );$/;"	m
quantize.c	lame/libmp3lame/quantize.c	1;"	F
quantize.h	lame/libmp3lame/quantize.h	1;"	F
quantizeAndCountBits	lame/libmp3lame/vbrquantize.c	/^quantizeAndCountBits(const algo_t * that)$/;"	f	file:
quantize_lines_xrpow	lame/libmp3lame/takehiro.c	/^quantize_lines_xrpow(unsigned int l, FLOAT istep, const FLOAT * xp, int *pi)$/;"	f	file:
quantize_lines_xrpow	lame/libmp3lame/takehiro.c	/^quantize_lines_xrpow(unsigned int l, FLOAT istep, const FLOAT * xr, int *ix)$/;"	f	file:
quantize_lines_xrpow_01	lame/libmp3lame/takehiro.c	/^quantize_lines_xrpow_01(unsigned int l, FLOAT istep, const FLOAT * xr, int *ix)$/;"	f	file:
quantize_pvt.c	lame/libmp3lame/quantize_pvt.c	1;"	F
quantize_pvt.h	lame/libmp3lame/quantize_pvt.h	1;"	F
quantize_x34	lame/libmp3lame/vbrquantize.c	/^quantize_x34(const algo_t * that)$/;"	f	file:
quantize_xrpow	lame/libmp3lame/takehiro.c	/^quantize_xrpow(const FLOAT * xp, int *pi, FLOAT istep, gr_info const *const cod_info,$/;"	f	file:
quantqual	libfaac/include/faaccfg.h	/^    unsigned long quantqual;$/;"	m	struct:faacEncConfiguration
queries	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^IDirect3DQuery9         *queries[NUM_BUFFERS] = ZERO_ARRAY;$/;"	v
query_string	Source/mongoose.h	/^  const char *query_string;   \/\/ URL part after '?', not including '?', or NULL$/;"	m	struct:mg_connection
queueEnable	minhook/src/hook.cpp	/^		bool	queueEnable;$/;"	m	struct:MinHook::<anonymous>::HOOK_ENTRY	file:
queuedPackets	Source/RTMPPublisher.h	/^    List<NetworkPacket> queuedPackets;$/;"	m	class:RTMPPublisher
queued_frame	QSVHelper/IPCStructs.h	/^struct queued_frame$/;"	s
queued_tasks	QSVHelper/Encoder.h	/^    std::queue<size_t> idle_tasks, queued_tasks, encoded_tasks;$/;"	m	struct:Encoder
queued_tasks	Source/Encoder_QSV.cpp	/^    CircularList<unsigned> queued_tasks,$/;"	m	class:QSVEncoder	file:
quickHash	Source/RTMPPublisher.cpp	/^DWORD quickHash (BYTE *data, UINT len)$/;"	f
quiet	lame/doc/html/detailed.html	/^<a name="quiet"><span class="hilight">--quiet<\/span><\/a> Don't print any output in the screen  $/;"	a
quot	extras/inttypes.h	/^   intmax_t quot;$/;"	m
quot	lame/inttypes.h	/^   intmax_t quot;$/;"	m
qwPos	OBSApi/Utility/XFile.h	/^    QWORD qwPos;$/;"	m	class:XFile
r	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    float r;$/;"	m	struct:_D3DCOLORVALUE
r	lame/doc/html/detailed.html	/^<a name="r"><span class="hilight">-r<\/span><\/a> Input file is raw pcm  $/;"	a
r	libfaac/kiss_fft/kiss_fft.h	/^    kiss_fft_scalar r;$/;"	m
random_number	lame/misc/abx.c	/^int  random_number ( void )$/;"	f
rasterizerState	Source/D3D10System.h	/^    ID3D10RasterizerState   *rasterizerState;$/;"	m	class:D3D10System
rateControlMode	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_PARAMS_RC_MODE           rateControlMode;                             \/**< [in]: Specifies the rate control mode. Check support for various rate control modes using ::NV_ENC_CAPS_SUPPORTED_RATECONTROL_MODES caps. *\/$/;"	m	struct:_NV_ENC_RC_PARAMS
rate_control	QSVHelper/IPCStructs.h	/^    decltype(mfxInfoMFX::RateControlMethod) rate_control;$/;"	m	struct:init_response
rate_control	Source/Encoder_QSV.cpp	/^    decltype(mfxInfoMFX::RateControlMethod) rate_control;$/;"	m	class:QSVEncoder	file:
rate_control_str	Source/Encoder_QSV.cpp	/^    } rate_control_str[] = {$/;"	v
raw	QSVHelper/IntelSupport/include/d3d11_allocator.h	/^    mfxMemId raw() const$/;"	f	class:MFXReadWriteMid
rc	x264/x264.h	/^    } rc;$/;"	m	struct:x264_param_t
rc4keyIn	librtmp/rtmp.h	/^        void *rc4keyIn;$/;"	m	struct:RTMP_LNK
rc4keyOut	librtmp/rtmp.h	/^        void *rc4keyOut;$/;"	m	struct:RTMP_LNK
rcParams	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_RC_PARAMS                            rcParams;                       \/**< [in]: Specifies the rate control parameters for the current encoding session. *\/$/;"	m	struct:_NV_ENC_PIC_PARAMS
rcParams	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_RC_PARAMS                rcParams;                                    \/**< [in]: Specifies the rate control parameters for the current encoding session. *\/$/;"	m	struct:_NV_ENC_CONFIG
reInitEncodeParams	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_INITIALIZE_PARAMS                    reInitEncodeParams;$/;"	m	struct:_NV_ENC_RECONFIGURE_PARAMS
reacquireStart	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^LONGLONG reacquireStart = 0;$/;"	v
reacquireTime	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^LONGLONG reacquireTime = 0;$/;"	v
read	QSVHelper/IntelSupport/include/d3d11_allocator.h	/^        read    = 2,$/;"	e	enum:MFXReadWriteMid::<anonymous>
read	Source/mongoose.c	1339;"	d	file:
readBuffer	Source/DSoundAudioSource.cpp	/^    List<float> readBuffer;$/;"	m	class:DSoundAudioSource	file:
read_16_bits_high_low	lame/frontend/get_audio.c	/^read_16_bits_high_low(FILE * fp)$/;"	f	file:
read_16_bits_low_high	lame/frontend/get_audio.c	/^read_16_bits_low_high(FILE * fp)$/;"	f	file:
read_32_bits_high_low	lame/frontend/get_audio.c	/^read_32_bits_high_low(FILE * fp)$/;"	f	file:
read_32_bits_low_high	lame/frontend/get_audio.c	/^read_32_bits_low_high(FILE * fp)$/;"	f	file:
read_buf_byte	lame/mpglib/interface.c	/^read_buf_byte(PMPSTR mp)$/;"	f	file:
read_head	lame/mpglib/interface.c	/^read_head(PMPSTR mp)$/;"	f	file:
read_ieee_extended_high_low	lame/frontend/get_audio.c	/^read_ieee_extended_high_low(FILE * fp)$/;"	f	file:
read_mutex	OBSApi/Utility/XT.cpp	/^        std::unique_ptr<void, MutexDeleter> append_mutex, process_mutex, read_mutex;$/;"	m	struct:<anonymous>::XStringLog	file:
read_samples_mp3	lame/frontend/get_audio.c	/^read_samples_mp3(lame_t gfp, FILE * musicin, short int mpg123pcm[2][1152])$/;"	f	file:
read_samples_pcm	lame/frontend/get_audio.c	/^read_samples_pcm(FILE * musicin, int sample_buffer[2304], int samples_to_read)$/;"	f	file:
read_write	QSVHelper/IntelSupport/include/d3d11_allocator.h	/^        mfxU8 read_write;$/;"	m	struct:MFXReadWriteMid::mfxMedIdEx
readdir	Source/mongoose.c	/^static struct dirent *readdir(DIR *dir) {$/;"	f	file:
readfile	lame/misc/mlame_corr.c	/^void readfile ( const char* name, int fd )$/;"	f
readwave	lame/misc/abx.c	/^int  readwave ( stereo_t* buff, size_t maxlen, const char* name, size_t* len )$/;"	f
readyEvent	OBSApi/GraphicsSystem.h	/^            std::unique_ptr<void, EventDeleter> readyEvent;$/;"	m	struct:GraphicsSystem::FutureShaderContainer::FutureShaderContext
real	lame/mpglib/mpg123.h	67;"	d
real	lame/mpglib/mpg123.h	69;"	d
real	lame/mpglib/mpg123.h	71;"	d
real_time	lame/frontend/timestatus.c	/^    timestatus_t real_time;$/;"	m	struct:EncoderProgress	file:
recalc_divide_init	lame/libmp3lame/takehiro.c	/^recalc_divide_init(const lame_internal_flags * const gfc,$/;"	f	file:
recalc_divide_sub	lame/libmp3lame/takehiro.c	/^recalc_divide_sub(const lame_internal_flags * const gfc,$/;"	f	file:
recip	lame/misc/ath.c	/^    recip     = 5$/;"	e	file:
recip_f	lame/misc/ath.c	/^static long double recip_f         ( long double x ) { return x > 1.L  ?  1.L\/x         :  1.0L; }$/;"	f	file:
reconnectTimeout	Source/OBS.h	/^    UINT    reconnectTimeout;$/;"	m	class:OBS
record	librtmp/rtmp.c	/^SAVC(record);$/;"	v
recordFromReplayBufferHotkeyID	Source/OBS.h	/^    UINT recordFromReplayBufferHotkeyID;$/;"	m	class:OBS
recordingDevices	Source/Settings.h	/^        AudioDeviceList recordingDevices;$/;"	m	struct:SettingsAudio::AudioDeviceStorage
rect	Source/OBS.h	/^    RECT rect;$/;"	m	struct:MonitorInfo
recv_iobuf	Source/mongoose.c	/^  struct iobuf recv_iobuf;    \/\/ Received data$/;"	m	struct:ns_connection	file:
recv_iobuf_limit	Source/mongoose.c	/^  size_t recv_iobuf_limit; \/* Max size of recv buffer *\/$/;"	m	struct:ns_connection	file:
red	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    WORD                red  [256];$/;"	m	struct:_D3DGAMMARAMP
redraw_height	Source/libnsgif.h	/^    unsigned int redraw_height;        \/**< height of redraw rectangle *\/$/;"	m	struct:gif_frame
redraw_required	Source/libnsgif.h	/^    BOOL redraw_required;            \/**< whether a forcable screen redraw is required *\/$/;"	m	struct:gif_frame
redraw_width	Source/libnsgif.h	/^    unsigned int redraw_width;        \/**< width of redraw rectangle *\/$/;"	m	struct:gif_frame
redraw_x	Source/libnsgif.h	/^    unsigned int redraw_x;            \/**< x co-ordinate of redraw rectangle *\/$/;"	m	struct:gif_frame
redraw_y	Source/libnsgif.h	/^    unsigned int redraw_y;            \/**< y co-ordinate of redraw rectangle *\/$/;"	m	struct:gif_frame
reduce_bit_usage	lame/libmp3lame/vbrquantize.c	/^reduce_bit_usage(lame_internal_flags * gfc, int gr, int ch$/;"	f	file:
reduce_side	lame/libmp3lame/quantize_pvt.c	/^reduce_side(int targ_bits[2], FLOAT ms_ener_ratio, int mean_bits, int max_bits)$/;"	f
refCount	DShowPlugin/CaptureFilter.cpp	/^    long refCount = 1;$/;"	m	class:CaptureFlags	file:
refCount	DShowPlugin/CaptureFilter.h	/^    long refCount;$/;"	m	class:CaptureEnumMediaTypes
refCount	DShowPlugin/CaptureFilter.h	/^    long refCount;$/;"	m	class:CaptureEnumPins
refCount	DShowPlugin/CaptureFilter.h	/^    long refCount;$/;"	m	class:CaptureFilter
refCount	DShowPlugin/CaptureFilter.h	/^    long refCount;$/;"	m	class:CapturePin
refPicFlag	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t refPicFlag;                                 \/**< [in]: Set to 1 for a reference picture. This is ignored if NV_ENC_INITIALIZE_PARAMS::enablePTD is set to 1. *\/$/;"	m	struct:_NV_ENC_PIC_PARAMS_H264
referenceType	QSVHelper/IntelSupport/include/d3d11_allocator.h	/^    typedef std::list <TextureResource>::iterator referenceType;$/;"	t	class:D3D11FrameAllocator
refidx	ObsNvenc/inc/nvEncodeAPI.h	/^    int32_t    refidx      : 5;                         \/**< [in]: Specifies the reference index (31=invalid). Current we support only 1 reference frame per direction for external hints, so \\p refidx must be 0. *\/$/;"	m	struct:_NVENC_EXTERNAL_ME_HINT
refs	DShowPlugin/DeviceSource.h	/^    volatile long refs;$/;"	m	struct:SampleData
region0_count	lame/libmp3lame/l3side.h	/^    int     region0_count;$/;"	m
region0_count	lame/libmp3lame/takehiro.c	/^    const int region0_count;$/;"	m	file:
region1_count	lame/libmp3lame/l3side.h	/^    int     region1_count;$/;"	m
region1_count	lame/libmp3lame/takehiro.c	/^    const int region1_count;$/;"	m	file:
region1start	lame/mpglib/mpg123.h	/^    unsigned region1start;$/;"	m	struct:gr_info_s
region2start	lame/mpglib/mpg123.h	/^    unsigned region2start;$/;"	m	struct:gr_info_s
regionWindowData	Source/DesktopImageSource.cpp	/^RegionWindowData regionWindowData;$/;"	v
registeredResource	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_REGISTERED_PTR       registeredResource;             \/**< [out]: Registered resource handle. This should be used in future interactions with the Nvidia Video Encoder Interface. *\/$/;"	m	struct:_NV_ENC_REGISTER_RESOURCE
registeredResource	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_REGISTERED_PTR      registeredResource;        \/**< [in]:  The Registered resource handle obtained by calling NvEncRegisterInputResource. *\/$/;"	m	struct:_NV_ENC_MAP_INPUT_RESOURCE
reinitTimer	Source/MMDeviceAudioSource.cpp	/^    QWORD reinitTimer;$/;"	m	class:MMDeviceAudioSource	file:
reldir	lame/ACM/Makefile	/^  reldir="$$dir2"$/;"	m
reldir	lame/Makefile	/^  reldir="$$dir2"$/;"	m
reldir	lame/doc/Makefile	/^  reldir="$$dir2"$/;"	m
reldir	lame/libmp3lame/Makefile	/^  reldir="$$dir2"$/;"	m
reldir	lame/macosx/Makefile	/^  reldir="$$dir2"$/;"	m
release	QSVHelper/IntelSupport/include/base_allocator.h	/^        T* release()$/;"	f	class:BaseFrameAllocator::safe_array
releaseStream	librtmp/rtmp.c	/^SAVC(releaseStream);$/;"	v
releaseTime	NoiseGate/NoiseGate.h	/^    float   releaseTime;$/;"	m	class:NoiseGate
rem	extras/inttypes.h	/^   intmax_t rem;$/;"	m
rem	lame/inttypes.h	/^   intmax_t rem;$/;"	m
remaining	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/AssetSchemeHandler.cs	/^        private long remaining;$/;"	f	class:RemoteBrowser.AssetSchemeHandler	file:
remote_ip	Source/mongoose.h	/^  char remote_ip[48];         \/\/ Max IPv6 string length is 45 characters$/;"	m	struct:mg_connection
remote_port	Source/mongoose.h	/^  unsigned short remote_port; \/\/ Client's port$/;"	m	struct:mg_connection
remove_buf	lame/mpglib/interface.c	/^remove_buf(PMPSTR mp)$/;"	f
remove_directory	Source/mongoose.c	/^static int remove_directory(const char *dir) {$/;"	f	file:
remove_double_dots_and_double_slashes	Source/mongoose.c	/^static void remove_double_dots_and_double_slashes(char *s) {$/;"	f	file:
renderCX	DShowPlugin/DeviceSource.h	/^    UINT            renderCX, renderCY;$/;"	m	class:DeviceSource
renderCY	DShowPlugin/DeviceSource.h	/^    UINT            renderCX, renderCY;$/;"	m	class:DeviceSource
renderFrameCtrlHeight	Source/OBS.h	/^    int     renderFrameCtrlWidth, renderFrameCtrlHeight; \/\/ The size of the entire preview control$/;"	m	class:OBS
renderFrameCtrlWidth	Source/OBS.h	/^    int     renderFrameCtrlWidth, renderFrameCtrlHeight; \/\/ The size of the entire preview control$/;"	m	class:OBS
renderFrameHeight	Source/OBS.h	/^    int     renderFrameWidth, renderFrameHeight; \/\/ The size of the preview only$/;"	m	class:OBS
renderFrameIn1To1Mode	Source/OBS.h	/^    bool    renderFrameIn1To1Mode;$/;"	m	class:OBS
renderFrameWidth	Source/OBS.h	/^    int     renderFrameWidth, renderFrameHeight; \/\/ The size of the preview only$/;"	m	class:OBS
renderFrameX	Source/OBS.h	/^    int     renderFrameX, renderFrameY; \/\/ The offset of the preview inside the preview control$/;"	m	class:OBS
renderFrameY	Source/OBS.h	/^    int     renderFrameX, renderFrameY; \/\/ The offset of the preview inside the preview control$/;"	m	class:OBS
renderMethod	CLRHostPlugin/CLRHostPlugin/CLRImageSource.h	/^    mscorlib::_MethodInfo *renderMethod;$/;"	m	class:CLRImageSource
renderProcess	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserWrapper.cs	/^        public RenderProcess renderProcess;$/;"	f	class:Browser.BrowserWrapper
renderProcessHandler	CLRBrowserSourcePlugin/Client/BrowserApp.cs	/^        private BrowserRenderProcessHandler renderProcessHandler;$/;"	f	class:Shared.BrowserApp	file:
renderProcessId	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/RenderProcess.cs	/^        private int renderProcessId;$/;"	f	class:Browser.RenderProcess	file:
renderTarget	Source/D3D10System.h	/^    ID3D10RenderTargetView   *renderTarget;$/;"	m	class:D3D10Texture
renderTextures	Source/DesktopImageSource.cpp	/^    Texture *renderTextures[NUM_CAPTURE_TEXTURES];$/;"	m	class:DesktopImageSource	file:
reorder	libfaac/fft.c	/^static void reorder( FFT_Tables *fft_tables, double *x, int logm)$/;"	f	file:
reordertbl	libfaac/fft.h	/^    unsigned short **reordertbl;$/;"	m
repeatSPSPPS	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t repeatSPSPPS              :1;                          \/**< [in]: Set to 1 to enable writing of Sequence and Picture parameter for every IDR frame *\/$/;"	m	struct:_NV_ENC_CONFIG_H264
replayBuffer	Source/OBS.h	/^    ReplayBuffer *replayBuffer;$/;"	m	class:OBS
replayBufferSavedCallback	Source/OBS.h	/^    OBS_REPLAY_BUFFER_SAVED_CALLBACK replayBufferSavedCallback;$/;"	m	struct:PluginInfo
replayBufferStop	Source/OBS.h	/^    StopInfo replayBufferStop;$/;"	m	class:OBS
replayBufferStream	Source/OBS.h	/^    std::unique_ptr<VideoFileStream> replayBufferStream;$/;"	m	class:OBS
replaygain-accurate	lame/doc/html/detailed.html	/^<a name="replaygain-accurate"><span class="hilight">--replaygain-accurate<\/span><\/a> Slightly more accurate$/;"	a
replaygain-fast	lame/doc/html/detailed.html	/^<a name="replaygain-fast"><span class="hilight">--replaygain-fast<\/span><\/a> Fast ReplayGain analysis$/;"	a
replaygain_data	lame/libmp3lame/gain_analysis.h	/^    struct replaygain_data {$/;"	s
replaygain_data_defined	lame/libmp3lame/gain_analysis.h	93;"	d
replaygain_data_defined	lame/libmp3lame/util.h	110;"	d
replaygain_t	lame/libmp3lame/gain_analysis.h	/^    typedef struct replaygain_data replaygain_t;$/;"	t
replaygain_t	lame/libmp3lame/util.h	/^    typedef struct replaygain_data replaygain_t;$/;"	t
report	lame/libmp3lame/lame_global_flags.h	/^    } report;$/;"	m	struct:lame_global_struct
report	lame/misc/abx.c	/^long double  report ( const korr_t* const k )$/;"	f
report	lame/misc/ath.c	/^int  report ( const generator_t* const g, const amplitude_t* const a )$/;"	f
report	lame/misc/mlame_corr.c	/^int report ( const korr_t* k )$/;"	f
reportSliceOffsets	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                                   reportSliceOffsets        :1;    \/**< [in]: Set this to 1 to enable reporting slice offsets in ::_NV_ENC_LOCK_BITSTREAM. Currently supported only for H264. Client must set this to 0 if NV_ENC_CONFIG_H264::sliceMode is 1 *\/$/;"	m	struct:_NV_ENC_INITIALIZE_PARAMS
report_close	lame/misc/ath.c	/^int  report_close ( void )$/;"	f
report_dbg	lame/libmp3lame/util.h	/^        lame_report_function report_dbg;$/;"	m	struct:lame_internal_flags
report_dbg	lame/mpglib/mpglib.h	/^    lame_report_function report_dbg;$/;"	m	struct:mpstr_tag
report_err	lame/libmp3lame/util.h	/^        lame_report_function report_err;$/;"	m	struct:lame_internal_flags
report_err	lame/mpglib/mpglib.h	/^    lame_report_function report_err;$/;"	m	struct:mpstr_tag
report_flush	lame/frontend/console.c	/^report_flush()$/;"	f
report_msg	lame/libmp3lame/util.h	/^        lame_report_function report_msg;$/;"	m	struct:lame_internal_flags
report_msg	lame/mpglib/mpglib.h	/^    lame_report_function report_msg;$/;"	m	struct:mpstr_tag
report_open	lame/misc/ath.c	/^int  report_open ( void )$/;"	f
report_printf	lame/frontend/console.c	/^report_printf(const char *format, ...)$/;"	f
req	QSVHelper/Encoder.h	/^    mfxFrameAllocRequest req;$/;"	m	struct:Encoder
requantFreq	libfaac/coder.h	/^    double *requantFreq;$/;"	m
request	Source/mongoose.c	/^  char *request;$/;"	m	struct:connection	file:
request_keyframe	QSVHelper/IPCStructs.h	/^    bool request_keyframe;$/;"	m	struct:queued_frame
request_len	Source/mongoose.c	/^  ssize_t request_len;  \/\/ Request length, including last \\r\\n after last header$/;"	m	struct:connection	file:
request_method	Source/mongoose.h	/^  const char *request_method; \/\/ "GET", "POST", etc$/;"	m	struct:mg_connection
requested	QSVHelper/Encoder.h	/^    mfxIMPL requested, actual;$/;"	m	struct:Encoder
requested_impl	QSVHelper/IPCStructs.h	/^    mfxIMPL requested_impl,$/;"	m	struct:init_response
resample	lame/doc/html/detailed.html	/^<a name="resample"><span class="hilight">--resample  n<\/span><\/a> Output sampling frequency in kHz$/;"	a
resampleRatio	OBSApi/AudioSource.h	/^    double resampleRatio;$/;"	m	class:AudioSource
resample_rate	lame/frontend/parse.c	/^resample_rate(double freq)$/;"	f	file:
resampler	OBSApi/AudioSource.cpp	/^    SRC_STATE *resampler;$/;"	m	struct:NotAResampler	file:
resampler	OBSApi/AudioSource.h	/^    LPVOID resampler;$/;"	m	class:AudioSource
reserved	DShowPlugin/IVideoCaptureFilter.h	/^	BYTE								reserved[20 * 1024 - sizeof(DWORD)];$/;"	m	struct:_VIDEO_CAPTURE_FILTER_SETTINGS_EX
reserved	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                                    reserved                :30;$/;"	m	struct:_NV_ENC_RECONFIGURE_PARAMS
reserved	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                                   reserved [289];                  \/**< [in]: Reserved and must be set to 0 *\/$/;"	m	struct:_NV_ENC_INITIALIZE_PARAMS
reserved	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                        reserved [278];                              \/**< [in]: Reserved and must be set to 0 *\/$/;"	m	struct:_NV_ENC_CONFIG
reserved	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                        reserved;                          \/**< [in]: Reserved and should be set to 0.                                                  *\/$/;"	m	struct:_NV_ENCODE_API_FUNCTION_LIST
reserved	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                        reserved[10];$/;"	m	struct:_NV_ENC_RC_PARAMS
reserved	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                  reserved;                \/**< [in]: Reserved and must be set to 0 *\/$/;"	m	struct:_NV_ENC_CREATE_INPUT_BUFFER
reserved	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                reserved [236];              \/**< [in]: Reserved and must be set to 0 *\/$/;"	m	struct:_NV_ENC_LOCK_BITSTREAM
reserved	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                reserved[256];               \/**< [in]: Reserved and must be set to 0 *\/$/;"	m	union:_NV_ENC_CODEC_CONFIG
reserved	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t               reserved[256];                \/**< [in]: Reserved and must be set to 0. *\/$/;"	m	union:_NV_ENC_CODEC_PIC_PARAMS
reserved	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t              reserved;                    \/**< [in]: Reserved and must be set to 0 *\/$/;"	m	struct:_NV_ENC_CREATE_BITSTREAM_BUFFER
reserved	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t            reserved [250];                  \/**< [in]:  Reserved and must be set to 0 *\/$/;"	m	struct:_NV_ENC_SEQUENCE_PARAM_PAYLOAD
reserved	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t            reserved;                         \/**< [in]: Reserved and must be set to 0 *\/$/;"	m	struct:_NV_ENC_EVENT_PARAMS
reserved	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t            reserved;                        \/**< [in]:  Reserved and must be set to 0 *\/$/;"	m	struct:_NV_ENC_STAT
reserved	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t    reserved[15];$/;"	m	struct:_NV_ENC_CONFIG_H264_VUI_PARAMETERS
reserved	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t   reserved                              : 16;  \/**< [in]: Reserved for padding. *\/$/;"	m	struct:_NVENC_EXTERNAL_ME_HINT_COUNTS_PER_BLOCKTYPE
reserved	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t reserved [243];                             \/**< [in]: Reserved and must be set to 0. *\/$/;"	m	struct:_NV_ENC_PIC_PARAMS_H264
reserved	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t reserved[62];                             \/**< [in]: Reserved and must be set to 0 *\/$/;"	m	struct:_NV_ENC_CAPS_PARAM
reserved	libmfx/include/msdk/include/mfxastructures.h	/^    mfxU16  reserved[14]; $/;"	m
reserved	libmfx/include/msdk/include/mfxastructures.h	/^    mfxU32  reserved[6];$/;"	m
reserved	libmfx/include/msdk/include/mfxcommon.h	/^         mfxU32  reserved[6];$/;"	m
reserved	libmfx/include/msdk/include/mfxjpeg.h	/^    mfxU16  reserved[2];$/;"	m
reserved	libmfx/include/msdk/include/mfxjpeg.h	/^    mfxU16  reserved[7];$/;"	m
reserved	libmfx/include/msdk/include/mfxplugin.h	/^    mfxHDL reserved[8];$/;"	m	struct:mfxPlugin
reserved	libmfx/include/msdk/include/mfxplugin.h	/^    mfxU32  reserved[13];$/;"	m	struct:mfxCoreParam
reserved	libmfx/include/msdk/include/mfxplugin.h	/^    mfxU32  reserved[6];$/;"	m	struct:mfxPluginParam
reserved	libmfx/include/msdk/include/mfxstructures.h	/^            mfxU16      reserved[4];$/;"	m
reserved	libmfx/include/msdk/include/mfxstructures.h	/^            mfxU16  reserved[3];$/;"	m
reserved	libmfx/include/msdk/include/mfxstructures.h	/^        mfxU16      reserved[3];$/;"	m
reserved	libmfx/include/msdk/include/mfxstructures.h	/^        mfxU16      reserved[5];$/;"	m	struct:<anonymous>::mfxRefPic
reserved	libmfx/include/msdk/include/mfxstructures.h	/^        mfxU16 reserved[3];$/;"	m
reserved	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16          reserved[2];$/;"	m
reserved	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16      reserved;$/;"	m
reserved	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16      reserved[11];$/;"	m
reserved	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16      reserved[15];$/;"	m
reserved	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16      reserved[58];$/;"	m
reserved	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16  reserved[11];$/;"	m
reserved	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU32      reserved[4];$/;"	m
reserved	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU32      reserved[7];$/;"	m
reserved	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU32  reserved[16];$/;"	m
reserved	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU32  reserved[3];$/;"	m
reserved	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU32  reserved[4];$/;"	m
reserved	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU32  reserved[5];$/;"	m
reserved	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU32  reserved[7];$/;"	m
reserved	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU32  reserved[8];$/;"	m
reserved	libmfx/include/msdk/include/mfxstructures.h	/^  mfxU32      reserved[14];$/;"	m
reserved	libmfx/include/msdk/include/mfxvideo.h	/^    mfxU32      reserved[4];$/;"	m
reserved1	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                                   reserved1[6];                    \/**< [in]: Reserved and must be set to 0 *\/$/;"	m	struct:_NV_ENC_PIC_PARAMS
reserved1	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                            reserved1[271];             \/**< [in]: Reserved and must be set to 0 *\/$/;"	m	struct:_NV_ENC_CONFIG_H264
reserved1	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                    reserved1[248];                 \/**< [in]: Reserved and must be set to 0. *\/$/;"	m	struct:_NV_ENC_REGISTER_RESOURCE
reserved1	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                   reserved1[251];            \/**< [in]:  Reserved and must be set to 0. *\/$/;"	m	struct:_NV_ENC_MAP_INPUT_RESOURCE
reserved1	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                  reserved1[251];            \/**< [in]:  Reserved and must be set to 0  *\/$/;"	m	struct:_NV_ENC_LOCK_INPUT_BUFFER
reserved1	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                  reserved1[57];           \/**< [in]: Reserved and must be set to 0 *\/$/;"	m	struct:_NV_ENC_CREATE_INPUT_BUFFER
reserved1	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t              reserved1[58];               \/**< [in]: Reserved and should be set to 0 *\/$/;"	m	struct:_NV_ENC_CREATE_BITSTREAM_BUFFER
reserved1	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t            reserved1[233];                  \/**< [in]:  Reserved and must be set to 0 *\/$/;"	m	struct:_NV_ENC_STAT
reserved1	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t            reserved1[253];                   \/**< [in]: Reserved and must be set to 0    *\/$/;"	m	struct:_NV_ENC_EVENT_PARAMS
reserved1	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t            reserved1[253];                   \/**< [in]: Reserved and must be set to 0    *\/$/;"	m	struct:_NV_ENC_OPEN_ENCODE_SESSIONEX_PARAMS
reserved1	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t      reserved1[255];                        \/**< [in]: Reserved and must be set to 0 *\/$/;"	m	struct:_NV_ENC_PRESET_CONFIG
reserved1	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t   reserved1[3];                                \/**< [in]: Reserved for future use. *\/$/;"	m	struct:_NVENC_EXTERNAL_ME_HINT_COUNTS_PER_BLOCKTYPE
reserved1	libmfx/include/msdk/include/mfxastructures.h	/^    mfxU16                reserved1[22]; $/;"	m
reserved1	libmfx/include/msdk/include/mfxastructures.h	/^    mfxU16  reserved1[7]; $/;"	m
reserved1	libmfx/include/msdk/include/mfxplugin.h	/^    mfxHDL reserved1[2];$/;"	m	struct:mfxCoreInterface
reserved1	libmfx/include/msdk/include/mfxplugin.h	/^    mfxHDL reserved1[5];$/;"	m	struct:mfxVideoCodecPlugin
reserved1	libmfx/include/msdk/include/mfxplugin.h	/^    mfxU16  reserved1;$/;"	m	struct:mfxPluginParam
reserved1	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16          reserved1[4];$/;"	m
reserved1	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16      reserved1;$/;"	m
reserved1	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16      reserved1[24];$/;"	m
reserved1	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16  reserved1[11];$/;"	m
reserved1	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU32          reserved1[4];$/;"	m
reserved1	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU32      reserved1[2];$/;"	m
reserved2	ObsNvenc/inc/nvEncodeAPI.h	/^    void*                                      reserved2[2];                    \/**< [in]: Reserved and must be set to NULL *\/$/;"	m	struct:_NV_ENC_PIC_PARAMS
reserved2	ObsNvenc/inc/nvEncodeAPI.h	/^    void*                                      reserved2[64];                   \/**< [in]: Reserved and must be set to NULL *\/$/;"	m	struct:_NV_ENC_INITIALIZE_PARAMS
reserved2	ObsNvenc/inc/nvEncodeAPI.h	/^    void*                               reserved2[64];              \/**< [in]: Reserved and must be set to NULL *\/$/;"	m	struct:_NV_ENC_CONFIG_H264
reserved2	ObsNvenc/inc/nvEncodeAPI.h	/^    void*                           reserved2[285];                    \/**< [in]:  Reserved and must be set to NULL                                                  *\/$/;"	m	struct:_NV_ENCODE_API_FUNCTION_LIST
reserved2	ObsNvenc/inc/nvEncodeAPI.h	/^    void*                           reserved2[64];                               \/**< [in]: Reserved and must be set to NULL *\/$/;"	m	struct:_NV_ENC_CONFIG
reserved2	ObsNvenc/inc/nvEncodeAPI.h	/^    void*                       reserved2[62];                  \/**< [in]: Reserved and must be set to NULL. *\/$/;"	m	struct:_NV_ENC_REGISTER_RESOURCE
reserved2	ObsNvenc/inc/nvEncodeAPI.h	/^    void*                      reserved2[63];             \/**< [in]:  Reserved and must be set to NULL *\/$/;"	m	struct:_NV_ENC_MAP_INPUT_RESOURCE
reserved2	ObsNvenc/inc/nvEncodeAPI.h	/^    void*                     reserved2[63];           \/**< [in]: Reserved and must be set to NULL *\/$/;"	m	struct:_NV_ENC_CREATE_INPUT_BUFFER
reserved2	ObsNvenc/inc/nvEncodeAPI.h	/^    void*                     reserved2[64];             \/**< [in]:  Reserved and must be set to NULL  *\/$/;"	m	struct:_NV_ENC_LOCK_INPUT_BUFFER
reserved2	ObsNvenc/inc/nvEncodeAPI.h	/^    void*                   reserved2[64];               \/**< [in]: Reserved and must be set to NULL *\/$/;"	m	struct:_NV_ENC_LOCK_BITSTREAM
reserved2	ObsNvenc/inc/nvEncodeAPI.h	/^    void*                 reserved2[64];               \/**< [in]: Reserved and should be set to NULL *\/$/;"	m	struct:_NV_ENC_CREATE_BITSTREAM_BUFFER
reserved2	ObsNvenc/inc/nvEncodeAPI.h	/^    void*               reserved2[64];                    \/**< [in]: Reserved and must be set to NULL *\/$/;"	m	struct:_NV_ENC_EVENT_PARAMS
reserved2	ObsNvenc/inc/nvEncodeAPI.h	/^    void*               reserved2[64];                    \/**< [in]: Reserved and must be set to NULL *\/$/;"	m	struct:_NV_ENC_OPEN_ENCODE_SESSIONEX_PARAMS
reserved2	ObsNvenc/inc/nvEncodeAPI.h	/^    void*               reserved2[64];                   \/**< [in]:  Reserved and must be set to NULL *\/$/;"	m	struct:_NV_ENC_SEQUENCE_PARAM_PAYLOAD
reserved2	ObsNvenc/inc/nvEncodeAPI.h	/^    void*               reserved2[64];                   \/**< [in]:  Reserved and must be set to NULL *\/$/;"	m	struct:_NV_ENC_STAT
reserved2	ObsNvenc/inc/nvEncodeAPI.h	/^    void*         reserved2[64];                         \/**< [in]: Reserved and must be set to NULL *\/$/;"	m	struct:_NV_ENC_PRESET_CONFIG
reserved2	ObsNvenc/inc/nvEncodeAPI.h	/^    void*    reserved2[62];                              \/**< [in]: Reserved and must be set to NULL. *\/$/;"	m	struct:_NV_ENC_PIC_PARAMS_H264
reserved2	libmfx/include/msdk/include/mfxastructures.h	/^            mfxU16       reserved2[61]; $/;"	m
reserved2	libmfx/include/msdk/include/mfxastructures.h	/^    mfxU32  reserved2;$/;"	m
reserved2	libmfx/include/msdk/include/mfxcommon.h	/^    mfxU16  reserved2;$/;"	m
reserved2	libmfx/include/msdk/include/mfxplugin.h	/^    mfxU32 reserved2[8];$/;"	m	struct:mfxVideoCodecPlugin
reserved2	libmfx/include/msdk/include/mfxstructures.h	/^            mfxU16  reserved2[9];$/;"	m
reserved2	libmfx/include/msdk/include/mfxstructures.h	/^        mfxU16  reserved2[18];$/;"	m	struct:mfxVPPCompInputStream
reserved2	libmfx/include/msdk/include/mfxstructures.h	/^        mfxU16  reserved2[6];$/;"	m
reserved2	libmfx/include/msdk/include/mfxstructures.h	/^        mfxU16  reserved2[7];$/;"	m
reserved2	libmfx/include/msdk/include/mfxstructures.h	/^        mfxU32  reserved2[5];$/;"	m
reserved2	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16          reserved2;$/;"	m
reserved2	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16      reserved2;$/;"	m
reserved2	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16      reserved2[2];$/;"	m
reserved2	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16      reserved2[4];$/;"	m
reserved2	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16  reserved2;$/;"	m
reserved2	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU32      reserved2[15];$/;"	m
reserved3	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                                   reserved3[252];                  \/**< [in]: Reserved and must be set to 0 *\/$/;"	m	struct:_NV_ENC_PIC_PARAMS
reserved3	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t reserved3;                                  \/**< [in]: Reserved and must be set to 0 *\/$/;"	m	struct:_NV_ENC_PIC_PARAMS_H264
reserved3	libmfx/include/msdk/include/mfxplugin.h	/^    mfxBufferAllocator reserved3;$/;"	m	struct:mfxCoreInterface
reserved3	libmfx/include/msdk/include/mfxstructures.h	/^            mfxU16  reserved3[9];$/;"	m
reserved3	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16  reserved3;$/;"	m
reserved4	ObsNvenc/inc/nvEncodeAPI.h	/^    void*                                      reserved4[60];                   \/**< [in]: Reserved and must be set to NULL *\/$/;"	m	struct:_NV_ENC_PIC_PARAMS
reserved4	libmfx/include/msdk/include/mfxplugin.h	/^    mfxHDL reserved4[4];$/;"	m	struct:mfxCoreInterface
reserved4	libmfx/include/msdk/include/mfxstructures.h	/^    mfxU16  reserved4;$/;"	m
reserved5	libmfx/include/msdk/include/mfxstructures.h	/^            mfxU16  reserved5[10];$/;"	m
reservedBitFields	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                                   reservedBitFields         :29;   \/**< [in]: Reserved bitfields and must be set to 0 *\/$/;"	m	struct:_NV_ENC_INITIALIZE_PARAMS
reservedBitFields	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                        reservedBitFields    :27;                    \/**< [in]: Reserved bitfields and must be set to 0 *\/$/;"	m	struct:_NV_ENC_RC_PARAMS
reservedBitFields	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                  reservedBitFields :31;     \/**< [in]:  Reserved bitfields and must be set to 0 *\/$/;"	m	struct:_NV_ENC_LOCK_INPUT_BUFFER
reservedBitFields	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                reservedBitFields :30;       \/**< [in]: Reserved bit fields and must be set to 0 *\/$/;"	m	struct:_NV_ENC_LOCK_BITSTREAM
reservedBitFields	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t reservedBitFields          :28;             \/**< [in]: Reserved bit fields and must be set to 0 *\/$/;"	m	struct:_NV_ENC_PIC_PARAMS_H264
reservedBitFields	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t reservedBitFields         :16;                         \/**< [in]: Reserved bitfields and must be set to 0 *\/$/;"	m	struct:_NV_ENC_CONFIG_H264
reservoir.c	lame/libmp3lame/reservoir.c	1;"	F
reservoir.h	lame/libmp3lame/reservoir.h	1;"	F
reset	QSVHelper/IntelSupport/include/base_allocator.h	/^        void reset(T* ptr) $/;"	f	class:BaseFrameAllocator::safe_array
reset	QSVHelper/WindowsStuff.h	/^    void reset() { ResetEvent(signal_); }$/;"	f	struct:IPCSignal
reset	QSVHelper/WindowsStuff.h	/^    void reset(HANDLE h_=nullptr) { if(h) CloseHandle(h); h = h_; }$/;"	f	struct:safe_handle
reset	lame/misc/abx.c	/^void reset ( void )$/;"	f
reset	libsamplerate/common.h	/^	void	(*reset) (struct SRC_PRIVATE_tag *psrc) ;$/;"	m	struct:SRC_PRIVATE_tag
reset	libsamplerate/src_linear.c	/^	int		reset ;$/;"	m	file:
reset	libsamplerate/src_zoh.c	/^	int		reset ;$/;"	m	file:
resetCount	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	/^int  resetCount = 1;$/;"	v
resetEncoder	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                                    resetEncoder            :1;     \/**< [in]: This resets the rate control states and other internal encoder states. This should be used only with an IDR frame.$/;"	m	struct:_NV_ENC_RECONFIGURE_PARAMS
reset_count_mc	libfaac/coder.h	/^    int reset_count_mc;$/;"	m
reset_group_number	libfaac/coder.h	/^    int reset_group_number;$/;"	m
resize	libmfx/include/mfx_vector.h	/^        void resize(mfxU32 nSize) $/;"	f	class:MFX::MFXVector
resolutions	DShowPlugin/DShowPlugin.cpp	/^    List<SIZE> resolutions;$/;"	m	struct:ConfigDialogData	file:
resolvedPath	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/AssetSchemeHandler.cs	/^        private string resolvedPath;$/;"	f	class:RemoteBrowser.AssetSchemeHandler	file:
resource	Source/D3D10System.h	/^    ID3D10ShaderResourceView *resource;$/;"	m	class:D3D10Texture
resource	Source/OBS.h	/^    int resource;$/;"	m	struct:IconInfo
resource.h	DShowPlugin/resource.h	1;"	F
resource.h	GraphicsCapture/GraphicsCaptureHook/resource.h	1;"	F
resource.h	GraphicsCapture/resource.h	1;"	F
resource.h	NoiseGate/resource.h	1;"	F
resource.h	OBSApi/resource.h	1;"	F
resource.h	PSVPlugin/resource.h	1;"	F
resource.h	lame/ACM/resource.h	1;"	F
resource.h	lame/dshow/resource.h	1;"	F
resource.h	minhook/dll_resources/resource.h	1;"	F
resource.h	resource.h	1;"	F
resource.h	scenesw/resource.h	1;"	F
resourceToRegister	ObsNvenc/inc/nvEncodeAPI.h	/^    void*                       resourceToRegister;             \/**< [in]: Handle to the resource that is being registered. *\/$/;"	m	struct:_NV_ENC_REGISTER_RESOURCE
resourceType	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_INPUT_RESOURCE_TYPE  resourceType;                   \/**< [in]: Specifies the type of resource to be registered. Supported values are ::NV_ENC_INPUT_RESOURCE_TYPE_DIRECTX, ::NV_ENC_INPUT_RESOURCE_TYPE_CUDADEVICEPTR. *\/$/;"	m	struct:_NV_ENC_REGISTER_RESOURCE
result	Source/mongoose.c	/^  struct dirent result;$/;"	m	struct:DIR	file:
result	librtmp/cencode.h	/^	char result;$/;"	m
resvDrain_post	lame/libmp3lame/l3side.h	/^    int     resvDrain_post;$/;"	m
resvDrain_pre	lame/libmp3lame/l3side.h	/^    int     resvDrain_pre;$/;"	m
resvsize	lame/libmp3lame/lame-analysis.h	/^    int     scfsi[2], mean_bits, resvsize;$/;"	m	struct:plotting_data
resync_point_t	lame/dshow/Mpegac.h	/^} resync_point_t;$/;"	t
retryAcquire	Source/DesktopImageSource.cpp	/^    float    retryAcquire;$/;"	m	class:DesktopImageSource	file:
reuse	QSVHelper/IntelSupport/include/d3d11_allocator.h	/^        reuse   = 1,$/;"	e	enum:MFXReadWriteMid::<anonymous>
rev	lame/ACM/Makefile	/^	    rev="$$subdir $$rev"; \\$/;"	m
rev	lame/ACM/Makefile	/^	rev="$$rev ."; \\$/;"	m
rev	lame/ACM/Makefile	/^	rev=''; for subdir in $$list; do \\$/;"	m
rev	lame/Makefile	/^	    rev="$$subdir $$rev"; \\$/;"	m
rev	lame/Makefile	/^	rev="$$rev ."; \\$/;"	m
rev	lame/Makefile	/^	rev=''; for subdir in $$list; do \\$/;"	m
rev	lame/doc/Makefile	/^	    rev="$$subdir $$rev"; \\$/;"	m
rev	lame/doc/Makefile	/^	rev="$$rev ."; \\$/;"	m
rev	lame/doc/Makefile	/^	rev=''; for subdir in $$list; do \\$/;"	m
rev	lame/libmp3lame/Makefile	/^	    rev="$$subdir $$rev"; \\$/;"	m
rev	lame/libmp3lame/Makefile	/^	rev="$$rev ."; \\$/;"	m
rev	lame/libmp3lame/Makefile	/^	rev=''; for subdir in $$list; do \\$/;"	m
rev	lame/macosx/Makefile	/^	    rev="$$subdir $$rev"; \\$/;"	m
rev	lame/macosx/Makefile	/^	rev="$$rev ."; \\$/;"	m
rev	lame/macosx/Makefile	/^	rev=''; for subdir in $$list; do \\$/;"	m
rewind_word	libfaac/bitstream.c	/^static int rewind_word(int W, int len)$/;"	f	file:
rex	minhook/src/HDE64/include/hde64.h	/^    uint8_t rex;$/;"	m
rex_b	minhook/src/HDE64/include/hde64.h	/^    uint8_t rex_b;$/;"	m
rex_r	minhook/src/HDE64/include/hde64.h	/^    uint8_t rex_r;$/;"	m
rex_w	minhook/src/HDE64/include/hde64.h	/^    uint8_t rex_w;$/;"	m
rex_x	minhook/src/HDE64/include/hde64.h	/^    uint8_t rex_x;$/;"	m
rf2FilterReg	lame/dshow/Mpegac.cpp	/^REGFILTER2 rf2FilterReg = {$/;"	v
rfft	libfaac/fft.c	/^void rfft( FFT_Tables *fft_tables, double *x, int logm )$/;"	f
rfft	libfaac/fft.c	/^void rfft( FFT_Tables *fft_tables, double *x, int logm)$/;"	f
rgdata	lame/libmp3lame/util.h	/^        replaygain_t *rgdata;$/;"	m
right	ObsNvenc/inc/nvEncodeAPI.h	/^  uint32_t right;                                       \/**< [in]: X coordinate of the bottom right corner of the rectangular area to be specified. *\/$/;"	m	struct:_NVENC_RECT
right	lame/misc/ath.c	/^    right    = 1, $/;"	e	file:
right	libfaac/bitstream.c	/^    unsigned int right; \/* right position of free space in segment *\/$/;"	m	file:
right_calc	libsamplerate/src_sinc.c	/^	double left_calc [128], right_calc [128] ;$/;"	m	file:
rinpre	lame/libmp3lame/gain_analysis.h	/^        Float_t *rinpre;     \/* right input samples ... *\/$/;"	m	struct:replaygain_data
rinprebuf	lame/libmp3lame/gain_analysis.h	/^        Float_t rinprebuf[MAX_ORDER * 2];$/;"	m	struct:replaygain_data
rmdir	Source/mongoose.c	1344;"	d	file:
rmsToDb	NoiseGate/NoiseGate.cpp	/^inline float rmsToDb(float rms)$/;"	f
rnumlines	lame/libmp3lame/util.h	/^        FLOAT   rnumlines[CBANDS];$/;"	m
rol	Source/mongoose.c	2876;"	d	file:
roll	OBSApi/Utility/XMath.h	/^            float roll;$/;"	m	struct:Euler::<anonymous>::<anonymous>
root	lame/misc/abx.c	/^compl           root    [MAX >> 1];             \/\/ Sinus-\/Kosinustabelle$/;"	v
rootDispPath	libmfx/src/mfx_library_iterator.cpp	/^wchar_t rootDispPath[] = L"Software\\\\Intel\\\\MediaSDK\\\\Dispatch";$/;"	v
rootDispatchPath	libmfx/src/mfx_plugin_hive.cpp	/^    const wchar_t rootDispatchPath[] = L"Software\\\\Intel\\\\MediaSDK\\\\Dispatch";$/;"	v
rootPluginPath	libmfx/src/mfx_plugin_hive.cpp	/^    const wchar_t rootPluginPath[] = L"Software\\\\Intel\\\\MediaSDK\\\\Plugin";$/;"	v
rotateDegrees	Source/DesktopImageSource.cpp	/^    float    rotateDegrees;$/;"	m	class:DesktopImageSource	file:
rotationDegrees	Source/OBS.h	/^    float rotationDegrees;$/;"	m	struct:MonitorInfo
round	GraphicsCapture/GraphicsCaptureSource.cpp	/^inline double round(double val)$/;"	f
round	lame/misc/abx.c	/^short  round ( double f )$/;"	f
rout	lame/libmp3lame/gain_analysis.h	/^        Float_t *rout;$/;"	m	struct:replaygain_data
routbuf	lame/libmp3lame/gain_analysis.h	/^        Float_t routbuf[MAX_SAMPLES_PER_WINDOW + MAX_ORDER];$/;"	m	struct:replaygain_data
rpelev	lame/libmp3lame/psymodel.h	42;"	d
rpelev2	lame/libmp3lame/psymodel.h	43;"	d
rpelev2_s	lame/libmp3lame/psymodel.h	45;"	d
rpelev_s	lame/libmp3lame/psymodel.h	44;"	d
rstep	lame/libmp3lame/gain_analysis.h	/^        Float_t *rstep;$/;"	m	struct:replaygain_data
rstepbuf	lame/libmp3lame/gain_analysis.h	/^        Float_t rstepbuf[MAX_SAMPLES_PER_WINDOW + MAX_ORDER];$/;"	m	struct:replaygain_data
rsum	lame/libmp3lame/gain_analysis.h	/^        double  rsum;$/;"	m	struct:replaygain_data
rtmp	Source/RTMPPublisher.h	/^    RTMP *rtmp;$/;"	m	class:RTMPPublisher
rtmp.c	librtmp/rtmp.c	1;"	F
rtmp.h	librtmp/rtmp.h	1;"	F
rtmp_log_default	librtmp/log.c	/^static RTMP_LogCallback rtmp_log_default, *cb = rtmp_log_default;$/;"	v	file:
rtmp_log_default	librtmp/log.c	/^static void rtmp_log_default(int level, const char *format, va_list vl)$/;"	f	file:
rtmp_log_output	Source/RTMPPublisher.cpp	/^void rtmp_log_output(int level, const char *format, va_list vl)$/;"	f
rtmp_sys.h	librtmp/rtmp_sys.h	1;"	F
rtmpe8_keys	librtmp/handshake.h	/^static const uint32_t rtmpe8_keys[16][4] =$/;"	v
rtmpe8_sig	librtmp/handshake.h	/^static void rtmpe8_sig(uint8_t *in, uint8_t *out, int keyid)$/;"	f
rtmpe9_keys	librtmp/handshake.h	/^static const unsigned char rtmpe9_keys[16][KEYBYTES] =$/;"	v
rtmpe9_sig	librtmp/handshake.h	/^static void rtmpe9_sig(uint8_t *in, uint8_t *out, int keyid)$/;"	f
rtp.c	lame/frontend/rtp.c	1;"	F
rtp.h	lame/frontend/rtp.h	1;"	F
rtp_close_extra	lame/frontend/rtp.c	/^rtp_close_extra(void)$/;"	f	file:
rtp_deinitialization	lame/frontend/rtp.c	/^rtp_deinitialization(void)$/;"	f
rtp_initialization	lame/frontend/rtp.c	/^rtp_initialization(void)$/;"	f
rtp_initialization_extra	lame/frontend/rtp.c	/^rtp_initialization_extra(void)$/;"	f	file:
rtp_output	lame/frontend/rtp.c	/^rtp_output(unsigned char const *mp3buffer, int mp3size)$/;"	f
rtp_send	lame/frontend/rtp.c	/^rtp_send(unsigned char const *data, int len)$/;"	f	file:
rtp_socket	lame/frontend/rtp.c	/^rtp_socket(char const *address, unsigned int port, unsigned int TTL)$/;"	f
rtpbits	lame/frontend/rtp.c	/^struct rtpbits {$/;"	s	file:
rtpheader	lame/frontend/rtp.c	/^struct rtpheader {           \/* in network byte order *\/$/;"	s	file:
rtpsocket	lame/frontend/rtp.c	/^SOCKET  rtpsocket;$/;"	v
rv_tbl	lame/libmp3lame/fft.c	/^static const unsigned char rv_tbl[] = {$/;"	v	file:
s	Source/mongoose.c	/^  sock_t s;$/;"	m	struct:threadparam	file:
s	lame/doc/html/detailed.html	/^<a name="s"><span class="hilight">-s  n<\/span><\/a> Sampling frequency in kHz$/;"	a
s	lame/libmp3lame/l3side.h	/^    FLOAT   s[SBMAX_s][3];$/;"	m
s	lame/libmp3lame/l3side.h	/^    int     s[1 + SBMAX_s];$/;"	m
s	lame/libmp3lame/util.h	/^        FLOAT   s[SBMAX_s];  \/* ATH for sfbs in short blocks *\/$/;"	m
s	lame/libmp3lame/util.h	/^        PsyConst_CB2SB_t s;$/;"	m
s	librtmp/handshake.h	/^    uint32_t s[4][256];$/;"	m	struct:bf_key
s3	lame/libmp3lame/util.h	/^        FLOAT  *s3;$/;"	m
s3_func	lame/libmp3lame/psymodel.c	/^s3_func(FLOAT bark)$/;"	f	file:
s3ind	lame/libmp3lame/util.h	/^        int     s3ind[CBANDS][2];$/;"	m
sName	libmfx/include/mfx_plugin_hive.h	/^        char sName[MAX_PLUGIN_NAME];$/;"	m	class:MFX::PluginDescriptionRecord
sPath	libmfx/include/mfx_plugin_hive.h	/^        msdk_disp_char sPath[MAX_PLUGIN_PATH];$/;"	m	class:MFX::PluginDescriptionRecord
s_websocket_ping_data	Source/mongoose.c	/^static const char s_websocket_ping_data[] = "4d6f6e676f6f7365"; \/* Mongoose *\/$/;"	v	file:
sa	Source/mongoose.c	/^  struct sockaddr sa;$/;"	m	union:socket_address	file:
sa	Source/mongoose.c	/^  union socket_address sa;    \/\/ Peer address$/;"	m	struct:ns_connection	file:
safe_array	QSVHelper/IntelSupport/include/base_allocator.h	/^        safe_array(T *ptr = 0):m_ptr(ptr)$/;"	f	class:BaseFrameAllocator::safe_array
safe_array	QSVHelper/IntelSupport/include/base_allocator.h	/^    class safe_array$/;"	c	class:BaseFrameAllocator
safe_handle	QSVHelper/WindowsStuff.h	/^    safe_handle(HANDLE h=nullptr) : h(h) {}$/;"	f	struct:safe_handle
safe_handle	QSVHelper/WindowsStuff.h	/^    safe_handle(safe_handle &&other) : h(other.h) { other.h = nullptr; };$/;"	f	struct:safe_handle
safe_handle	QSVHelper/WindowsStuff.h	/^struct safe_handle$/;"	s
safejoint	lame/libmp3lame/presets.c	/^    int     safejoint;$/;"	m	file:
sal.h	extras/sal.h	1;"	F
sampfreq	lame/libmp3lame/lame-analysis.h	/^    int     framesize, stereo, js, ms_stereo, i_stereo, emph, bitrate, sampfreq, maindata;$/;"	m	struct:plotting_data
sample	DShowPlugin/DeviceSource.h	/^    SampleData *sample;$/;"	m	struct:ConvertData
sample	lame/dshow/Mpegac.h	/^    LONGLONG        sample;$/;"	m
sampleBuff	libfaac/frame.h	/^    double *sampleBuff[MAX_CHANNELS];$/;"	m
sampleBuffer	DShowPlugin/DeviceSource.h	/^    List<BYTE> sampleBuffer;$/;"	m	class:DeviceAudioSource
sampleFrameCount	DShowPlugin/DeviceSource.h	/^    UINT sampleSegmentSize, sampleFrameCount;$/;"	m	class:DeviceAudioSource
sampleRate	lame/frontend/get_audio.c	/^    double  sampleRate;$/;"	m	struct:IFF_AIFF_struct	file:
sampleRate	libfaac/frame.h	/^    unsigned long sampleRate;$/;"	m
sampleRate	libfaac/psych.h	/^	double sampleRate;$/;"	m
sampleRateHz	Source/MP4FileStream.cpp	/^    UINT sampleRateHz = 0;$/;"	m	class:MP4FileStream	file:
sampleRateHz	Source/OBS.h	/^    UINT sampleRateHz;$/;"	m	class:OBS
sampleRateIdx	libfaac/frame.h	/^    unsigned int sampleRateIdx;$/;"	m
sampleSegmentSize	DShowPlugin/DeviceSource.h	/^    UINT sampleSegmentSize, sampleFrameCount;$/;"	m	class:DeviceAudioSource
sampleSize	lame/frontend/get_audio.c	/^    short   sampleSize;$/;"	m	struct:IFF_AIFF_struct	file:
sampleType	lame/frontend/get_audio.c	/^    unsigned long sampleType;$/;"	m	struct:IFF_AIFF_struct	file:
sampleWindow	lame/libmp3lame/gain_analysis.h	/^        long    sampleWindow; \/* number of samples required to reach number of milliseconds required for RMS window *\/$/;"	m	struct:replaygain_data
sampleWindowSize	Source/MMDeviceAudioSource.cpp	/^    UINT sampleWindowSize;$/;"	m	class:MMDeviceAudioSource	file:
sample_defs.h	QSVHelper/IntelSupport/include/sample_defs.h	1;"	F
sample_freq	lame/misc/ath.c	/^    long double    sample_freq;$/;"	m	file:
sample_t	lame/libmp3lame/machine.h	/^typedef FLOAT sample_t;$/;"	t
sample_t	lame/misc/abx.c	/^typedef signed short  sample_t;$/;"	t	file:
sample_t	lame/misc/ath.c	/^typedef signed short  sample_t;$/;"	t	file:
sampler	Source/D3D10System.h	/^    SamplerState *sampler;$/;"	m	struct:ShaderSampler
sampler	Source/TextOutputSource.cpp	/^    std::unique_ptr<SamplerState> sampler;$/;"	m	class:TextOutputSource	file:
samplerID	Source/D3D10System.h	/^    UINT samplerID;$/;"	m	struct:ShaderParam
samplerate	lame/include/lame.h	/^  int samplerate;      \/* sample rate                                    *\/$/;"	m
samplerate.c	libsamplerate/samplerate.c	1;"	F
samplerate.h	libsamplerate/samplerate.h	1;"	F
samplerate_in	lame/libmp3lame/lame_global_flags.h	/^    int     samplerate_in;   \/* input_samp_rate in Hz. default=44.1 kHz     *\/$/;"	m	struct:lame_global_struct
samplerate_in	lame/libmp3lame/util.h	/^        int     samplerate_in; \/* input_samp_rate in Hz. default=44.1 kHz     *\/$/;"	m
samplerate_index	lame/libmp3lame/util.h	/^        int     samplerate_index;$/;"	m
samplerate_out	lame/libmp3lame/lame_global_flags.h	/^    int     samplerate_out;  \/* output_samp_rate.$/;"	m	struct:lame_global_struct
samplerate_out	lame/libmp3lame/util.h	/^        int     samplerate_out; \/* output_samp_rate. *\/$/;"	m
samplerate_table	lame/libmp3lame/tables.c	/^const int samplerate_table[3][4] = {$/;"	v
samples	DShowPlugin/DeviceSource.h	/^    List<SampleData*> samples;$/;"	m	class:DeviceSource
samples	lame/frontend/timestatus.c	/^    unsigned long samples;$/;"	m	struct:DecoderProgress	file:
samplesPerChunk	Source/MP4FileStream.cpp	/^    UINT samplesPerChunk;$/;"	m	struct:SampleToChunk	file:
samples_to_skip_at_end	lame/frontend/get_audio.c	/^samples_to_skip_at_end(void)$/;"	f
samples_to_skip_at_start	lame/frontend/get_audio.c	/^samples_to_skip_at_start(void)$/;"	f
sampling_frequency	lame/mpglib/mpg123.h	/^    int     sampling_frequency; \/* sample rate of decompressed audio in Hz *\/$/;"	m	struct:frame
sampling_rate	libfaac/coder.h	/^  unsigned long sampling_rate;  \/* the following entries are for this sampling rate *\/$/;"	m
samprate	lame/libmp3lame/VbrTag.h	/^    int     samprate;        \/* determined from MPEG header *\/$/;"	m
saturate	QSVHelper/Utilities.h	/^static inline T saturate(U val)$/;"	f
saturate	QSVHelper/Utilities.h	/^static inline void saturate(T &t, U val)$/;"	f
saturate	Source/Settings.cpp	/^static inline void saturate(T &t, U val)$/;"	f	file:
saturation	DShowPlugin/IVideoCaptureFilter.h	/^    int                                  saturation;                        \/\/!< Saturation (0-10000)$/;"	m	struct:_VIDEO_CAPTURE_FILTER_SETTINGS
saveReplayBufferHotkeyID	Source/OBS.h	/^    UINT saveReplayBufferHotkeyID;$/;"	m	class:OBS
save_gain_values	lame/libmp3lame/lame.c	/^save_gain_values(lame_internal_flags * gfc)$/;"	f	file:
save_thread	Source/ReplayBuffer.cpp	/^    unique_ptr<void, ThreadDeleter<1000>> save_thread;$/;"	m	struct:RecordingHelper	file:
save_times	Source/ReplayBuffer.cpp	/^    vector<DWORD> save_times;$/;"	m	struct:ReplayBuffer	file:
save_times_lock	Source/ReplayBuffer.cpp	/^    unique_ptr<void, MutexDeleter> save_times_lock;$/;"	m	struct:ReplayBuffer	file:
saved_data	libsamplerate/common.h	/^	float			*saved_data ;$/;"	m	struct:SRC_PRIVATE_tag
saved_frames	libsamplerate/common.h	/^	long			saved_frames ;$/;"	m	struct:SRC_PRIVATE_tag
sb_buf	librtmp/rtmp.h	/^        char sb_buf[RTMP_BUFFER_CACHE_SIZE];	\/* data read from socket *\/$/;"	m	struct:RTMPSockBuf
sb_sample	lame/libmp3lame/util.h	/^        FLOAT   sb_sample[2][2][18][SBLIMIT];$/;"	m
sb_samples_pred_mc	libfaac/coder.h	/^    double sb_samples_pred_mc[BLOCK_LEN_LONG];$/;"	m
sb_size	librtmp/rtmp.h	/^        int sb_size;		\/* number of unprocessed bytes in buffer *\/$/;"	m	struct:RTMPSockBuf
sb_socket	librtmp/rtmp.h	/^        SOCKET sb_socket;$/;"	m	struct:RTMPSockBuf
sb_ssl	librtmp/rtmp.h	/^        void *sb_ssl;$/;"	m	struct:RTMPSockBuf
sb_start	librtmp/rtmp.h	/^        char *sb_start;		\/* pointer into sb_pBuffer of next byte to process *\/$/;"	m	struct:RTMPSockBuf
sb_timedout	librtmp/rtmp.h	/^        int sb_timedout;$/;"	m	struct:RTMPSockBuf
sbindir	lame/ACM/ADbg/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	lame/ACM/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	lame/ACM/ddk/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	lame/ACM/tinyxml/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	lame/Dll/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	lame/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	lame/debian/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	lame/doc/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	lame/doc/html/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	lame/doc/man/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	lame/dshow/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	lame/frontend/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	lame/include/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	lame/libmp3lame/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	lame/libmp3lame/i386/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	lame/libmp3lame/vector/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	lame/mac/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	lame/macosx/English.lproj/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	lame/macosx/LAME.xcodeproj/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	lame/macosx/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	lame/misc/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	lame/mpglib/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	lame/vc_solution/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbk_prediction_used	libfaac/coder.h	/^    int sbk_prediction_used[MAX_SHORT_WINDOWS];$/;"	m
scalar	lame/misc/ath.c	/^static long double scalar ( const double* a, const double* b )$/;"	f	file:
scalartest.c	lame/misc/scalartest.c	1;"	F
scalartest_DEPENDENCIES	lame/misc/Makefile	/^scalartest_DEPENDENCIES =$/;"	m
scalartest_LDADD	lame/misc/Makefile	/^scalartest_LDADD = $(LDADD)$/;"	m
scalartest_OBJECTS	lame/misc/Makefile	/^scalartest_OBJECTS = $(am_scalartest_OBJECTS)$/;"	m
scalartest_SOURCES	lame/misc/Makefile	/^scalartest_SOURCES = scalartest.c$/;"	m
scale	lame/doc/html/detailed.html	/^<a name="scale"><span class="hilight">--scale arg<\/span><\/a>$/;"	a
scale	lame/libmp3lame/lame_global_flags.h	/^    float   scale;           \/* scale input by this amount before encoding$/;"	m	struct:lame_global_struct
scale-l	lame/doc/html/detailed.html	/^<a name="scale-l"><span class="hilight">--scale-l arg<\/span><\/a>$/;"	a
scale-r	lame/doc/html/detailed.html	/^<a name="scale-r"><span class="hilight">--scale-r arg<\/span><\/a> Scale the amplitude of the input file$/;"	a
scaleCX	Source/OBS.h	/^    UINT    scaleCX,  scaleCY;$/;"	m	class:OBS
scaleCY	Source/OBS.h	/^    UINT    scaleCX,  scaleCY;$/;"	m	class:OBS
scaleItem	Source/OBS.h	/^    SceneItem *scaleItem;$/;"	m	class:OBS
scale_bitcount	lame/libmp3lame/takehiro.c	/^scale_bitcount(const lame_internal_flags * gfc, gr_info * cod_info)$/;"	f
scale_factor	libfaac/coder.h	/^    int scale_factor[MAX_SCFAC_BANDS];$/;"	m
scale_left	lame/libmp3lame/lame_global_flags.h	/^    float   scale_left;      \/* scale input of channel 0 (left) by this$/;"	m	struct:lame_global_struct
scale_long	lame/libmp3lame/takehiro.c	/^static const int scale_long[16] = {$/;"	v	file:
scale_mixed	lame/libmp3lame/takehiro.c	/^static const int scale_mixed[16] = {$/;"	v	file:
scale_right	lame/libmp3lame/lame_global_flags.h	/^    float   scale_right;     \/* scale input of channel 1 (right) by this$/;"	m	struct:lame_global_struct
scale_short	lame/libmp3lame/takehiro.c	/^static const int scale_short[16] = {$/;"	v	file:
scalefac	lame/libmp3lame/l3side.h	/^    int     scalefac[SFBMAX];$/;"	m
scalefac_band	lame/libmp3lame/util.h	/^        scalefac_struct scalefac_band;$/;"	m	struct:lame_internal_flags
scalefac_compress	lame/libmp3lame/l3side.h	/^    int     scalefac_compress;$/;"	m
scalefac_compress	lame/mpglib/mpg123.h	/^    unsigned scalefac_compress;$/;"	m	struct:gr_info_s
scalefac_scale	lame/libmp3lame/l3side.h	/^    int     scalefac_scale;$/;"	m
scalefac_scale	lame/libmp3lame/lame-analysis.h	/^    int     scalefac_scale[2][2];$/;"	m	struct:plotting_data
scalefac_scale	lame/mpglib/mpg123.h	/^    unsigned scalefac_scale;$/;"	m	struct:gr_info_s
scalefac_struct	lame/libmp3lame/l3side.h	/^} scalefac_struct;$/;"	t
scalefactor	lame/mpglib/layer1.c	/^    unsigned char scalefactor[SBLIMIT][2];$/;"	m	struct:sideinfo_layer_I_struct	file:
scalefactor	lame/mpglib/layer2.c	/^    unsigned char scalefactor[SBLIMIT][2][3]; \/* subband \/ channel \/ block *\/$/;"	m	struct:sideinfo_layer_II_struct	file:
scanBasename	lame/frontend/parse.c	/^size_t scanBasename(char const* s, char const** a, char const** b)$/;"	f	file:
scanPath	lame/frontend/parse.c	/^size_t scanPath(char const* s, char const** a, char const** b)$/;"	f	file:
scan_directory	Source/mongoose.c	/^static int scan_directory(struct connection *conn, const char *dir,$/;"	f	file:
scat	OBSApi/Utility/XString.cpp	/^void STDCALL scat(TCHAR *strDest, const TCHAR *strSrc)$/;"	f
scat_n	OBSApi/Utility/XString.cpp	/^void STDCALL scat_n(TCHAR *strDest, const TCHAR *strSrc, unsigned int n)$/;"	f
sce	libfaac/channels.h	/^    int sce;$/;"	m
scene	Source/OBS.h	/^    Scene                   *scene;$/;"	m	class:OBS
scene	Source/OBS.h	/^    XElement *scene;$/;"	m	struct:SceneHotkeyInfo
sceneClasses	Source/OBS.h	/^    List<ClassInfo> sceneClasses;$/;"	m	class:OBS
sceneCollectionSwitchCallback	Source/OBS.h	/^    OBS_SCENE_SWITCH_CALLBACK sceneCollectionSwitchCallback;$/;"	m	struct:PluginInfo
sceneCollectionsChangedCallback	Source/OBS.h	/^    OBS_CALLBACK sceneCollectionsChangedCallback;$/;"	m	struct:PluginInfo
sceneElement	Source/OBS.h	/^    XElement                *sceneElement;$/;"	m	class:OBS
sceneHotkeys	Source/OBS.h	/^    List<SceneHotkeyInfo>   sceneHotkeys;$/;"	m	class:OBS
sceneItems	OBSApi/Scene.h	/^    List<SceneItem*> sceneItems;$/;"	m	class:Scene
sceneSwitchCallback	Source/OBS.h	/^    OBS_SCENE_SWITCH_CALLBACK sceneSwitchCallback;$/;"	m	struct:PluginInfo
scenes	scenesw/SceneSwitcher.h	/^	StringList scenes;$/;"	m	class:SceneSwitcher
scenesChangedCallback	Source/OBS.h	/^    OBS_CALLBACK scenesChangedCallback;$/;"	m	struct:PluginInfo
scenesConfig	Source/OBS.h	/^    XConfig                 scenesConfig;$/;"	m	class:OBS
scenesCopyToConfig	Source/OBS.h	/^    XConfig                 scenesCopyToConfig;$/;"	m	class:OBS
scenesw.cpp	scenesw/scenesw.cpp	1;"	F
scenesw.h	scenesw/scenesw.h	1;"	F
scfsi	lame/libmp3lame/l3side.h	/^    int     scfsi[2][4];$/;"	m
scfsi	lame/libmp3lame/lame-analysis.h	/^    int     scfsi[2], mean_bits, resvsize;$/;"	m	struct:plotting_data
scfsi	lame/mpglib/mpg123.h	/^    int     scfsi;$/;"	m	struct:gr_info_s
scfsi_band	lame/libmp3lame/tables.c	/^const int scfsi_band[5] = { 0, 6, 11, 16, 21 };$/;"	v
scfsi_calc	lame/libmp3lame/takehiro.c	/^scfsi_calc(int ch, III_side_info_t * l3_side)$/;"	f	file:
schr	OBSApi/Utility/XString.cpp	/^TCHAR *STDCALL schr(const TCHAR *strSrc, const TCHAR chr)$/;"	f
schri	OBSApi/Utility/XString.cpp	/^TCHAR *STDCALL schri(const TCHAR *strSrc, TCHAR chr)$/;"	f
scissorState	Source/D3D10System.h	/^    ID3D10RasterizerState   *scissorState;$/;"	m	class:D3D10System
scmp	OBSApi/Utility/XString.cpp	/^int STDCALL scmp(const TCHAR *str1, const TCHAR *str2)$/;"	f
scmp_n	OBSApi/Utility/XString.cpp	/^int STDCALL scmp_n(const TCHAR *str1, const TCHAR *str2, unsigned int num)$/;"	f
scmpi	OBSApi/Utility/XString.cpp	/^int STDCALL scmpi(const TCHAR *str1, const TCHAR *str2)$/;"	f
scmpi_n	OBSApi/Utility/XString.cpp	/^int STDCALL scmpi_n(const TCHAR *str1, const TCHAR *str2, unsigned int num)$/;"	f
scpy	OBSApi/Utility/XString.cpp	/^void STDCALL scpy(TCHAR *strDest, const TCHAR *strSrc)$/;"	f
scpy_n	OBSApi/Utility/XString.cpp	/^void STDCALL scpy_n(TCHAR *strDest, const TCHAR *strSrc, unsigned int n)$/;"	f
scrollSpeed	Source/TextOutputSource.cpp	/^    int         scrollSpeed;$/;"	m	class:TextOutputSource	file:
scrollToFirstVisibleRow	UpgradeLog.htm	/^/;"	f
scrollValue	Source/TextOutputSource.cpp	/^    float       scrollValue;$/;"	m	class:TextOutputSource	file:
sdk_library	libmfx/src/mfx_dispatcher_trace.cpp	/^    sdk_library()$/;"	f	class:sdk_library
sdk_library	libmfx/src/mfx_dispatcher_trace.cpp	/^class sdk_library: public IMsgHandler$/;"	c	file:
sdup	OBSApi/Utility/XString.cpp	/^TCHAR* STDCALL sdup(const TCHAR *str)$/;"	f
sealed	CLRHostPlugin/CLRHostInterop/AbstractWPFSettingsPane.h	/^        virtual long long CreatePane(long long parentHwnd) sealed;$/;"	m	class:CLROBS::abstract
sealed	CLRHostPlugin/CLRHostInterop/AbstractWPFSettingsPane.h	/^        virtual void DestroyPane() sealed;$/;"	m	class:CLROBS::abstract
searchGenre	lame/libmp3lame/id3tag.c	/^searchGenre(const char* genre)$/;"	f	file:
searchGlobalStepsizeMax	lame/libmp3lame/vbrquantize.c	/^searchGlobalStepsizeMax(const algo_t * that, const int sfwork[SFBMAX],$/;"	f	file:
second	libmfx/include/msdk/include/mfxdefs.h	/^    mfxHDL second;$/;"	m
seconds	Source/ReplayBuffer.cpp	/^    int seconds;$/;"	m	struct:ReplayBuffer	file:
secondsLeft	Source/WindowStuff.cpp	/^    UINT secondsLeft;$/;"	m	struct:ReconnectInfo	file:
secureToken	Source/RTMPStuff.h	/^SAVC(secureToken);$/;"	v
secureToken	librtmp/rtmp.c	/^SAVC(secureToken);$/;"	v
secureTokenResponse	librtmp/rtmp.c	/^SAVC(secureTokenResponse);$/;"	v
sed_butlast	lame/ACM/Makefile	/^  sed_butlast='s,\/*[^\/]*$$,,'; \\$/;"	m
sed_butlast	lame/Makefile	/^  sed_butlast='s,\/*[^\/]*$$,,'; \\$/;"	m
sed_butlast	lame/doc/Makefile	/^  sed_butlast='s,\/*[^\/]*$$,,'; \\$/;"	m
sed_butlast	lame/libmp3lame/Makefile	/^  sed_butlast='s,\/*[^\/]*$$,,'; \\$/;"	m
sed_butlast	lame/macosx/Makefile	/^  sed_butlast='s,\/*[^\/]*$$,,'; \\$/;"	m
sed_first	lame/ACM/Makefile	/^  sed_first='s,^\\([^\/]*\\)\/.*$$,\\1,'; \\$/;"	m
sed_first	lame/Makefile	/^  sed_first='s,^\\([^\/]*\\)\/.*$$,\\1,'; \\$/;"	m
sed_first	lame/doc/Makefile	/^  sed_first='s,^\\([^\/]*\\)\/.*$$,\\1,'; \\$/;"	m
sed_first	lame/libmp3lame/Makefile	/^  sed_first='s,^\\([^\/]*\\)\/.*$$,\\1,'; \\$/;"	m
sed_first	lame/macosx/Makefile	/^  sed_first='s,^\\([^\/]*\\)\/.*$$,\\1,'; \\$/;"	m
sed_last	lame/ACM/Makefile	/^  sed_last='s,^.*\/\\([^\/]*\\)$$,\\1,'; \\$/;"	m
sed_last	lame/Makefile	/^  sed_last='s,^.*\/\\([^\/]*\\)$$,\\1,'; \\$/;"	m
sed_last	lame/doc/Makefile	/^  sed_last='s,^.*\/\\([^\/]*\\)$$,\\1,'; \\$/;"	m
sed_last	lame/libmp3lame/Makefile	/^  sed_last='s,^.*\/\\([^\/]*\\)$$,\\1,'; \\$/;"	m
sed_last	lame/macosx/Makefile	/^  sed_last='s,^.*\/\\([^\/]*\\)$$,\\1,'; \\$/;"	m
sed_rest	lame/ACM/Makefile	/^  sed_rest='s,^[^\/]*\/*,,'; \\$/;"	m
sed_rest	lame/Makefile	/^  sed_rest='s,^[^\/]*\/*,,'; \\$/;"	m
sed_rest	lame/doc/Makefile	/^  sed_rest='s,^[^\/]*\/*,,'; \\$/;"	m
sed_rest	lame/libmp3lame/Makefile	/^  sed_rest='s,^[^\/]*\/*,,'; \\$/;"	m
sed_rest	lame/macosx/Makefile	/^  sed_rest='s,^[^\/]*\/*,,'; \\$/;"	m
seek	librtmp/rtmp.c	/^SAVC(seek);$/;"	v
seekTime	librtmp/rtmp.h	/^        int seekTime;$/;"	m	struct:RTMP_LNK
seen	lame/libmp3lame/util.h	/^        int     seen;        \/* how many frames we have seen in this chunk *\/$/;"	m
segment_t	libfaac/bitstream.c	/^} segment_t;$/;"	t	file:
sei	Source/FLVFileStream.cpp	/^    decltype(GetBufferedSEIPacket()) sei = GetBufferedSEIPacket();$/;"	m	class:FLVFileStream	file:
sei	Source/MP4FileStream.cpp	/^    decltype(GetBufferedSEIPacket()) sei = GetBufferedSEIPacket();$/;"	m	class:MP4FileStream	file:
seiData	ObsNvenc/inc/NVENCEncoder.h	/^    List<BYTE> encodeData, headerPacket, seiData;$/;"	m	class:NVENCEncoder
seiPayloadArray	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_H264_SEI_PAYLOAD* seiPayloadArray;            \/**< [in]: Array of SEI payloads which will be inserted for this frame. *\/$/;"	m	struct:_NV_ENC_PIC_PARAMS_H264
seiPayloadArrayCnt	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t seiPayloadArrayCnt;                         \/**< [in]: Specifies the number of elements allocated in  seiPayloadArray array. *\/$/;"	m	struct:_NV_ENC_PIC_PARAMS_H264
sei_ctrl	QSVHelper/Encoder.h	/^    EncodeCtrl keyframe_ctrl, sei_ctrl;$/;"	m	struct:Encoder
sei_free	x264/x264.h	/^    void (*sei_free)( void* );$/;"	m
sei_type	QSVHelper/QSVStuff.h	/^    enum sei_type {SEI_USER_DATA_UNREGISTERED=0x5};$/;"	g	struct:EncodeCtrl
sel	lame/misc/abx.c	/^int sel ( void )$/;"	f
send	Source/RTMPStuff.h	/^SAVC(send);$/;"	v
sendBacklogOverlapped	Source/RTMPPublisher.h	/^    OVERLAPPED sendBacklogOverlapped;$/;"	m	class:RTMPPublisher
send_continue_if_expected	Source/mongoose.c	/^static void send_continue_if_expected(struct connection *conn) {$/;"	f	file:
send_directory_listing	Source/mongoose.c	/^static void send_directory_listing(struct connection *conn, const char *dir) {$/;"	f	file:
send_file_data	Source/mongoose.c	/^static void send_file_data(struct mg_connection *conn, FILE *fp) {$/;"	f	file:
send_http_error	Source/mongoose.c	/^static void send_http_error(struct connection *conn, int code,$/;"	f	file:
send_iobuf	Source/mongoose.c	/^  struct iobuf send_iobuf;    \/\/ Data scheduled for sending$/;"	m	struct:ns_connection	file:
send_ns_event	Source/mongoose.c	/^static void send_ns_event(struct ns_connection *nc, int ev, void *p) {$/;"	f	file:
send_options	Source/mongoose.c	/^static void send_options(struct connection *conn) {$/;"	f	file:
send_ssi_file	Source/mongoose.c	/^static void send_ssi_file(struct mg_connection *conn, const char *path,$/;"	f	file:
send_websocket_handshake	Source/mongoose.c	/^static void send_websocket_handshake(struct mg_connection *conn,$/;"	f	file:
send_websocket_handshake_if_requested	Source/mongoose.c	/^static void send_websocket_handshake_if_requested(struct mg_connection *conn) {$/;"	f	file:
sentinel	lame/ACM/tinyxml/tinyxml.h	/^	TiXmlAttribute sentinel;$/;"	m	class:TiXmlAttributeSet
separateColourPlaneFlag	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t separateColourPlaneFlag;                               \/**< [in]: Set to 1 to enable 4:4:4 separate colour planes *\/$/;"	m	struct:_NV_ENC_CONFIG_H264
sequence	QSVHelper/IntelSupport/src/d3d11_allocator.cpp	/^    sequence(T seed) : x(seed) { }$/;"	f	struct:sequence
sequence	QSVHelper/IntelSupport/src/d3d11_allocator.cpp	/^    sequence(mfxHDL seed) : x(seed) { }$/;"	f	struct:sequence
sequence	QSVHelper/IntelSupport/src/d3d11_allocator.cpp	/^struct sequence {$/;"	s	file:
sequence	QSVHelper/IntelSupport/src/d3d11_allocator.cpp	/^struct sequence<mfxHDL> {$/;"	s	file:
sequence	lame/frontend/rtp.c	/^    int     sequence:16;     \/* sequence number: random *\/$/;"	m	struct:rtpbits	file:
serializedSettings	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        private SerializedSettings serializedSettings;$/;"	f	class:Shared.BrowserSettings	file:
server	Source/mongoose.c	/^  struct mg_server *server;$/;"	m	struct:connection	file:
server_param	Source/mongoose.h	/^  void *server_param;         \/\/ Parameter passed to mg_create_server()$/;"	m	struct:mg_connection
services	Source/Settings.h	/^    std::vector<ServiceIdentifier> services;$/;"	m	class:SettingsPublish
session	QSVHelper/Encoder.h	/^    MFXVideoSession session;$/;"	m	struct:Encoder
session	libmfx/include/mfx_dispatcher.h	/^    mfxSession session;$/;"	m	struct:MFX_DISP_HANDLE
set	lame/misc/abx.c	/^void set ( void )$/;"	f
setBinary	lame/dshow/REG.CPP	/^DWORD CRegKey::setBinary(PTSTR valuename, PVOID pData, int cbSize)$/;"	f	class:Lame::CRegKey
setDWORD	lame/dshow/REG.CPP	/^void    CRegKey::setDWORD(PTSTR valuename, DWORD dwValue)$/;"	f	class:Lame::CRegKey
setDWORD	lame/dshow/REG.CPP	/^void    CRegKey::setDWORD(PTSTR valuename, DWORD dwValue, DWORD dwDefault)$/;"	f	class:Lame::CRegKey
setDebugFile	lame/ACM/ADbg/ADbg.cpp	/^bool ADbg::setDebugFile(const char * NewFilename) {$/;"	f	class:ADbg
setDebugFile	lame/ACM/ADbg/ADbg.h	/^	inline bool setDebugFile(const char * NewFilename) {$/;"	f	class:ADbg
setDefaultsMethod	CLRHostPlugin/CLRHostPlugin/CLRSettingsPane.h	/^    mscorlib::_MethodInfo *setDefaultsMethod;$/;"	m	class:CLRSettingsPane
setFlag	lame/dshow/REG.CPP	/^void    CRegKey::setFlag(PTSTR valuename, BOOL bValue)$/;"	f	class:Lame::CRegKey
setFlag	lame/dshow/REG.CPP	/^void    CRegKey::setFlag(PTSTR valuename, BOOL bValue, BOOL bDefault)$/;"	f	class:Lame::CRegKey
setIncludeTime	lame/ACM/ADbg/ADbg.h	/^	inline bool setIncludeTime(const bool included = true) {$/;"	f	class:ADbg
setLameTagFrameHeader	lame/libmp3lame/VbrTag.c	/^setLameTagFrameHeader(lame_internal_flags const *gfc, unsigned char *buffer)$/;"	f	file:
setLang	lame/libmp3lame/id3tag.c	/^setLang(char *dst, char const *src)$/;"	f	file:
setLevel	lame/ACM/ADbg/ADbg.h	/^	inline int setLevel(const int level) {$/;"	f	class:ADbg
setPrefix	lame/ACM/ADbg/ADbg.h	/^	inline const char * setPrefix(const char * string) {$/;"	f	class:ADbg
setProcessPriority	lame/frontend/main.c	/^setProcessPriority(int Priority)$/;"	f	file:
setProcessPriority	lame/frontend/main.c	/^setProcessPriority(int Priority)$/;"	f
setSkipStartAndEnd	lame/frontend/get_audio.c	/^setSkipStartAndEnd(lame_t gfp, int enc_delay, int enc_padding)$/;"	f	file:
setString	lame/dshow/REG.CPP	/^void    CRegKey::setString(PTSTR valuename, PTSTR pData)$/;"	f	class:Lame::CRegKey
setUseFile	lame/ACM/ADbg/ADbg.h	/^	inline bool setUseFile(const bool usefile = true) {$/;"	f	class:ADbg
setUserModeExceptionProc	Source/Main.cpp	/^typedef BOOL (WINAPI *setUserModeExceptionProc)(DWORD);$/;"	t	file:
setX	CLRHostPlugin/CLRHostPlugin/CLRVector2.cpp	/^void CLRVector2::setX(float x)$/;"	f	class:CLRVector2
setXMethod	CLRHostPlugin/CLRHostPlugin/CLRVector2.h	/^    mscorlib::_MethodInfo *setXMethod;$/;"	m	class:CLRVector2
setY	CLRHostPlugin/CLRHostPlugin/CLRVector2.cpp	/^void CLRVector2::setY(float y)$/;"	f	class:CLRVector2
setYMethod	CLRHostPlugin/CLRHostPlugin/CLRVector2.h	/^    mscorlib::_MethodInfo *setYMethod;$/;"	m	class:CLRVector2
set_4_byte_value	lame/libmp3lame/id3tag.c	/^set_4_byte_value(unsigned char *bytes, uint32_t value)$/;"	f	file:
set_Bitrate	lame/dshow/Mpegac.cpp	/^STDMETHODIMP CMpegAudEnc::set_Bitrate(DWORD dwBitrate)$/;"	f	class:CMpegAudEnc
set_CRCFlag	lame/dshow/Mpegac.cpp	/^STDMETHODIMP CMpegAudEnc::set_CRCFlag(DWORD dwFlag)$/;"	f	class:CMpegAudEnc
set_ChannelMode	lame/dshow/Mpegac.cpp	/^STDMETHODIMP CMpegAudEnc::set_ChannelMode(DWORD dwChannelMode)$/;"	f	class:CMpegAudEnc
set_CopyrightFlag	lame/dshow/Mpegac.cpp	/^STDMETHODIMP CMpegAudEnc::set_CopyrightFlag(DWORD dwFlag)$/;"	f	class:CMpegAudEnc
set_EnforceVBRmin	lame/dshow/Mpegac.cpp	/^STDMETHODIMP CMpegAudEnc::set_EnforceVBRmin(DWORD dwFlag)$/;"	f	class:CMpegAudEnc
set_ForceMS	lame/dshow/Mpegac.cpp	/^STDMETHODIMP CMpegAudEnc::set_ForceMS(DWORD dwFlag)$/;"	f	class:CMpegAudEnc
set_ForceMono	lame/dshow/Mpegac.cpp	/^STDMETHODIMP CMpegAudEnc::set_ForceMono(DWORD dwFlag)$/;"	f	class:CMpegAudEnc
set_KeepAllFreq	lame/dshow/Mpegac.cpp	/^STDMETHODIMP CMpegAudEnc::set_KeepAllFreq(DWORD dwFlag)$/;"	f	class:CMpegAudEnc
set_MPEGLayer	lame/dshow/Mpegac.cpp	/^STDMETHODIMP CMpegAudEnc::set_MPEGLayer(DWORD dwLayer)$/;"	f	class:CMpegAudEnc
set_ModeFixed	lame/dshow/Mpegac.cpp	/^STDMETHODIMP CMpegAudEnc::set_ModeFixed(DWORD dwModeFixed)$/;"	f	class:CMpegAudEnc
set_NoShortBlock	lame/dshow/Mpegac.cpp	/^STDMETHODIMP CMpegAudEnc::set_NoShortBlock(DWORD dwNoShortBlock)$/;"	f	class:CMpegAudEnc
set_OriginalFlag	lame/dshow/Mpegac.cpp	/^STDMETHODIMP CMpegAudEnc::set_OriginalFlag(DWORD dwFlag)$/;"	f	class:CMpegAudEnc
set_PESOutputEnabled	lame/dshow/Mpegac.cpp	/^STDMETHODIMP CMpegAudEnc::set_PESOutputEnabled(DWORD dwEnabled)$/;"	f	class:CMpegAudEnc
set_ParameterBlockSize	lame/dshow/Mpegac.cpp	/^STDMETHODIMP CMpegAudEnc::set_ParameterBlockSize(BYTE *pcBlock, DWORD dwSize)$/;"	f	class:CMpegAudEnc
set_Quality	lame/dshow/Mpegac.cpp	/^STDMETHODIMP CMpegAudEnc::set_Quality(DWORD dwQuality)             $/;"	f	class:CMpegAudEnc
set_SampleOverlap	lame/dshow/Mpegac.cpp	/^STDMETHODIMP CMpegAudEnc::set_SampleOverlap(DWORD dwFlag)$/;"	f	class:CMpegAudEnc
set_SampleRate	lame/dshow/Mpegac.cpp	/^STDMETHODIMP CMpegAudEnc::set_SampleRate(DWORD dwSampleRate)$/;"	f	class:CMpegAudEnc
set_SetDuration	lame/dshow/Mpegac.cpp	/^STDMETHODIMP CMpegAudEnc::set_SetDuration(DWORD dwFlag)$/;"	f	class:CMpegAudEnc
set_StrictISO	lame/dshow/Mpegac.cpp	/^STDMETHODIMP CMpegAudEnc::set_StrictISO(DWORD dwFlag)$/;"	f	class:CMpegAudEnc
set_Variable	lame/dshow/Mpegac.cpp	/^STDMETHODIMP CMpegAudEnc::set_Variable(DWORD dwVariable)$/;"	f	class:CMpegAudEnc
set_VariableMax	lame/dshow/Mpegac.cpp	/^STDMETHODIMP CMpegAudEnc::set_VariableMax(DWORD dwMax)$/;"	f	class:CMpegAudEnc
set_VariableMin	lame/dshow/Mpegac.cpp	/^STDMETHODIMP CMpegAudEnc::set_VariableMin(DWORD dwMin)$/;"	f	class:CMpegAudEnc
set_VariableQ	lame/dshow/Mpegac.cpp	/^STDMETHODIMP CMpegAudEnc::set_VariableQ(DWORD dwVBRq)             $/;"	f	class:CMpegAudEnc
set_VoiceMode	lame/dshow/Mpegac.cpp	/^STDMETHODIMP CMpegAudEnc::set_VoiceMode(DWORD dwFlag)$/;"	f	class:CMpegAudEnc
set_XingTag	lame/dshow/Mpegac.cpp	/^STDMETHODIMP CMpegAudEnc::set_XingTag(DWORD dwXingTag)$/;"	f	class:CMpegAudEnc
set_code_size	Source/libnsgif.h	/^    int code_size, set_code_size;$/;"	m	struct:gif_animation
set_debug_file	lame/frontend/console.c	/^set_debug_file(const char *fn)$/;"	f
set_default_option_values	Source/mongoose.c	/^static void set_default_option_values(char **opts) {$/;"	f	file:
set_frame_apic	lame/libmp3lame/id3tag.c	/^set_frame_apic(unsigned char *frame, const char *mimetype, const unsigned char *data, size_t size)$/;"	f	file:
set_frame_comment	lame/libmp3lame/id3tag.c	/^set_frame_comment(unsigned char *frame, FrameDataNode const *node)$/;"	f	file:
set_frame_custom2	lame/libmp3lame/id3tag.c	/^set_frame_custom2(unsigned char *frame, FrameDataNode const *node)$/;"	f	file:
set_frame_pinfo	lame/libmp3lame/quantize_pvt.c	/^set_frame_pinfo(lame_internal_flags * gfc, const III_psy_ratio ratio[2][2])$/;"	f
set_frame_wxxx	lame/libmp3lame/id3tag.c	/^set_frame_wxxx(unsigned char *frame, FrameDataNode const *node)$/;"	f	file:
set_get.c	lame/libmp3lame/set_get.c	1;"	F
set_get.h	lame/libmp3lame/set_get.h	1;"	F
set_id3_albumart	lame/frontend/parse.c	/^set_id3_albumart(lame_t gfp, char const* file_name)$/;"	f	file:
set_id3tag	lame/frontend/parse.c	/^set_id3tag(lame_global_flags* gfp, int type, char const* str)$/;"	f	file:
set_id3v2tag	lame/frontend/parse.c	/^set_id3v2tag(lame_global_flags* gfp, int type, unsigned short const* str)$/;"	f	file:
set_ips	Source/mongoose.c	/^static void set_ips(struct ns_connection *nc, int is_rem) {$/;"	f	file:
set_pinfo	lame/libmp3lame/quantize_pvt.c	/^set_pinfo(lame_internal_flags const *gfc,$/;"	f	file:
set_playlist	librtmp/rtmp.c	/^SAVC(set_playlist);$/;"	v
set_pointer	lame/mpglib/common.c	/^set_pointer(PMPSTR mp, long backstep)$/;"	f
set_process_affinity	lame/frontend/main.c	/^set_process_affinity()$/;"	f	file:
set_scalefacs	lame/libmp3lame/vbrquantize.c	/^set_scalefacs(gr_info * cod_info, const int *vbrsfmin, int sf[], const uint8_t * max_range)$/;"	f	file:
set_subblock_gain	lame/libmp3lame/vbrquantize.c	/^set_subblock_gain(gr_info * cod_info, const int mingain_s[3], int sf[])$/;"	f	file:
set_text_field	lame/libmp3lame/id3tag.c	/^set_text_field(unsigned char *field, const char *text, size_t size, int pad)$/;"	f	file:
setcolor	lame/frontend/gpkplotting.c	/^setcolor(GtkWidget * widget, GdkColor * color, gint red, gint green, gint blue)$/;"	f
setsockopt	librtmp/rtmp_sys.h	53;"	d
settings	NoiseGate/NoiseGate.h	/^    NoiseGateSettings * settings;$/;"	m	class:NoiseGate
settings	scenesw/SceneSwitcher.h	/^    SceneSwitcherSettings * settings;$/;"	m	class:SceneSwitcher
settingsLocation	CLRBrowserSourcePlugin/Plugin/Shared/BrowserSettings.cs	/^        private String settingsLocation;$/;"	f	class:Shared.BrowserSettings	file:
settingsPane	CLRBrowserSourcePlugin/Plugin/BrowserSettingsPane.cs	/^        private SettingsPane settingsPane;$/;"	f	class:CLRBrowserSourcePlugin.BrowserSettingsPane	file:
settingsPaneType	CLRHostPlugin/CLRHostPlugin/CLRHost.h	/^    mscorlib::_Type *settingsPaneType;$/;"	m	class:CLRHost
settingsPanes	Source/OBS.h	/^    List<SettingsPane*> settingsPanes;$/;"	m	class:OBS
setup	lame/misc/abx.c	/^void setup ( int fdd, int samples, long freq )$/;"	f
sfBandIndex	lame/libmp3lame/quantize_pvt.c	/^const scalefac_struct sfBandIndex[9] = {$/;"	v
sfDepth	lame/libmp3lame/vbrquantize.c	/^sfDepth(const int sfwork[SFBMAX])$/;"	f	file:
sf_aiff	lame/frontend/get_audio.h	/^    sf_aiff,$/;"	e	enum:sound_file_format_e
sf_mp1	lame/frontend/get_audio.h	/^    sf_mp1,                  \/* MPEG Layer 1, aka mpg *\/$/;"	e	enum:sound_file_format_e
sf_mp123	lame/frontend/get_audio.h	/^    sf_mp123,                \/* MPEG Layer 1,2 or 3; whatever .mp3, .mp2, .mp1 or .mpg contains *\/$/;"	e	enum:sound_file_format_e
sf_mp2	lame/frontend/get_audio.h	/^    sf_mp2,                  \/* MPEG Layer 2 *\/$/;"	e	enum:sound_file_format_e
sf_mp3	lame/frontend/get_audio.h	/^    sf_mp3,                  \/* MPEG Layer 3 *\/$/;"	e	enum:sound_file_format_e
sf_ogg	lame/frontend/get_audio.h	/^    sf_ogg$/;"	e	enum:sound_file_format_e
sf_raw	lame/frontend/get_audio.h	/^    sf_raw,$/;"	e	enum:sound_file_format_e
sf_unknown	lame/frontend/get_audio.h	/^    sf_unknown,$/;"	e	enum:sound_file_format_e
sf_wave	lame/frontend/get_audio.h	/^    sf_wave,$/;"	e	enum:sound_file_format_e
sfb	lame/libmp3lame/lame-analysis.h	/^    double  sfb[2][2][SBMAX_l];$/;"	m	struct:plotting_data
sfb21_extra	lame/libmp3lame/util.h	/^        int     sfb21_extra; \/* will be set in lame_init_params *\/$/;"	m
sfb21mod	lame/libmp3lame/presets.c	/^    int     sfb21mod;$/;"	m	file:
sfb_count1	lame/libmp3lame/quantize_pvt.h	/^    int     sfb_count1;$/;"	m	struct:calc_noise_data_t
sfb_lmax	lame/libmp3lame/l3side.h	/^    int     sfb_lmax;$/;"	m
sfb_offset	libfaac/coder.h	/^    int sfb_offset[250];$/;"	m
sfb_partition_table	lame/libmp3lame/l3side.h	/^    const int *sfb_partition_table;$/;"	m
sfb_prediction_used	libfaac/coder.h	/^    int sfb_prediction_used[MAX_SCFAC_BANDS];$/;"	m
sfb_s	lame/libmp3lame/lame-analysis.h	/^    double  sfb_s[2][2][3 * SBMAX_s];$/;"	m	struct:plotting_data
sfb_smin	lame/libmp3lame/l3side.h	/^    int     sfb_smin;$/;"	m
sfbbox	lame/frontend/gtkanal.c	/^GtkWidget *sfbbox[2];        \/* scalefactors gr=0,1 plotted here *\/$/;"	v
sfbdivide	lame/libmp3lame/l3side.h	/^    int     sfbdivide;$/;"	m
sfbits	lame/libmp3lame/lame-analysis.h	/^    int     sfbits[2][2];$/;"	m	struct:plotting_data
sfblines	lame/frontend/gtkanal.c	/^    int     sfblines;        \/* plot scalefactor bands in MDCT plot *\/$/;"	m	struct:gtkinfostruct	file:
sfbmax	lame/libmp3lame/l3side.h	/^    int     sfbmax;$/;"	m
sfix	OBSApi/Utility/XString.cpp	/^TCHAR *STDCALL sfix(TCHAR *str)$/;"	f
sgn	lame/misc/abx.c	/^int  sgn ( double x )$/;"	f
sgn	lame/misc/mlame_corr.c	/^int sgn ( long double x )$/;"	f
shader	OBSApi/GraphicsSystem.h	/^    std::unique_ptr<Shader> shader;$/;"	m	class:FutureShader
shaderData	OBSApi/GraphicsSystem.h	/^            ShaderBlob shaderData;$/;"	m	struct:GraphicsSystem::FutureShaderContainer::FutureShaderContext
shaderData	OBSApi/GraphicsSystem.h	/^    ShaderBlob const *shaderData = nullptr;$/;"	m	class:FutureShader
shaderReadyEvent	OBSApi/GraphicsSystem.h	/^    HANDLE shaderReadyEvent;$/;"	m	class:FutureShader
shareDevice	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^ID3D10Device1           *shareDevice = NULL;$/;"	v
sharedHandle	GraphicsCapture/GraphicsCaptureHook/D3D11Capture.cpp	/^HANDLE                  sharedHandle = NULL;$/;"	v
sharedMemory	GraphicsCapture/MemoryCapture.h	/^    LPBYTE sharedMemory;$/;"	m	class:MemoryCapture
sharedMemory	GraphicsCapture/SharedTexCapture.h	/^    LPBYTE sharedMemory;$/;"	m	class:SharedTexCapture
sharedMemoryIDCounter	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	/^UINT sharedMemoryIDCounter = 0;$/;"	v
sharedTexture	GraphicsCapture/SharedTexCapture.h	/^    Texture *sharedTexture, *copyTexture;$/;"	m	class:SharedTexCapture
sharedTexture	GraphicsCapture/WindowCapture.h	/^    Texture *sharedTexture;$/;"	m	class:WindowCapture
sharedstatedir	lame/ACM/ADbg/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	lame/ACM/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	lame/ACM/ddk/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	lame/ACM/tinyxml/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	lame/Dll/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	lame/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	lame/debian/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	lame/doc/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	lame/doc/html/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	lame/doc/man/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	lame/dshow/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	lame/frontend/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	lame/include/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	lame/libmp3lame/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	lame/libmp3lame/i386/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	lame/libmp3lame/vector/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	lame/mac/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	lame/macosx/English.lproj/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	lame/macosx/LAME.xcodeproj/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	lame/macosx/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	lame/misc/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	lame/mpglib/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	lame/vc_solution/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
shortDiff	lame/mpglib/layer3.c	/^    short   shortDiff[13];$/;"	m	struct:bandInfoStruct	file:
shortIdx	lame/mpglib/layer3.c	/^    short   shortIdx[14];$/;"	m	struct:bandInfoStruct	file:
shortLimit	lame/mpglib/layer3.c	/^static int shortLimit[9][14];$/;"	v	file:
short_block_allowed	lame/libmp3lame/lame_global_flags.h	/^    short_block_allowed = 0, \/* LAME may use them, even different block types for L\/R *\/$/;"	e	enum:short_block_e
short_block_constrain	lame/libmp3lame/vbrquantize.c	/^short_block_constrain(const algo_t * that, const int vbrsf[SFBMAX],$/;"	f	file:
short_block_coupled	lame/libmp3lame/lame_global_flags.h	/^    short_block_coupled, \/* LAME may use them, but always same block types in L\/R *\/$/;"	e	enum:short_block_e
short_block_dispensed	lame/libmp3lame/lame_global_flags.h	/^    short_block_dispensed, \/* LAME will not use short blocks, long blocks only *\/$/;"	e	enum:short_block_e
short_block_e	lame/libmp3lame/lame_global_flags.h	/^typedef enum short_block_e {$/;"	g
short_block_forced	lame/libmp3lame/lame_global_flags.h	/^    short_block_forced  \/* LAME will not use long blocks, short blocks only *\/$/;"	e	enum:short_block_e
short_block_not_set	lame/libmp3lame/lame_global_flags.h	/^    short_block_not_set = -1, \/* allow LAME to decide *\/$/;"	e	enum:short_block_e
short_block_t	lame/libmp3lame/lame_global_flags.h	/^} short_block_t;$/;"	t
short_blocks	lame/libmp3lame/lame_global_flags.h	/^    short_block_t short_blocks;$/;"	m	struct:lame_global_struct
short_blocks	lame/libmp3lame/util.h	/^        short_block_t short_blocks;$/;"	m
short_help	lame/frontend/parse.c	/^short_help(const lame_global_flags * gfp, FILE * const fp, const char *ProgramName)$/;"	f
shortctl	libfaac/include/faaccfg.h	/^    int shortctl;$/;"	m	struct:faacEncConfiguration
shortfact	lame/libmp3lame/util.h	/^        FLOAT   shortfact[SBMAX_s];$/;"	m
should_keep_alive	Source/mongoose.c	/^static int should_keep_alive(const struct mg_connection *conn) {$/;"	f	file:
showConfigurationMethod	CLRHostPlugin/CLRHostPlugin/CLRImageSourceFactory.h	/^    mscorlib::_MethodInfo *showConfigurationMethod;$/;"	m	class:CLRImageSourceFactory
showExtentTime	Source/TextOutputSource.cpp	/^    float       showExtentTime;$/;"	m	class:TextOutputSource	file:
shuffle	lame/misc/abx.c	/^size_t          shuffle [MAX >> 1] [2];         \/\/ Shuffle-Tabelle$/;"	v
shuffle_len	lame/misc/abx.c	/^size_t          shuffle_len;$/;"	v
si	OBSApi/Utility/XT_Windows.cpp	/^SYSTEM_INFO si;$/;"	v
sib	minhook/src/HDE32/hde32.h	/^    uint8_t sib;$/;"	m
sib	minhook/src/HDE64/include/hde64.h	/^    uint8_t sib;$/;"	m
sib_base	minhook/src/HDE32/hde32.h	/^    uint8_t sib_base;$/;"	m
sib_base	minhook/src/HDE64/include/hde64.h	/^    uint8_t sib_base;$/;"	m
sib_index	minhook/src/HDE32/hde32.h	/^    uint8_t sib_index;$/;"	m
sib_index	minhook/src/HDE64/include/hde64.h	/^    uint8_t sib_index;$/;"	m
sib_scale	minhook/src/HDE32/hde32.h	/^    uint8_t sib_scale;$/;"	m
sib_scale	minhook/src/HDE64/include/hde64.h	/^    uint8_t sib_scale;$/;"	m
side_info	libfaac/coder.h	/^    int side_info;$/;"	m
side_parsed	lame/mpglib/mpglib.h	/^    int     side_parsed;     \/* 1 = header of sideinfo of current frame has been parsed *\/$/;"	m	struct:mpstr_tag
sideinfo	lame/mpglib/mpglib.h	/^    struct III_sideinfo sideinfo;$/;"	m	struct:mpstr_tag
sideinfo_layer_I	lame/mpglib/layer1.c	/^} sideinfo_layer_I;$/;"	t	file:
sideinfo_layer_II	lame/mpglib/layer2.c	/^} sideinfo_layer_II;$/;"	t	file:
sideinfo_layer_II_struct	lame/mpglib/layer2.c	/^typedef struct sideinfo_layer_II_struct$/;"	s	file:
sideinfo_layer_I_struct	lame/mpglib/layer1.c	/^typedef struct sideinfo_layer_I_struct$/;"	s	file:
sideinfo_len	lame/libmp3lame/util.h	/^        int     sideinfo_len;$/;"	m
signal	QSVHelper/WindowsStuff.h	/^    void signal() { SetEvent(signal_); }$/;"	f	struct:IPCSignal
signal_	QSVHelper/WindowsStuff.h	/^    safe_handle signal_;$/;"	m	struct:IPCSignal
signed	lame/doc/html/detailed.html	/^<a name="signed"><span class="hilight">--signed<\/span><\/a> Input RAW uses signed values   $/;"	a
silent	lame/doc/html/detailed.html	/^<a name="silent"><span class="hilight">--silent<\/span><\/a> Don't print any output in the screen  $/;"	a
silent	lame/frontend/main.h	/^    int   silent;                   \/* Verbosity *\/$/;"	m	struct:UiConfig
sin	Source/mongoose.c	/^  struct sockaddr_in sin;$/;"	m	union:socket_address	file:
sin6	Source/mongoose.c	/^  struct sockaddr sin6;$/;"	m	union:socket_address	file:
sin6	Source/mongoose.c	/^  struct sockaddr_in6 sin6;$/;"	m	union:socket_address	file:
sin_window_long	libfaac/frame.h	/^    double *sin_window_long;$/;"	m
sin_window_short	libfaac/frame.h	/^    double *sin_window_short;$/;"	m
sinc_get_description	libsamplerate/src_sinc.c	/^sinc_get_description (int src_enum)$/;"	f
sinc_get_name	libsamplerate/src_sinc.c	/^sinc_get_name (int src_enum)$/;"	f
sinc_hex_vari_process	libsamplerate/src_sinc.c	/^sinc_hex_vari_process (SRC_PRIVATE *psrc, SRC_DATA *data)$/;"	f	file:
sinc_magic_marker	libsamplerate/src_sinc.c	/^{	int		sinc_magic_marker ;$/;"	m	file:
sinc_mono_vari_process	libsamplerate/src_sinc.c	/^sinc_mono_vari_process (SRC_PRIVATE *psrc, SRC_DATA *data)$/;"	f	file:
sinc_multichan_vari_process	libsamplerate/src_sinc.c	/^sinc_multichan_vari_process (SRC_PRIVATE *psrc, SRC_DATA *data)$/;"	f	file:
sinc_quad_vari_process	libsamplerate/src_sinc.c	/^sinc_quad_vari_process (SRC_PRIVATE *psrc, SRC_DATA *data)$/;"	f	file:
sinc_reset	libsamplerate/src_sinc.c	/^sinc_reset (SRC_PRIVATE *psrc)$/;"	f	file:
sinc_set_converter	libsamplerate/src_sinc.c	/^sinc_set_converter (SRC_PRIVATE *psrc, int src_enum)$/;"	f
sinc_stereo_vari_process	libsamplerate/src_sinc.c	/^sinc_stereo_vari_process (SRC_PRIVATE *psrc, SRC_DATA *data)$/;"	f	file:
single	lame/mpglib/mpg123.h	/^    int     single;          \/* single channel (monophonic) *\/$/;"	m	struct:frame
size	CLRHostPlugin/CLRHostInterop/AbstractImageSource.h	/^        Vector2^ size;$/;"	m	class:CLROBS::abstract
size	OBSApi/Scene.h	/^    Vect2 pos, size;$/;"	m	class:SceneItem
size	ObsNvenc/inc/NVENCEncoder.h	/^    int size;$/;"	m	struct:NVENCEncoderOutputSurface
size	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t              size;                        \/**< [in]: Size of the bitstream buffer to be created *\/$/;"	m	struct:_NV_ENC_CREATE_BITSTREAM_BUFFER
size	QSVHelper/WindowsStuff.h	/^    size_t size;$/;"	m	struct:IPCArray
size	QSVHelper/WindowsStuff.h	/^    uint64_t size;$/;"	m	struct:NamedSharedMemory
size	Source/MP4FileStream.cpp	/^    UINT    size;$/;"	m	struct:MP4AudioFrameInfo	file:
size	Source/MP4FileStream.cpp	/^    UINT    size;$/;"	m	struct:MP4VideoFrameInfo	file:
size	Source/OBS.h	/^    UINT size;$/;"	m	struct:DataPacket
size	Source/TextOutputSource.cpp	/^    int         size;$/;"	m	class:TextOutputSource	file:
size	Source/mongoose.c	/^  size_t size;$/;"	m	struct:iobuf	file:
size	lame/libmp3lame/util.h	/^        int     size;        \/* size of our bag *\/$/;"	m
size	lame/mpglib/mpglib.h	/^    long    size;$/;"	m	struct:buf
size	libfaac/bitstream.h	/^  long size;            \/* buffer size in bytes *\/$/;"	m
size	libfaac/psych.h	/^	int size;$/;"	m
size	libmfx/include/mfx_vector.h	/^        mfxU32 size() const $/;"	f	class:MFX::MFXVector
size	librtmp/hashswf.c	/^    int size;$/;"	m	struct:info	file:
size	librtmp/http.h	/^    int size;$/;"	m	struct:HTTP_ctx
sizeOfCommentNode	lame/libmp3lame/id3tag.c	/^sizeOfCommentNode(FrameDataNode const *node)$/;"	f	file:
sizeOfNode	lame/libmp3lame/id3tag.c	/^sizeOfNode(FrameDataNode const *node)$/;"	f	file:
sizeOfOldTag	lame/frontend/get_audio.c	/^sizeOfOldTag(lame_t gf)$/;"	f
sizeOfWxxxNode	lame/libmp3lame/id3tag.c	/^sizeOfWxxxNode(FrameDataNode const *node)$/;"	f	file:
sizeS	libfaac/psych.h	/^	int sizeS;$/;"	m
sizeSet	Source/DesktopImageSource.cpp	/^    bool sizeSet;$/;"	m	struct:ConfigDesktopSourceInfo	file:
skip	Source/mongoose.c	/^static char *skip(char **buf, const char *delimiters) {$/;"	f	file:
skipId3v2	lame/Dll/BladeMP3EncDLL.c	/^skipId3v2(FILE * fpStream, size_t lametag_frame_size)$/;"	f	file:
skipId3v2	lame/dshow/Encoder.cpp	/^HRESULT CEncoder::skipId3v2(IStream *pStream, size_t lametag_frame_size)$/;"	f	class:CEncoder
skipId3v2	lame/libmp3lame/VbrTag.c	/^skipId3v2(FILE * fpStream)$/;"	f	file:
skip_end	lame/frontend/get_audio.c	/^    int     skip_end;        \/* number samples to ignore at the end *\/$/;"	m	struct:PcmBuffer	file:
skip_start	lame/frontend/get_audio.c	/^    int     skip_start;      \/* number samples to ignore at the beginning *\/$/;"	m	struct:PcmBuffer	file:
slashLen	libmfx/src/mfx_plugin_hive.cpp	/^    const mfxU32 slashLen = 1;$/;"	v
sleep	Source/mongoose.c	126;"	d	file:
sleep	librtmp/rtmp_sys.h	58;"	d
slen	OBSApi/Utility/XString.cpp	/^UINT STDCALL slen(const TCHAR *strSrc)$/;"	f
slen	lame/libmp3lame/l3side.h	/^    int     slen[4];$/;"	m
slen1_n	lame/libmp3lame/takehiro.c	/^static const int slen1_n[16] = { 1, 1, 1, 1, 8, 2, 2, 2, 4, 4, 4, 8, 8, 8, 16, 16 };$/;"	v	file:
slen1_tab	lame/libmp3lame/takehiro.c	/^const int slen1_tab[16] = { 0, 0, 0, 0, 3, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4 };$/;"	v
slen2_n	lame/libmp3lame/takehiro.c	/^static const int slen2_n[16] = { 1, 2, 4, 8, 1, 2, 4, 8, 2, 4, 8, 2, 4, 8, 4, 8 };$/;"	v	file:
slen2_tab	lame/libmp3lame/takehiro.c	/^const int slen2_tab[16] = { 0, 1, 2, 3, 0, 1, 2, 3, 1, 2, 3, 1, 2, 3, 2, 3 };$/;"	v
sliceMode	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                            sliceMode;                  \/**< [in]: This parameter in conjunction with sliceModeData specifies the way in which the picture is divided into slices$/;"	m	struct:_NV_ENC_CONFIG_H264
sliceMode	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t sliceMode;                                  \/**< [in]: This parameter in conjunction with sliceModeData specifies the way in which the picture is divided into slices$/;"	m	struct:_NV_ENC_PIC_PARAMS_H264
sliceModeData	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                            sliceModeData;              \/**< [in]: Specifies the parameter needed for sliceMode. For:$/;"	m	struct:_NV_ENC_CONFIG_H264
sliceModeData	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t sliceModeData;                              \/**< [in]: Specifies the parameter needed for sliceMode. For:$/;"	m	struct:_NV_ENC_PIC_PARAMS_H264
sliceModeDataUpdate	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t sliceModeDataUpdate        :1;              \/**< [in]: Set to 1 if client wants to change the sliceModeData field to specify new sliceSize Parameter$/;"	m	struct:_NV_ENC_PIC_PARAMS_H264
sliceOffsets	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t            sliceOffsets[16];                \/**< [out]: Offsets of each slice *\/$/;"	m	struct:_NV_ENC_STAT
sliceOffsets	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t*               sliceOffsets;                \/**< [in,out]: Array which receives the slice offsets. Currently used only when NV_ENC_CONFIG_H264::sliceMode == 3. Array size must be equal to NV_ENC_CONFIG_H264::sliceModeData. *\/$/;"	m	struct:_NV_ENC_LOCK_BITSTREAM
sliceTypeArrayCnt	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t sliceTypeArrayCnt;                          \/**< [in]: Client should set this to the number of elements allocated in sliceTypeData array. If sliceTypeData is NULL then this should be set to 0 *\/$/;"	m	struct:_NV_ENC_PIC_PARAMS_H264
sliceTypeData	ObsNvenc/inc/nvEncodeAPI.h	/^    uint8_t* sliceTypeData;                              \/**< [in]: Array which specifies the slice type used to force intra slice for a particular slice. Currently supported only for NV_ENC_CONFIG_H264::sliceMode == 3. $/;"	m	struct:_NV_ENC_PIC_PARAMS_H264
slice_rate	x264/x264.h	/^    int slice_rate;  \/* ?? *\/$/;"	m
sloppyCompared	lame/libmp3lame/id3tag.c	/^sloppyCompared(const char* p, const char* q)$/;"	f	file:
sloppySearchGenre	lame/libmp3lame/id3tag.c	/^sloppySearchGenre(const char *genre)$/;"	f	file:
slot_lag	lame/libmp3lame/util.h	/^        int     slot_lag;$/;"	m
slow_high_qual_coeffs	libsamplerate/high_qual_coeffs.h	/^} slow_high_qual_coeffs =$/;"	v
slow_high_qual_coeffs_s	libsamplerate/high_qual_coeffs.h	/^static const struct slow_high_qual_coeffs_s$/;"	s
slow_mid_qual_coeffs	libsamplerate/mid_qual_coeffs.h	/^} slow_mid_qual_coeffs =$/;"	v
slow_mid_qual_coeffs_s	libsamplerate/mid_qual_coeffs.h	/^static const struct slow_mid_qual_coeffs_s$/;"	s
slwr	OBSApi/Utility/XString.cpp	/^void STDCALL slwr(TCHAR *strDest)$/;"	f
smpls	lame/frontend/amiga_mpega.c	/^static const int smpls[2][4] = {$/;"	v	file:
smul	libfaac/kiss_fft/_kiss_fft_guts.h	46;"	d
snd_file	lame/frontend/get_audio.c	/^    SNDFILE *snd_file;$/;"	m	struct:get_audio_global_data_struct	file:
snprintf	Source/mongoose.c	124;"	d	file:
snprintf	librtmp/rtmp_sys.h	45;"	d
snr_pred	libfaac/ltp.c	/^static double snr_pred(double *mdct_in, double *mdct_pred, int *sfb_flag, int *sfb_offset,$/;"	f	file:
sock	Source/mongoose.c	/^  sock_t sock;                \/\/ Socket$/;"	m	struct:ns_connection	file:
sock_t	Source/mongoose.c	/^typedef SOCKET sock_t;$/;"	t	file:
sock_t	Source/mongoose.c	/^typedef int sock_t;$/;"	t	file:
socket_address	Source/mongoose.c	/^union socket_address {$/;"	u	file:
socketerror	librtmp/rtmp.c	/^socketerror(int err)$/;"	f
socklen_t	Source/mongoose.c	/^typedef int socklen_t;$/;"	t	file:
sockshost	librtmp/rtmp.h	/^        AVal sockshost;$/;"	m	struct:RTMP_LNK
socksport	librtmp/rtmp.h	/^        unsigned short socksport;$/;"	m	struct:RTMP_LNK
solidPixelShader	Source/OBS.h	/^    Shader  *solidVertexShader, *solidPixelShader;$/;"	m	class:OBS
solidVertexShader	Source/OBS.h	/^    Shader  *solidVertexShader, *solidPixelShader;$/;"	m	class:OBS
soundOutputType	DShowPlugin/DeviceSource.h	/^    int             soundOutputType;$/;"	m	class:DeviceSource
sound_file_format	lame/frontend/get_audio.h	/^} sound_file_format;$/;"	t
sound_file_format_e	lame/frontend/get_audio.h	/^typedef enum sound_file_format_e {$/;"	g
soundcard_t	lame/misc/ath.c	/^} soundcard_t;$/;"	t	file:
source	DShowPlugin/CaptureFilter.h	/^    DeviceSource *source;$/;"	m	class:CapturePin
source	OBSApi/Scene.h	/^    ImageSource *source;$/;"	m	class:SceneItem
source	Source/OBS.h	/^    ImageSource *source;$/;"	m	struct:GlobalSourceInfo
sourceChangedCallback	Source/OBS.h	/^    OBS_SOURCE_CHANGED_CALLBACK sourceChangedCallback;$/;"	m	struct:PluginInfo
sourceClass	Source/GlobalSource.cpp	/^    ClassInfo *sourceClass;$/;"	m	class:GlobalSource	file:
sourceOrderChangedCallback	Source/OBS.h	/^    OBS_CALLBACK sourceOrderChangedCallback;$/;"	m	struct:PluginInfo
sourcePitch	GraphicsCapture/GraphicsCaptureHook/D3D8Capture.cpp	/^DWORD sourcePitch = 0;$/;"	v
sourceVolume	OBSApi/AudioSource.h	/^    float sourceVolume;$/;"	m	class:AudioSource
sourcesAddedOrRemovedCallback	Source/OBS.h	/^    OBS_CALLBACK sourcesAddedOrRemovedCallback;$/;"	m	struct:PluginInfo
sp	QSVHelper/SupportStuff.h	/^    mfxSyncPoint sp;$/;"	m	struct:encode_task
space-id3v1	lame/doc/html/detailed.html	/^<a name="space-id3v1"><span class="hilight">--space-id3v1<\/span><\/a> Use spaces for padding.  $/;"	a
spawn_helper	Source/Encoder_QSV.cpp	/^    bool spawn_helper(String &event_prefix, safe_handle &qsvhelper_process, safe_handle &qsvhelper_thread, IPCWaiter &process_waiter)$/;"	f
spawn_stdio_thread	Source/mongoose.c	/^static void spawn_stdio_thread(sock_t sock, HANDLE hPipe,$/;"	f	file:
specFilter	libfaac/filtbank.c	/^void specFilter(double *freqBuff,$/;"	f
spec_option	lame/frontend/gtkanal.c	/^spec_option(GtkWidget * widget, gpointer data)$/;"	f	file:
spectral_count	libfaac/coder.h	/^    int spectral_count;$/;"	m
speed_index	lame/frontend/timestatus.c	/^    double  speed_index;     \/* speed relative to realtime coding [100%] *\/$/;"	m	struct:time_status_struct	file:
spriteVertexBuffer	Source/D3D10System.h	/^    VertexBuffer            *spriteVertexBuffer, *boxVertexBuffer;$/;"	m	class:D3D10System
spsId	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t            spsId;                           \/**< [in]:  Specifies the SPS id to be used in sequence header. Default value is 0.  *\/$/;"	m	struct:_NV_ENC_SEQUENCE_PARAM_PAYLOAD
spsId	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t spsId;                                                 \/**< [in]: Specifies the SPS id of the sequence header. Currently reserved and must be set to 0. *\/$/;"	m	struct:_NV_ENC_CONFIG_H264
sps_buffer	QSVHelper/Encoder.h	/^    ipc_sps_buff sps_buffer;$/;"	m	struct:Encoder
sps_size	QSVHelper/IPCStructs.h	/^    mfxU16 sps_size,$/;"	m	struct:spspps_size
spsppsBuffer	ObsNvenc/inc/nvEncodeAPI.h	/^    void*               spsppsBuffer;                    \/**< [in]:  Specifies bitstream header pointer of size NV_ENC_SEQUENCE_PARAM_PAYLOAD::inBufferSize. It is the client's responsibility to manage this memory. *\/$/;"	m	struct:_NV_ENC_SEQUENCE_PARAM_PAYLOAD
spspps_queried_size	QSVHelper/Encoder.h	/^    ipc_spspps_size spspps_queried_size;$/;"	m	struct:Encoder
spspps_size	QSVHelper/IPCStructs.h	/^struct spspps_size$/;"	s
square	lame/misc/ath.c	/^    square    = 2,$/;"	e	file:
square_f	lame/misc/ath.c	/^static long double square_f        ( long double x ) { return x > 0.L  ?  sqrt (x)      :  0.0L; }$/;"	f	file:
srInfo	libfaac/frame.c	/^static SR_INFO srInfo[12+1] =$/;"	v	file:
srInfo	libfaac/frame.c	/^static SR_INFO srInfo[12+1];$/;"	v	file:
srInfo	libfaac/frame.h	/^    SR_INFO *srInfo;$/;"	m
srRates	lame/dshow/PropPage.cpp	/^SSampleRate srRates[9] = {$/;"	v
srcFactor	Source/D3D10System.h	/^    GSBlendType srcFactor, destFactor;$/;"	m	struct:SavedBlendState
src_callback_new	libsamplerate/samplerate.c	/^src_callback_new (src_callback_t func, int converter_type, int channels, int *error, void* cb_data)$/;"	f
src_callback_read	libsamplerate/samplerate.c	/^src_callback_read (SRC_STATE *state, double src_ratio, long frames, float *data)$/;"	f
src_callback_t	libsamplerate/samplerate.h	/^typedef long (*src_callback_t) (void *cb_data, float **data) ;$/;"	t
src_delete	libsamplerate/samplerate.c	/^src_delete (SRC_STATE *state)$/;"	f
src_error	libsamplerate/samplerate.c	/^src_error (SRC_STATE *state)$/;"	f
src_float_to_int_array	libsamplerate/samplerate.c	/^src_float_to_int_array (const float *in, int *out, int len)$/;"	f
src_float_to_short_array	libsamplerate/samplerate.c	/^src_float_to_short_array (const float *in, short *out, int len)$/;"	f
src_get_description	libsamplerate/samplerate.c	/^src_get_description (int converter_type)$/;"	f
src_get_name	libsamplerate/samplerate.c	/^src_get_name (int converter_type)$/;"	f
src_get_version	libsamplerate/samplerate.c	/^src_get_version (void)$/;"	f
src_int_to_float_array	libsamplerate/samplerate.c	/^src_int_to_float_array (const int *in, float *out, int len)$/;"	f
src_is_valid_ratio	libsamplerate/samplerate.c	/^src_is_valid_ratio (double ratio)$/;"	f
src_linear.c	libsamplerate/src_linear.c	1;"	F
src_new	libsamplerate/samplerate.c	/^src_new (int converter_type, int channels, int *error)$/;"	f
src_process	libsamplerate/samplerate.c	/^src_process (SRC_STATE *state, SRC_DATA *data)$/;"	f
src_ratio	libsamplerate/samplerate.h	/^	double	src_ratio ;$/;"	m
src_ratio	libsamplerate/src_sinc.c	/^	double	src_ratio, input_index ;$/;"	m	file:
src_reset	libsamplerate/samplerate.c	/^src_reset (SRC_STATE *state)$/;"	f
src_set_ratio	libsamplerate/samplerate.c	/^src_set_ratio (SRC_STATE *state, double new_ratio)$/;"	f
src_short_to_float_array	libsamplerate/samplerate.c	/^src_short_to_float_array (const short *in, float *out, int len)$/;"	f
src_simple	libsamplerate/samplerate.c	/^src_simple (SRC_DATA *src_data, int converter, int channels)$/;"	f
src_sinc.c	libsamplerate/src_sinc.c	1;"	F
src_strerror	libsamplerate/samplerate.c	/^src_strerror (int error)$/;"	f
src_zoh.c	libsamplerate/src_zoh.c	1;"	F
srcdir	lame/ACM/ADbg/Makefile	/^srcdir = .$/;"	m
srcdir	lame/ACM/Makefile	/^srcdir = .$/;"	m
srcdir	lame/ACM/ddk/Makefile	/^srcdir = .$/;"	m
srcdir	lame/ACM/tinyxml/Makefile	/^srcdir = .$/;"	m
srcdir	lame/Dll/Makefile	/^srcdir = .$/;"	m
srcdir	lame/Makefile	/^srcdir = .$/;"	m
srcdir	lame/debian/Makefile	/^srcdir = .$/;"	m
srcdir	lame/doc/Makefile	/^srcdir = .$/;"	m
srcdir	lame/doc/html/Makefile	/^srcdir = .$/;"	m
srcdir	lame/doc/man/Makefile	/^srcdir = .$/;"	m
srcdir	lame/dshow/Makefile	/^srcdir = .$/;"	m
srcdir	lame/frontend/Makefile	/^srcdir = .$/;"	m
srcdir	lame/include/Makefile	/^srcdir = .$/;"	m
srcdir	lame/libmp3lame/Makefile	/^srcdir = .$/;"	m
srcdir	lame/libmp3lame/i386/Makefile	/^srcdir = .$/;"	m
srcdir	lame/libmp3lame/vector/Makefile	/^srcdir = .$/;"	m
srcdir	lame/mac/Makefile	/^srcdir = .$/;"	m
srcdir	lame/macosx/English.lproj/Makefile	/^srcdir = .$/;"	m
srcdir	lame/macosx/LAME.xcodeproj/Makefile	/^srcdir = .$/;"	m
srcdir	lame/macosx/Makefile	/^srcdir = .$/;"	m
srcdir	lame/misc/Makefile	/^srcdir = .$/;"	m
srcdir	lame/mpglib/Makefile	/^srcdir = .$/;"	m
srcdir	lame/vc_solution/Makefile	/^srcdir = .$/;"	m
srcdirstrip	lame/doc/html/Makefile	/^  srcdirstrip=`echo "$(srcdir)" | sed 's\/[].[^$$\\\\*|]\/\\\\\\\\&\/g'`$/;"	m
srcdirstrip	lame/doc/html/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
srcdirstrip	lame/doc/man/Makefile	/^  srcdirstrip=`echo "$(srcdir)" | sed 's\/[].[^$$\\\\*|]\/\\\\\\\\&\/g'`$/;"	m
srcdirstrip	lame/doc/man/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
srcdirstrip	lame/include/Makefile	/^  srcdirstrip=`echo "$(srcdir)" | sed 's\/[].[^$$\\\\*|]\/\\\\\\\\&\/g'`$/;"	m
srcdirstrip	lame/include/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
srcdirstrip	lame/libmp3lame/Makefile	/^  srcdirstrip=`echo "$(srcdir)" | sed 's\/[].[^$$\\\\*|]\/\\\\\\\\&\/g'`$/;"	m
srcdirstrip	lame/libmp3lame/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
srchr	OBSApi/Utility/XString.cpp	/^TCHAR *STDCALL srchr(const TCHAR *strSrc, const TCHAR chr)$/;"	f
srchri	OBSApi/Utility/XString.cpp	/^TCHAR *STDCALL srchri(const TCHAR *strSrc, TCHAR chr)$/;"	f
sround	libfaac/kiss_fft/_kiss_fft_guts.h	47;"	d
ss	Source/TextOutputSource.cpp	/^    SamplerState *ss;$/;"	m	class:TextOutputSource	file:
sscanf_s	libmfx/include/mfx_dispatcher_defs.h	68;"	d
sse	lame/libmp3lame/lame_global_flags.h	/^        int     sse;$/;"	m	struct:lame_global_struct::<anonymous>
ssize	OBSApi/Utility/XString.cpp	/^UINT STDCALL ssize(const TCHAR *strSrc)$/;"	f
ssize	lame/mpglib/mpglib.h	/^    int     ssize;           \/* number of bytes used for side information, including 2 bytes for CRC-16 if present *\/$/;"	m	struct:mpstr_tag
ssize_t	Source/mongoose.c	/^typedef SSIZE_T ssize_t;$/;"	t	file:
ssl	Source/mongoose.c	/^  SSL *ssl;$/;"	m	struct:ns_connection	file:
ssl_ctx	Source/mongoose.c	/^  SSL_CTX *ssl_ctx;$/;"	m	struct:ns_connection	file:
ssn	librtmp/rtmp_sys.h	/^    ssl_session ssn;$/;"	m	struct:tls_ctx
ssn	librtmp/rtmp_sys.h	/^    ssl_session ssn;$/;"	m	struct:tls_server_ctx
ssrc	lame/frontend/rtp.c	/^    int     ssrc;            \/* random *\/$/;"	m	struct:rtpheader	file:
sstr	OBSApi/Utility/XString.cpp	/^TCHAR *STDCALL sstr(const TCHAR *strSrc, const TCHAR *strSearch)$/;"	f
sstri	OBSApi/Utility/XString.cpp	/^TCHAR *STDCALL sstri(const TCHAR *strSrc, const TCHAR *strSearch)$/;"	f
st	Source/mongoose.c	/^  file_stat_t st;$/;"	m	struct:dir_entry	file:
stPageSize	OBSApi/Utility/FastAlloc.cpp	/^size_t stPageSize=0;$/;"	v
st_lrm	lame/libmp3lame/presets.c	/^    FLOAT   st_lrm;          \/*short threshold *\/$/;"	m	file:
st_s	lame/libmp3lame/presets.c	/^    FLOAT   st_s;$/;"	m	file:
stack	Source/libnsgif.h	/^    unsigned char stack[(1 << GIF_MAX_LZW) * 2];$/;"	m	struct:gif_animation
stack_pointer	Source/libnsgif.h	/^    unsigned char *stack_pointer;$/;"	m	struct:gif_animation
stagingTexture	QSVHelper/IntelSupport/include/d3d11_allocator.h	/^        std::vector<ID3D11Texture2D*> stagingTexture;$/;"	m	struct:D3D11FrameAllocator::TextureResource
standalone	lame/ACM/tinyxml/tinyxml.h	/^	std::string standalone;$/;"	m	class:TiXmlDeclaration
startAuto	scenesw/SceneSwitcher.h	/^	int startAuto;$/;"	m	class:SceneSwitcher
startID	OBSApi/Utility/Template.h	/^    unsigned int startID, endID;$/;"	m	class:CircularList
startMousePos	Source/OBS.h	/^    Vect2   startMousePos, lastMousePos;$/;"	m	class:OBS
startPos	OBSApi/Scene.h	/^    Vect2 startPos, startSize;$/;"	m	class:SceneItem
startPos	Source/DesktopImageSource.cpp	/^    POINT startPos;$/;"	m	struct:RegionWindowData	file:
startRecordingCallback	Source/OBS.h	/^    OBS_CALLBACK startRecordingCallback;$/;"	m	struct:PluginInfo
startRecordingHotkeyID	Source/OBS.h	/^    UINT startRecordingHotkeyID;$/;"	m	class:OBS
startRecordingReplayBufferCallback	Source/OBS.h	/^    OBS_CALLBACK startRecordingReplayBufferCallback;$/;"	m	struct:PluginInfo
startReplayBufferHotkeyID	Source/OBS.h	/^    UINT startReplayBufferHotkeyID;$/;"	m	class:OBS
startSize	OBSApi/Scene.h	/^    Vect2 startPos, startSize;$/;"	m	class:SceneItem
startStreamCallback	Source/OBS.h	/^    OBS_CALLBACK startStreamCallback;$/;"	m	struct:PluginInfo
startStreamHotkeyID	Source/OBS.h	/^    UINT startStreamHotkeyID;$/;"	m	class:OBS
startStreamingCallback	Source/OBS.h	/^    OBS_CALLBACK startStreamingCallback;$/;"	m	struct:PluginInfo
startTick	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	/^DWORD startTick;$/;"	v
startTick	OBSApi/Utility/XT_Windows.cpp	/^DWORD startTick;$/;"	v
startTime	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	/^LARGE_INTEGER clockFreq, startTime;$/;"	v
startTime	OBSApi/Utility/Profiler.h	/^    QWORD startTime,$/;"	m	class:ProfilerNode
startTime	OBSApi/Utility/XT_Windows.cpp	/^LARGE_INTEGER clockFreq, startTime;$/;"	v
startY	DShowPlugin/DeviceSource.h	/^    UINT   startY, endY;$/;"	m	struct:ConvertData
startY	Source/OBSVideoCapture.cpp	/^    int width, height, inPitch, outPitch, startY, endY;$/;"	m	struct:Convert444Data	file:
start_freq	lame/misc/ath.c	/^    long double    start_freq;$/;"	m	file:
start_process	Source/mongoose.c	/^static process_id_t start_process(char *interp, const char *cmd,$/;"	f	file:
start_process	Source/mongoose.c	/^static process_id_t start_process(const char *interp, const char *cmd,$/;"	f	file:
start_recording	Source/ReplayBuffer.cpp	/^    bool start_recording = false;$/;"	m	struct:ReplayBuffer	file:
stat	Source/mongoose.c	1322;"	d	file:
stat	Source/mongoose.c	1333;"	d	file:
state	DShowPlugin/CaptureFilter.h	/^    FILTER_STATE state;$/;"	m	class:CaptureFilter
state	Source/D3D10System.h	/^    ID3D10SamplerState *state;$/;"	m	class:D3D10SamplerState
state	Source/mongoose.c	/^    uint32_t state[5];$/;"	m	file:
static_builtin_mime_types	Source/mongoose.c	/^} static_builtin_mime_types[] = {$/;"	v	file:
static_config_options	Source/mongoose.c	/^static const char *static_config_options[] = {$/;"	v	file:
stats	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    D3DRESOURCESTATS    stats[D3DRTYPECOUNT];$/;"	m	struct:_D3DDEVINFO_RESOURCEMANAGER
stats_head	lame/frontend/brhist.c	/^stats_head(double x, const char *txt)$/;"	f	file:
stats_line	lame/frontend/brhist.c	/^stats_line(double *stat)$/;"	f	file:
stats_value	lame/frontend/brhist.c	/^stats_value(double x)$/;"	f	file:
status	Source/RTMPStuff.h	/^SAVC(status);$/;"	v
status	librtmp/http.h	/^    int status;$/;"	m	struct:HTTP_ctx
status	librtmp/rtmp.h	/^        int8_t status;$/;"	m	struct:RTMP_READ
statusBarData	Source/OBS.cpp	/^StatusBarDrawData statusBarData;$/;"	v
statusCallback	Source/OBS.h	/^    OBS_STATUS_CALLBACK statusCallback;$/;"	m	struct:PluginInfo
status_code	Source/mongoose.h	/^  int status_code;            \/\/ HTTP status code for HTTP error handler$/;"	m	struct:mg_connection
status_code_to_str	Source/mongoose.c	/^static const char *status_code_to_str(int status_code) {$/;"	f	file:
status_id	Source/ReplayBuffer.cpp	/^    UINT status_id = -1;$/;"	m	struct:RecordingHelper	file:
stdafx.h	CLRHostPlugin/CLRHostPlugin/stdafx.h	1;"	F
stdint.h	extras/stdint.h	1;"	F
stdint.h	lame/stdint.h	1;"	F
stdint.h	librtmp/stdint.h	1;"	F
stdint_int64_defined	minhook/src/pstdint.h	439;"	d
stdint_int64_defined	minhook/src/pstdint.h	442;"	d
stdint_int64_defined	minhook/src/pstdint.h	455;"	d
stdint_int64_defined	minhook/src/pstdint.h	464;"	d
stdint_int64_defined	minhook/src/pstdint.h	473;"	d
stdint_int64_defined	minhook/src/pstdint.h	642;"	d
stdint_intptr_bits	minhook/src/pstdint.h	670;"	d
stdint_intptr_bits	minhook/src/pstdint.h	673;"	d
stdint_intptr_bits	minhook/src/pstdint.h	675;"	d
stdint_intptr_bits	minhook/src/pstdint.h	678;"	d
stdint_intptr_glue3	minhook/src/pstdint.h	685;"	d
stdint_intptr_glue3_i	minhook/src/pstdint.h	684;"	d
stdint_least_defined	minhook/src/pstdint.h	606;"	d
step	lame/libmp3lame/quantize_pvt.h	/^    int     step[39];$/;"	m	struct:calc_noise_data_t
step	librtmp/cencode.h	/^	base64_encodestep step;$/;"	m
step_A	librtmp/cencode.h	/^	step_A, step_B, step_C$/;"	e
step_B	librtmp/cencode.h	/^	step_A, step_B, step_C$/;"	e
step_C	librtmp/cencode.h	/^	step_A, step_B, step_C$/;"	e
stepcount	librtmp/cencode.h	/^	int stepcount;$/;"	m
stereo	Source/RTMPStuff.h	/^SAVC(stereo);$/;"	v
stereo	lame/include/lame.h	/^  int stereo;          \/* number of channels                             *\/$/;"	m
stereo	lame/libmp3lame/lame-analysis.h	/^    int     framesize, stereo, js, ms_stereo, i_stereo, emph, bitrate, sampfreq, maindata;$/;"	m	struct:plotting_data
stereo	lame/misc/mlame_corr.c	/^typedef signed short stereo [2];$/;"	t	file:
stereo	lame/mpglib/mpg123.h	/^    int     stereo;$/;"	m	struct:frame
stereoMode	ObsNvenc/inc/nvEncodeAPI.h	/^    NV_ENC_STEREO_PACKING_MODE          stereoMode;                 \/**< [in]: Specifies the stereo frame packing mode which is to be signalled in frame packing arrangement SEI *\/$/;"	m	struct:_NV_ENC_CONFIG_H264
stereo_demask	lame/libmp3lame/psymodel.c	/^stereo_demask(double f)$/;"	f	file:
stereo_t	lame/misc/abx.c	/^typedef sample_t      stereo_t [2];$/;"	t	file:
stereo_t	lame/misc/ath.c	/^typedef sample_t      stereo_t [2]; $/;"	t	file:
still_down	lame/misc/ath.c	/^    still_down = 5,$/;"	e	file:
still_up	lame/misc/ath.c	/^    still_up   = 4,$/;"	e	file:
stop	Source/Encoder_QSV.cpp	/^    ipc_stop stop;$/;"	m	class:QSVEncoder	file:
stopRecordingCallback	Source/OBS.h	/^    OBS_CALLBACK stopRecordingCallback;$/;"	m	struct:PluginInfo
stopRecordingHotkeyID	Source/OBS.h	/^    UINT stopRecordingHotkeyID;$/;"	m	class:OBS
stopRecordingReplayBufferCallback	Source/OBS.h	/^    OBS_CALLBACK stopRecordingReplayBufferCallback;$/;"	m	struct:PluginInfo
stopReplayBufferHotkeyID	Source/OBS.h	/^    UINT stopReplayBufferHotkeyID;$/;"	m	class:OBS
stopReq	scenesw/SceneSwitcher.h	/^	HANDLE stopReq;$/;"	m	class:SceneSwitcher
stopStreamCallback	Source/OBS.h	/^    OBS_CALLBACK stopStreamCallback;$/;"	m	struct:PluginInfo
stopStreamHotkeyID	Source/OBS.h	/^    UINT stopStreamHotkeyID;$/;"	m	class:OBS
stopStreamingCallback	Source/OBS.h	/^    OBS_CALLBACK stopStreamingCallback;$/;"	m	struct:PluginInfo
stopTime	librtmp/rtmp.h	/^        int stopTime;$/;"	m	struct:RTMP_LNK
stop_event	OBSApi/Utility/XT_Windows.cpp	/^    unique_ptr<void, HandleCloser> directory, change_handle, thread, stop_event;$/;"	m	struct:OSDirectoryMonitorData	file:
stop_event	Source/ReplayBuffer.cpp	/^    unique_ptr<void, EventDeleter> stop_event;$/;"	m	struct:RecordingHelper	file:
stop_freq	lame/misc/ath.c	/^    long double    stop_freq;$/;"	m	file:
stopped	OBSApi/Utility/XT.cpp	/^        bool stopped;$/;"	m	struct:<anonymous>::XStringLog	file:
storage	Source/Settings.h	/^    AudioDeviceStorage storage;$/;"	m	class:SettingsAudio
storageBuffer	OBSApi/AudioSource.h	/^    List<float> storageBuffer;$/;"	m	class:AudioSource
storageID	libmfx/include/mfx_dispatcher.h	/^    int storageID;$/;"	m	struct:MFX_DISP_HANDLE
store4	lame/libmp3lame/vector/xmm_quantize_sub.c	/^static void store4(__m128 v, float* f0, float* f1, float* f2, float* f3)$/;"	f	file:
store_or_load	libmfx/include/mfx_dispatcher_log.h	/^    inline static T * store_or_load(T * obj = NULL)$/;"	f	class:DSSingleTone
storedNum	OBSApi/Utility/Template.h	/^    unsigned int storedNum;$/;"	m	class:CircularList
stored_setting	lame/misc/ath.c	/^    struct termios  stored_setting;$/;"	m	file:
stored_settings	lame/misc/abx.c	/^static struct termios stored_settings;$/;"	v	file:
str	OBSApi/Utility/XTLocalization.cpp	/^    String str;$/;"	m	struct:StringLookupNode	file:
str	lame/ACM/tinyxml/tinyxml.h	/^		const char*     str;$/;"	m	struct:TiXmlBase::Entity
strAudioDevice	DShowPlugin/DeviceSource.h	/^    String          strAudioDevice, strAudioName, strAudioID;$/;"	m	class:DeviceSource
strAudioID	DShowPlugin/DeviceSource.h	/^    String          strAudioDevice, strAudioName, strAudioID;$/;"	m	class:DeviceSource
strAudioName	DShowPlugin/DeviceSource.h	/^    String          strAudioDevice, strAudioName, strAudioID;$/;"	m	class:DeviceSource
strClass	GraphicsCapture/GraphicsCapture.cpp	/^    String strClass;$/;"	m	struct:WindowInfo	file:
strClass	Source/OBS.h	/^    String strClass;$/;"	m	struct:ClassInfo
strClasses	Source/BitmapImageSource.cpp	/^    StringList strClasses;$/;"	m	struct:ConfigDesktopSourceInfo	file:
strClasses	Source/DesktopImageSource.cpp	/^    StringList strClasses;$/;"	m	struct:ConfigDesktopSourceInfo	file:
strCurrentText	Source/TextOutputSource.cpp	/^    String      strCurrentText;$/;"	m	class:TextOutputSource	file:
strData	OBSApi/Utility/XConfig.h	/^    String strData;$/;"	m	class:XDataItem
strDevice	DShowPlugin/DeviceSource.h	/^    String          strDevice, strDeviceName, strDeviceID;$/;"	m	class:DeviceSource
strDevice	Source/OBS.h	/^    String strDevice;$/;"	m	struct:DeviceOutputData
strDeviceID	DShowPlugin/DeviceSource.h	/^    String          strDevice, strDeviceName, strDeviceID;$/;"	m	class:DeviceSource
strDeviceName	DShowPlugin/DeviceSource.h	/^    String          strDevice, strDeviceName, strDeviceID;$/;"	m	class:DeviceSource
strDeviceName	Source/MMDeviceAudioSource.cpp	/^    String strDeviceName;$/;"	m	class:MMDeviceAudioSource	file:
strDirectory	OBSApi/Utility/XT_Windows.cpp	/^    TCHAR strDirectory[MAX_PATH];$/;"	m	struct:OSFileChangeData	file:
strExecutable	GraphicsCapture/GraphicsCapture.cpp	/^    String strExecutable;$/;"	m	struct:WindowInfo	file:
strExecutable	GraphicsCapture/GraphicsCaptureSource.h	/^    String strExecutable;$/;"	m	class:GraphicsCaptureSource
strFile	Source/FLVFileStream.cpp	/^    String strFile;$/;"	m	class:FLVFileStream	file:
strFile	Source/MP4FileStream.cpp	/^    String strFile;$/;"	m	class:MP4FileStream	file:
strFile	Source/OBS.h	/^    String strFile;$/;"	m	struct:PluginInfo
strFile	Source/TextOutputSource.cpp	/^    String      strFile;$/;"	m	class:TextOutputSource	file:
strFileName	OBSApi/Utility/ConfigFile.h	/^    String strFileName;$/;"	m	class:ConfigFile
strFileName	OBSApi/Utility/XConfig.h	/^    String strFileName;$/;"	m	class:XConfig
strFont	Source/TextOutputSource.cpp	/^    String      strFont;$/;"	m	class:TextOutputSource	file:
strFontFace	Source/OBS.h	/^    String strFontFace;$/;"	m	struct:FontInfo
strID	Source/OBS.h	/^    String strID;$/;"	m	struct:AudioDeviceInfo
strInfo	Source/OBS.h	/^    String strInfo;$/;"	m	struct:StreamInfo
strKeepAlive	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	/^wstring strKeepAlive;$/;"	v
strLanguage	Source/OBS.h	/^    String  strLanguage;$/;"	m	class:OBS
strLength	lame/ACM/tinyxml/tinyxml.h	/^		unsigned int	strLength;$/;"	m	struct:TiXmlBase::Entity
strName	OBSApi/Utility/XConfig.h	/^    String strName;$/;"	m	class:XBaseItem
strName	Source/OBS.h	/^    String strName;$/;"	m	struct:AudioDeviceInfo
strName	Source/OBS.h	/^    String strName;$/;"	m	struct:ClassInfo
strName	Source/OBS.h	/^    String strName;$/;"	m	struct:GlobalSourceInfo
strRTMPErrors	Source/RTMPPublisher.cpp	/^String RTMPPublisher::strRTMPErrors;$/;"	m	class:RTMPPublisher	file:
strRTMPErrors	Source/RTMPPublisher.h	/^    static String strRTMPErrors;$/;"	m	class:RTMPPublisher
strText	Source/TextOutputSource.cpp	/^    String      strText;$/;"	m	class:TextOutputSource	file:
strValue	OBSApi/Utility/XTLocalization.h	/^    String      strValue;$/;"	m	struct:LocaleStringItem
strWindow	Source/DesktopImageSource.cpp	/^    String   strWindow, strWindowClass;$/;"	m	class:DesktopImageSource	file:
strWindowClass	GraphicsCapture/GraphicsCaptureSource.h	/^    String strWindowClass;$/;"	m	class:GraphicsCaptureSource
strWindowClass	Source/DesktopImageSource.cpp	/^    String   strWindow, strWindowClass;$/;"	m	class:DesktopImageSource	file:
str_clreoln	lame/frontend/console.h	/^    char    str_clreoln[10];$/;"	m	struct:console_io_struct
str_emph	lame/frontend/console.h	/^    char    str_emph[10];$/;"	m	struct:console_io_struct
str_norm	lame/frontend/console.h	/^    char    str_norm[10];$/;"	m	struct:console_io_struct
str_up	lame/frontend/console.h	/^    char    str_up[10];$/;"	m	struct:console_io_struct
strain	Source/OBS.h	/^    double strain;$/;"	m	struct:StatusBarDrawData
strcasecmp	librtmp/rtmp_sys.h	46;"	d
strchr	lame/frontend/console.c	10;"	d	file:
strchr	lame/frontend/get_audio.c	43;"	d	file:
strchr	lame/frontend/gpkplotting.c	34;"	d	file:
strchr	lame/frontend/lame_main.c	38;"	d	file:
strchr	lame/frontend/main.c	38;"	d	file:
strchr	lame/frontend/parse.c	38;"	d	file:
strchr	lame/libmp3lame/id3tag.c	45;"	d	file:
strchr	lame/libmp3lame/machine.h	39;"	d
strchr	lame/mpglib/decode_i386.c	41;"	d	file:
strchr	lame/mpglib/mpg123.h	30;"	d
strcmpi	OBSApi/Utility/XT_Windows.h	42;"	d
strdup	Source/mongoose.c	1345;"	d	file:
streamInfoIDCounter	Source/OBS.h	/^    UINT streamInfoIDCounter;$/;"	m	class:OBS
streamInfoList	Source/OBS.h	/^    List<StreamInfo> streamInfoList;$/;"	m	class:OBS
streamReport	Source/OBS.h	/^    String  streamReport;$/;"	m	class:OBS
streamStatusCallback	Source/OBS.h	/^    OBS_STREAM_STATUS_CALLBACK streamStatusCallback;$/;"	m	struct:PluginInfo
streams	Source/OBS.h	/^        std::list<thread_t> streams;$/;"	m	struct:OBS::PendingStreams
stretchStandardDefinitionInput	DShowPlugin/IVideoCaptureFilter.h	/^    BOOL                                 stretchStandardDefinitionInput;    \/\/!< Stretch SD input to 16:9$/;"	m	struct:_VIDEO_CAPTURE_FILTER_SETTINGS
strict_ISO	lame/libmp3lame/lame_global_flags.h	/^    int     strict_ISO;      \/* enforce ISO spec as much as possible   *\/$/;"	m	struct:lame_global_struct
strictly-enforce-ISO	lame/doc/html/detailed.html	/^<a name="strictly-enforce-ISO"><span class="hilight">--strictly-enforce-ISO<\/span><\/a> Strict ISO compliance   $/;"	a
string	libmfx/src/mfx_dispatcher_log.cpp	/^    const char *string;$/;"	m	struct:CodeStringTable	file:
stringToGuid	ObsNvenc/src/nvmain.cpp	/^bool stringToGuid(const String &string, GUID *guid)$/;"	f
strings_defs.h	QSVHelper/IntelSupport/include/vm/strings_defs.h	1;"	F
strlenMultiByte	lame/frontend/parse.c	/^strlenMultiByte(char const* str, size_t w)$/;"	f	file:
strncasecmp	librtmp/rtmp_sys.h	47;"	d
strrchr	lame/frontend/console.c	11;"	d	file:
strrchr	lame/frontend/get_audio.c	44;"	d	file:
strrchr	lame/frontend/gpkplotting.c	35;"	d	file:
strrchr	lame/frontend/lame_main.c	39;"	d	file:
strrchr	lame/frontend/main.c	39;"	d	file:
strrchr	lame/frontend/parse.c	39;"	d	file:
strrchr	lame/libmp3lame/id3tag.c	46;"	d	file:
strrchr	lame/libmp3lame/machine.h	40;"	d
strrchr	lame/mpglib/decode_i386.c	42;"	d	file:
strrchr	lame/mpglib/mpg123.h	31;"	d
strtime	librtmp/hashswf.c	/^strtime(time_t * t, char *s)$/;"	f	file:
strtoimax	extras/inttypes.h	277;"	d
strtoimax	lame/inttypes.h	277;"	d
strtoumax	extras/inttypes.h	278;"	d
strtoumax	lame/inttypes.h	278;"	d
structSize	OBSApi/ColorControl.cpp	/^    DWORD structSize;       \/\/size of this structure$/;"	m	struct:CCStruct	file:
subNodes	OBSApi/Utility/XTLocalization.cpp	/^    List<StringLookupNode*> subNodes;$/;"	m	struct:StringLookupNode	file:
subResourceIndex	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                    subResourceIndex;               \/**< [in]: Subresource Index of the DirectX resource to be registered. Should eb set to 0 for other interfaces. *\/$/;"	m	struct:_NV_ENC_REGISTER_RESOURCE
subResourceIndex	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                   subResourceIndex;          \/**< [in]:  Deprecated. Do not use. *\/$/;"	m	struct:_NV_ENC_MAP_INPUT_RESOURCE
sub_gain	lame/libmp3lame/lame-analysis.h	/^    int     sub_gain[2][2][3];$/;"	m	struct:plotting_data
subblock_draw	lame/frontend/gtkanal.c	/^static int subblock_draw[3] = { 1, 1, 1 };$/;"	v	file:
subblock_gain	lame/libmp3lame/l3side.h	/^    int     subblock_gain[3 + 1];$/;"	m
subblock_gain	lame/libmp3lame/lame_global_flags.h	/^    int     subblock_gain;   \/*  0 = no, 1 = yes *\/$/;"	m	struct:lame_global_struct
subblock_gain	lame/libmp3lame/util.h	/^        int     subblock_gain; \/*  0 = no, 1 = yes *\/$/;"	m
subblock_gain	lame/mpglib/mpg123.h	/^    unsigned subblock_gain[3];$/;"	m	struct:gr_info_s
subdir	lame/ACM/ADbg/Makefile	/^subdir = ACM\/ADbg$/;"	m
subdir	lame/ACM/Makefile	/^subdir = ACM$/;"	m
subdir	lame/ACM/ddk/Makefile	/^subdir = ACM\/ddk$/;"	m
subdir	lame/ACM/tinyxml/Makefile	/^subdir = ACM\/tinyxml$/;"	m
subdir	lame/Dll/Makefile	/^subdir = Dll$/;"	m
subdir	lame/Makefile	/^subdir = .$/;"	m
subdir	lame/debian/Makefile	/^subdir = debian$/;"	m
subdir	lame/doc/Makefile	/^subdir = doc$/;"	m
subdir	lame/doc/html/Makefile	/^subdir = doc\/html$/;"	m
subdir	lame/doc/man/Makefile	/^subdir = doc\/man$/;"	m
subdir	lame/dshow/Makefile	/^subdir = dshow$/;"	m
subdir	lame/frontend/Makefile	/^subdir = frontend$/;"	m
subdir	lame/include/Makefile	/^subdir = include$/;"	m
subdir	lame/libmp3lame/Makefile	/^subdir = libmp3lame$/;"	m
subdir	lame/libmp3lame/i386/Makefile	/^subdir = libmp3lame\/i386$/;"	m
subdir	lame/libmp3lame/vector/Makefile	/^subdir = libmp3lame\/vector$/;"	m
subdir	lame/mac/Makefile	/^subdir = mac$/;"	m
subdir	lame/macosx/English.lproj/Makefile	/^subdir = macosx\/English.lproj$/;"	m
subdir	lame/macosx/LAME.xcodeproj/Makefile	/^subdir = macosx\/LAME.xcodeproj$/;"	m
subdir	lame/macosx/Makefile	/^subdir = macosx$/;"	m
subdir	lame/misc/Makefile	/^subdir = misc$/;"	m
subdir	lame/mpglib/Makefile	/^subdir = mpglib$/;"	m
subdir	lame/vc_solution/Makefile	/^subdir = vc_solution$/;"	m
subdv_table	lame/libmp3lame/takehiro.c	/^} subdv_table[23] = {$/;"	v	file:
subkeyName	libmfx/include/mfx_dispatcher.h	/^    msdk_disp_char subkeyName[MFX_MAX_REGISTRY_KEY_NAME];$/;"	m	struct:MFX_DISP_HANDLE
subscribepath	librtmp/rtmp.h	/^        AVal subscribepath;$/;"	m	struct:RTMP_LNK
substate	libfaac/kiss_fft/kiss_fftr.c	/^    kiss_fft_cfg substate;$/;"	m	struct:kiss_fftr_state	file:
substep_shaping	lame/libmp3lame/lame_global_flags.h	/^    int     substep_shaping;$/;"	m	struct:lame_global_struct
substep_shaping	lame/libmp3lame/util.h	/^        int     substep_shaping; \/* 0 = no substep$/;"	m
sudMpgAEnc	lame/dshow/Mpegac.cpp	/^AMOVIESETUP_FILTER sudMpgAEnc =$/;"	v
sudMpgInputType	lame/dshow/Mpegac.cpp	/^AMOVIESETUP_MEDIATYPE sudMpgInputType[] =$/;"	v
sudMpgOutputType	lame/dshow/Mpegac.cpp	/^AMOVIESETUP_MEDIATYPE sudMpgOutputType[] =$/;"	v
sudMpgPins	lame/dshow/Mpegac.cpp	/^AMOVIESETUP_PIN sudMpgPins[] =$/;"	v
suggest_connection_header	Source/mongoose.c	/^static const char *suggest_connection_header(const struct mg_connection *conn) {$/;"	f	file:
sum	lame/libmp3lame/util.h	/^        int     sum;         \/* what we have seen so far *\/$/;"	m
super_twiddles	libfaac/kiss_fft/kiss_fftr.c	/^    kiss_fft_cpx * super_twiddles;$/;"	m	struct:kiss_fftr_state	file:
supportedIntervals	DShowPlugin/DShowPlugin.cpp	/^    List<FPSInterval> supportedIntervals;$/;"	m	struct:FPSInfo	file:
supr	OBSApi/Utility/XString.cpp	/^void STDCALL supr(TCHAR *strDest)$/;"	f
surf	QSVHelper/SupportStuff.h	/^    mfxFrameSurface1 *surf;$/;"	m	struct:encode_task
surf	Source/Encoder_QSV.cpp	/^        mfxFrameSurface1 surf;$/;"	m	struct:QSVEncoder::encode_task	file:
surface	Source/D3D10System.h	/^    IDXGISurface1 *surface;$/;"	m	class:D3D10Texture
surfaces	QSVHelper/Encoder.h	/^    std::vector<mfxFrameSurface1> surfaces;$/;"	m	struct:Encoder
surroundMix	OBSApi/AudioSource.cpp	/^const float surroundMix = dbMinus3;$/;"	v
surroundMix4	OBSApi/AudioSource.cpp	/^const float surroundMix4 = dbMinus6;$/;"	v
sv_enc	lame/libmp3lame/util.h	/^        EncStateVar_t sv_enc; \/* DATA FROM ENCODER.C *\/$/;"	m	struct:lame_internal_flags
sv_psy	lame/libmp3lame/util.h	/^        PsyStateVar_t sv_psy; \/* DATA FROM PSYMODEL.C *\/$/;"	m	struct:lame_internal_flags
sv_qnt	lame/libmp3lame/util.h	/^        QntStateVar_t sv_qnt; \/* DATA FROM QUANTIZE.C *\/$/;"	m	struct:lame_internal_flags
sv_rpg	lame/libmp3lame/util.h	/^        RpgStateVar_t sv_rpg;$/;"	m	struct:lame_internal_flags
swap	Source/D3D10System.h	/^    IDXGISwapChain          *swap;$/;"	m	class:D3D10System
swap	lame/misc/abx.c	/^size_t  swap ( size_t number, int bits )$/;"	f
swapChain	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^IDXGISwapChain          *swapChain = NULL;$/;"	v
swapRenderView	Source/D3D10System.h	/^    ID3D10RenderTargetView  *swapRenderView;$/;"	m	class:D3D10System
swap_bytes	lame/libmp3lame/id3tag.c	/^swap_bytes(unsigned short w)$/;"	f	file:
swap_channel	lame/frontend/main.h	/^    int   swap_channel;             \/* 0: no-op, 1: swaps input channels *\/$/;"	m	struct:ReaderConfig
swapbytes	lame/frontend/main.h	/^    int   swapbytes;                \/* force byte swapping   default=0 *\/$/;"	m	struct:ReaderConfig
swfAge	librtmp/rtmp.h	/^        int swfAge;$/;"	m	struct:RTMP_LNK
swfUrl	Source/RTMPStuff.h	/^SAVC(swfUrl);$/;"	v
swfUrl	librtmp/rtmp.c	/^SAVC(swfUrl);$/;"	v
swfUrl	librtmp/rtmp.h	/^        AVal swfUrl;$/;"	m	struct:RTMP_LNK
swfcrunch	librtmp/hashswf.c	/^swfcrunch(void *ptr, size_t size, size_t nmemb, void *stream)$/;"	f	file:
swscanf_s	libmfx/include/mfx_dispatcher_defs.h	69;"	d
sync_bitstream	lame/mpglib/mpglib.h	/^    int     sync_bitstream;  \/* 1 = bitstream is yet to be synchronized *\/$/;"	m	struct:mpstr_tag
sync_buffer	lame/mpglib/interface.c	/^sync_buffer(PMPSTR mp, int free_match)$/;"	f	file:
synth_1to1	lame/mpglib/decode_i386.c	/^synth_1to1(PMPSTR mp, real * bandPtr, int channel, unsigned char *out, int *pnt)$/;"	f
synth_1to1_mono	lame/mpglib/decode_i386.c	/^synth_1to1_mono(PMPSTR mp, real * bandPtr, unsigned char *out, int *pnt)$/;"	f
synth_1to1_mono_unclipped	lame/mpglib/decode_i386.c	/^synth_1to1_mono_unclipped(PMPSTR mp, real * bandPtr, unsigned char *out, int *pnt)$/;"	f
synth_1to1_unclipped	lame/mpglib/decode_i386.c	/^synth_1to1_unclipped(PMPSTR mp, real * bandPtr, int channel, unsigned char *out, int *pnt)$/;"	f
synth_bo	lame/mpglib/mpglib.h	/^    int     synth_bo;$/;"	m	struct:mpstr_tag
synth_buffs	lame/mpglib/mpglib.h	/^    real    synth_buffs[2][2][0x110];$/;"	m	struct:mpstr_tag
sysconfdir	lame/ACM/ADbg/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	lame/ACM/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	lame/ACM/ddk/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	lame/ACM/tinyxml/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	lame/Dll/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	lame/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	lame/debian/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	lame/doc/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	lame/doc/html/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	lame/doc/man/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	lame/dshow/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	lame/frontend/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	lame/include/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	lame/libmp3lame/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	lame/libmp3lame/i386/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	lame/libmp3lame/vector/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	lame/mac/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	lame/macosx/English.lproj/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	lame/macosx/LAME.xcodeproj/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	lame/macosx/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	lame/misc/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	lame/mpglib/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	lame/vc_solution/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
szBitRateString	lame/dshow/PropPage.cpp	/^const char * szBitRateString[2][14] = {$/;"	v
szQualityDesc	lame/dshow/PropPage.cpp	/^LPCSTR szQualityDesc[10] = {$/;"	v
szVBRqDesc	lame/dshow/PropPage.cpp	/^LPCSTR szVBRqDesc[10] = {$/;"	v
t	QSVHelper/WindowsStuff.h	/^    T& t;$/;"	m	struct:IPCMutexLock
t	lame/doc/html/detailed.html	/^<a name="t"><span class="hilight">-t<\/span><\/a> Disable VBR tag or disable WAV header            $/;"	a
t10HB	lame/libmp3lame/tables.c	/^static const uint16_t t10HB[] = {$/;"	v	file:
t10l	lame/libmp3lame/tables.c	/^static const uint8_t t10l[] = {$/;"	v	file:
t11HB	lame/libmp3lame/tables.c	/^static const uint16_t t11HB[] = {$/;"	v	file:
t11l	lame/libmp3lame/tables.c	/^static const uint8_t t11l[] = {$/;"	v	file:
t12HB	lame/libmp3lame/tables.c	/^static const uint16_t t12HB[] = {$/;"	v	file:
t12l	lame/libmp3lame/tables.c	/^static const uint8_t t12l[] = {$/;"	v	file:
t13HB	lame/libmp3lame/tables.c	/^static const uint16_t t13HB[] = {$/;"	v	file:
t13l	lame/libmp3lame/tables.c	/^static const uint8_t t13l[] = {$/;"	v	file:
t15HB	lame/libmp3lame/tables.c	/^static const uint16_t t15HB[] = {$/;"	v	file:
t15l	lame/libmp3lame/tables.c	/^static const uint8_t t15l[] = {$/;"	v	file:
t16HB	lame/libmp3lame/tables.c	/^static const uint16_t t16HB[] = {$/;"	v	file:
t16_5l	lame/libmp3lame/tables.c	/^static const uint8_t t16_5l[] = {$/;"	v	file:
t16l	lame/libmp3lame/tables.c	/^static const uint8_t t16l[] = {$/;"	v	file:
t1HB	lame/libmp3lame/tables.c	/^static const uint16_t t1HB[] = {$/;"	v	file:
t1l	lame/libmp3lame/tables.c	/^const uint8_t t1l[] = {$/;"	v
t24HB	lame/libmp3lame/tables.c	/^static const uint16_t t24HB[] = {$/;"	v	file:
t24l	lame/libmp3lame/tables.c	/^static const uint8_t t24l[] = {$/;"	v	file:
t2HB	lame/libmp3lame/tables.c	/^static const uint16_t t2HB[] = {$/;"	v	file:
t2l	lame/libmp3lame/tables.c	/^static const uint8_t t2l[] = {$/;"	v	file:
t32HB	lame/libmp3lame/tables.c	/^static const uint16_t t32HB[] = {$/;"	v	file:
t32l	lame/libmp3lame/tables.c	/^const uint8_t t32l[] = {$/;"	v
t33HB	lame/libmp3lame/tables.c	/^static const uint16_t t33HB[] = {$/;"	v	file:
t33l	lame/libmp3lame/tables.c	/^const uint8_t t33l[] = {$/;"	v
t3HB	lame/libmp3lame/tables.c	/^static const uint16_t t3HB[] = {$/;"	v	file:
t3l	lame/libmp3lame/tables.c	/^static const uint8_t t3l[] = {$/;"	v	file:
t5HB	lame/libmp3lame/tables.c	/^static const uint16_t t5HB[] = {$/;"	v	file:
t5l	lame/libmp3lame/tables.c	/^static const uint8_t t5l[] = {$/;"	v	file:
t6HB	lame/libmp3lame/tables.c	/^static const uint16_t t6HB[] = {$/;"	v	file:
t6l	lame/libmp3lame/tables.c	/^static const uint8_t t6l[] = {$/;"	v	file:
t7HB	lame/libmp3lame/tables.c	/^static const uint16_t t7HB[] = {$/;"	v	file:
t7l	lame/libmp3lame/tables.c	/^static const uint8_t t7l[] = {$/;"	v	file:
t8HB	lame/libmp3lame/tables.c	/^static const uint16_t t8HB[] = {$/;"	v	file:
t8l	lame/libmp3lame/tables.c	/^static const uint8_t t8l[] = {$/;"	v	file:
t9HB	lame/libmp3lame/tables.c	/^static const uint16_t t9HB[] = {$/;"	v	file:
t9l	lame/libmp3lame/tables.c	/^static const uint8_t t9l[] = {$/;"	v	file:
tACMDRVFORMATSUGGEST	lame/ACM/ddk/msacmdrv.h	/^typedef struct tACMDRVFORMATSUGGEST$/;"	s
tACMDRVOPENDESC	lame/ACM/ddk/msacmdrv.h	/^typedef struct tACMDRVOPENDESC$/;"	s
tACMDRVSTREAMHEADER	lame/ACM/ddk/msacmdrv.h	/^typedef struct tACMDRVSTREAMHEADER$/;"	s
tACMDRVSTREAMINSTANCE	lame/ACM/ddk/msacmdrv.h	/^typedef struct tACMDRVSTREAMINSTANCE$/;"	s
tACMDRVSTREAMSIZE	lame/ACM/ddk/msacmdrv.h	/^typedef struct tACMDRVSTREAMSIZE$/;"	s
tab	lame/libmp3lame/psymodel.c	/^static const FLOAT tab[] = {$/;"	v	file:
tab0	lame/mpglib/huffman.h	/^static const short tab0[] = $/;"	v
tab1	lame/mpglib/huffman.h	/^static const short tab1[] =$/;"	v
tab10	lame/mpglib/huffman.h	/^static const short tab10[] =$/;"	v
tab11	lame/mpglib/huffman.h	/^static const short tab11[] =$/;"	v
tab12	lame/mpglib/huffman.h	/^static const short tab12[] =$/;"	v
tab13	lame/mpglib/huffman.h	/^static const short tab13[] =$/;"	v
tab15	lame/mpglib/huffman.h	/^static const short tab15[] =$/;"	v
tab16	lame/mpglib/huffman.h	/^static const short tab16[] =$/;"	v
tab2	lame/mpglib/huffman.h	/^static const short tab2[] =$/;"	v
tab24	lame/mpglib/huffman.h	/^static const short tab24[] =$/;"	v
tab3	lame/mpglib/huffman.h	/^static const short tab3[] =$/;"	v
tab5	lame/mpglib/huffman.h	/^static const short tab5[] =$/;"	v
tab6	lame/mpglib/huffman.h	/^static const short tab6[] =$/;"	v
tab7	lame/mpglib/huffman.h	/^static const short tab7[] =$/;"	v
tab8	lame/mpglib/huffman.h	/^static const short tab8[] =$/;"	v
tab9	lame/mpglib/huffman.h	/^static const short tab9[] =$/;"	v
tab_c0	lame/mpglib/huffman.h	/^static const short tab_c0[] =$/;"	v
tab_c1	lame/mpglib/huffman.h	/^static const short tab_c1[] =$/;"	v
tab_mask_add_delta	lame/libmp3lame/psymodel.c	/^static const int tab_mask_add_delta[] = { 2, 2, 2, 1, 1, 1, 0, 0, -1 };$/;"	v	file:
tabinit.c	lame/mpglib/tabinit.c	1;"	F
tabinit.h	lame/mpglib/tabinit.h	1;"	F
table	Source/libnsgif.h	/^    int table[2][(1 << GIF_MAX_LZW)];$/;"	m	struct:gif_animation
table	lame/libmp3lame/tables.h	/^    const uint16_t *table;      \/* pointer to array[xlen][ylen]  *\/$/;"	m	struct:huffcodetab
table	lame/mpglib/huffman.h	/^    const short * const table;$/;"	m	struct:newhuff
table	minhook/src/trampoline.h	/^		std::vector<uintptr_t>	table;$/;"	m	struct:MinHook::CREATE_TREMPOLINE_T
table23	lame/libmp3lame/tables.c	/^const uint32_t table23[3 * 3] = {$/;"	v
table32.h	minhook/src/HDE32/table32.h	1;"	F
table56	lame/libmp3lame/tables.c	/^const uint32_t table56[4 * 4] = {$/;"	v
table64.h	minhook/src/HDE64/src/table64.h	1;"	F
table_select	lame/libmp3lame/l3side.h	/^    int     table_select[3];$/;"	m
table_select	lame/mpglib/mpg123.h	/^    unsigned table_select[3];$/;"	m	struct:gr_info_s
tables.c	lame/libmp3lame/tables.c	1;"	F
tables.h	lame/libmp3lame/tables.h	1;"	F
tabsel_123	lame/mpglib/common.c	/^const int tabsel_123 [2] [3] [16] = {$/;"	v
tag	libfaac/channels.h	/^    int tag;$/;"	m
tag_spec	lame/libmp3lame/util.h	/^        struct id3tag_spec tag_spec;$/;"	m	struct:lame_internal_flags
tail	lame/mpglib/mpglib.h	/^    struct buf *head, *tail; \/* buffer linked list pointers, tail points to oldest buffer *\/$/;"	m	struct:mpstr_tag
takePcmBuffer	lame/frontend/get_audio.c	/^takePcmBuffer(PcmBuffer * b, void *a0, void *a1, int a_n, int mm)$/;"	f	file:
takehiro.c	lame/libmp3lame/takehiro.c	1;"	F
tan1_1	lame/mpglib/layer3.c	/^static real tan1_1[16], tan2_1[16], tan1_2[16], tan2_2[16];$/;"	v	file:
tan1_2	lame/mpglib/layer3.c	/^static real tan1_1[16], tan2_1[16], tan1_2[16], tan2_2[16];$/;"	v	file:
tan2_1	lame/mpglib/layer3.c	/^static real tan1_1[16], tan2_1[16], tan1_2[16], tan2_2[16];$/;"	v	file:
tan2_2	lame/mpglib/layer3.c	/^static real tan1_1[16], tan2_1[16], tan1_2[16], tan2_2[16];$/;"	v	file:
tangentBuffer	Source/D3D10System.h	/^    ID3D10Buffer *tangentBuffer;$/;"	m	class:D3D10VertexBuffer
tangentSize	Source/D3D10System.h	/^    UINT tangentSize;$/;"	m	class:D3D10VertexBuffer
tantab_l	lame/libmp3lame/newmdct.c	401;"	d	file:
tardir	lame/Makefile	/^	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz$/;"	m
tardir	lame/Makefile	/^	tardir=$(distdir) && $(am__tar) | bzip2 -9 -c >$(distdir).tar.bz2$/;"	m
tardir	lame/Makefile	/^	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z$/;"	m
tardir	lame/Makefile	/^	tardir=$(distdir) && $(am__tar) | lzma -9 -c >$(distdir).tar.lzma$/;"	m
tardir	lame/Makefile	/^	tardir=$(distdir) && $(am__tar) | xz -c >$(distdir).tar.xz$/;"	m
target	lame/ACM/Makefile	/^	target=`echo $@ | sed s\/-recursive\/\/`; \\$/;"	m
target	lame/Makefile	/^	target=`echo $@ | sed s\/-recursive\/\/`; \\$/;"	m
target	lame/doc/Makefile	/^	target=`echo $@ | sed s\/-recursive\/\/`; \\$/;"	m
target	lame/libmp3lame/Makefile	/^	target=`echo $@ | sed s\/-recursive\/\/`; \\$/;"	m
target	lame/macosx/Makefile	/^	target=`echo $@ | sed s\/-recursive\/\/`; \\$/;"	m
targetBuffers	GraphicsCapture/GraphicsCaptureHook/D3D8Capture.cpp	/^IDirect3DSurface8* targetBuffers[NUM_BUFFERS] = ZERO_ARRAY;$/;"	v
targetFileName	OBSApi/Utility/XT_Windows.cpp	/^    TCHAR targetFileName[MAX_PATH];$/;"	m	struct:OSFileChangeData	file:
targetLocked	GraphicsCapture/GraphicsCaptureHook/D3D8Capture.cpp	/^bool targetLocked[NUM_BUFFERS] = ZERO_ARRAY;$/;"	v
targetProcessID	GraphicsCapture/GraphicsCaptureSource.h	/^    DWORD targetProcessID;$/;"	m	class:GraphicsCaptureSource
targetThreadID	GraphicsCapture/GraphicsCaptureSource.h	/^    DWORD targetThreadID;$/;"	m	class:GraphicsCaptureSource
target_alias	lame/ACM/ADbg/Makefile	/^target_alias = $/;"	m
target_alias	lame/ACM/Makefile	/^target_alias = $/;"	m
target_alias	lame/ACM/ddk/Makefile	/^target_alias = $/;"	m
target_alias	lame/ACM/tinyxml/Makefile	/^target_alias = $/;"	m
target_alias	lame/Dll/Makefile	/^target_alias = $/;"	m
target_alias	lame/Makefile	/^target_alias = $/;"	m
target_alias	lame/debian/Makefile	/^target_alias = $/;"	m
target_alias	lame/doc/Makefile	/^target_alias = $/;"	m
target_alias	lame/doc/html/Makefile	/^target_alias = $/;"	m
target_alias	lame/doc/man/Makefile	/^target_alias = $/;"	m
target_alias	lame/dshow/Makefile	/^target_alias = $/;"	m
target_alias	lame/frontend/Makefile	/^target_alias = $/;"	m
target_alias	lame/include/Makefile	/^target_alias = $/;"	m
target_alias	lame/libmp3lame/Makefile	/^target_alias = $/;"	m
target_alias	lame/libmp3lame/i386/Makefile	/^target_alias = $/;"	m
target_alias	lame/libmp3lame/vector/Makefile	/^target_alias = $/;"	m
target_alias	lame/mac/Makefile	/^target_alias = $/;"	m
target_alias	lame/macosx/English.lproj/Makefile	/^target_alias = $/;"	m
target_alias	lame/macosx/LAME.xcodeproj/Makefile	/^target_alias = $/;"	m
target_alias	lame/macosx/Makefile	/^target_alias = $/;"	m
target_alias	lame/misc/Makefile	/^target_alias = $/;"	m
target_alias	lame/mpglib/Makefile	/^target_alias = $/;"	m
target_alias	lame/vc_solution/Makefile	/^target_alias = $/;"	m
target_usage	QSVHelper/IPCStructs.h	/^    mfxU16 target_usage, profile;$/;"	m	struct:init_response
target_usage	QSVHelper/IPCStructs.h	/^    uint16_t target_usage, profile;$/;"	m	struct:init_request
target_usage	Source/Encoder_QSV.cpp	/^    mfxU16 target_usage, profile,$/;"	m	class:QSVEncoder	file:
task	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserTask.cs	/^        private Action task;$/;"	f	class:Browser.BrowserTask	file:
tcUrl	Source/RTMPStuff.h	/^SAVC(tcUrl);$/;"	v
tcUrl	librtmp/rtmp.c	/^SAVC(tcUrl);$/;"	v
tcUrl	librtmp/rtmp.h	/^        AVal tcUrl;$/;"	m	struct:RTMP_LNK
tempAddr	minhook/src/trampoline.h	/^		std::vector<TEMP_ADDR>	tempAddr;$/;"	m	struct:MinHook::CREATE_TREMPOLINE_T
tempBuffer	OBSApi/AudioSource.h	/^    List<float> tempBuffer;$/;"	m	class:AudioSource
tempResampleBuffer	OBSApi/AudioSource.h	/^    List<float> tempResampleBuffer;$/;"	m	class:AudioSource
templateEditor	CLRBrowserSourcePlugin/Plugin/ConfigDialog.xaml.cs	/^        private TextEditor templateEditor;$/;"	f	class:CLRBrowserSourcePlugin.ConfigDialog	file:
temporalLayerQP	ObsNvenc/inc/nvEncodeAPI.h	/^    uint8_t                         temporalLayerQP[8];                          \/**< [in]: Specifies the temporal layer QPs used for rate control. Temporal layer index is used as as the array index *\/$/;"	m	struct:_NV_ENC_RC_PARAMS
temporallayerIdxMask	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                        temporallayerIdxMask;                        \/**< [in]: Specifies the temporal layers (as a bitmask) whose QPs have changed. Valid max bitmask is [2^NV_ENC_CAPS_NUM_MAX_TEMPORAL_LAYERS - 1] *\/$/;"	m	struct:_NV_ENC_RC_PARAMS
temporalmask_sustain_sec	lame/libmp3lame/psymodel.h	54;"	d
term_cont	lame/misc/ath.c	/^static void  term_cont ( int sig )$/;"	f	file:
term_ctrl_z	lame/misc/ath.c	/^static void  term_ctrl_z ( int sig )$/;"	f	file:
term_exit	lame/misc/ath.c	/^static void  term_exit ( int sig )$/;"	f	file:
term_restore	lame/misc/ath.c	/^static void  term_restore (void)$/;"	f	file:
terminate_headers	Source/mongoose.c	/^static void terminate_headers(struct mg_connection *c) {$/;"	f	file:
test	lame/misc/scalartest.c	/^void test ( int no, scalar_t f )$/;"	f
test2	lame/misc/scalartest.c	/^void test2 ( const char* name, ddf f )$/;"	f
test_tag_spec_flags	lame/libmp3lame/id3tag.c	/^test_tag_spec_flags(lame_internal_flags const *gfc, unsigned int tst)$/;"	f	file:
testing	lame/misc/abx.c	/^void testing ( const stereo_t* A, const stereo_t* B, size_t len, long freq )$/;"	f
testn	lame/misc/scalartest.c	/^void testn ( scalarn_t f )$/;"	f
texData	GraphicsCapture/GraphicsCaptureHook/D3D11Capture.cpp	/^SharedTexData           *texData;$/;"	v
texData	GraphicsCapture/SharedTexCapture.h	/^    SharedTexData *texData;$/;"	m	class:SharedTexCapture
texHandle	GraphicsCapture/GlobalCaptureStuff.h	/^    DWORD       texHandle;$/;"	m	struct:SharedTexData
textControlHeight	Source/OBS.cpp	/^const int textControlHeight = 16;$/;"	v
text_window	lame/frontend/gtkanal.c	/^text_window(GtkWidget * widget, gpointer data)$/;"	f	file:
texture	CLRBrowserSourcePlugin/Plugin/BrowserSource.cs	/^        private Texture texture;$/;"	f	class:CLRBrowserSourcePlugin.BrowserSource	file:
texture	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/SharedTexture.cs	/^        private Texture texture;$/;"	f	class:Browser.SharedTexture	file:
texture	CLRHostPlugin/CLRCSharpSamplePlugin/SampleImageSource.cs	/^        private Texture texture = null;$/;"	f	class:CSharpSamplePlugin.SampleImageSource	file:
texture	CLRHostPlugin/CLRHostInterop/GraphicsSystem.h	/^        ::Texture *texture;$/;"	m	class:CLROBS::GSSampleFilter::GSAddressMode::Texture
texture	DShowPlugin/DeviceSource.h	/^        std::unique_ptr<Texture>    texture;$/;"	m	struct:DeviceSource::<anonymous>
texture	DShowPlugin/DeviceSource.h	/^    Texture         *texture, *previousTexture;$/;"	m	class:DeviceSource
texture	GraphicsCapture/MemoryCapture.h	/^    Texture *texture;$/;"	m	class:MemoryCapture
texture	Source/BitmapImage.h	/^    Texture *texture;$/;"	m	class:BitmapImage
texture	Source/D3D10System.h	/^    ID3D10Texture2D          *texture;$/;"	m	class:D3D10Texture
texture	Source/TextOutputSource.cpp	/^    Texture     *texture;$/;"	m	class:TextOutputSource	file:
texture1Offset	GraphicsCapture/GlobalCaptureStuff.h	/^    DWORD       texture1Offset, texture2Offset;$/;"	m	struct:MemoryCopyData
texture2Offset	GraphicsCapture/GlobalCaptureStuff.h	/^    DWORD       texture1Offset, texture2Offset;$/;"	m	struct:MemoryCopyData
textureBuffers	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^LPBYTE                  textureBuffers[2] = {NULL, NULL};$/;"	v
textureBuffers	GraphicsCapture/MemoryCapture.h	/^    LPBYTE textureBuffers[2];$/;"	m	class:MemoryCapture
textureCount	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserRenderHandler.cs	/^        private int textureCount;$/;"	f	class:Browser.BrowserRenderHandler	file:
textureID	Source/D3D10System.h	/^    UINT textureID;$/;"	m	struct:ShaderParam
textureLock	CLRBrowserSourcePlugin/Plugin/BrowserSource.cs	/^        private Object textureLock = new Object();$/;"	f	class:CLRBrowserSourcePlugin.BrowserSource	file:
textureLock	CLRHostPlugin/CLRCSharpSamplePlugin/SampleImageSource.cs	/^        private Object textureLock = new Object();$/;"	f	class:CSharpSamplePlugin.SampleImageSource	file:
textureMap	CLRBrowserSourcePlugin/Plugin/BrowserSource.cs	/^        private Dictionary<IntPtr, Texture> textureMap;$/;"	f	class:CLRBrowserSourcePlugin.BrowserSource	file:
textureMutexes	GraphicsCapture/GraphicsCapture.cpp	/^HANDLE textureMutexes[2] = {NULL, NULL};$/;"	v
textureMutexes	GraphicsCapture/GraphicsCaptureHook/GraphicsCaptureHook.cpp	/^HANDLE textureMutexes[2] = {NULL, NULL};$/;"	v
texturePitch	DShowPlugin/DeviceSource.h	/^    UINT            texturePitch;$/;"	m	class:DeviceSource
textureSize	Source/TextOutputSource.cpp	/^    SIZE        textureSize;$/;"	m	class:TextOutputSource	file:
textures	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserRenderHandler.cs	/^        private List<SharedTexture> textures;$/;"	f	class:Browser.BrowserRenderHandler	file:
textures	GraphicsCapture/GraphicsCaptureHook/D3D9Capture.cpp	/^IDirect3DSurface9       *textures[NUM_BUFFERS] = ZERO_ARRAY;$/;"	v
textures	QSVHelper/IntelSupport/include/d3d11_allocator.h	/^        std::vector<ID3D11Texture2D*> textures;$/;"	m	struct:D3D11FrameAllocator::TextureResource
texturesLock	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/BrowserRenderHandler.cs	/^        private Object texturesLock = new Object();$/;"	f	class:Browser.BrowserRenderHandler	file:
tfcos12	lame/mpglib/layer3.c	/^static real tfcos12[3];$/;"	v	file:
tfcos36	lame/mpglib/layer3.c	/^static real tfcos36[9];$/;"	v	file:
tfile	lame/misc/mugeco.sh	/^tfile() {	# usage: tfile <variable_name>$/;"	f
thePlugin	scenesw/SceneSwitcher.h	/^    SceneSwitcher * thePlugin;$/;"	m	class:SceneSwitcherSettings
thePlugin	scenesw/scenesw.cpp	/^SceneSwitcher* thePlugin = NULL;$/;"	v
the_Bitrates	lame/ACM/AEncodeProperties.cpp	/^const unsigned int AEncodeProperties::the_Bitrates[18] = {320, 256, 224, 192, 160, 144, 128, 112, 96, 80, 64, 56, 48, 40, 32, 24, 16, 8 };$/;"	m	class:AEncodeProperties	file:
the_Bitrates	lame/ACM/AEncodeProperties.h	/^	static const unsigned int the_Bitrates[18];$/;"	m	class:AEncodeProperties
the_ChannelModes	lame/ACM/AEncodeProperties.cpp	/^const unsigned int AEncodeProperties::the_ChannelModes[3] = { STEREO, JOINT_STEREO, DUAL_CHANNEL };$/;"	m	class:AEncodeProperties	file:
the_ChannelModes	lame/ACM/AEncodeProperties.h	/^	static const unsigned int the_ChannelModes[3];$/;"	m	class:AEncodeProperties
the_MPEG1_Bitrates	lame/ACM/AEncodeProperties.cpp	/^const unsigned int AEncodeProperties::the_MPEG1_Bitrates[14] = {320, 256, 224, 192, 160, 128, 112, 96, 80, 64, 56, 48, 40, 32 };$/;"	m	class:AEncodeProperties	file:
the_MPEG1_Bitrates	lame/ACM/AEncodeProperties.h	/^	static const unsigned int the_MPEG1_Bitrates[14];$/;"	m	class:AEncodeProperties
the_MPEG2_Bitrates	lame/ACM/AEncodeProperties.cpp	/^const unsigned int AEncodeProperties::the_MPEG2_Bitrates[14] = {160, 144, 128, 112, 96, 80, 64, 56, 48, 40, 32, 24, 16, 8};$/;"	m	class:AEncodeProperties	file:
the_MPEG2_Bitrates	lame/ACM/AEncodeProperties.h	/^	static const unsigned int the_MPEG2_Bitrates[14];$/;"	m	class:AEncodeProperties
the_SamplingFreqs	lame/ACM/AEncodeProperties.h	/^	static const unsigned int the_SamplingFreqs[9];$/;"	m	class:AEncodeProperties
thisLineNeedsResetting_mc	libfaac/coder.h	/^    int thisLineNeedsResetting_mc[BLOCK_LEN_LONG];$/;"	m
thm	lame/libmp3lame/l3side.h	/^    III_psy_xmin thm;$/;"	m
thm	lame/libmp3lame/util.h	/^        III_psy_xmin thm[4];$/;"	m
thr	lame/libmp3lame/lame-analysis.h	/^    double  thr[2][4][SBMAX_l];$/;"	m	struct:plotting_data
thr_s	lame/libmp3lame/lame-analysis.h	/^    double  thr_s[2][4][3 * SBMAX_s];$/;"	m	struct:plotting_data
thread	OBSApi/GraphicsSystem.h	/^            std::unique_ptr<void, ThreadDeleter<>> thread;$/;"	m	struct:GraphicsSystem::FutureShaderContainer::FutureShaderContext
thread	OBSApi/Utility/Profiler.h	/^    HANDLE thread;$/;"	m	class:ProfilerNode
thread	OBSApi/Utility/XT_Windows.cpp	/^    unique_ptr<void, HandleCloser> directory, change_handle, thread, stop_event;$/;"	m	struct:OSDirectoryMonitorData	file:
thread	scenesw/SceneSwitcher.h	/^	HANDLE thread;$/;"	m	class:SceneSwitcher
thread.cpp	minhook/src/thread.cpp	1;"	F
thread.h	minhook/src/thread.h	1;"	F
threadparam	Source/mongoose.c	/^struct threadparam {$/;"	s	file:
threads	Source/ReplayBuffer.cpp	/^    vector<pair<unique_ptr<void, ThreadCloser>, shared_ptr<void>>> threads;$/;"	m	struct:ReplayBuffer	file:
threads_	minhook/src/thread.h	/^		std::vector<DWORD> threads_;$/;"	m	class:MinHook::ScopedThreadExclusive
tickMethod	CLRHostPlugin/CLRHostPlugin/CLRImageSource.h	/^    mscorlib::_MethodInfo *tickMethod;$/;"	m	class:CLRImageSource
time	Source/OBS.h	/^        DWORD time = (DWORD)-1;$/;"	m	struct:OBS::StopInfo
timeOffset	OBSApi/AudioSource.h	/^    int timeOffset;$/;"	m	class:AudioSource
timeSeen	Source/OBS.h	/^        bool timeSeen = false;$/;"	m	struct:OBS::StopInfo
timeToSleep	scenesw/SceneSwitcher.h	/^	DWORD timeToSleep;$/;"	m	class:SceneSwitcher
time_buffer	libfaac/coder.h	/^    double *time_buffer;$/;"	m
time_defs.h	QSVHelper/IntelSupport/include/vm/time_defs.h	1;"	F
time_stamp	QSVHelper/IPCStructs.h	/^    mfxU64 time_stamp;$/;"	m	struct:bitstream_info
time_status_init	lame/frontend/timestatus.c	/^    int     time_status_init;$/;"	m	struct:EncoderProgress	file:
time_status_struct	lame/frontend/timestatus.c	/^typedef struct time_status_struct {$/;"	s	file:
timeout	librtmp/rtmp.h	/^        int timeout;		\/* connection timeout in seconds *\/$/;"	m	struct:RTMP_LNK
timer	scenesw/SceneSwitcher.h	/^	HANDLE timer;$/;"	m	class:SceneSwitcher
timerID	Source/WindowStuff.cpp	/^    UINT_PTR timerID;$/;"	m	struct:ReconnectInfo	file:
timestamp	DShowPlugin/DeviceSource.h	/^    LONGLONG timestamp;$/;"	m	struct:SampleData
timestamp	OBSApi/AudioSource.h	/^    QWORD timestamp;$/;"	m	struct:AudioSegment
timestamp	ObsNvenc/inc/NVENCEncoder.h	/^    DWORD timestamp;$/;"	m	struct:NVENCEncoderOutputSurface
timestamp	QSVHelper/IPCStructs.h	/^    mfxU64 timestamp;$/;"	m	struct:queued_frame
timestamp	Source/MP4FileStream.cpp	/^    UINT    timestamp;$/;"	m	struct:MP4AudioFrameInfo	file:
timestamp	Source/MP4FileStream.cpp	/^    UINT    timestamp;$/;"	m	struct:MP4VideoFrameInfo	file:
timestamp	Source/OBS.h	/^    DWORD timestamp;$/;"	m	struct:TimedPacket
timestamp	Source/OBS.h	/^    DWORD timestamp;$/;"	m	struct:VideoSegment
timestamp	Source/OBS.h	/^    QWORD timestamp;$/;"	m	struct:FrameAudio
timestamp	Source/RTMPPublisher.h	/^    DWORD timestamp;$/;"	m	struct:NetworkPacket
timestamp	lame/frontend/rtp.c	/^    int     timestamp;       \/* start: random *\/$/;"	m	struct:rtpheader	file:
timestamp	librtmp/rtmp.h	/^        uint32_t timestamp;$/;"	m	struct:RTMP_READ
timestatus	lame/frontend/timestatus.c	/^timestatus(const lame_global_flags * const gfp)$/;"	f	file:
timestatus.c	lame/frontend/timestatus.c	1;"	F
timestatus.h	lame/frontend/timestatus.h	1;"	F
timestatus_finish	lame/frontend/timestatus.c	/^timestatus_finish(void)$/;"	f	file:
timestatus_t	lame/frontend/timestatus.c	/^} timestatus_t;$/;"	t	file:
tinyxml.cpp	lame/ACM/tinyxml/tinyxml.cpp	1;"	F
tinyxml.h	lame/ACM/tinyxml/tinyxml.h	1;"	F
tinyxmlerror.cpp	lame/ACM/tinyxml/tinyxmlerror.cpp	1;"	F
tinyxmlparser.cpp	lame/ACM/tinyxml/tinyxmlparser.cpp	1;"	F
tip	lame/ACM/AEncodeProperties.h	/^	const char *tip;$/;"	m
title	lame/libmp3lame/id3tag.h	/^    char   *title;$/;"	m	struct:id3tag_spec
tls_ctx	librtmp/rtmp_sys.h	/^typedef struct tls_ctx$/;"	s
tls_ctx	librtmp/rtmp_sys.h	/^} tls_ctx;$/;"	t
tls_server_ctx	librtmp/rtmp_sys.h	/^typedef struct tls_server_ctx$/;"	s
tls_server_ctx	librtmp/rtmp_sys.h	/^} tls_server_ctx;$/;"	t
tmpbuf	libfaac/kiss_fft/kiss_fftr.c	/^    kiss_fft_cpx * tmpbuf;$/;"	m	struct:kiss_fftr_state	file:
tns.c	libfaac/tns.c	1;"	F
tns.h	libfaac/tns.h	1;"	F
tnsDataPresent	libfaac/coder.h	/^    int tnsDataPresent;$/;"	m
tnsFilter	libfaac/coder.h	/^    TnsFilterData tnsFilter[1<<LEN_TNS_NFILTL]; \/* TNS filters *\/$/;"	m
tnsInfo	libfaac/coder.h	/^    TnsInfo tnsInfo;$/;"	m
tnsMaxBandsLong	libfaac/coder.h	/^    int tnsMaxBandsLong;$/;"	m
tnsMaxBandsLongMainLow	libfaac/tns.c	/^static unsigned short tnsMaxBandsLongMainLow[12] =$/;"	v	file:
tnsMaxBandsShort	libfaac/coder.h	/^    int tnsMaxBandsShort;$/;"	m
tnsMaxBandsShortMainLow	libfaac/tns.c	/^static unsigned short tnsMaxBandsShortMainLow[12] =$/;"	v	file:
tnsMaxOrderLong	libfaac/coder.h	/^    int tnsMaxOrderLong;$/;"	m
tnsMaxOrderLongLow	libfaac/tns.c	/^static unsigned short tnsMaxOrderLongLow = 12;$/;"	v	file:
tnsMaxOrderLongMain	libfaac/tns.c	/^static unsigned short tnsMaxOrderLongMain = 20;$/;"	v	file:
tnsMaxOrderShort	libfaac/coder.h	/^    int tnsMaxOrderShort;$/;"	m
tnsMaxOrderShortMainLow	libfaac/tns.c	/^static unsigned short tnsMaxOrderShortMainLow = 7;$/;"	v	file:
tnsMinBandNumberLong	libfaac/coder.h	/^    int tnsMinBandNumberLong;$/;"	m
tnsMinBandNumberLong	libfaac/tns.c	/^static unsigned short tnsMinBandNumberLong[12] =$/;"	v	file:
tnsMinBandNumberShort	libfaac/coder.h	/^    int tnsMinBandNumberShort;$/;"	m
tnsMinBandNumberShort	libfaac/tns.c	/^static unsigned short tnsMinBandNumberShort[12] =$/;"	v	file:
tnsSupportedSamplingRates	libfaac/tns.c	/^static unsigned long tnsSupportedSamplingRates[13] =$/;"	v	file:
to64	Source/mongoose.c	127;"	d	file:
to64	Source/mongoose.c	158;"	d	file:
toDB	Source/OBSCapture.cpp	/^inline float toDB(float RMS)$/;"	f
toID3v2TagId	lame/libmp3lame/id3tag.c	/^toID3v2TagId(char const *s)$/;"	f	file:
toID3v2TagId_ucs2	lame/libmp3lame/id3tag.c	/^toID3v2TagId_ucs2(unsigned short const *s)$/;"	f	file:
toLatin1	lame/frontend/parse.c	/^char* toLatin1( char* src )$/;"	f	file:
toLatin1	lame/frontend/parse.c	/^char* toLatin1(char const* s)$/;"	f
toLittleEndian	lame/libmp3lame/id3tag.c	/^toLittleEndian(unsigned short bom, unsigned short c)$/;"	f	file:
toUtf16	lame/frontend/parse.c	/^char* toUtf16( char* src )$/;"	f	file:
toUtf16	lame/frontend/parse.c	/^unsigned short* toUtf16(char const* s)$/;"	f
to_short	lame/misc/abx.c	/^short  to_short ( int x )$/;"	f
to_wchar	Source/mongoose.c	/^static void to_wchar(const char *path, wchar_t *wbuf, size_t wbuf_len) {$/;"	f	file:
toc	lame/libmp3lame/VbrTag.h	/^    unsigned char toc[NUMTOCENTRIES]; \/* may be NULL if toc not desired *\/$/;"	m
toggleHotkey	scenesw/SceneSwitcher.h	/^	DWORD toggleHotkey;$/;"	m	class:SceneSwitcher
toggleTableRowsByName	UpgradeLog.htm	/^/;"	f
token	librtmp/rtmp.h	/^        AVal token;$/;"	m	struct:RTMP_LNK
top	OBSApi/Utility/XTLocalization.h	/^    StringLookupNode *top;$/;"	m	class:LocaleStringLookup
top	ObsNvenc/inc/nvEncodeAPI.h	/^  uint32_t top;                                         \/**< [in]: Y coordinate of the upper left corner of the rectangular area to be specified.   *\/$/;"	m	struct:_NVENC_RECT
top_build_prefix	lame/ACM/ADbg/Makefile	/^top_build_prefix = ..\/..\/$/;"	m
top_build_prefix	lame/ACM/Makefile	/^top_build_prefix = ..\/$/;"	m
top_build_prefix	lame/ACM/ddk/Makefile	/^top_build_prefix = ..\/..\/$/;"	m
top_build_prefix	lame/ACM/tinyxml/Makefile	/^top_build_prefix = ..\/..\/$/;"	m
top_build_prefix	lame/Dll/Makefile	/^top_build_prefix = ..\/$/;"	m
top_build_prefix	lame/Makefile	/^top_build_prefix = $/;"	m
top_build_prefix	lame/debian/Makefile	/^top_build_prefix = ..\/$/;"	m
top_build_prefix	lame/doc/Makefile	/^top_build_prefix = ..\/$/;"	m
top_build_prefix	lame/doc/html/Makefile	/^top_build_prefix = ..\/..\/$/;"	m
top_build_prefix	lame/doc/man/Makefile	/^top_build_prefix = ..\/..\/$/;"	m
top_build_prefix	lame/dshow/Makefile	/^top_build_prefix = ..\/$/;"	m
top_build_prefix	lame/frontend/Makefile	/^top_build_prefix = ..\/$/;"	m
top_build_prefix	lame/include/Makefile	/^top_build_prefix = ..\/$/;"	m
top_build_prefix	lame/libmp3lame/Makefile	/^top_build_prefix = ..\/$/;"	m
top_build_prefix	lame/libmp3lame/i386/Makefile	/^top_build_prefix = ..\/..\/$/;"	m
top_build_prefix	lame/libmp3lame/vector/Makefile	/^top_build_prefix = ..\/..\/$/;"	m
top_build_prefix	lame/mac/Makefile	/^top_build_prefix = ..\/$/;"	m
top_build_prefix	lame/macosx/English.lproj/Makefile	/^top_build_prefix = ..\/..\/$/;"	m
top_build_prefix	lame/macosx/LAME.xcodeproj/Makefile	/^top_build_prefix = ..\/..\/$/;"	m
top_build_prefix	lame/macosx/Makefile	/^top_build_prefix = ..\/$/;"	m
top_build_prefix	lame/misc/Makefile	/^top_build_prefix = ..\/$/;"	m
top_build_prefix	lame/mpglib/Makefile	/^top_build_prefix = ..\/$/;"	m
top_build_prefix	lame/vc_solution/Makefile	/^top_build_prefix = ..\/$/;"	m
top_builddir	lame/ACM/ADbg/Makefile	/^top_builddir = ..\/..$/;"	m
top_builddir	lame/ACM/Makefile	/^top_builddir = ..$/;"	m
top_builddir	lame/ACM/ddk/Makefile	/^top_builddir = ..\/..$/;"	m
top_builddir	lame/ACM/tinyxml/Makefile	/^top_builddir = ..\/..$/;"	m
top_builddir	lame/Dll/Makefile	/^top_builddir = ..$/;"	m
top_builddir	lame/Makefile	/^top_builddir = .$/;"	m
top_builddir	lame/debian/Makefile	/^top_builddir = ..$/;"	m
top_builddir	lame/doc/Makefile	/^top_builddir = ..$/;"	m
top_builddir	lame/doc/html/Makefile	/^top_builddir = ..\/..$/;"	m
top_builddir	lame/doc/man/Makefile	/^top_builddir = ..\/..$/;"	m
top_builddir	lame/dshow/Makefile	/^top_builddir = ..$/;"	m
top_builddir	lame/frontend/Makefile	/^top_builddir = ..$/;"	m
top_builddir	lame/include/Makefile	/^top_builddir = ..$/;"	m
top_builddir	lame/libmp3lame/Makefile	/^top_builddir = ..$/;"	m
top_builddir	lame/libmp3lame/i386/Makefile	/^top_builddir = ..\/..$/;"	m
top_builddir	lame/libmp3lame/vector/Makefile	/^top_builddir = ..\/..$/;"	m
top_builddir	lame/mac/Makefile	/^top_builddir = ..$/;"	m
top_builddir	lame/macosx/English.lproj/Makefile	/^top_builddir = ..\/..$/;"	m
top_builddir	lame/macosx/LAME.xcodeproj/Makefile	/^top_builddir = ..\/..$/;"	m
top_builddir	lame/macosx/Makefile	/^top_builddir = ..$/;"	m
top_builddir	lame/misc/Makefile	/^top_builddir = ..$/;"	m
top_builddir	lame/mpglib/Makefile	/^top_builddir = ..$/;"	m
top_builddir	lame/vc_solution/Makefile	/^top_builddir = ..$/;"	m
top_distdir	lame/ACM/Makefile	/^	        top_distdir="$$new_top_distdir" \\$/;"	m
top_distdir	lame/ACM/Makefile	/^	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\\\"; \\$/;"	m
top_distdir	lame/Makefile	/^	        top_distdir="$$new_top_distdir" \\$/;"	m
top_distdir	lame/Makefile	/^	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\\\"; \\$/;"	m
top_distdir	lame/Makefile	/^top_distdir = $(distdir)$/;"	m
top_distdir	lame/debian/Makefile	/^	  top_distdir="$(top_distdir)" distdir="$(distdir)" \\$/;"	m
top_distdir	lame/doc/Makefile	/^	        top_distdir="$$new_top_distdir" \\$/;"	m
top_distdir	lame/doc/Makefile	/^	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\\\"; \\$/;"	m
top_distdir	lame/libmp3lame/Makefile	/^	        top_distdir="$$new_top_distdir" \\$/;"	m
top_distdir	lame/libmp3lame/Makefile	/^	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\\\"; \\$/;"	m
top_distdir	lame/macosx/Makefile	/^	        top_distdir="$$new_top_distdir" \\$/;"	m
top_distdir	lame/macosx/Makefile	/^	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\\\"; \\$/;"	m
top_srcdir	lame/ACM/ADbg/Makefile	/^top_srcdir = ..\/..$/;"	m
top_srcdir	lame/ACM/Makefile	/^top_srcdir = ..$/;"	m
top_srcdir	lame/ACM/ddk/Makefile	/^top_srcdir = ..\/..$/;"	m
top_srcdir	lame/ACM/tinyxml/Makefile	/^top_srcdir = ..\/..$/;"	m
top_srcdir	lame/Dll/Makefile	/^top_srcdir = ..$/;"	m
top_srcdir	lame/Makefile	/^top_srcdir = .$/;"	m
top_srcdir	lame/debian/Makefile	/^top_srcdir = ..$/;"	m
top_srcdir	lame/doc/Makefile	/^top_srcdir = ..$/;"	m
top_srcdir	lame/doc/html/Makefile	/^top_srcdir = ..\/..$/;"	m
top_srcdir	lame/doc/man/Makefile	/^top_srcdir = ..\/..$/;"	m
top_srcdir	lame/dshow/Makefile	/^top_srcdir = ..$/;"	m
top_srcdir	lame/frontend/Makefile	/^top_srcdir = ..$/;"	m
top_srcdir	lame/include/Makefile	/^top_srcdir = ..$/;"	m
top_srcdir	lame/libmp3lame/Makefile	/^top_srcdir = ..$/;"	m
top_srcdir	lame/libmp3lame/i386/Makefile	/^top_srcdir = ..\/..$/;"	m
top_srcdir	lame/libmp3lame/vector/Makefile	/^top_srcdir = ..\/..$/;"	m
top_srcdir	lame/mac/Makefile	/^top_srcdir = ..$/;"	m
top_srcdir	lame/macosx/English.lproj/Makefile	/^top_srcdir = ..\/..$/;"	m
top_srcdir	lame/macosx/LAME.xcodeproj/Makefile	/^top_srcdir = ..\/..$/;"	m
top_srcdir	lame/macosx/Makefile	/^top_srcdir = ..$/;"	m
top_srcdir	lame/misc/Makefile	/^top_srcdir = ..$/;"	m
top_srcdir	lame/mpglib/Makefile	/^top_srcdir = ..$/;"	m
top_srcdir	lame/vc_solution/Makefile	/^top_srcdir = ..$/;"	m
topologies	Source/D3D10System.cpp	/^const D3D10_PRIMITIVE_TOPOLOGY topologies[] = {D3D10_PRIMITIVE_TOPOLOGY_POINTLIST, D3D10_PRIMITIVE_TOPOLOGY_LINELIST, D3D10_PRIMITIVE_TOPOLOGY_LINESTRIP, D3D10_PRIMITIVE_TOPOLOGY_TRIANGLELIST, D3D10_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP};$/;"	v
topsrcdirstrip	lame/ACM/ADbg/Makefile	/^	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's\/[].[^$$\\\\*]\/\\\\\\\\&\/g'`; \\$/;"	m
topsrcdirstrip	lame/ACM/Makefile	/^	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's\/[].[^$$\\\\*]\/\\\\\\\\&\/g'`; \\$/;"	m
topsrcdirstrip	lame/ACM/ddk/Makefile	/^	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's\/[].[^$$\\\\*]\/\\\\\\\\&\/g'`; \\$/;"	m
topsrcdirstrip	lame/ACM/tinyxml/Makefile	/^	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's\/[].[^$$\\\\*]\/\\\\\\\\&\/g'`; \\$/;"	m
topsrcdirstrip	lame/Dll/Makefile	/^	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's\/[].[^$$\\\\*]\/\\\\\\\\&\/g'`; \\$/;"	m
topsrcdirstrip	lame/Makefile	/^	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's\/[].[^$$\\\\*]\/\\\\\\\\&\/g'`; \\$/;"	m
topsrcdirstrip	lame/debian/Makefile	/^	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's\/[].[^$$\\\\*]\/\\\\\\\\&\/g'`; \\$/;"	m
topsrcdirstrip	lame/doc/Makefile	/^	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's\/[].[^$$\\\\*]\/\\\\\\\\&\/g'`; \\$/;"	m
topsrcdirstrip	lame/doc/html/Makefile	/^	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's\/[].[^$$\\\\*]\/\\\\\\\\&\/g'`; \\$/;"	m
topsrcdirstrip	lame/doc/man/Makefile	/^	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's\/[].[^$$\\\\*]\/\\\\\\\\&\/g'`; \\$/;"	m
topsrcdirstrip	lame/dshow/Makefile	/^	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's\/[].[^$$\\\\*]\/\\\\\\\\&\/g'`; \\$/;"	m
topsrcdirstrip	lame/frontend/Makefile	/^	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's\/[].[^$$\\\\*]\/\\\\\\\\&\/g'`; \\$/;"	m
topsrcdirstrip	lame/include/Makefile	/^	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's\/[].[^$$\\\\*]\/\\\\\\\\&\/g'`; \\$/;"	m
topsrcdirstrip	lame/libmp3lame/Makefile	/^	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's\/[].[^$$\\\\*]\/\\\\\\\\&\/g'`; \\$/;"	m
topsrcdirstrip	lame/libmp3lame/i386/Makefile	/^	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's\/[].[^$$\\\\*]\/\\\\\\\\&\/g'`; \\$/;"	m
topsrcdirstrip	lame/libmp3lame/vector/Makefile	/^	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's\/[].[^$$\\\\*]\/\\\\\\\\&\/g'`; \\$/;"	m
topsrcdirstrip	lame/mac/Makefile	/^	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's\/[].[^$$\\\\*]\/\\\\\\\\&\/g'`; \\$/;"	m
topsrcdirstrip	lame/macosx/English.lproj/Makefile	/^	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's\/[].[^$$\\\\*]\/\\\\\\\\&\/g'`; \\$/;"	m
topsrcdirstrip	lame/macosx/LAME.xcodeproj/Makefile	/^	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's\/[].[^$$\\\\*]\/\\\\\\\\&\/g'`; \\$/;"	m
topsrcdirstrip	lame/macosx/Makefile	/^	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's\/[].[^$$\\\\*]\/\\\\\\\\&\/g'`; \\$/;"	m
topsrcdirstrip	lame/misc/Makefile	/^	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's\/[].[^$$\\\\*]\/\\\\\\\\&\/g'`; \\$/;"	m
topsrcdirstrip	lame/mpglib/Makefile	/^	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's\/[].[^$$\\\\*]\/\\\\\\\\&\/g'`; \\$/;"	m
topsrcdirstrip	lame/vc_solution/Makefile	/^	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's\/[].[^$$\\\\*]\/\\\\\\\\&\/g'`; \\$/;"	m
tot_ener	lame/libmp3lame/util.h	/^        FLOAT   tot_ener[4];$/;"	m
tot_noise	lame/libmp3lame/lame-analysis.h	/^    double  tot_noise[2][2];$/;"	m	struct:plotting_data
tot_noise	lame/libmp3lame/quantize_pvt.h	/^    FLOAT   tot_noise;       \/* sum of all quantization noise *\/$/;"	m	struct:calc_noise_result_t
totalAllocations	OBSApi/Utility/DebugAlloc.cpp	/^DWORD totalAllocations = 0;$/;"	v
totalBytesTransmitted	Source/BandwidthAnalysis.cpp	/^    QWORD totalBytesTransmitted;$/;"	m	class:BandwidthAnalyzer	file:
totalBytesWaited	Source/RTMPPublisher.h	/^    int totalBytesWaited;$/;"	m	class:RTMPPublisher
totalControlAreaHeight	Source/OBS.cpp	/^const int totalControlAreaHeight = 171;\/\/170;\/\/$/;"	v
totalControlAreaWidth	Source/OBS.cpp	/^const int totalControlAreaWidth  = minClientWidth - 10;$/;"	v
totalFrames	Source/RTMPPublisher.h	/^    UINT totalFrames;$/;"	m	class:RTMPPublisher
totalSendBytes	Source/RTMPPublisher.h	/^    QWORD totalSendBytes;$/;"	m	class:RTMPPublisher
totalSendCount	Source/RTMPPublisher.h	/^    DWORD totalSendCount;$/;"	m	class:RTMPPublisher
totalSendPeriod	Source/RTMPPublisher.h	/^    DWORD totalSendPeriod;$/;"	m	class:RTMPPublisher
totalStreamTime	Source/OBS.h	/^    DWORD totalStreamTime;$/;"	m	class:OBS
totalTimeElapsed	OBSApi/Utility/Profiler.cpp	/^    QWORD totalTimeElapsed,$/;"	m	struct:ProfileNodeInfo	file:
totalTimesWaited	Source/RTMPPublisher.h	/^    int totalTimesWaited;$/;"	m	class:RTMPPublisher
totalVideoFrames	Source/RTMPPublisher.h	/^    UINT totalVideoFrames;$/;"	m	class:RTMPPublisher
totalWritten	OBSApi/Utility/XFile.h	/^    QWORD totalWritten;$/;"	m	class:XFileOutputSerializer
totalframes	lame/frontend/gtkanal.c	/^    int     totalframes;$/;"	m	struct:gtkinfostruct	file:
totalframes	lame/include/lame.h	/^  int totalframes;     \/* total number of frames in mp3 file             *\/$/;"	m
totbit	lame/libmp3lame/util.h	/^        int     totbit;      \/* bit counter of bit stream *\/$/;"	m	struct:bit_stream_struc
totbits	lame/libmp3lame/lame-analysis.h	/^    int     totbits;$/;"	m	struct:plotting_data
totemph	lame/frontend/gtkanal.c	/^    int     totemph;         \/* total of frames with de-emphasis *\/$/;"	m	struct:gtkinfostruct	file:
totis	lame/frontend/gtkanal.c	/^    int     totis;           \/* total frames with i_stereo *\/$/;"	m	struct:gtkinfostruct	file:
totmix	lame/frontend/gtkanal.c	/^    int     totmix;          \/* total granules with mixed blocks *\/$/;"	m	struct:gtkinfostruct	file:
totms	lame/frontend/gtkanal.c	/^    int     totms;           \/* total frames with ms_stereo *\/$/;"	m	struct:gtkinfostruct	file:
totpreflag	lame/frontend/gtkanal.c	/^    int     totpreflag;      \/* total granules with preflag *\/$/;"	m	struct:gtkinfostruct	file:
totsamp	lame/libmp3lame/gain_analysis.h	/^        long    totsamp;$/;"	m	struct:replaygain_data
totshort	lame/frontend/gtkanal.c	/^    int     totshort;        \/* total granules with short blocks *\/$/;"	m	struct:gtkinfostruct	file:
traceIn	OBSApi/Utility/XT_Windows.h	57;"	d
traceIn	OBSApi/Utility/XT_Windows.h	63;"	d
traceInFast	OBSApi/Utility/XT_Windows.h	59;"	d
traceInFast	OBSApi/Utility/XT_Windows.h	70;"	d
traceInFast	OBSApi/Utility/XT_Windows.h	73;"	d
traceOut	OBSApi/Utility/XT_Windows.h	58;"	d
traceOut	OBSApi/Utility/XT_Windows.h	64;"	d
traceOutFast	OBSApi/Utility/XT_Windows.h	60;"	d
traceOutFast	OBSApi/Utility/XT_Windows.h	71;"	d
traceOutFast	OBSApi/Utility/XT_Windows.h	74;"	d
traceOutStop	OBSApi/Utility/XT_Windows.h	61;"	d
traceOutStop	OBSApi/Utility/XT_Windows.h	65;"	d
track_id3v1	lame/libmp3lame/id3tag.h	/^    int     track_id3v1;$/;"	m	struct:id3tag_spec
trampoline	minhook/src/trampoline.h	/^		std::vector<char>		trampoline;$/;"	m	struct:MinHook::CREATE_TREMPOLINE_T
trampoline.cpp	minhook/src/trampoline.cpp	1;"	F
trampoline.h	minhook/src/trampoline.h	1;"	F
trancate_smallspectrums	lame/libmp3lame/quantize.c	/^trancate_smallspectrums(lame_internal_flags const *gfc,$/;"	f	file:
transfer	QSVHelper/IPCStructs.h	/^    int32_t full_range, matrix, primaries, transfer;$/;"	m	struct:init_request
transfer	Source/OBS.h	/^    int transfer;$/;"	m	struct:ColorDescription
transferCharacteristics	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t    transferCharacteristics;              \/**< [in]: Specifies the opto-electronic transfer characteristics to use (as defined in Annex E of the ITU-T Specification) *\/$/;"	m	struct:_NV_ENC_CONFIG_H264_VUI_PARAMETERS
transfer_file_data	Source/mongoose.c	/^static void transfer_file_data(struct connection *conn) {$/;"	f	file:
transform	lame/ACM/ADbg/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	lame/ACM/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	lame/ACM/ddk/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	lame/ACM/tinyxml/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	lame/Dll/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	lame/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	lame/debian/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	lame/doc/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	lame/doc/html/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	lame/doc/man/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	lame/dshow/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	lame/frontend/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	lame/include/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	lame/libmp3lame/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	lame/libmp3lame/i386/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	lame/libmp3lame/vector/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	lame/mac/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	lame/macosx/English.lproj/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	lame/macosx/LAME.xcodeproj/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	lame/macosx/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	lame/misc/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	lame/mpglib/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	lame/vc_solution/Makefile	/^transform = $(program_transform_name)$/;"	m
transitionAlpha	Source/OBS.h	/^    float   transitionAlpha;$/;"	m	class:OBS
transitionPixelShader	Source/OBS.h	/^    Shader  *mainVertexShader, *mainPixelShader, *yuvScalePixelShader, *transitionPixelShader;$/;"	m	class:OBS
transitionTexture	Source/OBS.h	/^    Texture *transitionTexture;$/;"	m	class:OBS
transitionTime	Source/BitmapTransitionSource.cpp	/^    float transitionTime;$/;"	m	class:BitmapTransitionSource	file:
transparency	Source/libnsgif.h	/^    BOOL transparency;             \/**< whether we acknoledge transparency *\/$/;"	m	struct:gif_frame
transparency_index	Source/libnsgif.h	/^    unsigned char transparency_index;    \/**< the index designating a transparent pixel *\/$/;"	m	struct:gif_frame
tri_calc_sfb_noise_x34	lame/libmp3lame/vbrquantize.c	/^tri_calc_sfb_noise_x34(const FLOAT * xr, const FLOAT * xr34, FLOAT l3_xmin, unsigned int bw,$/;"	f	file:
tripleVal	OBSApi/AudioSource.cpp	/^        BYTE tripleVal;$/;"	m	struct:TripleToLong::<anonymous>	file:
truth	librtmp/rtmp.c	/^static const AVal truth[] =$/;"	v	file:
tryGlobalStepsize	lame/libmp3lame/vbrquantize.c	/^tryGlobalStepsize(const algo_t * that, const int sfwork[SFBMAX],$/;"	f	file:
tryThatOne	lame/libmp3lame/vbrquantize.c	/^tryThatOne(algo_t const* that, const int sftemp[SFBMAX], const int vbrsfmin[SFBMAX], int vbrmax)$/;"	f	file:
try_parse	Source/mongoose.c	/^static void try_parse(struct connection *conn) {$/;"	f	file:
ts_calc_times	lame/frontend/timestatus.c	/^ts_calc_times(timestatus_t * const tstime, \/* tstime->elapsed_time: elapsed time *\/$/;"	f	file:
ts_time_decompose	lame/frontend/timestatus.c	/^ts_time_decompose(const double x, const char padded_char)$/;"	f	file:
tsprintf_s	OBSApi/Utility/XString.cpp	/^int tsprintf_s(TCHAR *pDest, size_t bufLen, const TCHAR *format, ...)$/;"	f
tstof	OBSApi/Utility/XString.cpp	/^double tstof(TCHAR *lpFloat)$/;"	f
tstoi	OBSApi/Utility/XString.cpp	/^int tstoi(TCHAR *lpInt)$/;"	f
tstoi64	OBSApi/Utility/XString.cpp	/^INT64 tstoi64(TCHAR *lpInt)$/;"	f
tstoui	OBSApi/Utility/XString.cpp	/^unsigned int tstoui(TCHAR *lpInt)$/;"	f
tstoui64	OBSApi/Utility/XString.cpp	/^UINT64 tstoui64(TCHAR *lpInt)$/;"	f
tstr_createUTF8	OBSApi/Utility/XString.cpp	/^LPSTR tstr_createUTF8(const TCHAR *strSrc)$/;"	f
tstr_createWide	OBSApi/Utility/XString.cpp	/^WSTR tstr_createWide(const TCHAR *strSrc)$/;"	f
tstr_to_utf8	OBSApi/Utility/XString.cpp	/^int tstr_to_utf8(const TCHAR *strSrc, char *strDest, size_t destLen)$/;"	f
tstr_to_utf8_datalen	OBSApi/Utility/XString.cpp	/^int tstr_to_utf8_datalen(const TCHAR *strSrc)$/;"	f
tstr_to_wide	OBSApi/Utility/XString.cpp	/^int tstr_to_wide(const TCHAR *strSrc, wchar_t *strDest, size_t destLen)$/;"	f
tstr_to_wide_datalen	OBSApi/Utility/XString.cpp	/^int tstr_to_wide_datalen(const TCHAR *strSrc)$/;"	f
tstring_base_to_int	OBSApi/Utility/XString.cpp	/^int tstring_base_to_int(const TCHAR *nptr, TCHAR **endptr, int base)$/;"	f
tstring_base_to_int64	OBSApi/Utility/XString.cpp	/^INT64 tstring_base_to_int64(const TCHAR *nptr, TCHAR **endptr, int base)$/;"	f
tstring_base_to_uint	OBSApi/Utility/XString.cpp	/^unsigned int tstring_base_to_uint(const TCHAR *nptr, TCHAR **endptr, int base)$/;"	f
tstring_base_to_uint64	OBSApi/Utility/XString.cpp	/^UINT64 tstring_base_to_uint64(const TCHAR *nptr, TCHAR **endptr, int base)$/;"	f
tt	lame/libmp3lame/l3side.h	/^    gr_info tt[2][2];$/;"	m
tune	lame/libmp3lame/lame_global_flags.h	/^    int     tune;            \/* 0 off, 1 on *\/$/;"	m	struct:lame_global_struct
tune_value_a	lame/libmp3lame/lame_global_flags.h	/^    float   tune_value_a;    \/* used to pass values for debugging and stuff *\/$/;"	m	struct:lame_global_struct
turn_down	lame/misc/ath.c	/^    turn_down  = 3,$/;"	e	file:
turn_up	lame/misc/ath.c	/^    turn_up    = 2,$/;"	e	file:
twiddles	libfaac/kiss_fft/_kiss_fft_guts.h	/^    kiss_fft_cpx twiddles[1];$/;"	m	struct:kiss_fft_state
txt	lame/libmp3lame/id3tag.h	/^    } dsc  , txt;$/;"	m	struct:FrameDataNode
type	DShowPlugin/DShowPlugin.h	/^    int    type, fieldOrder, processor;$/;"	m	struct:DeinterlacerConfig
type	DShowPlugin/DeviceSource.h	/^        int                         type; \/\/DeinterlacingType$/;"	m	struct:DeviceSource::<anonymous>
type	OBSApi/GraphicsSystem.h	/^    GSColorFormat type;$/;"	m	struct:TextureInfo
type	OBSApi/GraphicsSystem.h	/^    ShaderParameterType type;$/;"	m	struct:ShaderParameterInfo
type	OBSApi/Utility/XConfig.h	/^    int type;$/;"	m	class:XBaseItem
type	QSVHelper/QSVHelper.cpp	/^        mfxIMPL type,$/;"	m	struct:<anonymous>::impl_parameters	file:
type	Source/D3D10System.h	/^    ShaderParameterType type;$/;"	m	struct:ShaderParam
type	Source/Encoder_QSV.cpp	/^        mfxU32 type,$/;"	m	struct:<anonymous>::impl_parameters	file:
type	Source/OBS.h	/^    PacketType type;$/;"	m	struct:TimedPacket
type	Source/OBS.h	/^    PacketType type;$/;"	m	struct:VideoPacketData
type	Source/RTMPPublisher.h	/^    PacketType type;$/;"	m	struct:NetworkPacket
type	lame/ACM/tinyxml/tinyxml.h	/^	NodeType		type;$/;"	m	class:TiXmlNode
type	libmfx/include/mfx_win_reg_key.h	/^template<> struct RegKey<bool>{enum {type = REG_DWORD};};$/;"	e	enum:MFX::RegKey::<anonymous>
type	libmfx/include/mfx_win_reg_key.h	/^template<> struct RegKey<char*>{enum {type = REG_SZ};};$/;"	e	enum:MFX::RegKey::<anonymous>
type	libmfx/include/mfx_win_reg_key.h	/^template<> struct RegKey<mfxPluginUID>{enum {type = REG_BINARY};};$/;"	e	enum:MFX::RegKey::<anonymous>
type	libmfx/include/mfx_win_reg_key.h	/^template<> struct RegKey<mfxU32>{enum {type = REG_DWORD};};$/;"	e	enum:MFX::RegKey::<anonymous>
type	libmfx/include/mfx_win_reg_key.h	/^template<> struct RegKey<mfxVersion>{enum {type = REG_DWORD};};$/;"	e	enum:MFX::RegKey::<anonymous>
type	libmfx/include/mfx_win_reg_key.h	/^template<> struct RegKey<wchar_t*>{enum {type = REG_SZ};};$/;"	e	enum:MFX::RegKey::<anonymous>
type	librtmp/rtmp.c	/^SAVC(type);$/;"	v
typeRef	CLRHostPlugin/CLRHostPlugin/CLRObjectRef.h	/^    void *typeRef;$/;"	m	class:CLRObjectRef
tzchecked	librtmp/hashswf.c	/^static int tzchecked;$/;"	v	file:
tzoff	librtmp/hashswf.c	/^static int tzoff;$/;"	v	file:
u	lame/frontend/get_audio.c	/^    int     u;               \/* number samples used *\/$/;"	m	struct:PcmBuffer	file:
u	lame/libmp3lame/id3tag.h	/^            unsigned short *u; \/* ptr to UCS-2 text                *\/$/;"	m	union:FrameDataNode::<anonymous>::<anonymous>
ui64tots_s	OBSApi/Utility/XString.cpp	/^int ui64tots_s(UINT64 val, TCHAR *buffer, size_t bufLen, int radix)$/;"	f
uint16_t	ObsNvenc/inc/nvEncodeAPI.h	/^typedef unsigned short uint16_t;$/;"	t
uint16_t	Source/mongoose.c	/^typedef unsigned short uint16_t;$/;"	t	file:
uint16_t	extras/stdint.h	/^typedef unsigned short  uint16_t;$/;"	t
uint16_t	lame/config.h	/^	typedef unsigned __int16 uint16_t;$/;"	t
uint16_t	lame/config.h	72;"	d
uint16_t	lame/configMS.h	/^	typedef unsigned __int16 uint16_t;$/;"	t
uint16_t	lame/configMS.h	72;"	d
uint16_t	lame/frontend/rtp.c	75;"	d	file:
uint16_t	lame/mac/Precompile_Common.h	26;"	d
uint16_t	lame/stdint.h	/^typedef unsigned short  uint16_t;$/;"	t
uint16_t	librtmp/stdint.h	/^typedef unsigned short  uint16_t;$/;"	t
uint16_t	minhook/src/pstdint.h	/^  typedef unsigned int uint16_t;$/;"	t
uint16_t	minhook/src/pstdint.h	/^  typedef unsigned short uint16_t;$/;"	t
uint32_high_low	lame/frontend/get_audio.c	/^static unsigned int uint32_high_low(unsigned char *bytes)$/;"	f	file:
uint32_t	ObsNvenc/inc/nvEncodeAPI.h	/^typedef unsigned __int32 uint32_t;$/;"	t
uint32_t	Source/mongoose.c	/^typedef unsigned int uint32_t;$/;"	t	file:
uint32_t	extras/stdint.h	/^typedef unsigned   uint32_t;$/;"	t
uint32_t	lame/config.h	/^	typedef unsigned __int32 uint32_t;$/;"	t
uint32_t	lame/config.h	73;"	d
uint32_t	lame/configMS.h	/^	typedef unsigned __int32 uint32_t;$/;"	t
uint32_t	lame/configMS.h	73;"	d
uint32_t	lame/frontend/rtp.c	76;"	d	file:
uint32_t	lame/mac/Precompile_Common.h	27;"	d
uint32_t	lame/stdint.h	/^typedef unsigned   uint32_t;$/;"	t
uint32_t	librtmp/stdint.h	/^typedef unsigned   uint32_t;$/;"	t
uint32_t	minhook/src/pstdint.h	/^  typedef unsigned int uint32_t;$/;"	t
uint32_t	minhook/src/pstdint.h	/^  typedef unsigned long uint32_t;$/;"	t
uint32_t	minhook/src/pstdint.h	/^  typedef unsigned short uint32_t;$/;"	t
uint64_t	ObsNvenc/inc/nvEncodeAPI.h	/^typedef unsigned __int64 uint64_t;$/;"	t
uint64_t	Source/mongoose.c	/^typedef unsigned __int64 uint64_t;$/;"	t	file:
uint64_t	extras/stdint.h	/^typedef unsigned __int64 uint64_t;$/;"	t
uint64_t	lame/config.h	/^	typedef unsigned __int64 uint64_t;$/;"	t
uint64_t	lame/config.h	74;"	d
uint64_t	lame/configMS.h	/^	typedef unsigned __int64 uint64_t;$/;"	t
uint64_t	lame/configMS.h	74;"	d
uint64_t	lame/frontend/rtp.c	77;"	d	file:
uint64_t	lame/mac/Precompile_Common.h	28;"	d
uint64_t	lame/stdint.h	/^typedef unsigned __int64 uint64_t;$/;"	t
uint64_t	librtmp/stdint.h	/^typedef unsigned __int64 uint64_t;$/;"	t
uint64_t	minhook/src/pstdint.h	/^   __extension__ typedef unsigned long long uint64_t;$/;"	t
uint64_t	minhook/src/pstdint.h	/^   typedef unsigned __int64 uint64_t;$/;"	t
uint64_t	minhook/src/pstdint.h	/^   typedef unsigned long long uint64_t;$/;"	t
uint8_t	ObsNvenc/inc/nvEncodeAPI.h	/^typedef unsigned char uint8_t;$/;"	t
uint8_t	Source/mongoose.c	/^typedef unsigned char uint8_t;$/;"	t	file:
uint8_t	extras/stdint.h	/^typedef unsigned char   uint8_t;$/;"	t
uint8_t	lame/config.h	/^	typedef unsigned __int8  uint8_t;$/;"	t
uint8_t	lame/config.h	71;"	d
uint8_t	lame/configMS.h	/^	typedef unsigned __int8  uint8_t;$/;"	t
uint8_t	lame/configMS.h	71;"	d
uint8_t	lame/frontend/rtp.c	74;"	d	file:
uint8_t	lame/mac/Precompile_Common.h	25;"	d
uint8_t	lame/stdint.h	/^typedef unsigned char   uint8_t;$/;"	t
uint8_t	librtmp/bytes.h	/^typedef unsigned char uint8_t;$/;"	t
uint8_t	librtmp/stdint.h	/^typedef unsigned char   uint8_t;$/;"	t
uint8_t	minhook/src/pstdint.h	/^    typedef unsigned char uint8_t;$/;"	t
uint_fast16_t	extras/stdint.h	/^typedef unsigned short  uint_fast16_t;$/;"	t
uint_fast16_t	lame/stdint.h	/^typedef unsigned short  uint_fast16_t;$/;"	t
uint_fast16_t	librtmp/stdint.h	/^typedef unsigned short  uint_fast16_t;$/;"	t
uint_fast16_t	minhook/src/pstdint.h	/^typedef uint_least16_t uint_fast16_t;$/;"	t
uint_fast32_t	extras/stdint.h	/^typedef unsigned  int  uint_fast32_t;$/;"	t
uint_fast32_t	lame/stdint.h	/^typedef unsigned  int  uint_fast32_t;$/;"	t
uint_fast32_t	librtmp/stdint.h	/^typedef unsigned  int  uint_fast32_t;$/;"	t
uint_fast32_t	minhook/src/pstdint.h	/^typedef uint_least32_t uint_fast32_t;$/;"	t
uint_fast64_t	extras/stdint.h	/^typedef unsigned __int64   uint_fast64_t;$/;"	t
uint_fast64_t	lame/stdint.h	/^typedef unsigned __int64   uint_fast64_t;$/;"	t
uint_fast64_t	librtmp/stdint.h	/^typedef unsigned __int64   uint_fast64_t;$/;"	t
uint_fast64_t	minhook/src/pstdint.h	/^  typedef uint_least64_t uint_fast64_t;$/;"	t
uint_fast8_t	extras/stdint.h	/^typedef unsigned char uint_fast8_t;$/;"	t
uint_fast8_t	lame/stdint.h	/^typedef unsigned char uint_fast8_t;$/;"	t
uint_fast8_t	librtmp/stdint.h	/^typedef unsigned char uint_fast8_t;$/;"	t
uint_fast8_t	minhook/src/pstdint.h	/^typedef  uint_least8_t  uint_fast8_t;$/;"	t
uint_least16_t	extras/stdint.h	/^typedef unsigned short  uint_least16_t;$/;"	t
uint_least16_t	lame/stdint.h	/^typedef unsigned short  uint_least16_t;$/;"	t
uint_least16_t	librtmp/stdint.h	/^typedef unsigned short  uint_least16_t;$/;"	t
uint_least16_t	minhook/src/pstdint.h	/^  typedef uint16_t uint_least16_t;$/;"	t
uint_least32_t	extras/stdint.h	/^typedef unsigned   uint_least32_t;$/;"	t
uint_least32_t	lame/stdint.h	/^typedef unsigned   uint_least32_t;$/;"	t
uint_least32_t	librtmp/stdint.h	/^typedef unsigned   uint_least32_t;$/;"	t
uint_least32_t	minhook/src/pstdint.h	/^  typedef uint32_t uint_least32_t;$/;"	t
uint_least64_t	extras/stdint.h	/^typedef unsigned __int64   uint_least64_t;$/;"	t
uint_least64_t	lame/stdint.h	/^typedef unsigned __int64   uint_least64_t;$/;"	t
uint_least64_t	librtmp/stdint.h	/^typedef unsigned __int64   uint_least64_t;$/;"	t
uint_least64_t	minhook/src/pstdint.h	/^    typedef uint64_t uint_least64_t;$/;"	t
uint_least8_t	extras/stdint.h	/^typedef unsigned char   uint_least8_t;$/;"	t
uint_least8_t	lame/stdint.h	/^typedef unsigned char   uint_least8_t;$/;"	t
uint_least8_t	librtmp/stdint.h	/^typedef unsigned char   uint_least8_t;$/;"	t
uint_least8_t	minhook/src/pstdint.h	/^  typedef  uint8_t  uint_least8_t;$/;"	t
uintmax_t	extras/stdint.h	/^typedef unsigned __int64   uintmax_t;$/;"	t
uintmax_t	lame/stdint.h	/^typedef unsigned __int64   uintmax_t;$/;"	t
uintmax_t	librtmp/stdint.h	/^typedef unsigned __int64   uintmax_t;$/;"	t
uintmax_t	minhook/src/pstdint.h	/^  typedef uint32_t uintmax_t;$/;"	t
uintmax_t	minhook/src/pstdint.h	/^  typedef uint64_t uintmax_t;$/;"	t
uitots_s	OBSApi/Utility/XString.cpp	/^int uitots_s(unsigned int val, TCHAR *buffer, size_t bufLen, int radix)$/;"	f
unaccountedPercentage	OBSApi/Utility/Profiler.cpp	/^    double unaccountedPercentage;$/;"	m	struct:ProfileNodeInfo	file:
uncommittedCount	minhook/src/buffer.cpp	/^		size_t	uncommittedCount;$/;"	m	struct:MinHook::<anonymous>::MEMORY_BLOCK	file:
uncommittedSize	minhook/src/buffer.cpp	/^		size_t	uncommittedSize;$/;"	m	struct:MinHook::<anonymous>::MEMORY_BLOCK	file:
uncompressedResourceMiscFlags	QSVHelper/IntelSupport/include/d3d11_allocator.h	/^    DWORD uncompressedResourceMiscFlags;$/;"	m	struct:D3D11AllocatorParams
unicodeToMbs	lame/frontend/main.c	/^static char *unicodeToMbs(const wchar_t *wstr, int code_page)$/;"	f	file:
unicodeToUtf8	lame/frontend/main.c	/^char *unicodeToUtf8(const wchar_t *wstr)$/;"	f
unique	lame/ACM/Makefile	/^	  test -n "$$unique" || unique=$$empty_fix; \\$/;"	m
unique	lame/ACM/Makefile	/^	unique=`for i in $$list; do \\$/;"	m
unique	lame/Makefile	/^	  test -n "$$unique" || unique=$$empty_fix; \\$/;"	m
unique	lame/Makefile	/^	unique=`for i in $$list; do \\$/;"	m
unique	lame/doc/Makefile	/^	  test -n "$$unique" || unique=$$empty_fix; \\$/;"	m
unique	lame/doc/Makefile	/^	unique=`for i in $$list; do \\$/;"	m
unique	lame/frontend/Makefile	/^	  test -n "$$unique" || unique=$$empty_fix; \\$/;"	m
unique	lame/frontend/Makefile	/^	unique=`for i in $$list; do \\$/;"	m
unique	lame/include/Makefile	/^	  test -n "$$unique" || unique=$$empty_fix; \\$/;"	m
unique	lame/include/Makefile	/^	unique=`for i in $$list; do \\$/;"	m
unique	lame/libmp3lame/Makefile	/^	  test -n "$$unique" || unique=$$empty_fix; \\$/;"	m
unique	lame/libmp3lame/Makefile	/^	unique=`for i in $$list; do \\$/;"	m
unique	lame/libmp3lame/i386/Makefile	/^	  test -n "$$unique" || unique=$$empty_fix; \\$/;"	m
unique	lame/libmp3lame/i386/Makefile	/^	unique=`for i in $$list; do \\$/;"	m
unique	lame/libmp3lame/vector/Makefile	/^	  test -n "$$unique" || unique=$$empty_fix; \\$/;"	m
unique	lame/libmp3lame/vector/Makefile	/^	unique=`for i in $$list; do \\$/;"	m
unique	lame/macosx/Makefile	/^	  test -n "$$unique" || unique=$$empty_fix; \\$/;"	m
unique	lame/macosx/Makefile	/^	unique=`for i in $$list; do \\$/;"	m
unique	lame/misc/Makefile	/^	  test -n "$$unique" || unique=$$empty_fix; \\$/;"	m
unique	lame/misc/Makefile	/^	unique=`for i in $$list; do \\$/;"	m
unique	lame/mpglib/Makefile	/^	  test -n "$$unique" || unique=$$empty_fix; \\$/;"	m
unique	lame/mpglib/Makefile	/^	unique=`for i in $$list; do \\$/;"	m
unloadPluginMethod	CLRHostPlugin/CLRHostPlugin/CLRPlugin.h	/^    mscorlib::_MethodInfo *unloadPluginMethod;$/;"	m	class:CLRPlugin
unlock	OBSApi/Utility/RAIIHelpers.h	/^    bool locked, unlock;$/;"	m	struct:ScopedLock
unlock	QSVHelper/WindowsStuff.h	/^    void unlock() { if(mutex_) ReleaseMutex(mutex_); }$/;"	f	struct:IPCMutex
unpack_read_samples	lame/frontend/get_audio.c	/^unpack_read_samples(const int samples_to_read, const int bytes_per_sample,$/;"	f	file:
unprocessed	OBSApi/Utility/XT.cpp	/^        StringList unprocessed, processing;$/;"	m	struct:<anonymous>::XStringLog	file:
unsetDebugFile	lame/ACM/ADbg/ADbg.cpp	/^bool ADbg::unsetDebugFile() {$/;"	f	class:ADbg
unsetDebugFile	lame/ACM/ADbg/ADbg.h	/^	inline bool unsetDebugFile() {$/;"	f	class:ADbg
unsigned	lame/doc/html/detailed.html	/^<a name="unsigned"><span class="hilight">--unsigned<\/span><\/a> Input RAW uses unsigned values   $/;"	a
up	lame/misc/ath.c	/^    up         = 0,$/;"	e	file:
updateImageTime	Source/BitmapImage.h	/^    float updateImageTime;$/;"	m	class:BitmapImage
updateLameTagFrame	lame/Dll/BladeMP3EncDLL.c	/^updateLameTagFrame(lame_global_flags* gfp, FILE* fpStream)$/;"	f	file:
updateLameTagFrame	lame/dshow/Encoder.cpp	/^HRESULT CEncoder::updateLameTagFrame(IStream* pStream)$/;"	f	class:CEncoder
updateOptions	lame/misc/lameGUI.html	/^  function updateOptions() {$/;"	f
updateSettingsMethod	CLRHostPlugin/CLRHostPlugin/CLRImageSource.h	/^    mscorlib::_MethodInfo *updateSettingsMethod;$/;"	m	class:CLRImageSource
updateStats	lame/libmp3lame/encoder.c	/^updateStats(lame_internal_flags * const gfc)$/;"	f	file:
update_inbuffer_size	lame/libmp3lame/lame.c	/^update_inbuffer_size(lame_internal_flags * gfc, const int nsamples)$/;"	f	file:
update_interval	lame/frontend/main.h	/^    float update_interval;          \/* to use Frank's time status display *\/$/;"	m	struct:UiConfig
update_progress	lame/frontend/gtkanal.c	/^update_progress(void)$/;"	f	file:
uri	CLRBrowserSourcePlugin/Plugin/RemoteBrowser/AssetSchemeHandler.cs	/^        private Uri uri;$/;"	f	class:RemoteBrowser.AssetSchemeHandler	file:
uri	Source/mongoose.h	/^  const char *uri;            \/\/ URL-decoded URI$/;"	m	struct:mg_connection
url	Source/LogUploader.h	/^    String url, analyzerURL;$/;"	m	struct:LogUploadResult
urldecode2	Source/Main.cpp	/^void urldecode2(char *dst, const char *src)$/;"	f
urlopt	librtmp/rtmp.c	/^static struct urlopt$/;"	s	file:
usage	lame/doc/html/detailed.html	/^<a name="usage"><span class="hilight">--usage<\/span><\/a> Print the command line help.$/;"	a
usage	lame/frontend/parse.c	/^usage(FILE * const fp, const char *ProgramName)$/;"	f
usage	lame/misc/abx.c	/^void  usage ( void )$/;"	f
usage	lame/misc/ath.c	/^static void usage ( void )$/;"	f	file:
usage	lame/misc/mugeco.sh	/^usage() {$/;"	f
usage.html	lame/doc/html/usage.html	1;"	F
usageStr	Source/Encoder_QSV.cpp	/^    const TCHAR* usageStr[] = {$/;"	v
use	librtmp/rtmp.c	/^    char *use;$/;"	m	struct:urlopt	file:
use709	DShowPlugin/DeviceSource.h	/^    BOOL            use709;$/;"	m	class:DeviceSource
useAnalogAudioInput	DShowPlugin/IVideoCaptureFilter.h	/^    BOOL                                 useAnalogAudioInput;               \/\/!< for HDMI with analog audio input$/;"	m	struct:_VIDEO_CAPTURE_FILTER_SETTINGS
useCount	ObsNvenc/inc/NVENCEncoder.h	/^    uint32_t useCount;$/;"	m	struct:NVENCEncoderSurface
useInputDevices	Source/Settings.h	/^    bool bDisplayConnectedOnly, useInputDevices;$/;"	m	class:SettingsAudio
useLfe	libfaac/include/faaccfg.h	/^    unsigned int useLfe;$/;"	m	struct:faacEncConfiguration
useSafeHook	GraphicsCapture/GraphicsCaptureSource.h	/^    bool useSafeHook;$/;"	m	class:GraphicsCaptureSource
useTemporal	lame/libmp3lame/lame_global_flags.h	/^    int     useTemporal;     \/* use temporal masking effect          *\/$/;"	m	struct:lame_global_struct
useTns	libfaac/include/faaccfg.h	/^    unsigned int useTns;$/;"	m	struct:faacEncConfiguration
use_adjust	lame/libmp3lame/util.h	/^        int     use_adjust;  \/* method for the auto adjustment  *\/$/;"	m
use_best_huffman	lame/libmp3lame/lame_global_flags.h	/^    int     use_best_huffman; \/* 0 = no.  1=outside loop  2=inside loop(slow) *\/$/;"	m	struct:lame_global_struct
use_best_huffman	lame/libmp3lame/util.h	/^        int     use_best_huffman; \/* 0 = no.  1=outside loop  2=inside loop(slow) *\/$/;"	m
use_bs_dts	Source/Encoder_QSV.cpp	/^        bool use_bs_dts;$/;"	m	struct:<anonymous>::DTSGenerator	file:
use_cbr	QSVHelper/Encoder.h	/^    bool use_cbr;$/;"	m	struct:Encoder
use_cbr	QSVHelper/IPCStructs.h	/^    bool use_cbr, use_custom_parameters;$/;"	m	struct:init_request
use_custom_impl	QSVHelper/IPCStructs.h	/^    bool use_custom_impl;$/;"	m	struct:init_request
use_custom_parameters	QSVHelper/IPCStructs.h	/^    bool use_cbr, use_custom_parameters;$/;"	m	struct:init_request
use_safe_joint_stereo	lame/libmp3lame/util.h	/^        int     use_safe_joint_stereo;$/;"	m
use_temporal_masking_effect	lame/libmp3lame/util.h	/^        int     use_temporal_masking_effect;$/;"	m
usedBytes	libfaac/frame.h	/^    unsigned int usedBytes;$/;"	m
user_callback_data	libsamplerate/common.h	/^	void			*user_callback_data ;$/;"	m	struct:SRC_PRIVATE_tag
user_data	Source/mongoose.c	/^  void *user_data;                  \/\/ User data$/;"	m	struct:ns_mgr	file:
user_data	Source/mongoose.c	/^  void *user_data;            \/\/ User-specific data$/;"	m	struct:ns_connection	file:
usherToken	librtmp/rtmp.h	/^        AVal usherToken;$/;"	m	struct:RTMP_LNK
using_custom_impl	QSVHelper/IPCStructs.h	/^    bool using_custom_impl;$/;"	m	struct:init_response
using_d3d11	QSVHelper/Encoder.h	/^    bool using_d3d11;$/;"	m	struct:Encoder
utf8-windows.cpp	OBSApi/Utility/utf8-windows.cpp	1;"	F
utf8.cpp	OBSApi/Utility/utf8.cpp	1;"	F
utf8.h	OBSApi/Utility/utf8.h	1;"	F
utf8ToConsole8Bit	lame/frontend/main.c	/^char* utf8ToConsole8Bit(const char* str)$/;"	f
utf8ToLatin1	lame/frontend/main.c	/^char* utf8ToLatin1(char const* str)$/;"	f
utf8ToLocal8Bit	lame/frontend/main.c	/^char* utf8ToLocal8Bit(const char* str)$/;"	f
utf8ToUnicode	lame/frontend/main.c	/^wchar_t *utf8ToUnicode(const char *mbstr)$/;"	f
utf8ToUtf16	lame/frontend/main.c	/^unsigned short* utf8ToUtf16(char const* mbstr) \/* additional Byte-Order-Marker *\/$/;"	f
utf8_createTstr	OBSApi/Utility/XString.cpp	/^BASE_EXPORT TSTR utf8_createTstr(const char *strSrc)$/;"	f
utf8_to_tchar	OBSApi/Utility/XString.cpp	/^int utf8_to_tchar(const char *strSrc, TCHAR *strDest, size_t destLen)$/;"	f
utf8_to_tchar_datalen	OBSApi/Utility/XString.cpp	/^int utf8_to_tchar_datalen(const char *strSrc)$/;"	f
utf8_to_wchar	OBSApi/Utility/utf8-windows.cpp	/^size_t utf8_to_wchar(const char *in, size_t insize, wchar_t *out, size_t outsize, int flags)$/;"	f
utf8_to_wchar	OBSApi/Utility/utf8.cpp	/^utf8_to_wchar(const char *in, size_t insize, wchar_t *out, size_t outsize,$/;"	f
utf8_to_wchar_len	OBSApi/Utility/utf8-windows.cpp	/^size_t utf8_to_wchar_len(const char *in, size_t insize, int flags)$/;"	f
utf8_to_wchar_len	OBSApi/Utility/utf8.cpp	/^size_t utf8_to_wchar_len(const char *in, size_t insize, int flags)$/;"	f
util.c	lame/libmp3lame/util.c	1;"	F
util.c	libfaac/util.c	1;"	F
util.h	lame/libmp3lame/util.h	1;"	F
util.h	libfaac/util.h	1;"	F
v	lame/frontend/rtp.c	/^    int     v:2;             \/* version: 2 *\/$/;"	m	struct:rtpbits	file:
v2_head	lame/libmp3lame/id3tag.h	/^    FrameDataNode *v2_head, *v2_tail;$/;"	m	struct:id3tag_spec
v2_tail	lame/libmp3lame/id3tag.h	/^    FrameDataNode *v2_head, *v2_tail;$/;"	m	struct:id3tag_spec
va_copy	Source/mongoose.c	122;"	d	file:
val	OBSApi/AudioSource.cpp	/^    LONG val;$/;"	m	union:TripleToLong	file:
val	Source/MP4FileStream.cpp	/^    UINT val;$/;"	m	struct:OffsetVal	file:
valid	lame/libmp3lame/vbrquantize.c	/^    int     valid;$/;"	m	struct:calc_noise_cache	file:
validSemanticStrings	Source/D3D10ShaderProcessor.cpp	/^LPCSTR validSemanticStrings[] = {"SV_Position", "NORMAL", "COLOR", "TANGENT", "TEXCOORD"};$/;"	v
validSemanticTStrings	Source/D3D10ShaderProcessor.cpp	/^CTSTR validSemanticTStrings[] = {TEXT("SV_Position"), TEXT("NORMAL"), TEXT("COLOR"), TEXT("TANGENT"), TEXT("TEXCOORD")};$/;"	v
valid_impl	QSVHelper/QSVHelper.cpp	/^    } valid_impl[] = {$/;"	v
valid_x264_string	Source/Encoder_x264.cpp	/^bool valid_x264_string(const String &str, const char **x264StringList)$/;"	f
value	Source/mongoose.h	/^    const char *value;        \/\/ HTTP header value$/;"	m	struct:mg_connection::mg_header
value	lame/ACM/tinyxml/tinyxml.h	/^	std::string		value;$/;"	m	class:TiXmlAttribute
value	lame/ACM/tinyxml/tinyxml.h	/^	std::string		value;$/;"	m	class:TiXmlNode
value	lame/libmp3lame/vbrquantize.c	/^    FLOAT   value;$/;"	m	struct:calc_noise_cache	file:
vari_process	libsamplerate/common.h	/^	int		(*vari_process) (struct SRC_PRIVATE_tag *psrc, SRC_DATA *data) ;$/;"	m	struct:SRC_PRIVATE_tag
vars	Source/mongoose.c	/^  const char *vars[MAX_CGI_ENVIR_VARS]; \/\/ char *envp[]$/;"	m	struct:cgi_env_block	file:
vbd	OBSApi/GraphicsSystem.h	/^    VBData *vbd;$/;"	m	class:GraphicsSystem
vbr	lame/libmp3lame/util.h	/^        vbr_mode vbr;$/;"	m
vbr-old	lame/doc/html/detailed.html	/^<a name="vbr-old"><span class="hilight">--vbr-old<\/span><\/a> Uses the old VBR method of encoding$/;"	a
vbr.html	lame/doc/html/vbr.html	1;"	F
vbr_abr	lame/include/lame.h	/^  vbr_abr,$/;"	e	enum:vbr_mode_e
vbr_avg_bitrate_kbps	lame/libmp3lame/util.h	/^        int     vbr_avg_bitrate_kbps;$/;"	m
vbr_bitrate_max_index	lame/frontend/brhist.c	/^    int     vbr_bitrate_max_index;$/;"	m	struct:brhist_struct	file:
vbr_bitrate_min_index	lame/frontend/brhist.c	/^    int     vbr_bitrate_min_index;$/;"	m	struct:brhist_struct	file:
vbr_default	lame/include/lame.h	/^  vbr_default=vbr_mtrh    \/* change this to change the default VBR mode of LAME *\/$/;"	e	enum:vbr_mode_e
vbr_header	lame/mpglib/mpglib.h	/^    int     vbr_header;      \/* 1 if valid Xing vbr header detected *\/$/;"	m	struct:mpstr_tag
vbr_max_bitrate_index	lame/libmp3lame/util.h	/^        int     vbr_max_bitrate_index; \/* max bitrate index *\/$/;"	m
vbr_max_indicator	lame/include/lame.h	/^  vbr_max_indicator,    \/* Don't use this! It's used for sanity checks.       *\/$/;"	e	enum:vbr_mode_e
vbr_min_bitrate_index	lame/libmp3lame/util.h	/^        int     vbr_min_bitrate_index; \/* min bitrate index *\/$/;"	m
vbr_mode	lame/ACM/ACM.h	/^typedef enum vbr_mode_e vbr_mode;$/;"	t
vbr_mode	lame/ACM/ACMStream.h	/^typedef enum vbr_mode_e vbr_mode;$/;"	t
vbr_mode	lame/include/lame.h	/^} vbr_mode;$/;"	t
vbr_mode_e	lame/include/lame.h	/^typedef enum vbr_mode_e {$/;"	g
vbr_mt	lame/include/lame.h	/^  vbr_mt,               \/* obsolete, same as vbr_mtrh *\/$/;"	e	enum:vbr_mode_e
vbr_mt_psy_switch_map	lame/libmp3lame/presets.c	/^    static const vbr_presets_t vbr_mt_psy_switch_map[] = {$/;"	v	file:
vbr_mtrh	lame/include/lame.h	/^  vbr_mtrh,$/;"	e	enum:vbr_mode_e
vbr_off	lame/include/lame.h	/^  vbr_off=0,$/;"	e	enum:vbr_mode_e
vbr_old_switch_map	lame/libmp3lame/presets.c	/^    static const vbr_presets_t vbr_old_switch_map[] = {$/;"	v	file:
vbr_presets_t	lame/libmp3lame/presets.c	/^} vbr_presets_t;$/;"	t	file:
vbr_q	lame/libmp3lame/presets.c	/^    int     vbr_q;$/;"	m	file:
vbr_rh	lame/include/lame.h	/^  vbr_rh,$/;"	e	enum:vbr_mode_e
vbr_scale	lame/libmp3lame/VbrTag.h	/^    int     vbr_scale;       \/* encoded vbr scale from Vbr header data *\/$/;"	m
vbrpsy_apply_block_type	lame/libmp3lame/psymodel.c	/^vbrpsy_apply_block_type(PsyStateVar_t * psv, int nch, int const *uselongblock, int *blocktype_d)$/;"	f	file:
vbrpsy_attack_detection	lame/libmp3lame/psymodel.c	/^vbrpsy_attack_detection(lame_internal_flags * gfc, const sample_t * const buffer[2], int gr_out,$/;"	f	file:
vbrpsy_calc_mask_index_s	lame/libmp3lame/psymodel.c	/^vbrpsy_calc_mask_index_s(lame_internal_flags const *gfc, FLOAT const *max,$/;"	f	file:
vbrpsy_compute_MS_thresholds	lame/libmp3lame/psymodel.c	/^vbrpsy_compute_MS_thresholds(const FLOAT eb[4][CBANDS], FLOAT thr[4][CBANDS],$/;"	f	file:
vbrpsy_compute_block_type	lame/libmp3lame/psymodel.c	/^vbrpsy_compute_block_type(SessionConfig_t const *cfg, int *uselongblock)$/;"	f	file:
vbrpsy_compute_fft_l	lame/libmp3lame/psymodel.c	/^vbrpsy_compute_fft_l(lame_internal_flags * gfc, const sample_t * const buffer[2], int chn,$/;"	f	file:
vbrpsy_compute_fft_s	lame/libmp3lame/psymodel.c	/^vbrpsy_compute_fft_s(lame_internal_flags const *gfc, const sample_t * const buffer[2], int chn,$/;"	f	file:
vbrpsy_compute_loudness_approximation_l	lame/libmp3lame/psymodel.c	/^vbrpsy_compute_loudness_approximation_l(lame_internal_flags * gfc, int gr_out, int chn,$/;"	f	file:
vbrpsy_compute_masking_l	lame/libmp3lame/psymodel.c	/^vbrpsy_compute_masking_l(lame_internal_flags * gfc, const FLOAT fftenergy[HBLKSIZE],$/;"	f	file:
vbrpsy_compute_masking_s	lame/libmp3lame/psymodel.c	/^vbrpsy_compute_masking_s(lame_internal_flags * gfc, const FLOAT(*fftenergy_s)[HBLKSIZE_s],$/;"	f	file:
vbrpsy_mask_add	lame/libmp3lame/psymodel.c	/^vbrpsy_mask_add(FLOAT m1, FLOAT m2, int b, int delta)$/;"	f	file:
vbrpsy_skip_masking_s	lame/libmp3lame/psymodel.c	/^vbrpsy_skip_masking_s(lame_internal_flags * gfc, int chn, int sblock)$/;"	f	file:
vbrquantize.c	lame/libmp3lame/vbrquantize.c	1;"	F
vbrquantize.h	lame/libmp3lame/vbrquantize.h	1;"	F
vbvBufferSize	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                        vbvBufferSize;                               \/**< [in]: Specifies the VBV(HRD) buffer size. in bits. Set 0 to use the default VBV  buffer size. *\/$/;"	m	struct:_NV_ENC_RC_PARAMS
vbvInitialDelay	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                        vbvInitialDelay;                             \/**< [in]: Specifies the VBV(HRD) initial delay in bits. Set 0 to use the default VBV  initial delay .*\/$/;"	m	struct:_NV_ENC_RC_PARAMS
vec	Source/mongoose.c	/^struct vec {$/;"	s	file:
vec_max_c	lame/libmp3lame/vbrquantize.c	/^vec_max_c(const float * xr34, unsigned int bw)$/;"	f	file:
vecfloat_union	lame/libmp3lame/vector/xmm_quantize_sub.c	/^} vecfloat_union;$/;"	t	file:
vector_ldadd	lame/libmp3lame/Makefile	/^vector_ldadd = $(top_builddir)\/libmp3lame\/vector\/liblamevectorroutines.la$/;"	m
vendorIDKeyName	libmfx/src/mfx_library_iterator.cpp	/^wchar_t vendorIDKeyName[] = L"VendorID";$/;"	v
vendor_id	libmfx/include/mfx_library_iterator.h	/^    mfxU32 vendor_id;$/;"	m	struct:mfx_disp_adapters
ver	Source/Encoder_QSV.cpp	/^    mfxVersion ver;$/;"	m	class:QSVEncoder	file:
ver_1_6	Source/Encoder_QSV.cpp	/^        bool ver_1_6;$/;"	m	struct:<anonymous>::DTSGenerator	file:
verbose	lame/doc/html/detailed.html	/^<a name="verbose"><span class="hilight">--verbose<\/span><\/a>Program verbosity$/;"	a
verbose	lame/misc/abx.c	/^int verbose = 0;$/;"	v
version	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                                    version;                        \/**< [in]: Struct version. Must be set to ::NV_ENC_PIC_PARAMS_VER. *\/$/;"	m	struct:_NV_ENC_PIC_PARAMS
version	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                                    version;                        \/**< [in]: Struct version. Must be set to ::NV_ENC_RECONFIGURE_PARAMS_VER. *\/$/;"	m	struct:_NV_ENC_RECONFIGURE_PARAMS
version	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                                   version;                         \/**< [in]: Struct version. Must be set to ::NV_ENC_INITIALIZE_PARAMS_VER. *\/$/;"	m	struct:_NV_ENC_INITIALIZE_PARAMS
version	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                        version;                                     \/**< [in]: Struct version. Must be set to ::NV_ENC_CONFIG_VER. *\/$/;"	m	struct:_NV_ENC_CONFIG
version	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                        version;                           \/**< [in]: Client should pass NV_ENCODE_API_FUNCTION_LIST_VER.                               *\/$/;"	m	struct:_NV_ENCODE_API_FUNCTION_LIST
version	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                        version;$/;"	m	struct:_NV_ENC_RC_PARAMS
version	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                    version;                        \/**< [in]: Struct version. Must be set to ::NV_ENC_REGISTER_RESOURCE_VER. *\/$/;"	m	struct:_NV_ENC_REGISTER_RESOURCE
version	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                   version;                   \/**< [in]:  Struct version. Must be set to ::NV_ENC_MAP_INPUT_RESOURCE_VER. *\/$/;"	m	struct:_NV_ENC_MAP_INPUT_RESOURCE
version	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                  version;                   \/**< [in]:  Struct version. Must be set to ::NV_ENC_LOCK_INPUT_BUFFER_VER. *\/$/;"	m	struct:_NV_ENC_LOCK_INPUT_BUFFER
version	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                  version;                 \/**< [in]: Struct version. Must be set to ::NV_ENC_CREATE_INPUT_BUFFER_VER *\/$/;"	m	struct:_NV_ENC_CREATE_INPUT_BUFFER
version	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                version;                     \/**< [in]: Struct version. Must be set to ::NV_ENC_LOCK_BITSTREAM_VER. *\/$/;"	m	struct:_NV_ENC_LOCK_BITSTREAM
version	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t              version;                     \/**< [in]: Struct version. Must be set to ::NV_ENC_CREATE_BITSTREAM_BUFFER_VER *\/$/;"	m	struct:_NV_ENC_CREATE_BITSTREAM_BUFFER
version	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t            version;                          \/**< [in]: Struct version. Must be set to ::NV_ENC_EVENT_PARAMS_VER. *\/$/;"	m	struct:_NV_ENC_EVENT_PARAMS
version	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t            version;                          \/**< [in]: Struct version. Must be set to ::NV_ENC_OPEN_ENCODE_SESSION_EX_PARAMS_VER. *\/$/;"	m	struct:_NV_ENC_OPEN_ENCODE_SESSIONEX_PARAMS
version	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t            version;                         \/**< [in]:  Struct version. Must be set to ::NV_ENC_INITIALIZE_PARAMS_VER. *\/$/;"	m	struct:_NV_ENC_SEQUENCE_PARAM_PAYLOAD
version	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t            version;                         \/**< [in]:  Struct version. Must be set to ::NV_ENC_STAT_VER. *\/$/;"	m	struct:_NV_ENC_STAT
version	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t      version;                               \/**< [in]:  Struct version. Must be set to ::NV_ENC_PRESET_CONFIG_VER. *\/$/;"	m	struct:_NV_ENC_PRESET_CONFIG
version	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t version;                                  \/**< [in]: Struct version. Must be set to ::NV_ENC_CAPS_PARAM_VER *\/$/;"	m	struct:_NV_ENC_CAPS_PARAM
version	QSVHelper/Encoder.h	/^    mfxVersion version;$/;"	m	struct:Encoder
version	QSVHelper/IPCStructs.h	/^    mfxVersion version;$/;"	m	struct:init_response
version	QSVHelper/QSVHelper.cpp	/^        mfxVersion version;$/;"	m	struct:<anonymous>::impl_parameters	file:
version	Source/Encoder_QSV.cpp	/^        mfxVersion version;$/;"	m	struct:<anonymous>::impl_parameters	file:
version	lame/ACM/tinyxml/tinyxml.h	/^	std::string version;$/;"	m	class:TiXmlDeclaration
version	lame/doc/html/detailed.html	/^<a name="version"><span class="hilight">--version<\/span><\/a> Prints the license page$/;"	a
version	lame/libmp3lame/util.h	/^        int     version;     \/* 0=MPEG-2\/2.5  1=MPEG-1               *\/$/;"	m
version	libfaac/include/faaccfg.h	/^    int version;$/;"	m	struct:faacEncConfiguration
version	libmfx/include/mfx_library_iterator.h	/^    mfxVersion version;$/;"	m	struct:mfx_libs
version.c	lame/libmp3lame/version.c	1;"	F
version.h	lame/libmp3lame/version.h	1;"	F
version.h	libfaac/version.h	1;"	F
vertexBuffer	Source/D3D10System.h	/^    ID3D10Buffer *vertexBuffer;$/;"	m	class:D3D10VertexBuffer
vertexShader	DShowPlugin/DeviceSource.h	/^        std::unique_ptr<Shader>     vertexShader;$/;"	m	struct:DeviceSource::<anonymous>
vertexShader	Source/D3D10System.h	/^    ID3D10VertexShader *vertexShader;$/;"	m	class:D3D10VertexShader
vertexSize	Source/D3D10System.h	/^    UINT vertexSize;$/;"	m	class:D3D10VertexBuffer
video	librtmp/rtmp.c	/^SAVC(video);$/;"	v
videoChunks	Source/MP4FileStream.cpp	/^    List<UINT64> videoChunks, audioChunks;$/;"	m	class:MP4FileStream	file:
videoCodecs	Source/RTMPStuff.h	/^SAVC(videoCodecs);$/;"	v
videoCodecs	librtmp/rtmp.c	/^SAVC(videoCodecs);$/;"	v
videoDecodeTimes	Source/MP4FileStream.cpp	/^    List<OffsetVal> videoDecodeTimes, audioDecodeTimes;$/;"	m	class:MP4FileStream	file:
videoEncoder	Source/OBS.h	/^    VideoEncoder            *videoEncoder;$/;"	m	class:OBS
videoFormat	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t    videoFormat;                          \/**< [in]: Specifies the source video format(as defined in Annex E of the ITU-T Specification).*\/$/;"	m	struct:_NV_ENC_CONFIG_H264_VUI_PARAMETERS
videoFrames	Source/MP4FileStream.cpp	/^    List<MP4VideoFrameInfo> videoFrames;$/;"	m	class:MP4FileStream	file:
videoFullRangeFlag	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t    videoFullRangeFlag;                   \/**< [in]: Specifies the output range of the luma and chroma samples(as defined in Annex E of the ITU-T Specification). *\/$/;"	m	struct:_NV_ENC_CONFIG_H264_VUI_PARAMETERS
videoFunction	Source/RTMPStuff.h	/^SAVC(videoFunction);$/;"	v
videoFunction	librtmp/rtmp.c	/^SAVC(videoFunction);$/;"	v
videoHeaders	Source/FLVFileStream.cpp	/^    decltype(GetBufferedVideoHeadersPacket()) videoHeaders = GetBufferedVideoHeadersPacket();$/;"	m	class:FLVFileStream	file:
videoHeaders	Source/MP4FileStream.cpp	/^    decltype(GetBufferedVideoHeadersPacket()) videoHeaders = GetBufferedVideoHeadersPacket();$/;"	m	class:MP4FileStream	file:
videoHeaders	Source/RTMPPublisher.h	/^    DataPacket audioHeaders, videoHeaders;$/;"	m	class:RTMPPublisher
videoInput	DShowPlugin/IVideoCaptureFilter.h	/^    VIDEO_CAPTURE_FILTER_VIDEO_INPUT     videoInput;                        \/\/!< Video input (e.g. HDMI)$/;"	m	struct:_VIDEO_CAPTURE_FILTER_SETTINGS
videoSampleToChunk	Source/MP4FileStream.cpp	/^    List<SampleToChunk> videoSampleToChunk, audioSampleToChunk;$/;"	m	class:MP4FileStream	file:
videoSignalTypePresentFlag	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t    videoSignalTypePresentFlag;           \/**< [in]: If set to 1, it specifies  that the videoFormat, videoFullRangeFlag and colourDescriptionPresentFlag are present. *\/$/;"	m	struct:_NV_ENC_CONFIG_H264_VUI_PARAMETERS
videoType	DShowPlugin/MediaInfoStuff.h	/^    VideoOutputType videoType;$/;"	m	struct:MediaOutputInfo
video_packet_written_event	Source/ReplayBuffer.cpp	/^    unique_ptr<void, EventDeleter> video_packet_written_event;$/;"	m	struct:RecordingHelper	file:
videocodecid	Source/RTMPStuff.h	/^SAVC(videocodecid);$/;"	v
videodatarate	Source/RTMPStuff.h	/^SAVC(videodatarate);$/;"	v
virgin	Source/libnsgif.h	/^      BOOL virgin;                \/**< whether the frame has previously been used *\/$/;"	m	struct:gif_frame
vmVariable	lame/dshow/Encoder.h	/^    vbr_mode    vmVariable;$/;"	m
volControlHeight	Source/OBS.cpp	/^const int volControlHeight = 32;$/;"	v
volMeterHeight	Source/OBS.cpp	/^const int volMeterHeight = 10;$/;"	v
vpp	libmfx/include/msdk/include/mfxstructures.h	/^        mfxInfoVPP  vpp;$/;"	m
vsi	QSVHelper/QSVStuff.h	/^    mfxExtVideoSignalInfo vsi;$/;"	m	struct:Parameters
vsnprintf	Source/mongoose.c	125;"	d	file:
vsnprintf	librtmp/rtmp_sys.h	48;"	d
vtscprintf	OBSApi/Utility/XString.cpp	/^int vtscprintf(const TCHAR *format, va_list args)$/;"	f
vtsprintf_s	OBSApi/Utility/XString.cpp	/^int vtsprintf_s(TCHAR *pDest, size_t bufLen, const TCHAR *format, va_list args)$/;"	f
vui	x264/x264.h	/^    } vui;$/;"	m	struct:x264_param_t
w	OBSApi/Utility/XMath.h	/^            float w;$/;"	m	struct:AxisAngle::<anonymous>::<anonymous>
w	OBSApi/Utility/XMath.h	/^            float w;$/;"	m	struct:Quat::<anonymous>::<anonymous>
w	OBSApi/Utility/XMath.h	/^            float w;$/;"	m	struct:Vect4::<anonymous>::<anonymous>
w	OBSApi/Utility/XMath.h	/^            float w;$/;"	m	struct:Vect::<anonymous>::<anonymous>
w	lame/frontend/get_audio.c	/^    int     w;               \/* sample width *\/$/;"	m	struct:PcmBuffer	file:
wBitrate	lame/Dll/BladeMP3EncDLL.h	/^			WORD	wBitrate;		\/\/ 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256 and 320 allowed$/;"	m
wBitrate	lame/Dll/BladeMP3EncDLL.h	/^			WORD	wBitrate;$/;"	m
wLinePattern	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    WORD    wLinePattern;$/;"	m	struct:_D3DLINEPATTERN
wRepeatFactor	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    WORD    wRepeatFactor;$/;"	m	struct:_D3DLINEPATTERN
wVal	OBSApi/AudioSource.cpp	/^        WORD wVal;$/;"	m	struct:TripleToLong::<anonymous>	file:
wYear	lame/Dll/BladeMP3EncDLL.h	/^	WORD	wYear;$/;"	m
w_ptr	lame/libmp3lame/util.h	/^        int     w_ptr;$/;"	m
w_quantize	libfaac/ltp.c	/^static void w_quantize(double *freq, int *ltp_idx)$/;"	f	file:
wait	QSVHelper/WindowsStuff.h	/^    bool wait(DWORD timeout=0) { if(!list.size()) return false; auto res = wait_for_multiple_objects(timeout); return WAIT_OBJECT_0 <= res && res < (WAIT_OBJECT_0+list.size()); }$/;"	f	struct:IPCWaiter
wait_for	QSVHelper/WindowsStuff.h	/^    bool wait_for(DWORD object, DWORD timeout=0) { if(!list.size()) return false; return wait_for_multiple_objects(timeout) == (WAIT_OBJECT_0 + object); }$/;"	f	struct:IPCWaiter
wait_for	lame/frontend/parse.c	/^wait_for(FILE * const fp, int lessmode)$/;"	f	file:
wait_for_multiple_objects	QSVHelper/WindowsStuff.h	/^    DWORD wait_for_multiple_objects(DWORD timeout) { return WaitForMultipleObjects(static_cast<DWORD>(list.size()), &list.front(), false, timeout); }$/;"	f	struct:IPCWaiter
wait_for_two	QSVHelper/WindowsStuff.h	/^    bool wait_for_two(DWORD first, DWORD second, DWORD timeout=0) { if(!list.size()) return false; auto res = wait_for_multiple_objects(timeout); return res == (WAIT_OBJECT_0 + first) || res == (WAIT_OBJECT_0 + second); }$/;"	f	struct:IPCWaiter
wait_timeout	QSVHelper/WindowsStuff.h	/^    bool wait_timeout(DWORD timeout=0) { if(!list.size()) return false; return wait_for_multiple_objects(timeout) == WAIT_TIMEOUT; }$/;"	f	struct:IPCWaiter
wait_until_ready	Source/mongoose.c	/^static int wait_until_ready(sock_t sock, int for_read) {$/;"	f	file:
want	lame/libmp3lame/util.h	/^        int     want;        \/* how many frames we want to collect into one chunk *\/$/;"	m
warningID	GraphicsCapture/GraphicsCaptureSource.h	/^    UINT warningID;$/;"	m	class:GraphicsCaptureSource
warningID	Source/DesktopImageSource.cpp	/^    UINT     warningID;$/;"	m	class:DesktopImageSource	file:
wchar_to_utf8	OBSApi/Utility/utf8-windows.cpp	/^size_t wchar_to_utf8(const wchar_t *in, size_t insize, char *out, size_t outsize, int flags)$/;"	f
wchar_to_utf8	OBSApi/Utility/utf8.cpp	/^wchar_to_utf8(const wchar_t *in, size_t insize, char *out, size_t outsize,$/;"	f
wchar_to_utf8_len	OBSApi/Utility/utf8-windows.cpp	/^size_t wchar_to_utf8_len(const wchar_t *in, size_t insize, int flags)$/;"	f
wchar_to_utf8_len	OBSApi/Utility/utf8.cpp	/^size_t wchar_to_utf8_len(const wchar_t *in, size_t insize, int flags)$/;"	f
wcstoimax	extras/inttypes.h	281;"	d
wcstoimax	lame/inttypes.h	281;"	d
wcstoumax	extras/inttypes.h	282;"	d
wcstoumax	lame/inttypes.h	282;"	d
weight	libfaac/coder.h	/^    double weight;$/;"	m
weight_idx	libfaac/coder.h	/^    int weight_idx;$/;"	m
wglDXCloseDeviceNV	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^WGLDXCLOSEDEVICENVPROC          wglDXCloseDeviceNV            = NULL;$/;"	v
wglDXLockObjectsNV	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^WGLDXLOCKOBJECTSNVPROC          wglDXLockObjectsNV            = NULL;$/;"	v
wglDXObjectAccessNV	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^WGLDXOBJECTACCESSNVPROC         wglDXObjectAccessNV           = NULL;$/;"	v
wglDXOpenDeviceNV	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^WGLDXOPENDEVICENVPROC           wglDXOpenDeviceNV             = NULL;$/;"	v
wglDXRegisterObjectNV	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^WGLDXREGISTEROBJECTNVPROC       wglDXRegisterObjectNV         = NULL;$/;"	v
wglDXSetResourceShareHandleNV	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^WGLSETRESOURCESHAREHANDLENVPROC wglDXSetResourceShareHandleNV = NULL;$/;"	v
wglDXUnlockObjectsNV	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^WGLDXUNLOCKOBJECTSNVPROC        wglDXUnlockObjectsNV          = NULL;$/;"	v
wglDXUnregisterObjectNV	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^WGLDXUNREGISTEROBJECTNVPROC     wglDXUnregisterObjectNV       = NULL;$/;"	v
wglDeleteContextHook	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^static BOOL WINAPI wglDeleteContextHook(HGLRC hRC)$/;"	f	file:
wglSwapBuffersHook	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^static BOOL WINAPI wglSwapBuffersHook(HDC hDC)$/;"	f	file:
wglSwapLayerBuffersHook	GraphicsCapture/GraphicsCaptureHook/OpenGLCapture.cpp	/^static BOOL WINAPI wglSwapLayerBuffersHook(HDC hDC, UINT fuPlanes)$/;"	f	file:
width	DShowPlugin/DeviceSource.h	/^    UINT   width, height;$/;"	m	struct:ConvertData
width	OBSApi/GraphicsSystem.h	/^    int width, height;$/;"	m	struct:TextureInfo
width	ObsNvenc/inc/NVENCEncoder.h	/^    int width;$/;"	m	class:NVENCEncoder
width	ObsNvenc/inc/NVENCEncoder.h	/^    int width;$/;"	m	struct:NVENCEncoderSurface
width	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                    width;                          \/**< [in]: Input buffer Width. *\/$/;"	m	struct:_NV_ENC_REGISTER_RESOURCE
width	ObsNvenc/inc/nvEncodeAPI.h	/^    uint32_t                  width;                   \/**< [in]: Input buffer width *\/$/;"	m	struct:_NV_ENC_CREATE_INPUT_BUFFER
width	QSVHelper/IPCStructs.h	/^    int32_t fps, keyint, bframes, width, height, max_bitrate, buffer_size;$/;"	m	struct:init_request
width	Source/D3D10System.h	/^    UINT width, height;$/;"	m	class:D3D10Texture
width	Source/DesktopImageSource.cpp	/^    int      width, height;$/;"	m	class:DesktopImageSource	file:
width	Source/Encoder_QSV.cpp	/^    UINT width, height;$/;"	m	class:QSVEncoder	file:
width	Source/Encoder_x264.cpp	/^    UINT width, height;$/;"	m	class:X264Encoder	file:
width	Source/MP4FileStream.cpp	/^    UINT width = 0, height = 0;$/;"	m	class:MP4FileStream	file:
width	Source/OBSVideoCapture.cpp	/^    int width, height, inPitch, outPitch, startY, endY;$/;"	m	struct:Convert444Data	file:
width	Source/RTMPStuff.h	/^SAVC(width);$/;"	v
width	Source/libnsgif.h	/^    unsigned int width;                \/**< width of GIF (may increase during decoding) *\/$/;"	m	struct:gif_animation
width	lame/libmp3lame/l3side.h	/^    int     width[SFBMAX];$/;"	m
win	lame/libmp3lame/newmdct.c	/^static const FLOAT win[4][NL] = {$/;"	v	file:
win	lame/mpglib/layer3.c	/^static real win[4][36];$/;"	v	file:
win1	lame/mpglib/layer3.c	/^static real win1[4][36];$/;"	v	file:
winapifamily.h	extras/winapifamily.h	1;"	F
winbox	lame/frontend/gtkanal.c	/^GtkWidget *winbox;           \/* mpg123 synthesis data plotted here *\/$/;"	v
window	lame/frontend/gtkanal.c	/^GtkWidget *window;$/;"	v
window	lame/libmp3lame/fft.c	/^static FLOAT window[BLKSIZE], window_s[BLKSIZE_s \/ 2];$/;"	v	file:
window	lame/libmp3lame/l3side.h	/^    int     window[SFBMAX];$/;"	m
window	libfaac/bitstream.c	/^    unsigned short window; \/* which window belongs to this codeword *\/$/;"	m	file:
windowData	GraphicsCapture/GraphicsCapture.cpp	/^    List<WindowInfo> windowData;$/;"	m	struct:ConfigDialogData	file:
windowData	libfaac/coder.h	/^    TnsWindowData windowData[MAX_SHORT_WINDOWS]; \/* TNS data per window *\/$/;"	m
window_group_length	libfaac/coder.h	/^    int window_group_length[8];$/;"	m
window_s	lame/libmp3lame/fft.c	/^static FLOAT window[BLKSIZE], window_s[BLKSIZE_s \/ 2];$/;"	v	file:
window_shape	libfaac/coder.h	/^    int window_shape;$/;"	m
window_subband	lame/libmp3lame/newmdct.c	/^window_subband(const sample_t * x1, FLOAT a[SBLIMIT])$/;"	f	file:
windows	scenesw/SceneSwitcher.h	/^	StringList windows;$/;"	m	class:SceneSwitcher
with_locked	QSVHelper/WindowsStuff.h	/^void with_locked(T &t, F &f) { IPCMutexLock<T> lock(t); f(); }$/;"	f
wmExplorerRestarted	Source/OBS.h	/^    UINT wmExplorerRestarted;$/;"	m	class:OBS
wmain	lame/frontend/main.c	/^int wmain(int argc, wchar_t* argv[])$/;"	f
wordpointer	lame/mpglib/mpglib.h	/^    unsigned char *wordpointer;$/;"	m	struct:mpstr_tag
write	QSVHelper/IntelSupport/include/d3d11_allocator.h	/^        write   = 4,$/;"	e	enum:MFXReadWriteMid::<anonymous>
write	Source/mongoose.c	1340;"	d	file:
writeChars	lame/libmp3lame/id3tag.c	/^writeChars(unsigned char *frame, char const *str, size_t n)$/;"	f	file:
writeLoBytes	lame/libmp3lame/id3tag.c	/^writeLoBytes(unsigned char *frame, unsigned short const *str, size_t n)$/;"	f	file:
writeMainData	lame/libmp3lame/bitstream.c	/^writeMainData(lame_internal_flags * const gfc)$/;"	f	file:
writeUcs2s	lame/libmp3lame/id3tag.c	/^writeUcs2s(unsigned char *frame, unsigned short const *str, size_t n)$/;"	f	file:
write_16_bits_low_high	lame/frontend/get_audio.c	/^write_16_bits_low_high(FILE * fp, int val)$/;"	f	file:
write_32_bits_low_high	lame/frontend/get_audio.c	/^write_32_bits_low_high(FILE * fp, int val)$/;"	f	file:
write_chunk	Source/mongoose.c	/^static void write_chunk(struct connection *conn, const char *buf, int len) {$/;"	f	file:
write_id3tag_automatic	lame/libmp3lame/lame_global_flags.h	/^    int     write_id3tag_automatic; \/* 1 (default) writes ID3 tags, 0 not *\/$/;"	m	struct:lame_global_struct
write_id3v1_tag	lame/frontend/lame_main.c	/^write_id3v1_tag(lame_t gf, FILE * outf)$/;"	f	file:
write_lame_tag	lame/libmp3lame/lame_global_flags.h	/^    int     write_lame_tag;  \/* add Xing VBR tag?                           *\/$/;"	m	struct:lame_global_struct
write_lame_tag	lame/libmp3lame/util.h	/^        int     write_lame_tag; \/* add Xing VBR tag?                           *\/$/;"	m
write_terminating_chunk	Source/mongoose.c	/^static void write_terminating_chunk(struct connection *conn) {$/;"	f	file:
write_timing	lame/libmp3lame/util.h	/^            int     write_timing;$/;"	m
write_xing_frame	lame/frontend/lame_main.c	/^write_xing_frame(lame_global_flags * gf, FILE * outf, size_t offset)$/;"	f	file:
writeheader	lame/libmp3lame/bitstream.c	/^writeheader(lame_internal_flags * gfc, int val, int j)$/;"	f	file:
wsbits	Source/mongoose.h	/^  int wsbits;                 \/\/ First byte of the websocket frame$/;"	m	struct:mg_connection
x	CLRHostPlugin/CLRHostInterop/Vector2.h	/^        float x;$/;"	m	class:CLROBS::Vector2
x	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    float x;$/;"	m	struct:_D3DVECTOR
x	OBSApi/Utility/XMath.h	/^            float x;$/;"	m	struct:AxisAngle::<anonymous>::<anonymous>
x	OBSApi/Utility/XMath.h	/^            float x;$/;"	m	struct:Euler::<anonymous>::<anonymous>
x	OBSApi/Utility/XMath.h	/^            float x;$/;"	m	struct:Quat::<anonymous>::<anonymous>
x	OBSApi/Utility/XMath.h	/^            float x;$/;"	m	struct:Vect2::<anonymous>::<anonymous>
x	OBSApi/Utility/XMath.h	/^            float x;$/;"	m	struct:Vect4::<anonymous>::<anonymous>
x	OBSApi/Utility/XMath.h	/^            float x;$/;"	m	struct:Vect::<anonymous>::<anonymous>
x	OBSApi/Utility/XMath.h	/^    float x, y, z;$/;"	m	struct:CompactVect
x	OBSApi/Utility/XT.h	/^    int x;$/;"	m	struct:XRect
x	QSVHelper/IntelSupport/src/d3d11_allocator.cpp	/^    T x;$/;"	m	struct:sequence	file:
x	QSVHelper/IntelSupport/src/d3d11_allocator.cpp	/^    mfxHDL x;$/;"	m	struct:sequence	file:
x	lame/doc/html/detailed.html	/^<a name="x"><span class="hilight">-x<\/span><\/a> Swap input bytes$/;"	a
x	lame/frontend/rtp.c	/^    int     x:1;             \/* number of extension headers: 0 *\/$/;"	m	struct:rtpbits	file:
x	lame/misc/abx.c	/^    long double         x;$/;"	m	file:
x	lame/misc/mlame_corr.c	/^    long double         x;$/;"	m	file:
x	libmfx/include/msdk/include/mfxdefs.h	/^    mfxI16  x;$/;"	m
x1	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    LONG x1;$/;"	m	struct:_D3DRECT
x2	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    LONG x2;$/;"	m	struct:_D3DRECT
x2	lame/misc/abx.c	/^    long double         x2;$/;"	m	file:
x2	lame/misc/mlame_corr.c	/^    long double         x2;$/;"	m	file:
x264	Source/Encoder_x264.cpp	/^    x264_t *x264;$/;"	m	class:X264Encoder	file:
x264.h	x264/x264.h	1;"	F
x264_b_pyramid_names	x264/x264.h	/^static const char * const x264_b_pyramid_names[] = { "none", "strict", "normal", 0 };$/;"	v
x264_colmatrix_names	x264/x264.h	/^static const char * const x264_colmatrix_names[] = { "GBR", "bt709", "undef", "", "fcc", "bt470bg", "smpte170m", "smpte240m", "YCgCo", "bt2020nc", "bt2020c", 0 };$/;"	v
x264_colorprim_names	x264/x264.h	/^static const char * const x264_colorprim_names[] = { "", "bt709", "undef", "", "bt470m", "bt470bg", "smpte170m", "smpte240m", "film", "bt2020", 0 };$/;"	v
x264_config.h	x264/x264_config.h	1;"	F
x264_direct_pred_names	x264/x264.h	/^static const char * const x264_direct_pred_names[] = { "none", "spatial", "temporal", "auto", 0 };$/;"	v
x264_encoder_glue1	x264/x264.h	856;"	d
x264_encoder_glue2	x264/x264.h	857;"	d
x264_encoder_open	x264/x264.h	858;"	d
x264_fullrange_names	x264/x264.h	/^static const char * const x264_fullrange_names[] = { "off", "on", 0 };$/;"	v
x264_hrd_t	x264/x264.h	/^} x264_hrd_t;$/;"	t
x264_image_properties_t	x264/x264.h	/^} x264_image_properties_t;$/;"	t
x264_image_t	x264/x264.h	/^} x264_image_t;$/;"	t
x264_level_t	x264/x264.h	/^} x264_level_t;$/;"	t
x264_motion_est_names	x264/x264.h	/^static const char * const x264_motion_est_names[] = { "dia", "hex", "umh", "esa", "tesa", 0 };$/;"	v
x264_nal_hrd_names	x264/x264.h	/^static const char * const x264_nal_hrd_names[] = { "none", "vbr", "cbr", 0 };$/;"	v
x264_nal_t	x264/x264.h	/^} x264_nal_t;$/;"	t
x264_overscan_names	x264/x264.h	/^static const char * const x264_overscan_names[] = { "undef", "show", "crop", 0 };$/;"	v
x264_param_t	x264/x264.h	/^typedef struct x264_param_t$/;"	s
x264_param_t	x264/x264.h	/^} x264_param_t;$/;"	t
x264_picture_t	x264/x264.h	/^} x264_picture_t;$/;"	t
x264_preset_names	x264/x264.h	/^static const char * const x264_preset_names[] = { "ultrafast", "superfast", "veryfast", "faster", "fast", "medium", "slow", "slower", "veryslow", "placebo", 0 };$/;"	v
x264_profile_names	x264/x264.h	/^static const char * const x264_profile_names[] = { "baseline", "main", "high", "high10", "high422", "high444", 0 };$/;"	v
x264_sei_payload_t	x264/x264.h	/^} x264_sei_payload_t;$/;"	t
x264_sei_t	x264/x264.h	/^} x264_sei_t;$/;"	t
x264_t	x264/x264.h	/^typedef struct x264_t x264_t;$/;"	t
x264_transfer_names	x264/x264.h	/^static const char * const x264_transfer_names[] = { "", "bt709", "undef", "", "bt470m", "bt470bg", "smpte170m", "smpte240m", "linear", "log100", "log316",$/;"	v
x264_tune_names	x264/x264.h	/^static const char * const x264_tune_names[] = { "film", "animation", "grain", "stillimage", "psnr", "ssim", "fastdecode", "zerolatency", 0 };$/;"	v
x264_vidformat_names	x264/x264.h	/^static const char * const x264_vidformat_names[] = { "component", "pal", "ntsc", "secam", "mac", "undef", 0 };$/;"	v
x264_zone_t	x264/x264.h	/^} x264_zone_t;$/;"	t
x66	lame/libmp3lame/i386/nasm.h	/^%define popf  db 0x66, 0x9D$/;"	v
x66	lame/libmp3lame/i386/nasm.h	/^%define pushf db 0x66, 0x9C$/;"	v
xElementType	CLRHostPlugin/CLRHostPlugin/CLRHost.h	/^    mscorlib::_Type *xElementType;$/;"	m	class:CLRHost
xGranularity	DShowPlugin/MediaInfoStuff.h	/^    UINT xGranularity, yGranularity;$/;"	m	struct:MediaOutputInfo
xHotspot	GraphicsCapture/GraphicsCaptureSource.h	/^    int xHotspot, yHotspot;$/;"	m	class:GraphicsCaptureSource
xHotspot	Source/DesktopImageSource.cpp	/^    int      xHotspot, yHotspot;$/;"	m	class:DesktopImageSource	file:
xfsf	lame/libmp3lame/lame-analysis.h	/^    double  xfsf[2][2][SBMAX_l];$/;"	m	struct:plotting_data
xfsf_s	lame/libmp3lame/lame-analysis.h	/^    double  xfsf_s[2][2][3 * SBMAX_s];$/;"	m	struct:plotting_data
xinputButton	OBSApi/HotkeyControlEx.cpp	/^    DWORD xinputNum, xinputButton;$/;"	m	struct:HotkeyControlExData	file:
xinputNum	OBSApi/HotkeyControlEx.cpp	/^    DWORD xinputNum, xinputButton;$/;"	m	struct:HotkeyControlExData	file:
xlen	lame/libmp3lame/tables.h	/^    const unsigned int xlen;          \/* max. x-index+   *\/$/;"	m	struct:huffcodetab
xmltest.cpp	lame/ACM/tinyxml/xmltest.cpp	1;"	F
xmm7	lame/libmp3lame/i386/nasm.h	/^%define xm7 xmm7$/;"	v
xmm_quantize_sub.c	lame/libmp3lame/vector/xmm_quantize_sub.c	1;"	F
xmm_sources	lame/libmp3lame/vector/Makefile	/^xmm_sources = xmm_quantize_sub.c$/;"	m
xr	lame/libmp3lame/l3side.h	/^    FLOAT   xr[576];$/;"	m
xr	lame/libmp3lame/lame-analysis.h	/^    double  xr[2][2][576];$/;"	m	struct:plotting_data
xr34orig	lame/libmp3lame/vbrquantize.c	/^    const FLOAT *xr34orig;$/;"	m	struct:algo_s	file:
xrpow_max	lame/libmp3lame/l3side.h	/^    FLOAT   xrpow_max;$/;"	m
xy	lame/misc/abx.c	/^    long double         xy;$/;"	m	file:
xy	lame/misc/mlame_corr.c	/^    long double         xy;$/;"	m	file:
y	CLRHostPlugin/CLRHostInterop/Vector2.h	/^        float y;$/;"	m	class:CLROBS::Vector2
y	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    float y;$/;"	m	struct:_D3DVECTOR
y	OBSApi/Utility/XMath.h	/^            float y;$/;"	m	struct:AxisAngle::<anonymous>::<anonymous>
y	OBSApi/Utility/XMath.h	/^            float y;$/;"	m	struct:Euler::<anonymous>::<anonymous>
y	OBSApi/Utility/XMath.h	/^            float y;$/;"	m	struct:Quat::<anonymous>::<anonymous>
y	OBSApi/Utility/XMath.h	/^            float y;$/;"	m	struct:Vect2::<anonymous>::<anonymous>
y	OBSApi/Utility/XMath.h	/^            float y;$/;"	m	struct:Vect4::<anonymous>::<anonymous>
y	OBSApi/Utility/XMath.h	/^            float y;$/;"	m	struct:Vect::<anonymous>::<anonymous>
y	OBSApi/Utility/XMath.h	/^    float x, y, z;$/;"	m	struct:CompactVect
y	OBSApi/Utility/XT.h	/^    int y;$/;"	m	struct:XRect
y	lame/misc/abx.c	/^    long double         y;$/;"	m	file:
y	lame/misc/mlame_corr.c	/^    long double         y;$/;"	m	file:
y	libmfx/include/msdk/include/mfxdefs.h	/^    mfxI16  y;$/;"	m
y1	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    LONG y1;$/;"	m	struct:_D3DRECT
y2	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    LONG y2;$/;"	m	struct:_D3DRECT
y2	lame/misc/abx.c	/^    long double         y2;$/;"	m	file:
y2	lame/misc/mlame_corr.c	/^    long double         y2;$/;"	m	file:
yGranularity	DShowPlugin/MediaInfoStuff.h	/^    UINT xGranularity, yGranularity;$/;"	m	struct:MediaOutputInfo
yHotspot	GraphicsCapture/GraphicsCaptureSource.h	/^    int xHotspot, yHotspot;$/;"	m	class:GraphicsCaptureSource
yHotspot	Source/DesktopImageSource.cpp	/^    int      xHotspot, yHotspot;$/;"	m	class:DesktopImageSource	file:
yaw	OBSApi/Utility/XMath.h	/^            float yaw;$/;"	m	struct:Euler::<anonymous>::<anonymous>
year	lame/libmp3lame/id3tag.h	/^    int     year;$/;"	m	struct:id3tag_spec
yuv709Mat	DShowPlugin/DeviceSource.cpp	/^const float yuv709Mat[16] = {0.182586f,  0.614231f,  0.062007f, 0.062745f,$/;"	v
yuvFullMat	Source/OBSVideoCapture.cpp	/^const float yuvFullMat[][16] = {$/;"	v
yuvMat	DShowPlugin/DeviceSource.cpp	/^const float yuvMat[16] = {0.256788f,  0.504129f,  0.097906f, 0.062745f,$/;"	v
yuvMat	Source/OBSVideoCapture.cpp	/^const float yuvMat[][16] = {$/;"	v
yuvRenderTextures	Source/OBS.h	/^    Texture         *yuvRenderTextures[NUM_RENDER_BUFFERS];$/;"	m	class:OBS
yuvScalePixelShader	Source/OBS.h	/^    Shader  *mainVertexShader, *mainPixelShader, *yuvScalePixelShader, *transitionPixelShader;$/;"	m	class:OBS
yuvToRGB601	DShowPlugin/DeviceSource.cpp	/^const float yuvToRGB601[2][16] =$/;"	v
yuvToRGB709	DShowPlugin/DeviceSource.cpp	/^const float yuvToRGB709[2][16] = {$/;"	v
z	GraphicsCapture/GraphicsCaptureHook/d3d8types.h	/^    float z;$/;"	m	struct:_D3DVECTOR
z	OBSApi/Utility/XMath.h	/^            float z;$/;"	m	struct:AxisAngle::<anonymous>::<anonymous>
z	OBSApi/Utility/XMath.h	/^            float z;$/;"	m	struct:Euler::<anonymous>::<anonymous>
z	OBSApi/Utility/XMath.h	/^            float z;$/;"	m	struct:Quat::<anonymous>::<anonymous>
z	OBSApi/Utility/XMath.h	/^            float z;$/;"	m	struct:Vect4::<anonymous>::<anonymous>
z	OBSApi/Utility/XMath.h	/^            float z;$/;"	m	struct:Vect::<anonymous>::<anonymous>
z	OBSApi/Utility/XMath.h	/^    float x, y, z;$/;"	m	struct:CompactVect
zHomepage	lame/Dll/BladeMP3EncDLL.h	/^	CHAR	zHomepage[BE_MAX_HOMEPAGE + 1];	$/;"	m
zero	OBSApi/Utility/Inline.h	/^inline void STDCALL zero(void *pDest, size_t iLen)$/;"	f
zero	QSVHelper/Utilities.h	/^static inline void zero(T& t, size_t size=sizeof(T))$/;"	f
zero_data_block	Source/libnsgif.h	/^    BOOL zero_data_block;$/;"	m	struct:gif_animation
zlib	librtmp/hashswf.c	/^    int zlib;$/;"	m	struct:info	file:
zoh_get_description	libsamplerate/src_zoh.c	/^zoh_get_description (int src_enum)$/;"	f
zoh_get_name	libsamplerate/src_zoh.c	/^zoh_get_name (int src_enum)$/;"	f
zoh_magic_marker	libsamplerate/src_zoh.c	/^{	int		zoh_magic_marker ;$/;"	m	file:
zoh_reset	libsamplerate/src_zoh.c	/^zoh_reset (SRC_PRIVATE *psrc)$/;"	f	file:
zoh_set_converter	libsamplerate/src_zoh.c	/^zoh_set_converter (SRC_PRIVATE *psrc, int src_enum)$/;"	f
zoh_vari_process	libsamplerate/src_zoh.c	/^zoh_vari_process (SRC_PRIVATE *psrc, SRC_DATA *data)$/;"	f	file:
zones	x264/x264.h	/^        x264_zone_t *zones;         \/* ratecontrol overrides *\/$/;"	m	struct:x264_param_t::<anonymous>
zs	librtmp/hashswf.c	/^    z_stream *zs;$/;"	m	struct:info	file:
~AACEncoder	Source/Encoder_AAC.cpp	/^    ~AACEncoder()$/;"	f	class:AACEncoder
~ACM	lame/ACM/ACM.cpp	/^ACM::~ACM()$/;"	f	class:ACM
~ACMStream	lame/ACM/ACMStream.cpp	/^ACMStream::~ACMStream()$/;"	f	class:ACMStream
~ADbg	lame/ACM/ADbg/ADbg.cpp	/^ADbg::~ADbg()$/;"	f	class:ADbg
~ADbg	lame/ACM/ADbg/ADbg.h	/^	virtual ~ADbg() {}$/;"	f	class:ADbg
~AEncodeProperties	lame/ACM/AEncodeProperties.h	/^	virtual ~AEncodeProperties() {}$/;"	f	class:AEncodeProperties
~APIInterface	OBSApi/APIInterface.h	/^    virtual ~APIInterface() {}$/;"	f	class:APIInterface
~AbstractPlugin	CLRHostPlugin/CLRHostInterop/AbstractPlugin.cpp	/^AbstractPlugin::~AbstractPlugin()$/;"	f	class:AbstractPlugin
~Alloc	OBSApi/Utility/Alloc.h	/^    virtual ~Alloc()  {}$/;"	f	class:Alloc
~AudioDeviceList	Source/OBS.h	/^    inline ~AudioDeviceList()$/;"	f	struct:AudioDeviceList
~AudioEncoder	Source/OBS.h	/^    virtual ~AudioEncoder() {}$/;"	f	class:AudioEncoder
~AudioFilter	OBSApi/AudioFilter.h	/^    virtual ~AudioFilter() {}$/;"	f	class:AudioFilter
~AudioSource	OBSApi/AudioSource.cpp	/^AudioSource::~AudioSource()$/;"	f	class:AudioSource
~BandwidthAnalyzer	Source/BandwidthAnalysis.cpp	/^    ~BandwidthAnalyzer()$/;"	f	class:BandwidthAnalyzer
~BaseFrameAllocator	QSVHelper/IntelSupport/src/base_allocator.cpp	/^BaseFrameAllocator::~BaseFrameAllocator()$/;"	f	class:BaseFrameAllocator
~BaseTexture	OBSApi/GraphicsSystem.h	/^    virtual ~BaseTexture() {}$/;"	f	class:BaseTexture
~BitmapImage	Source/BitmapImage.cpp	/^BitmapImage::~BitmapImage()$/;"	f	class:BitmapImage
~BitmapImageSource	Source/BitmapImageSource.cpp	/^    ~BitmapImageSource()$/;"	f	class:BitmapImageSource
~BitmapTransitionSource	Source/BitmapTransitionSource.cpp	/^    ~BitmapTransitionSource()$/;"	f	class:BitmapTransitionSource
~BlankAudioPlayback	Source/BlankAudioPlayback.cpp	/^    ~BlankAudioPlayback()$/;"	f	struct:BlankAudioPlayback
~BrowserSource	CLRBrowserSourcePlugin/Plugin/BrowserSource.cs	/^        ~BrowserSource()$/;"	m	class:CLRBrowserSourcePlugin.BrowserSource	file:
~CD3D11Device	QSVHelper/IntelSupport/src/d3d11_device.cpp	/^CD3D11Device::~CD3D11Device()$/;"	f	class:CD3D11Device
~CEncoder	lame/dshow/Encoder.cpp	/^CEncoder::~CEncoder()$/;"	f	class:CEncoder
~CHWDevice	QSVHelper/IntelSupport/include/hw_device.h	/^    virtual ~CHWDevice(){}$/;"	f	class:CHWDevice
~CLRHost	CLRHostPlugin/CLRHostPlugin/CLRHost.cpp	/^CLRHost::~CLRHost()$/;"	f	class:CLRHost
~CLRHostApi	CLRHostPlugin/CLRHostPlugin/CLRHostApi.cpp	/^CLRHostApi::~CLRHostApi()$/;"	f	class:CLRHostApi
~CLRHostPlugin	CLRHostPlugin/CLRHostPlugin/CLRHostPlugin.cpp	/^CLRHostPlugin::~CLRHostPlugin() {$/;"	f	class:CLRHostPlugin
~CLRObject	CLRHostPlugin/CLRHostPlugin/CLRObject.cpp	/^CLRObject::~CLRObject() {$/;"	f	class:CLRObject
~CMpegAudEnc	lame/dshow/Mpegac.cpp	/^CMpegAudEnc::~CMpegAudEnc(void)$/;"	f	class:CMpegAudEnc
~CMpegAudEncOutPin	lame/dshow/Mpegac.cpp	/^CMpegAudEncOutPin::~CMpegAudEncOutPin()$/;"	f	class:CMpegAudEncOutPin
~CRegEnumKey	lame/dshow/REG.H	/^	~CRegEnumKey()$/;"	f	class:Lame::CRegEnumKey
~CRegKey	lame/dshow/REG.CPP	/^CRegKey::~CRegKey(void)$/;"	f	class:Lame::CRegKey
~CaptureEnumMediaTypes	DShowPlugin/CaptureFilter.cpp	/^CaptureEnumMediaTypes::~CaptureEnumMediaTypes()$/;"	f	class:CaptureEnumMediaTypes
~CaptureEnumPins	DShowPlugin/CaptureFilter.cpp	/^CaptureEnumPins::~CaptureEnumPins()$/;"	f	class:CaptureEnumPins
~CaptureFilter	DShowPlugin/CaptureFilter.cpp	/^CaptureFilter::~CaptureFilter()$/;"	f	class:CaptureFilter
~CapturePin	DShowPlugin/CaptureFilter.cpp	/^CapturePin::~CapturePin()$/;"	f	class:CapturePin
~ClipboardHelper	Source/WindowStuff.cpp	/^        ~ClipboardHelper() { CloseClipboard(); }$/;"	f	struct:<anonymous>::ClipboardHelper
~ClosableStream	Source/OBS.h	/^    virtual ~ClosableStream() {}$/;"	f	struct:ClosableStream
~ColorSelectionData	DShowPlugin/DShowPlugin.cpp	/^    inline ~ColorSelectionData() {Clear();}$/;"	f	struct:ColorSelectionData
~ColorSelectionData	Source/BitmapImageSource.cpp	/^    inline ~ColorSelectionData() {Clear();}$/;"	f	struct:ColorSelectionData
~ColorSelectionData	Source/DesktopImageSource.cpp	/^    inline ~ColorSelectionData() {Clear();}$/;"	f	struct:ColorSelectionData
~ComPtr	OBSApi/Utility/ComPtr.hpp	/^	inline ~ComPtr()                             {Kill();}$/;"	f	class:ComPtr
~ComPtr	QSVHelper/ComPtr.hpp	/^	inline ~ComPtr()                             {Kill();}$/;"	f	class:ComPtr
~ConfigDialogData	DShowPlugin/DShowPlugin.cpp	/^    ~ConfigDialogData()$/;"	f	struct:ConfigDialogData
~ConfigDialogData	GraphicsCapture/GraphicsCapture.cpp	/^    inline ~ConfigDialogData()$/;"	f	struct:ConfigDialogData
~ConfigFile	OBSApi/Utility/ConfigFile.h	/^    ~ConfigFile() {Close();}$/;"	f	class:ConfigFile
~CriticalSection	minhook/src/thread.cpp	/^	CriticalSection::~CriticalSection()$/;"	f	class:MinHook::CriticalSection
~D3D10OutputDuplicator	Source/D3D10OutputDuplicator.cpp	/^D3D10OutputDuplicator::~D3D10OutputDuplicator()$/;"	f	class:D3D10OutputDuplicator
~D3D10PixelShader	Source/D3D10Shader.cpp	/^D3D10PixelShader::~D3D10PixelShader()$/;"	f	class:D3D10PixelShader
~D3D10SamplerState	Source/D3D10Texture.cpp	/^D3D10SamplerState::~D3D10SamplerState()$/;"	f	class:D3D10SamplerState
~D3D10Shader	Source/D3D10Shader.cpp	/^D3D10Shader::~D3D10Shader()$/;"	f	class:D3D10Shader
~D3D10System	Source/D3D10System.cpp	/^D3D10System::~D3D10System()$/;"	f	class:D3D10System
~D3D10Texture	Source/D3D10Texture.cpp	/^D3D10Texture::~D3D10Texture()$/;"	f	class:D3D10Texture
~D3D10VertexBuffer	Source/D3D10VertexBuffer.cpp	/^D3D10VertexBuffer::~D3D10VertexBuffer()$/;"	f	class:D3D10VertexBuffer
~D3D10VertexShader	Source/D3D10Shader.cpp	/^D3D10VertexShader::~D3D10VertexShader()$/;"	f	class:D3D10VertexShader
~D3D11FrameAllocator	QSVHelper/IntelSupport/src/d3d11_allocator.cpp	/^D3D11FrameAllocator::~D3D11FrameAllocator()$/;"	f	class:D3D11FrameAllocator
~D3D9Device	libmfx/src/mfx_dxva2_device.cpp	/^D3D9Device::~D3D9Device(void)$/;"	f	class:D3D9Device
~DXDevice	libmfx/src/mfx_dxva2_device.cpp	/^DXDevice::~DXDevice(void)$/;"	f	class:DXDevice
~DXGI1Device	libmfx/src/mfx_dxva2_device.cpp	/^DXGI1Device::~DXGI1Device(void)$/;"	f	class:DXGI1Device
~DXVA2Device	libmfx/src/mfx_dxva2_device.cpp	/^DXVA2Device::~DXVA2Device(void)$/;"	f	class:DXVA2Device
~DebugAlloc	OBSApi/Utility/DebugAlloc.cpp	/^DebugAlloc::~DebugAlloc()$/;"	f	class:DebugAlloc
~DecodeStream	lame/ACM/DecodeStream.cpp	/^DecodeStream::~DecodeStream()$/;"	f	class:DecodeStream
~DelayedPublisher	Source/DelayedPublisher.cpp	/^    ~DelayedPublisher()$/;"	f	class:DelayedPublisher
~DesktopImageSource	Source/DesktopImageSource.cpp	/^    ~DesktopImageSource()$/;"	f	class:DesktopImageSource
~DeviceAudioSource	DShowPlugin/DeviceAudio.cpp	/^DeviceAudioSource::~DeviceAudioSource()$/;"	f	class:DeviceAudioSource
~DeviceOutputs	Source/OBS.h	/^    inline ~DeviceOutputs()$/;"	f	struct:DeviceOutputs
~DeviceSource	DShowPlugin/DeviceSource.cpp	/^DeviceSource::~DeviceSource()$/;"	f	class:DeviceSource
~DispatchLogBlockHelper	libmfx/src/mfx_dispatcher_log.cpp	/^DispatchLogBlockHelper::~DispatchLogBlockHelper()$/;"	f	class:DispatchLogBlockHelper
~ETWHandler	libmfx/src/mfx_dispatcher_log.cpp	/^    ~ETWHandler()$/;"	f	class:ETWHandler
~ETWHandlerFactory	libmfx/src/mfx_dispatcher_log.cpp	/^ETWHandlerFactory::~ETWHandlerFactory()$/;"	f	class:ETWHandlerFactory
~FLVFileStream	Source/FLVFileStream.cpp	/^    ~FLVFileStream()$/;"	f	class:FLVFileStream
~FastAlloc	OBSApi/Utility/FastAlloc.cpp	/^FastAlloc::~FastAlloc()$/;"	f	class:FastAlloc
~FileSink	libmfx/include/mfx_dispatcher_log.h	/^    ~FileSink()$/;"	f	class:FileSink
~GraphicsCaptureMethod	GraphicsCapture/GraphicsCapture.h	/^    virtual ~GraphicsCaptureMethod() {}$/;"	f	class:GraphicsCaptureMethod
~GraphicsCaptureSource	GraphicsCapture/GraphicsCaptureSource.cpp	/^GraphicsCaptureSource::~GraphicsCaptureSource()$/;"	f	class:GraphicsCaptureSource
~GraphicsSystem	CLRHostPlugin/CLRHostInterop/GraphicsSystem.cpp	/^CLROBS::GraphicsSystem::~GraphicsSystem()$/;"	f	class:CLROBS::GraphicsSystem
~GraphicsSystem	OBSApi/GraphicsSystem.cpp	/^GraphicsSystem::~GraphicsSystem()$/;"	f	class:GraphicsSystem
~IMsgHandler	libmfx/include/mfx_dispatcher_log.h	/^    virtual ~IMsgHandler(){}$/;"	f	class:IMsgHandler
~IPCMutexLock	QSVHelper/WindowsStuff.h	/^    ~IPCMutexLock() { if(enabled) t.unlock(); }$/;"	f	struct:IPCMutexLock
~ImageSource	OBSApi/Scene.h	/^    virtual ~ImageSource() {}$/;"	f	class:ImageSource
~ImageSourceBridge	CLRHostPlugin/CLRHostPlugin/ImageSourceBridge.h	/^    ~ImageSourceBridge()$/;"	f	class:ImageSourceBridge
~List	OBSApi/Utility/Template.h	/^    inline ~List()$/;"	f	class:List
~LocaleStringCache	OBSApi/Utility/XTLocalization.h	/^    inline ~LocaleStringCache()$/;"	f	struct:LocaleStringCache
~LocaleStringLookup	OBSApi/Utility/XTLocalization.cpp	/^LocaleStringLookup::~LocaleStringLookup()$/;"	f	class:LocaleStringLookup
~MFXAudioDECODE	libmfx/include/msdk/include/mfxaudio++.h	/^    virtual ~MFXAudioDECODE(void) { Close(); }$/;"	f	class:MFXAudioDECODE
~MFXAudioENCODE	libmfx/include/msdk/include/mfxaudio++.h	/^    virtual ~MFXAudioENCODE(void) { Close(); }$/;"	f	class:MFXAudioENCODE
~MFXAudioSession	libmfx/include/msdk/include/mfxaudio++.h	/^    virtual ~MFXAudioSession(void) { Close(); }$/;"	f	class:MFXAudioSession
~MFXAutomaticCriticalSection	libmfx/include/mfx_critical_section.h	/^    ~MFXAutomaticCriticalSection()$/;"	f	class:MFX::MFXAutomaticCriticalSection
~MFXBufferAllocator	QSVHelper/IntelSupport/src/base_allocator.cpp	/^MFXBufferAllocator::~MFXBufferAllocator()$/;"	f	class:MFXBufferAllocator
~MFXFrameAllocator	QSVHelper/IntelSupport/src/base_allocator.cpp	/^MFXFrameAllocator::~MFXFrameAllocator()$/;"	f	class:MFXFrameAllocator
~MFXLibraryIterator	libmfx/src/mfx_library_iterator.cpp	/^MFXLibraryIterator::~MFXLibraryIterator(void)$/;"	f	class:MFX::MFXLibraryIterator
~MFXPlugin	libmfx/include/msdk/include/mfxplugin++.h	/^    virtual ~MFXPlugin() {};$/;"	f	struct:MFXPlugin
~MFXPluginFactory	libmfx/src/mfx_load_plugin.cpp	/^MFX::MFXPluginFactory::~MFXPluginFactory() $/;"	f	class:MFX::MFXPluginFactory
~MFXVector	libmfx/include/mfx_vector.h	/^        virtual ~MFXVector ()$/;"	f	class:MFX::MFXVector
~MFXVideoDECODE	libmfx/include/msdk/include/mfxvideo++.h	/^    virtual ~MFXVideoDECODE(void) { Close(); }$/;"	f	class:MFXVideoDECODE
~MFXVideoENCODE	libmfx/include/msdk/include/mfxvideo++.h	/^    virtual ~MFXVideoENCODE(void) { Close(); }$/;"	f	class:MFXVideoENCODE
~MFXVideoSession	libmfx/include/msdk/include/mfxvideo++.h	/^    virtual ~MFXVideoSession(void) { Close(); }$/;"	f	class:MFXVideoSession
~MFXVideoUSER	libmfx/include/msdk/include/mfxplugin++.h	/^    virtual ~MFXVideoUSER() {};$/;"	f	class:MFXVideoUSER
~MFXVideoVPP	libmfx/include/msdk/include/mfxvideo++.h	/^    virtual ~MFXVideoVPP(void) { Close(); }$/;"	f	class:MFXVideoVPP
~MFX_DISP_HANDLE	libmfx/src/mfx_dispatcher.cpp	/^MFX_DISP_HANDLE::~MFX_DISP_HANDLE(void)$/;"	f	class:MFX_DISP_HANDLE
~MMDeviceAudioSource	Source/MMDeviceAudioSource.cpp	/^    ~MMDeviceAudioSource()$/;"	f	class:MMDeviceAudioSource
~MP3Encoder	Source/Encoder_MP3.cpp	/^    ~MP3Encoder()$/;"	f	class:MP3Encoder
~MP4FileStream	Source/MP4FileStream.cpp	/^    ~MP4FileStream()$/;"	f	class:MP4FileStream
~NVENCEncoder	ObsNvenc/src/NVENCEncoder.cpp	/^NVENCEncoder::~NVENCEncoder()$/;"	f	class:NVENCEncoder
~NamedSharedMemory	QSVHelper/WindowsStuff.h	/^    ~NamedSharedMemory() { FreeMemory(); }$/;"	f	struct:NamedSharedMemory
~NetworkStream	Source/OBS.h	/^    virtual ~NetworkStream() {}$/;"	f	class:NetworkStream
~NoiseGate	NoiseGate/NoiseGate.cpp	/^NoiseGate::~NoiseGate()$/;"	f	class:NoiseGate
~NoiseGateFilter	NoiseGate/NoiseGate.cpp	/^NoiseGateFilter::~NoiseGateFilter()$/;"	f	class:NoiseGateFilter
~NoiseGateSettings	NoiseGate/NoiseGate.cpp	/^NoiseGateSettings::~NoiseGateSettings()$/;"	f	class:NoiseGateSettings
~OBS	Source/OBS.cpp	/^OBS::~OBS()$/;"	f	class:OBS
~OSDirectoryMonitorData	OBSApi/Utility/XT_Windows.cpp	/^    ~OSDirectoryMonitorData()$/;"	f	struct:OSDirectoryMonitorData
~OSMutexLocker	ObsNvenc/inc/nvmain.h	/^    ~OSMutexLocker() { if (enabled) OSLeaveMutex(h); }$/;"	f	struct:OSMutexLocker
~OutputDuplicator	OBSApi/GraphicsSystem.h	/^    virtual ~OutputDuplicator() {}$/;"	f	class:OutputDuplicator
~Palette	GraphicsCapture/GraphicsCaptureHook/DDrawCapture.cpp	/^    ~Palette()$/;"	f	class:Palette
~PluginModule	libmfx/src/mfx_load_plugin.cpp	/^MFX::PluginModule::~PluginModule(void) $/;"	f	class:MFX::PluginModule
~ProfileNodeInfo	OBSApi/Utility/Profiler.cpp	/^    ~ProfileNodeInfo()$/;"	f	struct:ProfileNodeInfo
~ProfilerNode	OBSApi/Utility/Profiler.cpp	/^ProfilerNode::~ProfilerNode()$/;"	f	class:ProfilerNode
~QSVEncoder	Source/Encoder_QSV.cpp	/^    ~QSVEncoder()$/;"	f	class:QSVEncoder
~RTMPPublisher	Source/RTMPPublisher.cpp	/^RTMPPublisher::~RTMPPublisher()$/;"	f	class:RTMPPublisher
~RecordingHelper	Source/ReplayBuffer.cpp	/^    ~RecordingHelper()$/;"	f	struct:RecordingHelper
~ReplayBuffer	Source/ReplayBuffer.cpp	/^    ~ReplayBuffer()$/;"	f	struct:ReplayBuffer
~RollbackIfNotCommitted	minhook/src/hook.cpp	/^		~RollbackIfNotCommitted()$/;"	f	struct:MinHook::RollbackIfNotCommitted
~SampleData	DShowPlugin/DeviceSource.h	/^    inline ~SampleData() {Free(lpData);} \/\/sample->Release();}$/;"	f	struct:SampleData
~SamplerState	OBSApi/GraphicsSystem.h	/^    virtual ~SamplerState() {}$/;"	f	class:SamplerState
~Scene	OBSApi/Scene.cpp	/^Scene::~Scene()$/;"	f	class:Scene
~SceneItem	OBSApi/Scene.cpp	/^SceneItem::~SceneItem()$/;"	f	class:SceneItem
~SceneSwitcher	scenesw/SceneSwitcher.cpp	/^SceneSwitcher::~SceneSwitcher()$/;"	f	class:SceneSwitcher
~SceneSwitcherSettings	scenesw/SceneSwitcherSettings.cpp	/^SceneSwitcherSettings::~SceneSwitcherSettings()$/;"	f	class:SceneSwitcherSettings
~ScopeGuard	OBSApi/Utility/RAIIHelpers.h	/^    ~ScopeGuard() { if (active) fun(); }$/;"	f	struct:ScopeGuard
~ScopedHandle	minhook/src/thread.cpp	/^		~ScopedHandle()$/;"	f	class:MinHook::<anonymous>::ScopedHandle
~ScopedLock	OBSApi/Utility/RAIIHelpers.h	/^    ~ScopedLock() { if (locked && unlock) OSLeaveMutex(h); }$/;"	f	struct:ScopedLock
~ScopedLock	minhook/src/thread.cpp	/^	CriticalSection::ScopedLock::~ScopedLock()$/;"	f	class:MinHook::CriticalSection::ScopedLock
~ScopedThreadExclusive	minhook/src/thread.cpp	/^	ScopedThreadExclusive::~ScopedThreadExclusive()$/;"	f	class:MinHook::ScopedThreadExclusive
~Serializer	OBSApi/Utility/Serializer.h	/^    virtual ~Serializer()               {}$/;"	f	class:Serializer
~SettingsAdvanced	Source/SettingsAdvanced.cpp	/^SettingsAdvanced::~SettingsAdvanced()$/;"	f	class:SettingsAdvanced
~SettingsAudio	Source/SettingsAudio.cpp	/^SettingsAudio::~SettingsAudio()$/;"	f	class:SettingsAudio
~SettingsEncoding	Source/SettingsEncoding.cpp	/^SettingsEncoding::~SettingsEncoding()$/;"	f	class:SettingsEncoding
~SettingsGeneral	Source/SettingsGeneral.cpp	/^SettingsGeneral::~SettingsGeneral()$/;"	f	class:SettingsGeneral
~SettingsHotkeys	Source/SettingsHotkeys.cpp	/^SettingsHotkeys::~SettingsHotkeys()$/;"	f	class:SettingsHotkeys
~SettingsPane	OBSApi/SettingsPane.cpp	/^SettingsPane::~SettingsPane()$/;"	f	class:SettingsPane
~SettingsPaneBridge	CLRHostPlugin/CLRHostPlugin/SettingsPaneBridge.h	/^    ~SettingsPaneBridge()$/;"	f	class:SettingsPaneBridge
~SettingsPublish	Source/SettingsPublish.cpp	/^SettingsPublish::~SettingsPublish()$/;"	f	class:SettingsPublish
~SettingsQSV	Source/SettingsQSV.cpp	/^SettingsQSV::~SettingsQSV()$/;"	f	class:SettingsQSV
~SettingsVideo	Source/SettingsVideo.cpp	/^SettingsVideo::~SettingsVideo()$/;"	f	class:SettingsVideo
~Shader	OBSApi/GraphicsSystem.h	/^    virtual ~Shader() {}$/;"	f	class:Shader
~ShaderParam	Source/D3D10System.h	/^    inline ~ShaderParam() {FreeData();}$/;"	f	struct:ShaderParam
~ShaderProcessor	Source/D3D10System.h	/^    inline ~ShaderProcessor() {FreeData();}$/;"	f	struct:ShaderProcessor
~ShaderSampler	Source/D3D10System.h	/^    inline ~ShaderSampler() {FreeData();}$/;"	f	struct:ShaderSampler
~String	OBSApi/Utility/XString.cpp	/^String::~String()$/;"	f	class:String
~StringList	OBSApi/Utility/XString.h	/^    inline ~StringList()$/;"	f	class:StringList
~StringLookupNode	OBSApi/Utility/XTLocalization.cpp	/^    inline ~StringLookupNode()$/;"	f	struct:StringLookupNode
~TextOutputSource	Source/TextOutputSource.cpp	/^    ~TextOutputSource()$/;"	f	class:TextOutputSource
~Texture	CLRHostPlugin/CLRHostInterop/GraphicsSystem.cpp	/^CLROBS::Texture::~Texture()$/;"	f	class:CLROBS::Texture
~TiXmlAttributeSet	lame/ACM/tinyxml/tinyxml.cpp	/^TiXmlAttributeSet::~TiXmlAttributeSet()$/;"	f	class:TiXmlAttributeSet
~TiXmlBase	lame/ACM/tinyxml/tinyxml.h	/^	virtual ~TiXmlBase()					{}$/;"	f	class:TiXmlBase
~TiXmlComment	lame/ACM/tinyxml/tinyxml.h	/^	virtual ~TiXmlComment()	{}$/;"	f	class:TiXmlComment
~TiXmlDeclaration	lame/ACM/tinyxml/tinyxml.h	/^	virtual ~TiXmlDeclaration()	{}$/;"	f	class:TiXmlDeclaration
~TiXmlDocument	lame/ACM/tinyxml/tinyxml.h	/^	virtual ~TiXmlDocument() {}$/;"	f	class:TiXmlDocument
~TiXmlElement	lame/ACM/tinyxml/tinyxml.cpp	/^TiXmlElement::~TiXmlElement()$/;"	f	class:TiXmlElement
~TiXmlNode	lame/ACM/tinyxml/tinyxml.cpp	/^TiXmlNode::~TiXmlNode()$/;"	f	class:TiXmlNode
~TiXmlText	lame/ACM/tinyxml/tinyxml.h	/^	virtual ~TiXmlText() {}$/;"	f	class:TiXmlText
~TiXmlUnknown	lame/ACM/tinyxml/tinyxml.h	/^	virtual ~TiXmlUnknown() {}$/;"	f	class:TiXmlUnknown
~VBData	OBSApi/GraphicsSystem.h	/^    inline ~VBData() {Clear();}$/;"	f	struct:VBData
~VectorHandleGuard	libmfx/src/main.cpp	/^    ~VectorHandleGuard()$/;"	f	struct:VectorHandleGuard
~VertexBuffer	OBSApi/GraphicsSystem.h	/^    virtual ~VertexBuffer() {}$/;"	f	class:VertexBuffer
~VideoEncoder	Source/OBS.h	/^    virtual ~VideoEncoder() {}$/;"	f	class:VideoEncoder
~VideoFileStream	Source/OBS.h	/^    virtual ~VideoFileStream() {}$/;"	f	class:VideoFileStream
~VideoSegment	Source/OBS.h	/^    inline ~VideoSegment() {Clear();}$/;"	f	struct:VideoSegment
~WinRegKey	libmfx/src/mfx_win_reg_key.cpp	/^WinRegKey::~WinRegKey(void)$/;"	f	class:MFX::WinRegKey
~X264Encoder	Source/Encoder_x264.cpp	/^    ~X264Encoder()$/;"	f	class:X264Encoder
~XBaseItem	OBSApi/Utility/XConfig.h	/^    virtual ~XBaseItem() {}$/;"	f	class:XBaseItem
~XConfig	OBSApi/Utility/XConfig.h	/^    inline ~XConfig() {Close();}$/;"	f	class:XConfig
~XElement	OBSApi/Utility/XConfig.cpp	/^XElement::~XElement()$/;"	f	class:XElement
~XFile	OBSApi/Utility/XFile.h	/^    ~XFile() {Close();}$/;"	f	class:XFile
~XFileInputSerializer	OBSApi/Utility/XFile.h	/^    ~XFileInputSerializer() {Close();}$/;"	f	class:XFileInputSerializer
~mfxAllocatorParams	QSVHelper/IntelSupport/include/base_allocator.h	/^    virtual ~mfxAllocatorParams(){};$/;"	f	struct:mfxAllocatorParams
~safe_array	QSVHelper/IntelSupport/include/base_allocator.h	/^        ~safe_array()$/;"	f	class:BaseFrameAllocator::safe_array
~safe_handle	QSVHelper/WindowsStuff.h	/^    ~safe_handle() { if(h) CloseHandle(h); }$/;"	f	struct:safe_handle
~sdk_library	libmfx/src/mfx_dispatcher_trace.cpp	/^    ~sdk_library()$/;"	f	class:sdk_library
